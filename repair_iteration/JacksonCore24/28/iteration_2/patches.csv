bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_BIGINT  ||  _numTypesValid  ==  NR_BIGINT)  {  if(_numTypesValid  ==  NR_BIGINT  ||  _numTypesValid  ==  NR_BIGINT)  {  [CE]  ';'  expected  [FE]    JsonParseException    [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_numTypesValid  ==  NR_BIGINT  ||  _numTypesValid  ==  NR_BIGINT)  {  if(_numTypesValid  ==  NR_BIGINT  ||  _numTypesValid  ==  NR_BIGINT)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_numTypesValid    ==    NR_BIGINT    ||    _numTypesValid    ==    NR_BIGINT)    {    if(_numTypesValid  ==  NR_BIGINT  ||  _numTypesValid  ==  NR_BIGINT)  {	  	non-compiled	[CE]  ';'  expected	13	None	add
2	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_BIGINT  ||  _numTypesValid  ==  NR_BIGINT)  {  if(_numTypesValid  ==  NR_BIGINT  ||  _numTypesValid!=  NR_BIGINT)  {  [CE]  ';'  expected  [FE]      JsonParseException    [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_numTypesValid  ==  NR_BIGINT  ||  _numTypesValid  ==  NR_BIGINT)  {  if(_numTypesValid  ==  NR_BIGINT  ||  _numTypesValid!=  NR_BIGINT)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_numTypesValid    ==    NR_BIGINT    ||    _numTypesValid    ==    NR_BIGINT)    {    if(_numTypesValid  ==  NR_BIGINT  ||  _numTypesValid!=  NR_BIGINT)  {	  	non-compiled	[CE]  ';'  expected	13	None	add
3	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_BIGINT  ||  _numTypesValid  ==  NR_BIGINT)  {  if(_numTypesValid!=  NR_BIGINT  ||  _numTypesValid  ==  NR_BIGINT)  {  [CE]  ';'  expected  [FE]        JsonParseException    [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_numTypesValid  ==  NR_BIGINT  ||  _numTypesValid  ==  NR_BIGINT)  {  if(_numTypesValid!=  NR_BIGINT  ||  _numTypesValid  ==  NR_BIGINT)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_numTypesValid    ==    NR_BIGINT    ||    _numTypesValid    ==    NR_BIGINT)    {    if(_numTypesValid!=  NR_BIGINT  ||  _numTypesValid  ==  NR_BIGINT)  {	  	non-compiled	[CE]  ';'  expected	13	None	add
4	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_BIGINT  ||  _numTypesValid  ==  NR_BIGINT)  {  if(_numTypesValid  ==  NR_BIGINT  ||  _numTypesValid  >=  NR_BIGINT)  {  [CE]  ';'  expected  [FE]          JsonParseException    [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_numTypesValid  ==  NR_BIGINT  ||  _numTypesValid  ==  NR_BIGINT)  {  if(_numTypesValid  ==  NR_BIGINT  ||  _numTypesValid  >=  NR_BIGINT)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_numTypesValid    ==    NR_BIGINT    ||    _numTypesValid    ==    NR_BIGINT)    {    if(_numTypesValid  ==  NR_BIGINT  ||  _numTypesValid  >=  NR_BIGINT)  {	  	non-compiled	[CE]  ';'  expected	13	None	add
5	[BUG]  [BUGGY]  if(_numTypesValid!=  NR_BIGINT  ||  _numTypesValid  ==  NR_BIGINT)  {  if(_numTypesValid!=  NR_BIGINT  ||  _numTypesValid  ==  NR_BIGINT)  {  [CE]  ';'  expected  [FE]    JsonParseException    [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_numTypesValid!=  NR_BIGINT  ||  _numTypesValid  ==  NR_BIGINT)  {  if(_numTypesValid!=  NR_BIGINT  ||  _numTypesValid  ==  NR_BIGINT)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_numTypesValid!=    NR_BIGINT    ||    _numTypesValid    ==    NR_BIGINT)    {    if(_numTypesValid!=  NR_BIGINT  ||  _numTypesValid  ==  NR_BIGINT)  {	  	non-compiled	[CE]  ';'  expected	27	None	add
6	[BUG]  [BUGGY]  if(_numTypesValid!=  NR_BIGINT  ||  _numTypesValid  ==  NR_BIGINT)  {  if(_numTypesValid  ==  NR_BIGINT  ||  _numTypesValid  ==  NR_BIGINT)  {  [CE]  ';'  expected  [FE]      JsonParseException    [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_numTypesValid!=  NR_BIGINT  ||  _numTypesValid  ==  NR_BIGINT)  {  if(_numTypesValid  ==  NR_BIGINT  ||  _numTypesValid  ==  NR_BIGINT)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_numTypesValid!=    NR_BIGINT    ||    _numTypesValid    ==    NR_BIGINT)    {    if(_numTypesValid  ==  NR_BIGINT  ||  _numTypesValid  ==  NR_BIGINT)  {	  	non-compiled	[CE]  ';'  expected	27	None	add
7	[BUG]  [BUGGY]  if(_numTypesValid!=  NR_BIGINT  ||  _numTypesValid  ==  NR_BIGINT)  {  if(_numTypesValid  >=  NR_BIGINT  ||  _numTypesValid  ==  NR_BIGINT)  {  [CE]  ';'  expected  [FE]        JsonParseException    [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_numTypesValid!=  NR_BIGINT  ||  _numTypesValid  ==  NR_BIGINT)  {  if(_numTypesValid  >=  NR_BIGINT  ||  _numTypesValid  ==  NR_BIGINT)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_numTypesValid!=    NR_BIGINT    ||    _numTypesValid    ==    NR_BIGINT)    {    if(_numTypesValid  >=  NR_BIGINT  ||  _numTypesValid  ==  NR_BIGINT)  {	  	non-compiled	[CE]  ';'  expected	27	None	add
8	[BUG]  [BUGGY]  if(_numTypesValid!=  NR_BIGINT  ||  _numTypesValid  ==  NR_BIGINT)  {  if(_numTypesValid  >>  NR_BIGINT  ||  _numTypesValid  ==  NR_BIGINT)  {  [CE]  ';'  expected  [FE]          JsonParseException    [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_numTypesValid!=  NR_BIGINT  ||  _numTypesValid  ==  NR_BIGINT)  {  if(_numTypesValid  >>  NR_BIGINT  ||  _numTypesValid  ==  NR_BIGINT)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_numTypesValid!=    NR_BIGINT    ||    _numTypesValid    ==    NR_BIGINT)    {    if(_numTypesValid  >>  NR_BIGINT  ||  _numTypesValid  ==  NR_BIGINT)  {	  	non-compiled	[CE]  ';'  expected	27	None	add
9	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          JsonParseException      [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_numTypesValid  ==  NR_BIGDECIMAL)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	add	if(_numTypesValid  ==  NR_BIGDECIMAL)  {	  if(_numTypesValid    ==    NR_BIGINT)    {    if(_numTypesValid!=    NR_BIGINT)    {    	compilable	  [FE]  AssertionFailedError  	6	8	replace
10	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_BIGDECIMAL)  {  [FE]  AssertionFailedError  [FE]          JsonParseException      [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_numTypesValid  ==  NR_BIGDECIMAL)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_numTypesValid  ==  NR_BIGDECIMAL)  {	  if(_numTypesValid    ==    NR_BIGINT)    {    if(_numTypesValid!=    NR_BIGINT)    {    	compilable	  [FE]  AssertionFailedError  	6	8	replace
11	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            JsonParseException      [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	add	if(_numTypesValid  ==  NR_UNKNOWN)  {	  if(_numTypesValid    ==    NR_BIGINT)    {    if(_numTypesValid!=    NR_BIGINT)    {    	compilable	  [FE]  AssertionFailedError  	6	8	replace
12	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN)  {  [FE]  AssertionFailedError  [FE]            JsonParseException      [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_numTypesValid  ==  NR_UNKNOWN)  {	  if(_numTypesValid    ==    NR_BIGINT)    {    if(_numTypesValid!=    NR_BIGINT)    {    	compilable	  [FE]  AssertionFailedError  	6	8	replace
13	[BUG]  [BUGGY]  if((  _numTypesValid  &  NR_BUFFER)  ==  0)  {  [CE]  cannot  find  symbol  NR_BUFFER  [FE]        AssertionFailedError      [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if((  _numTypesValid  &  NR_BUFFER)  ==  0)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if((  _numTypesValid  &  NR_BUFFER)  ==  0)  {	  if((    _numTypesValid    &    NR_BUFFER)!=    0)    {    	non-compiled	[CE]  cannot  find  symbol  NR_BUFFER	45	None	replace
14	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_numTypesValid  ==  NR_BIGDECIMAL  ||  _numTypesValid  ==  NR_BIGINT)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	add	if(_numTypesValid  ==  NR_BIGDECIMAL  ||  _numTypesValid  ==  NR_BIGINT)  {	  if(_numTypesValid    ==    NR_BIGINT    ||    _numTypesValid    ==    NR_BIGINT)    {    	compilable	  [FE]  JsonParseException  	14	8	replace
15	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_BIGDECIMAL  ||  _numTypesValid  ==  NR_BIGINT)  {  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_numTypesValid  ==  NR_BIGDECIMAL  ||  _numTypesValid  ==  NR_BIGINT)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_numTypesValid  ==  NR_BIGDECIMAL  ||  _numTypesValid  ==  NR_BIGINT)  {	  if(_numTypesValid    ==    NR_BIGINT    ||    _numTypesValid    ==    NR_BIGINT)    {    	compilable	  [FE]  JsonParseException  	14	8	replace
16	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_BUFFER  ||  _numTypesValid  ==  NR_BIGINT)  {  [CE]  cannot  find  symbol  NR_BUFFER  [FE]      JsonParseException    [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_numTypesValid  ==  NR_BUFFER  ||  _numTypesValid  ==  NR_BIGINT)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_numTypesValid  ==  NR_BUFFER  ||  _numTypesValid  ==  NR_BIGINT)  {	  if(_numTypesValid    ==    NR_BIGINT    ||    _numTypesValid    ==    NR_BIGINT)    {    	non-compiled	[CE]  cannot  find  symbol  NR_BUFFER	14	None	replace
17	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL)  {  if(_currToken  ==  JsonToken.VALUE_NULL)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL)  {  if(_currToken  ==  JsonToken.VALUE_NULL)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_currToken    ==    JsonToken.VALUE_NULL)    {    if(_currToken  ==  JsonToken.VALUE_NULL)  {	  	non-compiled	[CE]  ';'  expected	19	None	add
18	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL)  {  if(_currToken!=  JsonToken.VALUE_NULL)  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL)  {  if(_currToken!=  JsonToken.VALUE_NULL)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_currToken    ==    JsonToken.VALUE_NULL)    {    if(_currToken!=  JsonToken.VALUE_NULL)  {	  	non-compiled	[CE]  ';'  expected	19	None	add
19	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL)  {  if(_currToken  >=  JsonToken.VALUE_NULL)  {  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL)  {  if(_currToken  >=  JsonToken.VALUE_NULL)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_currToken    ==    JsonToken.VALUE_NULL)    {    if(_currToken  >=  JsonToken.VALUE_NULL)  {	  	non-compiled	[CE]  ';'  expected	19	None	add
20	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL)  {  If(_currToken  ==  JsonToken.VALUE_NULL)  {  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL)  {  If(_currToken  ==  JsonToken.VALUE_NULL)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_currToken    ==    JsonToken.VALUE_NULL)    {    If(_currToken  ==  JsonToken.VALUE_NULL)  {	  	non-compiled	[CE]  ';'  expected	19	None	add
21	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]          AssertionFailedError      [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_numTypesValid  >=  NR_BIGINT)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	add	if(_numTypesValid  >=  NR_BIGINT)  {	  if(_numTypesValid!=    NR_BIGINT)    {    if(_numTypesValid    >=    NR_BIGINT)    {    	compilable	  [FE]  JsonParseException  	2	8	replace
22	[BUG]  [BUGGY]  if(_numTypesValid  >=  NR_BIGINT)  {  [FE]  JsonParseException  [FE]          AssertionFailedError      [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_numTypesValid  >=  NR_BIGINT)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_numTypesValid  >=  NR_BIGINT)  {	  if(_numTypesValid!=    NR_BIGINT)    {    if(_numTypesValid    >=    NR_BIGINT)    {    	compilable	  [FE]  JsonParseException  	2	8	replace
23	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]                    JsonParseException      [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  return  _numberBigInt;  }  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	add	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  return  _numberBigInt;  }	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if((    _numTypesValid    &    NR_BIGINT)!=    0)    {    return    _numberBinary;    }    	compilable	  [FE]  JsonParseException  	62	8	replace
24	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  return  _numberBigInt;  }  [FE]  JsonParseException  [FE]                    JsonParseException      [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  return  _numberBigInt;  }  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  return  _numberBigInt;  }	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if((    _numTypesValid    &    NR_BIGINT)!=    0)    {    return    _numberBinary;    }    	compilable	  [FE]  JsonParseException  	62	8	replace
25	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                      JsonParseException      [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  return  _numberBigDecimal;  }  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	add	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  return  _numberBigDecimal;  }	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if((    _numTypesValid    &    NR_BIGINT)!=    0)    {    return    _numberBinary;    }    	compilable	  [FE]  AssertionFailedError  	62	8	replace
26	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  return  _numberBigDecimal;  }  [FE]  AssertionFailedError  [FE]                      JsonParseException      [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  return  _numberBigDecimal;  }  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  return  _numberBigDecimal;  }	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if((    _numTypesValid    &    NR_BIGINT)!=    0)    {    return    _numberBinary;    }    	compilable	  [FE]  AssertionFailedError  	62	8	replace
27	[BUG]  [BUGGY]  if(_numTypesValid  ==  JsonToken.VALUE_NUMBER_INT)  {  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  return  _numberInt;  }  [CE]  incomparable  types:  int  and  JsonToken  [FE]                        JsonParseException      [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_numTypesValid  ==  JsonToken.VALUE_NUMBER_INT)  {  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  return  _numberInt;  }  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_numTypesValid  ==  JsonToken.VALUE_NUMBER_INT)  {  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  return  _numberInt;  }	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if((    _numTypesValid    &    NR_BIGINT)!=    0)    {    return    _numberBinary;    }    	non-compiled	[CE]  incomparable  types:  int  and  JsonToken	62	None	replace
28	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	add	if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {	  if(_currToken!=    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    	compilable	  [FE]  AssertionFailedError  	24	8	replace
29	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {	  if(_currToken!=    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    	compilable	  [FE]  AssertionFailedError  	24	8	replace
30	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]      AssertionFailedError    [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_currToken!=  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	add	if(_currToken!=  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {	  if(_currToken!=    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    	compilable	  [FE]  JsonParseException  	24	8	replace
31	[BUG]  [BUGGY]  if(_currToken!=  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [FE]  JsonParseException  [FE]      AssertionFailedError    [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_currToken!=  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_currToken!=  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {	  if(_currToken!=    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    	compilable	  [FE]  JsonParseException  	24	8	replace
32	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0  ||(_numTypesValid  &  NR_BIGDECIMAL)!=  0)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	add	if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0  ||(_numTypesValid  &  NR_BIGDECIMAL)!=  0)  {	  if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0)    {    if((    _numTypesValid    &    NR_BIGDECIMAL)    >>    0)    {    	compilable	  [FE]  AssertionFailedError  	36	8	replace
33	[BUG]  [BUGGY]  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0  ||(_numTypesValid  &  NR_BIGDECIMAL)!=  0)  {  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0  ||(_numTypesValid  &  NR_BIGDECIMAL)!=  0)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0  ||(_numTypesValid  &  NR_BIGDECIMAL)!=  0)  {	  if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0)    {    if((    _numTypesValid    &    NR_BIGDECIMAL)    >>    0)    {    	compilable	  [FE]  AssertionFailedError  	36	8	replace
34	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                  JsonParseException      [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  return  _numberLong;  }  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	add	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  return  _numberLong;  }	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if((    _numTypesValid    &    NR_BIGINT)!=    0)    {    return    _numberBoolean;    }    	compilable	  [FE]  AssertionFailedError  	54	8	replace
35	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  return  _numberLong;  }  [FE]  AssertionFailedError  [FE]                  JsonParseException      [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  return  _numberLong;  }  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  return  _numberLong;  }	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if((    _numTypesValid    &    NR_BIGINT)!=    0)    {    return    _numberBoolean;    }    	compilable	  [FE]  AssertionFailedError  	54	8	replace
36	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  return  _numberInt;  }  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  return  _numberInt;  }  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  return  _numberInt;  }  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  return  _numberInt;  }  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if((    _numTypesValid    &    NR_BIGINT)!=    0)    {    return    _numberInt;    }    if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  return  _numberInt;  }	  	non-compiled	[CE]  ';'  expected	57	None	add
37	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  return  _numberInt;  }  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  return  _numberInt;  }  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  return  _numberInt;  }  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  return  _numberInt;  }  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if((    _numTypesValid    &    NR_BIGINT)!=    0)    {    return    _numberInt;    }    if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  return  _numberInt;  }	  	non-compiled	[CE]  ';'  expected	57	None	add
38	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  return  _numberInt;  }  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if((  _numTypesValid  &  NR_BIGINT)  >=  0)  {  return  _numberInt;  }  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  return  _numberInt;  }  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if((  _numTypesValid  &  NR_BIGINT)  >=  0)  {  return  _numberInt;  }  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if((    _numTypesValid    &    NR_BIGINT)!=    0)    {    return    _numberInt;    }    if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if((  _numTypesValid  &  NR_BIGINT)  >=  0)  {  return  _numberInt;  }	  	non-compiled	[CE]  ';'  expected	57	None	add
39	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  return  _numberInt;  }  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if((  _numTypesValid  &  NR_BIGINT)  >>  0)  {  return  _numberInt;  }  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  return  _numberInt;  }  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if((  _numTypesValid  &  NR_BIGINT)  >>  0)  {  return  _numberInt;  }  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if((    _numTypesValid    &    NR_BIGINT)!=    0)    {    return    _numberInt;    }    if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if((  _numTypesValid  &  NR_BIGINT)  >>  0)  {  return  _numberInt;  }	  	non-compiled	[CE]  ';'  expected	57	None	add
40	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    JsonParseException    [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0  &&(_numTypesValid  &  NR_BIGINT)!=  0)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	add	if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0  &&(_numTypesValid  &  NR_BIGINT)!=  0)  {	  if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0    ||(_numTypesValid    &    NR_BIGINT)!=    0)    {    	compilable	  [FE]  AssertionFailedError  	44	8	replace
41	[BUG]  [BUGGY]  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0  &&(_numTypesValid  &  NR_BIGINT)!=  0)  {  [FE]  AssertionFailedError  [FE]    JsonParseException    [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0  &&(_numTypesValid  &  NR_BIGINT)!=  0)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0  &&(_numTypesValid  &  NR_BIGINT)!=  0)  {	  if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0    ||(_numTypesValid    &    NR_BIGINT)!=    0)    {    	compilable	  [FE]  AssertionFailedError  	44	8	replace
42	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      JsonParseException    [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0  ||(_numTypesValid  &  NR_BIGINT)  ==  0)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	add	if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0  ||(_numTypesValid  &  NR_BIGINT)  ==  0)  {	  if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0    ||(_numTypesValid    &    NR_BIGINT)!=    0)    {    	compilable	  [FE]  AssertionFailedError  	44	8	replace
43	[BUG]  [BUGGY]  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0  ||(_numTypesValid  &  NR_BIGINT)  ==  0)  {  [FE]  AssertionFailedError  [FE]      JsonParseException    [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0  ||(_numTypesValid  &  NR_BIGINT)  ==  0)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0  ||(_numTypesValid  &  NR_BIGINT)  ==  0)  {	  if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0    ||(_numTypesValid    &    NR_BIGINT)!=    0)    {    	compilable	  [FE]  AssertionFailedError  	44	8	replace
44	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]        JsonParseException    [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0  ||(_numTypesValid  &  NR_BIGINT)!=  0)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	add	if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0  ||(_numTypesValid  &  NR_BIGINT)!=  0)  {	  if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0    ||(_numTypesValid    &    NR_BIGINT)!=    0)    {    	compilable	  [FE]  JsonParseException  	44	8	replace
45	[BUG]  [BUGGY]  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0  ||(_numTypesValid  &  NR_BIGINT)!=  0)  {  [FE]  JsonParseException  [FE]        JsonParseException    [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0  ||(_numTypesValid  &  NR_BIGINT)!=  0)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0  ||(_numTypesValid  &  NR_BIGINT)!=  0)  {	  if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0    ||(_numTypesValid    &    NR_BIGINT)!=    0)    {    	compilable	  [FE]  JsonParseException  	44	8	replace
46	[BUG]  [BUGGY]  if(_numTypesValid!=  NR_BIGINT  ||  _numTypesValid  ==  NR_BIGDECIMAL)  {  if(_numTypesValid!=  NR_BIGINT  ||  _numTypesValid  ==  NR_BIGDECIMAL)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_numTypesValid!=  NR_BIGINT  ||  _numTypesValid  ==  NR_BIGDECIMAL)  {  if(_numTypesValid!=  NR_BIGINT  ||  _numTypesValid  ==  NR_BIGDECIMAL)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_numTypesValid!=    NR_BIGINT    ||    _numTypesValid    ==    NR_BIGDECIMAL)    {    if(_numTypesValid!=  NR_BIGINT  ||  _numTypesValid  ==  NR_BIGDECIMAL)  {	  	non-compiled	[CE]  ';'  expected	63	None	add
47	[BUG]  [BUGGY]  if(_numTypesValid!=  NR_BIGINT  ||  _numTypesValid  ==  NR_BIGDECIMAL)  {  if(_numTypesValid  ==  NR_BIGINT  ||  _numTypesValid  ==  NR_BIGDECIMAL)  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_numTypesValid!=  NR_BIGINT  ||  _numTypesValid  ==  NR_BIGDECIMAL)  {  if(_numTypesValid  ==  NR_BIGINT  ||  _numTypesValid  ==  NR_BIGDECIMAL)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_numTypesValid!=    NR_BIGINT    ||    _numTypesValid    ==    NR_BIGDECIMAL)    {    if(_numTypesValid  ==  NR_BIGINT  ||  _numTypesValid  ==  NR_BIGDECIMAL)  {	  	non-compiled	[CE]  ';'  expected	63	None	add
48	[BUG]  [BUGGY]  if(_numTypesValid!=  NR_BIGINT  ||  _numTypesValid  ==  NR_BIGDECIMAL)  {  if(_numTypesValid  >=  NR_BIGINT  ||  _numTypesValid  ==  NR_BIGDECIMAL)  {  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_numTypesValid!=  NR_BIGINT  ||  _numTypesValid  ==  NR_BIGDECIMAL)  {  if(_numTypesValid  >=  NR_BIGINT  ||  _numTypesValid  ==  NR_BIGDECIMAL)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_numTypesValid!=    NR_BIGINT    ||    _numTypesValid    ==    NR_BIGDECIMAL)    {    if(_numTypesValid  >=  NR_BIGINT  ||  _numTypesValid  ==  NR_BIGDECIMAL)  {	  	non-compiled	[CE]  ';'  expected	63	None	add
49	[BUG]  [BUGGY]  if(_numTypesValid!=  NR_BIGINT  ||  _numTypesValid  ==  NR_BIGDECIMAL)  {  if(_numTypesValid  >>  NR_BIGINT  ||  _numTypesValid  ==  NR_BIGDECIMAL)  {  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_numTypesValid!=  NR_BIGINT  ||  _numTypesValid  ==  NR_BIGDECIMAL)  {  if(_numTypesValid  >>  NR_BIGINT  ||  _numTypesValid  ==  NR_BIGDECIMAL)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_numTypesValid!=    NR_BIGINT    ||    _numTypesValid    ==    NR_BIGDECIMAL)    {    if(_numTypesValid  >>  NR_BIGINT  ||  _numTypesValid  ==  NR_BIGDECIMAL)  {	  	non-compiled	[CE]  ';'  expected	63	None	add
50	[BUG]  [BUGGY]  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  return  _currToken;  }  [CE]  illegal  start  of  type  [FE]                    JsonParseException      [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  return  _currToken;  }  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  return  _currToken;  }	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_currToken!=    JsonToken.VALUE_NUMBER_INT)    {    return    _currToken;    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
51	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  return  _currToken;  }  [CE]  illegal  start  of  type  [FE]                      JsonParseException      [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  return  _currToken;  }  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  return  _currToken;  }	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_currToken!=    JsonToken.VALUE_NUMBER_INT)    {    return    _currToken;    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
52	[BUG]  [BUGGY]  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.VALUE_NUMBER_FLOAT)  {  return  _currToken;  }  [CE]  illegal  start  of  type  [FE]                        JsonParseException      [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.VALUE_NUMBER_FLOAT)  {  return  _currToken;  }  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.VALUE_NUMBER_FLOAT)  {  return  _currToken;  }	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_currToken!=    JsonToken.VALUE_NUMBER_INT)    {    return    _currToken;    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
53	[BUG]  [BUGGY]  ||  _currToken!=  JsonToken.VALUE_NUMBER_INT)  {  return  _currToken;  }  [CE]  illegal  start  of  expression  [FE]                          JsonParseException      [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  ||  _currToken!=  JsonToken.VALUE_NUMBER_INT)  {  return  _currToken;  }  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	||  _currToken!=  JsonToken.VALUE_NUMBER_INT)  {  return  _currToken;  }	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_currToken!=    JsonToken.VALUE_NUMBER_INT)    {    return    _currToken;    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
54	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_BIGINT  ||  _numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  NR_BIGINT  ||  _numTypesValid  ==  NR_UNKNOWN)  {  [CE]  ';'  expected  [FE]    JsonParseException    [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_numTypesValid  ==  NR_BIGINT  ||  _numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  NR_BIGINT  ||  _numTypesValid  ==  NR_UNKNOWN)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_numTypesValid    ==    NR_BIGINT    ||    _numTypesValid    ==    NR_UNKNOWN)    {    if(_numTypesValid  ==  NR_BIGINT  ||  _numTypesValid  ==  NR_UNKNOWN)  {	  	non-compiled	[CE]  ';'  expected	17	None	add
55	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_BIGINT  ||  _numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  NR_BIGINT  ||  _numTypesValid!=  NR_UNKNOWN)  {  [CE]  ';'  expected  [FE]      JsonParseException    [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_numTypesValid  ==  NR_BIGINT  ||  _numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  NR_BIGINT  ||  _numTypesValid!=  NR_UNKNOWN)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_numTypesValid    ==    NR_BIGINT    ||    _numTypesValid    ==    NR_UNKNOWN)    {    if(_numTypesValid  ==  NR_BIGINT  ||  _numTypesValid!=  NR_UNKNOWN)  {	  	non-compiled	[CE]  ';'  expected	17	None	add
56	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_BIGINT  ||  _numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid!=  NR_BIGINT  ||  _numTypesValid  ==  NR_UNKNOWN)  {  [CE]  ';'  expected  [FE]        JsonParseException    [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_numTypesValid  ==  NR_BIGINT  ||  _numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid!=  NR_BIGINT  ||  _numTypesValid  ==  NR_UNKNOWN)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_numTypesValid    ==    NR_BIGINT    ||    _numTypesValid    ==    NR_UNKNOWN)    {    if(_numTypesValid!=  NR_BIGINT  ||  _numTypesValid  ==  NR_UNKNOWN)  {	  	non-compiled	[CE]  ';'  expected	17	None	add
57	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_BIGINT  ||  _numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  NR_BIGINT  ||  _numTypesValid  >=  NR_UNKNOWN)  {  [CE]  ';'  expected  [FE]          JsonParseException    [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_numTypesValid  ==  NR_BIGINT  ||  _numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  NR_BIGINT  ||  _numTypesValid  >=  NR_UNKNOWN)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_numTypesValid    ==    NR_BIGINT    ||    _numTypesValid    ==    NR_UNKNOWN)    {    if(_numTypesValid  ==  NR_BIGINT  ||  _numTypesValid  >=  NR_UNKNOWN)  {	  	non-compiled	[CE]  ';'  expected	17	None	add
58	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    JsonParseException    [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.END_ARRAY)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	add	if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.END_ARRAY)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.END_ARRAY)    {    	compilable	  [FE]  AssertionFailedError  	51	8	replace
59	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.END_ARRAY)  {  [FE]  AssertionFailedError  [FE]    JsonParseException    [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.END_ARRAY)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.END_ARRAY)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.END_ARRAY)    {    	compilable	  [FE]  AssertionFailedError  	51	8	replace
60	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_ARRAY)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	add	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_ARRAY)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.END_ARRAY)    {    	compilable	  [FE]  JsonParseException  	51	8	replace
61	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_ARRAY)  {  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_ARRAY)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_ARRAY)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.END_ARRAY)    {    	compilable	  [FE]  JsonParseException  	51	8	replace
62	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [CE]  ';'  expected  [FE]    JsonParseException    [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {	  	non-compiled	[CE]  ';'  expected	25	None	add
63	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.FIELD_NAME)  {  [CE]  ';'  expected  [FE]      JsonParseException    [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.FIELD_NAME)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.FIELD_NAME)  {	  	non-compiled	[CE]  ';'  expected	25	None	add
64	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [CE]  ';'  expected  [FE]        JsonParseException    [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {	  	non-compiled	[CE]  ';'  expected	25	None	add
65	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  >=  JsonToken.FIELD_NAME)  {  [CE]  ';'  expected  [FE]          JsonParseException    [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  >=  JsonToken.FIELD_NAME)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  >=  JsonToken.FIELD_NAME)  {	  	non-compiled	[CE]  ';'  expected	25	None	add
66	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    AssertionFailedError    [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NULL)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	add	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NULL)  {	  if(_currToken    ==    JsonToken.VALUE_NULL)    {    	compilable	  [FE]  JsonParseException  	20	8	replace
67	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NULL)  {  [FE]  JsonParseException  [FE]    AssertionFailedError    [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NULL)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NULL)  {	  if(_currToken    ==    JsonToken.VALUE_NULL)    {    	compilable	  [FE]  JsonParseException  	20	8	replace
68	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_ARRAY)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_ARRAY)  {  [CE]  ';'  expected  [FE]    JsonParseException    [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_ARRAY)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_ARRAY)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.END_ARRAY)    {    if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_ARRAY)  {	  	non-compiled	[CE]  ';'  expected	50	None	add
69	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_ARRAY)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.END_ARRAY)  {  [CE]  ';'  expected  [FE]      JsonParseException    [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_ARRAY)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.END_ARRAY)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.END_ARRAY)    {    if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.END_ARRAY)  {	  	non-compiled	[CE]  ';'  expected	50	None	add
70	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_ARRAY)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_ARRAY)  {  [CE]  ';'  expected  [FE]        JsonParseException    [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_ARRAY)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_ARRAY)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.END_ARRAY)    {    if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_ARRAY)  {	  	non-compiled	[CE]  ';'  expected	50	None	add
71	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_ARRAY)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  >=  JsonToken.END_ARRAY)  {  [CE]  ';'  expected  [FE]          JsonParseException    [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_ARRAY)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  >=  JsonToken.END_ARRAY)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.END_ARRAY)    {    if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  >=  JsonToken.END_ARRAY)  {	  	non-compiled	[CE]  ';'  expected	50	None	add
72	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_OBJECT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_OBJECT)  {  [CE]  ';'  expected  [FE]    JsonParseException    [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_OBJECT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_OBJECT)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.START_OBJECT)    {    if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_OBJECT)  {	  	non-compiled	[CE]  ';'  expected	46	None	add
73	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_OBJECT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.START_OBJECT)  {  [CE]  ';'  expected  [FE]      JsonParseException    [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_OBJECT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.START_OBJECT)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.START_OBJECT)    {    if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.START_OBJECT)  {	  	non-compiled	[CE]  ';'  expected	46	None	add
74	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_OBJECT)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_OBJECT)  {  [CE]  ';'  expected  [FE]        JsonParseException    [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_OBJECT)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_OBJECT)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.START_OBJECT)    {    if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_OBJECT)  {	  	non-compiled	[CE]  ';'  expected	46	None	add
75	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_OBJECT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  [CE]  ';'  expected  [FE]          JsonParseException    [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_OBJECT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.START_OBJECT)    {    if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_OBJECT)  {	  	non-compiled	[CE]  ';'  expected	46	None	add
76	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_BIGINT  ||  _numTypesValid  ==  NR_BIGDECIMAL)  {  if(_numTypesValid  ==  NR_BIGINT  ||  _numTypesValid  ==  NR_BIGDECIMAL)  {  [CE]  ';'  expected  [FE]    JsonParseException    [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_numTypesValid  ==  NR_BIGINT  ||  _numTypesValid  ==  NR_BIGDECIMAL)  {  if(_numTypesValid  ==  NR_BIGINT  ||  _numTypesValid  ==  NR_BIGDECIMAL)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_numTypesValid    ==    NR_BIGINT    ||    _numTypesValid    ==    NR_BIGDECIMAL)    {    if(_numTypesValid  ==  NR_BIGINT  ||  _numTypesValid  ==  NR_BIGDECIMAL)  {	  	non-compiled	[CE]  ';'  expected	15	None	add
77	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_BIGINT  ||  _numTypesValid  ==  NR_BIGDECIMAL)  {  if(_numTypesValid  ==  NR_BIGINT  ||  _numTypesValid!=  NR_BIGDECIMAL)  {  [CE]  ';'  expected  [FE]      JsonParseException    [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_numTypesValid  ==  NR_BIGINT  ||  _numTypesValid  ==  NR_BIGDECIMAL)  {  if(_numTypesValid  ==  NR_BIGINT  ||  _numTypesValid!=  NR_BIGDECIMAL)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_numTypesValid    ==    NR_BIGINT    ||    _numTypesValid    ==    NR_BIGDECIMAL)    {    if(_numTypesValid  ==  NR_BIGINT  ||  _numTypesValid!=  NR_BIGDECIMAL)  {	  	non-compiled	[CE]  ';'  expected	15	None	add
78	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_BIGINT  ||  _numTypesValid  ==  NR_BIGDECIMAL)  {  if(_numTypesValid!=  NR_BIGINT  ||  _numTypesValid  ==  NR_BIGDECIMAL)  {  [CE]  ';'  expected  [FE]        JsonParseException    [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_numTypesValid  ==  NR_BIGINT  ||  _numTypesValid  ==  NR_BIGDECIMAL)  {  if(_numTypesValid!=  NR_BIGINT  ||  _numTypesValid  ==  NR_BIGDECIMAL)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_numTypesValid    ==    NR_BIGINT    ||    _numTypesValid    ==    NR_BIGDECIMAL)    {    if(_numTypesValid!=  NR_BIGINT  ||  _numTypesValid  ==  NR_BIGDECIMAL)  {	  	non-compiled	[CE]  ';'  expected	15	None	add
79	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_BIGINT  ||  _numTypesValid  ==  NR_BIGDECIMAL)  {  if(_numTypesValid  ==  NR_BIGINT  ||  _numTypesValid  >=  NR_BIGDECIMAL)  {  [CE]  ';'  expected  [FE]          JsonParseException    [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_numTypesValid  ==  NR_BIGINT  ||  _numTypesValid  ==  NR_BIGDECIMAL)  {  if(_numTypesValid  ==  NR_BIGINT  ||  _numTypesValid  >=  NR_BIGDECIMAL)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_numTypesValid    ==    NR_BIGINT    ||    _numTypesValid    ==    NR_BIGDECIMAL)    {    if(_numTypesValid  ==  NR_BIGINT  ||  _numTypesValid  >=  NR_BIGDECIMAL)  {	  	non-compiled	[CE]  ';'  expected	15	None	add
80	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_BIGINT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [CE]  cannot  find  symbol  VALUE_BIGINT  [FE]          JsonParseException      [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_BIGINT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_currToken  ==  JsonToken.VALUE_BIGINT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {	  if(_currToken    ==    JsonToken.VALUE_BIGINT)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_BIGINT	60	None	replace
81	[BUG]  [BUGGY]  If((  _numTypesValid  &  NR_BIGINT)!=  0)  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  If((  _numTypesValid  &  NR_BIGINT)!=  0)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	If((  _numTypesValid  &  NR_BIGINT)!=  0)  {	  if((    _numTypesValid    &    NR_BIGINT)    ==    0)    {    If((    _numTypesValid    &    NR_BIGINT)    ==    0)    {    	non-compiled	[CE]  ';'  expected	40	None	replace
82	[BUG]  [BUGGY]  If((  _numTypesValid  &  NR_BIGINT)  ==  0)  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  If((  _numTypesValid  &  NR_BIGINT)  ==  0)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	If((  _numTypesValid  &  NR_BIGINT)  ==  0)  {	  if((    _numTypesValid    &    NR_BIGINT)    ==    0)    {    If((    _numTypesValid    &    NR_BIGINT)    ==    0)    {    	non-compiled	[CE]  ';'  expected	40	None	replace
83	[BUG]  [BUGGY]  If((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  If((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	If((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {	  if((    _numTypesValid    &    NR_BIGINT)    ==    0)    {    If((    _numTypesValid    &    NR_BIGINT)    ==    0)    {    	non-compiled	[CE]  ';'  expected	40	None	replace
84	[BUG]  [BUGGY]  If((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  If((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	If((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {	  if((    _numTypesValid    &    NR_BIGINT)    ==    0)    {    If((    _numTypesValid    &    NR_BIGINT)    ==    0)    {    	non-compiled	[CE]  ';'  expected	40	None	replace
85	[BUG]  [BUGGY]  if(_numTypesValid  ==  JsonToken.VALUE_NUMBER_INT)  {  return  _numberInt;  }  [CE]  illegal  start  of  type  [FE]                      JsonParseException      [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_numTypesValid  ==  JsonToken.VALUE_NUMBER_INT)  {  return  _numberInt;  }  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_numTypesValid  ==  JsonToken.VALUE_NUMBER_INT)  {  return  _numberInt;  }	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_numTypesValid    ==    JsonToken.VALUE_NUMBER_INT)    {    return    _numberInt;    }    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
86	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _numTypesValid  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  return  _numberInt;  }  [CE]  illegal  start  of  type  [FE]                        JsonParseException      [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _numTypesValid  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  return  _numberInt;  }  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _numTypesValid  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  return  _numberInt;  }	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_numTypesValid    ==    JsonToken.VALUE_NUMBER_INT)    {    return    _numberInt;    }    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
87	[BUG]  [BUGGY]  ||(_numTypesValid  ==  JsonToken.VALUE_NUMBER_INT))  {  return  _numberInt;  }  [CE]  illegal  start  of  expression  [FE]                          JsonParseException      [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  ||(_numTypesValid  ==  JsonToken.VALUE_NUMBER_INT))  {  return  _numberInt;  }  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	||(_numTypesValid  ==  JsonToken.VALUE_NUMBER_INT))  {  return  _numberInt;  }	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_numTypesValid    ==    JsonToken.VALUE_NUMBER_INT)    {    return    _numberInt;    }    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
88	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        JsonParseException      [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_STRING)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	add	if(_currToken  ==  JsonToken.VALUE_STRING)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    	compilable	  [FE]  AssertionFailedError  	29	8	replace
89	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_STRING)  {  [FE]  AssertionFailedError  [FE]        JsonParseException      [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_STRING)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_currToken  ==  JsonToken.VALUE_STRING)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    	compilable	  [FE]  AssertionFailedError  	29	8	replace
90	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    JsonParseException    [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.START_OBJECT)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	add	if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.START_OBJECT)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.START_OBJECT)    {    	compilable	  [FE]  AssertionFailedError  	47	8	replace
91	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.START_OBJECT)  {  [FE]  AssertionFailedError  [FE]    JsonParseException    [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.START_OBJECT)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.START_OBJECT)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.START_OBJECT)    {    	compilable	  [FE]  AssertionFailedError  	47	8	replace
92	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	add	if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.START_OBJECT)    {    	compilable	  [FE]  JsonParseException  	47	8	replace
93	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.START_OBJECT)    {    	compilable	  [FE]  JsonParseException  	47	8	replace
94	[BUG]  [BUGGY]  ||(_numTypesValid  &  NR_BIGINT)!=  0)  {  return  _numberInt;  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  ||(_numTypesValid  &  NR_BIGINT)!=  0)  {  return  _numberInt;  }  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	||(_numTypesValid  &  NR_BIGINT)!=  0)  {  return  _numberInt;  }	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if((    _numTypesValid    &    NR_BIGINT)!=    0)    {    return    _numberInt;    }    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
95	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  return  _numberInt;  }  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	add	if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  return  _numberInt;  }	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if((    _numTypesValid    &    NR_BIGINT)!=    0)    {    return    _numberInt;    }    	compilable	  [FE]  AssertionFailedError  	58	8	replace
96	[BUG]  [BUGGY]  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  return  _numberInt;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  return  _numberInt;  }  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  return  _numberInt;  }	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if((    _numTypesValid    &    NR_BIGINT)!=    0)    {    return    _numberInt;    }    	compilable	  [FE]  AssertionFailedError  	58	8	replace
97	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	add	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.VALUE_NUMBER_FLOAT)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    	compilable	  [FE]  JsonParseException  	22	8	replace
98	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.VALUE_NUMBER_FLOAT)  {  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.VALUE_NUMBER_FLOAT)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    	compilable	  [FE]  JsonParseException  	22	8	replace
99	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	add	if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    	compilable	  [FE]  JsonParseException  	22	8	replace
100	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    	compilable	  [FE]  JsonParseException  	22	8	replace
101	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    AssertionFailedError    [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_numTypesValid  ==  NR_BIGINT  ||  _numTypesValid!=  NR_BIGDECIMAL)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	add	if(_numTypesValid  ==  NR_BIGINT  ||  _numTypesValid!=  NR_BIGDECIMAL)  {	  if(_numTypesValid!=    NR_BIGINT    ||    _numTypesValid    ==    NR_BIGDECIMAL)    {    	compilable	  [FE]  JsonParseException  	64	8	replace
102	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_BIGINT  ||  _numTypesValid!=  NR_BIGDECIMAL)  {  [FE]  JsonParseException  [FE]    AssertionFailedError    [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_numTypesValid  ==  NR_BIGINT  ||  _numTypesValid!=  NR_BIGDECIMAL)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_numTypesValid  ==  NR_BIGINT  ||  _numTypesValid!=  NR_BIGDECIMAL)  {	  if(_numTypesValid!=    NR_BIGINT    ||    _numTypesValid    ==    NR_BIGDECIMAL)    {    	compilable	  [FE]  JsonParseException  	64	8	replace
103	[BUG]  [BUGGY]  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0  ||(_numTypesValid  &  NR_BIGINT)!=  0)  {  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0  ||(_numTypesValid  &  NR_BIGINT)!=  0)  {  [CE]  ';'  expected  [FE]    JsonParseException    [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0  ||(_numTypesValid  &  NR_BIGINT)!=  0)  {  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0  ||(_numTypesValid  &  NR_BIGINT)!=  0)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0    ||(_numTypesValid    &    NR_BIGINT)!=    0)    {    if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0  ||(_numTypesValid  &  NR_BIGINT)!=  0)  {	  	non-compiled	[CE]  ';'  expected	43	None	add
104	[BUG]  [BUGGY]  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0  ||(_numTypesValid  &  NR_BIGINT)!=  0)  {  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0  ||(_numTypesValid  &  NR_BIGINT)  ==  0)  {  [CE]  ';'  expected  [FE]      JsonParseException    [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0  ||(_numTypesValid  &  NR_BIGINT)!=  0)  {  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0  ||(_numTypesValid  &  NR_BIGINT)  ==  0)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0    ||(_numTypesValid    &    NR_BIGINT)!=    0)    {    if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0  ||(_numTypesValid  &  NR_BIGINT)  ==  0)  {	  	non-compiled	[CE]  ';'  expected	43	None	add
105	[BUG]  [BUGGY]  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0  ||(_numTypesValid  &  NR_BIGINT)!=  0)  {  if((  _numTypesValid  &  NR_BIGDECIMAL)  >=  0  ||(_numTypesValid  &  NR_BIGINT)!=  0)  {  [CE]  ';'  expected  [FE]        JsonParseException    [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0  ||(_numTypesValid  &  NR_BIGINT)!=  0)  {  if((  _numTypesValid  &  NR_BIGDECIMAL)  >=  0  ||(_numTypesValid  &  NR_BIGINT)!=  0)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0    ||(_numTypesValid    &    NR_BIGINT)!=    0)    {    if((  _numTypesValid  &  NR_BIGDECIMAL)  >=  0  ||(_numTypesValid  &  NR_BIGINT)!=  0)  {	  	non-compiled	[CE]  ';'  expected	43	None	add
106	[BUG]  [BUGGY]  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0  ||(_numTypesValid  &  NR_BIGINT)!=  0)  {  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0  ||(_numTypesValid  &  NR_BIGINT)!=  0)  {  [CE]  ';'  expected  [FE]          JsonParseException    [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0  ||(_numTypesValid  &  NR_BIGINT)!=  0)  {  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0  ||(_numTypesValid  &  NR_BIGINT)!=  0)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0    ||(_numTypesValid    &    NR_BIGINT)!=    0)    {    if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0  ||(_numTypesValid  &  NR_BIGINT)!=  0)  {	  	non-compiled	[CE]  ';'  expected	43	None	add
107	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]          AssertionFailedError      [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0  ||(_numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	add	if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0  ||(_numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {	  if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0)    {    if((    _numTypesValid    &    NR_BIGDECIMAL)    ==    0)    {    	compilable	  [FE]  JsonParseException  	34	8	replace
108	[BUG]  [BUGGY]  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0  ||(_numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {  [FE]  JsonParseException  [FE]          AssertionFailedError      [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0  ||(_numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0  ||(_numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {	  if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0)    {    if((    _numTypesValid    &    NR_BIGDECIMAL)    ==    0)    {    	compilable	  [FE]  JsonParseException  	34	8	replace
109	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  return  _currToken;  }  [CE]  illegal  start  of  type  [FE]                  JsonParseException      [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  return  _currToken;  }  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  return  _currToken;  }	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    return    _currToken;    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
110	[BUG]  [BUGGY]  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  return  _currToken;  }  [CE]  illegal  start  of  expression  [FE]                    JsonParseException      [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  return  _currToken;  }  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  return  _currToken;  }	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    return    _currToken;    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
111	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_BIGINT  ||  _numTypesValid  ==  NR_BUFFER)  {  [CE]  cannot  find  symbol  NR_BUFFER  [FE]    JsonParseException    [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_numTypesValid  ==  NR_BIGINT  ||  _numTypesValid  ==  NR_BUFFER)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_numTypesValid  ==  NR_BIGINT  ||  _numTypesValid  ==  NR_BUFFER)  {	  if(_numTypesValid    ==    NR_BIGINT    ||    _numTypesValid    ==    NR_UNKNOWN)    {    	non-compiled	[CE]  cannot  find  symbol  NR_BUFFER	18	None	replace
112	[BUG]  [BUGGY]  if(_numTypesValid!=  NR_BIGDECIMAL)  {  if(_numTypesValid!=  NR_BIGDECIMAL)  {  [CE]  ';'  expected  [FE]    JsonParseException    [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_numTypesValid!=  NR_BIGDECIMAL)  {  if(_numTypesValid!=  NR_BIGDECIMAL)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_numTypesValid!=    NR_BIGDECIMAL)    {    if(_numTypesValid!=  NR_BIGDECIMAL)  {	  	non-compiled	[CE]  ';'  expected	52	None	add
113	[BUG]  [BUGGY]  if(_numTypesValid!=  NR_BIGDECIMAL)  {  if(_numTypesValid  >=  NR_BIGDECIMAL)  {  [CE]  ';'  expected  [FE]      JsonParseException    [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_numTypesValid!=  NR_BIGDECIMAL)  {  if(_numTypesValid  >=  NR_BIGDECIMAL)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_numTypesValid!=    NR_BIGDECIMAL)    {    if(_numTypesValid  >=  NR_BIGDECIMAL)  {	  	non-compiled	[CE]  ';'  expected	52	None	add
114	[BUG]  [BUGGY]  if(_numTypesValid!=  NR_BIGDECIMAL)  {  if(_numTypesValid  >>  NR_BIGDECIMAL)  {  [CE]  ';'  expected  [FE]        JsonParseException    [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_numTypesValid!=  NR_BIGDECIMAL)  {  if(_numTypesValid  >>  NR_BIGDECIMAL)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_numTypesValid!=    NR_BIGDECIMAL)    {    if(_numTypesValid  >>  NR_BIGDECIMAL)  {	  	non-compiled	[CE]  ';'  expected	52	None	add
115	[BUG]  [BUGGY]  if(_numTypesValid!=  NR_BIGDECIMAL)  {  if(_numTypesValid  ==  NR_BIGDECIMAL)  {  [CE]  ';'  expected  [FE]          JsonParseException    [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_numTypesValid!=  NR_BIGDECIMAL)  {  if(_numTypesValid  ==  NR_BIGDECIMAL)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_numTypesValid!=    NR_BIGDECIMAL)    {    if(_numTypesValid  ==  NR_BIGDECIMAL)  {	  	non-compiled	[CE]  ';'  expected	52	None	add
116	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          JsonParseException      [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	add	if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_currToken!=    JsonToken.VALUE_NUMBER_INT)    {    	compilable	  [FE]  AssertionFailedError  	30	8	replace
117	[BUG]  [BUGGY]  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  [FE]  AssertionFailedError  [FE]          JsonParseException      [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_currToken!=    JsonToken.VALUE_NUMBER_INT)    {    	compilable	  [FE]  AssertionFailedError  	30	8	replace
118	[BUG]  [BUGGY]  if(_numTypesValid  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [CE]  incomparable  types:  int  and  JsonToken  [FE]        JsonParseException      [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_numTypesValid  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_numTypesValid  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _numTypesValid    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    	non-compiled	[CE]  incomparable  types:  int  and  JsonToken	59	None	replace
119	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _numTypesValid  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [CE]  incomparable  types:  int  and  JsonToken  [FE]          JsonParseException      [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _numTypesValid  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_currToken  ==  JsonToken.VALUE_NULL  ||  _numTypesValid  ==  JsonToken.VALUE_NUMBER_FLOAT)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _numTypesValid    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    	non-compiled	[CE]  incomparable  types:  int  and  JsonToken	59	None	replace
120	[BUG]  [BUGGY]  if(_numTypesValid  ==  JsonToken.VALUE_NUMBER_INT  ||  _numTypesValid  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [CE]  incomparable  types:  int  and  JsonToken  [FE]            JsonParseException      [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_numTypesValid  ==  JsonToken.VALUE_NUMBER_INT  ||  _numTypesValid  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_numTypesValid  ==  JsonToken.VALUE_NUMBER_INT  ||  _numTypesValid  ==  JsonToken.VALUE_NUMBER_FLOAT)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _numTypesValid    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    	non-compiled	[CE]  incomparable  types:  int  and  JsonToken	59	None	replace
121	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    JsonParseException    [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	add	if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.FIELD_NAME)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    	compilable	  [FE]  AssertionFailedError  	26	8	replace
122	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [FE]  AssertionFailedError  [FE]    JsonParseException    [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.FIELD_NAME)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    	compilable	  [FE]  AssertionFailedError  	26	8	replace
123	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	add	if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    	compilable	  [FE]  JsonParseException  	26	8	replace
124	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    	compilable	  [FE]  JsonParseException  	26	8	replace
125	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]        JsonParseException    [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.FIELD_NAME)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	add	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.FIELD_NAME)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    	compilable	  [FE]  JsonParseException  	26	8	replace
126	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.FIELD_NAME)  {  [FE]  JsonParseException  [FE]        JsonParseException    [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.FIELD_NAME)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.FIELD_NAME)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    	compilable	  [FE]  JsonParseException  	26	8	replace
127	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_STRING)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  return  _  [CE]  ';'  expected  [FE]                      JsonParseException      [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_STRING)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  return  _  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_currToken  ==  JsonToken.VALUE_STRING)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  return  _	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    return    _    	non-compiled	[CE]  ';'  expected	11	None	replace
128	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  return  _  [CE]  ';'  expected  [FE]                        JsonParseException      [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  return  _  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_currToken  ==  JsonToken.VALUE_NULL)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  return  _	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    return    _    	non-compiled	[CE]  ';'  expected	11	None	replace
129	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  return  _numberBigInt;  }  [CE]  illegal  start  of  type  [FE]                          JsonParseException      [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  return  _numberBigInt;  }  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  return  _numberBigInt;  }	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    return    _    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
130	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  return  _numberBigDecimal;  }  [CE]  illegal  start  of  type  [FE]                            JsonParseException      [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  return  _numberBigDecimal;  }  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  return  _numberBigDecimal;  }	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    return    _    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
131	[BUG]  [BUGGY]  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {  [CE]  ';'  expected  [FE]    JsonParseException    [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if((    _numTypesValid    &    NR_BIGDECIMAL)    ==    0)    {    if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {	  	non-compiled	[CE]  ';'  expected	41	None	add
132	[BUG]  [BUGGY]  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {  [CE]  ';'  expected  [FE]      JsonParseException    [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if((    _numTypesValid    &    NR_BIGDECIMAL)    ==    0)    {    if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {	  	non-compiled	[CE]  ';'  expected	41	None	add
133	[BUG]  [BUGGY]  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {  if((  _numTypesValid  &  NR_BIGDECIMAL)  >=  0)  {  [CE]  ';'  expected  [FE]        JsonParseException    [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {  if((  _numTypesValid  &  NR_BIGDECIMAL)  >=  0)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if((    _numTypesValid    &    NR_BIGDECIMAL)    ==    0)    {    if((  _numTypesValid  &  NR_BIGDECIMAL)  >=  0)  {	  	non-compiled	[CE]  ';'  expected	41	None	add
134	[BUG]  [BUGGY]  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {  If((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {  [CE]  ';'  expected  [FE]          JsonParseException    [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {  If((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if((    _numTypesValid    &    NR_BIGDECIMAL)    ==    0)    {    If((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {	  	non-compiled	[CE]  ';'  expected	41	None	add
135	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_numTypesValid  ==  NR_BIGINT  ||  _numTypesValid!=  NR_BIGINT)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	add	if(_numTypesValid  ==  NR_BIGINT  ||  _numTypesValid!=  NR_BIGINT)  {	  if(_numTypesValid!=    NR_BIGINT    ||    _numTypesValid    ==    NR_BIGINT)    {    	compilable	  [FE]  JsonParseException  	28	8	replace
136	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_BIGINT  ||  _numTypesValid!=  NR_BIGINT)  {  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_numTypesValid  ==  NR_BIGINT  ||  _numTypesValid!=  NR_BIGINT)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_numTypesValid  ==  NR_BIGINT  ||  _numTypesValid!=  NR_BIGINT)  {	  if(_numTypesValid!=    NR_BIGINT    ||    _numTypesValid    ==    NR_BIGINT)    {    	compilable	  [FE]  JsonParseException  	28	8	replace
137	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_STRING)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  return  _  [CE]  ';'  expected  [FE]                        JsonParseException      [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_STRING)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  return  _  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_currToken  ==  JsonToken.VALUE_STRING)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  return  _	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    return    _    	non-compiled	[CE]  ';'  expected	12	None	replace
138	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  return  _  [CE]  ';'  expected  [FE]                          JsonParseException      [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  return  _  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_currToken  ==  JsonToken.VALUE_NULL)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  return  _	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    return    _    	non-compiled	[CE]  ';'  expected	12	None	replace
139	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                            JsonParseException      [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_STRING)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  return  _numberBigInt;  }  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	add	if(_currToken  ==  JsonToken.VALUE_STRING)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  return  _numberBigInt;  }	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    return    _    	compilable	  [FE]  AssertionFailedError  	12	8	replace
140	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_STRING)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  return  _numberBigInt;  }  [FE]  AssertionFailedError  [FE]                            JsonParseException      [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_STRING)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  return  _numberBigInt;  }  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_currToken  ==  JsonToken.VALUE_STRING)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  return  _numberBigInt;  }	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    return    _    	compilable	  [FE]  AssertionFailedError  	12	8	replace
141	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                              JsonParseException      [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  return  _numberBigInt;  }  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	add	if(_currToken  ==  JsonToken.VALUE_NULL)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  return  _numberBigInt;  }	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    return    _    	compilable	  [FE]  AssertionFailedError  	12	8	replace
142	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  return  _numberBigInt;  }  [FE]  AssertionFailedError  [FE]                              JsonParseException      [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  return  _numberBigInt;  }  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_currToken  ==  JsonToken.VALUE_NULL)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  return  _numberBigInt;  }	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    return    _    	compilable	  [FE]  AssertionFailedError  	12	8	replace
143	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    JsonParseException    [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_numTypesValid  ==  0  ||  _numTypesValid  ==  NR_BIGDECIMAL)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	add	if(_numTypesValid  ==  0  ||  _numTypesValid  ==  NR_BIGDECIMAL)  {	  if(_numTypesValid    ==    NR_BIGINT    ||    _numTypesValid    ==    NR_BIGDECIMAL)    {    	compilable	  [FE]  AssertionFailedError  	16	8	replace
144	[BUG]  [BUGGY]  if(_numTypesValid  ==  0  ||  _numTypesValid  ==  NR_BIGDECIMAL)  {  [FE]  AssertionFailedError  [FE]    JsonParseException    [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_numTypesValid  ==  0  ||  _numTypesValid  ==  NR_BIGDECIMAL)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_numTypesValid  ==  0  ||  _numTypesValid  ==  NR_BIGDECIMAL)  {	  if(_numTypesValid    ==    NR_BIGINT    ||    _numTypesValid    ==    NR_BIGDECIMAL)    {    	compilable	  [FE]  AssertionFailedError  	16	8	replace
145	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    JsonParseException    [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.END_OBJECT)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	add	if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.END_OBJECT)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.END_OBJECT)    {    	compilable	  [FE]  AssertionFailedError  	49	8	replace
146	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.END_OBJECT)  {  [FE]  AssertionFailedError  [FE]    JsonParseException    [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.END_OBJECT)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.END_OBJECT)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.END_OBJECT)    {    	compilable	  [FE]  AssertionFailedError  	49	8	replace
147	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  [CE]  ';'  expected  [FE]    JsonParseException    [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.END_OBJECT)    {    if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_OBJECT)  {	  	non-compiled	[CE]  ';'  expected	48	None	add
148	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.END_OBJECT)  {  [CE]  ';'  expected  [FE]      JsonParseException    [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.END_OBJECT)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.END_OBJECT)    {    if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.END_OBJECT)  {	  	non-compiled	[CE]  ';'  expected	48	None	add
149	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  [CE]  ';'  expected  [FE]        JsonParseException    [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.END_OBJECT)    {    if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_OBJECT)  {	  	non-compiled	[CE]  ';'  expected	48	None	add
150	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  >=  JsonToken.END_OBJECT)  {  [CE]  ';'  expected  [FE]          JsonParseException    [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  >=  JsonToken.END_OBJECT)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.END_OBJECT)    {    if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  >=  JsonToken.END_OBJECT)  {	  	non-compiled	[CE]  ';'  expected	48	None	add
151	[BUG]  [BUGGY]  If(_numTypesValid  ==  NR_BIGINT)  {  [CE]  ';'  expected  [FE]              JsonParseException      [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  If(_numTypesValid  ==  NR_BIGINT)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	If(_numTypesValid  ==  NR_BIGINT)  {	  if(_numTypesValid    ==    NR_BIGINT)    {    If(_numTypesValid    ==    NR_BIGINT)    {    	non-compiled	[CE]  ';'  expected	8	None	replace
152	[BUG]  [BUGGY]  ||(_currToken  ==  JsonToken.VALUE_NUMBER_INT))  {  [CE]  illegal  start  of  expression  [FE]              JsonParseException      [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  ||(_currToken  ==  JsonToken.VALUE_NUMBER_INT))  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	||(_currToken  ==  JsonToken.VALUE_NUMBER_INT))  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    If(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
153	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [CE]  ';'  expected  [FE]    JsonParseException    [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {	  	non-compiled	[CE]  ';'  expected	21	None	add
154	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.VALUE_NUMBER_FLOAT)  {  [CE]  ';'  expected  [FE]      JsonParseException    [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.VALUE_NUMBER_FLOAT)  {	  	non-compiled	[CE]  ';'  expected	21	None	add
155	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [CE]  ';'  expected  [FE]        JsonParseException    [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {	  	non-compiled	[CE]  ';'  expected	21	None	add
156	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  >=  JsonToken.VALUE_NUMBER_FLOAT)  {  [CE]  ';'  expected  [FE]          JsonParseException    [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  >=  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  >=  JsonToken.VALUE_NUMBER_FLOAT)  {	  	non-compiled	[CE]  ';'  expected	21	None	add
157	[BUG]  [BUGGY]  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_currToken!=    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {	  	non-compiled	[CE]  ';'  expected	23	None	add
158	[BUG]  [BUGGY]  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_currToken!=    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {	  	non-compiled	[CE]  ';'  expected	23	None	add
159	[BUG]  [BUGGY]  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  if(_currToken  >=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  if(_currToken  >=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_currToken!=    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    if(_currToken  >=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {	  	non-compiled	[CE]  ';'  expected	23	None	add
160	[BUG]  [BUGGY]  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  if(_currToken  >>  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  if(_currToken  >>  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_currToken!=    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    if(_currToken  >>  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {	  	non-compiled	[CE]  ';'  expected	23	None	add
161	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_STRING)  {  return  _currToken;  }  [CE]  illegal  start  of  type  [FE]                  JsonParseException      [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_STRING)  {  return  _currToken;  }  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_currToken  ==  JsonToken.VALUE_STRING)  {  return  _currToken;  }	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    return    _currToken;    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
162	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    AssertionFailedError    [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_numTypesValid  >=  NR_BIGINT  ||  _numTypesValid  ==  NR_BIGDECIMAL)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	add	if(_numTypesValid  >=  NR_BIGINT  ||  _numTypesValid  ==  NR_BIGDECIMAL)  {	  if(_numTypesValid!=    NR_BIGINT    ||    _numTypesValid    ==    NR_BIGDECIMAL)    {    	compilable	  [FE]  JsonParseException  	64	8	replace
163	[BUG]  [BUGGY]  if(_numTypesValid  >=  NR_BIGINT  ||  _numTypesValid  ==  NR_BIGDECIMAL)  {  [FE]  JsonParseException  [FE]    AssertionFailedError    [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_numTypesValid  >=  NR_BIGINT  ||  _numTypesValid  ==  NR_BIGDECIMAL)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_numTypesValid  >=  NR_BIGINT  ||  _numTypesValid  ==  NR_BIGDECIMAL)  {	  if(_numTypesValid!=    NR_BIGINT    ||    _numTypesValid    ==    NR_BIGDECIMAL)    {    	compilable	  [FE]  JsonParseException  	64	8	replace
164	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  If(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [CE]  ';'  expected  [FE]    JsonParseException    [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  If(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    If(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {	  	non-compiled	[CE]  ';'  expected	21	None	add
165	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_BIGINT  ||  _numTypesValid  ==  NR_BIGDECIMAL)  {  If(_numTypesValid  ==  NR_BIGINT  ||  _numTypesValid  ==  NR_BIGDECIMAL)  {  [CE]  ';'  expected  [FE]    JsonParseException    [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_numTypesValid  ==  NR_BIGINT  ||  _numTypesValid  ==  NR_BIGDECIMAL)  {  If(_numTypesValid  ==  NR_BIGINT  ||  _numTypesValid  ==  NR_BIGDECIMAL)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_numTypesValid    ==    NR_BIGINT    ||    _numTypesValid    ==    NR_BIGDECIMAL)    {    If(_numTypesValid  ==  NR_BIGINT  ||  _numTypesValid  ==  NR_BIGDECIMAL)  {	  	non-compiled	[CE]  ';'  expected	15	None	add
166	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_BIGINT  ||  _numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  NR_BIGINT  ||  _numtypesValid  ==  NR_UNKNOWN)  {  [CE]  ';'  expected  [FE]    JsonParseException    [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_numTypesValid  ==  NR_BIGINT  ||  _numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  NR_BIGINT  ||  _numtypesValid  ==  NR_UNKNOWN)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_numTypesValid    ==    NR_BIGINT    ||    _numTypesValid    ==    NR_UNKNOWN)    {    if(_numTypesValid  ==  NR_BIGINT  ||  _numtypesValid  ==  NR_UNKNOWN)  {	  	non-compiled	[CE]  ';'  expected	17	None	add
167	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NUMBER_INT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  [CE]  cannot  find  symbol  FIELD_NUMBER_INT  [FE]    JsonParseException    [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NUMBER_INT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_currToken  ==  JsonToken.FIELD_NUMBER_INT  ||  _currToken  ==  JsonToken.END_OBJECT)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.END_OBJECT)    {    	non-compiled	[CE]  cannot  find  symbol  FIELD_NUMBER_INT	49	None	replace
168	[BUG]  [BUGGY]  if(_numTypesValid  ==  BigDecimal.MIN_VALUE)  {  [CE]  cannot  find  symbol  MIN_VALUE  [FE]              AssertionFailedError      [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_numTypesValid  ==  BigDecimal.MIN_VALUE)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_numTypesValid  ==  BigDecimal.MIN_VALUE)  {	  if(_numTypesValid!=    NR_BIGINT)    {    if(_numTypesValid    ==    NR_BIGINT)    {    	non-compiled	[CE]  cannot  find  symbol  MIN_VALUE	4	None	replace
169	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]          JsonParseException      [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.START_OBJECT)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	add	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.START_OBJECT)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_currToken!=    JsonToken.VALUE_NUMBER_INT)    {    	compilable	  [FE]  JsonParseException  	30	8	replace
170	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.START_OBJECT)  {  [FE]  JsonParseException  [FE]          JsonParseException      [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.START_OBJECT)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.START_OBJECT)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_currToken!=    JsonToken.VALUE_NUMBER_INT)    {    	compilable	  [FE]  JsonParseException  	30	8	replace
171	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_BIGINT  ||  _numTypesValid  ==  NR_LBIGINT)  {  [CE]  cannot  find  symbol  NR_LBIGINT  [FE]    JsonParseException    [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_numTypesValid  ==  NR_BIGINT  ||  _numTypesValid  ==  NR_LBIGINT)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_numTypesValid  ==  NR_BIGINT  ||  _numTypesValid  ==  NR_LBIGINT)  {	  if(_numTypesValid!=    NR_BIGINT    ||    _numTypesValid    ==    NR_BIGINT)    {    	non-compiled	[CE]  cannot  find  symbol  NR_LBIGINT	28	None	replace
172	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NUMBER_FLOAT)  {  [CE]  cannot  find  symbol  FIELD_NUMBER_FLOAT  [FE]    JsonParseException    [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NUMBER_FLOAT)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NUMBER_FLOAT)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    	non-compiled	[CE]  cannot  find  symbol  FIELD_NUMBER_FLOAT	22	None	replace
173	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_BIGINT)  {  [CE]  cannot  find  symbol  VALUE_NUMBER_BIGINT  [FE]      JsonParseException    [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_BIGINT)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_BIGINT)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_BIGINT	22	None	replace
174	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if((  _numTypesValid  &  NR_BIGINT)!=  0  ||(_numTypesValid  &  NR_BIGDECIMAL)!=  0)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	add	if((  _numTypesValid  &  NR_BIGINT)!=  0  ||(_numTypesValid  &  NR_BIGDECIMAL)!=  0)  {	  if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0    ||(_numTypesValid    &    NR_BIGINT)!=    0)    {    	compilable	  [FE]  JsonParseException  	44	8	replace
175	[BUG]  [BUGGY]  if((  _numTypesValid  &  NR_BIGINT)!=  0  ||(_numTypesValid  &  NR_BIGDECIMAL)!=  0)  {  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if((  _numTypesValid  &  NR_BIGINT)!=  0  ||(_numTypesValid  &  NR_BIGDECIMAL)!=  0)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if((  _numTypesValid  &  NR_BIGINT)!=  0  ||(_numTypesValid  &  NR_BIGDECIMAL)!=  0)  {	  if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0    ||(_numTypesValid    &    NR_BIGINT)!=    0)    {    	compilable	  [FE]  JsonParseException  	44	8	replace
176	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]            AssertionFailedError      [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if((  _numTypesValid  &  NR_BIGINT)  >=  0)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	add	if((  _numTypesValid  &  NR_BIGINT)  >=  0)  {	  if((    _numTypesValid    &    NR_BIGINT)    ==    0)    {    if((    _numTypesValid    &    NR_BIGINT)    >=    0)    {    	compilable	  [FE]  JsonParseException  	39	8	replace
177	[BUG]  [BUGGY]  if((  _numTypesValid  &  NR_BIGINT)  >=  0)  {  [FE]  JsonParseException  [FE]            AssertionFailedError      [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if((  _numTypesValid  &  NR_BIGINT)  >=  0)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if((  _numTypesValid  &  NR_BIGINT)  >=  0)  {	  if((    _numTypesValid    &    NR_BIGINT)    ==    0)    {    if((    _numTypesValid    &    NR_BIGINT)    >=    0)    {    	compilable	  [FE]  JsonParseException  	39	8	replace
178	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _numTypesValid  ==  JsonToken.VALUE_NUMBER_BIGINT)  {  [CE]  cannot  find  symbol  VALUE_NUMBER_BIGINT  [FE]        JsonParseException      [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _numTypesValid  ==  JsonToken.VALUE_NUMBER_BIGINT)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _numTypesValid  ==  JsonToken.VALUE_NUMBER_BIGINT)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _numTypesValid    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_BIGINT	59	None	replace
179	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _numTypesValid  ==  JsonToken.START_OBJECT)  {  [CE]  incomparable  types:  int  and  JsonToken  [FE]          JsonParseException      [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _numTypesValid  ==  JsonToken.START_OBJECT)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _numTypesValid  ==  JsonToken.START_OBJECT)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _numTypesValid    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    	non-compiled	[CE]  incomparable  types:  int  and  JsonToken	59	None	replace
180	[BUG]  [BUGGY]  if(_numTypesValid  ==  BigDecimal.MIN_VALUE  ||  _numTypesValid  ==  BigDecimal.MIN_VALUE)  {  [CE]  cannot  find  symbol  MIN_VALUE  [FE]    JsonParseException    [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_numTypesValid  ==  BigDecimal.MIN_VALUE  ||  _numTypesValid  ==  BigDecimal.MIN_VALUE)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_numTypesValid  ==  BigDecimal.MIN_VALUE  ||  _numTypesValid  ==  BigDecimal.MIN_VALUE)  {	  if(_numTypesValid    ==    NR_BIGINT    ||    _numTypesValid    ==    NR_BIGDECIMAL)    {    	non-compiled	[CE]  cannot  find  symbol  MIN_VALUE	16	None	replace
181	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_BIGINT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  return  _  [CE]  ';'  expected  [FE]                        JsonParseException      [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_BIGINT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  return  _  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_currToken  ==  JsonToken.VALUE_BIGINT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  return  _	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    return    _    	non-compiled	[CE]  ';'  expected	12	None	replace
182	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  return  _numberBigInt;  }  [CE]  illegal  start  of  type  [FE]                          JsonParseException      [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  return  _numberBigInt;  }  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  return  _numberBigInt;  }	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    return    _    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
183	[BUG]  [BUGGY]  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  return  _numberInt;  }  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  return  _numberInt;  }  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  return  _numberInt;  }	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if((    _numTypesValid    &    NR_BIGINT)!=    0)    {    return    _numberInt;    }    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
184	[BUG]  [BUGGY]  _numTypesValid  ==  JsonToken.VALUE_NUMBER_INT)  {  return  _numberInt;  }  [CE]  not  a  statement  [FE]                      JsonParseException      [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  _numTypesValid  ==  JsonToken.VALUE_NUMBER_INT)  {  return  _numberInt;  }  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	_numTypesValid  ==  JsonToken.VALUE_NUMBER_INT)  {  return  _numberInt;  }	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_numTypesValid    ==    JsonToken.VALUE_NUMBER_INT)    {    return    _numberInt;    }    	non-compiled	[CE]  not  a  statement	56	None	replace
185	[BUG]  [BUGGY]  _numTypesValid  {  JsonToken.VALUE_NUMBER_INT)  {  return  _numberInt;  }  [CE]  not  a  statement  [FE]                        JsonParseException      [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  _numTypesValid  {  JsonToken.VALUE_NUMBER_INT)  {  return  _numberInt;  }  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	_numTypesValid  {  JsonToken.VALUE_NUMBER_INT)  {  return  _numberInt;  }	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_numTypesValid    ==    JsonToken.VALUE_NUMBER_INT)    {    return    _numberInt;    }    	non-compiled	[CE]  not  a  statement	56	None	replace
186	[BUG]  [BUGGY]  if(_numTypesValid  ==  BigInteger.MIN_VALUE)  {  [CE]  cannot  find  symbol  MIN_VALUE  [FE]        JsonParseException      [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_numTypesValid  ==  BigInteger.MIN_VALUE)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_numTypesValid  ==  BigInteger.MIN_VALUE)  {	  if(_numTypesValid    ==    NR_BIGINT)    {    if(_numTypesValid    ==    NR_BIGINT)    {    	non-compiled	[CE]  cannot  find  symbol  MIN_VALUE	5	None	replace
187	[BUG]  [BUGGY]  if((  _numTypesValid  &  NR_BigDecimal)!=  0)  {  [CE]  cannot  find  symbol  NR_BigDecimal  [FE]        AssertionFailedError      [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if((  _numTypesValid  &  NR_BigDecimal)!=  0)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if((  _numTypesValid  &  NR_BigDecimal)!=  0)  {	  if((    _numTypesValid    &    NR_BUFFER)!=    0)    {    	non-compiled	[CE]  cannot  find  symbol  NR_BigDecimal	45	None	replace
188	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  return  _  [CE]  ';'  expected  [FE]                      JsonParseException      [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  return  _  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  return  _	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    return    _    	non-compiled	[CE]  ';'  expected	11	None	replace
189	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  If(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  [CE]  ';'  expected  [FE]    JsonParseException    [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  If(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.END_OBJECT)    {    If(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_OBJECT)  {	  	non-compiled	[CE]  ';'  expected	48	None	add
190	[BUG]  [BUGGY]  if(_currToken!=  JsonToken.FIELD_NAME)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  return  _currToken;  }  [CE]  incompatible  types  [FE]                    JsonParseException      [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_currToken!=  JsonToken.FIELD_NAME)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  return  _currToken;  }  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_currToken!=  JsonToken.FIELD_NAME)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  return  _currToken;  }	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_currToken!=    JsonToken.VALUE_NUMBER_INT)    {    return    _currToken;    }    	non-compiled	[CE]  incompatible  types	10	None	replace
191	[BUG]  [BUGGY]  if(_currToken!=  JsonToken.VALUE_STRING)  {  return  _currToken;  }  [CE]  illegal  start  of  type  [FE]                      JsonParseException      [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_currToken!=  JsonToken.VALUE_STRING)  {  return  _currToken;  }  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_currToken!=  JsonToken.VALUE_STRING)  {  return  _currToken;  }	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_currToken!=    JsonToken.VALUE_NUMBER_INT)    {    return    _currToken;    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
192	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  If(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [CE]  ';'  expected  [FE]    JsonParseException    [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  If(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    If(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {	  	non-compiled	[CE]  ';'  expected	25	None	add
193	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_ARRAY)  {  If(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_ARRAY)  {  [CE]  ';'  expected  [FE]    JsonParseException    [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_ARRAY)  {  If(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_ARRAY)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.END_ARRAY)    {    If(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_ARRAY)  {	  	non-compiled	[CE]  ';'  expected	50	None	add
194	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_BIGINT  ||  _numTypesValid  ==  NR_BIGINT)  {  If(_numTypesValid  ==  NR_BIGINT  ||  _numTypesValid  ==  NR_BIGINT)  {  [CE]  ';'  expected  [FE]    JsonParseException    [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_numTypesValid  ==  NR_BIGINT  ||  _numTypesValid  ==  NR_BIGINT)  {  If(_numTypesValid  ==  NR_BIGINT  ||  _numTypesValid  ==  NR_BIGINT)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_numTypesValid    ==    NR_BIGINT    ||    _numTypesValid    ==    NR_BIGINT)    {    If(_numTypesValid  ==  NR_BIGINT  ||  _numTypesValid  ==  NR_BIGINT)  {	  	non-compiled	[CE]  ';'  expected	13	None	add
195	[BUG]  [BUGGY]  if(_tokenInputRow  ==  JsonToken.VALUE_NUMBER_INT)  {  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  return  _numberBinary;  }  [CE]  incomparable  types:  int  and  JsonToken  [FE]                    JsonParseException      [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_tokenInputRow  ==  JsonToken.VALUE_NUMBER_INT)  {  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  return  _numberBinary;  }  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_tokenInputRow  ==  JsonToken.VALUE_NUMBER_INT)  {  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  return  _numberBinary;  }	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if((    _numTypesValid    &    NR_BIGINT)!=    0)    {    return    _numberBinary;    }    	non-compiled	[CE]  incomparable  types:  int  and  JsonToken	62	None	replace
196	[BUG]  [BUGGY]  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0  ||(_numTypesValid  &  NR_BIGINT)!=  0)  {  if((  _numTypesValid  &  NR_BIGDECIMAL)  >>  0  ||(_numTypesValid  &  NR_BIGINT)!=  0)  {  [CE]  ';'  expected  [FE]    JsonParseException    [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0  ||(_numTypesValid  &  NR_BIGINT)!=  0)  {  if((  _numTypesValid  &  NR_BIGDECIMAL)  >>  0  ||(_numTypesValid  &  NR_BIGINT)!=  0)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0    ||(_numTypesValid    &    NR_BIGINT)!=    0)    {    if((  _numTypesValid  &  NR_BIGDECIMAL)  >>  0  ||(_numTypesValid  &  NR_BIGINT)!=  0)  {	  	non-compiled	[CE]  ';'  expected	43	None	add
197	[BUG]  [BUGGY]  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0  ||(_numTypesValid  &  NR_BIGINT)!=  0)  {  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0  ||(_numTypesValid  &  NR_BIGINT)  >=  0)  {  [CE]  ';'  expected  [FE]      JsonParseException    [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0  ||(_numTypesValid  &  NR_BIGINT)!=  0)  {  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0  ||(_numTypesValid  &  NR_BIGINT)  >=  0)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0    ||(_numTypesValid    &    NR_BIGINT)!=    0)    {    if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0  ||(_numTypesValid  &  NR_BIGINT)  >=  0)  {	  	non-compiled	[CE]  ';'  expected	43	None	add
198	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_BIGINT  ||  _currToken  ==  JsonToken.VALUE_BIGINT)  {  [CE]  cannot  find  symbol  VALUE_BIGINT  [FE]    AssertionFailedError    [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_BIGINT  ||  _currToken  ==  JsonToken.VALUE_BIGINT)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_currToken  ==  JsonToken.VALUE_BIGINT  ||  _currToken  ==  JsonToken.VALUE_BIGINT)  {	  if(_currToken    ==    JsonToken.VALUE_NULL)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_BIGINT	20	None	replace
199	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_BIGINT  ||  _numTypesValid  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [CE]  cannot  find  symbol  VALUE_BIGINT  [FE]          JsonParseException      [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_BIGINT  ||  _numTypesValid  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_currToken  ==  JsonToken.VALUE_BIGINT  ||  _numTypesValid  ==  JsonToken.VALUE_NUMBER_FLOAT)  {	  if(_currToken    ==    JsonToken.VALUE_BIGINT)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_BIGINT	60	None	replace
200	[BUG]  [BUGGY]  if(_numTypesValid!=  BigDecimal.MIN_VALUE)  {  [CE]  cannot  find  symbol  MIN_VALUE  [FE]          JsonParseException      [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_numTypesValid!=  BigDecimal.MIN_VALUE)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_numTypesValid!=  BigDecimal.MIN_VALUE)  {	  if(_numTypesValid    ==    NR_BIGINT)    {    if(_numTypesValid!=    NR_BIGINT)    {    	non-compiled	[CE]  cannot  find  symbol  MIN_VALUE	6	None	replace
201	[BUG]  [BUGGY]  if(_numTypesValid  >=  BigDecimal.MIN_VALUE)  {  [CE]  cannot  find  symbol  MIN_VALUE  [FE]            JsonParseException      [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_numTypesValid  >=  BigDecimal.MIN_VALUE)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_numTypesValid  >=  BigDecimal.MIN_VALUE)  {	  if(_numTypesValid    ==    NR_BIGINT)    {    if(_numTypesValid    >=    NR_BIGINT)    {    	non-compiled	[CE]  cannot  find  symbol  MIN_VALUE	7	None	replace
202	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NUMBER_INT  ||  _currToken  ==  JsonToken.START_OBJECT)  {  [CE]  cannot  find  symbol  FIELD_NUMBER_INT  [FE]    JsonParseException    [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NUMBER_INT  ||  _currToken  ==  JsonToken.START_OBJECT)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_currToken  ==  JsonToken.FIELD_NUMBER_INT  ||  _currToken  ==  JsonToken.START_OBJECT)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.START_OBJECT)    {    	non-compiled	[CE]  cannot  find  symbol  FIELD_NUMBER_INT	47	None	replace
203	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_LONG)  {  [CE]  cannot  find  symbol  VALUE_NUMBER_LONG  [FE]        JsonParseException      [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_LONG)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_LONG)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_LONG	29	None	replace
204	[BUG]  [BUGGY]  if((  _numTypesValid  &  NR_BRIDGE)!=  0)  {  [CE]  cannot  find  symbol  NR_BRIDGE  [FE]        AssertionFailedError      [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if((  _numTypesValid  &  NR_BRIDGE)!=  0)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if((  _numTypesValid  &  NR_BRIDGE)!=  0)  {	  if((    _numTypesValid    &    NR_BUFFER)!=    0)    {    	non-compiled	[CE]  cannot  find  symbol  NR_BRIDGE	45	None	replace
205	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_BIGINT  ||  _numTypesValid  ==  NR_BIGINT)  {  if(_numTypesValid  ==  NR_BIGINT  ||  _numtypesValid  ==  NR_BIGINT)  {  [CE]  ';'  expected  [FE]    JsonParseException    [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_numTypesValid  ==  NR_BIGINT  ||  _numTypesValid  ==  NR_BIGINT)  {  if(_numTypesValid  ==  NR_BIGINT  ||  _numtypesValid  ==  NR_BIGINT)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_numTypesValid    ==    NR_BIGINT    ||    _numTypesValid    ==    NR_BIGINT)    {    if(_numTypesValid  ==  NR_BIGINT  ||  _numtypesValid  ==  NR_BIGINT)  {	  	non-compiled	[CE]  ';'  expected	13	None	add
206	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_numTypesValid!=  NR_BIGDECIMAL  ||  _numTypesValid  ==  NR_UNKNOWN)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	add	if(_numTypesValid!=  NR_BIGDECIMAL  ||  _numTypesValid  ==  NR_UNKNOWN)  {	  if(_numTypesValid!=    NR_BIGDECIMAL)    {    	compilable	  [FE]  JsonParseException  	53	8	replace
207	[BUG]  [BUGGY]  if(_numTypesValid!=  NR_BIGDECIMAL  ||  _numTypesValid  ==  NR_UNKNOWN)  {  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_numTypesValid!=  NR_BIGDECIMAL  ||  _numTypesValid  ==  NR_UNKNOWN)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_numTypesValid!=  NR_BIGDECIMAL  ||  _numTypesValid  ==  NR_UNKNOWN)  {	  if(_numTypesValid!=    NR_BIGDECIMAL)    {    	compilable	  [FE]  JsonParseException  	53	8	replace
208	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_numTypesValid!=  NR_BIGDECIMAL  ||  _numTypesValid  ==  NR_BIGINT)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	add	if(_numTypesValid!=  NR_BIGDECIMAL  ||  _numTypesValid  ==  NR_BIGINT)  {	  if(_numTypesValid!=    NR_BIGDECIMAL)    {    	compilable	  [FE]  JsonParseException  	53	8	replace
209	[BUG]  [BUGGY]  if(_numTypesValid!=  NR_BIGDECIMAL  ||  _numTypesValid  ==  NR_BIGINT)  {  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_numTypesValid!=  NR_BIGDECIMAL  ||  _numTypesValid  ==  NR_BIGINT)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_numTypesValid!=  NR_BIGDECIMAL  ||  _numTypesValid  ==  NR_BIGINT)  {	  if(_numTypesValid!=    NR_BIGDECIMAL)    {    	compilable	  [FE]  JsonParseException  	53	8	replace
210	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]            AssertionFailedError      [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0  ||(_numTypesValid  &  NR_BIGDECIMAL)  >=  0)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	add	if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0  ||(_numTypesValid  &  NR_BIGDECIMAL)  >=  0)  {	  if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0)    {    if((    _numTypesValid    &    NR_BIGDECIMAL)    >=    0)    {    	compilable	  [FE]  JsonParseException  	35	8	replace
211	[BUG]  [BUGGY]  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0  ||(_numTypesValid  &  NR_BIGDECIMAL)  >=  0)  {  [FE]  JsonParseException  [FE]            AssertionFailedError      [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0  ||(_numTypesValid  &  NR_BIGDECIMAL)  >=  0)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0  ||(_numTypesValid  &  NR_BIGDECIMAL)  >=  0)  {	  if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0)    {    if((    _numTypesValid    &    NR_BIGDECIMAL)    >=    0)    {    	compilable	  [FE]  JsonParseException  	35	8	replace
212	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]            AssertionFailedError      [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if((  _numTypesValid  &  NR_BIGDECIMAL)  >=  0)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	add	if((  _numTypesValid  &  NR_BIGDECIMAL)  >=  0)  {	  if((    _numTypesValid    &    NR_BIGINT)    ==    0)    {    if((    _numTypesValid    &    NR_BIGINT)    >=    0)    {    	compilable	  [FE]  JsonParseException  	39	8	replace
213	[BUG]  [BUGGY]  if((  _numTypesValid  &  NR_BIGDECIMAL)  >=  0)  {  [FE]  JsonParseException  [FE]            AssertionFailedError      [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if((  _numTypesValid  &  NR_BIGDECIMAL)  >=  0)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if((  _numTypesValid  &  NR_BIGDECIMAL)  >=  0)  {	  if((    _numTypesValid    &    NR_BIGINT)    ==    0)    {    if((    _numTypesValid    &    NR_BIGINT)    >=    0)    {    	compilable	  [FE]  JsonParseException  	39	8	replace
214	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          JsonParseException      [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	add	if(_currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {	  if(_currToken    ==    JsonToken.VALUE_BIGINT)    {    	compilable	  [FE]  AssertionFailedError  	60	8	replace
215	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [FE]  AssertionFailedError  [FE]          JsonParseException      [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {	  if(_currToken    ==    JsonToken.VALUE_BIGINT)    {    	compilable	  [FE]  AssertionFailedError  	60	8	replace
216	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _numTypesValid  ==  NR_BIGINT)  {  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  return  _numberInt;  }  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	add	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _numTypesValid  ==  NR_BIGINT)  {  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  return  _numberInt;  }	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if((    _numTypesValid    &    NR_BIGINT)!=    0)    {    return    _numberInt;    }    	compilable	  [FE]  AssertionFailedError  	58	8	replace
217	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _numTypesValid  ==  NR_BIGINT)  {  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  return  _numberInt;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _numTypesValid  ==  NR_BIGINT)  {  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  return  _numberInt;  }  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _numTypesValid  ==  NR_BIGINT)  {  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  return  _numberInt;  }	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if((    _numTypesValid    &    NR_BIGINT)!=    0)    {    return    _numberInt;    }    	compilable	  [FE]  AssertionFailedError  	58	8	replace
218	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  return  _numberInt;  }  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	add	if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  return  _numberInt;  }	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if((    _numTypesValid    &    NR_BIGINT)!=    0)    {    return    _numberInt;    }    	compilable	  [FE]  AssertionFailedError  	58	8	replace
219	[BUG]  [BUGGY]  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  return  _numberInt;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  return  _numberInt;  }  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  return  _numberInt;  }	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if((    _numTypesValid    &    NR_BIGINT)!=    0)    {    return    _numberInt;    }    	compilable	  [FE]  AssertionFailedError  	58	8	replace
220	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _numTypesValid  ==  NR_BIGINT)  {  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  return  _numberIn  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _numTypesValid  ==  NR_BIGINT)  {  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  return  _numberIn  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _numTypesValid  ==  NR_BIGINT)  {  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  return  _numberIn	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if((    _numTypesValid    &    NR_BIGINT)!=    0)    {    return    _numberInt;    }    	non-compiled	[CE]  ';'  expected	58	None	replace
221	[BUG]  [BUGGY]  if(_numTypesValid  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  return  _  [CE]  ';'  expected  [FE]                        JsonParseException      [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_numTypesValid  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  return  _  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_numTypesValid  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  return  _	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    return    _    	non-compiled	[CE]  ';'  expected	12	None	replace
222	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  return  _  [CE]  ';'  expected  [FE]                          JsonParseException      [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  return  _  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  return  _	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    return    _    	non-compiled	[CE]  ';'  expected	12	None	replace
223	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_ARRAY)  {  if(_currToken  >=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_ARRAY)  {  [CE]  ';'  expected  [FE]    JsonParseException    [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_ARRAY)  {  if(_currToken  >=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_ARRAY)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.END_ARRAY)    {    if(_currToken  >=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_ARRAY)  {	  	non-compiled	[CE]  ';'  expected	50	None	add
224	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_BUFFER  ||  _numTypesValid  ==  NR_BIGDECIMAL)  {  [CE]  cannot  find  symbol  NR_BUFFER  [FE]    JsonParseException    [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_numTypesValid  ==  NR_BUFFER  ||  _numTypesValid  ==  NR_BIGDECIMAL)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_numTypesValid  ==  NR_BUFFER  ||  _numTypesValid  ==  NR_BIGDECIMAL)  {	  if(_numTypesValid    ==    NR_BIGINT    ||    _numTypesValid    ==    NR_BIGDECIMAL)    {    	non-compiled	[CE]  cannot  find  symbol  NR_BUFFER	16	None	replace
225	[BUG]  [BUGGY]  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  return  _currInt;  }  [CE]  illegal  start  of  type  [FE]                    JsonParseException      [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  return  _currInt;  }  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  return  _currInt;  }	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_currToken!=    JsonToken.VALUE_NUMBER_INT)    {    return    _currToken;    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
226	[BUG]  [BUGGY]  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  return  _numberBigInt;  }  [CE]  illegal  start  of  type  [FE]                      JsonParseException      [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  return  _numberBigInt;  }  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  return  _numberBigInt;  }	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_currToken!=    JsonToken.VALUE_NUMBER_INT)    {    return    _currToken;    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
227	[BUG]  [BUGGY]  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  return  _numberBigDecimal;  }  [CE]  illegal  start  of  type  [FE]                        JsonParseException      [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  return  _numberBigDecimal;  }  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  return  _numberBigDecimal;  }	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_currToken!=    JsonToken.VALUE_NUMBER_INT)    {    return    _currToken;    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
228	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    AssertionFailedError    [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_FLOAT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	add	if(_currToken  ==  JsonToken.VALUE_NUMBER_FLOAT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {	  if(_currToken!=    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    	compilable	  [FE]  JsonParseException  	24	8	replace
229	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_FLOAT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  [FE]  JsonParseException  [FE]    AssertionFailedError    [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_FLOAT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_currToken  ==  JsonToken.VALUE_NUMBER_FLOAT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {	  if(_currToken!=    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    	compilable	  [FE]  JsonParseException  	24	8	replace
230	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INTEGER  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [CE]  cannot  find  symbol  VALUE_NUMBER_INTEGER  [FE]      AssertionFailedError    [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INTEGER  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_currToken  ==  JsonToken.VALUE_NUMBER_INTEGER  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {	  if(_currToken!=    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_INTEGER	24	None	replace
231	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  if(_currToken  >=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  [CE]  ';'  expected  [FE]    JsonParseException    [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  if(_currToken  >=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.END_OBJECT)    {    if(_currToken  >=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_OBJECT)  {	  	non-compiled	[CE]  ';'  expected	48	None	add
232	[BUG]  [BUGGY]  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _numTypesValid  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [CE]  incomparable  types:  int  and  JsonToken  [FE]        JsonParseException      [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _numTypesValid  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _numTypesValid  ==  JsonToken.VALUE_NUMBER_FLOAT)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _numTypesValid    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    	non-compiled	[CE]  incomparable  types:  int  and  JsonToken	59	None	replace
233	[BUG]  [BUGGY]  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  return  _numberBigDecimal;  }  [CE]  illegal  start  of  type  [FE]                    JsonParseException      [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  return  _numberBigDecimal;  }  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  return  _numberBigDecimal;  }	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if((    _numTypesValid    &    NR_BIGINT)!=    0)    {    return    _numberBinary;    }    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
234	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  return  _  [CE]  ';'  expected  [FE]                      JsonParseException      [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  return  _  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  return  _	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    return    _    	non-compiled	[CE]  ';'  expected	11	None	replace
235	[BUG]  [BUGGY]  if(_numTypesValid  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  return  _numberBigInt;  }  [CE]  illegal  start  of  type  [FE]                        JsonParseException      [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_numTypesValid  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  return  _numberBigInt;  }  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_numTypesValid  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  return  _numberBigInt;  }	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    return    _    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
236	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken  >=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [CE]  ';'  expected  [FE]    JsonParseException    [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken  >=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    if(_currToken  >=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {	  	non-compiled	[CE]  ';'  expected	25	None	add
237	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_BIGINT  ||  _numTypesValid  ==  NR_BIGDECIMAL)  {  if(_numTypesValid  ==  NR_BIGINT  ||  _numtypesValid  ==  NR_BIGDECIMAL)  {  [CE]  ';'  expected  [FE]    JsonParseException    [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_numTypesValid  ==  NR_BIGINT  ||  _numTypesValid  ==  NR_BIGDECIMAL)  {  if(_numTypesValid  ==  NR_BIGINT  ||  _numtypesValid  ==  NR_BIGDECIMAL)  {  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_numTypesValid    ==    NR_BIGINT    ||    _numTypesValid    ==    NR_BIGDECIMAL)    {    if(_numTypesValid  ==  NR_BIGINT  ||  _numtypesValid  ==  NR_BIGDECIMAL)  {	  	non-compiled	[CE]  ';'  expected	15	None	add
238	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]                    JsonParseException      [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {  return  _numberBigDecimal;  }  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	add	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {  return  _numberBigDecimal;  }	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if((    _numTypesValid    &    NR_BIGINT)!=    0)    {    return    _numberBIGINT;    }    	compilable	  [FE]  JsonParseException  	55	8	replace
239	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {  return  _numberBigDecimal;  }  [FE]  JsonParseException  [FE]                    JsonParseException      [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {  return  _numberBigDecimal;  }  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {  return  _numberBigDecimal;  }	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if((    _numTypesValid    &    NR_BIGINT)!=    0)    {    return    _numberBIGINT;    }    	compilable	  [FE]  JsonParseException  	55	8	replace
240	[BUG]  [BUGGY]  if(_numTypesValid  ==  JsonToken.VALUE_NUMBER_INT)  {  return  _numberBigInt;  }  [CE]  illegal  start  of  type  [FE]                      JsonParseException      [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_numTypesValid  ==  JsonToken.VALUE_NUMBER_INT)  {  return  _numberBigInt;  }  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_numTypesValid  ==  JsonToken.VALUE_NUMBER_INT)  {  return  _numberBigInt;  }	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_numTypesValid    ==    JsonToken.VALUE_NUMBER_INT)    {    return    _numberInt;    }    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
241	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _numTypesValid  ==  JsonToken.VALUE_NUMBER_INT)  {  return  _numberInt;  }  [CE]  illegal  start  of  type  [FE]                        JsonParseException      [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _numTypesValid  ==  JsonToken.VALUE_NUMBER_INT)  {  return  _numberInt;  }  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _numTypesValid  ==  JsonToken.VALUE_NUMBER_INT)  {  return  _numberInt;  }	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_numTypesValid    ==    JsonToken.VALUE_NUMBER_INT)    {    return    _numberInt;    }    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
242	[BUG]  [BUGGY]  if(_numTypesValid  ==  JsonToken.VALUE_NUMBER_INT)  {  return  _numberBigDecimal;  }  [CE]  illegal  start  of  type  [FE]                          JsonParseException      [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_numTypesValid  ==  JsonToken.VALUE_NUMBER_INT)  {  return  _numberBigDecimal;  }  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_numTypesValid  ==  JsonToken.VALUE_NUMBER_INT)  {  return  _numberBigDecimal;  }	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_numTypesValid    ==    JsonToken.VALUE_NUMBER_INT)    {    return    _numberInt;    }    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
243	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  return  _numberInt;  }  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if((  _numtypesValid  &  NR_BIGINT)!=  0)  {  return  _numberInt;  }  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  return  _numberInt;  }  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if((  _numtypesValid  &  NR_BIGINT)!=  0)  {  return  _numberInt;  }  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if((    _numTypesValid    &    NR_BIGINT)!=    0)    {    return    _numberInt;    }    if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if((  _numtypesValid  &  NR_BIGINT)!=  0)  {  return  _numberInt;  }	  	non-compiled	[CE]  ';'  expected	57	None	add
244	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]                  JsonParseException      [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _numTypesValid  ==  NR_BIGINT)  {  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  return  _numberBigInt;  }  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	add	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _numTypesValid  ==  NR_BIGINT)  {  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  return  _numberBigInt;  }	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if((    _numTypesValid    &    NR_BIGINT)!=    0)    {    return    _numberBoolean;    }    	compilable	  [FE]  JsonParseException  	54	8	replace
245	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _numTypesValid  ==  NR_BIGINT)  {  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  return  _numberBigInt;  }  [FE]  JsonParseException  [FE]                  JsonParseException      [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _numTypesValid  ==  NR_BIGINT)  {  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  return  _numberBigInt;  }  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _numTypesValid  ==  NR_BIGINT)  {  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  return  _numberBigInt;  }	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if((    _numTypesValid    &    NR_BIGINT)!=    0)    {    return    _numberBoolean;    }    	compilable	  [FE]  JsonParseException  	54	8	replace
246	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {  return  _numberBoolean;  }  [CE]  cannot  find  symbol  _numberBoolean  [FE]                    JsonParseException      [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {  return  _numberBoolean;  }  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {  return  _numberBoolean;  }	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if((    _numTypesValid    &    NR_BIGINT)!=    0)    {    return    _numberBoolean;    }    	non-compiled	[CE]  cannot  find  symbol  _numberBoolean	54	None	replace
247	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  return  _numberBigDecimal;  }  [CE]  illegal  start  of  type  [FE]                  JsonParseException      [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  return  _numberBigDecimal;  }  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  return  _numberBigDecimal;  }	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    return    _currToken;    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
248	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  return  _numberBigInt;  }  [CE]  illegal  start  of  type  [FE]                    JsonParseException      [CONTEXT]      _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  return  _numberBigInt;  }  [BUGGY]      return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  return  _numberBigInt;  }	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    return    _currToken;    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
