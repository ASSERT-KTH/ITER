bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(_numTypesValid!=  NR_BIGINT)  {  if(_numTypesValid!=  NR_BIGINT)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]    _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }    [BUGGY]  if(_numTypesValid!=  NR_BIGINT)  {  if(_numTypesValid!=  NR_BIGINT)  {  [BUGGY]    return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_numTypesValid!=    NR_BIGINT)    {    if(_numTypesValid!=  NR_BIGINT)  {	  	non-compiled	[CE]  ';'  expected	5	None	add
2	[BUG]  [BUGGY]  if(_numTypesValid!=  NR_BIGINT)  {  if(_numTypesValid  >=  NR_BIGINT)  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]    _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }    [BUGGY]  if(_numTypesValid!=  NR_BIGINT)  {  if(_numTypesValid  >=  NR_BIGINT)  {  [BUGGY]    return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_numTypesValid!=    NR_BIGINT)    {    if(_numTypesValid  >=  NR_BIGINT)  {	  	non-compiled	[CE]  ';'  expected	5	None	add
3	[BUG]  [BUGGY]  if(_numTypesValid!=  NR_BIGINT)  {  if(_numTypesValid  >>  NR_BIGINT)  {  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }    [BUGGY]  if(_numTypesValid!=  NR_BIGINT)  {  if(_numTypesValid  >>  NR_BIGINT)  {  [BUGGY]    return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_numTypesValid!=    NR_BIGINT)    {    if(_numTypesValid  >>  NR_BIGINT)  {	  	non-compiled	[CE]  ';'  expected	5	None	add
4	[BUG]  [BUGGY]  if(_numTypesValid!=  NR_BIGINT)  {  if(_numTypesValid  ==  NR_BIGINT)  {  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }    [BUGGY]  if(_numTypesValid!=  NR_BIGINT)  {  if(_numTypesValid  ==  NR_BIGINT)  {  [BUGGY]    return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_numTypesValid!=    NR_BIGINT)    {    if(_numTypesValid  ==  NR_BIGINT)  {	  	non-compiled	[CE]  ';'  expected	5	None	add
5	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_BIGINT)  {  if(_numTypesValid  ==  NR_BIGINT)  {  [CE]  ';'  expected  [FE]    JsonParseException    [CONTEXT]    _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }    [BUGGY]  if(_numTypesValid  ==  NR_BIGINT)  {  if(_numTypesValid  ==  NR_BIGINT)  {  [BUGGY]    return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_numTypesValid    ==    NR_BIGINT)    {    if(_numTypesValid  ==  NR_BIGINT)  {	  	non-compiled	[CE]  ';'  expected	1	None	add
6	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_BIGINT)  {  if(_numTypesValid!=  NR_BIGINT)  {  [CE]  ';'  expected  [FE]      JsonParseException    [CONTEXT]    _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }    [BUGGY]  if(_numTypesValid  ==  NR_BIGINT)  {  if(_numTypesValid!=  NR_BIGINT)  {  [BUGGY]    return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_numTypesValid    ==    NR_BIGINT)    {    if(_numTypesValid!=  NR_BIGINT)  {	  	non-compiled	[CE]  ';'  expected	1	None	add
7	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_BIGINT)  {  if(_numTypesValid  >=  NR_BIGINT)  {  [CE]  ';'  expected  [FE]        JsonParseException    [CONTEXT]    _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }    [BUGGY]  if(_numTypesValid  ==  NR_BIGINT)  {  if(_numTypesValid  >=  NR_BIGINT)  {  [BUGGY]    return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_numTypesValid    ==    NR_BIGINT)    {    if(_numTypesValid  >=  NR_BIGINT)  {	  	non-compiled	[CE]  ';'  expected	1	None	add
8	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_BIGINT)  {  If(_numTypesValid  ==  NR_BIGINT)  {  [CE]  ';'  expected  [FE]          JsonParseException    [CONTEXT]    _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }    [BUGGY]  if(_numTypesValid  ==  NR_BIGINT)  {  If(_numTypesValid  ==  NR_BIGINT)  {  [BUGGY]    return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_numTypesValid    ==    NR_BIGINT)    {    If(_numTypesValid  ==  NR_BIGINT)  {	  	non-compiled	[CE]  ';'  expected	1	None	add
9	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  return  _currToken;  }  [CE]  incompatible  types  [FE]              JsonParseException    [CONTEXT]    _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }    [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  return  _currToken;  }  [BUGGY]    return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  return  _currToken;  }	      	non-compiled	[CE]  incompatible  types	7	None	replace
10	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  return  _currToken;  }  [CE]  incompatible  types  [FE]                JsonParseException    [CONTEXT]    _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }    [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  return  _currToken;  }  [BUGGY]    return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  return  _currToken;  }	      	non-compiled	[CE]  incompatible  types	7	None	replace
11	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  return  _  [CE]  ';'  expected  [FE]                  JsonParseException    [CONTEXT]    _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }    [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  return  _  [BUGGY]    return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  return  _	      	non-compiled	[CE]  ';'  expected	7	None	replace
12	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  return  _  [CE]  ';'  expected  [FE]                    JsonParseException    [CONTEXT]    _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }    [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  return  _  [BUGGY]    return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  return  _	      	non-compiled	[CE]  ';'  expected	7	None	replace
13	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]    _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }    [BUGGY]  if(_numTypesValid  ==  NR_BIGINT  ||  _numTypesValid  ==  NR_BIGINT)  {  [BUGGY]    return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	add	if(_numTypesValid  ==  NR_BIGINT  ||  _numTypesValid  ==  NR_BIGINT)  {	  if(_numTypesValid    ==    NR_BIGINT)    {    	compilable	  [FE]  JsonParseException  	2	8	replace
14	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_BIGINT  ||  _numTypesValid  ==  NR_BIGINT)  {  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]    _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }    [BUGGY]  if(_numTypesValid  ==  NR_BIGINT  ||  _numTypesValid  ==  NR_BIGINT)  {  [BUGGY]    return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_numTypesValid  ==  NR_BIGINT  ||  _numTypesValid  ==  NR_BIGINT)  {	  if(_numTypesValid    ==    NR_BIGINT)    {    	compilable	  [FE]  JsonParseException  	2	8	replace
15	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]    _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }    [BUGGY]  if(_numTypesValid  ==  NR_BIGINT  ||  _numTypesValid  ==  NR_BIGDECIMAL)  {  [BUGGY]    return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	add	if(_numTypesValid  ==  NR_BIGINT  ||  _numTypesValid  ==  NR_BIGDECIMAL)  {	  if(_numTypesValid    ==    NR_BIGINT)    {    	compilable	  [FE]  JsonParseException  	2	8	replace
16	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_BIGINT  ||  _numTypesValid  ==  NR_BIGDECIMAL)  {  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]    _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }    [BUGGY]  if(_numTypesValid  ==  NR_BIGINT  ||  _numTypesValid  ==  NR_BIGDECIMAL)  {  [BUGGY]    return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_numTypesValid  ==  NR_BIGINT  ||  _numTypesValid  ==  NR_BIGDECIMAL)  {	  if(_numTypesValid    ==    NR_BIGINT)    {    	compilable	  [FE]  JsonParseException  	2	8	replace
17	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]        JsonParseException    [CONTEXT]    _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }    [BUGGY]  if(_numTypesValid  ==  NR_BIGINT  ||  _numTypesValid  ==  NR_UNKNOWN)  {  [BUGGY]    return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	add	if(_numTypesValid  ==  NR_BIGINT  ||  _numTypesValid  ==  NR_UNKNOWN)  {	  if(_numTypesValid    ==    NR_BIGINT)    {    	compilable	  [FE]  JsonParseException  	2	8	replace
18	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_BIGINT  ||  _numTypesValid  ==  NR_UNKNOWN)  {  [FE]  JsonParseException  [FE]        JsonParseException    [CONTEXT]    _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }    [BUGGY]  if(_numTypesValid  ==  NR_BIGINT  ||  _numTypesValid  ==  NR_UNKNOWN)  {  [BUGGY]    return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_numTypesValid  ==  NR_BIGINT  ||  _numTypesValid  ==  NR_UNKNOWN)  {	  if(_numTypesValid    ==    NR_BIGINT)    {    	compilable	  [FE]  JsonParseException  	2	8	replace
19	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    JsonParseException    [CONTEXT]    _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }    [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL)  {  [BUGGY]    return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	add	if(_currToken  ==  JsonToken.VALUE_NULL)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    	compilable	  [FE]  AssertionFailedError  	9	8	replace
20	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL)  {  [FE]  AssertionFailedError  [FE]    JsonParseException    [CONTEXT]    _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }    [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL)  {  [BUGGY]    return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_currToken  ==  JsonToken.VALUE_NULL)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    	compilable	  [FE]  AssertionFailedError  	9	8	replace
21	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]    _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }    [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]    return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	add	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    	compilable	  [FE]  JsonParseException  	9	8	replace
22	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]    _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }    [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]    return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    	compilable	  [FE]  JsonParseException  	9	8	replace
23	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        JsonParseException    [CONTEXT]    _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }    [BUGGY]  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]    return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	add	if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    	compilable	  [FE]  AssertionFailedError  	9	8	replace
24	[BUG]  [BUGGY]  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [FE]  AssertionFailedError  [FE]        JsonParseException    [CONTEXT]    _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }    [BUGGY]  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]    return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    	compilable	  [FE]  AssertionFailedError  	9	8	replace
25	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]          JsonParseException    [CONTEXT]    _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }    [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [BUGGY]    return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	add	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    	compilable	  [FE]  JsonParseException  	9	8	replace
26	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [FE]  JsonParseException  [FE]          JsonParseException    [CONTEXT]    _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }    [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [BUGGY]    return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    	compilable	  [FE]  JsonParseException  	9	8	replace
27	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    AssertionFailedError    [CONTEXT]    _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }    [BUGGY]  if(_numTypesValid!=  NR_BIGINT  ||  _numTypesValid  ==  NR_BIGINT)  {  [BUGGY]    return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	add	if(_numTypesValid!=  NR_BIGINT  ||  _numTypesValid  ==  NR_BIGINT)  {	  if(_numTypesValid!=    NR_BIGINT)    {    	compilable	  [FE]  JsonParseException  	6	8	replace
28	[BUG]  [BUGGY]  if(_numTypesValid!=  NR_BIGINT  ||  _numTypesValid  ==  NR_BIGINT)  {  [FE]  JsonParseException  [FE]    AssertionFailedError    [CONTEXT]    _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }    [BUGGY]  if(_numTypesValid!=  NR_BIGINT  ||  _numTypesValid  ==  NR_BIGINT)  {  [BUGGY]    return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_numTypesValid!=  NR_BIGINT  ||  _numTypesValid  ==  NR_BIGINT)  {	  if(_numTypesValid!=    NR_BIGINT)    {    	compilable	  [FE]  JsonParseException  	6	8	replace
29	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  [CE]  ';'  expected  [FE]    JsonParseException    [CONTEXT]    _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }    [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  [BUGGY]    return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {	  	non-compiled	[CE]  ';'  expected	8	None	add
30	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  [CE]  ';'  expected  [FE]      JsonParseException    [CONTEXT]    _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }    [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  [BUGGY]    return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {	  	non-compiled	[CE]  ';'  expected	8	None	add
31	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_currToken  >=  JsonToken.VALUE_NUMBER_INT)  {  [CE]  ';'  expected  [FE]        JsonParseException    [CONTEXT]    _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }    [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_currToken  >=  JsonToken.VALUE_NUMBER_INT)  {  [BUGGY]    return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_currToken  >=  JsonToken.VALUE_NUMBER_INT)  {	  	non-compiled	[CE]  ';'  expected	8	None	add
32	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  If(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  [CE]  ';'  expected  [FE]          JsonParseException    [CONTEXT]    _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }    [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  If(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  [BUGGY]    return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    If(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {	  	non-compiled	[CE]  ';'  expected	8	None	add
33	[BUG]  [BUGGY]  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]    _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }    [BUGGY]  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {  [BUGGY]    return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0)    {    if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {	  	non-compiled	[CE]  ';'  expected	3	None	add
34	[BUG]  [BUGGY]  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]    _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }    [BUGGY]  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {  [BUGGY]    return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0)    {    if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {	  	non-compiled	[CE]  ';'  expected	3	None	add
35	[BUG]  [BUGGY]  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {  if((  _numTypesValid  &  NR_BIGDECIMAL)  >=  0)  {  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }    [BUGGY]  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {  if((  _numTypesValid  &  NR_BIGDECIMAL)  >=  0)  {  [BUGGY]    return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0)    {    if((  _numTypesValid  &  NR_BIGDECIMAL)  >=  0)  {	  	non-compiled	[CE]  ';'  expected	3	None	add
36	[BUG]  [BUGGY]  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {  if((  _numTypesValid  &  NR_BIGDECIMAL)  >>  0)  {  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }    [BUGGY]  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {  if((  _numTypesValid  &  NR_BIGDECIMAL)  >>  0)  {  [BUGGY]    return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0)    {    if((  _numTypesValid  &  NR_BIGDECIMAL)  >>  0)  {	  	non-compiled	[CE]  ';'  expected	3	None	add
37	[BUG]  [BUGGY]  if((  _numTypesValid  &  NR_BIGINT)  ==  0)  {  if((  _numTypesValid  &  NR_BIGINT)  ==  0)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]    _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }    [BUGGY]  if((  _numTypesValid  &  NR_BIGINT)  ==  0)  {  if((  _numTypesValid  &  NR_BIGINT)  ==  0)  {  [BUGGY]    return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if((    _numTypesValid    &    NR_BIGINT)    ==    0)    {    if((  _numTypesValid  &  NR_BIGINT)  ==  0)  {	  	non-compiled	[CE]  ';'  expected	10	None	add
38	[BUG]  [BUGGY]  if((  _numTypesValid  &  NR_BIGINT)  ==  0)  {  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]    _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }    [BUGGY]  if((  _numTypesValid  &  NR_BIGINT)  ==  0)  {  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  [BUGGY]    return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if((    _numTypesValid    &    NR_BIGINT)    ==    0)    {    if((  _numTypesValid  &  NR_BIGINT)!=  0)  {	  	non-compiled	[CE]  ';'  expected	10	None	add
39	[BUG]  [BUGGY]  if((  _numTypesValid  &  NR_BIGINT)  ==  0)  {  if((  _numTypesValid  &  NR_BIGINT)  >=  0)  {  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }    [BUGGY]  if((  _numTypesValid  &  NR_BIGINT)  ==  0)  {  if((  _numTypesValid  &  NR_BIGINT)  >=  0)  {  [BUGGY]    return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if((    _numTypesValid    &    NR_BIGINT)    ==    0)    {    if((  _numTypesValid  &  NR_BIGINT)  >=  0)  {	  	non-compiled	[CE]  ';'  expected	10	None	add
40	[BUG]  [BUGGY]  if((  _numTypesValid  &  NR_BIGINT)  ==  0)  {  If((  _numTypesValid  &  NR_BIGINT)  ==  0)  {  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }    [BUGGY]  if((  _numTypesValid  &  NR_BIGINT)  ==  0)  {  If((  _numTypesValid  &  NR_BIGINT)  ==  0)  {  [BUGGY]    return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if((    _numTypesValid    &    NR_BIGINT)    ==    0)    {    If((  _numTypesValid  &  NR_BIGINT)  ==  0)  {	  	non-compiled	[CE]  ';'  expected	10	None	add
41	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    AssertionFailedError    [CONTEXT]    _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }    [BUGGY]  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {  [BUGGY]    return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	add	if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {	  if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0)    {    	compilable	  [FE]  JsonParseException  	4	8	replace
42	[BUG]  [BUGGY]  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {  [FE]  JsonParseException  [FE]    AssertionFailedError    [CONTEXT]    _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }    [BUGGY]  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {  [BUGGY]    return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {	  if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0)    {    	compilable	  [FE]  JsonParseException  	4	8	replace
43	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]      AssertionFailedError    [CONTEXT]    _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }    [BUGGY]  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0  ||(_numTypesValid  &  NR_BIGINT)!=  0)  {  [BUGGY]    return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	add	if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0  ||(_numTypesValid  &  NR_BIGINT)!=  0)  {	  if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0)    {    	compilable	  [FE]  JsonParseException  	4	8	replace
44	[BUG]  [BUGGY]  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0  ||(_numTypesValid  &  NR_BIGINT)!=  0)  {  [FE]  JsonParseException  [FE]      AssertionFailedError    [CONTEXT]    _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }    [BUGGY]  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0  ||(_numTypesValid  &  NR_BIGINT)!=  0)  {  [BUGGY]    return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0  ||(_numTypesValid  &  NR_BIGINT)!=  0)  {	  if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0)    {    	compilable	  [FE]  JsonParseException  	4	8	replace
45	[BUG]  [BUGGY]  if((  _numTypesValid  &  NR_BUFFER)!=  0)  {  [CE]  cannot  find  symbol  NR_BUFFER  [FE]    AssertionFailedError    [CONTEXT]    _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }    [BUGGY]  if((  _numTypesValid  &  NR_BUFFER)!=  0)  {  [BUGGY]    return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if((  _numTypesValid  &  NR_BUFFER)!=  0)  {	  if((    _numTypesValid    &    NR_BIGINT)    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol  NR_BUFFER	11	None	replace
46	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]    _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }    [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_OBJECT)  {  [BUGGY]    return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	add	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_OBJECT)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    	compilable	  [FE]  JsonParseException  	9	8	replace
47	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_OBJECT)  {  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]    _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }    [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_OBJECT)  {  [BUGGY]    return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_OBJECT)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    	compilable	  [FE]  JsonParseException  	9	8	replace
48	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]    _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }    [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  [BUGGY]    return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	add	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_OBJECT)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    	compilable	  [FE]  JsonParseException  	9	8	replace
49	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]    _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }    [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  [BUGGY]    return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_OBJECT)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    	compilable	  [FE]  JsonParseException  	9	8	replace
50	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]        JsonParseException    [CONTEXT]    _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }    [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_ARRAY)  {  [BUGGY]    return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	add	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_ARRAY)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    	compilable	  [FE]  JsonParseException  	9	8	replace
51	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_ARRAY)  {  [FE]  JsonParseException  [FE]        JsonParseException    [CONTEXT]    _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }    [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_ARRAY)  {  [BUGGY]    return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_ARRAY)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    	compilable	  [FE]  JsonParseException  	9	8	replace
52	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    AssertionFailedError    [CONTEXT]    _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }    [BUGGY]  if(_numTypesValid!=  NR_BIGDECIMAL)  {  [BUGGY]    return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	add	if(_numTypesValid!=  NR_BIGDECIMAL)  {	  if(_numTypesValid!=    NR_BIGINT)    {    	compilable	  [FE]  JsonParseException  	6	8	replace
53	[BUG]  [BUGGY]  if(_numTypesValid!=  NR_BIGDECIMAL)  {  [FE]  JsonParseException  [FE]    AssertionFailedError    [CONTEXT]    _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }    [BUGGY]  if(_numTypesValid!=  NR_BIGDECIMAL)  {  [BUGGY]    return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_numTypesValid!=  NR_BIGDECIMAL)  {	  if(_numTypesValid!=    NR_BIGINT)    {    	compilable	  [FE]  JsonParseException  	6	8	replace
54	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  return  _numberBoolean;  }  [CE]  cannot  find  symbol  _numberBoolean  [FE]              JsonParseException    [CONTEXT]    _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }    [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  return  _numberBoolean;  }  [BUGGY]    return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  return  _numberBoolean;  }	      	non-compiled	[CE]  cannot  find  symbol  _numberBoolean	7	None	replace
55	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  return  _numberBIGINT;  }  [CE]  cannot  find  symbol  _numberBIGINT  [FE]                JsonParseException    [CONTEXT]    _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }    [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  return  _numberBIGINT;  }  [BUGGY]    return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  return  _numberBIGINT;  }	      	non-compiled	[CE]  cannot  find  symbol  _numberBIGINT	7	None	replace
56	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_numTypesValid  ==  JsonToken.VALUE_NUMBER_INT)  {  return  _numberInt;  }  [CE]  incomparable  types:  int  and  JsonToken  [FE]                  JsonParseException    [CONTEXT]    _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }    [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_numTypesValid  ==  JsonToken.VALUE_NUMBER_INT)  {  return  _numberInt;  }  [BUGGY]    return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_numTypesValid  ==  JsonToken.VALUE_NUMBER_INT)  {  return  _numberInt;  }	      	non-compiled	[CE]  incomparable  types:  int  and  JsonToken	7	None	replace
57	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                    JsonParseException    [CONTEXT]    _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }    [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  return  _numberInt;  }  [BUGGY]    return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	add	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  return  _numberInt;  }	      	compilable	  [FE]  AssertionFailedError  	7	8	replace
58	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  return  _numberInt;  }  [FE]  AssertionFailedError  [FE]                    JsonParseException    [CONTEXT]    _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }    [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  return  _numberInt;  }  [BUGGY]    return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  return  _numberInt;  }	      	compilable	  [FE]  AssertionFailedError  	7	8	replace
59	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _numTypesValid  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [CE]  incomparable  types:  int  and  JsonToken  [FE]    JsonParseException    [CONTEXT]    _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }    [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _numTypesValid  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]    return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _numTypesValid  ==  JsonToken.VALUE_NUMBER_FLOAT)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    	non-compiled	[CE]  incomparable  types:  int  and  JsonToken	9	None	replace
60	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_BIGINT)  {  [CE]  cannot  find  symbol  VALUE_BIGINT  [FE]      JsonParseException    [CONTEXT]    _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }    [BUGGY]  if(_currToken  ==  JsonToken.VALUE_BIGINT)  {  [BUGGY]    return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_currToken  ==  JsonToken.VALUE_BIGINT)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_BIGINT	9	None	replace
61	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  return  _numberByte;  }  [CE]  cannot  find  symbol  _numberByte  [FE]              JsonParseException    [CONTEXT]    _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }    [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  return  _numberByte;  }  [BUGGY]    return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  return  _numberByte;  }	      	non-compiled	[CE]  cannot  find  symbol  _numberByte	7	None	replace
62	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  return  _numberBinary;  }  [CE]  cannot  find  symbol  _numberBinary  [FE]                JsonParseException    [CONTEXT]    _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }    [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  return  _numberBinary;  }  [BUGGY]    return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  return  _numberBinary;  }	      	non-compiled	[CE]  cannot  find  symbol  _numberBinary	7	None	replace
63	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }    [BUGGY]  if(_numTypesValid!=  NR_BIGINT  ||  _numTypesValid  ==  NR_BIGDECIMAL)  {  [BUGGY]    return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	add	if(_numTypesValid!=  NR_BIGINT  ||  _numTypesValid  ==  NR_BIGDECIMAL)  {	  if(_numTypesValid!=    NR_BIGINT)    {    	compilable	  [FE]  AssertionFailedError  	6	8	replace
64	[BUG]  [BUGGY]  if(_numTypesValid!=  NR_BIGINT  ||  _numTypesValid  ==  NR_BIGDECIMAL)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }    [BUGGY]  if(_numTypesValid!=  NR_BIGINT  ||  _numTypesValid  ==  NR_BIGDECIMAL)  {  [BUGGY]    return  _numberBigInt;  }  return  _numberBigDecimal;  }    if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	594	594	8	replace	if(_numTypesValid!=  NR_BIGINT  ||  _numTypesValid  ==  NR_BIGDECIMAL)  {	  if(_numTypesValid!=    NR_BIGINT)    {    	compilable	  [FE]  AssertionFailedError  	6	8	replace
