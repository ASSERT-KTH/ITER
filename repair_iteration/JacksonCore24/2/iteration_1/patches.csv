bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]        JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();    [BUGGY]  if(rawLen  ==  1000)  {  [BUGGY]    return  rawNum;  }  if  (rawNum.startsWith(   "-   "))  {  rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	add	if(rawLen  ==  1000)  {	  if(rawLen    <    =    1000)    {    	compilable	  [FE]  JsonParseException  	1	8	replace
2	[BUG]  [BUGGY]  if(rawLen  ==  1000)  {  [FE]  JsonParseException  [FE]        JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();    [BUGGY]  if(rawLen  ==  1000)  {  [BUGGY]    return  rawNum;  }  if  (rawNum.startsWith(   "-   "))  {  rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen  ==  1000)  {	  if(rawLen    <    =    1000)    {    	compilable	  [FE]  JsonParseException  	1	8	replace
3	[BUG]  [BUGGY]  if(rawLen  <  =  1)  {  [CE]  illegal  start  of  expression  [FE]          JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();    [BUGGY]  if(rawLen  <  =  1)  {  [BUGGY]    return  rawNum;  }  if  (rawNum.startsWith(   "-   "))  {  rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen  <  =  1)  {	  if(rawLen    <    =    1000)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
4	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]        JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();    [BUGGY]  if(rawLen  ==  MAX_ERROR_TOKEN_LENGTH)  {  [BUGGY]    return  rawNum;  }  if  (rawNum.startsWith(   "-   "))  {  rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	add	if(rawLen  ==  MAX_ERROR_TOKEN_LENGTH)  {	  if(rawLen    <    =    MAX_ERROR_TOKEN_LENGTH)    {    	compilable	  [FE]  JsonParseException  	5	8	replace
5	[BUG]  [BUGGY]  if(rawLen  ==  MAX_ERROR_TOKEN_LENGTH)  {  [FE]  JsonParseException  [FE]        JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();    [BUGGY]  if(rawLen  ==  MAX_ERROR_TOKEN_LENGTH)  {  [BUGGY]    return  rawNum;  }  if  (rawNum.startsWith(   "-   "))  {  rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen  ==  MAX_ERROR_TOKEN_LENGTH)  {	  if(rawLen    <    =    MAX_ERROR_TOKEN_LENGTH)    {    	compilable	  [FE]  JsonParseException  	5	8	replace
6	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]          JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();    [BUGGY]  if(rawLen  <  MAX_ERROR_TOKEN_LENGTH  ||  rawLen  >  MAX_ERROR_TOKEN_LENGTH)  {  [BUGGY]    return  rawNum;  }  if  (rawNum.startsWith(   "-   "))  {  rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	add	if(rawLen  <  MAX_ERROR_TOKEN_LENGTH  ||  rawLen  >  MAX_ERROR_TOKEN_LENGTH)  {	  if(rawLen    <    =    MAX_ERROR_TOKEN_LENGTH)    {    	compilable	  [FE]  JsonParseException  	5	8	replace
7	[BUG]  [BUGGY]  if(rawLen  <  MAX_ERROR_TOKEN_LENGTH  ||  rawLen  >  MAX_ERROR_TOKEN_LENGTH)  {  [FE]  JsonParseException  [FE]          JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();    [BUGGY]  if(rawLen  <  MAX_ERROR_TOKEN_LENGTH  ||  rawLen  >  MAX_ERROR_TOKEN_LENGTH)  {  [BUGGY]    return  rawNum;  }  if  (rawNum.startsWith(   "-   "))  {  rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen  <  MAX_ERROR_TOKEN_LENGTH  ||  rawLen  >  MAX_ERROR_TOKEN_LENGTH)  {	  if(rawLen    <    =    MAX_ERROR_TOKEN_LENGTH)    {    	compilable	  [FE]  JsonParseException  	5	8	replace
8	[BUG]  [BUGGY]  if(rawLen  <  =  MAX_ERROR_TOKEN_LENGTH  ||  rawLen  >  MAX_ERROR_TOKEN_LENGTH)  {  [CE]  illegal  start  of  expression  [FE]            JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();    [BUGGY]  if(rawLen  <  =  MAX_ERROR_TOKEN_LENGTH  ||  rawLen  >  MAX_ERROR_TOKEN_LENGTH)  {  [BUGGY]    return  rawNum;  }  if  (rawNum.startsWith(   "-   "))  {  rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen  <  =  MAX_ERROR_TOKEN_LENGTH  ||  rawLen  >  MAX_ERROR_TOKEN_LENGTH)  {	  if(rawLen    <    =    MAX_ERROR_TOKEN_LENGTH)    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
9	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]              JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();    [BUGGY]  if(rawLen  >=  MAX_ERROR_TOKEN_LENGTH)  {  [BUGGY]    return  rawNum;  }  if  (rawNum.startsWith(   "-   "))  {  rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	add	if(rawLen  >=  MAX_ERROR_TOKEN_LENGTH)  {	  if(rawLen    <    =    MAX_ERROR_TOKEN_LENGTH)    {    	compilable	  [FE]  JsonParseException  	5	8	replace
10	[BUG]  [BUGGY]  if(rawLen  >=  MAX_ERROR_TOKEN_LENGTH)  {  [FE]  JsonParseException  [FE]              JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();    [BUGGY]  if(rawLen  >=  MAX_ERROR_TOKEN_LENGTH)  {  [BUGGY]    return  rawNum;  }  if  (rawNum.startsWith(   "-   "))  {  rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen  >=  MAX_ERROR_TOKEN_LENGTH)  {	  if(rawLen    <    =    MAX_ERROR_TOKEN_LENGTH)    {    	compilable	  [FE]  JsonParseException  	5	8	replace
11	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();    [BUGGY]  if(rawLen  ==  1)  {  [BUGGY]    return  rawNum;  }  if  (rawNum.startsWith(   "-   "))  {  rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	add	if(rawLen  ==  1)  {	  if(rawLen    <    1)    {    	compilable	  [FE]  JsonParseException  	3	8	replace
12	[BUG]  [BUGGY]  if(rawLen  ==  1)  {  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();    [BUGGY]  if(rawLen  ==  1)  {  [BUGGY]    return  rawNum;  }  if  (rawNum.startsWith(   "-   "))  {  rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen  ==  1)  {	  if(rawLen    <    1)    {    	compilable	  [FE]  JsonParseException  	3	8	replace
13	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();    [BUGGY]  if(rawLen  >  0)  {  [BUGGY]    return  rawNum;  }  if  (rawNum.startsWith(   "-   "))  {  rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	add	if(rawLen  >  0)  {	  if(rawLen    <    1)    {    	compilable	  [FE]  JsonParseException  	3	8	replace
14	[BUG]  [BUGGY]  if(rawLen  >  0)  {  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();    [BUGGY]  if(rawLen  >  0)  {  [BUGGY]    return  rawNum;  }  if  (rawNum.startsWith(   "-   "))  {  rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen  >  0)  {	  if(rawLen    <    1)    {    	compilable	  [FE]  JsonParseException  	3	8	replace
15	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]        JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();    [BUGGY]  if(rawLen  >=  1)  {  [BUGGY]    return  rawNum;  }  if  (rawNum.startsWith(   "-   "))  {  rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	add	if(rawLen  >=  1)  {	  if(rawLen    <    1)    {    	compilable	  [FE]  JsonParseException  	3	8	replace
16	[BUG]  [BUGGY]  if(rawLen  >=  1)  {  [FE]  JsonParseException  [FE]        JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();    [BUGGY]  if(rawLen  >=  1)  {  [BUGGY]    return  rawNum;  }  if  (rawNum.startsWith(   "-   "))  {  rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen  >=  1)  {	  if(rawLen    <    1)    {    	compilable	  [FE]  JsonParseException  	3	8	replace
17	[BUG]  [BUGGY]  if(rawLen  >=  0)  {  if(rawLen  >=  0)  {  [CE]  illegal  start  of  expression  [FE]    JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();    [BUGGY]  if(rawLen  >=  0)  {  if(rawLen  >=  0)  {  [BUGGY]    return  rawNum;  }  if  (rawNum.startsWith(   "-   "))  {  rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen    >=    0)    {    if(rawLen  >=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
18	[BUG]  [BUGGY]  if(rawLen  >=  0)  {  if(rawLen!=  0)  {  [CE]  illegal  start  of  expression  [FE]      JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();    [BUGGY]  if(rawLen  >=  0)  {  if(rawLen!=  0)  {  [BUGGY]    return  rawNum;  }  if  (rawNum.startsWith(   "-   "))  {  rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen    >=    0)    {    if(rawLen!=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
19	[BUG]  [BUGGY]  if(rawLen  >=  0)  {  if(rawLen  >>  0)  {  [CE]  illegal  start  of  expression  [FE]        JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();    [BUGGY]  if(rawLen  >=  0)  {  if(rawLen  >>  0)  {  [BUGGY]    return  rawNum;  }  if  (rawNum.startsWith(   "-   "))  {  rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen    >=    0)    {    if(rawLen  >>  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
20	[BUG]  [BUGGY]  if(rawLen  >=  0)  {  if(rawLen  ==  0)  {  [CE]  illegal  start  of  expression  [FE]          JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();    [BUGGY]  if(rawLen  >=  0)  {  if(rawLen  ==  0)  {  [BUGGY]    return  rawNum;  }  if  (rawNum.startsWith(   "-   "))  {  rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen    >=    0)    {    if(rawLen  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
21	[BUG]  [BUGGY]  if(rawLen  ==  0)  {  if(rawLen  ==  0)  {  [CE]  illegal  start  of  expression  [FE]    JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();    [BUGGY]  if(rawLen  ==  0)  {  if(rawLen  ==  0)  {  [BUGGY]    return  rawNum;  }  if  (rawNum.startsWith(   "-   "))  {  rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen    ==    0)    {    if(rawLen  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
22	[BUG]  [BUGGY]  if(rawLen  ==  0)  {  if(rawLen!=  0)  {  [CE]  illegal  start  of  expression  [FE]      JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();    [BUGGY]  if(rawLen  ==  0)  {  if(rawLen!=  0)  {  [BUGGY]    return  rawNum;  }  if  (rawNum.startsWith(   "-   "))  {  rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen    ==    0)    {    if(rawLen!=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
23	[BUG]  [BUGGY]  if(rawLen  ==  0)  {  if(rawLen  >=  0)  {  [CE]  illegal  start  of  expression  [FE]        JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();    [BUGGY]  if(rawLen  ==  0)  {  if(rawLen  >=  0)  {  [BUGGY]    return  rawNum;  }  if  (rawNum.startsWith(   "-   "))  {  rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen    ==    0)    {    if(rawLen  >=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
24	[BUG]  [BUGGY]  if(rawLen  ==  0)  {  If(rawLen  ==  0)  {  [CE]  ';'  expected  [FE]          JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();    [BUGGY]  if(rawLen  ==  0)  {  If(rawLen  ==  0)  {  [BUGGY]    return  rawNum;  }  if  (rawNum.startsWith(   "-   "))  {  rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen    ==    0)    {    If(rawLen  ==  0)  {	  	non-compiled	[CE]  ';'  expected	6	None	add
25	[BUG]  [BUGGY]  if(rawLen  <  1)  {  if(rawLen  <  1)  {  [CE]  illegal  start  of  expression  [FE]    JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();    [BUGGY]  if(rawLen  <  1)  {  if(rawLen  <  1)  {  [BUGGY]    return  rawNum;  }  if  (rawNum.startsWith(   "-   "))  {  rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen    <    1)    {    if(rawLen  <  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	2	None	add
26	[BUG]  [BUGGY]  if(rawLen  <  1)  {  if(rawLen  >=  1)  {  [CE]  illegal  start  of  expression  [FE]      JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();    [BUGGY]  if(rawLen  <  1)  {  if(rawLen  >=  1)  {  [BUGGY]    return  rawNum;  }  if  (rawNum.startsWith(   "-   "))  {  rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen    <    1)    {    if(rawLen  >=  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	2	None	add
27	[BUG]  [BUGGY]  if(rawLen  <  1)  {  If(rawLen  <  1)  {  [CE]  ';'  expected  [FE]        JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();    [BUGGY]  if(rawLen  <  1)  {  If(rawLen  <  1)  {  [BUGGY]    return  rawNum;  }  if  (rawNum.startsWith(   "-   "))  {  rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen    <    1)    {    If(rawLen  <  1)  {	  	non-compiled	[CE]  ';'  expected	2	None	add
28	[BUG]  [BUGGY]  if(rawLen  <  1)  {  if(rawLen  <  2)  {  [CE]  illegal  start  of  expression  [FE]          JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();    [BUGGY]  if(rawLen  <  1)  {  if(rawLen  <  2)  {  [BUGGY]    return  rawNum;  }  if  (rawNum.startsWith(   "-   "))  {  rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen    <    1)    {    if(rawLen  <  2)  {	  	non-compiled	[CE]  illegal  start  of  expression	2	None	add
29	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();    [BUGGY]  if(rawLen!=  0)  {  [BUGGY]    return  rawNum;  }  if  (rawNum.startsWith(   "-   "))  {  rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	add	if(rawLen!=  0)  {	  if(rawLen    >=    0)    {    	compilable	  [FE]  JsonParseException  	10	8	replace
30	[BUG]  [BUGGY]  if(rawLen!=  0)  {  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();    [BUGGY]  if(rawLen!=  0)  {  [BUGGY]    return  rawNum;  }  if  (rawNum.startsWith(   "-   "))  {  rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen!=  0)  {	  if(rawLen    >=    0)    {    	compilable	  [FE]  JsonParseException  	10	8	replace
31	[BUG]  [BUGGY]  if(rawLen  ==  0)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  return  _currToken.substring(0,  rawLen);  }  [CE]  cannot  find  symbol  [FE]            JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();    [BUGGY]  if(rawLen  ==  0)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  return  _currToken.substring(0,  rawLen);  }  [BUGGY]    return  rawNum;  }  if  (rawNum.startsWith(   "-   "))  {  rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen  ==  0)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  return  _currToken.substring(0,  rawLen);  }	      	non-compiled	[CE]  cannot  find  symbol	4	None	replace
32	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]              JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();    [BUGGY]  if(rawLen  ==  0)  {  if(_currToken!=  JsonToken.VALUE_STRING)  {  _currToken  =  JsonToken.VALUE_STRING;  }  [BUGGY]    return  rawNum;  }  if  (rawNum.startsWith(   "-   "))  {  rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	add	if(rawLen  ==  0)  {  if(_currToken!=  JsonToken.VALUE_STRING)  {  _currToken  =  JsonToken.VALUE_STRING;  }	      	compilable	  [FE]  JsonParseException  	4	8	replace
33	[BUG]  [BUGGY]  if(rawLen  ==  0)  {  if(_currToken!=  JsonToken.VALUE_STRING)  {  _currToken  =  JsonToken.VALUE_STRING;  }  [FE]  JsonParseException  [FE]              JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();    [BUGGY]  if(rawLen  ==  0)  {  if(_currToken!=  JsonToken.VALUE_STRING)  {  _currToken  =  JsonToken.VALUE_STRING;  }  [BUGGY]    return  rawNum;  }  if  (rawNum.startsWith(   "-   "))  {  rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen  ==  0)  {  if(_currToken!=  JsonToken.VALUE_STRING)  {  _currToken  =  JsonToken.VALUE_STRING;  }	      	compilable	  [FE]  JsonParseException  	4	8	replace
34	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]                JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();    [BUGGY]  if(rawLen  ==  0)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  return  _currToken.toString();  }  [BUGGY]    return  rawNum;  }  if  (rawNum.startsWith(   "-   "))  {  rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	add	if(rawLen  ==  0)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  return  _currToken.toString();  }	      	compilable	  [FE]  JsonParseException  	4	8	replace
35	[BUG]  [BUGGY]  if(rawLen  ==  0)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  return  _currToken.toString();  }  [FE]  JsonParseException  [FE]                JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();    [BUGGY]  if(rawLen  ==  0)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  return  _currToken.toString();  }  [BUGGY]    return  rawNum;  }  if  (rawNum.startsWith(   "-   "))  {  rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen  ==  0)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  return  _currToken.toString();  }	      	compilable	  [FE]  JsonParseException  	4	8	replace
36	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]                  JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();    [BUGGY]  if(rawLen  ==  0)  {  if(_currToken!=  JsonToken.VALUE_STRING)  {  _currToken  =  JsonToken.FIELD_NAME;  }  [BUGGY]    return  rawNum;  }  if  (rawNum.startsWith(   "-   "))  {  rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	add	if(rawLen  ==  0)  {  if(_currToken!=  JsonToken.VALUE_STRING)  {  _currToken  =  JsonToken.FIELD_NAME;  }	      	compilable	  [FE]  JsonParseException  	4	8	replace
37	[BUG]  [BUGGY]  if(rawLen  ==  0)  {  if(_currToken!=  JsonToken.VALUE_STRING)  {  _currToken  =  JsonToken.FIELD_NAME;  }  [FE]  JsonParseException  [FE]                  JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();    [BUGGY]  if(rawLen  ==  0)  {  if(_currToken!=  JsonToken.VALUE_STRING)  {  _currToken  =  JsonToken.FIELD_NAME;  }  [BUGGY]    return  rawNum;  }  if  (rawNum.startsWith(   "-   "))  {  rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen  ==  0)  {  if(_currToken!=  JsonToken.VALUE_STRING)  {  _currToken  =  JsonToken.FIELD_NAME;  }	      	compilable	  [FE]  JsonParseException  	4	8	replace
38	[BUG]  [BUGGY]  _currToken  =  JsonToken.VALUE_STRING;  [CE]  illegal  start  of  type  [FE]            JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();    [BUGGY]  _currToken  =  JsonToken.VALUE_STRING;  [BUGGY]    return  rawNum;  }  if  (rawNum.startsWith(   "-   "))  {  rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	_currToken  =  JsonToken.VALUE_STRING;	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
39	[BUG]  [BUGGY]  _currToken  =  JsonToken.FIELD_NAME;  [CE]  illegal  start  of  type  [FE]              JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();    [BUGGY]  _currToken  =  JsonToken.FIELD_NAME;  [BUGGY]    return  rawNum;  }  if  (rawNum.startsWith(   "-   "))  {  rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	_currToken  =  JsonToken.FIELD_NAME;	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
40	[BUG]  [BUGGY]  _currToken  =  JsonToken.START_ARRAY;  [CE]  illegal  start  of  type  [FE]                JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();    [BUGGY]  _currToken  =  JsonToken.START_ARRAY;  [BUGGY]    return  rawNum;  }  if  (rawNum.startsWith(   "-   "))  {  rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	_currToken  =  JsonToken.START_ARRAY;	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
41	[BUG]  [BUGGY]  if(rawLen  ==  0)  {  if(rawNum.startsWith( "- ")||  rawLen  <  2)  {  throw  new  JsonParseException( " ");  }  [CE]  no  suitable  constructor  found  for  JsonParseException(String)  [FE]                  JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();    [BUGGY]  if(rawLen  ==  0)  {  if(rawNum.startsWith( "- ")||  rawLen  <  2)  {  throw  new  JsonParseException( " ");  }  [BUGGY]    return  rawNum;  }  if  (rawNum.startsWith(   "-   "))  {  rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen  ==  0)  {  if(rawNum.startsWith( "- ")||  rawLen  <  2)  {  throw  new  JsonParseException( " ");  }	      	non-compiled	[CE]  no  suitable  constructor  found  for  JsonParseException(String)	4	None	replace
42	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]        JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();    [BUGGY]  if(rawLen!=  MAX_ERROR_TOKEN_LENGTH)  {  [BUGGY]    return  rawNum;  }  if  (rawNum.startsWith(   "-   "))  {  rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	add	if(rawLen!=  MAX_ERROR_TOKEN_LENGTH)  {	  if(rawLen    <    =    MAX_ERROR_TOKEN_LENGTH)    {    	compilable	  [FE]  JsonParseException  	5	8	replace
43	[BUG]  [BUGGY]  if(rawLen!=  MAX_ERROR_TOKEN_LENGTH)  {  [FE]  JsonParseException  [FE]        JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();    [BUGGY]  if(rawLen!=  MAX_ERROR_TOKEN_LENGTH)  {  [BUGGY]    return  rawNum;  }  if  (rawNum.startsWith(   "-   "))  {  rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen!=  MAX_ERROR_TOKEN_LENGTH)  {	  if(rawLen    <    =    MAX_ERROR_TOKEN_LENGTH)    {    	compilable	  [FE]  JsonParseException  	5	8	replace
44	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]          JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();    [BUGGY]  if(rawLen  <  MAX_ERROR_TOKEN_LENGTH)  {  [BUGGY]    return  rawNum;  }  if  (rawNum.startsWith(   "-   "))  {  rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	add	if(rawLen  <  MAX_ERROR_TOKEN_LENGTH)  {	  if(rawLen    <    =    MAX_ERROR_TOKEN_LENGTH)    {    	compilable	  [FE]  JsonParseException  	5	8	replace
45	[BUG]  [BUGGY]  if(rawLen  <  MAX_ERROR_TOKEN_LENGTH)  {  [FE]  JsonParseException  [FE]          JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();    [BUGGY]  if(rawLen  <  MAX_ERROR_TOKEN_LENGTH)  {  [BUGGY]    return  rawNum;  }  if  (rawNum.startsWith(   "-   "))  {  rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen  <  MAX_ERROR_TOKEN_LENGTH)  {	  if(rawLen    <    =    MAX_ERROR_TOKEN_LENGTH)    {    	compilable	  [FE]  JsonParseException  	5	8	replace
46	[BUG]  [BUGGY]  if(rawLen  <  =  0  ||  rawNum  ==  null)  {  [CE]  illegal  start  of  expression  [FE]            JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();    [BUGGY]  if(rawLen  <  =  0  ||  rawNum  ==  null)  {  [BUGGY]    return  rawNum;  }  if  (rawNum.startsWith(   "-   "))  {  rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen  <  =  0  ||  rawNum  ==  null)  {	  if(rawLen    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
47	[BUG]  [BUGGY]  if(rawLen  >=  0)  {  If(rawLen  >=  0)  {  [CE]  ';'  expected  [FE]    JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();    [BUGGY]  if(rawLen  >=  0)  {  If(rawLen  >=  0)  {  [BUGGY]    return  rawNum;  }  if  (rawNum.startsWith(   "-   "))  {  rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen    >=    0)    {    If(rawLen  >=  0)  {	  	non-compiled	[CE]  ';'  expected	9	None	add
48	[BUG]  [BUGGY]  if(rawLen  <  =  MAX_ERROR_TOKEN_LENGTH  ||  rawLen  >  0)  {  [CE]  illegal  start  of  expression  [FE]        JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();    [BUGGY]  if(rawLen  <  =  MAX_ERROR_TOKEN_LENGTH  ||  rawLen  >  0)  {  [BUGGY]    return  rawNum;  }  if  (rawNum.startsWith(   "-   "))  {  rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen  <  =  MAX_ERROR_TOKEN_LENGTH  ||  rawLen  >  0)  {	  if(rawLen    <    =    MAX_ERROR_TOKEN_LENGTH)    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
49	[BUG]  [BUGGY]  if(rawLen  <  =  MAX_ERROR_TOKEN_LENGTH  ||  rawLen  >  1)  {  [CE]  illegal  start  of  expression  [FE]          JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();    [BUGGY]  if(rawLen  <  =  MAX_ERROR_TOKEN_LENGTH  ||  rawLen  >  1)  {  [BUGGY]    return  rawNum;  }  if  (rawNum.startsWith(   "-   "))  {  rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen  <  =  MAX_ERROR_TOKEN_LENGTH  ||  rawLen  >  1)  {	  if(rawLen    <    =    MAX_ERROR_TOKEN_LENGTH)    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
50	[BUG]  [BUGGY]  if(rawLen  ==  1  ||  rawLen  <  =  1000)  {  [CE]  illegal  start  of  expression  [FE]        JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();    [BUGGY]  if(rawLen  ==  1  ||  rawLen  <  =  1000)  {  [BUGGY]    return  rawNum;  }  if  (rawNum.startsWith(   "-   "))  {  rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen  ==  1  ||  rawLen  <  =  1000)  {	  if(rawLen    <    =    1000)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
51	[BUG]  [BUGGY]  if(rawLen  <  =  10000)  {  [CE]  illegal  start  of  expression  [FE]          JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();    [BUGGY]  if(rawLen  <  =  10000)  {  [BUGGY]    return  rawNum;  }  if  (rawNum.startsWith(   "-   "))  {  rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen  <  =  10000)  {	  if(rawLen    <    =    1000)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
52	[BUG]  [BUGGY]  _currToken  =  JsonToken.VALUE_NUMBER_INT;  [CE]  illegal  start  of  type  [FE]            JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();    [BUGGY]  _currToken  =  JsonToken.VALUE_NUMBER_INT;  [BUGGY]    return  rawNum;  }  if  (rawNum.startsWith(   "-   "))  {  rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	_currToken  =  JsonToken.VALUE_NUMBER_INT;	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
53	[BUG]  [BUGGY]  _currToken  =  JsonToken.VALUE_NUMBER_FLOAT;  [CE]  illegal  start  of  type  [FE]              JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();    [BUGGY]  _currToken  =  JsonToken.VALUE_NUMBER_FLOAT;  [BUGGY]    return  rawNum;  }  if  (rawNum.startsWith(   "-   "))  {  rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	_currToken  =  JsonToken.VALUE_NUMBER_FLOAT;	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
