bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(rawLen  <  =  MAX_ERROR_TOKEN_LENGTH)  {  If(rawLen  ==  0)  {  [CE]  illegal  start  of  expression  [FE]              JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen  <  =  MAX_ERROR_TOKEN_LENGTH)  {  If(rawLen  ==  0)  {  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen  <  =  MAX_ERROR_TOKEN_LENGTH)  {  If(rawLen  ==  0)  {	  if(rawLen    ==    0)    {    If(rawLen    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
2	[BUG]  [BUGGY]  if(rawLen  >  0)  {  If(rawLen  ==  0)  {  [CE]  ';'  expected  [FE]                JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen  >  0)  {  If(rawLen  ==  0)  {  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen  >  0)  {  If(rawLen  ==  0)  {	  if(rawLen    ==    0)    {    If(rawLen    ==    0)    {    	non-compiled	[CE]  ';'  expected	24	None	replace
3	[BUG]  [BUGGY]  if(rawLen  >=  MAX_ERROR_TOKEN_LENGTH)  {  if(rawLen  >=  MAX_ERROR_TOKEN_LENGTH)  {  [CE]  illegal  start  of  expression  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen  >=  MAX_ERROR_TOKEN_LENGTH)  {  if(rawLen  >=  MAX_ERROR_TOKEN_LENGTH)  {  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen    >=    MAX_ERROR_TOKEN_LENGTH)    {    if(rawLen  >=  MAX_ERROR_TOKEN_LENGTH)  {	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
4	[BUG]  [BUGGY]  if(rawLen  >=  MAX_ERROR_TOKEN_LENGTH)  {  if(rawLen!=  MAX_ERROR_TOKEN_LENGTH)  {  [CE]  illegal  start  of  expression  [FE]      JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen  >=  MAX_ERROR_TOKEN_LENGTH)  {  if(rawLen!=  MAX_ERROR_TOKEN_LENGTH)  {  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen    >=    MAX_ERROR_TOKEN_LENGTH)    {    if(rawLen!=  MAX_ERROR_TOKEN_LENGTH)  {	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
5	[BUG]  [BUGGY]  if(rawLen  >=  MAX_ERROR_TOKEN_LENGTH)  {  if(rawLen  >>  MAX_ERROR_TOKEN_LENGTH)  {  [CE]  illegal  start  of  expression  [FE]        JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen  >=  MAX_ERROR_TOKEN_LENGTH)  {  if(rawLen  >>  MAX_ERROR_TOKEN_LENGTH)  {  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen    >=    MAX_ERROR_TOKEN_LENGTH)    {    if(rawLen  >>  MAX_ERROR_TOKEN_LENGTH)  {	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
6	[BUG]  [BUGGY]  if(rawLen  >=  MAX_ERROR_TOKEN_LENGTH)  {  if(rawLen  ==  MAX_ERROR_TOKEN_LENGTH)  {  [CE]  illegal  start  of  expression  [FE]          JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen  >=  MAX_ERROR_TOKEN_LENGTH)  {  if(rawLen  ==  MAX_ERROR_TOKEN_LENGTH)  {  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen    >=    MAX_ERROR_TOKEN_LENGTH)    {    if(rawLen  ==  MAX_ERROR_TOKEN_LENGTH)  {	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
7	[BUG]  [BUGGY]  if(rawLen  ==  1)  {  if(rawLen  ==  1)  {  [CE]  illegal  start  of  expression  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen  ==  1)  {  if(rawLen  ==  1)  {  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen    ==    1)    {    if(rawLen  ==  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
8	[BUG]  [BUGGY]  if(rawLen  ==  1)  {  if(rawLen!=  1)  {  [CE]  illegal  start  of  expression  [FE]      JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen  ==  1)  {  if(rawLen!=  1)  {  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen    ==    1)    {    if(rawLen!=  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
9	[BUG]  [BUGGY]  if(rawLen  ==  1)  {  if(rawLen  >=  1)  {  [CE]  illegal  start  of  expression  [FE]        JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen  ==  1)  {  if(rawLen  >=  1)  {  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen    ==    1)    {    if(rawLen  >=  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
10	[BUG]  [BUGGY]  if(rawLen  ==  1)  {  if(rawLen  ==  2)  {  [CE]  illegal  start  of  expression  [FE]          JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen  ==  1)  {  if(rawLen  ==  2)  {  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen    ==    1)    {    if(rawLen  ==  2)  {	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
11	[BUG]  [BUGGY]  _currToken  =  JsonToken.VALUE_STRING  +  1;  [CE]  illegal  start  of  type  [FE]                JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  _currToken  =  JsonToken.VALUE_STRING  +  1;  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	_currToken  =  JsonToken.VALUE_STRING  +  1;	  _currToken    =    JsonToken.VALUE_STRING;    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
12	[BUG]  [BUGGY]  if(rawLen!=  MAX_ERROR_TOKEN_LENGTH)  {  if(rawLen!=  MAX_ERROR_TOKEN_LENGTH)  {  [CE]  illegal  start  of  expression  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen!=  MAX_ERROR_TOKEN_LENGTH)  {  if(rawLen!=  MAX_ERROR_TOKEN_LENGTH)  {  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen!=    MAX_ERROR_TOKEN_LENGTH)    {    if(rawLen!=  MAX_ERROR_TOKEN_LENGTH)  {	  	non-compiled	[CE]  illegal  start  of  expression	42	None	add
13	[BUG]  [BUGGY]  if(rawLen!=  MAX_ERROR_TOKEN_LENGTH)  {  if(rawLen  >=  MAX_ERROR_TOKEN_LENGTH)  {  [CE]  illegal  start  of  expression  [FE]      JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen!=  MAX_ERROR_TOKEN_LENGTH)  {  if(rawLen  >=  MAX_ERROR_TOKEN_LENGTH)  {  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen!=    MAX_ERROR_TOKEN_LENGTH)    {    if(rawLen  >=  MAX_ERROR_TOKEN_LENGTH)  {	  	non-compiled	[CE]  illegal  start  of  expression	42	None	add
14	[BUG]  [BUGGY]  if(rawLen!=  MAX_ERROR_TOKEN_LENGTH)  {  if(rawLen  ==  MAX_ERROR_TOKEN_LENGTH)  {  [CE]  illegal  start  of  expression  [FE]        JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen!=  MAX_ERROR_TOKEN_LENGTH)  {  if(rawLen  ==  MAX_ERROR_TOKEN_LENGTH)  {  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen!=    MAX_ERROR_TOKEN_LENGTH)    {    if(rawLen  ==  MAX_ERROR_TOKEN_LENGTH)  {	  	non-compiled	[CE]  illegal  start  of  expression	42	None	add
15	[BUG]  [BUGGY]  if(rawLen!=  MAX_ERROR_TOKEN_LENGTH)  {  if(rawLen  >>  MAX_ERROR_TOKEN_LENGTH)  {  [CE]  illegal  start  of  expression  [FE]          JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen!=  MAX_ERROR_TOKEN_LENGTH)  {  if(rawLen  >>  MAX_ERROR_TOKEN_LENGTH)  {  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen!=    MAX_ERROR_TOKEN_LENGTH)    {    if(rawLen  >>  MAX_ERROR_TOKEN_LENGTH)  {	  	non-compiled	[CE]  illegal  start  of  expression	42	None	add
16	[BUG]  [BUGGY]  if(rawLen  ==  1)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  return  _currToken.substring(0,  rawLen);  }  [CE]  cannot  find  symbol  [FE]                JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen  ==  1)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  return  _currToken.substring(0,  rawLen);  }  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen  ==  1)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  return  _currToken.substring(0,  rawLen);  }	  if(rawLen    ==    0)    {    if(_currToken!=    JsonToken.VALUE_NUMBER_INT)    {    return    _currToken.substring(0,    rawLen);    }    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
17	[BUG]  [BUGGY]  if(rawLen  ==  2)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  return  _currToken.substring(0,  rawLen);  }  [CE]  cannot  find  symbol  [FE]                  JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen  ==  2)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  return  _currToken.substring(0,  rawLen);  }  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen  ==  2)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  return  _currToken.substring(0,  rawLen);  }	  if(rawLen    ==    0)    {    if(_currToken!=    JsonToken.VALUE_NUMBER_INT)    {    return    _currToken.substring(0,    rawLen);    }    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
18	[BUG]  [BUGGY]  if(rawLen!=  0)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  return  _currToken.substring(0,  rawLen);  }  [CE]  cannot  find  symbol  [FE]                    JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen!=  0)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  return  _currToken.substring(0,  rawLen);  }  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen!=  0)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  return  _currToken.substring(0,  rawLen);  }	  if(rawLen    ==    0)    {    if(_currToken!=    JsonToken.VALUE_NUMBER_INT)    {    return    _currToken.substring(0,    rawLen);    }    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
19	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]            JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen  <  MAX_ERROR_TOKEN_LENGTH  ||  rawLen  >  0)  {  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	add	if(rawLen  <  MAX_ERROR_TOKEN_LENGTH  ||  rawLen  >  0)  {	  if(rawLen    <    =    MAX_ERROR_TOKEN_LENGTH    ||    rawLen    >    0)    {    	compilable	  [FE]  JsonParseException  	48	8	replace
20	[BUG]  [BUGGY]  if(rawLen  <  MAX_ERROR_TOKEN_LENGTH  ||  rawLen  >  0)  {  [FE]  JsonParseException  [FE]            JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen  <  MAX_ERROR_TOKEN_LENGTH  ||  rawLen  >  0)  {  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen  <  MAX_ERROR_TOKEN_LENGTH  ||  rawLen  >  0)  {	  if(rawLen    <    =    MAX_ERROR_TOKEN_LENGTH    ||    rawLen    >    0)    {    	compilable	  [FE]  JsonParseException  	48	8	replace
21	[BUG]  [BUGGY]  if(rawLen  <  =  MAX_ERROR_TOKEN_LENGTH  &&  rawLen  >  0)  {  [CE]  illegal  start  of  expression  [FE]              JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen  <  =  MAX_ERROR_TOKEN_LENGTH  &&  rawLen  >  0)  {  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen  <  =  MAX_ERROR_TOKEN_LENGTH  &&  rawLen  >  0)  {	  if(rawLen    <    =    MAX_ERROR_TOKEN_LENGTH    ||    rawLen    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
22	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen  >  1)  {  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	add	if(rawLen  >  1)  {	  if(rawLen    >=    1)    {    	compilable	  [FE]  JsonParseException  	16	8	replace
23	[BUG]  [BUGGY]  if(rawLen  >  1)  {  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen  >  1)  {  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen  >  1)  {	  if(rawLen    >=    1)    {    	compilable	  [FE]  JsonParseException  	16	8	replace
24	[BUG]  [BUGGY]  if(rawLen  ==  MAX_ERROR_TOKEN_LENGTH)  {  if(rawLen  ==  MAX_ERROR_TOKEN_LENGTH)  {  [CE]  illegal  start  of  expression  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen  ==  MAX_ERROR_TOKEN_LENGTH)  {  if(rawLen  ==  MAX_ERROR_TOKEN_LENGTH)  {  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen    ==    MAX_ERROR_TOKEN_LENGTH)    {    if(rawLen  ==  MAX_ERROR_TOKEN_LENGTH)  {	  	non-compiled	[CE]  illegal  start  of  expression	4	None	add
25	[BUG]  [BUGGY]  if(rawLen  ==  MAX_ERROR_TOKEN_LENGTH)  {  if(rawLen  >=  MAX_ERROR_TOKEN_LENGTH)  {  [CE]  illegal  start  of  expression  [FE]      JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen  ==  MAX_ERROR_TOKEN_LENGTH)  {  if(rawLen  >=  MAX_ERROR_TOKEN_LENGTH)  {  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen    ==    MAX_ERROR_TOKEN_LENGTH)    {    if(rawLen  >=  MAX_ERROR_TOKEN_LENGTH)  {	  	non-compiled	[CE]  illegal  start  of  expression	4	None	add
26	[BUG]  [BUGGY]  if(rawLen  ==  MAX_ERROR_TOKEN_LENGTH)  {  if(rawLen!=  MAX_ERROR_TOKEN_LENGTH)  {  [CE]  illegal  start  of  expression  [FE]        JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen  ==  MAX_ERROR_TOKEN_LENGTH)  {  if(rawLen!=  MAX_ERROR_TOKEN_LENGTH)  {  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen    ==    MAX_ERROR_TOKEN_LENGTH)    {    if(rawLen!=  MAX_ERROR_TOKEN_LENGTH)  {	  	non-compiled	[CE]  illegal  start  of  expression	4	None	add
27	[BUG]  [BUGGY]  if(rawLen  ==  MAX_ERROR_TOKEN_LENGTH)  {  If(rawLen  ==  MAX_ERROR_TOKEN_LENGTH)  {  [CE]  ';'  expected  [FE]          JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen  ==  MAX_ERROR_TOKEN_LENGTH)  {  If(rawLen  ==  MAX_ERROR_TOKEN_LENGTH)  {  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen    ==    MAX_ERROR_TOKEN_LENGTH)    {    If(rawLen  ==  MAX_ERROR_TOKEN_LENGTH)  {	  	non-compiled	[CE]  ';'  expected	4	None	add
28	[BUG]  [BUGGY]  if(rawLen  ==  0)  {  if(_currToken!=  JsonToken.VALUE_STRING)  {  _currToken  =  JsonToken.FIELD_NAME;  }  if(rawLen  ==  0)  {  if(_currToken!=  JsonToken.VALUE_STRING)  {  _currToken  =  JsonToken.FIELD_NAME;  }  [CE]  illegal  start  of  expression  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen  ==  0)  {  if(_currToken!=  JsonToken.VALUE_STRING)  {  _currToken  =  JsonToken.FIELD_NAME;  }  if(rawLen  ==  0)  {  if(_currToken!=  JsonToken.VALUE_STRING)  {  _currToken  =  JsonToken.FIELD_NAME;  }  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen    ==    0)    {    if(_currToken!=    JsonToken.VALUE_STRING)    {    _currToken    =    JsonToken.FIELD_NAME;    }    if(rawLen  ==  0)  {  if(_currToken!=  JsonToken.VALUE_STRING)  {  _currToken  =  JsonToken.FIELD_NAME;  }	  	non-compiled	[CE]  illegal  start  of  expression	36	None	add
29	[BUG]  [BUGGY]  if(rawLen  ==  0)  {  if(_currToken!=  JsonToken.VALUE_STRING)  {  _currToken  =  JsonToken.FIELD_NAME;  }  if(rawLen!=  0)  {  if(_currToken!=  JsonToken.VALUE_STRING)  {  _currToken  =  JsonToken.FIELD_NAME;  }  [CE]  illegal  start  of  expression  [FE]      JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen  ==  0)  {  if(_currToken!=  JsonToken.VALUE_STRING)  {  _currToken  =  JsonToken.FIELD_NAME;  }  if(rawLen!=  0)  {  if(_currToken!=  JsonToken.VALUE_STRING)  {  _currToken  =  JsonToken.FIELD_NAME;  }  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen    ==    0)    {    if(_currToken!=    JsonToken.VALUE_STRING)    {    _currToken    =    JsonToken.FIELD_NAME;    }    if(rawLen!=  0)  {  if(_currToken!=  JsonToken.VALUE_STRING)  {  _currToken  =  JsonToken.FIELD_NAME;  }	  	non-compiled	[CE]  illegal  start  of  expression	36	None	add
30	[BUG]  [BUGGY]  if(rawLen  ==  0)  {  if(_currToken!=  JsonToken.VALUE_STRING)  {  _currToken  =  JsonToken.FIELD_NAME;  }  if(rawLen  >=  0)  {  if(_currToken!=  JsonToken.VALUE_STRING)  {  _currToken  =  JsonToken.FIELD_NAME;  }  [CE]  illegal  start  of  expression  [FE]        JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen  ==  0)  {  if(_currToken!=  JsonToken.VALUE_STRING)  {  _currToken  =  JsonToken.FIELD_NAME;  }  if(rawLen  >=  0)  {  if(_currToken!=  JsonToken.VALUE_STRING)  {  _currToken  =  JsonToken.FIELD_NAME;  }  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen    ==    0)    {    if(_currToken!=    JsonToken.VALUE_STRING)    {    _currToken    =    JsonToken.FIELD_NAME;    }    if(rawLen  >=  0)  {  if(_currToken!=  JsonToken.VALUE_STRING)  {  _currToken  =  JsonToken.FIELD_NAME;  }	  	non-compiled	[CE]  illegal  start  of  expression	36	None	add
31	[BUG]  [BUGGY]  if(rawLen  ==  0)  {  if(_currToken!=  JsonToken.VALUE_STRING)  {  _currToken  =  JsonToken.FIELD_NAME;  }  if(rawLen  ==  0)  {  if(_currToken  >=  JsonToken.VALUE_STRING)  {  _currToken  =  JsonToken.FIELD_NAME;  }  [CE]  illegal  start  of  expression  [FE]          JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen  ==  0)  {  if(_currToken!=  JsonToken.VALUE_STRING)  {  _currToken  =  JsonToken.FIELD_NAME;  }  if(rawLen  ==  0)  {  if(_currToken  >=  JsonToken.VALUE_STRING)  {  _currToken  =  JsonToken.FIELD_NAME;  }  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen    ==    0)    {    if(_currToken!=    JsonToken.VALUE_STRING)    {    _currToken    =    JsonToken.FIELD_NAME;    }    if(rawLen  ==  0)  {  if(_currToken  >=  JsonToken.VALUE_STRING)  {  _currToken  =  JsonToken.FIELD_NAME;  }	  	non-compiled	[CE]  illegal  start  of  expression	36	None	add
32	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen  >  MAX_ERROR_TOKEN_LENGTH)  {  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	add	if(rawLen  >  MAX_ERROR_TOKEN_LENGTH)  {	  if(rawLen    ==    MAX_ERROR_TOKEN_LENGTH)    {    	compilable	  [FE]  JsonParseException  	5	8	replace
33	[BUG]  [BUGGY]  if(rawLen  >  MAX_ERROR_TOKEN_LENGTH)  {  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen  >  MAX_ERROR_TOKEN_LENGTH)  {  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen  >  MAX_ERROR_TOKEN_LENGTH)  {	  if(rawLen    ==    MAX_ERROR_TOKEN_LENGTH)    {    	compilable	  [FE]  JsonParseException  	5	8	replace
34	[BUG]  [BUGGY]  if(rawLen  ==  0)  {  if(_currToken!=  JsonToken.VALUE_STRING)  {  _currToken  =  JsonToken.VALUE_STRING;  }  if(rawLen  ==  0)  {  if(_currToken!=  JsonToken.VALUE_STRING)  {  _currToken  =  JsonToken.VALUE_STRING;  }  [CE]  illegal  start  of  expression  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen  ==  0)  {  if(_currToken!=  JsonToken.VALUE_STRING)  {  _currToken  =  JsonToken.VALUE_STRING;  }  if(rawLen  ==  0)  {  if(_currToken!=  JsonToken.VALUE_STRING)  {  _currToken  =  JsonToken.VALUE_STRING;  }  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen    ==    0)    {    if(_currToken!=    JsonToken.VALUE_STRING)    {    _currToken    =    JsonToken.VALUE_STRING;    }    if(rawLen  ==  0)  {  if(_currToken!=  JsonToken.VALUE_STRING)  {  _currToken  =  JsonToken.VALUE_STRING;  }	  	non-compiled	[CE]  illegal  start  of  expression	32	None	add
35	[BUG]  [BUGGY]  if(rawLen  ==  0)  {  if(_currToken!=  JsonToken.VALUE_STRING)  {  _currToken  =  JsonToken.VALUE_STRING;  }  if(rawLen!=  0)  {  if(_currToken!=  JsonToken.VALUE_STRING)  {  _currToken  =  JsonToken.VALUE_STRING;  }  [CE]  illegal  start  of  expression  [FE]      JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen  ==  0)  {  if(_currToken!=  JsonToken.VALUE_STRING)  {  _currToken  =  JsonToken.VALUE_STRING;  }  if(rawLen!=  0)  {  if(_currToken!=  JsonToken.VALUE_STRING)  {  _currToken  =  JsonToken.VALUE_STRING;  }  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen    ==    0)    {    if(_currToken!=    JsonToken.VALUE_STRING)    {    _currToken    =    JsonToken.VALUE_STRING;    }    if(rawLen!=  0)  {  if(_currToken!=  JsonToken.VALUE_STRING)  {  _currToken  =  JsonToken.VALUE_STRING;  }	  	non-compiled	[CE]  illegal  start  of  expression	32	None	add
36	[BUG]  [BUGGY]  if(rawLen  ==  0)  {  if(_currToken!=  JsonToken.VALUE_STRING)  {  _currToken  =  JsonToken.VALUE_STRING;  }  if(rawLen  >=  0)  {  if(_currToken!=  JsonToken.VALUE_STRING)  {  _currToken  =  JsonToken.VALUE_STRING;  }  [CE]  illegal  start  of  expression  [FE]        JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen  ==  0)  {  if(_currToken!=  JsonToken.VALUE_STRING)  {  _currToken  =  JsonToken.VALUE_STRING;  }  if(rawLen  >=  0)  {  if(_currToken!=  JsonToken.VALUE_STRING)  {  _currToken  =  JsonToken.VALUE_STRING;  }  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen    ==    0)    {    if(_currToken!=    JsonToken.VALUE_STRING)    {    _currToken    =    JsonToken.VALUE_STRING;    }    if(rawLen  >=  0)  {  if(_currToken!=  JsonToken.VALUE_STRING)  {  _currToken  =  JsonToken.VALUE_STRING;  }	  	non-compiled	[CE]  illegal  start  of  expression	32	None	add
37	[BUG]  [BUGGY]  if(rawLen  ==  0)  {  if(_currToken!=  JsonToken.VALUE_STRING)  {  _currToken  =  JsonToken.VALUE_STRING;  }  if(rawLen  ==  0)  {  if(_currToken  >=  JsonToken.VALUE_STRING)  {  _currToken  =  JsonToken.VALUE_STRING;  }  [CE]  illegal  start  of  expression  [FE]          JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen  ==  0)  {  if(_currToken!=  JsonToken.VALUE_STRING)  {  _currToken  =  JsonToken.VALUE_STRING;  }  if(rawLen  ==  0)  {  if(_currToken  >=  JsonToken.VALUE_STRING)  {  _currToken  =  JsonToken.VALUE_STRING;  }  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen    ==    0)    {    if(_currToken!=    JsonToken.VALUE_STRING)    {    _currToken    =    JsonToken.VALUE_STRING;    }    if(rawLen  ==  0)  {  if(_currToken  >=  JsonToken.VALUE_STRING)  {  _currToken  =  JsonToken.VALUE_STRING;  }	  	non-compiled	[CE]  illegal  start  of  expression	32	None	add
38	[BUG]  [BUGGY]  if(rawLen  ==  1)  {  if(rawNum.startsWith( "- ")||  rawLen  <  2)  {  throw  new  JsonParseException( " ");  }  [CE]  no  suitable  constructor  found  for  JsonParseException(String)  [FE]                      JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen  ==  1)  {  if(rawNum.startsWith( "- ")||  rawLen  <  2)  {  throw  new  JsonParseException( " ");  }  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen  ==  1)  {  if(rawNum.startsWith( "- ")||  rawLen  <  2)  {  throw  new  JsonParseException( " ");  }	  if(rawLen    ==    0)    {    if(rawNum.startsWith(   "-   ")||    rawLen    <    2)    {    throw    new    JsonParseException(   "   ");    }    	non-compiled	[CE]  no  suitable  constructor  found  for  JsonParseException(String)	41	None	replace
39	[BUG]  [BUGGY]  if(rawLen  <  1)  {  if(rawNum.startsWith( "- ")||  rawLen  <  2)  {  throw  new  JsonParseException( " ");  }  [CE]  no  suitable  constructor  found  for  JsonParseException(String)  [FE]                        JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen  <  1)  {  if(rawNum.startsWith( "- ")||  rawLen  <  2)  {  throw  new  JsonParseException( " ");  }  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen  <  1)  {  if(rawNum.startsWith( "- ")||  rawLen  <  2)  {  throw  new  JsonParseException( " ");  }	  if(rawLen    ==    0)    {    if(rawNum.startsWith(   "-   ")||    rawLen    <    2)    {    throw    new    JsonParseException(   "   ");    }    	non-compiled	[CE]  no  suitable  constructor  found  for  JsonParseException(String)	41	None	replace
40	[BUG]  [BUGGY]  while(rawLen  <  1)  {  if(rawNum.startsWith( "- ")||  rawLen  <  2)  {  throw  new  JsonParseException( " ");  }  [CE]  no  suitable  constructor  found  for  JsonParseException(String)  [FE]                          JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  while(rawLen  <  1)  {  if(rawNum.startsWith( "- ")||  rawLen  <  2)  {  throw  new  JsonParseException( " ");  }  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	while(rawLen  <  1)  {  if(rawNum.startsWith( "- ")||  rawLen  <  2)  {  throw  new  JsonParseException( " ");  }	  if(rawLen    ==    0)    {    if(rawNum.startsWith(   "-   ")||    rawLen    <    2)    {    throw    new    JsonParseException(   "   ");    }    	non-compiled	[CE]  no  suitable  constructor  found  for  JsonParseException(String)	41	None	replace
41	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]              JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen  <  10000)  {  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	add	if(rawLen  <  10000)  {	  if(rawLen    <    =    10000)    {    	compilable	  [FE]  JsonParseException  	51	8	replace
42	[BUG]  [BUGGY]  if(rawLen  <  10000)  {  [FE]  JsonParseException  [FE]              JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen  <  10000)  {  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen  <  10000)  {	  if(rawLen    <    =    10000)    {    	compilable	  [FE]  JsonParseException  	51	8	replace
43	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]                JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen  <  10000  ||  rawLen  >  MAX_ERROR_TOKEN_LENGTH)  {  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	add	if(rawLen  <  10000  ||  rawLen  >  MAX_ERROR_TOKEN_LENGTH)  {	  if(rawLen    <    =    10000)    {    	compilable	  [FE]  JsonParseException  	51	8	replace
44	[BUG]  [BUGGY]  if(rawLen  <  10000  ||  rawLen  >  MAX_ERROR_TOKEN_LENGTH)  {  [FE]  JsonParseException  [FE]                JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen  <  10000  ||  rawLen  >  MAX_ERROR_TOKEN_LENGTH)  {  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen  <  10000  ||  rawLen  >  MAX_ERROR_TOKEN_LENGTH)  {	  if(rawLen    <    =    10000)    {    	compilable	  [FE]  JsonParseException  	51	8	replace
45	[BUG]  [BUGGY]  if(rawLen  <  MAX_ERROR_TOKEN_LENGTH  ||  rawLen  >  MAX_ERROR_TOKEN_LENGTH)  {  if(rawLen  <  MAX_ERROR_TOKEN_LENGTH  ||  rawLen  >  MAX_ERROR_TOKEN_LENGTH)  {  [CE]  illegal  start  of  expression  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen  <  MAX_ERROR_TOKEN_LENGTH  ||  rawLen  >  MAX_ERROR_TOKEN_LENGTH)  {  if(rawLen  <  MAX_ERROR_TOKEN_LENGTH  ||  rawLen  >  MAX_ERROR_TOKEN_LENGTH)  {  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen    <    MAX_ERROR_TOKEN_LENGTH    ||    rawLen    >    MAX_ERROR_TOKEN_LENGTH)    {    if(rawLen  <  MAX_ERROR_TOKEN_LENGTH  ||  rawLen  >  MAX_ERROR_TOKEN_LENGTH)  {	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
46	[BUG]  [BUGGY]  if(rawLen  <  MAX_ERROR_TOKEN_LENGTH  ||  rawLen  >  MAX_ERROR_TOKEN_LENGTH)  {  If(rawLen  <  MAX_ERROR_TOKEN_LENGTH  ||  rawLen  >  MAX_ERROR_TOKEN_LENGTH)  {  [CE]  ';'  expected  [FE]      JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen  <  MAX_ERROR_TOKEN_LENGTH  ||  rawLen  >  MAX_ERROR_TOKEN_LENGTH)  {  If(rawLen  <  MAX_ERROR_TOKEN_LENGTH  ||  rawLen  >  MAX_ERROR_TOKEN_LENGTH)  {  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen    <    MAX_ERROR_TOKEN_LENGTH    ||    rawLen    >    MAX_ERROR_TOKEN_LENGTH)    {    If(rawLen  <  MAX_ERROR_TOKEN_LENGTH  ||  rawLen  >  MAX_ERROR_TOKEN_LENGTH)  {	  	non-compiled	[CE]  ';'  expected	6	None	add
47	[BUG]  [BUGGY]  if(rawLen  <  MAX_ERROR_TOKEN_LENGTH  ||  rawLen  >  MAX_ERROR_TOKEN_LENGTH)  {  if(rawLen  >=  MAX_ERROR_TOKEN_LENGTH  ||  rawLen  >  MAX_ERROR_TOKEN_LENGTH)  {  [CE]  illegal  start  of  expression  [FE]        JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen  <  MAX_ERROR_TOKEN_LENGTH  ||  rawLen  >  MAX_ERROR_TOKEN_LENGTH)  {  if(rawLen  >=  MAX_ERROR_TOKEN_LENGTH  ||  rawLen  >  MAX_ERROR_TOKEN_LENGTH)  {  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen    <    MAX_ERROR_TOKEN_LENGTH    ||    rawLen    >    MAX_ERROR_TOKEN_LENGTH)    {    if(rawLen  >=  MAX_ERROR_TOKEN_LENGTH  ||  rawLen  >  MAX_ERROR_TOKEN_LENGTH)  {	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
48	[BUG]  [BUGGY]  if(rawLen  <  MAX_ERROR_TOKEN_LENGTH  ||  rawLen  >  MAX_ERROR_TOKEN_LENGTH)  {  if(rawLen  <  MAX_ERROR_TOKEN_LENGTH  ||  rawLen  >  max_ERROR_TOKEN_LENGTH)  {  [CE]  illegal  start  of  expression  [FE]          JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen  <  MAX_ERROR_TOKEN_LENGTH  ||  rawLen  >  MAX_ERROR_TOKEN_LENGTH)  {  if(rawLen  <  MAX_ERROR_TOKEN_LENGTH  ||  rawLen  >  max_ERROR_TOKEN_LENGTH)  {  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen    <    MAX_ERROR_TOKEN_LENGTH    ||    rawLen    >    MAX_ERROR_TOKEN_LENGTH)    {    if(rawLen  <  MAX_ERROR_TOKEN_LENGTH  ||  rawLen  >  max_ERROR_TOKEN_LENGTH)  {	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
49	[BUG]  [BUGGY]  if(rawLen  <  MAX_ERROR_TOKEN_LENGTH  ||  rawLen  >  MAX_ERROR_TOKEN_LENGTH  ||  rawNum  >  MAX_ERROR_TOKEN_LENGTH)  {  [CE]  bad  operand  types  for  binary  operator  '>'  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen  <  MAX_ERROR_TOKEN_LENGTH  ||  rawLen  >  MAX_ERROR_TOKEN_LENGTH  ||  rawNum  >  MAX_ERROR_TOKEN_LENGTH)  {  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen  <  MAX_ERROR_TOKEN_LENGTH  ||  rawLen  >  MAX_ERROR_TOKEN_LENGTH  ||  rawNum  >  MAX_ERROR_TOKEN_LENGTH)  {	  if(rawLen    <    MAX_ERROR_TOKEN_LENGTH    ||    rawLen    >    MAX_ERROR_TOKEN_LENGTH)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>'	7	None	replace
50	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen  <  MAX_ERROR_TOKEN_LENGTH  ||  rawLen  >  MAX_ERROR_TOKEN_LENGTH  +  1)  {  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	add	if(rawLen  <  MAX_ERROR_TOKEN_LENGTH  ||  rawLen  >  MAX_ERROR_TOKEN_LENGTH  +  1)  {	  if(rawLen    <    MAX_ERROR_TOKEN_LENGTH    ||    rawLen    >    MAX_ERROR_TOKEN_LENGTH)    {    	compilable	  [FE]  JsonParseException  	7	8	replace
51	[BUG]  [BUGGY]  if(rawLen  <  MAX_ERROR_TOKEN_LENGTH  ||  rawLen  >  MAX_ERROR_TOKEN_LENGTH  +  1)  {  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen  <  MAX_ERROR_TOKEN_LENGTH  ||  rawLen  >  MAX_ERROR_TOKEN_LENGTH  +  1)  {  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen  <  MAX_ERROR_TOKEN_LENGTH  ||  rawLen  >  MAX_ERROR_TOKEN_LENGTH  +  1)  {	  if(rawLen    <    MAX_ERROR_TOKEN_LENGTH    ||    rawLen    >    MAX_ERROR_TOKEN_LENGTH)    {    	compilable	  [FE]  JsonParseException  	7	8	replace
52	[BUG]  [BUGGY]  _currToken  =  JsonToken.START_OBJECT;  [CE]  illegal  start  of  type  [FE]                    JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  _currToken  =  JsonToken.START_OBJECT;  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	_currToken  =  JsonToken.START_OBJECT;	  _currToken    =    JsonToken.START_ARRAY;    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
53	[BUG]  [BUGGY]  _currToken  =  JsonToken.END_OBJECT;  [CE]  illegal  start  of  type  [FE]                      JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  _currToken  =  JsonToken.END_OBJECT;  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	_currToken  =  JsonToken.END_OBJECT;	  _currToken    =    JsonToken.START_ARRAY;    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
54	[BUG]  [BUGGY]  _currToken  =  JsonToken.END_ARRAY;  [CE]  illegal  start  of  type  [FE]                        JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  _currToken  =  JsonToken.END_ARRAY;  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	_currToken  =  JsonToken.END_ARRAY;	  _currToken    =    JsonToken.START_ARRAY;    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
55	[BUG]  [BUGGY]  ||  rawLen  ==  0)  {  _currToken  =  JsonToken.FIELD_NAME;  [CE]  illegal  start  of  expression  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  ||  rawLen  ==  0)  {  _currToken  =  JsonToken.FIELD_NAME;  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	||  rawLen  ==  0)  {  _currToken  =  JsonToken.FIELD_NAME;	  if(rawLen    ==    0)    {    if(_currToken!=    JsonToken.VALUE_STRING)    {    _currToken    =    JsonToken.FIELD_NAME;    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
56	[BUG]  [BUGGY]  ||  rawLen  ==  0)  {  _currToken  =  JsonToken.FIELD_NAME;  }  [CE]  illegal  start  of  expression  [FE]      JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  ||  rawLen  ==  0)  {  _currToken  =  JsonToken.FIELD_NAME;  }  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	||  rawLen  ==  0)  {  _currToken  =  JsonToken.FIELD_NAME;  }	  if(rawLen    ==    0)    {    if(_currToken!=    JsonToken.VALUE_STRING)    {    _currToken    =    JsonToken.FIELD_NAME;    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
57	[BUG]  [BUGGY]  ||  rawLen  ==  0)  {  _currToken  =  JsonToken.VALUE_STRING;  [CE]  illegal  start  of  expression  [FE]        JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  ||  rawLen  ==  0)  {  _currToken  =  JsonToken.VALUE_STRING;  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	||  rawLen  ==  0)  {  _currToken  =  JsonToken.VALUE_STRING;	  if(rawLen    ==    0)    {    if(_currToken!=    JsonToken.VALUE_STRING)    {    _currToken    =    JsonToken.FIELD_NAME;    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
58	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen  ==  1)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  return  _currToken.toString();  }  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	add	if(rawLen  ==  1)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  return  _currToken.toString();  }	  if(rawLen    ==    0)    {    if(_currToken!=    JsonToken.VALUE_NUMBER_INT)    {    return    _currToken.toString();    }    	compilable	  [FE]  JsonParseException  	35	8	replace
59	[BUG]  [BUGGY]  if(rawLen  ==  1)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  return  _currToken.toString();  }  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen  ==  1)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  return  _currToken.toString();  }  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen  ==  1)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  return  _currToken.toString();  }	  if(rawLen    ==    0)    {    if(_currToken!=    JsonToken.VALUE_NUMBER_INT)    {    return    _currToken.toString();    }    	compilable	  [FE]  JsonParseException  	35	8	replace
60	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen  ==  0)  {  if(_currToken!=  JsonToken.VALUE_STRING)  {  return  _currToken.toString();  }  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	add	if(rawLen  ==  0)  {  if(_currToken!=  JsonToken.VALUE_STRING)  {  return  _currToken.toString();  }	  if(rawLen    ==    0)    {    if(_currToken!=    JsonToken.VALUE_NUMBER_INT)    {    return    _currToken.toString();    }    	compilable	  [FE]  JsonParseException  	35	8	replace
61	[BUG]  [BUGGY]  if(rawLen  ==  0)  {  if(_currToken!=  JsonToken.VALUE_STRING)  {  return  _currToken.toString();  }  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen  ==  0)  {  if(_currToken!=  JsonToken.VALUE_STRING)  {  return  _currToken.toString();  }  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen  ==  0)  {  if(_currToken!=  JsonToken.VALUE_STRING)  {  return  _currToken.toString();  }	  if(rawLen    ==    0)    {    if(_currToken!=    JsonToken.VALUE_NUMBER_INT)    {    return    _currToken.toString();    }    	compilable	  [FE]  JsonParseException  	35	8	replace
62	[BUG]  [BUGGY]  ||  rawLen  ==  0)  {  return  _currToken.toString();  }  [CE]  illegal  start  of  expression  [FE]        JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  ||  rawLen  ==  0)  {  return  _currToken.toString();  }  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	||  rawLen  ==  0)  {  return  _currToken.toString();  }	  if(rawLen    ==    0)    {    if(_currToken!=    JsonToken.VALUE_NUMBER_INT)    {    return    _currToken.toString();    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
63	[BUG]  [BUGGY]  ||  rawLen  ==  0)  {  if(_currToken!=  JsonToken.VALUE_STRING)  {  _currToken  =  JsonToken.VALUE_STRING;  }  [CE]  illegal  start  of  expression  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  ||  rawLen  ==  0)  {  if(_currToken!=  JsonToken.VALUE_STRING)  {  _currToken  =  JsonToken.VALUE_STRING;  }  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	||  rawLen  ==  0)  {  if(_currToken!=  JsonToken.VALUE_STRING)  {  _currToken  =  JsonToken.VALUE_STRING;  }	  if(rawLen    ==    0)    {    if(_currToken!=    JsonToken.VALUE_STRING)    {    _currToken    =    JsonToken.VALUE_STRING;    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
64	[BUG]  [BUGGY]  ||  rawLen  ==  0)  {  _currToken  =  JsonToken.VALUE_STRING;  }  [CE]  illegal  start  of  expression  [FE]      JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  ||  rawLen  ==  0)  {  _currToken  =  JsonToken.VALUE_STRING;  }  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	||  rawLen  ==  0)  {  _currToken  =  JsonToken.VALUE_STRING;  }	  if(rawLen    ==    0)    {    if(_currToken!=    JsonToken.VALUE_STRING)    {    _currToken    =    JsonToken.VALUE_STRING;    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
65	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]                JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen  ==  MAX_ERROR_TOKEN_LENGTH  ||  rawLen  >  MAX_ERROR_TOKEN_LENGTH)  {  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	add	if(rawLen  ==  MAX_ERROR_TOKEN_LENGTH  ||  rawLen  >  MAX_ERROR_TOKEN_LENGTH)  {	  if(rawLen    <    =    MAX_ERROR_TOKEN_LENGTH    ||    rawLen    >    MAX_ERROR_TOKEN_LENGTH)    {    	compilable	  [FE]  JsonParseException  	8	8	replace
66	[BUG]  [BUGGY]  if(rawLen  ==  MAX_ERROR_TOKEN_LENGTH  ||  rawLen  >  MAX_ERROR_TOKEN_LENGTH)  {  [FE]  JsonParseException  [FE]                JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen  ==  MAX_ERROR_TOKEN_LENGTH  ||  rawLen  >  MAX_ERROR_TOKEN_LENGTH)  {  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen  ==  MAX_ERROR_TOKEN_LENGTH  ||  rawLen  >  MAX_ERROR_TOKEN_LENGTH)  {	  if(rawLen    <    =    MAX_ERROR_TOKEN_LENGTH    ||    rawLen    >    MAX_ERROR_TOKEN_LENGTH)    {    	compilable	  [FE]  JsonParseException  	8	8	replace
67	[BUG]  [BUGGY]  if(rawLen  <  =  MAX_ERROR_TOKEN_LENGTH  &&  rawLen  >  MAX_ERROR_TOKEN_LENGTH)  {  [CE]  illegal  start  of  expression  [FE]                  JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen  <  =  MAX_ERROR_TOKEN_LENGTH  &&  rawLen  >  MAX_ERROR_TOKEN_LENGTH)  {  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen  <  =  MAX_ERROR_TOKEN_LENGTH  &&  rawLen  >  MAX_ERROR_TOKEN_LENGTH)  {	  if(rawLen    <    =    MAX_ERROR_TOKEN_LENGTH    ||    rawLen    >    MAX_ERROR_TOKEN_LENGTH)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
68	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]              JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen  <  MAX_ERROR_TOKEN_LENGTH  ||  rawLen  >  1)  {  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	add	if(rawLen  <  MAX_ERROR_TOKEN_LENGTH  ||  rawLen  >  1)  {	  if(rawLen    <    =    MAX_ERROR_TOKEN_LENGTH    ||    rawLen    >    1)    {    	compilable	  [FE]  JsonParseException  	49	8	replace
69	[BUG]  [BUGGY]  if(rawLen  <  MAX_ERROR_TOKEN_LENGTH  ||  rawLen  >  1)  {  [FE]  JsonParseException  [FE]              JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen  <  MAX_ERROR_TOKEN_LENGTH  ||  rawLen  >  1)  {  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen  <  MAX_ERROR_TOKEN_LENGTH  ||  rawLen  >  1)  {	  if(rawLen    <    =    MAX_ERROR_TOKEN_LENGTH    ||    rawLen    >    1)    {    	compilable	  [FE]  JsonParseException  	49	8	replace
70	[BUG]  [BUGGY]  if(rawLen  <  =  MAX_ERROR_TOKEN_LENGTH  ||  rawLen  >  2)  {  [CE]  illegal  start  of  expression  [FE]                JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen  <  =  MAX_ERROR_TOKEN_LENGTH  ||  rawLen  >  2)  {  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen  <  =  MAX_ERROR_TOKEN_LENGTH  ||  rawLen  >  2)  {	  if(rawLen    <    =    MAX_ERROR_TOKEN_LENGTH    ||    rawLen    >    1)    {    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
71	[BUG]  [BUGGY]  if(rawLen  <  =  MAX_ERROR_TOKEN_LENGTH  &&  rawLen  >  1)  {  [CE]  illegal  start  of  expression  [FE]                  JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen  <  =  MAX_ERROR_TOKEN_LENGTH  &&  rawLen  >  1)  {  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen  <  =  MAX_ERROR_TOKEN_LENGTH  &&  rawLen  >  1)  {	  if(rawLen    <    =    MAX_ERROR_TOKEN_LENGTH    ||    rawLen    >    1)    {    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
72	[BUG]  [BUGGY]  if(rawLen  >  0)  {  If(rawLen  >=  0)  {  [CE]  ';'  expected  [FE]        JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen  >  0)  {  If(rawLen  >=  0)  {  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen  >  0)  {  If(rawLen  >=  0)  {	  if(rawLen    >=    0)    {    If(rawLen    >=    0)    {    	non-compiled	[CE]  ';'  expected	47	None	replace
73	[BUG]  [BUGGY]  _currToken  =  JsonToken.VALUE_NUMBER_INT  +  1;  [CE]  illegal  start  of  type  [FE]                JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  _currToken  =  JsonToken.VALUE_NUMBER_INT  +  1;  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	_currToken  =  JsonToken.VALUE_NUMBER_INT  +  1;	  _currToken    =    JsonToken.VALUE_NUMBER_INT;    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
74	[BUG]  [BUGGY]  if(rawLen  >  0)  {  if(rawLen  >  0)  {  [CE]  illegal  start  of  expression  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen  >  0)  {  if(rawLen  >  0)  {  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen    >    0)    {    if(rawLen  >  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	13	None	add
75	[BUG]  [BUGGY]  if(rawLen  >  0)  {  If(rawLen  >  0)  {  [CE]  ';'  expected  [FE]      JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen  >  0)  {  If(rawLen  >  0)  {  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen    >    0)    {    If(rawLen  >  0)  {	  	non-compiled	[CE]  ';'  expected	13	None	add
76	[BUG]  [BUGGY]  if(rawLen  >  0)  {  if(rawLen  >  0)  <  rawNum;  [CE]  >  expected  [FE]        JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen  >  0)  {  if(rawLen  >  0)  <  rawNum;  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen    >    0)    {    if(rawLen  >  0)  <  rawNum;	  	non-compiled	[CE]  >  expected	13	None	add
77	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]            JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen  ==  1  ||  rawLen  <  1000)  {  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	add	if(rawLen  ==  1  ||  rawLen  <  1000)  {	  if(rawLen    ==    1    ||    rawLen    <    =    1000)    {    	compilable	  [FE]  JsonParseException  	50	8	replace
78	[BUG]  [BUGGY]  if(rawLen  ==  1  ||  rawLen  <  1000)  {  [FE]  JsonParseException  [FE]            JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen  ==  1  ||  rawLen  <  1000)  {  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen  ==  1  ||  rawLen  <  1000)  {	  if(rawLen    ==    1    ||    rawLen    <    =    1000)    {    	compilable	  [FE]  JsonParseException  	50	8	replace
79	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]              JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen  <  1  ||  rawLen  <  1000)  {  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	add	if(rawLen  <  1  ||  rawLen  <  1000)  {	  if(rawLen    ==    1    ||    rawLen    <    =    1000)    {    	compilable	  [FE]  JsonParseException  	50	8	replace
80	[BUG]  [BUGGY]  if(rawLen  <  1  ||  rawLen  <  1000)  {  [FE]  JsonParseException  [FE]              JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen  <  1  ||  rawLen  <  1000)  {  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen  <  1  ||  rawLen  <  1000)  {	  if(rawLen    ==    1    ||    rawLen    <    =    1000)    {    	compilable	  [FE]  JsonParseException  	50	8	replace
81	[BUG]  [BUGGY]  if(rawLen  <  1  ||  rawLen  <  =  1000)  {  [CE]  illegal  start  of  expression  [FE]                JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen  <  1  ||  rawLen  <  =  1000)  {  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen  <  1  ||  rawLen  <  =  1000)  {	  if(rawLen    ==    1    ||    rawLen    <    =    1000)    {    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
82	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]                JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen  ==  0  ||  rawNum  ==  null)  {  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	add	if(rawLen  ==  0  ||  rawNum  ==  null)  {	  if(rawLen    <    =    0    ||    rawNum    ==    null)    {    	compilable	  [FE]  JsonParseException  	46	8	replace
83	[BUG]  [BUGGY]  if(rawLen  ==  0  ||  rawNum  ==  null)  {  [FE]  JsonParseException  [FE]                JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen  ==  0  ||  rawNum  ==  null)  {  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen  ==  0  ||  rawNum  ==  null)  {	  if(rawLen    <    =    0    ||    rawNum    ==    null)    {    	compilable	  [FE]  JsonParseException  	46	8	replace
84	[BUG]  [BUGGY]  if(rawLen  <  =  0  ||  rawNum!=  null)  {  [CE]  illegal  start  of  expression  [FE]                  JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen  <  =  0  ||  rawNum!=  null)  {  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen  <  =  0  ||  rawNum!=  null)  {	  if(rawLen    <    =    0    ||    rawNum    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
85	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]                    JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen  >=  0  ||  rawNum  ==  null)  {  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	add	if(rawLen  >=  0  ||  rawNum  ==  null)  {	  if(rawLen    <    =    0    ||    rawNum    ==    null)    {    	compilable	  [FE]  JsonParseException  	46	8	replace
86	[BUG]  [BUGGY]  if(rawLen  >=  0  ||  rawNum  ==  null)  {  [FE]  JsonParseException  [FE]                    JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen  >=  0  ||  rawNum  ==  null)  {  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen  >=  0  ||  rawNum  ==  null)  {	  if(rawLen    <    =    0    ||    rawNum    ==    null)    {    	compilable	  [FE]  JsonParseException  	46	8	replace
87	[BUG]  [BUGGY]  if(rawLen  >=  1)  {  if(rawLen  >=  1)  {  [CE]  illegal  start  of  expression  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen  >=  1)  {  if(rawLen  >=  1)  {  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen    >=    1)    {    if(rawLen  >=  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	15	None	add
88	[BUG]  [BUGGY]  if(rawLen  >=  1)  {  if(rawLen!=  1)  {  [CE]  illegal  start  of  expression  [FE]      JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen  >=  1)  {  if(rawLen!=  1)  {  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen    >=    1)    {    if(rawLen!=  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	15	None	add
89	[BUG]  [BUGGY]  if(rawLen  >=  1)  {  if(rawLen  >>  1)  {  [CE]  illegal  start  of  expression  [FE]        JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen  >=  1)  {  if(rawLen  >>  1)  {  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen    >=    1)    {    if(rawLen  >>  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	15	None	add
90	[BUG]  [BUGGY]  if(rawLen  >=  1)  {  if(rawLen  ==  1)  {  [CE]  illegal  start  of  expression  [FE]          JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen  >=  1)  {  if(rawLen  ==  1)  {  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen    >=    1)    {    if(rawLen  ==  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	15	None	add
91	[BUG]  [BUGGY]  if(rawLen  >  0)  {  If(rawLen  <  1)  {  [CE]  ';'  expected  [FE]            JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen  >  0)  {  If(rawLen  <  1)  {  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen  >  0)  {  If(rawLen  <  1)  {	  if(rawLen    <    1)    {    If(rawLen    <    1)    {    	non-compiled	[CE]  ';'  expected	27	None	replace
92	[BUG]  [BUGGY]  if(rawLen  ==  1)  {  If(rawLen  <  1)  {  [CE]  ';'  expected  [FE]              JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen  ==  1)  {  If(rawLen  <  1)  {  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen  ==  1)  {  If(rawLen  <  1)  {	  if(rawLen    <    1)    {    If(rawLen    <    1)    {    	non-compiled	[CE]  ';'  expected	27	None	replace
93	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]        JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen  <  2)  {  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	add	if(rawLen  <  2)  {	  if(rawLen    <    1)    {    if(rawLen    <    1)    {    	compilable	  [FE]  JsonParseException  	25	8	replace
94	[BUG]  [BUGGY]  if(rawLen  <  2)  {  [FE]  JsonParseException  [FE]        JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen  <  2)  {  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen  <  2)  {	  if(rawLen    <    1)    {    if(rawLen    <    1)    {    	compilable	  [FE]  JsonParseException  	25	8	replace
95	[BUG]  [BUGGY]  _currToken  =  JsonToken.FIELD_NAME  +  1;  [CE]  illegal  start  of  type  [FE]                  JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  _currToken  =  JsonToken.FIELD_NAME  +  1;  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	_currToken  =  JsonToken.FIELD_NAME  +  1;	  _currToken    =    JsonToken.FIELD_NAME;    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
96	[BUG]  [BUGGY]  if(rawLen  ==  1000)  {  if(rawLen  ==  1000)  {  [CE]  illegal  start  of  expression  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen  ==  1000)  {  if(rawLen  ==  1000)  {  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen    ==    1000)    {    if(rawLen  ==  1000)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
97	[BUG]  [BUGGY]  if(rawLen  ==  1000)  {  if(rawLen  >=  1000)  {  [CE]  illegal  start  of  expression  [FE]      JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen  ==  1000)  {  if(rawLen  >=  1000)  {  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen    ==    1000)    {    if(rawLen  >=  1000)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
98	[BUG]  [BUGGY]  if(rawLen  ==  1000)  {  if(rawLen  ==  100)  {  [CE]  illegal  start  of  expression  [FE]        JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen  ==  1000)  {  if(rawLen  ==  100)  {  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen    ==    1000)    {    if(rawLen  ==  100)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
99	[BUG]  [BUGGY]  if(rawLen  ==  1000)  {  if(rawLen!=  1000)  {  [CE]  illegal  start  of  expression  [FE]          JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen  ==  1000)  {  if(rawLen!=  1000)  {  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen    ==    1000)    {    if(rawLen!=  1000)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
100	[BUG]  [BUGGY]  if(rawLen  <  MAX_ERROR_TOKEN_LENGTH)  {  if(rawLen  <  MAX_ERROR_TOKEN_LENGTH)  {  [CE]  illegal  start  of  expression  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen  <  MAX_ERROR_TOKEN_LENGTH)  {  if(rawLen  <  MAX_ERROR_TOKEN_LENGTH)  {  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen    <    MAX_ERROR_TOKEN_LENGTH)    {    if(rawLen  <  MAX_ERROR_TOKEN_LENGTH)  {	  	non-compiled	[CE]  illegal  start  of  expression	44	None	add
101	[BUG]  [BUGGY]  if(rawLen  <  MAX_ERROR_TOKEN_LENGTH)  {  If(rawLen  <  MAX_ERROR_TOKEN_LENGTH)  {  [CE]  ';'  expected  [FE]      JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen  <  MAX_ERROR_TOKEN_LENGTH)  {  If(rawLen  <  MAX_ERROR_TOKEN_LENGTH)  {  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen    <    MAX_ERROR_TOKEN_LENGTH)    {    If(rawLen  <  MAX_ERROR_TOKEN_LENGTH)  {	  	non-compiled	[CE]  ';'  expected	44	None	add
102	[BUG]  [BUGGY]  if(rawLen  <  MAX_ERROR_TOKEN_LENGTH)  {  if(rawLen  >=  MAX_ERROR_TOKEN_LENGTH)  {  [CE]  illegal  start  of  expression  [FE]        JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen  <  MAX_ERROR_TOKEN_LENGTH)  {  if(rawLen  >=  MAX_ERROR_TOKEN_LENGTH)  {  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen    <    MAX_ERROR_TOKEN_LENGTH)    {    if(rawLen  >=  MAX_ERROR_TOKEN_LENGTH)  {	  	non-compiled	[CE]  illegal  start  of  expression	44	None	add
103	[BUG]  [BUGGY]  if(rawLen  ==  0)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  return  _currToken.toString();  }  if(rawLen  ==  0)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  return  _currToken.toString();  }  [CE]  illegal  start  of  expression  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen  ==  0)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  return  _currToken.toString();  }  if(rawLen  ==  0)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  return  _currToken.toString();  }  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen    ==    0)    {    if(_currToken!=    JsonToken.VALUE_NUMBER_INT)    {    return    _currToken.toString();    }    if(rawLen  ==  0)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  return  _currToken.toString();  }	  	non-compiled	[CE]  illegal  start  of  expression	34	None	add
104	[BUG]  [BUGGY]  if(rawLen  ==  0)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  return  _currToken.toString();  }  if(rawLen!=  0)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  return  _currToken.toString();  }  [CE]  illegal  start  of  expression  [FE]      JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen  ==  0)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  return  _currToken.toString();  }  if(rawLen!=  0)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  return  _currToken.toString();  }  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen    ==    0)    {    if(_currToken!=    JsonToken.VALUE_NUMBER_INT)    {    return    _currToken.toString();    }    if(rawLen!=  0)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  return  _currToken.toString();  }	  	non-compiled	[CE]  illegal  start  of  expression	34	None	add
105	[BUG]  [BUGGY]  if(rawLen  ==  0)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  return  _currToken.toString();  }  if(rawLen  >=  0)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  return  _currToken.toString();  }  [CE]  illegal  start  of  expression  [FE]        JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen  ==  0)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  return  _currToken.toString();  }  if(rawLen  >=  0)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  return  _currToken.toString();  }  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen    ==    0)    {    if(_currToken!=    JsonToken.VALUE_NUMBER_INT)    {    return    _currToken.toString();    }    if(rawLen  >=  0)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  return  _currToken.toString();  }	  	non-compiled	[CE]  illegal  start  of  expression	34	None	add
106	[BUG]  [BUGGY]  if(rawLen  ==  0)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  return  _currToken.toString();  }  if(rawLen  ==  0)  {  if(_currToken  >=  JsonToken.VALUE_NUMBER_INT)  {  return  _currToken.toString();  }  [CE]  illegal  start  of  expression  [FE]          JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen  ==  0)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  return  _currToken.toString();  }  if(rawLen  ==  0)  {  if(_currToken  >=  JsonToken.VALUE_NUMBER_INT)  {  return  _currToken.toString();  }  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen    ==    0)    {    if(_currToken!=    JsonToken.VALUE_NUMBER_INT)    {    return    _currToken.toString();    }    if(rawLen  ==  0)  {  if(_currToken  >=  JsonToken.VALUE_NUMBER_INT)  {  return  _currToken.toString();  }	  	non-compiled	[CE]  illegal  start  of  expression	34	None	add
107	[BUG]  [BUGGY]  if(rawLen!=  0)  {  if(rawLen!=  0)  {  [CE]  illegal  start  of  expression  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen!=  0)  {  if(rawLen!=  0)  {  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen!=    0)    {    if(rawLen!=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	29	None	add
108	[BUG]  [BUGGY]  if(rawLen!=  0)  {  if(rawLen  >=  0)  {  [CE]  illegal  start  of  expression  [FE]      JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen!=  0)  {  if(rawLen  >=  0)  {  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen!=    0)    {    if(rawLen  >=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	29	None	add
109	[BUG]  [BUGGY]  if(rawLen!=  0)  {  if(rawLen  ==  0)  {  [CE]  illegal  start  of  expression  [FE]        JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen!=  0)  {  if(rawLen  ==  0)  {  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen!=    0)    {    if(rawLen  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	29	None	add
110	[BUG]  [BUGGY]  if(rawLen!=  0)  {  if(rawLen  >>  0)  {  [CE]  illegal  start  of  expression  [FE]          JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen!=  0)  {  if(rawLen  >>  0)  {  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen!=    0)    {    if(rawLen  >>  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	29	None	add
111	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen  >  1000)  {  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	add	if(rawLen  >  1000)  {	  if(rawLen    ==    1000)    {    	compilable	  [FE]  JsonParseException  	2	8	replace
112	[BUG]  [BUGGY]  if(rawLen  >  1000)  {  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen  >  1000)  {  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen  >  1000)  {	  if(rawLen    ==    1000)    {    	compilable	  [FE]  JsonParseException  	2	8	replace
113	[BUG]  [BUGGY]  if(rawLen  ==  1000)  {  if(rawLen  ==  10000)  {  [CE]  illegal  start  of  expression  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen  ==  1000)  {  if(rawLen  ==  10000)  {  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen    ==    1000)    {    if(rawLen  ==  10000)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
114	[BUG]  [BUGGY]  if(rawLen  ==  1000)  {  If(rawLen  ==  1000)  {  [CE]  ';'  expected  [FE]      JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen  ==  1000)  {  If(rawLen  ==  1000)  {  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen    ==    1000)    {    If(rawLen  ==  1000)  {	  	non-compiled	[CE]  ';'  expected	1	None	add
115	[BUG]  [BUGGY]  if(rawLen  >=  MAX_ERROR_TOKEN_LENGTH)  {  If(rawLen  >=  MAX_ERROR_TOKEN_LENGTH)  {  [CE]  ';'  expected  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen  >=  MAX_ERROR_TOKEN_LENGTH)  {  If(rawLen  >=  MAX_ERROR_TOKEN_LENGTH)  {  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen    >=    MAX_ERROR_TOKEN_LENGTH)    {    If(rawLen  >=  MAX_ERROR_TOKEN_LENGTH)  {	  	non-compiled	[CE]  ';'  expected	9	None	add
116	[BUG]  [BUGGY]  if(rawLen  ==  0)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  return  _currToken.toString();  }  If(rawLen  ==  0)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  return  _currToken.toString();  }  [CE]  ';'  expected  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen  ==  0)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  return  _currToken.toString();  }  If(rawLen  ==  0)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  return  _currToken.toString();  }  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen    ==    0)    {    if(_currToken!=    JsonToken.VALUE_NUMBER_INT)    {    return    _currToken.toString();    }    If(rawLen  ==  0)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  return  _currToken.toString();  }	  	non-compiled	[CE]  ';'  expected	34	None	add
117	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen  >  MAX_ERROR_TOKEN_LENGTH  ||  rawLen  >  MAX_ERROR_TOKEN_LENGTH)  {  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	add	if(rawLen  >  MAX_ERROR_TOKEN_LENGTH  ||  rawLen  >  MAX_ERROR_TOKEN_LENGTH)  {	  if(rawLen    <    MAX_ERROR_TOKEN_LENGTH    ||    rawLen    >    MAX_ERROR_TOKEN_LENGTH)    {    	compilable	  [FE]  JsonParseException  	7	8	replace
118	[BUG]  [BUGGY]  if(rawLen  >  MAX_ERROR_TOKEN_LENGTH  ||  rawLen  >  MAX_ERROR_TOKEN_LENGTH)  {  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen  >  MAX_ERROR_TOKEN_LENGTH  ||  rawLen  >  MAX_ERROR_TOKEN_LENGTH)  {  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen  >  MAX_ERROR_TOKEN_LENGTH  ||  rawLen  >  MAX_ERROR_TOKEN_LENGTH)  {	  if(rawLen    <    MAX_ERROR_TOKEN_LENGTH    ||    rawLen    >    MAX_ERROR_TOKEN_LENGTH)    {    	compilable	  [FE]  JsonParseException  	7	8	replace
119	[BUG]  [BUGGY]  if(rawLen  <  =  0)  {  If(rawLen  >=  0)  {  [CE]  illegal  start  of  expression  [FE]        JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen  <  =  0)  {  If(rawLen  >=  0)  {  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen  <  =  0)  {  If(rawLen  >=  0)  {	  if(rawLen    >=    0)    {    If(rawLen    >=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
120	[BUG]  [BUGGY]  if(rawLen  ==  1)  {  If(rawLen  ==  1)  {  [CE]  ';'  expected  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen  ==  1)  {  If(rawLen  ==  1)  {  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen    ==    1)    {    If(rawLen  ==  1)  {	  	non-compiled	[CE]  ';'  expected	11	None	add
121	[BUG]  [BUGGY]  if(rawLen  ==  0)  {  if(_currToken!=  JsonToken.VALUE_STRING)  {  _currToken  =  JsonToken.VALUE_STRING;  }  If(rawLen  ==  0)  {  if(_currToken!=  JsonToken.VALUE_STRING)  {  _currToken  =  JsonToken.VALUE_STRING;  }  [CE]  ';'  expected  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen  ==  0)  {  if(_currToken!=  JsonToken.VALUE_STRING)  {  _currToken  =  JsonToken.VALUE_STRING;  }  If(rawLen  ==  0)  {  if(_currToken!=  JsonToken.VALUE_STRING)  {  _currToken  =  JsonToken.VALUE_STRING;  }  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen    ==    0)    {    if(_currToken!=    JsonToken.VALUE_STRING)    {    _currToken    =    JsonToken.VALUE_STRING;    }    If(rawLen  ==  0)  {  if(_currToken!=  JsonToken.VALUE_STRING)  {  _currToken  =  JsonToken.VALUE_STRING;  }	  	non-compiled	[CE]  ';'  expected	32	None	add
122	[BUG]  [BUGGY]  if(rawLen  >  0)  {  int  rawLen  =(rawLen  ==  0)?  0  :  rawNum.length();  [CE]  illegal  start  of  expression  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen  >  0)  {  int  rawLen  =(rawLen  ==  0)?  0  :  rawNum.length();  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen    >    0)    {    int  rawLen  =(rawLen  ==  0)?  0  :  rawNum.length();	  	non-compiled	[CE]  illegal  start  of  expression	13	None	add
123	[BUG]  [BUGGY]  if(rawLen  >  0)  {  int  rawLen  =(rawLen  >=  0)?  0  :  rawNum.length();  [CE]  illegal  start  of  expression  [FE]      JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen  >  0)  {  int  rawLen  =(rawLen  >=  0)?  0  :  rawNum.length();  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen    >    0)    {    int  rawLen  =(rawLen  >=  0)?  0  :  rawNum.length();	  	non-compiled	[CE]  illegal  start  of  expression	13	None	add
124	[BUG]  [BUGGY]  _currToken  =  JsonToken.START_ARRAY  +  1;  [CE]  illegal  start  of  type  [FE]                    JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  _currToken  =  JsonToken.START_ARRAY  +  1;  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	_currToken  =  JsonToken.START_ARRAY  +  1;	  _currToken    =    JsonToken.START_ARRAY;    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
125	[BUG]  [BUGGY]  _currToken  =  JsonToken.VALUE_STRING  |  JsonToken.END_ARRAY;  [CE]  illegal  start  of  type  [FE]                JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  _currToken  =  JsonToken.VALUE_STRING  |  JsonToken.END_ARRAY;  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	_currToken  =  JsonToken.VALUE_STRING  |  JsonToken.END_ARRAY;	  _currToken    =    JsonToken.VALUE_STRING;    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
126	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]              JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen!=  1)  {  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	add	if(rawLen!=  1)  {	  if(rawLen    <    =    1)    {    	compilable	  [FE]  JsonParseException  	3	8	replace
127	[BUG]  [BUGGY]  if(rawLen!=  1)  {  [FE]  JsonParseException  [FE]              JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen!=  1)  {  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen!=  1)  {	  if(rawLen    <    =    1)    {    	compilable	  [FE]  JsonParseException  	3	8	replace
128	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]            JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen  ==  MAX_ERROR_TOKEN_LENGTH  ||  rawLen  >  0)  {  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	add	if(rawLen  ==  MAX_ERROR_TOKEN_LENGTH  ||  rawLen  >  0)  {	  if(rawLen    <    =    MAX_ERROR_TOKEN_LENGTH    ||    rawLen    >    0)    {    	compilable	  [FE]  JsonParseException  	48	8	replace
129	[BUG]  [BUGGY]  if(rawLen  ==  MAX_ERROR_TOKEN_LENGTH  ||  rawLen  >  0)  {  [FE]  JsonParseException  [FE]            JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen  ==  MAX_ERROR_TOKEN_LENGTH  ||  rawLen  >  0)  {  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen  ==  MAX_ERROR_TOKEN_LENGTH  ||  rawLen  >  0)  {	  if(rawLen    <    =    MAX_ERROR_TOKEN_LENGTH    ||    rawLen    >    0)    {    	compilable	  [FE]  JsonParseException  	48	8	replace
130	[BUG]  [BUGGY]  if(rawLen  ==  0)  {  if(_currToken!=  JsonToken.VALUE_STRING)  {  _currToken  =  JsonToken.FIELD_NAME;  }  If(rawLen  ==  0)  {  if(_currToken!=  JsonToken.VALUE_STRING)  {  _currToken  =  JsonToken.FIELD_NAME;  }  [CE]  ';'  expected  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen  ==  0)  {  if(_currToken!=  JsonToken.VALUE_STRING)  {  _currToken  =  JsonToken.FIELD_NAME;  }  If(rawLen  ==  0)  {  if(_currToken!=  JsonToken.VALUE_STRING)  {  _currToken  =  JsonToken.FIELD_NAME;  }  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen    ==    0)    {    if(_currToken!=    JsonToken.VALUE_STRING)    {    _currToken    =    JsonToken.FIELD_NAME;    }    If(rawLen  ==  0)  {  if(_currToken!=  JsonToken.VALUE_STRING)  {  _currToken  =  JsonToken.FIELD_NAME;  }	  	non-compiled	[CE]  ';'  expected	36	None	add
131	[BUG]  [BUGGY]  if(rawLen  ==  0)  {  If(rawLen  <  1)  {  [CE]  ';'  expected  [FE]            JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen  ==  0)  {  If(rawLen  <  1)  {  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen  ==  0)  {  If(rawLen  <  1)  {	  if(rawLen    <    1)    {    If(rawLen    <    1)    {    	non-compiled	[CE]  ';'  expected	27	None	replace
132	[BUG]  [BUGGY]  if(rawLen  <  =  1)  {  If(rawLen  <  1)  {  [CE]  illegal  start  of  expression  [FE]              JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen  <  =  1)  {  If(rawLen  <  1)  {  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen  <  =  1)  {  If(rawLen  <  1)  {	  if(rawLen    <    1)    {    If(rawLen    <    1)    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
133	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]              JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen  ==  10000)  {  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	add	if(rawLen  ==  10000)  {	  if(rawLen    <    =    10000)    {    	compilable	  [FE]  JsonParseException  	51	8	replace
134	[BUG]  [BUGGY]  if(rawLen  ==  10000)  {  [FE]  JsonParseException  [FE]              JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen  ==  10000)  {  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen  ==  10000)  {	  if(rawLen    <    =    10000)    {    	compilable	  [FE]  JsonParseException  	51	8	replace
135	[BUG]  [BUGGY]  if(rawLen  ==  0)  {  if(_currToken!=  JsonToken.VALUE_STRING)  {  return  _currToken.substring(0,  rawLen);  }  [CE]  cannot  find  symbol  [FE]                JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen  ==  0)  {  if(_currToken!=  JsonToken.VALUE_STRING)  {  return  _currToken.substring(0,  rawLen);  }  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen  ==  0)  {  if(_currToken!=  JsonToken.VALUE_STRING)  {  return  _currToken.substring(0,  rawLen);  }	  if(rawLen    ==    0)    {    if(_currToken!=    JsonToken.VALUE_NUMBER_INT)    {    return    _currToken.substring(0,    rawLen);    }    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
136	[BUG]  [BUGGY]  if(rawLen  ==  0)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.VALUE_NUMBER_FLOAT)  {  return  _currToken.substring(0,  rawLen);  }  [CE]  cannot  find  symbol  [FE]                  JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen  ==  0)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.VALUE_NUMBER_FLOAT)  {  return  _currToken.substring(0,  rawLen);  }  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen  ==  0)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.VALUE_NUMBER_FLOAT)  {  return  _currToken.substring(0,  rawLen);  }	  if(rawLen    ==    0)    {    if(_currToken!=    JsonToken.VALUE_NUMBER_INT)    {    return    _currToken.substring(0,    rawLen);    }    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
137	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen  ==  0)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  _currToken  =  JsonToken.VALUE_STRING;  }  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	add	if(rawLen  ==  0)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  _currToken  =  JsonToken.VALUE_STRING;  }	  if(rawLen    ==    0)    {    if(_currToken!=    JsonToken.VALUE_STRING)    {    _currToken    =    JsonToken.VALUE_STRING;    }    	compilable	  [FE]  JsonParseException  	33	8	replace
138	[BUG]  [BUGGY]  if(rawLen  ==  0)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  _currToken  =  JsonToken.VALUE_STRING;  }  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen  ==  0)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  _currToken  =  JsonToken.VALUE_STRING;  }  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen  ==  0)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  _currToken  =  JsonToken.VALUE_STRING;  }	  if(rawLen    ==    0)    {    if(_currToken!=    JsonToken.VALUE_STRING)    {    _currToken    =    JsonToken.VALUE_STRING;    }    	compilable	  [FE]  JsonParseException  	33	8	replace
139	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]                JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen  >=  MAX_ERROR_TOKEN_LENGTH  ||  rawLen  >  MAX_ERROR_TOKEN_LENGTH)  {  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	add	if(rawLen  >=  MAX_ERROR_TOKEN_LENGTH  ||  rawLen  >  MAX_ERROR_TOKEN_LENGTH)  {	  if(rawLen    <    =    MAX_ERROR_TOKEN_LENGTH    ||    rawLen    >    MAX_ERROR_TOKEN_LENGTH)    {    	compilable	  [FE]  JsonParseException  	8	8	replace
140	[BUG]  [BUGGY]  if(rawLen  >=  MAX_ERROR_TOKEN_LENGTH  ||  rawLen  >  MAX_ERROR_TOKEN_LENGTH)  {  [FE]  JsonParseException  [FE]                JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen  >=  MAX_ERROR_TOKEN_LENGTH  ||  rawLen  >  MAX_ERROR_TOKEN_LENGTH)  {  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen  >=  MAX_ERROR_TOKEN_LENGTH  ||  rawLen  >  MAX_ERROR_TOKEN_LENGTH)  {	  if(rawLen    <    =    MAX_ERROR_TOKEN_LENGTH    ||    rawLen    >    MAX_ERROR_TOKEN_LENGTH)    {    	compilable	  [FE]  JsonParseException  	8	8	replace
141	[BUG]  [BUGGY]  if(rawLen  <  =  0)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  return  _currToken.toString();  }  [CE]  illegal  start  of  expression  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen  <  =  0)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  return  _currToken.toString();  }  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen  <  =  0)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  return  _currToken.toString();  }	  if(rawLen    ==    0)    {    if(_currToken!=    JsonToken.VALUE_NUMBER_INT)    {    return    _currToken.toString();    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
142	[BUG]  [BUGGY]  ||  rawLen  ==  0)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  return  _currToken.toString();  }  [CE]  illegal  start  of  expression  [FE]      JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  ||  rawLen  ==  0)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  return  _currToken.toString();  }  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	||  rawLen  ==  0)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  return  _currToken.toString();  }	  if(rawLen    ==    0)    {    if(_currToken!=    JsonToken.VALUE_NUMBER_INT)    {    return    _currToken.toString();    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
143	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]                JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen!=  0  ||  rawNum  ==  null)  {  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	add	if(rawLen!=  0  ||  rawNum  ==  null)  {	  if(rawLen    <    =    0    ||    rawNum    ==    null)    {    	compilable	  [FE]  JsonParseException  	46	8	replace
144	[BUG]  [BUGGY]  if(rawLen!=  0  ||  rawNum  ==  null)  {  [FE]  JsonParseException  [FE]                JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen!=  0  ||  rawNum  ==  null)  {  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen!=  0  ||  rawNum  ==  null)  {	  if(rawLen    <    =    0    ||    rawNum    ==    null)    {    	compilable	  [FE]  JsonParseException  	46	8	replace
145	[BUG]  [BUGGY]  if(rawLen  <  =  0)  {  If(rawLen  ==  0)  {  [CE]  illegal  start  of  expression  [FE]              JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen  <  =  0)  {  If(rawLen  ==  0)  {  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen  <  =  0)  {  If(rawLen  ==  0)  {	  if(rawLen    ==    0)    {    If(rawLen    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
146	[BUG]  [BUGGY]  if(rawLen  >  0)  {  If(rawLen  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]                JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen  >  0)  {  If(rawLen  <  =  0)  {  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen  >  0)  {  If(rawLen  <  =  0)  {	  if(rawLen    ==    0)    {    If(rawLen    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
147	[BUG]  [BUGGY]  ||  rawLen  ==  0)  {  if(_currToken!=  JsonToken.VALUE_STRING)  {  _currToken  =  JsonToken.FIELD_NAME;  }  [CE]  illegal  start  of  expression  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  ||  rawLen  ==  0)  {  if(_currToken!=  JsonToken.VALUE_STRING)  {  _currToken  =  JsonToken.FIELD_NAME;  }  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	||  rawLen  ==  0)  {  if(_currToken!=  JsonToken.VALUE_STRING)  {  _currToken  =  JsonToken.FIELD_NAME;  }	  if(rawLen    ==    0)    {    if(_currToken!=    JsonToken.VALUE_STRING)    {    _currToken    =    JsonToken.FIELD_NAME;    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
148	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen  ==  0)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  _currToken  =  JsonToken.FIELD_NAME;  }  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	add	if(rawLen  ==  0)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  _currToken  =  JsonToken.FIELD_NAME;  }	  if(rawLen    ==    0)    {    if(_currToken!=    JsonToken.VALUE_STRING)    {    _currToken    =    JsonToken.FIELD_NAME;    }    	compilable	  [FE]  JsonParseException  	37	8	replace
149	[BUG]  [BUGGY]  if(rawLen  ==  0)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  _currToken  =  JsonToken.FIELD_NAME;  }  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen  ==  0)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  _currToken  =  JsonToken.FIELD_NAME;  }  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen  ==  0)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  _currToken  =  JsonToken.FIELD_NAME;  }	  if(rawLen    ==    0)    {    if(_currToken!=    JsonToken.VALUE_STRING)    {    _currToken    =    JsonToken.FIELD_NAME;    }    	compilable	  [FE]  JsonParseException  	37	8	replace
150	[BUG]  [BUGGY]  if(rawLen  <  MAX_ERROR_TOKEN_LENGTH  ||  rawLen  >  MAX_ERROR_TOKEN_LENGTH)  {  if(rawLen  <  MAX_ERROR_TOKEN_LENGTH  ||  rawLen  >  MAX_ERROR_TOKEN_LANGTH)  {  [CE]  illegal  start  of  expression  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen  <  MAX_ERROR_TOKEN_LENGTH  ||  rawLen  >  MAX_ERROR_TOKEN_LENGTH)  {  if(rawLen  <  MAX_ERROR_TOKEN_LENGTH  ||  rawLen  >  MAX_ERROR_TOKEN_LANGTH)  {  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen    <    MAX_ERROR_TOKEN_LENGTH    ||    rawLen    >    MAX_ERROR_TOKEN_LENGTH)    {    if(rawLen  <  MAX_ERROR_TOKEN_LENGTH  ||  rawLen  >  MAX_ERROR_TOKEN_LANGTH)  {	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
151	[BUG]  [BUGGY]  if(rawLen!=  0)  {  if(rawNum.startsWith( "- ")||  rawLen  <  2)  {  throw  new  JsonParseException( " ");  }  [CE]  no  suitable  constructor  found  for  JsonParseException(String)  [FE]                      JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen!=  0)  {  if(rawNum.startsWith( "- ")||  rawLen  <  2)  {  throw  new  JsonParseException( " ");  }  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen!=  0)  {  if(rawNum.startsWith( "- ")||  rawLen  <  2)  {  throw  new  JsonParseException( " ");  }	  if(rawLen    ==    0)    {    if(rawNum.startsWith(   "-   ")||    rawLen    <    2)    {    throw    new    JsonParseException(   "   ");    }    	non-compiled	[CE]  no  suitable  constructor  found  for  JsonParseException(String)	41	None	replace
152	[BUG]  [BUGGY]  if(rawLen  ==  0)  {  if(rawNum.startsWith( "- ")||  rawLen  <  1)  {  throw  new  JsonParseException( " ");  }  [CE]  no  suitable  constructor  found  for  JsonParseException(String)  [FE]                        JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen  ==  0)  {  if(rawNum.startsWith( "- ")||  rawLen  <  1)  {  throw  new  JsonParseException( " ");  }  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen  ==  0)  {  if(rawNum.startsWith( "- ")||  rawLen  <  1)  {  throw  new  JsonParseException( " ");  }	  if(rawLen    ==    0)    {    if(rawNum.startsWith(   "-   ")||    rawLen    <    2)    {    throw    new    JsonParseException(   "   ");    }    	non-compiled	[CE]  no  suitable  constructor  found  for  JsonParseException(String)	41	None	replace
153	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]              JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen  ==  MAX_ERROR_TOKEN_LENGTH  ||  rawLen  >  1)  {  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	add	if(rawLen  ==  MAX_ERROR_TOKEN_LENGTH  ||  rawLen  >  1)  {	  if(rawLen    <    =    MAX_ERROR_TOKEN_LENGTH    ||    rawLen    >    1)    {    	compilable	  [FE]  JsonParseException  	49	8	replace
154	[BUG]  [BUGGY]  if(rawLen  ==  MAX_ERROR_TOKEN_LENGTH  ||  rawLen  >  1)  {  [FE]  JsonParseException  [FE]              JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen  ==  MAX_ERROR_TOKEN_LENGTH  ||  rawLen  >  1)  {  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen  ==  MAX_ERROR_TOKEN_LENGTH  ||  rawLen  >  1)  {	  if(rawLen    <    =    MAX_ERROR_TOKEN_LENGTH    ||    rawLen    >    1)    {    	compilable	  [FE]  JsonParseException  	49	8	replace
155	[BUG]  [BUGGY]  if(rawLen  <  =  1  ||  rawLen  >  1)  {  [CE]  illegal  start  of  expression  [FE]                JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen  <  =  1  ||  rawLen  >  1)  {  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen  <  =  1  ||  rawLen  >  1)  {	  if(rawLen    <    =    MAX_ERROR_TOKEN_LENGTH    ||    rawLen    >    1)    {    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
156	[BUG]  [BUGGY]  if(rawLen  <  =  1  ||  rawLen  <  =  1000)  {  [CE]  illegal  start  of  expression  [FE]            JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen  <  =  1  ||  rawLen  <  =  1000)  {  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen  <  =  1  ||  rawLen  <  =  1000)  {	  if(rawLen    ==    1    ||    rawLen    <    =    1000)    {    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
157	[BUG]  [BUGGY]  ||(rawLen  ==  0  &&  _currToken!=  JsonToken.VALUE_STRING))  {  _currToken  =  JsonToken.FIELD_NAME;  }  [CE]  illegal  start  of  expression  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  ||(rawLen  ==  0  &&  _currToken!=  JsonToken.VALUE_STRING))  {  _currToken  =  JsonToken.FIELD_NAME;  }  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	||(rawLen  ==  0  &&  _currToken!=  JsonToken.VALUE_STRING))  {  _currToken  =  JsonToken.FIELD_NAME;  }	  if(rawLen    ==    0)    {    if(_currToken!=    JsonToken.VALUE_STRING)    {    _currToken    =    JsonToken.FIELD_NAME;    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
158	[BUG]  [BUGGY]  ||(rawLen  ==  0  &&  _currToken!=  JsonToken.VALUE_STRING  &&  _currToken!=  JsonToken.FIELD_NAME))  {  _currToken  =  J  [CE]  illegal  start  of  expression  [FE]      JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  ||(rawLen  ==  0  &&  _currToken!=  JsonToken.VALUE_STRING  &&  _currToken!=  JsonToken.FIELD_NAME))  {  _currToken  =  J  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	||(rawLen  ==  0  &&  _currToken!=  JsonToken.VALUE_STRING  &&  _currToken!=  JsonToken.FIELD_NAME))  {  _currToken  =  J	  if(rawLen    ==    0)    {    if(_currToken!=    JsonToken.VALUE_STRING)    {    _currToken    =    JsonToken.FIELD_NAME;    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
159	[BUG]  [BUGGY]  ||(rawLen  ==  0  &&  _currToken!=  JsonToken.VALUE_STRING))  {  _currToken  =  JsonToken.VALUE_STRING;  }  [CE]  illegal  start  of  expression  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  ||(rawLen  ==  0  &&  _currToken!=  JsonToken.VALUE_STRING))  {  _currToken  =  JsonToken.VALUE_STRING;  }  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	||(rawLen  ==  0  &&  _currToken!=  JsonToken.VALUE_STRING))  {  _currToken  =  JsonToken.VALUE_STRING;  }	  if(rawLen    ==    0)    {    if(_currToken!=    JsonToken.VALUE_STRING)    {    _currToken    =    JsonToken.VALUE_STRING;    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
160	[BUG]  [BUGGY]  if(rawLen!=  0)  {  If(rawLen!=  0)  {  [CE]  ';'  expected  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen!=  0)  {  If(rawLen!=  0)  {  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen!=    0)    {    If(rawLen!=  0)  {	  	non-compiled	[CE]  ';'  expected	29	None	add
161	[BUG]  [BUGGY]  if(rawLen  <  =  10000  ||  rawLen  >  MAX_ERROR_TOKEN_LENGTH)  {  [CE]  illegal  start  of  expression  [FE]              JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen  <  =  10000  ||  rawLen  >  MAX_ERROR_TOKEN_LENGTH)  {  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen  <  =  10000  ||  rawLen  >  MAX_ERROR_TOKEN_LENGTH)  {	  if(rawLen    <    =    10000)    {    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
162	[BUG]  [BUGGY]  if(rawLen  ==  0)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  return  _currToken.toString();  }  if(rawLen  ==  0)  {  if(_currToken  }  JsonToken.VALUE_NUMBER_INT)  {  return  _currToken.toString();  }  [CE]  ')'  expected  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen  ==  0)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  return  _currToken.toString();  }  if(rawLen  ==  0)  {  if(_currToken  }  JsonToken.VALUE_NUMBER_INT)  {  return  _currToken.toString();  }  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen    ==    0)    {    if(_currToken!=    JsonToken.VALUE_NUMBER_INT)    {    return    _currToken.toString();    }    if(rawLen  ==  0)  {  if(_currToken  }  JsonToken.VALUE_NUMBER_INT)  {  return  _currToken.toString();  }	  	non-compiled	[CE]  ')'  expected	34	None	add
163	[BUG]  [BUGGY]  if(rawLen  <  =  MAX_ERROR_TOKEN_LENGTH  ||  rawLen  >  9)  {  [CE]  illegal  start  of  expression  [FE]            JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen  <  =  MAX_ERROR_TOKEN_LENGTH  ||  rawLen  >  9)  {  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen  <  =  MAX_ERROR_TOKEN_LENGTH  ||  rawLen  >  9)  {	  if(rawLen    <    =    MAX_ERROR_TOKEN_LENGTH    ||    rawLen    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
164	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen  <  MAX_ERROR_TOKEN_LENGTH  ||  rawLen  >  MAX_ERROR_TOKEN_LENGTH  ||  rawLen  >  MAX_ERROR_TOKEN_LENGTH)  {  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	add	if(rawLen  <  MAX_ERROR_TOKEN_LENGTH  ||  rawLen  >  MAX_ERROR_TOKEN_LENGTH  ||  rawLen  >  MAX_ERROR_TOKEN_LENGTH)  {	  if(rawLen    <    MAX_ERROR_TOKEN_LENGTH    ||    rawLen    >    MAX_ERROR_TOKEN_LENGTH)    {    	compilable	  [FE]  JsonParseException  	7	8	replace
165	[BUG]  [BUGGY]  if(rawLen  <  MAX_ERROR_TOKEN_LENGTH  ||  rawLen  >  MAX_ERROR_TOKEN_LENGTH  ||  rawLen  >  MAX_ERROR_TOKEN_LENGTH)  {  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen  <  MAX_ERROR_TOKEN_LENGTH  ||  rawLen  >  MAX_ERROR_TOKEN_LENGTH  ||  rawLen  >  MAX_ERROR_TOKEN_LENGTH)  {  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen  <  MAX_ERROR_TOKEN_LENGTH  ||  rawLen  >  MAX_ERROR_TOKEN_LENGTH  ||  rawLen  >  MAX_ERROR_TOKEN_LENGTH)  {	  if(rawLen    <    MAX_ERROR_TOKEN_LENGTH    ||    rawLen    >    MAX_ERROR_TOKEN_LENGTH)    {    	compilable	  [FE]  JsonParseException  	7	8	replace
166	[BUG]  [BUGGY]  if(rawLen  >=  1)  {  if(rawLen  >=  2)  {  [CE]  illegal  start  of  expression  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen  >=  1)  {  if(rawLen  >=  2)  {  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen    >=    1)    {    if(rawLen  >=  2)  {	  	non-compiled	[CE]  illegal  start  of  expression	15	None	add
167	[BUG]  [BUGGY]  _currToken  =  JsonToken.VALUE_STRING  ||  JsonToken.VALUE_FLOAT;  [CE]  illegal  start  of  type  [FE]                JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  _currToken  =  JsonToken.VALUE_STRING  ||  JsonToken.VALUE_FLOAT;  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	_currToken  =  JsonToken.VALUE_STRING  ||  JsonToken.VALUE_FLOAT;	  _currToken    =    JsonToken.VALUE_STRING;    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
168	[BUG]  [BUGGY]  if(rawLen  <  =  1  ||  rawLen  <  1)  {  [CE]  illegal  start  of  expression  [FE]            JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen  <  =  1  ||  rawLen  <  1)  {  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen  <  =  1  ||  rawLen  <  1)  {	  if(rawLen    <    1)    {    If(rawLen    <    1)    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
169	[BUG]  [BUGGY]  if(rawLen  <  =  9)  {  [CE]  illegal  start  of  expression  [FE]              JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen  <  =  9)  {  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen  <  =  9)  {	  if(rawLen    <    =    1)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
170	[BUG]  [BUGGY]  if(rawLen  <  =  0)  {  if(rawNum.startsWith( "- ")||  rawLen  <  2)  {  throw  new  JsonParseException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen  <  =  0)  {  if(rawNum.startsWith( "- ")||  rawLen  <  2)  {  throw  new  JsonParseException( " ");  }  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen  <  =  0)  {  if(rawNum.startsWith( "- ")||  rawLen  <  2)  {  throw  new  JsonParseException( " ");  }	  if(rawLen    ==    0)    {    if(rawNum.startsWith(   "-   ")||    rawLen    <    2)    {    throw    new    JsonParseException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
171	[BUG]  [BUGGY]  if(rawLen  >  0)  {  if(rawNum.startsWith( "- ")||  rawLen  <  2)  {  throw  new  JsonParseException( " ");  }  [CE]  no  suitable  constructor  found  for  JsonParseException(String)  [FE]                        JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen  >  0)  {  if(rawNum.startsWith( "- ")||  rawLen  <  2)  {  throw  new  JsonParseException( " ");  }  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen  >  0)  {  if(rawNum.startsWith( "- ")||  rawLen  <  2)  {  throw  new  JsonParseException( " ");  }	  if(rawLen    ==    0)    {    if(rawNum.startsWith(   "-   ")||    rawLen    <    2)    {    throw    new    JsonParseException(   "   ");    }    	non-compiled	[CE]  no  suitable  constructor  found  for  JsonParseException(String)	41	None	replace
172	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen  ==  0)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.VALUE_NUMBER_FLOAT)  {  return  _currToken.toString();  }  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	add	if(rawLen  ==  0)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.VALUE_NUMBER_FLOAT)  {  return  _currToken.toString();  }	  if(rawLen    ==    0)    {    if(_currToken!=    JsonToken.VALUE_NUMBER_INT)    {    return    _currToken.toString();    }    	compilable	  [FE]  JsonParseException  	35	8	replace
173	[BUG]  [BUGGY]  if(rawLen  ==  0)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.VALUE_NUMBER_FLOAT)  {  return  _currToken.toString();  }  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen  ==  0)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.VALUE_NUMBER_FLOAT)  {  return  _currToken.toString();  }  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen  ==  0)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.VALUE_NUMBER_FLOAT)  {  return  _currToken.toString();  }	  if(rawLen    ==    0)    {    if(_currToken!=    JsonToken.VALUE_NUMBER_INT)    {    return    _currToken.toString();    }    	compilable	  [FE]  JsonParseException  	35	8	replace
174	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen  >  MAX_ERROR_TOKEN_LENGTH  ||  rawLen  <  MAX_ERROR_TOKEN_LENGTH)  {  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	add	if(rawLen  >  MAX_ERROR_TOKEN_LENGTH  ||  rawLen  <  MAX_ERROR_TOKEN_LENGTH)  {	  if(rawLen    <    MAX_ERROR_TOKEN_LENGTH)    {    	compilable	  [FE]  JsonParseException  	45	8	replace
175	[BUG]  [BUGGY]  if(rawLen  >  MAX_ERROR_TOKEN_LENGTH  ||  rawLen  <  MAX_ERROR_TOKEN_LENGTH)  {  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen  >  MAX_ERROR_TOKEN_LENGTH  ||  rawLen  <  MAX_ERROR_TOKEN_LENGTH)  {  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen  >  MAX_ERROR_TOKEN_LENGTH  ||  rawLen  <  MAX_ERROR_TOKEN_LENGTH)  {	  if(rawLen    <    MAX_ERROR_TOKEN_LENGTH)    {    	compilable	  [FE]  JsonParseException  	45	8	replace
176	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen  ==  1  ||  rawLen!=  MAX_ERROR_TOKEN_LENGTH)  {  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	add	if(rawLen  ==  1  ||  rawLen!=  MAX_ERROR_TOKEN_LENGTH)  {	  if(rawLen!=    MAX_ERROR_TOKEN_LENGTH)    {    	compilable	  [FE]  JsonParseException  	43	8	replace
177	[BUG]  [BUGGY]  if(rawLen  ==  1  ||  rawLen!=  MAX_ERROR_TOKEN_LENGTH)  {  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();      [BUGGY]  if(rawLen  ==  1  ||  rawLen!=  MAX_ERROR_TOKEN_LENGTH)  {  [BUGGY]      return  rawNum;  }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.7905694150420948	599	599	8	replace	if(rawLen  ==  1  ||  rawLen!=  MAX_ERROR_TOKEN_LENGTH)  {	  if(rawLen!=    MAX_ERROR_TOKEN_LENGTH)    {    	compilable	  [FE]  JsonParseException  	43	8	replace
