bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(rawLen  >  0  ||  rawNum.startsWith(   "-   "))  {  if(rawLen  >  0  ||  rawNum.startsWith( "-   "))  {  [CE]  illegal  start  of  expression  [FE]    JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }    [BUGGY]  if(rawLen  >  0  ||  rawNum.startsWith(   "-   "))  {  if(rawLen  >  0  ||  rawNum.startsWith( "-   "))  {  [BUGGY]    rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen    >    0    ||    rawNum.startsWith(   "-   "))    {    if(rawLen  >  0  ||  rawNum.startsWith( "-   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	13	None	add
2	[BUG]  [BUGGY]  if(rawLen  >  0  ||  rawNum.startsWith(   "-   "))  {  if(rawLen  >  0  ||  rawNum.startsWith( ".-   "))  {  [CE]  illegal  start  of  expression  [FE]      JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }    [BUGGY]  if(rawLen  >  0  ||  rawNum.startsWith(   "-   "))  {  if(rawLen  >  0  ||  rawNum.startsWith( ".-   "))  {  [BUGGY]    rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen    >    0    ||    rawNum.startsWith(   "-   "))    {    if(rawLen  >  0  ||  rawNum.startsWith( ".-   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	13	None	add
3	[BUG]  [BUGGY]  if(rawLen  >  0  ||  rawNum.startsWith(   "-   "))  {  If(rawLen  >  0  ||  rawNum.startsWith( "-   "))  {  [CE]  [FE]        JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }    [BUGGY]  if(rawLen  >  0  ||  rawNum.startsWith(   "-   "))  {  If(rawLen  >  0  ||  rawNum.startsWith( "-   "))  {  [BUGGY]    rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen    >    0    ||    rawNum.startsWith(   "-   "))    {    If(rawLen  >  0  ||  rawNum.startsWith( "-   "))  {	  	non-compiled	[CE]  	13	None	add
4	[BUG]  [BUGGY]  if(rawLen  ==  0)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  return  _currToken.substring(0,  rawLen);  }  [CE]  cannot  find  symbol  [FE]              JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }    [BUGGY]  if(rawLen  ==  0)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  return  _currToken.substring(0,  rawLen);  }  [BUGGY]    rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen  ==  0)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  return  _currToken.substring(0,  rawLen);  }	      	non-compiled	[CE]  cannot  find  symbol	6	None	replace
5	[BUG]  [BUGGY]  if(rawLen  ==  0)  {  if(_currToken!=  JsonToken.END_OBJECT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  return  _currToken.substring(0,  rawLen);  }  [CE]  cannot  find  symbol  [FE]                JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }    [BUGGY]  if(rawLen  ==  0)  {  if(_currToken!=  JsonToken.END_OBJECT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  return  _currToken.substring(0,  rawLen);  }  [BUGGY]    rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen  ==  0)  {  if(_currToken!=  JsonToken.END_OBJECT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  return  _currToken.substring(0,  rawLen);  }	      	non-compiled	[CE]  cannot  find  symbol	6	None	replace
6	[BUG]  [BUGGY]  if(rawLen  ==  0)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  return  _currToken;  }  [CE]  incompatible  types  [FE]                  JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }    [BUGGY]  if(rawLen  ==  0)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  return  _currToken;  }  [BUGGY]    rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen  ==  0)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  return  _currToken;  }	      	non-compiled	[CE]  incompatible  types	6	None	replace
7	[BUG]  [BUGGY]  if(rawLen  ==  0)  {  if(_currToken!=  JsonToken.VALUE_STRING)  {  return  _currToken.substring(0,  rawLen);  }  [CE]  cannot  find  symbol  [FE]                    JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }    [BUGGY]  if(rawLen  ==  0)  {  if(_currToken!=  JsonToken.VALUE_STRING)  {  return  _currToken.substring(0,  rawLen);  }  [BUGGY]    rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen  ==  0)  {  if(_currToken!=  JsonToken.VALUE_STRING)  {  return  _currToken.substring(0,  rawLen);  }	      	non-compiled	[CE]  cannot  find  symbol	6	None	replace
8	[BUG]  [BUGGY]  if  (rawNum.startsWith(   "-   ")||  rawLen  <  1)  {  if  (rawNum.startsWith( "-   ")||  rawLen  <  1)  {  [CE]  illegal  start  of  expression  [FE]    JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }    [BUGGY]  if  (rawNum.startsWith(   "-   ")||  rawLen  <  1)  {  if  (rawNum.startsWith( "-   ")||  rawLen  <  1)  {  [BUGGY]    rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if    (rawNum.startsWith(   "-   ")||    rawLen    <    1)    {    if  (rawNum.startsWith( "-   ")||  rawLen  <  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	4	None	add
9	[BUG]  [BUGGY]  if  (rawNum.startsWith(   "-   ")||  rawLen  <  1)  {  if  (rawNum.startsWith( ".-   ")||  rawLen  <  1)  {  [CE]  illegal  start  of  expression  [FE]      JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }    [BUGGY]  if  (rawNum.startsWith(   "-   ")||  rawLen  <  1)  {  if  (rawNum.startsWith( ".-   ")||  rawLen  <  1)  {  [BUGGY]    rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if    (rawNum.startsWith(   "-   ")||    rawLen    <    1)    {    if  (rawNum.startsWith( ".-   ")||  rawLen  <  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	4	None	add
10	[BUG]  [BUGGY]  if(rawLen  <  1)  {  if(rawLen  <  1)  {  [CE]  illegal  start  of  expression  [FE]    JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }    [BUGGY]  if(rawLen  <  1)  {  if(rawLen  <  1)  {  [BUGGY]    rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen    <    1)    {    if(rawLen  <  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
11	[BUG]  [BUGGY]  if(rawLen  <  1)  {  If(rawLen  <  1)  {  [CE]  ';'  expected  [FE]      JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }    [BUGGY]  if(rawLen  <  1)  {  If(rawLen  <  1)  {  [BUGGY]    rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen    <    1)    {    If(rawLen  <  1)  {	  	non-compiled	[CE]  ';'  expected	11	None	add
12	[BUG]  [BUGGY]  if(rawLen  <  1)  {  if(rawLen  >=  1)  {  [CE]  illegal  start  of  expression  [FE]        JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }    [BUGGY]  if(rawLen  <  1)  {  if(rawLen  >=  1)  {  [BUGGY]    rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen    <    1)    {    if(rawLen  >=  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
13	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }    [BUGGY]  if(rawLen  >  0)  {  [BUGGY]    rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	add	if(rawLen  >  0)  {	  if(rawLen    <    1)    {    	compilable	  [FE]  JsonParseException  	12	8	replace
14	[BUG]  [BUGGY]  if(rawLen  >  0)  {  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }    [BUGGY]  if(rawLen  >  0)  {  [BUGGY]    rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen  >  0)  {	  if(rawLen    <    1)    {    	compilable	  [FE]  JsonParseException  	12	8	replace
15	[BUG]  [BUGGY]  if(rawLen  <  =  1)  {  [CE]  illegal  start  of  expression  [FE]      JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }    [BUGGY]  if(rawLen  <  =  1)  {  [BUGGY]    rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen  <  =  1)  {	  if(rawLen    <    1)    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
16	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]        JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }    [BUGGY]  if(rawLen  ==  1)  {  [BUGGY]    rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	add	if(rawLen  ==  1)  {	  if(rawLen    <    1)    {    	compilable	  [FE]  JsonParseException  	12	8	replace
17	[BUG]  [BUGGY]  if(rawLen  ==  1)  {  [FE]  JsonParseException  [FE]        JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }    [BUGGY]  if(rawLen  ==  1)  {  [BUGGY]    rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen  ==  1)  {	  if(rawLen    <    1)    {    	compilable	  [FE]  JsonParseException  	12	8	replace
18	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }    [BUGGY]  if  (rawNum.startsWith( "- ")||  rawLen  <  2)  {  [BUGGY]    rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	add	if  (rawNum.startsWith( "- ")||  rawLen  <  2)  {	  if    (rawNum.startsWith(   "-   ")||    rawLen    <    1)    {    	compilable	  [FE]  JsonParseException  	5	8	replace
19	[BUG]  [BUGGY]  if  (rawNum.startsWith( "- ")||  rawLen  <  2)  {  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }    [BUGGY]  if  (rawNum.startsWith( "- ")||  rawLen  <  2)  {  [BUGGY]    rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if  (rawNum.startsWith( "- ")||  rawLen  <  2)  {	  if    (rawNum.startsWith(   "-   ")||    rawLen    <    1)    {    	compilable	  [FE]  JsonParseException  	5	8	replace
20	[BUG]  [BUGGY]  if  (rawLen.startsWith( "- ")||  rawLen  <  1)  {  [CE]  int  cannot  be  dereferenced  [FE]      JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }    [BUGGY]  if  (rawLen.startsWith( "- ")||  rawLen  <  1)  {  [BUGGY]    rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if  (rawLen.startsWith( "- ")||  rawLen  <  1)  {	  if    (rawNum.startsWith(   "-   ")||    rawLen    <    1)    {    	non-compiled	[CE]  int  cannot  be  dereferenced	5	None	replace
21	[BUG]  [BUGGY]  if(rawLen.startsWith( "- ")||  rawLen.startsWith( "-- "))  {  [CE]  int  cannot  be  dereferenced  [FE]        JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }    [BUGGY]  if(rawLen.startsWith( "- ")||  rawLen.startsWith( "-- "))  {  [BUGGY]    rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen.startsWith( "- ")||  rawLen.startsWith( "-- "))  {	  if(rawLen.startsWith(   "-   "))    {    	non-compiled	[CE]  int  cannot  be  dereferenced	1	None	replace
22	[BUG]  [BUGGY]  if(rawLen.startsWith( ".- "))  {  [CE]  int  cannot  be  dereferenced  [FE]          JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }    [BUGGY]  if(rawLen.startsWith( ".- "))  {  [BUGGY]    rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen.startsWith( ".- "))  {	  if(rawLen.startsWith(   "-   "))    {    	non-compiled	[CE]  int  cannot  be  dereferenced	1	None	replace
23	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }    [BUGGY]  if(rawLen  >  0  &&  rawNum.startsWith( "-   "))  {  [BUGGY]    rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	add	if(rawLen  >  0  &&  rawNum.startsWith( "-   "))  {	  if(rawLen    >    0    ||    rawNum.startsWith(   "-   "))    {    	compilable	  [FE]  JsonParseException  	14	8	replace
24	[BUG]  [BUGGY]  if(rawLen  >  0  &&  rawNum.startsWith( "-   "))  {  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }    [BUGGY]  if(rawLen  >  0  &&  rawNum.startsWith( "-   "))  {  [BUGGY]    rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen  >  0  &&  rawNum.startsWith( "-   "))  {	  if(rawLen    >    0    ||    rawNum.startsWith(   "-   "))    {    	compilable	  [FE]  JsonParseException  	14	8	replace
25	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }    [BUGGY]  if(rawLen  >  1  ||  rawNum.startsWith( "- "))  {  [BUGGY]    rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	add	if(rawLen  >  1  ||  rawNum.startsWith( "- "))  {	  if(rawLen    >    0    ||    rawNum.startsWith(   "-   "))    {    	compilable	  [FE]  JsonParseException  	14	8	replace
26	[BUG]  [BUGGY]  if(rawLen  >  1  ||  rawNum.startsWith( "- "))  {  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }    [BUGGY]  if(rawLen  >  1  ||  rawNum.startsWith( "- "))  {  [BUGGY]    rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen  >  1  ||  rawNum.startsWith( "- "))  {	  if(rawLen    >    0    ||    rawNum.startsWith(   "-   "))    {    	compilable	  [FE]  JsonParseException  	14	8	replace
27	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]        JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }    [BUGGY]  if(rawLen  ==  0  ||  rawNum.startsWith( "-   "))  {  [BUGGY]    rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	add	if(rawLen  ==  0  ||  rawNum.startsWith( "-   "))  {	  if(rawLen    >    0    ||    rawNum.startsWith(   "-   "))    {    	compilable	  [FE]  JsonParseException  	14	8	replace
28	[BUG]  [BUGGY]  if(rawLen  ==  0  ||  rawNum.startsWith( "-   "))  {  [FE]  JsonParseException  [FE]        JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }    [BUGGY]  if(rawLen  ==  0  ||  rawNum.startsWith( "-   "))  {  [BUGGY]    rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen  ==  0  ||  rawNum.startsWith( "-   "))  {	  if(rawLen    >    0    ||    rawNum.startsWith(   "-   "))    {    	compilable	  [FE]  JsonParseException  	14	8	replace
29	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }    [BUGGY]  if(rawLen  ==  1  ||  rawNum.startsWith( "-- "))  {  [BUGGY]    rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	add	if(rawLen  ==  1  ||  rawNum.startsWith( "-- "))  {	  if(rawLen    ==    1    ||    rawNum.startsWith(   "-   "))    {    	compilable	  [FE]  JsonParseException  	10	8	replace
30	[BUG]  [BUGGY]  if(rawLen  ==  1  ||  rawNum.startsWith( "-- "))  {  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }    [BUGGY]  if(rawLen  ==  1  ||  rawNum.startsWith( "-- "))  {  [BUGGY]    rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen  ==  1  ||  rawNum.startsWith( "-- "))  {	  if(rawLen    ==    1    ||    rawNum.startsWith(   "-   "))    {    	compilable	  [FE]  JsonParseException  	10	8	replace
31	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }    [BUGGY]  if(rawLen  ==  1  ||  rawNum.startsWith( ".0 "))  {  [BUGGY]    rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	add	if(rawLen  ==  1  ||  rawNum.startsWith( ".0 "))  {	  if(rawLen    ==    1    ||    rawNum.startsWith(   "-   "))    {    	compilable	  [FE]  JsonParseException  	10	8	replace
32	[BUG]  [BUGGY]  if(rawLen  ==  1  ||  rawNum.startsWith( ".0 "))  {  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }    [BUGGY]  if(rawLen  ==  1  ||  rawNum.startsWith( ".0 "))  {  [BUGGY]    rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen  ==  1  ||  rawNum.startsWith( ".0 "))  {	  if(rawLen    ==    1    ||    rawNum.startsWith(   "-   "))    {    	compilable	  [FE]  JsonParseException  	10	8	replace
33	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }    [BUGGY]  if(rawNum.startsWith( ".0 ")||  rawNum.startsWith( ".0 "))  {  [BUGGY]    rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	add	if(rawNum.startsWith( ".0 ")||  rawNum.startsWith( ".0 "))  {	  if(rawNum.startsWith(   "-   ")||    rawNum.startsWith(   "--   "))    {    	compilable	  [FE]  JsonParseException  	3	8	replace
34	[BUG]  [BUGGY]  if(rawNum.startsWith( ".0 ")||  rawNum.startsWith( ".0 "))  {  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }    [BUGGY]  if(rawNum.startsWith( ".0 ")||  rawNum.startsWith( ".0 "))  {  [BUGGY]    rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawNum.startsWith( ".0 ")||  rawNum.startsWith( ".0 "))  {	  if(rawNum.startsWith(   "-   ")||    rawNum.startsWith(   "--   "))    {    	compilable	  [FE]  JsonParseException  	3	8	replace
35	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }    [BUGGY]  if(rawNum.startsWith( ".000 ")||  rawNum.startsWith( ".000 "))  {  [BUGGY]    rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	add	if(rawNum.startsWith( ".000 ")||  rawNum.startsWith( ".000 "))  {	  if(rawNum.startsWith(   "-   ")||    rawNum.startsWith(   "--   "))    {    	compilable	  [FE]  JsonParseException  	3	8	replace
36	[BUG]  [BUGGY]  if(rawNum.startsWith( ".000 ")||  rawNum.startsWith( ".000 "))  {  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }    [BUGGY]  if(rawNum.startsWith( ".000 ")||  rawNum.startsWith( ".000 "))  {  [BUGGY]    rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawNum.startsWith( ".000 ")||  rawNum.startsWith( ".000 "))  {	  if(rawNum.startsWith(   "-   ")||    rawNum.startsWith(   "--   "))    {    	compilable	  [FE]  JsonParseException  	3	8	replace
37	[BUG]  [BUGGY]  if(rawNum.startsWith( "- ")||  rawNum.startsWith( "--))  {  [CE]  unclosed  string  literal  [FE]        JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }    [BUGGY]  if(rawNum.startsWith( "- ")||  rawNum.startsWith( "--))  {  [BUGGY]    rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawNum.startsWith( "- ")||  rawNum.startsWith( "--))  {	  if(rawNum.startsWith(   "-   ")||    rawNum.startsWith(   "--   "))    {    	non-compiled	[CE]  unclosed  string  literal	3	None	replace
38	[BUG]  [BUGGY]  if(rawLen  ==  1  ||  rawNum.startsWith(   "-   "))  {  if(rawLen  ==  1  ||  rawNum.startsWith( "-   "))  {  [CE]  illegal  start  of  expression  [FE]    JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }    [BUGGY]  if(rawLen  ==  1  ||  rawNum.startsWith(   "-   "))  {  if(rawLen  ==  1  ||  rawNum.startsWith( "-   "))  {  [BUGGY]    rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen    ==    1    ||    rawNum.startsWith(   "-   "))    {    if(rawLen  ==  1  ||  rawNum.startsWith( "-   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
39	[BUG]  [BUGGY]  if(rawLen  ==  1  ||  rawNum.startsWith(   "-   "))  {  if(rawLen  ==  1  ||  rawNum.startsWith( ".-   "))  {  [CE]  illegal  start  of  expression  [FE]      JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }    [BUGGY]  if(rawLen  ==  1  ||  rawNum.startsWith(   "-   "))  {  if(rawLen  ==  1  ||  rawNum.startsWith( ".-   "))  {  [BUGGY]    rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen    ==    1    ||    rawNum.startsWith(   "-   "))    {    if(rawLen  ==  1  ||  rawNum.startsWith( ".-   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
40	[BUG]  [BUGGY]  if(rawLen  ==  1  ||  rawNum.startsWith(   "-   "))  {  if(rawLen  ==  1  ||  rawNum.startsWith( ",-   "))  {  [CE]  illegal  start  of  expression  [FE]        JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }    [BUGGY]  if(rawLen  ==  1  ||  rawNum.startsWith(   "-   "))  {  if(rawLen  ==  1  ||  rawNum.startsWith( ",-   "))  {  [BUGGY]    rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen    ==    1    ||    rawNum.startsWith(   "-   "))    {    if(rawLen  ==  1  ||  rawNum.startsWith( ",-   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
41	[BUG]  [BUGGY]  if(rawNum.startsWith(   "-   ")||  rawNum.startsWith(   "--   "))  {  if(rawNum.startsWith( "-   ")||  rawNum.startsWith( "--   "))  {  [CE]  illegal  start  of  expression  [FE]    JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }    [BUGGY]  if(rawNum.startsWith(   "-   ")||  rawNum.startsWith(   "--   "))  {  if(rawNum.startsWith( "-   ")||  rawNum.startsWith( "--   "))  {  [BUGGY]    rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawNum.startsWith(   "-   ")||    rawNum.startsWith(   "--   "))    {    if(rawNum.startsWith( "-   ")||  rawNum.startsWith( "--   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	2	None	add
42	[BUG]  [BUGGY]  if(rawNum.startsWith(   "-   ")||  rawNum.startsWith(   "--   "))  {  if(rawNum.startsWith( ".-   ")||  rawNum.startsWith( "--   "))  {  [CE]  illegal  start  of  expression  [FE]      JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }    [BUGGY]  if(rawNum.startsWith(   "-   ")||  rawNum.startsWith(   "--   "))  {  if(rawNum.startsWith( ".-   ")||  rawNum.startsWith( "--   "))  {  [BUGGY]    rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawNum.startsWith(   "-   ")||    rawNum.startsWith(   "--   "))    {    if(rawNum.startsWith( ".-   ")||  rawNum.startsWith( "--   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	2	None	add
43	[BUG]  [BUGGY]  if(rawLen  <  1  ||  rawNum.startsWith(   "-   "))  {  if(rawLen  <  1  ||  rawNum.startsWith( "-   "))  {  [CE]  illegal  start  of  expression  [FE]    JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }    [BUGGY]  if(rawLen  <  1  ||  rawNum.startsWith(   "-   "))  {  if(rawLen  <  1  ||  rawNum.startsWith( "-   "))  {  [BUGGY]    rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen    <    1    ||    rawNum.startsWith(   "-   "))    {    if(rawLen  <  1  ||  rawNum.startsWith( "-   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
44	[BUG]  [BUGGY]  if(rawLen  <  1  ||  rawNum.startsWith(   "-   "))  {  if(rawLen  <  1  ||  rawNum.startsWith( ".-   "))  {  [CE]  illegal  start  of  expression  [FE]      JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }    [BUGGY]  if(rawLen  <  1  ||  rawNum.startsWith(   "-   "))  {  if(rawLen  <  1  ||  rawNum.startsWith( ".-   "))  {  [BUGGY]    rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen    <    1    ||    rawNum.startsWith(   "-   "))    {    if(rawLen  <  1  ||  rawNum.startsWith( ".-   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
45	[BUG]  [BUGGY]  if(rawLen  <  1  ||  rawNum.startsWith(   "-   "))  {  if(rawLen  <  1  ||  rawNum.startsWith( ",-   "))  {  [CE]  illegal  start  of  expression  [FE]        JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }    [BUGGY]  if(rawLen  <  1  ||  rawNum.startsWith(   "-   "))  {  if(rawLen  <  1  ||  rawNum.startsWith( ",-   "))  {  [BUGGY]    rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen    <    1    ||    rawNum.startsWith(   "-   "))    {    if(rawLen  <  1  ||  rawNum.startsWith( ",-   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
46	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }    [BUGGY]  if(rawLen  <  1  ||  rawNum.startsWith( "-- "))  {  [BUGGY]    rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	add	if(rawLen  <  1  ||  rawNum.startsWith( "-- "))  {	  if(rawLen    <    1    ||    rawNum.startsWith(   "-   "))    {    	compilable	  [FE]  JsonParseException  	8	8	replace
47	[BUG]  [BUGGY]  if(rawLen  <  1  ||  rawNum.startsWith( "-- "))  {  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }    [BUGGY]  if(rawLen  <  1  ||  rawNum.startsWith( "-- "))  {  [BUGGY]    rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen  <  1  ||  rawNum.startsWith( "-- "))  {	  if(rawLen    <    1    ||    rawNum.startsWith(   "-   "))    {    	compilable	  [FE]  JsonParseException  	8	8	replace
48	[BUG]  [BUGGY]  if(rawLen  <  =  1  ||  rawNum.startsWith( "-   "))  {  [CE]  illegal  start  of  expression  [FE]      JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }    [BUGGY]  if(rawLen  <  =  1  ||  rawNum.startsWith( "-   "))  {  [BUGGY]    rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen  <  =  1  ||  rawNum.startsWith( "-   "))  {	  if(rawLen    <    1    ||    rawNum.startsWith(   "-   "))    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
49	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]        JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }    [BUGGY]  if(rawLen  <  1  ||  rawNum.startsWith( ".0 "))  {  [BUGGY]    rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	add	if(rawLen  <  1  ||  rawNum.startsWith( ".0 "))  {	  if(rawLen    <    1    ||    rawNum.startsWith(   "-   "))    {    	compilable	  [FE]  JsonParseException  	8	8	replace
50	[BUG]  [BUGGY]  if(rawLen  <  1  ||  rawNum.startsWith( ".0 "))  {  [FE]  JsonParseException  [FE]        JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }    [BUGGY]  if(rawLen  <  1  ||  rawNum.startsWith( ".0 "))  {  [BUGGY]    rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen  <  1  ||  rawNum.startsWith( ".0 "))  {	  if(rawLen    <    1    ||    rawNum.startsWith(   "-   "))    {    	compilable	  [FE]  JsonParseException  	8	8	replace
51	[BUG]  [BUGGY]  if(rawLen  <  1)  {  int  rawLen  =  _currToken.length();  [CE]  illegal  start  of  expression  [FE]    JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }    [BUGGY]  if(rawLen  <  1)  {  int  rawLen  =  _currToken.length();  [BUGGY]    rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen    <    1)    {    int  rawLen  =  _currToken.length();	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
52	[BUG]  [BUGGY]  if(rawLen  <  1)  {  int  rawLen  =  _currToken.indexOf(rawNum);  [CE]  illegal  start  of  expression  [FE]      JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }    [BUGGY]  if(rawLen  <  1)  {  int  rawLen  =  _currToken.indexOf(rawNum);  [BUGGY]    rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen    <    1)    {    int  rawLen  =  _currToken.indexOf(rawNum);	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
53	[BUG]  [BUGGY]  if(rawLen  <  1)  {  int  rawLen  =  _currToken.intValue();  [CE]  illegal  start  of  expression  [FE]        JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }    [BUGGY]  if(rawLen  <  1)  {  int  rawLen  =  _currToken.intValue();  [BUGGY]    rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen    <    1)    {    int  rawLen  =  _currToken.intValue();	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
54	[BUG]  [BUGGY]  if(rawNum.startsWith( "- ")||  rawNum.startsWith( "--)||  rawLen  <  1)  {  [CE]  unclosed  string  literal  [FE]    JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }    [BUGGY]  if(rawNum.startsWith( "- ")||  rawNum.startsWith( "--)||  rawLen  <  1)  {  [BUGGY]    rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawNum.startsWith( "- ")||  rawNum.startsWith( "--)||  rawLen  <  1)  {	  if(rawNum.startsWith(   "-   ")||    rawNum.startsWith(   "--   "))    {    	non-compiled	[CE]  unclosed  string  literal	3	None	replace
55	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }    [BUGGY]  if(rawNum.startsWith( "- ")||  rawNum.startsWith( ".- "))  {  [BUGGY]    rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	add	if(rawNum.startsWith( "- ")||  rawNum.startsWith( ".- "))  {	  if(rawNum.startsWith(   "-   ")||    rawNum.startsWith(   "--   "))    {    	compilable	  [FE]  JsonParseException  	3	8	replace
56	[BUG]  [BUGGY]  if(rawNum.startsWith( "- ")||  rawNum.startsWith( ".- "))  {  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }    [BUGGY]  if(rawNum.startsWith( "- ")||  rawNum.startsWith( ".- "))  {  [BUGGY]    rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawNum.startsWith( "- ")||  rawNum.startsWith( ".- "))  {	  if(rawNum.startsWith(   "-   ")||    rawNum.startsWith(   "--   "))    {    	compilable	  [FE]  JsonParseException  	3	8	replace
57	[BUG]  [BUGGY]  if(rawLen.startsWith( "-- "))  {  [CE]  int  cannot  be  dereferenced  [FE]        JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }    [BUGGY]  if(rawLen.startsWith( "-- "))  {  [BUGGY]    rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen.startsWith( "-- "))  {	  if(rawLen.startsWith(   "-   "))    {    	non-compiled	[CE]  int  cannot  be  dereferenced	1	None	replace
58	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }    [BUGGY]  if(rawLen  >=  1)  {  [BUGGY]    rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	add	if(rawLen  >=  1)  {	  if(rawLen    <    1)    {    	compilable	  [FE]  JsonParseException  	12	8	replace
59	[BUG]  [BUGGY]  if(rawLen  >=  1)  {  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }    [BUGGY]  if(rawLen  >=  1)  {  [BUGGY]    rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen  >=  1)  {	  if(rawLen    <    1)    {    	compilable	  [FE]  JsonParseException  	12	8	replace
60	[BUG]  [BUGGY]  if  (rawNum.startsWith( "- ")||  rawLen  <  =  1)  {  [CE]  illegal  start  of  expression  [FE]    JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }    [BUGGY]  if  (rawNum.startsWith( "- ")||  rawLen  <  =  1)  {  [BUGGY]    rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if  (rawNum.startsWith( "- ")||  rawLen  <  =  1)  {	  if    (rawNum.startsWith(   "-   ")||    rawLen    <    1)    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
61	[BUG]  [BUGGY]  int  digits  =(int)Math.floor(rawNum);  [CE]  illegal  start  of  type  [FE]              JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }    [BUGGY]  int  digits  =(int)Math.floor(rawNum);  [BUGGY]    rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	int  digits  =(int)Math.floor(rawNum);	      	non-compiled	[CE]  illegal  start  of  type	6	None	replace
62	[BUG]  [BUGGY]  int  digits  =(int)Math.rint(rawNum);  [CE]  illegal  start  of  type  [FE]                JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }    [BUGGY]  int  digits  =(int)Math.rint(rawNum);  [BUGGY]    rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	int  digits  =(int)Math.rint(rawNum);	      	non-compiled	[CE]  illegal  start  of  type	6	None	replace
63	[BUG]  [BUGGY]  int  digitsLen  =(int)Math.floor(rawNum);  [CE]  illegal  start  of  type  [FE]                  JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }    [BUGGY]  int  digitsLen  =(int)Math.floor(rawNum);  [BUGGY]    rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	int  digitsLen  =(int)Math.floor(rawNum);	      	non-compiled	[CE]  illegal  start  of  type	6	None	replace
64	[BUG]  [BUGGY]  int  digits  =(int)Math.floor(rawLen);  [CE]  illegal  start  of  type  [FE]                    JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }    [BUGGY]  int  digits  =(int)Math.floor(rawLen);  [BUGGY]    rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	int  digits  =(int)Math.floor(rawLen);	      	non-compiled	[CE]  illegal  start  of  type	6	None	replace
65	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }    [BUGGY]  if(rawLen  <  1  ||  rawNum.startsWith( "- ")||  rawLen  <  1)  {  [BUGGY]    rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	add	if(rawLen  <  1  ||  rawNum.startsWith( "- ")||  rawLen  <  1)  {	  if    (rawNum.startsWith(   "-   ")||    rawLen    <    1)    {    	compilable	  [FE]  JsonParseException  	5	8	replace
66	[BUG]  [BUGGY]  if(rawLen  <  1  ||  rawNum.startsWith( "- ")||  rawLen  <  1)  {  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }    [BUGGY]  if(rawLen  <  1  ||  rawNum.startsWith( "- ")||  rawLen  <  1)  {  [BUGGY]    rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen  <  1  ||  rawNum.startsWith( "- ")||  rawLen  <  1)  {	  if    (rawNum.startsWith(   "-   ")||    rawLen    <    1)    {    	compilable	  [FE]  JsonParseException  	5	8	replace
67	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }    [BUGGY]  if(rawLen  >  0  ||  rawNum.startsWith( ".0 "))  {  [BUGGY]    rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	add	if(rawLen  >  0  ||  rawNum.startsWith( ".0 "))  {	  if(rawLen    >    0    ||    rawNum.startsWith(   "-   "))    {    	compilable	  [FE]  JsonParseException  	14	8	replace
68	[BUG]  [BUGGY]  if(rawLen  >  0  ||  rawNum.startsWith( ".0 "))  {  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }    [BUGGY]  if(rawLen  >  0  ||  rawNum.startsWith( ".0 "))  {  [BUGGY]    rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen  >  0  ||  rawNum.startsWith( ".0 "))  {	  if(rawLen    >    0    ||    rawNum.startsWith(   "-   "))    {    	compilable	  [FE]  JsonParseException  	14	8	replace
69	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }    [BUGGY]  if(rawLen  >  0  ||  rawNum.equals( "- "))  {  [BUGGY]    rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	add	if(rawLen  >  0  ||  rawNum.equals( "- "))  {	  if(rawLen    >    0    ||    rawNum.startsWith(   "-   "))    {    	compilable	  [FE]  JsonParseException  	14	8	replace
70	[BUG]  [BUGGY]  if(rawLen  >  0  ||  rawNum.equals( "- "))  {  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }    [BUGGY]  if(rawLen  >  0  ||  rawNum.equals( "- "))  {  [BUGGY]    rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen  >  0  ||  rawNum.equals( "- "))  {	  if(rawLen    >    0    ||    rawNum.startsWith(   "-   "))    {    	compilable	  [FE]  JsonParseException  	14	8	replace
71	[BUG]  [BUGGY]  if(rawLen  ==  1  ||  rawNum.startsWith(   "-   "))  {  if(rawLen  ==  1  ||  rawNum.startsWith( ")-   "))  {  [CE]  illegal  start  of  expression  [FE]    JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }    [BUGGY]  if(rawLen  ==  1  ||  rawNum.startsWith(   "-   "))  {  if(rawLen  ==  1  ||  rawNum.startsWith( ")-   "))  {  [BUGGY]    rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen    ==    1    ||    rawNum.startsWith(   "-   "))    {    if(rawLen  ==  1  ||  rawNum.startsWith( ")-   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
72	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }    [BUGGY]  if(rawNum.startsWith( "- ")||  rawNum.startsWith( "- "))  {  [BUGGY]    rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	add	if(rawNum.startsWith( "- ")||  rawNum.startsWith( "- "))  {	  if(rawNum.startsWith(   "-   ")||    rawNum.startsWith(   "--   "))    {    	compilable	  [FE]  JsonParseException  	3	8	replace
73	[BUG]  [BUGGY]  if(rawNum.startsWith( "- ")||  rawNum.startsWith( "- "))  {  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }    [BUGGY]  if(rawNum.startsWith( "- ")||  rawNum.startsWith( "- "))  {  [BUGGY]    rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawNum.startsWith( "- ")||  rawNum.startsWith( "- "))  {	  if(rawNum.startsWith(   "-   ")||    rawNum.startsWith(   "--   "))    {    	compilable	  [FE]  JsonParseException  	3	8	replace
74	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }    [BUGGY]  if(rawNum.startsWith( "0 ")||  rawNum.startsWith( "-- "))  {  [BUGGY]    rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	add	if(rawNum.startsWith( "0 ")||  rawNum.startsWith( "-- "))  {	  if(rawNum.startsWith(   "-   ")||    rawNum.startsWith(   "--   "))    {    	compilable	  [FE]  JsonParseException  	3	8	replace
75	[BUG]  [BUGGY]  if(rawNum.startsWith( "0 ")||  rawNum.startsWith( "-- "))  {  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }    [BUGGY]  if(rawNum.startsWith( "0 ")||  rawNum.startsWith( "-- "))  {  [BUGGY]    rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawNum.startsWith( "0 ")||  rawNum.startsWith( "-- "))  {	  if(rawNum.startsWith(   "-   ")||    rawNum.startsWith(   "--   "))    {    	compilable	  [FE]  JsonParseException  	3	8	replace
76	[BUG]  [BUGGY]  if(rawLen.startsWith( "- ")||  rawLen.startsWith( "- "))  {  [CE]  int  cannot  be  dereferenced  [FE]        JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }    [BUGGY]  if(rawLen.startsWith( "- ")||  rawLen.startsWith( "- "))  {  [BUGGY]    rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen.startsWith( "- ")||  rawLen.startsWith( "- "))  {	  if(rawLen.startsWith(   "-   "))    {    	non-compiled	[CE]  int  cannot  be  dereferenced	1	None	replace
77	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }    [BUGGY]  if(rawLen  >=  1  ||  rawNum.startsWith( "- "))  {  [BUGGY]    rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	add	if(rawLen  >=  1  ||  rawNum.startsWith( "- "))  {	  if(rawLen    ==    1    ||    rawNum.startsWith(   "-   "))    {    	compilable	  [FE]  JsonParseException  	10	8	replace
78	[BUG]  [BUGGY]  if(rawLen  >=  1  ||  rawNum.startsWith( "- "))  {  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }    [BUGGY]  if(rawLen  >=  1  ||  rawNum.startsWith( "- "))  {  [BUGGY]    rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen  >=  1  ||  rawNum.startsWith( "- "))  {	  if(rawLen    ==    1    ||    rawNum.startsWith(   "-   "))    {    	compilable	  [FE]  JsonParseException  	10	8	replace
79	[BUG]  [BUGGY]  _currToken  =  JsonToken.VALUE_STRING;  [CE]  illegal  start  of  type  [FE]              JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }    [BUGGY]  _currToken  =  JsonToken.VALUE_STRING;  [BUGGY]    rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	_currToken  =  JsonToken.VALUE_STRING;	      	non-compiled	[CE]  illegal  start  of  type	6	None	replace
80	[BUG]  [BUGGY]  _currToken  =  JsonToken.VALUE_NUMBER_INT;  [CE]  illegal  start  of  type  [FE]                JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }    [BUGGY]  _currToken  =  JsonToken.VALUE_NUMBER_INT;  [BUGGY]    rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	_currToken  =  JsonToken.VALUE_NUMBER_INT;	      	non-compiled	[CE]  illegal  start  of  type	6	None	replace
81	[BUG]  [BUGGY]  _currToken  =  JsonToken.VALUE_NUMBER_FLOAT;  [CE]  illegal  start  of  type  [FE]                  JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }    [BUGGY]  _currToken  =  JsonToken.VALUE_NUMBER_FLOAT;  [BUGGY]    rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	_currToken  =  JsonToken.VALUE_NUMBER_FLOAT;	      	non-compiled	[CE]  illegal  start  of  type	6	None	replace
82	[BUG]  [BUGGY]  if(rawLen  >  0  ||  rawNum.startsWith(   "-   "))  {  if(rawLen  >  0  ||  rawNum.startsWith( ",-   "))  {  [CE]  illegal  start  of  expression  [FE]    JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }    [BUGGY]  if(rawLen  >  0  ||  rawNum.startsWith(   "-   "))  {  if(rawLen  >  0  ||  rawNum.startsWith( ",-   "))  {  [BUGGY]    rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen    >    0    ||    rawNum.startsWith(   "-   "))    {    if(rawLen  >  0  ||  rawNum.startsWith( ",-   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	13	None	add
