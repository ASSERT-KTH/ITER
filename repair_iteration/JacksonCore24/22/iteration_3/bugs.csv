bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]              JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawNum.startsWith( ".- "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	add	if(rawNum.startsWith( ".- "))  {	  if(rawLen.startsWith(   ".-   "))    {    	compilable	  [FE]  JsonParseException  	22	8	replace
2	[BUG]  [BUGGY]  if(rawNum.startsWith( ".- "))  {  [FE]  JsonParseException  [FE]              JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawNum.startsWith( ".- "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawNum.startsWith( ".- "))  {	  if(rawLen.startsWith(   ".-   "))    {    	compilable	  [FE]  JsonParseException  	22	8	replace
3	[BUG]  [BUGGY]  if(rawLen  <  =  1  ||  rawNum.startsWith( "-- "))  {  [CE]  illegal  start  of  expression  [FE]          JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  <  =  1  ||  rawNum.startsWith( "-- "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen  <  =  1  ||  rawNum.startsWith( "-- "))  {	  if(rawLen    <    =    1    ||    rawNum.startsWith(   "-       "))    {    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
4	[BUG]  [BUGGY]  if(rawLen  >  0)  {  if(rawLen  >=  1)  {  [CE]  illegal  start  of  expression  [FE]            JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  >  0)  {  if(rawLen  >=  1)  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen  >  0)  {  if(rawLen  >=  1)  {	  if(rawLen    <    1)    {    if(rawLen    >=    1)    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
5	[BUG]  [BUGGY]  if(rawLen  >  0)  {  if(rawLen  <  1)  {  [CE]  illegal  start  of  expression  [FE]              JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  >  0)  {  if(rawLen  <  1)  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen  >  0)  {  if(rawLen  <  1)  {	  if(rawLen    <    1)    {    if(rawLen    >=    1)    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
6	[BUG]  [BUGGY]  if(rawLen  <  =  1  ||  rawNum.startsWith( ".- "))  {  [CE]  illegal  start  of  expression  [FE]          JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  <  =  1  ||  rawNum.startsWith( ".- "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen  <  =  1  ||  rawNum.startsWith( ".- "))  {	  if(rawLen    <    1    ||    rawNum.startsWith(       "-       "))    {    if(rawLen    <    1    ||    rawNum.startsWith(   ".-       "))    {    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
7	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]            JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  <  1  ||  rawNum.startsWith( ".- "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	add	if(rawLen  <  1  ||  rawNum.startsWith( ".- "))  {	  if(rawLen    <    1    ||    rawNum.startsWith(       "-       "))    {    if(rawLen    <    1    ||    rawNum.startsWith(   ".-       "))    {    	compilable	  [FE]  JsonParseException  	44	8	replace
8	[BUG]  [BUGGY]  if(rawLen  <  1  ||  rawNum.startsWith( ".- "))  {  [FE]  JsonParseException  [FE]            JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  <  1  ||  rawNum.startsWith( ".- "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen  <  1  ||  rawNum.startsWith( ".- "))  {	  if(rawLen    <    1    ||    rawNum.startsWith(       "-       "))    {    if(rawLen    <    1    ||    rawNum.startsWith(   ".-       "))    {    	compilable	  [FE]  JsonParseException  	44	8	replace
9	[BUG]  [BUGGY]  if  (rawLen.startsWith( "- ")||  rawLen  <  2)  {  [CE]  int  cannot  be  dereferenced  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if  (rawLen.startsWith( "- ")||  rawLen  <  2)  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if  (rawLen.startsWith( "- ")||  rawLen  <  2)  {	  if    (rawNum.startsWith(   "-   ")||    rawLen    <    2)    {    	non-compiled	[CE]  int  cannot  be  dereferenced	19	None	replace
10	[BUG]  [BUGGY]  if(rawNum.startsWith(   "-   ")||  rawNum.startsWith(   "-   "))  {  if(rawNum.startsWith( "-   ")||  rawNum.startsWith( "-   "))  {  [CE]  illegal  start  of  expression  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawNum.startsWith(   "-   ")||  rawNum.startsWith(   "-   "))  {  if(rawNum.startsWith( "-   ")||  rawNum.startsWith( "-   "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawNum.startsWith(   "-   ")||    rawNum.startsWith(   "-   "))    {    if(rawNum.startsWith( "-   ")||  rawNum.startsWith( "-   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	72	None	add
11	[BUG]  [BUGGY]  if(rawNum.startsWith(   "-   ")||  rawNum.startsWith(   "-   "))  {  if(rawNum.startsWith( ".-   ")||  rawNum.startsWith( "-   "))  {  [CE]  illegal  start  of  expression  [FE]      JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawNum.startsWith(   "-   ")||  rawNum.startsWith(   "-   "))  {  if(rawNum.startsWith( ".-   ")||  rawNum.startsWith( "-   "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawNum.startsWith(   "-   ")||    rawNum.startsWith(   "-   "))    {    if(rawNum.startsWith( ".-   ")||  rawNum.startsWith( "-   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	72	None	add
12	[BUG]  [BUGGY]  if(rawLen  <  1  ||  rawNum.startsWith(   "--   "))  {  if(rawLen  <  1  ||  rawNum.startsWith( "--   "))  {  [CE]  illegal  start  of  expression  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  <  1  ||  rawNum.startsWith(   "--   "))  {  if(rawLen  <  1  ||  rawNum.startsWith( "--   "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen    <    1    ||    rawNum.startsWith(   "--   "))    {    if(rawLen  <  1  ||  rawNum.startsWith( "--   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	46	None	add
13	[BUG]  [BUGGY]  if(rawLen  <  1  ||  rawNum.startsWith(   "--   "))  {  if(rawLen  <  1  ||  rawNum.startsWith( ".--   "))  {  [CE]  illegal  start  of  expression  [FE]      JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  <  1  ||  rawNum.startsWith(   "--   "))  {  if(rawLen  <  1  ||  rawNum.startsWith( ".--   "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen    <    1    ||    rawNum.startsWith(   "--   "))    {    if(rawLen  <  1  ||  rawNum.startsWith( ".--   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	46	None	add
14	[BUG]  [BUGGY]  if(rawLen  <  1  ||  rawNum.startsWith(   "--   "))  {  if(rawLen  <  1  ||  rawNum.startsWith( ",--   "))  {  [CE]  illegal  start  of  expression  [FE]        JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  <  1  ||  rawNum.startsWith(   "--   "))  {  if(rawLen  <  1  ||  rawNum.startsWith( ",--   "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen    <    1    ||    rawNum.startsWith(   "--   "))    {    if(rawLen  <  1  ||  rawNum.startsWith( ",--   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	46	None	add
15	[BUG]  [BUGGY]  if(rawLen  ==  0  ||  rawNum.startsWith(   "-     "))  {  if(rawLen  ==  0  ||  rawNum.startsWith( "-   "))  {  [CE]  illegal  start  of  expression  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  ==  0  ||  rawNum.startsWith(   "-     "))  {  if(rawLen  ==  0  ||  rawNum.startsWith( "-   "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen    ==    0    ||    rawNum.startsWith(   "-       "))    {    if(rawLen  ==  0  ||  rawNum.startsWith( "-   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	27	None	add
16	[BUG]  [BUGGY]  if(rawLen  ==  0  ||  rawNum.startsWith(   "-     "))  {  if(rawLen  ==  0  ||  rawNum.startsWith( ".-   "))  {  [CE]  illegal  start  of  expression  [FE]      JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  ==  0  ||  rawNum.startsWith(   "-     "))  {  if(rawLen  ==  0  ||  rawNum.startsWith( ".-   "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen    ==    0    ||    rawNum.startsWith(   "-       "))    {    if(rawLen  ==  0  ||  rawNum.startsWith( ".-   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	27	None	add
17	[BUG]  [BUGGY]  if(rawLen  ==  0  ||  rawNum.startsWith(   "-     "))  {  if(rawLen!=  0  ||  rawNum.startsWith( "-   "))  {  [CE]  illegal  start  of  expression  [FE]        JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  ==  0  ||  rawNum.startsWith(   "-     "))  {  if(rawLen!=  0  ||  rawNum.startsWith( "-   "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen    ==    0    ||    rawNum.startsWith(   "-       "))    {    if(rawLen!=  0  ||  rawNum.startsWith( "-   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	27	None	add
18	[BUG]  [BUGGY]  If(rawLen  >  0  ||  rawNum.startsWith( "- "))  {  [CE]  [FE]            JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  If(rawLen  >  0  ||  rawNum.startsWith( "- "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	If(rawLen  >  0  ||  rawNum.startsWith( "- "))  {	  if(rawLen    >    0    ||    rawNum.startsWith(       "-       "))    {    If(rawLen    >    0    ||    rawNum.startsWith(   "-       "))    {    	non-compiled	[CE]  	3	None	replace
19	[BUG]  [BUGGY]  If(rawLen  >  0  ||  rawNum.startsWith( "-1))  {  [CE]  unclosed  string  literal  [FE]              JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  If(rawLen  >  0  ||  rawNum.startsWith( "-1))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	If(rawLen  >  0  ||  rawNum.startsWith( "-1))  {	  if(rawLen    >    0    ||    rawNum.startsWith(       "-       "))    {    If(rawLen    >    0    ||    rawNum.startsWith(   "-       "))    {    	non-compiled	[CE]  unclosed  string  literal	3	None	replace
20	[BUG]  [BUGGY]  _currToken  =  JsonToken.VALUE_STRING  +  1;  [CE]  illegal  start  of  type  [FE]                  JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  _currToken  =  JsonToken.VALUE_STRING  +  1;  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	_currToken  =  JsonToken.VALUE_STRING  +  1;	  _currToken    =    JsonToken.VALUE_STRING;    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
21	[BUG]  [BUGGY]  _currToken  =  JsonToken.FIELD_NAME;  [CE]  illegal  start  of  type  [FE]                    JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  _currToken  =  JsonToken.FIELD_NAME;  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	_currToken  =  JsonToken.FIELD_NAME;	  _currToken    =    JsonToken.VALUE_STRING;    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
22	[BUG]  [BUGGY]  if(rawLen  >  0  &&  rawNum.startsWith(   "-     "))  {  if(rawLen  >  0  &&  rawNum.startsWith( "-   "))  {  [CE]  illegal  start  of  expression  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  >  0  &&  rawNum.startsWith(   "-     "))  {  if(rawLen  >  0  &&  rawNum.startsWith( "-   "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen    >    0    &&    rawNum.startsWith(   "-       "))    {    if(rawLen  >  0  &&  rawNum.startsWith( "-   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	23	None	add
23	[BUG]  [BUGGY]  if(rawLen  >  0  &&  rawNum.startsWith(   "-     "))  {  if(rawLen  >  0  &&  rawNum.startsWith( ".-   "))  {  [CE]  illegal  start  of  expression  [FE]      JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  >  0  &&  rawNum.startsWith(   "-     "))  {  if(rawLen  >  0  &&  rawNum.startsWith( ".-   "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen    >    0    &&    rawNum.startsWith(   "-       "))    {    if(rawLen  >  0  &&  rawNum.startsWith( ".-   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	23	None	add
24	[BUG]  [BUGGY]  if(rawLen  >  0  &&  rawNum.startsWith(   "-     "))  {  If(rawLen  >  0  &&  rawNum.startsWith( "-   "))  {  [CE]  [FE]        JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  >  0  &&  rawNum.startsWith(   "-     "))  {  If(rawLen  >  0  &&  rawNum.startsWith( "-   "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen    >    0    &&    rawNum.startsWith(   "-       "))    {    If(rawLen  >  0  &&  rawNum.startsWith( "-   "))  {	  	non-compiled	[CE]  	23	None	add
25	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  >  1  ||  rawNum.equals( "- "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	add	if(rawLen  >  1  ||  rawNum.equals( "- "))  {	  if(rawLen    >    0    ||    rawNum.equals(   "-   "))    {    	compilable	  [FE]  JsonParseException  	70	8	replace
26	[BUG]  [BUGGY]  if(rawLen  >  1  ||  rawNum.equals( "- "))  {  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  >  1  ||  rawNum.equals( "- "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen  >  1  ||  rawNum.equals( "- "))  {	  if(rawLen    >    0    ||    rawNum.equals(   "-   "))    {    	compilable	  [FE]  JsonParseException  	70	8	replace
27	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  >  0  &&  rawNum.equals( "-   "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	add	if(rawLen  >  0  &&  rawNum.equals( "-   "))  {	  if(rawLen    >    0    ||    rawNum.equals(   "-   "))    {    	compilable	  [FE]  JsonParseException  	70	8	replace
28	[BUG]  [BUGGY]  if(rawLen  >  0  &&  rawNum.equals( "-   "))  {  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  >  0  &&  rawNum.equals( "-   "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen  >  0  &&  rawNum.equals( "-   "))  {	  if(rawLen    >    0    ||    rawNum.equals(   "-   "))    {    	compilable	  [FE]  JsonParseException  	70	8	replace
29	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]        JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  ==  0  ||  rawNum.equals( "- "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	add	if(rawLen  ==  0  ||  rawNum.equals( "- "))  {	  if(rawLen    >    0    ||    rawNum.equals(   "-   "))    {    	compilable	  [FE]  JsonParseException  	70	8	replace
30	[BUG]  [BUGGY]  if(rawLen  ==  0  ||  rawNum.equals( "- "))  {  [FE]  JsonParseException  [FE]        JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  ==  0  ||  rawNum.equals( "- "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen  ==  0  ||  rawNum.equals( "- "))  {	  if(rawLen    >    0    ||    rawNum.equals(   "-   "))    {    	compilable	  [FE]  JsonParseException  	70	8	replace
31	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  >=  1  &&  rawNum.startsWith( "-   "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	add	if(rawLen  >=  1  &&  rawNum.startsWith( "-   "))  {	  if(rawLen    >=    1    ||    rawNum.startsWith(   "-   "))    {    	compilable	  [FE]  JsonParseException  	78	8	replace
32	[BUG]  [BUGGY]  if(rawLen  >=  1  &&  rawNum.startsWith( "-   "))  {  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  >=  1  &&  rawNum.startsWith( "-   "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen  >=  1  &&  rawNum.startsWith( "-   "))  {	  if(rawLen    >=    1    ||    rawNum.startsWith(   "-   "))    {    	compilable	  [FE]  JsonParseException  	78	8	replace
33	[BUG]  [BUGGY]  if(rawLen  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]          JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  <  =  0)  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen  <  =  0)  {	  if(rawLen    <    =    1)    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
34	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  >  1  &&  rawNum.startsWith( "-   "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	add	if(rawLen  >  1  &&  rawNum.startsWith( "-   "))  {	  if(rawLen    >    1    ||    rawNum.startsWith(   "-   "))    {    	compilable	  [FE]  JsonParseException  	26	8	replace
35	[BUG]  [BUGGY]  if(rawLen  >  1  &&  rawNum.startsWith( "-   "))  {  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  >  1  &&  rawNum.startsWith( "-   "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen  >  1  &&  rawNum.startsWith( "-   "))  {	  if(rawLen    >    1    ||    rawNum.startsWith(   "-   "))    {    	compilable	  [FE]  JsonParseException  	26	8	replace
36	[BUG]  [BUGGY]  if(rawLen  >  1  ||  rawNum.startsWith(   "-   "))  {  if(rawLen  >  1  ||  rawNum.startsWith( "-   "))  {  [CE]  illegal  start  of  expression  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  >  1  ||  rawNum.startsWith(   "-   "))  {  if(rawLen  >  1  ||  rawNum.startsWith( "-   "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen    >    1    ||    rawNum.startsWith(   "-   "))    {    if(rawLen  >  1  ||  rawNum.startsWith( "-   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	25	None	add
37	[BUG]  [BUGGY]  if(rawLen  >  1  ||  rawNum.startsWith(   "-   "))  {  if(rawLen  >  1  ||  rawNum.startsWith( ".-   "))  {  [CE]  illegal  start  of  expression  [FE]      JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  >  1  ||  rawNum.startsWith(   "-   "))  {  if(rawLen  >  1  ||  rawNum.startsWith( ".-   "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen    >    1    ||    rawNum.startsWith(   "-   "))    {    if(rawLen  >  1  ||  rawNum.startsWith( ".-   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	25	None	add
38	[BUG]  [BUGGY]  if(rawLen  >  1  ||  rawNum.startsWith(   "-   "))  {  if(rawLen  >  1  ||  rawNum.startsWith( ",-   "))  {  [CE]  illegal  start  of  expression  [FE]        JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  >  1  ||  rawNum.startsWith(   "-   "))  {  if(rawLen  >  1  ||  rawNum.startsWith( ",-   "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen    >    1    ||    rawNum.startsWith(   "-   "))    {    if(rawLen  >  1  ||  rawNum.startsWith( ",-   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	25	None	add
39	[BUG]  [BUGGY]  if(rawLen  ==  1  ||  rawNum.startsWith(   "--   "))  {  if(rawLen  ==  1  ||  rawNum.startsWith( "--   "))  {  [CE]  illegal  start  of  expression  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  ==  1  ||  rawNum.startsWith(   "--   "))  {  if(rawLen  ==  1  ||  rawNum.startsWith( "--   "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen    ==    1    ||    rawNum.startsWith(   "--   "))    {    if(rawLen  ==  1  ||  rawNum.startsWith( "--   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	29	None	add
40	[BUG]  [BUGGY]  if(rawLen  ==  1  ||  rawNum.startsWith(   "--   "))  {  if(rawLen  ==  1  ||  rawNum.startsWith( ".--   "))  {  [CE]  illegal  start  of  expression  [FE]      JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  ==  1  ||  rawNum.startsWith(   "--   "))  {  if(rawLen  ==  1  ||  rawNum.startsWith( ".--   "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen    ==    1    ||    rawNum.startsWith(   "--   "))    {    if(rawLen  ==  1  ||  rawNum.startsWith( ".--   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	29	None	add
41	[BUG]  [BUGGY]  if(rawLen  ==  1  ||  rawNum.startsWith(   "--   "))  {  if(rawLen  ==  1  ||  rawNum.startsWith( ",--   "))  {  [CE]  illegal  start  of  expression  [FE]        JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  ==  1  ||  rawNum.startsWith(   "--   "))  {  if(rawLen  ==  1  ||  rawNum.startsWith( ",--   "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen    ==    1    ||    rawNum.startsWith(   "--   "))    {    if(rawLen  ==  1  ||  rawNum.startsWith( ",--   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	29	None	add
42	[BUG]  [BUGGY]  if(rawNum.startsWith(   "-   ")||  rawNum.startsWith(   ".-   "))  {  if(rawNum.startsWith( "-   ")||  rawNum.startsWith(   ".-   "))  {  [CE]  illegal  start  of  expression  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawNum.startsWith(   "-   ")||  rawNum.startsWith(   ".-   "))  {  if(rawNum.startsWith( "-   ")||  rawNum.startsWith(   ".-   "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawNum.startsWith(   "-   ")||    rawNum.startsWith(   ".-   "))    {    if(rawNum.startsWith( "-   ")||  rawNum.startsWith(   ".-   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	55	None	add
43	[BUG]  [BUGGY]  int  digits  =(int)Math.floor(rawLen  +  1);  [CE]  illegal  start  of  type  [FE]                        JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  int  digits  =(int)Math.floor(rawLen  +  1);  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	int  digits  =(int)Math.floor(rawLen  +  1);	  int    digits    =(int)Math.floor(rawLen);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
44	[BUG]  [BUGGY]  int  digits  =(int)Math.ceil(rawLen);  [CE]  illegal  start  of  type  [FE]                          JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  int  digits  =(int)Math.ceil(rawLen);  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	int  digits  =(int)Math.ceil(rawLen);	  int    digits    =(int)Math.floor(rawLen);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
45	[BUG]  [BUGGY]  char  digits  =(char)Math.floor(rawLen);  [CE]  illegal  start  of  type  [FE]                            JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  char  digits  =(char)Math.floor(rawLen);  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	char  digits  =(char)Math.floor(rawLen);	  int    digits    =(int)Math.floor(rawLen);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
46	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawNum.startsWith( "1.0 ")||  rawNum.startsWith( "1.0 "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	add	if(rawNum.startsWith( "1.0 ")||  rawNum.startsWith( "1.0 "))  {	  if(rawNum.startsWith(   ".0   ")||    rawNum.startsWith(   ".0   "))    {    	compilable	  [FE]  JsonParseException  	34	8	replace
47	[BUG]  [BUGGY]  if(rawNum.startsWith( "1.0 ")||  rawNum.startsWith( "1.0 "))  {  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawNum.startsWith( "1.0 ")||  rawNum.startsWith( "1.0 "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawNum.startsWith( "1.0 ")||  rawNum.startsWith( "1.0 "))  {	  if(rawNum.startsWith(   ".0   ")||    rawNum.startsWith(   ".0   "))    {    	compilable	  [FE]  JsonParseException  	34	8	replace
48	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawNum.startsWith( "0.0   ")||  rawNum.startsWith( "0.0   "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	add	if(rawNum.startsWith( "0.0   ")||  rawNum.startsWith( "0.0   "))  {	  if(rawNum.startsWith(   ".0   ")||    rawNum.startsWith(   ".0   "))    {    	compilable	  [FE]  JsonParseException  	34	8	replace
49	[BUG]  [BUGGY]  if(rawNum.startsWith( "0.0   ")||  rawNum.startsWith( "0.0   "))  {  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawNum.startsWith( "0.0   ")||  rawNum.startsWith( "0.0   "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawNum.startsWith( "0.0   ")||  rawNum.startsWith( "0.0   "))  {	  if(rawNum.startsWith(   ".0   ")||    rawNum.startsWith(   ".0   "))    {    	compilable	  [FE]  JsonParseException  	34	8	replace
50	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]        JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawNum.startsWith( "0 ")||  rawNum.startsWith( "0 "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	add	if(rawNum.startsWith( "0 ")||  rawNum.startsWith( "0 "))  {	  if(rawNum.startsWith(   ".0   ")||    rawNum.startsWith(   ".0   "))    {    	compilable	  [FE]  JsonParseException  	34	8	replace
51	[BUG]  [BUGGY]  if(rawNum.startsWith( "0 ")||  rawNum.startsWith( "0 "))  {  [FE]  JsonParseException  [FE]        JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawNum.startsWith( "0 ")||  rawNum.startsWith( "0 "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawNum.startsWith( "0 ")||  rawNum.startsWith( "0 "))  {	  if(rawNum.startsWith(   ".0   ")||    rawNum.startsWith(   ".0   "))    {    	compilable	  [FE]  JsonParseException  	34	8	replace
52	[BUG]  [BUGGY]  char  digits  =(char)Math.rint(rawNum);  [CE]  illegal  start  of  type  [FE]                    JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  char  digits  =(char)Math.rint(rawNum);  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	char  digits  =(char)Math.rint(rawNum);	  int    digits    =(int)Math.rint(rawNum);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
53	[BUG]  [BUGGY]  int  digits  =(int)Math.rint(rawNum  +  1);  [CE]  illegal  start  of  type  [FE]                      JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  int  digits  =(int)Math.rint(rawNum  +  1);  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	int  digits  =(int)Math.rint(rawNum  +  1);	  int    digits    =(int)Math.rint(rawNum);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
54	[BUG]  [BUGGY]  int  digits  =(int)Math.rint(rawNum,  1);  [CE]  illegal  start  of  type  [FE]                        JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  int  digits  =(int)Math.rint(rawNum,  1);  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	int  digits  =(int)Math.rint(rawNum,  1);	  int    digits    =(int)Math.rint(rawNum);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
55	[BUG]  [BUGGY]  int  digits  =(int)Math.rint(rawNum,  rawLen);  [CE]  illegal  start  of  type  [FE]                          JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  int  digits  =(int)Math.rint(rawNum,  rawLen);  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	int  digits  =(int)Math.rint(rawNum,  rawLen);	  int    digits    =(int)Math.rint(rawNum);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
56	[BUG]  [BUGGY]  if(rawLen  >  0  ||  rawNum.startsWith( "-1))  {  [CE]  unclosed  string  literal  [FE]        JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  >  0  ||  rawNum.startsWith( "-1))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen  >  0  ||  rawNum.startsWith( "-1))  {	  if(rawLen    >    0    ||    rawNum.startsWith(       "-       "))    {    if(rawLen    >    0    ||    rawNum.startsWith(   "-       "))    {    	non-compiled	[CE]  unclosed  string  literal	1	None	replace
57	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]          JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  >  0  ||  rawNum.startsWith( ".000 "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	add	if(rawLen  >  0  ||  rawNum.startsWith( ".000 "))  {	  if(rawLen    >    0    ||    rawNum.startsWith(       "-       "))    {    if(rawLen    >    0    ||    rawNum.startsWith(   "-       "))    {    	compilable	  [FE]  JsonParseException  	1	8	replace
58	[BUG]  [BUGGY]  if(rawLen  >  0  ||  rawNum.startsWith( ".000 "))  {  [FE]  JsonParseException  [FE]          JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  >  0  ||  rawNum.startsWith( ".000 "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen  >  0  ||  rawNum.startsWith( ".000 "))  {	  if(rawLen    >    0    ||    rawNum.startsWith(       "-       "))    {    if(rawLen    >    0    ||    rawNum.startsWith(   "-       "))    {    	compilable	  [FE]  JsonParseException  	1	8	replace
59	[BUG]  [BUGGY]  if(rawLen  <  1  ||  rawNum.startsWith(   "-   ")||  rawLen  <  1)  {  if(rawLen  <  1  ||  rawNum.startsWith( "-   ")||  rawLen  <  1)  {  [CE]  illegal  start  of  expression  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  <  1  ||  rawNum.startsWith(   "-   ")||  rawLen  <  1)  {  if(rawLen  <  1  ||  rawNum.startsWith( "-   ")||  rawLen  <  1)  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen    <    1    ||    rawNum.startsWith(   "-   ")||    rawLen    <    1)    {    if(rawLen  <  1  ||  rawNum.startsWith( "-   ")||  rawLen  <  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	65	None	add
60	[BUG]  [BUGGY]  if(rawLen  <  1  ||  rawNum.startsWith(   "-   ")||  rawLen  <  1)  {  if(rawLen  <  1  ||  rawNum.startsWith( ".-   ")||  rawLen  <  1)  {  [CE]  illegal  start  of  expression  [FE]      JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  <  1  ||  rawNum.startsWith(   "-   ")||  rawLen  <  1)  {  if(rawLen  <  1  ||  rawNum.startsWith( ".-   ")||  rawLen  <  1)  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen    <    1    ||    rawNum.startsWith(   "-   ")||    rawLen    <    1)    {    if(rawLen  <  1  ||  rawNum.startsWith( ".-   ")||  rawLen  <  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	65	None	add
61	[BUG]  [BUGGY]  if(rawLen  <  1  ||  rawNum.startsWith(   "-   ")||  rawLen  <  1)  {  if(rawLen  <  1  ||  rawNum.startsWith( ",-   ")||  rawLen  <  1)  {  [CE]  illegal  start  of  expression  [FE]        JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  <  1  ||  rawNum.startsWith(   "-   ")||  rawLen  <  1)  {  if(rawLen  <  1  ||  rawNum.startsWith( ",-   ")||  rawLen  <  1)  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen    <    1    ||    rawNum.startsWith(   "-   ")||    rawLen    <    1)    {    if(rawLen  <  1  ||  rawNum.startsWith( ",-   ")||  rawLen  <  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	65	None	add
62	[BUG]  [BUGGY]  if(rawLen  <  1  ||  rawNum.startsWith(   ".0   "))  {  if(rawLen  <  1  ||  rawNum.startsWith( ".0   "))  {  [CE]  illegal  start  of  expression  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  <  1  ||  rawNum.startsWith(   ".0   "))  {  if(rawLen  <  1  ||  rawNum.startsWith( ".0   "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen    <    1    ||    rawNum.startsWith(   ".0   "))    {    if(rawLen  <  1  ||  rawNum.startsWith( ".0   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	49	None	add
63	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  >  1)  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	add	if(rawLen  >  1)  {	  if(rawLen    >=    1)    {    	compilable	  [FE]  JsonParseException  	59	8	replace
64	[BUG]  [BUGGY]  if(rawLen  >  1)  {  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  >  1)  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen  >  1)  {	  if(rawLen    >=    1)    {    	compilable	  [FE]  JsonParseException  	59	8	replace
65	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  >=  0)  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	add	if(rawLen  >=  0)  {	  if(rawLen    >=    1)    {    	compilable	  [FE]  JsonParseException  	59	8	replace
66	[BUG]  [BUGGY]  if(rawLen  >=  0)  {  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  >=  0)  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen  >=  0)  {	  if(rawLen    >=    1)    {    	compilable	  [FE]  JsonParseException  	59	8	replace
67	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]        JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  ==  0)  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	add	if(rawLen  ==  0)  {	  if(rawLen    >=    1)    {    	compilable	  [FE]  JsonParseException  	59	8	replace
68	[BUG]  [BUGGY]  if(rawLen  ==  0)  {  [FE]  JsonParseException  [FE]        JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  ==  0)  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen  ==  0)  {	  if(rawLen    >=    1)    {    	compilable	  [FE]  JsonParseException  	59	8	replace
69	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]          JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  >  1  ||  rawLen  <  1)  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	add	if(rawLen  >  1  ||  rawLen  <  1)  {	  if(rawLen    >=    1)    {    	compilable	  [FE]  JsonParseException  	59	8	replace
70	[BUG]  [BUGGY]  if(rawLen  >  1  ||  rawLen  <  1)  {  [FE]  JsonParseException  [FE]          JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  >  1  ||  rawLen  <  1)  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen  >  1  ||  rawLen  <  1)  {	  if(rawLen    >=    1)    {    	compilable	  [FE]  JsonParseException  	59	8	replace
71	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]          JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  ==  0  ||  rawNum.startsWith( ".- "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	add	if(rawLen  ==  0  ||  rawNum.startsWith( ".- "))  {	  if(rawLen    ==    1    ||    rawNum.startsWith(       "-       "))    {    if(rawLen    ==    1    ||    rawNum.startsWith(   ".-       "))    {    	compilable	  [FE]  JsonParseException  	39	8	replace
72	[BUG]  [BUGGY]  if(rawLen  ==  0  ||  rawNum.startsWith( ".- "))  {  [FE]  JsonParseException  [FE]          JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  ==  0  ||  rawNum.startsWith( ".- "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen  ==  0  ||  rawNum.startsWith( ".- "))  {	  if(rawLen    ==    1    ||    rawNum.startsWith(       "-       "))    {    if(rawLen    ==    1    ||    rawNum.startsWith(   ".-       "))    {    	compilable	  [FE]  JsonParseException  	39	8	replace
73	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]            JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  ==  1  ||  rawNum.startsWith( ".- "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	add	if(rawLen  ==  1  ||  rawNum.startsWith( ".- "))  {	  if(rawLen    ==    1    ||    rawNum.startsWith(       "-       "))    {    if(rawLen    ==    1    ||    rawNum.startsWith(   ".-       "))    {    	compilable	  [FE]  JsonParseException  	39	8	replace
74	[BUG]  [BUGGY]  if(rawLen  ==  1  ||  rawNum.startsWith( ".- "))  {  [FE]  JsonParseException  [FE]            JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  ==  1  ||  rawNum.startsWith( ".- "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen  ==  1  ||  rawNum.startsWith( ".- "))  {	  if(rawLen    ==    1    ||    rawNum.startsWith(       "-       "))    {    if(rawLen    ==    1    ||    rawNum.startsWith(   ".-       "))    {    	compilable	  [FE]  JsonParseException  	39	8	replace
75	[BUG]  [BUGGY]  if(rawLen  <  1)  {  if(rawNum.startsWith( "- ")||  rawLen  <  1)  {  [CE]  illegal  start  of  expression  [FE]          JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  <  1)  {  if(rawNum.startsWith( "- ")||  rawLen  <  1)  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen  <  1)  {  if(rawNum.startsWith( "- ")||  rawLen  <  1)  {	  if    (rawNum.startsWith(       "-       ")||    rawLen    <    1)    {    if    (rawNum.startsWith(   ".-       ")||    rawLen    <    1)    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
76	[BUG]  [BUGGY]  if(rawLen  >  0)  {  if(rawLen  >  0)  {  [CE]  illegal  start  of  expression  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  >  0)  {  if(rawLen  >  0)  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen    >    0)    {    if(rawLen  >  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	13	None	add
77	[BUG]  [BUGGY]  if(rawLen  >  0)  {  int  rawLen  =(int)Math.rint(rawNum,  Math.rint(rawLen));  if(rawLen  >  0)  {  [CE]  illegal  start  of  expression  [FE]      JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  >  0)  {  int  rawLen  =(int)Math.rint(rawNum,  Math.rint(rawLen));  if(rawLen  >  0)  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen    >    0)    {    int  rawLen  =(int)Math.rint(rawNum,  Math.rint(rawLen));  if(rawLen  >  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	13	None	add
78	[BUG]  [BUGGY]  if(rawLen  >  0)  {  int  rawLen  =(int)Math.rint((  int)rawLen);  if(rawLen  >  0)  {  [CE]  illegal  start  of  expression  [FE]        JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  >  0)  {  int  rawLen  =(int)Math.rint((  int)rawLen);  if(rawLen  >  0)  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen    >    0)    {    int  rawLen  =(int)Math.rint((  int)rawLen);  if(rawLen  >  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	13	None	add
79	[BUG]  [BUGGY]  if(rawLen  >  0)  {  int  rawLen  =(int)Math.rint(rawNum,  Math.rint(rawLen));  [CE]  illegal  start  of  expression  [FE]          JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  >  0)  {  int  rawLen  =(int)Math.rint(rawNum,  Math.rint(rawLen));  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen    >    0)    {    int  rawLen  =(int)Math.rint(rawNum,  Math.rint(rawLen));	  	non-compiled	[CE]  illegal  start  of  expression	13	None	add
80	[BUG]  [BUGGY]  if(rawLen  >  0)  {  int  rawLen  =(int)Math.rint((  int)rawLen,  Math.rint((  int)rawLen));  [CE]  illegal  start  of  expression  [FE]            JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  >  0)  {  int  rawLen  =(int)Math.rint((  int)rawLen,  Math.rint((  int)rawLen));  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen    >    0)    {    int  rawLen  =(int)Math.rint((  int)rawLen,  Math.rint((  int)rawLen));	  	non-compiled	[CE]  illegal  start  of  expression	13	None	add
81	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]        JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  >  MAX_ERROR_TOKEN_LENGTH)  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	add	if(rawLen  >  MAX_ERROR_TOKEN_LENGTH)  {	  if(rawLen    <    1)    {    if(rawLen    <    1)    {    	compilable	  [FE]  JsonParseException  	10	8	replace
82	[BUG]  [BUGGY]  if(rawLen  >  MAX_ERROR_TOKEN_LENGTH)  {  [FE]  JsonParseException  [FE]        JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  >  MAX_ERROR_TOKEN_LENGTH)  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen  >  MAX_ERROR_TOKEN_LENGTH)  {	  if(rawLen    <    1)    {    if(rawLen    <    1)    {    	compilable	  [FE]  JsonParseException  	10	8	replace
83	[BUG]  [BUGGY]  if(rawLen  ==  1)  {  if(rawLen  ==  1)  {  [CE]  illegal  start  of  expression  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  ==  1)  {  if(rawLen  ==  1)  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen    ==    1)    {    if(rawLen  ==  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
84	[BUG]  [BUGGY]  if(rawLen  ==  1)  {  if(rawLen  >=  1)  {  [CE]  illegal  start  of  expression  [FE]      JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  ==  1)  {  if(rawLen  >=  1)  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen    ==    1)    {    if(rawLen  >=  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
85	[BUG]  [BUGGY]  if(rawLen  ==  1)  {  if(rawLen!=  1)  {  [CE]  illegal  start  of  expression  [FE]        JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  ==  1)  {  if(rawLen!=  1)  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen    ==    1)    {    if(rawLen!=  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
86	[BUG]  [BUGGY]  if(rawLen  ==  1)  {  If(rawLen  ==  1)  {  [CE]  ';'  expected  [FE]          JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  ==  1)  {  If(rawLen  ==  1)  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen    ==    1)    {    If(rawLen  ==  1)  {	  	non-compiled	[CE]  ';'  expected	16	None	add
87	[BUG]  [BUGGY]  int  rawLen  =  _currToken.indexOf(rawNum);  [CE]  illegal  start  of  type  [FE]          JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  int  rawLen  =  _currToken.indexOf(rawNum);  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	int  rawLen  =  _currToken.indexOf(rawNum);	  if(rawLen    <    1)    {    int    rawLen    =    _currToken.indexOf(rawNum);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
88	[BUG]  [BUGGY]  Integer  rawLen  =  _currToken.indexOf(rawNum);  [CE]  illegal  start  of  type  [FE]            JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  Integer  rawLen  =  _currToken.indexOf(rawNum);  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	Integer  rawLen  =  _currToken.indexOf(rawNum);	  if(rawLen    <    1)    {    int    rawLen    =    _currToken.indexOf(rawNum);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
89	[BUG]  [BUGGY]  char  rawLen  =  _currToken.indexOf(rawNum);  [CE]  illegal  start  of  type  [FE]              JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  char  rawLen  =  _currToken.indexOf(rawNum);  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	char  rawLen  =  _currToken.indexOf(rawNum);	  if(rawLen    <    1)    {    int    rawLen    =    _currToken.indexOf(rawNum);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
90	[BUG]  [BUGGY]  if(rawLen  ==  1)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  return  _currToken;  }  [CE]  incompatible  types  [FE]                      JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  ==  1)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  return  _currToken;  }  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen  ==  1)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  return  _currToken;  }	  if(rawLen    ==    0)    {    if(_currToken!=    JsonToken.VALUE_NUMBER_INT)    {    return    _currToken;    }    	non-compiled	[CE]  incompatible  types	6	None	replace
91	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]                        JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  ==  0)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  return  rawNum;  }  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	add	if(rawLen  ==  0)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  return  rawNum;  }	  if(rawLen    ==    0)    {    if(_currToken!=    JsonToken.VALUE_NUMBER_INT)    {    return    _currToken;    }    	compilable	  [FE]  JsonParseException  	6	8	replace
92	[BUG]  [BUGGY]  if(rawLen  ==  0)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  return  rawNum;  }  [FE]  JsonParseException  [FE]                        JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  ==  0)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  return  rawNum;  }  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen  ==  0)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  return  rawNum;  }	  if(rawLen    ==    0)    {    if(_currToken!=    JsonToken.VALUE_NUMBER_INT)    {    return    _currToken;    }    	compilable	  [FE]  JsonParseException  	6	8	replace
93	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]                          JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  ==  1)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  return  rawNum;  }  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	add	if(rawLen  ==  1)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  return  rawNum;  }	  if(rawLen    ==    0)    {    if(_currToken!=    JsonToken.VALUE_NUMBER_INT)    {    return    _currToken;    }    	compilable	  [FE]  JsonParseException  	6	8	replace
94	[BUG]  [BUGGY]  if(rawLen  ==  1)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  return  rawNum;  }  [FE]  JsonParseException  [FE]                          JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  ==  1)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  return  rawNum;  }  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen  ==  1)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  return  rawNum;  }	  if(rawLen    ==    0)    {    if(_currToken!=    JsonToken.VALUE_NUMBER_INT)    {    return    _currToken;    }    	compilable	  [FE]  JsonParseException  	6	8	replace
95	[BUG]  [BUGGY]  if(rawNum.equals( "- ")||  rawNum.equals( "--))  {  [CE]  unclosed  string  literal  [FE]            JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawNum.equals( "- ")||  rawNum.equals( "--))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawNum.equals( "- ")||  rawNum.equals( "--))  {	  if(rawNum.startsWith(   "-   ")||    rawNum.startsWith(   "--))    {    	non-compiled	[CE]  unclosed  string  literal	37	None	replace
96	[BUG]  [BUGGY]  if(rawNum.startsWith( "- ")||  rawNum.startsWith( "-1))  {  [CE]  unclosed  string  literal  [FE]              JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawNum.startsWith( "- ")||  rawNum.startsWith( "-1))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawNum.startsWith( "- ")||  rawNum.startsWith( "-1))  {	  if(rawNum.startsWith(   "-   ")||    rawNum.startsWith(   "--))    {    	non-compiled	[CE]  unclosed  string  literal	37	None	replace
97	[BUG]  [BUGGY]  int  digits  =(int)Math.ceil(rawNum);  [CE]  illegal  start  of  type  [FE]                  JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  int  digits  =(int)Math.ceil(rawNum);  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	int  digits  =(int)Math.ceil(rawNum);	  int    digits    =(int)Math.floor(rawNum);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
98	[BUG]  [BUGGY]  int  digits  =(int)Math.floor(rawNum  +  1);  [CE]  illegal  start  of  type  [FE]                    JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  int  digits  =(int)Math.floor(rawNum  +  1);  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	int  digits  =(int)Math.floor(rawNum  +  1);	  int    digits    =(int)Math.floor(rawNum);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
99	[BUG]  [BUGGY]  char  digits  =(char)Math.floor(rawNum);  [CE]  illegal  start  of  type  [FE]                      JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  char  digits  =(char)Math.floor(rawNum);  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	char  digits  =(char)Math.floor(rawNum);	  int    digits    =(int)Math.floor(rawNum);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
100	[BUG]  [BUGGY]  if(rawLen  >=  1  ||  rawNum.startsWith(   "-   "))  {  if(rawLen  >=  1  ||  rawNum.startsWith( "-   "))  {  [CE]  illegal  start  of  expression  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  >=  1  ||  rawNum.startsWith(   "-   "))  {  if(rawLen  >=  1  ||  rawNum.startsWith( "-   "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen    >=    1    ||    rawNum.startsWith(   "-   "))    {    if(rawLen  >=  1  ||  rawNum.startsWith( "-   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	77	None	add
101	[BUG]  [BUGGY]  if(rawLen  >=  1  ||  rawNum.startsWith(   "-   "))  {  if(rawLen  >=  1  ||  rawNum.startsWith( ".-   "))  {  [CE]  illegal  start  of  expression  [FE]      JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  >=  1  ||  rawNum.startsWith(   "-   "))  {  if(rawLen  >=  1  ||  rawNum.startsWith( ".-   "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen    >=    1    ||    rawNum.startsWith(   "-   "))    {    if(rawLen  >=  1  ||  rawNum.startsWith( ".-   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	77	None	add
102	[BUG]  [BUGGY]  if(rawLen  >=  1  ||  rawNum.startsWith(   "-   "))  {  if(rawLen!=  1  ||  rawNum.startsWith( "-   "))  {  [CE]  illegal  start  of  expression  [FE]        JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  >=  1  ||  rawNum.startsWith(   "-   "))  {  if(rawLen!=  1  ||  rawNum.startsWith( "-   "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen    >=    1    ||    rawNum.startsWith(   "-   "))    {    if(rawLen!=  1  ||  rawNum.startsWith( "-   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	77	None	add
103	[BUG]  [BUGGY]  if(rawLen  >=  1  ||  rawNum.startsWith(   "-   "))  {  if(rawLen  >>  1  ||  rawNum.startsWith( "-   "))  {  [CE]  illegal  start  of  expression  [FE]          JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  >=  1  ||  rawNum.startsWith(   "-   "))  {  if(rawLen  >>  1  ||  rawNum.startsWith( "-   "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen    >=    1    ||    rawNum.startsWith(   "-   "))    {    if(rawLen  >>  1  ||  rawNum.startsWith( "-   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	77	None	add
104	[BUG]  [BUGGY]  if(rawLen.startsWith( ".0 ")||  rawLen.startsWith( ".0 "))  {  [CE]  int  cannot  be  dereferenced  [FE]            JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen.startsWith( ".0 ")||  rawLen.startsWith( ".0 "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen.startsWith( ".0 ")||  rawLen.startsWith( ".0 "))  {	  if(rawLen.startsWith(   "-   ")||    rawLen.startsWith(   "-   "))    {    	non-compiled	[CE]  int  cannot  be  dereferenced	76	None	replace
105	[BUG]  [BUGGY]  if(rawNum.startsWith( "-   ")||  rawLen.startsWith( "-   "))  {  [CE]  int  cannot  be  dereferenced  [FE]              JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawNum.startsWith( "-   ")||  rawLen.startsWith( "-   "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawNum.startsWith( "-   ")||  rawLen.startsWith( "-   "))  {	  if(rawLen.startsWith(   "-   ")||    rawLen.startsWith(   "-   "))    {    	non-compiled	[CE]  int  cannot  be  dereferenced	76	None	replace
106	[BUG]  [BUGGY]  if(rawLen.startsWith( ".- ")||  rawLen.startsWith( ".- "))  {  [CE]  int  cannot  be  dereferenced  [FE]                JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen.startsWith( ".- ")||  rawLen.startsWith( ".- "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen.startsWith( ".- ")||  rawLen.startsWith( ".- "))  {	  if(rawLen.startsWith(   "-   ")||    rawLen.startsWith(   "-   "))    {    	non-compiled	[CE]  int  cannot  be  dereferenced	76	None	replace
107	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]        JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  >  1  ||  rawNum.startsWith( "-- "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	add	if(rawLen  >  1  ||  rawNum.startsWith( "-- "))  {	  if(rawLen    >    0    ||    rawNum.startsWith(       "-       "))    {    if(rawLen    >    0    ||    rawNum.startsWith(   ",-       "))    {    	compilable	  [FE]  JsonParseException  	82	8	replace
108	[BUG]  [BUGGY]  if(rawLen  >  1  ||  rawNum.startsWith( "-- "))  {  [FE]  JsonParseException  [FE]        JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  >  1  ||  rawNum.startsWith( "-- "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen  >  1  ||  rawNum.startsWith( "-- "))  {	  if(rawLen    >    0    ||    rawNum.startsWith(       "-       "))    {    if(rawLen    >    0    ||    rawNum.startsWith(   ",-       "))    {    	compilable	  [FE]  JsonParseException  	82	8	replace
109	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]          JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  >  0  ||  rawNum.startsWith( ",- "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	add	if(rawLen  >  0  ||  rawNum.startsWith( ",- "))  {	  if(rawLen    >    0    ||    rawNum.startsWith(       "-       "))    {    if(rawLen    >    0    ||    rawNum.startsWith(   ",-       "))    {    	compilable	  [FE]  JsonParseException  	82	8	replace
110	[BUG]  [BUGGY]  if(rawLen  >  0  ||  rawNum.startsWith( ",- "))  {  [FE]  JsonParseException  [FE]          JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  >  0  ||  rawNum.startsWith( ",- "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen  >  0  ||  rawNum.startsWith( ",- "))  {	  if(rawLen    >    0    ||    rawNum.startsWith(       "-       "))    {    if(rawLen    >    0    ||    rawNum.startsWith(   ",-       "))    {    	compilable	  [FE]  JsonParseException  	82	8	replace
111	[BUG]  [BUGGY]  if(rawNum.startsWith(   ".000   ")||  rawNum.startsWith(   ".000   "))  {  if(rawNum.startsWith(   ".000   ")||  rawNum.startsWith(   ".000   "))  {  [CE]  illegal  start  of  expression  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawNum.startsWith(   ".000   ")||  rawNum.startsWith(   ".000   "))  {  if(rawNum.startsWith(   ".000   ")||  rawNum.startsWith(   ".000   "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawNum.startsWith(   ".000   ")||    rawNum.startsWith(   ".000   "))    {    if(rawNum.startsWith(   ".000   ")||  rawNum.startsWith(   ".000   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	35	None	add
112	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  <  1  ||  rawNum.startsWith( "- ")||  rawLen  <  2)  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	add	if(rawLen  <  1  ||  rawNum.startsWith( "- ")||  rawLen  <  2)  {	  if(rawLen    <    1    ||    rawNum.startsWith(   "-   ")||    rawLen    <    1)    {    	compilable	  [FE]  JsonParseException  	66	8	replace
113	[BUG]  [BUGGY]  if(rawLen  <  1  ||  rawNum.startsWith( "- ")||  rawLen  <  2)  {  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  <  1  ||  rawNum.startsWith( "- ")||  rawLen  <  2)  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen  <  1  ||  rawNum.startsWith( "- ")||  rawLen  <  2)  {	  if(rawLen    <    1    ||    rawNum.startsWith(   "-   ")||    rawLen    <    1)    {    	compilable	  [FE]  JsonParseException  	66	8	replace
114	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  <  1  ||  rawNum.startsWith( "- ")||  rawLen  >  1)  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	add	if(rawLen  <  1  ||  rawNum.startsWith( "- ")||  rawLen  >  1)  {	  if(rawLen    <    1    ||    rawNum.startsWith(   "-   ")||    rawLen    <    1)    {    	compilable	  [FE]  JsonParseException  	66	8	replace
115	[BUG]  [BUGGY]  if(rawLen  <  1  ||  rawNum.startsWith( "- ")||  rawLen  >  1)  {  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  <  1  ||  rawNum.startsWith( "- ")||  rawLen  >  1)  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen  <  1  ||  rawNum.startsWith( "- ")||  rawLen  >  1)  {	  if(rawLen    <    1    ||    rawNum.startsWith(   "-   ")||    rawLen    <    1)    {    	compilable	  [FE]  JsonParseException  	66	8	replace
116	[BUG]  [BUGGY]  if(rawLen  <  1  ||  rawNum.startsWith( "- ")||  rawLen  <  =  1)  {  [CE]  illegal  start  of  expression  [FE]        JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  <  1  ||  rawNum.startsWith( "- ")||  rawLen  <  =  1)  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen  <  1  ||  rawNum.startsWith( "- ")||  rawLen  <  =  1)  {	  if(rawLen    <    1    ||    rawNum.startsWith(   "-   ")||    rawLen    <    1)    {    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
117	[BUG]  [BUGGY]  if  (rawLen.startsWith( "- ")||  rawLen  <  =  1)  {  [CE]  illegal  start  of  expression  [FE]        JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if  (rawLen.startsWith( "- ")||  rawLen  <  =  1)  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if  (rawLen.startsWith( "- ")||  rawLen  <  =  1)  {	  if    (rawNum.startsWith(   "-   ")||    rawLen    <    =    1)    {    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
118	[BUG]  [BUGGY]  if(rawNum.startsWith(   ".0   ")||  rawNum.startsWith(   ".0   "))  {  if(rawNum.startsWith(   ".0   ")||  rawNum.startsWith( ".0   "))  {  [CE]  illegal  start  of  expression  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawNum.startsWith(   ".0   ")||  rawNum.startsWith(   ".0   "))  {  if(rawNum.startsWith(   ".0   ")||  rawNum.startsWith( ".0   "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawNum.startsWith(   ".0   ")||    rawNum.startsWith(   ".0   "))    {    if(rawNum.startsWith(   ".0   ")||  rawNum.startsWith( ".0   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	33	None	add
119	[BUG]  [BUGGY]  if(rawLen  ==  1  ||  rawNum.startsWith(   ".0   "))  {  if(rawLen  ==  1  ||  rawNum.startsWith( ".0   "))  {  [CE]  illegal  start  of  expression  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  ==  1  ||  rawNum.startsWith(   ".0   "))  {  if(rawLen  ==  1  ||  rawNum.startsWith( ".0   "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen    ==    1    ||    rawNum.startsWith(   ".0   "))    {    if(rawLen  ==  1  ||  rawNum.startsWith( ".0   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	31	None	add
120	[BUG]  [BUGGY]  if(rawLen  ==  1)  {  if(_currToken!=  JsonToken.VALUE_STRING)  {  return  _currToken.substring(0,  rawLen);  }  [CE]  cannot  find  symbol  [FE]                        JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  ==  1)  {  if(_currToken!=  JsonToken.VALUE_STRING)  {  return  _currToken.substring(0,  rawLen);  }  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen  ==  1)  {  if(_currToken!=  JsonToken.VALUE_STRING)  {  return  _currToken.substring(0,  rawLen);  }	  if(rawLen    ==    0)    {    if(_currToken!=    JsonToken.VALUE_STRING)    {    return    _currToken.substring(0,    rawLen);    }    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
121	[BUG]  [BUGGY]  if(rawLen  ==  2)  {  if(_currToken!=  JsonToken.VALUE_STRING)  {  return  _currToken.substring(0,  rawLen);  }  [CE]  cannot  find  symbol  [FE]                          JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  ==  2)  {  if(_currToken!=  JsonToken.VALUE_STRING)  {  return  _currToken.substring(0,  rawLen);  }  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen  ==  2)  {  if(_currToken!=  JsonToken.VALUE_STRING)  {  return  _currToken.substring(0,  rawLen);  }	  if(rawLen    ==    0)    {    if(_currToken!=    JsonToken.VALUE_STRING)    {    return    _currToken.substring(0,    rawLen);    }    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
122	[BUG]  [BUGGY]  if(rawLen  ==  0)  {  if(_currToken!=  JsonToken.VALUE_STRING)  {  return  _currToken.substring(0,  rawNum);  }  [CE]  cannot  find  symbol  [FE]                            JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  ==  0)  {  if(_currToken!=  JsonToken.VALUE_STRING)  {  return  _currToken.substring(0,  rawNum);  }  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen  ==  0)  {  if(_currToken!=  JsonToken.VALUE_STRING)  {  return  _currToken.substring(0,  rawNum);  }	  if(rawLen    ==    0)    {    if(_currToken!=    JsonToken.VALUE_STRING)    {    return    _currToken.substring(0,    rawLen);    }    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
123	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  ==  0  &&  rawNum.startsWith( "- "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	add	if(rawLen  ==  0  &&  rawNum.startsWith( "- "))  {	  if(rawLen    >    0    &&    rawNum.startsWith(   "-       "))    {    	compilable	  [FE]  JsonParseException  	24	8	replace
124	[BUG]  [BUGGY]  if(rawLen  ==  0  &&  rawNum.startsWith( "- "))  {  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  ==  0  &&  rawNum.startsWith( "- "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen  ==  0  &&  rawNum.startsWith( "- "))  {	  if(rawLen    >    0    &&    rawNum.startsWith(   "-       "))    {    	compilable	  [FE]  JsonParseException  	24	8	replace
125	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawNum.startsWith( "000 ")||  rawNum.startsWith( "000 "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	add	if(rawNum.startsWith( "000 ")||  rawNum.startsWith( "000 "))  {	  if(rawNum.startsWith(   ".000   ")||    rawNum.startsWith(   ".000   "))    {    	compilable	  [FE]  JsonParseException  	36	8	replace
126	[BUG]  [BUGGY]  if(rawNum.startsWith( "000 ")||  rawNum.startsWith( "000 "))  {  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawNum.startsWith( "000 ")||  rawNum.startsWith( "000 "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawNum.startsWith( "000 ")||  rawNum.startsWith( "000 "))  {	  if(rawNum.startsWith(   ".000   ")||    rawNum.startsWith(   ".000   "))    {    	compilable	  [FE]  JsonParseException  	36	8	replace
127	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawNum.startsWith( "000000 ")||  rawNum.startsWith( "000000 "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	add	if(rawNum.startsWith( "000000 ")||  rawNum.startsWith( "000000 "))  {	  if(rawNum.startsWith(   ".000   ")||    rawNum.startsWith(   ".000   "))    {    	compilable	  [FE]  JsonParseException  	36	8	replace
128	[BUG]  [BUGGY]  if(rawNum.startsWith( "000000 ")||  rawNum.startsWith( "000000 "))  {  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawNum.startsWith( "000000 ")||  rawNum.startsWith( "000000 "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawNum.startsWith( "000000 ")||  rawNum.startsWith( "000000 "))  {	  if(rawNum.startsWith(   ".000   ")||    rawNum.startsWith(   ".000   "))    {    	compilable	  [FE]  JsonParseException  	36	8	replace
129	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  ==  1  ||  rawNum.startsWith( "0.0 "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	add	if(rawLen  ==  1  ||  rawNum.startsWith( "0.0 "))  {	  if(rawLen    ==    1    ||    rawNum.startsWith(   ".0   "))    {    	compilable	  [FE]  JsonParseException  	32	8	replace
130	[BUG]  [BUGGY]  if(rawLen  ==  1  ||  rawNum.startsWith( "0.0 "))  {  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  ==  1  ||  rawNum.startsWith( "0.0 "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen  ==  1  ||  rawNum.startsWith( "0.0 "))  {	  if(rawLen    ==    1    ||    rawNum.startsWith(   ".0   "))    {    	compilable	  [FE]  JsonParseException  	32	8	replace
131	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  ==  1  ||  rawNum.startsWith( "1.0 "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	add	if(rawLen  ==  1  ||  rawNum.startsWith( "1.0 "))  {	  if(rawLen    ==    1    ||    rawNum.startsWith(   ".0   "))    {    	compilable	  [FE]  JsonParseException  	32	8	replace
132	[BUG]  [BUGGY]  if(rawLen  ==  1  ||  rawNum.startsWith( "1.0 "))  {  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  ==  1  ||  rawNum.startsWith( "1.0 "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen  ==  1  ||  rawNum.startsWith( "1.0 "))  {	  if(rawLen    ==    1    ||    rawNum.startsWith(   ".0   "))    {    	compilable	  [FE]  JsonParseException  	32	8	replace
133	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  <  1  ||  rawNum.startsWith( "0.0 "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	add	if(rawLen  <  1  ||  rawNum.startsWith( "0.0 "))  {	  if(rawLen    <    1    ||    rawNum.startsWith(   ".0   "))    {    	compilable	  [FE]  JsonParseException  	50	8	replace
134	[BUG]  [BUGGY]  if(rawLen  <  1  ||  rawNum.startsWith( "0.0 "))  {  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  <  1  ||  rawNum.startsWith( "0.0 "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen  <  1  ||  rawNum.startsWith( "0.0 "))  {	  if(rawLen    <    1    ||    rawNum.startsWith(   ".0   "))    {    	compilable	  [FE]  JsonParseException  	50	8	replace
135	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  <  1  ||  rawNum.startsWith( "1.0 "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	add	if(rawLen  <  1  ||  rawNum.startsWith( "1.0 "))  {	  if(rawLen    <    1    ||    rawNum.startsWith(   ".0   "))    {    	compilable	  [FE]  JsonParseException  	50	8	replace
136	[BUG]  [BUGGY]  if(rawLen  <  1  ||  rawNum.startsWith( "1.0 "))  {  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  <  1  ||  rawNum.startsWith( "1.0 "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen  <  1  ||  rawNum.startsWith( "1.0 "))  {	  if(rawLen    <    1    ||    rawNum.startsWith(   ".0   "))    {    	compilable	  [FE]  JsonParseException  	50	8	replace
137	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]          JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  >  0  ||  rawNum.startsWith( ".- "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	add	if(rawLen  >  0  ||  rawNum.startsWith( ".- "))  {	  if(rawLen    >    0    ||    rawNum.startsWith(       "-       "))    {    if(rawLen    >    0    ||    rawNum.startsWith(   ".-       "))    {    	compilable	  [FE]  JsonParseException  	2	8	replace
138	[BUG]  [BUGGY]  if(rawLen  >  0  ||  rawNum.startsWith( ".- "))  {  [FE]  JsonParseException  [FE]          JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  >  0  ||  rawNum.startsWith( ".- "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen  >  0  ||  rawNum.startsWith( ".- "))  {	  if(rawLen    >    0    ||    rawNum.startsWith(       "-       "))    {    if(rawLen    >    0    ||    rawNum.startsWith(   ".-       "))    {    	compilable	  [FE]  JsonParseException  	2	8	replace
139	[BUG]  [BUGGY]  if(rawLen  ==  1)  {  if(_currToken!=  JsonToken.END_OBJECT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  return  _currToken.substring(0,  rawLen);  }  [CE]  cannot  find  symbol  [FE]                    JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  ==  1)  {  if(_currToken!=  JsonToken.END_OBJECT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  return  _currToken.substring(0,  rawLen);  }  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen  ==  1)  {  if(_currToken!=  JsonToken.END_OBJECT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  return  _currToken.substring(0,  rawLen);  }	  if(rawLen    ==    0)    {    if(_currToken!=    JsonToken.END_OBJECT    ||    _currToken    ==    JsonToken.END_OBJECT)    {    return    _currToken.substring(0,    rawLen);    }    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
140	[BUG]  [BUGGY]  if(_currToken!=  JsonToken.END_OBJECT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  return  _currToken.substring(0,  rawLen);  }  [CE]  illegal  start  of  type  [FE]                      JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(_currToken!=  JsonToken.END_OBJECT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  return  _currToken.substring(0,  rawLen);  }  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(_currToken!=  JsonToken.END_OBJECT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  return  _currToken.substring(0,  rawLen);  }	  if(rawLen    ==    0)    {    if(_currToken!=    JsonToken.END_OBJECT    ||    _currToken    ==    JsonToken.END_OBJECT)    {    return    _currToken.substring(0,    rawLen);    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
141	[BUG]  [BUGGY]  if(rawLen  ==  0)  {  if(_currToken!=  JsonToken.END_OBJECT  ||  _currToken  ==  JsonToken.END_ARRAY)  {  return  _currToken.substring(0,  rawLen);  }  [CE]  cannot  find  symbol  [FE]                        JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  ==  0)  {  if(_currToken!=  JsonToken.END_OBJECT  ||  _currToken  ==  JsonToken.END_ARRAY)  {  return  _currToken.substring(0,  rawLen);  }  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen  ==  0)  {  if(_currToken!=  JsonToken.END_OBJECT  ||  _currToken  ==  JsonToken.END_ARRAY)  {  return  _currToken.substring(0,  rawLen);  }	  if(rawLen    ==    0)    {    if(_currToken!=    JsonToken.END_OBJECT    ||    _currToken    ==    JsonToken.END_OBJECT)    {    return    _currToken.substring(0,    rawLen);    }    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
142	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  ==  0  ||  rawNum.startsWith( "-- "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	add	if(rawLen  ==  0  ||  rawNum.startsWith( "-- "))  {	  if(rawLen    ==    0    ||    rawNum.startsWith(   "-       "))    {    	compilable	  [FE]  JsonParseException  	28	8	replace
143	[BUG]  [BUGGY]  if(rawLen  ==  0  ||  rawNum.startsWith( "-- "))  {  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  ==  0  ||  rawNum.startsWith( "-- "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen  ==  0  ||  rawNum.startsWith( "-- "))  {	  if(rawLen    ==    0    ||    rawNum.startsWith(   "-       "))    {    	compilable	  [FE]  JsonParseException  	28	8	replace
144	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  <  1  ||  rawNum.equals( "-- "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	add	if(rawLen  <  1  ||  rawNum.equals( "-- "))  {	  if(rawLen    <    1    ||    rawNum.startsWith(   "--   "))    {    	compilable	  [FE]  JsonParseException  	47	8	replace
145	[BUG]  [BUGGY]  if(rawLen  <  1  ||  rawNum.equals( "-- "))  {  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  <  1  ||  rawNum.equals( "-- "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen  <  1  ||  rawNum.equals( "-- "))  {	  if(rawLen    <    1    ||    rawNum.startsWith(   "--   "))    {    	compilable	  [FE]  JsonParseException  	47	8	replace
146	[BUG]  [BUGGY]  if(rawLen  >  0  ||  rawNum.startsWith(   ".0   "))  {  if(rawLen  >  0  ||  rawNum.startsWith( ".0   "))  {  [CE]  illegal  start  of  expression  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  >  0  ||  rawNum.startsWith(   ".0   "))  {  if(rawLen  >  0  ||  rawNum.startsWith( ".0   "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen    >    0    ||    rawNum.startsWith(   ".0   "))    {    if(rawLen  >  0  ||  rawNum.startsWith( ".0   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	67	None	add
147	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  ==  1  &&  rawNum.startsWith( "-- "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	add	if(rawLen  ==  1  &&  rawNum.startsWith( "-- "))  {	  if(rawLen    ==    1    ||    rawNum.startsWith(   "--   "))    {    	compilable	  [FE]  JsonParseException  	30	8	replace
148	[BUG]  [BUGGY]  if(rawLen  ==  1  &&  rawNum.startsWith( "-- "))  {  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  ==  1  &&  rawNum.startsWith( "-- "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen  ==  1  &&  rawNum.startsWith( "-- "))  {	  if(rawLen    ==    1    ||    rawNum.startsWith(   "--   "))    {    	compilable	  [FE]  JsonParseException  	30	8	replace
149	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  ==  1  ||  rawNum.equals( "-- "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	add	if(rawLen  ==  1  ||  rawNum.equals( "-- "))  {	  if(rawLen    ==    1    ||    rawNum.startsWith(   "--   "))    {    	compilable	  [FE]  JsonParseException  	30	8	replace
150	[BUG]  [BUGGY]  if(rawLen  ==  1  ||  rawNum.equals( "-- "))  {  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  ==  1  ||  rawNum.equals( "-- "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen  ==  1  ||  rawNum.equals( "-- "))  {	  if(rawLen    ==    1    ||    rawNum.startsWith(   "--   "))    {    	compilable	  [FE]  JsonParseException  	30	8	replace
151	[BUG]  [BUGGY]  if(rawLen  ==  1)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  return  _currToken.substring(0,  rawLen);  }  [CE]  cannot  find  symbol  [FE]                  JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  ==  1)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  return  _currToken.substring(0,  rawLen);  }  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen  ==  1)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  return  _currToken.substring(0,  rawLen);  }	  if(rawLen    ==    0)    {    if(_currToken!=    JsonToken.VALUE_NUMBER_INT)    {    return    _currToken.substring(0,    rawLen);    }    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
152	[BUG]  [BUGGY]  if(rawLen  ==  2)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  return  _currToken.substring(0,  rawLen);  }  [CE]  cannot  find  symbol  [FE]                    JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  ==  2)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  return  _currToken.substring(0,  rawLen);  }  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen  ==  2)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  return  _currToken.substring(0,  rawLen);  }	  if(rawLen    ==    0)    {    if(_currToken!=    JsonToken.VALUE_NUMBER_INT)    {    return    _currToken.substring(0,    rawLen);    }    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
153	[BUG]  [BUGGY]  int  rawLen  =  _currToken.length();  [CE]  illegal  start  of  type  [FE]        JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  int  rawLen  =  _currToken.length();  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	int  rawLen  =  _currToken.length();	  if(rawLen    <    1)    {    int    rawLen    =    _currToken.length();    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
154	[BUG]  [BUGGY]  Integer  rawLen  =  _currToken.length();  [CE]  illegal  start  of  type  [FE]          JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  Integer  rawLen  =  _currToken.length();  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	Integer  rawLen  =  _currToken.length();	  if(rawLen    <    1)    {    int    rawLen    =    _currToken.length();    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
155	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]          JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawNum.startsWith( "-- ")||  rawNum.startsWith( "-- "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	add	if(rawNum.startsWith( "-- ")||  rawNum.startsWith( "-- "))  {	  if(rawNum.startsWith(       "-       ")||    rawNum.startsWith(       "--       "))    {    if(rawNum.startsWith(   ".-       ")||    rawNum.startsWith(   "--       "))    {    	compilable	  [FE]  JsonParseException  	42	8	replace
156	[BUG]  [BUGGY]  if(rawNum.startsWith( "-- ")||  rawNum.startsWith( "-- "))  {  [FE]  JsonParseException  [FE]          JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawNum.startsWith( "-- ")||  rawNum.startsWith( "-- "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawNum.startsWith( "-- ")||  rawNum.startsWith( "-- "))  {	  if(rawNum.startsWith(       "-       ")||    rawNum.startsWith(       "--       "))    {    if(rawNum.startsWith(   ".-       ")||    rawNum.startsWith(   "--       "))    {    	compilable	  [FE]  JsonParseException  	42	8	replace
157	[BUG]  [BUGGY]  if(rawNum.startsWith( "-1 ")||  rawNum.startsWith( "-1))  {  [CE]  unclosed  string  literal  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawNum.startsWith( "-1 ")||  rawNum.startsWith( "-1))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawNum.startsWith( "-1 ")||  rawNum.startsWith( "-1))  {	  if(rawNum.startsWith(   "-   ")||    rawNum.startsWith(   "-   "))    {    	non-compiled	[CE]  unclosed  string  literal	73	None	replace
158	[BUG]  [BUGGY]  int  rawLen  =  _currToken.intValue();  [CE]  illegal  start  of  type  [FE]            JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  int  rawLen  =  _currToken.intValue();  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	int  rawLen  =  _currToken.intValue();	  if(rawLen    <    1)    {    int    rawLen    =    _currToken.intValue();    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
159	[BUG]  [BUGGY]  Integer  rawLen  =  _currToken.intValue();  [CE]  illegal  start  of  type  [FE]              JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  Integer  rawLen  =  _currToken.intValue();  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	Integer  rawLen  =  _currToken.intValue();	  if(rawLen    <    1)    {    int    rawLen    =    _currToken.intValue();    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
160	[BUG]  [BUGGY]  char  rawLen  =  _currToken.intValue();  [CE]  illegal  start  of  type  [FE]                JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  char  rawLen  =  _currToken.intValue();  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	char  rawLen  =  _currToken.intValue();	  if(rawLen    <    1)    {    int    rawLen    =    _currToken.intValue();    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
161	[BUG]  [BUGGY]  if(rawLen.startsWith( "-- ")||  rawLen.startsWith( "-- "))  {  [CE]  int  cannot  be  dereferenced  [FE]            JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen.startsWith( "-- ")||  rawLen.startsWith( "-- "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen.startsWith( "-- ")||  rawLen.startsWith( "-- "))  {	  if(rawLen.startsWith(   "--   "))    {    	non-compiled	[CE]  int  cannot  be  dereferenced	57	None	replace
162	[BUG]  [BUGGY]  if(rawLen.startsWith( "-- ")||  rawLen.startsWith( "--))  {  [CE]  unclosed  string  literal  [FE]              JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen.startsWith( "-- ")||  rawLen.startsWith( "--))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen.startsWith( "-- ")||  rawLen.startsWith( "--))  {	  if(rawLen.startsWith(   "--   "))    {    	non-compiled	[CE]  unclosed  string  literal	57	None	replace
163	[BUG]  [BUGGY]  if(rawLen.startsWith( ".-- "))  {  [CE]  int  cannot  be  dereferenced  [FE]                JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen.startsWith( ".-- "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen.startsWith( ".-- "))  {	  if(rawLen.startsWith(   "--   "))    {    	non-compiled	[CE]  int  cannot  be  dereferenced	57	None	replace
164	[BUG]  [BUGGY]  if(rawLen.startsWith( ".- ")||  rawLen.startsWith( ".-- "))  {  [CE]  int  cannot  be  dereferenced  [FE]            JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen.startsWith( ".- ")||  rawLen.startsWith( ".-- "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen.startsWith( ".- ")||  rawLen.startsWith( ".-- "))  {	  if(rawLen.startsWith(   "-   ")||    rawLen.startsWith(   "--   "))    {    	non-compiled	[CE]  int  cannot  be  dereferenced	21	None	replace
165	[BUG]  [BUGGY]  if(rawNum.startsWith( "- ")||  rawNum.startsWith( "--)||  rawLen  <  2)  {  [CE]  unclosed  string  literal  [FE]        JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawNum.startsWith( "- ")||  rawNum.startsWith( "--)||  rawLen  <  2)  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawNum.startsWith( "- ")||  rawNum.startsWith( "--)||  rawLen  <  2)  {	  if(rawNum.startsWith(   "-   ")||    rawNum.startsWith(   "--)||    rawLen    <    1)    {    	non-compiled	[CE]  unclosed  string  literal	54	None	replace
166	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]          JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawNum.startsWith( ".0 ")||  rawNum.startsWith( ".0 ")||  rawLen  <  1)  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	add	if(rawNum.startsWith( ".0 ")||  rawNum.startsWith( ".0 ")||  rawLen  <  1)  {	  if(rawNum.startsWith(   "-   ")||    rawNum.startsWith(   "--)||    rawLen    <    1)    {    	compilable	  [FE]  JsonParseException  	54	8	replace
167	[BUG]  [BUGGY]  if(rawNum.startsWith( ".0 ")||  rawNum.startsWith( ".0 ")||  rawLen  <  1)  {  [FE]  JsonParseException  [FE]          JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawNum.startsWith( ".0 ")||  rawNum.startsWith( ".0 ")||  rawLen  <  1)  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawNum.startsWith( ".0 ")||  rawNum.startsWith( ".0 ")||  rawLen  <  1)  {	  if(rawNum.startsWith(   "-   ")||    rawNum.startsWith(   "--)||    rawLen    <    1)    {    	compilable	  [FE]  JsonParseException  	54	8	replace
168	[BUG]  [BUGGY]  if(rawNum.startsWith( "- ")||  rawNum.startsWith( "--)||  rawLen  <  =  1)  {  [CE]  unclosed  string  literal  [FE]            JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawNum.startsWith( "- ")||  rawNum.startsWith( "--)||  rawLen  <  =  1)  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawNum.startsWith( "- ")||  rawNum.startsWith( "--)||  rawLen  <  =  1)  {	  if(rawNum.startsWith(   "-   ")||    rawNum.startsWith(   "--)||    rawLen    <    1)    {    	non-compiled	[CE]  unclosed  string  literal	54	None	replace
169	[BUG]  [BUGGY]  if(rawLen  >=  1)  {  if(rawLen  >=  1)  {  [CE]  illegal  start  of  expression  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  >=  1)  {  if(rawLen  >=  1)  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen    >=    1)    {    if(rawLen  >=  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	58	None	add
170	[BUG]  [BUGGY]  if(rawLen  >=  1)  {  if(rawLen!=  1)  {  [CE]  illegal  start  of  expression  [FE]      JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  >=  1)  {  if(rawLen!=  1)  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen    >=    1)    {    if(rawLen!=  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	58	None	add
171	[BUG]  [BUGGY]  if(rawLen  >=  1)  {  if(rawLen  >>  1)  {  [CE]  illegal  start  of  expression  [FE]        JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  >=  1)  {  if(rawLen  >>  1)  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen    >=    1)    {    if(rawLen  >>  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	58	None	add
172	[BUG]  [BUGGY]  if(rawLen  >=  1)  {  if(rawLen  ==  1)  {  [CE]  illegal  start  of  expression  [FE]          JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  >=  1)  {  if(rawLen  ==  1)  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen    >=    1)    {    if(rawLen  ==  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	58	None	add
173	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]        JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  ==  0  ||  rawNum.startsWith( ".000 "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	add	if(rawLen  ==  0  ||  rawNum.startsWith( ".000 "))  {	  if(rawLen    ==    1    ||    rawNum.startsWith(       "-       "))    {    if(rawLen    ==    1    ||    rawNum.startsWith(   "-       "))    {    	compilable	  [FE]  JsonParseException  	38	8	replace
174	[BUG]  [BUGGY]  if(rawLen  ==  0  ||  rawNum.startsWith( ".000 "))  {  [FE]  JsonParseException  [FE]        JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  ==  0  ||  rawNum.startsWith( ".000 "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen  ==  0  ||  rawNum.startsWith( ".000 "))  {	  if(rawLen    ==    1    ||    rawNum.startsWith(       "-       "))    {    if(rawLen    ==    1    ||    rawNum.startsWith(   "-       "))    {    	compilable	  [FE]  JsonParseException  	38	8	replace
175	[BUG]  [BUGGY]  if(rawNum.startsWith(   "0   ")||  rawNum.startsWith(   "--   "))  {  if(rawNum.startsWith(   "0   ")||  rawNum.startsWith( "--   "))  {  [CE]  illegal  start  of  expression  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawNum.startsWith(   "0   ")||  rawNum.startsWith(   "--   "))  {  if(rawNum.startsWith(   "0   ")||  rawNum.startsWith( "--   "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawNum.startsWith(   "0   ")||    rawNum.startsWith(   "--   "))    {    if(rawNum.startsWith(   "0   ")||  rawNum.startsWith( "--   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	74	None	add
176	[BUG]  [BUGGY]  if(rawNum.startsWith(   "0   ")||  rawNum.startsWith(   "--   "))  {  if(rawNum.startsWith( ".0   ")||  rawNum.startsWith( "--   "))  {  [CE]  illegal  start  of  expression  [FE]      JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawNum.startsWith(   "0   ")||  rawNum.startsWith(   "--   "))  {  if(rawNum.startsWith( ".0   ")||  rawNum.startsWith( "--   "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawNum.startsWith(   "0   ")||    rawNum.startsWith(   "--   "))    {    if(rawNum.startsWith( ".0   ")||  rawNum.startsWith( "--   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	74	None	add
177	[BUG]  [BUGGY]  if  (rawLen.startsWith( ".- ")||  rawLen  <  1)  {  [CE]  int  cannot  be  dereferenced  [FE]          JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if  (rawLen.startsWith( ".- ")||  rawLen  <  1)  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if  (rawLen.startsWith( ".- ")||  rawLen  <  1)  {	  if    (rawLen.startsWith(   "-   ")||    rawLen    <    1)    {    	non-compiled	[CE]  int  cannot  be  dereferenced	20	None	replace
178	[BUG]  [BUGGY]  if(rawLen  >  0  ||  rawNum.equals(   "-   "))  {  if(rawLen  >  0  ||  rawNum.equals( "-   "))  {  [CE]  illegal  start  of  expression  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  >  0  ||  rawNum.equals(   "-   "))  {  if(rawLen  >  0  ||  rawNum.equals( "-   "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen    >    0    ||    rawNum.equals(   "-   "))    {    if(rawLen  >  0  ||  rawNum.equals( "-   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	69	None	add
179	[BUG]  [BUGGY]  if(rawLen  >  0  ||  rawNum.equals(   "-   "))  {  if(rawLen  >  0  ||  rawNum.equals( ".-   "))  {  [CE]  illegal  start  of  expression  [FE]      JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  >  0  ||  rawNum.equals(   "-   "))  {  if(rawLen  >  0  ||  rawNum.equals( ".-   "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen    >    0    ||    rawNum.equals(   "-   "))    {    if(rawLen  >  0  ||  rawNum.equals( ".-   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	69	None	add
180	[BUG]  [BUGGY]  if(rawLen  >  0  ||  rawNum.equals(   "-   "))  {  If(rawLen  >  0  ||  rawNum.equals( "-   "))  {  [CE]  [FE]        JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  >  0  ||  rawNum.equals(   "-   "))  {  If(rawLen  >  0  ||  rawNum.equals( "-   "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen    >    0    ||    rawNum.equals(   "-   "))    {    If(rawLen  >  0  ||  rawNum.equals( "-   "))  {	  	non-compiled	[CE]  	69	None	add
181	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]        JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  ==  1  ||  rawNum.startsWith( ".000 "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	add	if(rawLen  ==  1  ||  rawNum.startsWith( ".000 "))  {	  if(rawLen    ==    1    ||    rawNum.startsWith(       "-       "))    {    if(rawLen    ==    1    ||    rawNum.startsWith(   ")-       "))    {    	compilable	  [FE]  JsonParseException  	71	8	replace
182	[BUG]  [BUGGY]  if(rawLen  ==  1  ||  rawNum.startsWith( ".000 "))  {  [FE]  JsonParseException  [FE]        JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  ==  1  ||  rawNum.startsWith( ".000 "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen  ==  1  ||  rawNum.startsWith( ".000 "))  {	  if(rawLen    ==    1    ||    rawNum.startsWith(       "-       "))    {    if(rawLen    ==    1    ||    rawNum.startsWith(   ")-       "))    {    	compilable	  [FE]  JsonParseException  	71	8	replace
183	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  >  0  ||  rawNum.startsWith( "1.0 "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	add	if(rawLen  >  0  ||  rawNum.startsWith( "1.0 "))  {	  if(rawLen    >    0    ||    rawNum.startsWith(   ".0   "))    {    	compilable	  [FE]  JsonParseException  	68	8	replace
184	[BUG]  [BUGGY]  if(rawLen  >  0  ||  rawNum.startsWith( "1.0 "))  {  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  >  0  ||  rawNum.startsWith( "1.0 "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen  >  0  ||  rawNum.startsWith( "1.0 "))  {	  if(rawLen    >    0    ||    rawNum.startsWith(   ".0   "))    {    	compilable	  [FE]  JsonParseException  	68	8	replace
185	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  >  0  ||  rawNum.startsWith( "0.0 "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	add	if(rawLen  >  0  ||  rawNum.startsWith( "0.0 "))  {	  if(rawLen    >    0    ||    rawNum.startsWith(   ".0   "))    {    	compilable	  [FE]  JsonParseException  	68	8	replace
186	[BUG]  [BUGGY]  if(rawLen  >  0  ||  rawNum.startsWith( "0.0 "))  {  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  >  0  ||  rawNum.startsWith( "0.0 "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen  >  0  ||  rawNum.startsWith( "0.0 "))  {	  if(rawLen    >    0    ||    rawNum.startsWith(   ".0   "))    {    	compilable	  [FE]  JsonParseException  	68	8	replace
187	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]        JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  >  0  &&  rawNum.startsWith( ".0 "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	add	if(rawLen  >  0  &&  rawNum.startsWith( ".0 "))  {	  if(rawLen    >    0    ||    rawNum.startsWith(   ".0   "))    {    	compilable	  [FE]  JsonParseException  	68	8	replace
188	[BUG]  [BUGGY]  if(rawLen  >  0  &&  rawNum.startsWith( ".0 "))  {  [FE]  JsonParseException  [FE]        JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  >  0  &&  rawNum.startsWith( ".0 "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen  >  0  &&  rawNum.startsWith( ".0 "))  {	  if(rawLen    >    0    ||    rawNum.startsWith(   ".0   "))    {    	compilable	  [FE]  JsonParseException  	68	8	replace
189	[BUG]  [BUGGY]  int  digitsLen  =(int)Math.floor(rawLen);  [CE]  illegal  start  of  type  [FE]                      JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  int  digitsLen  =(int)Math.floor(rawLen);  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	int  digitsLen  =(int)Math.floor(rawLen);	  int    digitsLen    =(int)Math.floor(rawNum);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
190	[BUG]  [BUGGY]  char  digitsLen  =(char)Math.floor(rawNum);  [CE]  illegal  start  of  type  [FE]                        JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  char  digitsLen  =(char)Math.floor(rawNum);  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	char  digitsLen  =(char)Math.floor(rawNum);	  int    digitsLen    =(int)Math.floor(rawNum);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
191	[BUG]  [BUGGY]  int  digitsLen  =(int)Math.ceil(rawNum);  [CE]  illegal  start  of  type  [FE]                          JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  int  digitsLen  =(int)Math.ceil(rawNum);  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	int  digitsLen  =(int)Math.ceil(rawNum);	  int    digitsLen    =(int)Math.floor(rawNum);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
192	[BUG]  [BUGGY]  int  digitsLen  =(int)Math.floor(rawNum  +  1);  [CE]  illegal  start  of  type  [FE]                            JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  int  digitsLen  =(int)Math.floor(rawNum  +  1);  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	int  digitsLen  =(int)Math.floor(rawNum  +  1);	  int    digitsLen    =(int)Math.floor(rawNum);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
193	[BUG]  [BUGGY]  if  (rawNum.startsWith(   "-   ")||  rawLen  <  2)  {  if  (rawNum.startsWith( "-   ")||  rawLen  <  2)  {  [CE]  illegal  start  of  expression  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if  (rawNum.startsWith(   "-   ")||  rawLen  <  2)  {  if  (rawNum.startsWith( "-   ")||  rawLen  <  2)  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if    (rawNum.startsWith(   "-   ")||    rawLen    <    2)    {    if  (rawNum.startsWith( "-   ")||  rawLen  <  2)  {	  	non-compiled	[CE]  illegal  start  of  expression	18	None	add
194	[BUG]  [BUGGY]  if  (rawNum.startsWith(   "-   ")||  rawLen  <  2)  {  if  (rawNum.startsWith( ".-   ")||  rawLen  <  2)  {  [CE]  illegal  start  of  expression  [FE]      JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if  (rawNum.startsWith(   "-   ")||  rawLen  <  2)  {  if  (rawNum.startsWith( ".-   ")||  rawLen  <  2)  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if    (rawNum.startsWith(   "-   ")||    rawLen    <    2)    {    if  (rawNum.startsWith( ".-   ")||  rawLen  <  2)  {	  	non-compiled	[CE]  illegal  start  of  expression	18	None	add
195	[BUG]  [BUGGY]  if(rawLen  >  0)  {  If(rawLen  <  1)  {  [CE]  ';'  expected  [FE]          JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  >  0)  {  If(rawLen  <  1)  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen  >  0)  {  If(rawLen  <  1)  {	  if(rawLen    <    1)    {    If(rawLen    <    1)    {    	non-compiled	[CE]  ';'  expected	11	None	replace
196	[BUG]  [BUGGY]  if(rawLen  <  =  1)  {  If(rawLen  <  1)  {  [CE]  illegal  start  of  expression  [FE]            JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  <  =  1)  {  If(rawLen  <  1)  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen  <  =  1)  {  If(rawLen  <  1)  {	  if(rawLen    <    1)    {    If(rawLen    <    1)    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
197	[BUG]  [BUGGY]  if(rawLen  ==  1)  {  If(rawLen  <  1)  {  [CE]  ';'  expected  [FE]              JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  ==  1)  {  If(rawLen  <  1)  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen  ==  1)  {  If(rawLen  <  1)  {	  if(rawLen    <    1)    {    If(rawLen    <    1)    {    	non-compiled	[CE]  ';'  expected	11	None	replace
198	[BUG]  [BUGGY]  _currToken  =  JsonToken.VALUE_NUMBER_INT  +  1;  [CE]  illegal  start  of  type  [FE]                    JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  _currToken  =  JsonToken.VALUE_NUMBER_INT  +  1;  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	_currToken  =  JsonToken.VALUE_NUMBER_INT  +  1;	  _currToken    =    JsonToken.VALUE_NUMBER_INT;    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
199	[BUG]  [BUGGY]  if(rawNum.startsWith( "0 ")||  rawNum.startsWith( "-1))  {  [CE]  unclosed  string  literal  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawNum.startsWith( "0 ")||  rawNum.startsWith( "-1))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawNum.startsWith( "0 ")||  rawNum.startsWith( "-1))  {	  if(rawNum.startsWith(   "0   ")||    rawNum.startsWith(   "--   "))    {    	non-compiled	[CE]  unclosed  string  literal	75	None	replace
200	[BUG]  [BUGGY]  if(rawLen.startsWith( "0 ")||  rawNum.startsWith( "-- "))  {  [CE]  int  cannot  be  dereferenced  [FE]      JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen.startsWith( "0 ")||  rawNum.startsWith( "-- "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen.startsWith( "0 ")||  rawNum.startsWith( "-- "))  {	  if(rawNum.startsWith(   "0   ")||    rawNum.startsWith(   "--   "))    {    	non-compiled	[CE]  int  cannot  be  dereferenced	75	None	replace
201	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]          JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawNum.startsWith( ".0 ")||  rawLen  <  1)  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	add	if(rawNum.startsWith( ".0 ")||  rawLen  <  1)  {	  if    (rawNum.startsWith(       "-       ")||    rawLen    <    1)    {    if    (rawNum.startsWith(   ".-       ")||    rawLen    <    1)    {    	compilable	  [FE]  JsonParseException  	9	8	replace
202	[BUG]  [BUGGY]  if(rawNum.startsWith( ".0 ")||  rawLen  <  1)  {  [FE]  JsonParseException  [FE]          JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawNum.startsWith( ".0 ")||  rawLen  <  1)  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawNum.startsWith( ".0 ")||  rawLen  <  1)  {	  if    (rawNum.startsWith(       "-       ")||    rawLen    <    1)    {    if    (rawNum.startsWith(   ".-       ")||    rawLen    <    1)    {    	compilable	  [FE]  JsonParseException  	9	8	replace
203	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]            JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  >  MAX_ERROR_TOKEN_LENGTH  ||  rawLen  <  1)  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	add	if(rawLen  >  MAX_ERROR_TOKEN_LENGTH  ||  rawLen  <  1)  {	  if(rawLen    <    1)    {    if(rawLen    >=    1)    {    	compilable	  [FE]  JsonParseException  	12	8	replace
204	[BUG]  [BUGGY]  if(rawLen  >  MAX_ERROR_TOKEN_LENGTH  ||  rawLen  <  1)  {  [FE]  JsonParseException  [FE]            JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  >  MAX_ERROR_TOKEN_LENGTH  ||  rawLen  <  1)  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen  >  MAX_ERROR_TOKEN_LENGTH  ||  rawLen  <  1)  {	  if(rawLen    <    1)    {    if(rawLen    >=    1)    {    	compilable	  [FE]  JsonParseException  	12	8	replace
205	[BUG]  [BUGGY]  int  digits  =(int)Math.rint(rawLen);  [CE]  illegal  start  of  type  [FE]                    JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  int  digits  =(int)Math.rint(rawLen);  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	int  digits  =(int)Math.rint(rawLen);	  int    digits    =(int)Math.rint(rawNum);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
206	[BUG]  [BUGGY]  if(rawLen  >  MAX_ERROR_TOKEN_LENGTH)  {  If(rawLen  <  1)  {  [CE]  ';'  expected  [FE]          JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  >  MAX_ERROR_TOKEN_LENGTH)  {  If(rawLen  <  1)  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen  >  MAX_ERROR_TOKEN_LENGTH)  {  If(rawLen  <  1)  {	  if(rawLen    <    1)    {    If(rawLen    <    1)    {    	non-compiled	[CE]  ';'  expected	11	None	replace
207	[BUG]  [BUGGY]  if(rawLen  >  MAX_ERROR_TOKEN_LENGTH)  {  If(rawLen  >=  1)  {  [CE]  ';'  expected  [FE]            JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  >  MAX_ERROR_TOKEN_LENGTH)  {  If(rawLen  >=  1)  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen  >  MAX_ERROR_TOKEN_LENGTH)  {  If(rawLen  >=  1)  {	  if(rawLen    <    1)    {    If(rawLen    <    1)    {    	non-compiled	[CE]  ';'  expected	11	None	replace
208	[BUG]  [BUGGY]  if(rawLen  >  MAX_ERROR_TOKEN)  {  If(rawLen  <  1)  {  [CE]  ';'  expected  [FE]              JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  >  MAX_ERROR_TOKEN)  {  If(rawLen  <  1)  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen  >  MAX_ERROR_TOKEN)  {  If(rawLen  <  1)  {	  if(rawLen    <    1)    {    If(rawLen    <    1)    {    	non-compiled	[CE]  ';'  expected	11	None	replace
209	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  >  1  ||  rawNum.startsWith( ".0 "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	add	if(rawLen  >  1  ||  rawNum.startsWith( ".0 "))  {	  if(rawLen    >    0    ||    rawNum.startsWith(   ".0   "))    {    	compilable	  [FE]  JsonParseException  	68	8	replace
210	[BUG]  [BUGGY]  if(rawLen  >  1  ||  rawNum.startsWith( ".0 "))  {  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  >  1  ||  rawNum.startsWith( ".0 "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen  >  1  ||  rawNum.startsWith( ".0 "))  {	  if(rawLen    >    0    ||    rawNum.startsWith(   ".0   "))    {    	compilable	  [FE]  JsonParseException  	68	8	replace
211	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  >=  0  ||  rawNum.startsWith( "- "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	add	if(rawLen  >=  0  ||  rawNum.startsWith( "- "))  {	  if(rawLen    ==    0    ||    rawNum.startsWith(   "-       "))    {    	compilable	  [FE]  JsonParseException  	28	8	replace
212	[BUG]  [BUGGY]  if(rawLen  >=  0  ||  rawNum.startsWith( "- "))  {  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  >=  0  ||  rawNum.startsWith( "- "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen  >=  0  ||  rawNum.startsWith( "- "))  {	  if(rawLen    ==    0    ||    rawNum.startsWith(   "-       "))    {    	compilable	  [FE]  JsonParseException  	28	8	replace
213	[BUG]  [BUGGY]  if(rawNum.startsWith( "- ")||  rawNum.startsWith( "-- ")||  rawNum.startsWith( "--))  {  [CE]  unclosed  string  literal  [FE]        JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawNum.startsWith( "- ")||  rawNum.startsWith( "-- ")||  rawNum.startsWith( "--))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawNum.startsWith( "- ")||  rawNum.startsWith( "-- ")||  rawNum.startsWith( "--))  {	  if(rawNum.startsWith(       "-       ")||    rawNum.startsWith(       "--       "))    {    if(rawNum.startsWith(   "-       ")||    rawNum.startsWith(   "--       "))    {    	non-compiled	[CE]  unclosed  string  literal	41	None	replace
214	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]          JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawNum.startsWith( "- ")||  rawNum.startsWith( "-- ")||  rawNum.startsWith( "-- "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	add	if(rawNum.startsWith( "- ")||  rawNum.startsWith( "-- ")||  rawNum.startsWith( "-- "))  {	  if(rawNum.startsWith(       "-       ")||    rawNum.startsWith(       "--       "))    {    if(rawNum.startsWith(   "-       ")||    rawNum.startsWith(   "--       "))    {    	compilable	  [FE]  JsonParseException  	41	8	replace
215	[BUG]  [BUGGY]  if(rawNum.startsWith( "- ")||  rawNum.startsWith( "-- ")||  rawNum.startsWith( "-- "))  {  [FE]  JsonParseException  [FE]          JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawNum.startsWith( "- ")||  rawNum.startsWith( "-- ")||  rawNum.startsWith( "-- "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawNum.startsWith( "- ")||  rawNum.startsWith( "-- ")||  rawNum.startsWith( "-- "))  {	  if(rawNum.startsWith(       "-       ")||    rawNum.startsWith(       "--       "))    {    if(rawNum.startsWith(   "-       ")||    rawNum.startsWith(   "--       "))    {    	compilable	  [FE]  JsonParseException  	41	8	replace
216	[BUG]  [BUGGY]  if(rawLen  ==  0  ||  rawNum.startsWith(   "-     "))  {  If(rawLen  ==  0  ||  rawNum.startsWith( "-   "))  {  [CE]  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  ==  0  ||  rawNum.startsWith(   "-     "))  {  If(rawLen  ==  0  ||  rawNum.startsWith( "-   "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen    ==    0    ||    rawNum.startsWith(   "-       "))    {    If(rawLen  ==  0  ||  rawNum.startsWith( "-   "))  {	  	non-compiled	[CE]  	27	None	add
217	[BUG]  [BUGGY]  if(rawNum.startsWith(   "-   ")||  rawNum.startsWith(   ".-   "))  {  if(rawNum.startsWith( ".-   ")||  rawNum.startsWith( ".-   "))  {  [CE]  illegal  start  of  expression  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawNum.startsWith(   "-   ")||  rawNum.startsWith(   ".-   "))  {  if(rawNum.startsWith( ".-   ")||  rawNum.startsWith( ".-   "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawNum.startsWith(   "-   ")||    rawNum.startsWith(   ".-   "))    {    if(rawNum.startsWith( ".-   ")||  rawNum.startsWith( ".-   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	55	None	add
218	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  >  0  &&  rawNum.startsWith( "- ")||  rawNum.startsWith( "-- "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	add	if(rawLen  >  0  &&  rawNum.startsWith( "- ")||  rawNum.startsWith( "-- "))  {	  if(rawLen    >    0    &&    rawNum.startsWith(   "-       "))    {    	compilable	  [FE]  JsonParseException  	24	8	replace
219	[BUG]  [BUGGY]  if(rawLen  >  0  &&  rawNum.startsWith( "- ")||  rawNum.startsWith( "-- "))  {  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  >  0  &&  rawNum.startsWith( "- ")||  rawNum.startsWith( "-- "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen  >  0  &&  rawNum.startsWith( "- ")||  rawNum.startsWith( "-- "))  {	  if(rawLen    >    0    &&    rawNum.startsWith(   "-       "))    {    	compilable	  [FE]  JsonParseException  	24	8	replace
220	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  >  0  ||  rawNum.startsWith( "-- "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	add	if(rawLen  >  0  ||  rawNum.startsWith( "-- "))  {	  if(rawLen    >    1    ||    rawNum.startsWith(   "-   "))    {    	compilable	  [FE]  JsonParseException  	26	8	replace
221	[BUG]  [BUGGY]  if(rawLen  >  0  ||  rawNum.startsWith( "-- "))  {  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  >  0  ||  rawNum.startsWith( "-- "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen  >  0  ||  rawNum.startsWith( "-- "))  {	  if(rawLen    >    1    ||    rawNum.startsWith(   "-   "))    {    	compilable	  [FE]  JsonParseException  	26	8	replace
222	[BUG]  [BUGGY]  if(rawLen  <  =  1  ||  rawNum.startsWith( "- ")||  rawLen  <  1)  {  [CE]  illegal  start  of  expression  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  <  =  1  ||  rawNum.startsWith( "- ")||  rawLen  <  1)  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen  <  =  1  ||  rawNum.startsWith( "- ")||  rawLen  <  1)  {	  if(rawLen    <    1    ||    rawNum.startsWith(   "-   ")||    rawLen    <    1)    {    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
223	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  <  1  ||  rawNum.startsWith( "- ")||  rawLen  >=  1)  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	add	if(rawLen  <  1  ||  rawNum.startsWith( "- ")||  rawLen  >=  1)  {	  if(rawLen    <    1    ||    rawNum.startsWith(   "-   ")||    rawLen    <    1)    {    	compilable	  [FE]  JsonParseException  	66	8	replace
224	[BUG]  [BUGGY]  if(rawLen  <  1  ||  rawNum.startsWith( "- ")||  rawLen  >=  1)  {  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  <  1  ||  rawNum.startsWith( "- ")||  rawLen  >=  1)  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen  <  1  ||  rawNum.startsWith( "- ")||  rawLen  >=  1)  {	  if(rawLen    <    1    ||    rawNum.startsWith(   "-   ")||    rawLen    <    1)    {    	compilable	  [FE]  JsonParseException  	66	8	replace
225	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawNum.startsWith( ".- ")||  rawNum.startsWith( ".- "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	add	if(rawNum.startsWith( ".- ")||  rawNum.startsWith( ".- "))  {	  if(rawNum.startsWith(   "-   ")||    rawNum.startsWith(   "-   "))    {    	compilable	  [FE]  JsonParseException  	73	8	replace
226	[BUG]  [BUGGY]  if(rawNum.startsWith( ".- ")||  rawNum.startsWith( ".- "))  {  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawNum.startsWith( ".- ")||  rawNum.startsWith( ".- "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawNum.startsWith( ".- ")||  rawNum.startsWith( ".- "))  {	  if(rawNum.startsWith(   "-   ")||    rawNum.startsWith(   "-   "))    {    	compilable	  [FE]  JsonParseException  	73	8	replace
227	[BUG]  [BUGGY]  if(rawLen  >  0)  {  int  rawLen  =(int)Math.floor(rawNum);  [CE]  illegal  start  of  expression  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  >  0)  {  int  rawLen  =(int)Math.floor(rawNum);  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen    >    0)    {    int  rawLen  =(int)Math.floor(rawNum);	  	non-compiled	[CE]  illegal  start  of  expression	13	None	add
228	[BUG]  [BUGGY]  if(rawLen  >  0)  {  int  rawLen  =  _currToken.length();  [CE]  illegal  start  of  expression  [FE]      JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  >  0)  {  int  rawLen  =  _currToken.length();  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen    >    0)    {    int  rawLen  =  _currToken.length();	  	non-compiled	[CE]  illegal  start  of  expression	13	None	add
229	[BUG]  [BUGGY]  if(rawLen  >  0)  {  int  rawLen  =  _currToken.indexOf(rawNum);  [CE]  illegal  start  of  expression  [FE]        JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  >  0)  {  int  rawLen  =  _currToken.indexOf(rawNum);  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen    >    0)    {    int  rawLen  =  _currToken.indexOf(rawNum);	  	non-compiled	[CE]  illegal  start  of  expression	13	None	add
230	[BUG]  [BUGGY]  if(rawLen  >  MAX_ERROR_TOKEN)  {  if(rawLen  <  1)  {  [CE]  illegal  start  of  expression  [FE]        JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  >  MAX_ERROR_TOKEN)  {  if(rawLen  <  1)  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen  >  MAX_ERROR_TOKEN)  {  if(rawLen  <  1)  {	  if(rawLen    <    1)    {    if(rawLen    <    1)    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
231	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]          JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  >  1  ||  rawNum.startsWith( ".- "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	add	if(rawLen  >  1  ||  rawNum.startsWith( ".- "))  {	  if(rawLen    ==    1    ||    rawNum.startsWith(       "-       "))    {    if(rawLen    ==    1    ||    rawNum.startsWith(   ".-       "))    {    	compilable	  [FE]  JsonParseException  	39	8	replace
232	[BUG]  [BUGGY]  if(rawLen  >  1  ||  rawNum.startsWith( ".- "))  {  [FE]  JsonParseException  [FE]          JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  >  1  ||  rawNum.startsWith( ".- "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen  >  1  ||  rawNum.startsWith( ".- "))  {	  if(rawLen    ==    1    ||    rawNum.startsWith(       "-       "))    {    if(rawLen    ==    1    ||    rawNum.startsWith(   ".-       "))    {    	compilable	  [FE]  JsonParseException  	39	8	replace
233	[BUG]  [BUGGY]  if(rawLen  <  1  ||  rawNum.startsWith(   "--   "))  {  If(rawLen  <  1  ||  rawNum.startsWith( "--   "))  {  [CE]  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  <  1  ||  rawNum.startsWith(   "--   "))  {  If(rawLen  <  1  ||  rawNum.startsWith( "--   "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen    <    1    ||    rawNum.startsWith(   "--   "))    {    If(rawLen  <  1  ||  rawNum.startsWith( "--   "))  {	  	non-compiled	[CE]  	46	None	add
234	[BUG]  [BUGGY]  if(rawNum.startsWith( "- ")||  rawNum.startsWith( "--)||  rawLen  ==  0)  {  [CE]  unclosed  string  literal  [FE]            JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawNum.startsWith( "- ")||  rawNum.startsWith( "--)||  rawLen  ==  0)  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawNum.startsWith( "- ")||  rawNum.startsWith( "--)||  rawLen  ==  0)  {	  if(rawNum.startsWith(   "-   ")||    rawNum.startsWith(   "--))    {    	non-compiled	[CE]  unclosed  string  literal	37	None	replace
235	[BUG]  [BUGGY]  if(rawLen.startsWith( "-   ")||  rawNum.startsWith( "-   "))  {  [CE]  int  cannot  be  dereferenced  [FE]            JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen.startsWith( "-   ")||  rawNum.startsWith( "-   "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen.startsWith( "-   ")||  rawNum.startsWith( "-   "))  {	  if(rawLen.startsWith(   "-   ")||    rawLen.startsWith(   "-   "))    {    	non-compiled	[CE]  int  cannot  be  dereferenced	76	None	replace
236	[BUG]  [BUGGY]  _currToken  =  JsonToken.START_OBJECT;  [CE]  illegal  start  of  type  [FE]                  JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  _currToken  =  JsonToken.START_OBJECT;  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	_currToken  =  JsonToken.START_OBJECT;	  _currToken    =    JsonToken.VALUE_STRING;    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
237	[BUG]  [BUGGY]  if(rawLen  >  0  ||  rawNum.startsWith(   ".0   "))  {  if(rawLen  >  0  ||  rawNum.startsWith( ".0.0   "))  {  [CE]  illegal  start  of  expression  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  >  0  ||  rawNum.startsWith(   ".0   "))  {  if(rawLen  >  0  ||  rawNum.startsWith( ".0.0   "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen    >    0    ||    rawNum.startsWith(   ".0   "))    {    if(rawLen  >  0  ||  rawNum.startsWith( ".0.0   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	67	None	add
238	[BUG]  [BUGGY]  if(rawNum  <  0  ||  rawNum.startsWith( ".- "))  {  [CE]  bad  operand  types  for  binary  operator  [FE]          JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawNum  <  0  ||  rawNum.startsWith( ".- "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawNum  <  0  ||  rawNum.startsWith( ".- "))  {	  if(rawLen    <    1    ||    rawNum.startsWith(       "-       "))    {    if(rawLen    <    1    ||    rawNum.startsWith(   ".-       "))    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  	44	None	replace
239	[BUG]  [BUGGY]  if(rawNum  <  0  ||  rawNum.startsWith( "- "))  {  [CE]  bad  operand  types  for  binary  operator  [FE]            JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawNum  <  0  ||  rawNum.startsWith( "- "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawNum  <  0  ||  rawNum.startsWith( "- "))  {	  if(rawLen    <    1    ||    rawNum.startsWith(       "-       "))    {    if(rawLen    <    1    ||    rawNum.startsWith(   ",-       "))    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  	45	None	replace
240	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]        JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawNum  ==  null  ||  rawNum.startsWith( "- "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	add	if(rawNum  ==  null  ||  rawNum.startsWith( "- "))  {	  if(rawLen    ==    1    ||    rawNum.startsWith(       "-       "))    {    if(rawLen    ==    1    ||    rawNum.startsWith(   "-       "))    {    	compilable	  [FE]  JsonParseException  	38	8	replace
241	[BUG]  [BUGGY]  if(rawNum  ==  null  ||  rawNum.startsWith( "- "))  {  [FE]  JsonParseException  [FE]        JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawNum  ==  null  ||  rawNum.startsWith( "- "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawNum  ==  null  ||  rawNum.startsWith( "- "))  {	  if(rawLen    ==    1    ||    rawNum.startsWith(       "-       "))    {    if(rawLen    ==    1    ||    rawNum.startsWith(   "-       "))    {    	compilable	  [FE]  JsonParseException  	38	8	replace
242	[BUG]  [BUGGY]  if(rawLen  <  1  ||  rawNum.startsWith(   ".0   "))  {  if(rawLen  <  1  ||  rawNum.startsWith( ".0.0   "))  {  [CE]  illegal  start  of  expression  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  <  1  ||  rawNum.startsWith(   ".0   "))  {  if(rawLen  <  1  ||  rawNum.startsWith( ".0.0   "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen    <    1    ||    rawNum.startsWith(   ".0   "))    {    if(rawLen  <  1  ||  rawNum.startsWith( ".0.0   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	49	None	add
243	[BUG]  [BUGGY]  if(rawLen  ==  1  ||  rawNum.startsWith(   ".0   "))  {  if(rawLen  ==  1  ||  rawNum.startsWith( ".0.0   "))  {  [CE]  illegal  start  of  expression  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  ==  1  ||  rawNum.startsWith(   ".0   "))  {  if(rawLen  ==  1  ||  rawNum.startsWith( ".0.0   "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen    ==    1    ||    rawNum.startsWith(   ".0   "))    {    if(rawLen  ==  1  ||  rawNum.startsWith( ".0.0   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	31	None	add
244	[BUG]  [BUGGY]  if(rawLen.startsWith( "-- ")||  rawLen.startsWith( ".-- "))  {  [CE]  int  cannot  be  dereferenced  [FE]            JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen.startsWith( "-- ")||  rawLen.startsWith( ".-- "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen.startsWith( "-- ")||  rawLen.startsWith( ".-- "))  {	  if(rawLen.startsWith(   "--   "))    {    	non-compiled	[CE]  int  cannot  be  dereferenced	57	None	replace
245	[BUG]  [BUGGY]  int  rawLen  =(int)Math.floor(rawNum);  [CE]  illegal  start  of  type  [FE]                      JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  int  rawLen  =(int)Math.floor(rawNum);  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	int  rawLen  =(int)Math.floor(rawNum);	  int    digitsLen    =(int)Math.floor(rawNum);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
246	[BUG]  [BUGGY]  if(rawLen  <  1)  {  int  rawLen  =  _currToken.indexOf(rawNum);  }  [CE]  illegal  start  of  type  [FE]          JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  <  1)  {  int  rawLen  =  _currToken.indexOf(rawNum);  }  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen  <  1)  {  int  rawLen  =  _currToken.indexOf(rawNum);  }	  if(rawLen    <    1)    {    int    rawLen    =    _currToken.indexOf(rawNum);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
247	[BUG]  [BUGGY]  if(rawNum  >  0  ||  rawNum.startsWith( "- "))  {  [CE]  bad  operand  types  for  binary  operator  [FE]        JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawNum  >  0  ||  rawNum.startsWith( "- "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawNum  >  0  ||  rawNum.startsWith( "- "))  {	  if(rawLen    >    0    ||    rawNum.startsWith(       "-       "))    {    if(rawLen    >    0    ||    rawNum.startsWith(   "-       "))    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  	1	None	replace
248	[BUG]  [BUGGY]  if(rawLen  ==  1  ||  rawNum.startsWith(   "--   "))  {  If(rawLen  ==  1  ||  rawNum.startsWith( "--   "))  {  [CE]  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  ==  1  ||  rawNum.startsWith(   "--   "))  {  If(rawLen  ==  1  ||  rawNum.startsWith( "--   "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen    ==    1    ||    rawNum.startsWith(   "--   "))    {    If(rawLen  ==  1  ||  rawNum.startsWith( "--   "))  {	  	non-compiled	[CE]  	29	None	add
249	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawNum.startsWith( ".0 ")||  rawNum.startsWith( ".-- "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	add	if(rawNum.startsWith( ".0 ")||  rawNum.startsWith( ".-- "))  {	  if(rawNum.startsWith(   "0   ")||    rawNum.startsWith(   "--   "))    {    	compilable	  [FE]  JsonParseException  	75	8	replace
250	[BUG]  [BUGGY]  if(rawNum.startsWith( ".0 ")||  rawNum.startsWith( ".-- "))  {  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawNum.startsWith( ".0 ")||  rawNum.startsWith( ".-- "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawNum.startsWith( ".0 ")||  rawNum.startsWith( ".-- "))  {	  if(rawNum.startsWith(   "0   ")||    rawNum.startsWith(   "--   "))    {    	compilable	  [FE]  JsonParseException  	75	8	replace
251	[BUG]  [BUGGY]  if(rawNum.startsWith( "0 ")||  rawNum.startsWith( "--))  {  [CE]  unclosed  string  literal  [FE]      JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawNum.startsWith( "0 ")||  rawNum.startsWith( "--))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawNum.startsWith( "0 ")||  rawNum.startsWith( "--))  {	  if(rawNum.startsWith(   "0   ")||    rawNum.startsWith(   "--   "))    {    	non-compiled	[CE]  unclosed  string  literal	75	None	replace
252	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawNum.startsWith( "0 ")||  rawNum.startsWith( ".0 "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	add	if(rawNum.startsWith( "0 ")||  rawNum.startsWith( ".0 "))  {	  if(rawNum.startsWith(   ".0   ")||    rawNum.startsWith(   ".0   "))    {    	compilable	  [FE]  JsonParseException  	34	8	replace
253	[BUG]  [BUGGY]  if(rawNum.startsWith( "0 ")||  rawNum.startsWith( ".0 "))  {  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawNum.startsWith( "0 ")||  rawNum.startsWith( ".0 "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawNum.startsWith( "0 ")||  rawNum.startsWith( ".0 "))  {	  if(rawNum.startsWith(   ".0   ")||    rawNum.startsWith(   ".0   "))    {    	compilable	  [FE]  JsonParseException  	34	8	replace
254	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawNum.startsWith( ".000 ")||  rawNum.startsWith( ".000 ")||  rawNum.startsWith( ".000 "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	add	if(rawNum.startsWith( ".000 ")||  rawNum.startsWith( ".000 ")||  rawNum.startsWith( ".000 "))  {	  if(rawNum.startsWith(   ".000   ")||    rawNum.startsWith(   ".000   "))    {    	compilable	  [FE]  JsonParseException  	36	8	replace
255	[BUG]  [BUGGY]  if(rawNum.startsWith( ".000 ")||  rawNum.startsWith( ".000 ")||  rawNum.startsWith( ".000 "))  {  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawNum.startsWith( ".000 ")||  rawNum.startsWith( ".000 ")||  rawNum.startsWith( ".000 "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawNum.startsWith( ".000 ")||  rawNum.startsWith( ".000 ")||  rawNum.startsWith( ".000 "))  {	  if(rawNum.startsWith(   ".000   ")||    rawNum.startsWith(   ".000   "))    {    	compilable	  [FE]  JsonParseException  	36	8	replace
256	[BUG]  [BUGGY]  char  rawLen  =  _currToken.length();  [CE]  illegal  start  of  type  [FE]        JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  char  rawLen  =  _currToken.length();  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	char  rawLen  =  _currToken.length();	  if(rawLen    <    1)    {    int    rawLen    =    _currToken.length();    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
257	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawNum.startsWith( ".0 ")||  rawNum.startsWith( ".- "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	add	if(rawNum.startsWith( ".0 ")||  rawNum.startsWith( ".- "))  {	  if(rawNum.startsWith(   "-   ")||    rawNum.startsWith(   ".-   "))    {    	compilable	  [FE]  JsonParseException  	56	8	replace
258	[BUG]  [BUGGY]  if(rawNum.startsWith( ".0 ")||  rawNum.startsWith( ".- "))  {  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawNum.startsWith( ".0 ")||  rawNum.startsWith( ".- "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawNum.startsWith( ".0 ")||  rawNum.startsWith( ".- "))  {	  if(rawNum.startsWith(   "-   ")||    rawNum.startsWith(   ".-   "))    {    	compilable	  [FE]  JsonParseException  	56	8	replace
259	[BUG]  [BUGGY]  ||  rawLen  ==  0)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  return  _currToken;  }  [CE]  illegal  start  of  expression  [FE]                      JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  ||  rawLen  ==  0)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  return  _currToken;  }  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	||  rawLen  ==  0)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  return  _currToken;  }	  if(rawLen    ==    0)    {    if(_currToken!=    JsonToken.VALUE_NUMBER_INT)    {    return    _currToken;    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
260	[BUG]  [BUGGY]  if(rawNum.startsWith( "- ")||  rawNum.startsWith( "--)||  rawLen  >  1)  {  [CE]  unclosed  string  literal  [FE]        JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawNum.startsWith( "- ")||  rawNum.startsWith( "--)||  rawLen  >  1)  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawNum.startsWith( "- ")||  rawNum.startsWith( "--)||  rawLen  >  1)  {	  if(rawNum.startsWith(   "-   ")||    rawNum.startsWith(   "--)||    rawLen    <    1)    {    	non-compiled	[CE]  unclosed  string  literal	54	None	replace
261	[BUG]  [BUGGY]  if(rawNum.startsWith( "- ")||  rawNum.startsWith( "--)||  rawLen  >=  1)  {  [CE]  unclosed  string  literal  [FE]          JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawNum.startsWith( "- ")||  rawNum.startsWith( "--)||  rawLen  >=  1)  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawNum.startsWith( "- ")||  rawNum.startsWith( "--)||  rawLen  >=  1)  {	  if(rawNum.startsWith(   "-   ")||    rawNum.startsWith(   "--)||    rawLen    <    1)    {    	non-compiled	[CE]  unclosed  string  literal	54	None	replace
262	[BUG]  [BUGGY]  if(rawNum.startsWith( "0 ")||  rawNum.startsWith( "--)||  rawLen  <  1)  {  [CE]  unclosed  string  literal  [FE]            JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawNum.startsWith( "0 ")||  rawNum.startsWith( "--)||  rawLen  <  1)  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawNum.startsWith( "0 ")||  rawNum.startsWith( "--)||  rawLen  <  1)  {	  if(rawNum.startsWith(   "-   ")||    rawNum.startsWith(   "--)||    rawLen    <    1)    {    	non-compiled	[CE]  unclosed  string  literal	54	None	replace
263	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]        JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if  (rawNum.startsWith( "- ")||  rawLen  ==  1)  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	add	if  (rawNum.startsWith( "- ")||  rawLen  ==  1)  {	  if    (rawNum.startsWith(   "-   ")||    rawLen    <    =    1)    {    	compilable	  [FE]  JsonParseException  	60	8	replace
264	[BUG]  [BUGGY]  if  (rawNum.startsWith( "- ")||  rawLen  ==  1)  {  [FE]  JsonParseException  [FE]        JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if  (rawNum.startsWith( "- ")||  rawLen  ==  1)  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if  (rawNum.startsWith( "- ")||  rawLen  ==  1)  {	  if    (rawNum.startsWith(   "-   ")||    rawLen    <    =    1)    {    	compilable	  [FE]  JsonParseException  	60	8	replace
265	[BUG]  [BUGGY]  if(rawLen  <  =  1  ||  rawNum.startsWith( ".0 "))  {  [CE]  illegal  start  of  expression  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  <  =  1  ||  rawNum.startsWith( ".0 "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen  <  =  1  ||  rawNum.startsWith( ".0 "))  {	  if(rawLen    <    1    ||    rawNum.startsWith(   ".0   "))    {    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
266	[BUG]  [BUGGY]  if(rawLen  >  1  ||  rawNum.startsWith(   "-   "))  {  If(rawLen  >  1  ||  rawNum.startsWith( "-   "))  {  [CE]  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  >  1  ||  rawNum.startsWith(   "-   "))  {  If(rawLen  >  1  ||  rawNum.startsWith( "-   "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen    >    1    ||    rawNum.startsWith(   "-   "))    {    If(rawLen  >  1  ||  rawNum.startsWith( "-   "))  {	  	non-compiled	[CE]  	25	None	add
267	[BUG]  [BUGGY]  if(rawLen  >  1  ||  rawNum.equals( "-1))  {  [CE]  unclosed  string  literal  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  >  1  ||  rawNum.equals( "-1))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen  >  1  ||  rawNum.equals( "-1))  {	  if(rawLen    >    0    ||    rawNum.equals(   "-   "))    {    	non-compiled	[CE]  unclosed  string  literal	70	None	replace
268	[BUG]  [BUGGY]  if(rawLen  >  MAX_ERROR_TOKEN_LENGTH  ||  rawLen  <  =  1)  {  [CE]  illegal  start  of  expression  [FE]          JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  >  MAX_ERROR_TOKEN_LENGTH  ||  rawLen  <  =  1)  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen  >  MAX_ERROR_TOKEN_LENGTH  ||  rawLen  <  =  1)  {	  if(rawLen    <    =    1)    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
269	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]          JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawNum.startsWith( ".0 ")||  rawNum.startsWith( ".0 ")||  rawNum.startsWith( ".0 "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	add	if(rawNum.startsWith( ".0 ")||  rawNum.startsWith( ".0 ")||  rawNum.startsWith( ".0 "))  {	  if(rawNum.startsWith(       "-       ")||    rawNum.startsWith(       "--       "))    {    if(rawNum.startsWith(   ".-       ")||    rawNum.startsWith(   "--       "))    {    	compilable	  [FE]  JsonParseException  	42	8	replace
270	[BUG]  [BUGGY]  if(rawNum.startsWith( ".0 ")||  rawNum.startsWith( ".0 ")||  rawNum.startsWith( ".0 "))  {  [FE]  JsonParseException  [FE]          JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawNum.startsWith( ".0 ")||  rawNum.startsWith( ".0 ")||  rawNum.startsWith( ".0 "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawNum.startsWith( ".0 ")||  rawNum.startsWith( ".0 ")||  rawNum.startsWith( ".0 "))  {	  if(rawNum.startsWith(       "-       ")||    rawNum.startsWith(       "--       "))    {    if(rawNum.startsWith(   ".-       ")||    rawNum.startsWith(   "--       "))    {    	compilable	  [FE]  JsonParseException  	42	8	replace
271	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]            JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawNum.startsWith( ".java ")||  rawNum.startsWith( ".java "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	add	if(rawNum.startsWith( ".java ")||  rawNum.startsWith( ".java "))  {	  if(rawNum.startsWith(       "-       ")||    rawNum.startsWith(       "--       "))    {    if(rawNum.startsWith(   ".-       ")||    rawNum.startsWith(   "--       "))    {    	compilable	  [FE]  JsonParseException  	42	8	replace
272	[BUG]  [BUGGY]  if(rawNum.startsWith( ".java ")||  rawNum.startsWith( ".java "))  {  [FE]  JsonParseException  [FE]            JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawNum.startsWith( ".java ")||  rawNum.startsWith( ".java "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawNum.startsWith( ".java ")||  rawNum.startsWith( ".java "))  {	  if(rawNum.startsWith(       "-       ")||    rawNum.startsWith(       "--       "))    {    if(rawNum.startsWith(   ".-       ")||    rawNum.startsWith(   "--       "))    {    	compilable	  [FE]  JsonParseException  	42	8	replace
273	[BUG]  [BUGGY]  if(_currToken!=  JsonToken.END_OBJECT  ||  _currToken  ==  JsonToken.END_ARRAY)  {  return  _currToken.substring(0,  rawLen);  }  [CE]  illegal  start  of  type  [FE]                    JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(_currToken!=  JsonToken.END_OBJECT  ||  _currToken  ==  JsonToken.END_ARRAY)  {  return  _currToken.substring(0,  rawLen);  }  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(_currToken!=  JsonToken.END_OBJECT  ||  _currToken  ==  JsonToken.END_ARRAY)  {  return  _currToken.substring(0,  rawLen);  }	  if(rawLen    ==    0)    {    if(_currToken!=    JsonToken.END_OBJECT    ||    _currToken    ==    JsonToken.END_OBJECT)    {    return    _currToken.substring(0,    rawLen);    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
274	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  >=  0  &&  rawNum.startsWith( "- "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	add	if(rawLen  >=  0  &&  rawNum.startsWith( "- "))  {	  if(rawLen    >    0    &&    rawNum.startsWith(   "-       "))    {    	compilable	  [FE]  JsonParseException  	24	8	replace
275	[BUG]  [BUGGY]  if(rawLen  >=  0  &&  rawNum.startsWith( "- "))  {  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  >=  0  &&  rawNum.startsWith( "- "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen  >=  0  &&  rawNum.startsWith( "- "))  {	  if(rawLen    >    0    &&    rawNum.startsWith(   "-       "))    {    	compilable	  [FE]  JsonParseException  	24	8	replace
276	[BUG]  [BUGGY]  if(rawLen  <  =  0  ||  rawNum.startsWith( "- "))  {  [CE]  illegal  start  of  expression  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  <  =  0  ||  rawNum.startsWith( "- "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen  <  =  0  ||  rawNum.startsWith( "- "))  {	  if(rawLen    ==    0    ||    rawNum.startsWith(   "-       "))    {    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
277	[BUG]  [BUGGY]  _currToken  =  JsonToken.VALUE_STRING  ||  JsonToken.VALUE_FLOAT;  [CE]  illegal  start  of  type  [FE]                  JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  _currToken  =  JsonToken.VALUE_STRING  ||  JsonToken.VALUE_FLOAT;  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	_currToken  =  JsonToken.VALUE_STRING  ||  JsonToken.VALUE_FLOAT;	  _currToken    =    JsonToken.VALUE_STRING;    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
278	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]          JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  >  0  ||  rawNum.startsWith( ".java "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	add	if(rawLen  >  0  ||  rawNum.startsWith( ".java "))  {	  if(rawLen    >    0    ||    rawNum.startsWith(       "-       "))    {    if(rawLen    >    0    ||    rawNum.startsWith(   ".-       "))    {    	compilable	  [FE]  JsonParseException  	2	8	replace
279	[BUG]  [BUGGY]  if(rawLen  >  0  ||  rawNum.startsWith( ".java "))  {  [FE]  JsonParseException  [FE]          JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  >  0  ||  rawNum.startsWith( ".java "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen  >  0  ||  rawNum.startsWith( ".java "))  {	  if(rawLen    >    0    ||    rawNum.startsWith(       "-       "))    {    if(rawLen    >    0    ||    rawNum.startsWith(   ".-       "))    {    	compilable	  [FE]  JsonParseException  	2	8	replace
280	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]        JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  >  0  ||  rawNum.startsWith( "-1 "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	add	if(rawLen  >  0  ||  rawNum.startsWith( "-1 "))  {	  if(rawLen    >    0    ||    rawNum.startsWith(       "-       "))    {    if(rawLen    >    0    ||    rawNum.startsWith(   "-       "))    {    	compilable	  [FE]  JsonParseException  	1	8	replace
281	[BUG]  [BUGGY]  if(rawLen  >  0  ||  rawNum.startsWith( "-1 "))  {  [FE]  JsonParseException  [FE]        JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  >  0  ||  rawNum.startsWith( "-1 "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen  >  0  ||  rawNum.startsWith( "-1 "))  {	  if(rawLen    >    0    ||    rawNum.startsWith(       "-       "))    {    if(rawLen    >    0    ||    rawNum.startsWith(   "-       "))    {    	compilable	  [FE]  JsonParseException  	1	8	replace
282	[BUG]  [BUGGY]  if(rawLen  <  1  ||  rawNum.startsWith( "- ")||  rawNum.startsWith( "--)||  rawLen  <  1)  {  [CE]  unclosed  string  literal  [FE]        JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  <  1  ||  rawNum.startsWith( "- ")||  rawNum.startsWith( "--)||  rawLen  <  1)  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen  <  1  ||  rawNum.startsWith( "- ")||  rawNum.startsWith( "--)||  rawLen  <  1)  {	  if(rawNum.startsWith(   "-   ")||    rawNum.startsWith(   "--)||    rawLen    <    1)    {    	non-compiled	[CE]  unclosed  string  literal	54	None	replace
283	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  ==  1  ||  rawNum.startsWith( ".000 ")||  rawNum.startsWith( ".000 "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	add	if(rawLen  ==  1  ||  rawNum.startsWith( ".000 ")||  rawNum.startsWith( ".000 "))  {	  if(rawNum.startsWith(   ".000   ")||    rawNum.startsWith(   ".000   "))    {    	compilable	  [FE]  JsonParseException  	36	8	replace
284	[BUG]  [BUGGY]  if(rawLen  ==  1  ||  rawNum.startsWith( ".000 ")||  rawNum.startsWith( ".000 "))  {  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  ==  1  ||  rawNum.startsWith( ".000 ")||  rawNum.startsWith( ".000 "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen  ==  1  ||  rawNum.startsWith( ".000 ")||  rawNum.startsWith( ".000 "))  {	  if(rawNum.startsWith(   ".000   ")||    rawNum.startsWith(   ".000   "))    {    	compilable	  [FE]  JsonParseException  	36	8	replace
285	[BUG]  [BUGGY]  if(rawLen  <  1)  {  if(_currToken!=  JsonToken.VALUE_STRING)  {  return  _currToken.substring(0,  rawLen);  }  [CE]  cannot  find  symbol  [FE]                        JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  <  1)  {  if(_currToken!=  JsonToken.VALUE_STRING)  {  return  _currToken.substring(0,  rawLen);  }  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen  <  1)  {  if(_currToken!=  JsonToken.VALUE_STRING)  {  return  _currToken.substring(0,  rawLen);  }	  if(rawLen    ==    0)    {    if(_currToken!=    JsonToken.VALUE_STRING)    {    return    _currToken.substring(0,    rawLen);    }    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
286	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  <  1  ||  rawNum.startsWith( "0 "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	add	if(rawLen  <  1  ||  rawNum.startsWith( "0 "))  {	  if(rawLen    <    1    ||    rawNum.startsWith(   ".0   "))    {    	compilable	  [FE]  JsonParseException  	50	8	replace
287	[BUG]  [BUGGY]  if(rawLen  <  1  ||  rawNum.startsWith( "0 "))  {  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  <  1  ||  rawNum.startsWith( "0 "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen  <  1  ||  rawNum.startsWith( "0 "))  {	  if(rawLen    <    1    ||    rawNum.startsWith(   ".0   "))    {    	compilable	  [FE]  JsonParseException  	50	8	replace
288	[BUG]  [BUGGY]  if(rawLen  ==  1)  {  if(rawLen  ==  2)  {  [CE]  illegal  start  of  expression  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  ==  1)  {  if(rawLen  ==  2)  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen    ==    1)    {    if(rawLen  ==  2)  {	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
289	[BUG]  [BUGGY]  if(rawLen  ==  1  ||  rawNum.startsWith(   ".0   "))  {  if(rawLen  ==  1  ||  rawNum.startsWith(. ".0   "))  {  [CE]  illegal  start  of  expression  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  ==  1  ||  rawNum.startsWith(   ".0   "))  {  if(rawLen  ==  1  ||  rawNum.startsWith(. ".0   "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen    ==    1    ||    rawNum.startsWith(   ".0   "))    {    if(rawLen  ==  1  ||  rawNum.startsWith(. ".0   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	31	None	add
290	[BUG]  [BUGGY]  if(rawLen  ==  1  ||  rawNum.startsWith(   ".0   "))  {  if(rawLen  ==  1  ||  rawNum.startsWith( ",.0   "))  {  [CE]  illegal  start  of  expression  [FE]      JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  ==  1  ||  rawNum.startsWith(   ".0   "))  {  if(rawLen  ==  1  ||  rawNum.startsWith( ",.0   "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen    ==    1    ||    rawNum.startsWith(   ".0   "))    {    if(rawLen  ==  1  ||  rawNum.startsWith( ",.0   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	31	None	add
291	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  >=  0  ||  rawNum.equals( "- "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	add	if(rawLen  >=  0  ||  rawNum.equals( "- "))  {	  if(rawLen    >    0    ||    rawNum.equals(   "-   "))    {    	compilable	  [FE]  JsonParseException  	70	8	replace
292	[BUG]  [BUGGY]  if(rawLen  >=  0  ||  rawNum.equals( "- "))  {  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  >=  0  ||  rawNum.equals( "- "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen  >=  0  ||  rawNum.equals( "- "))  {	  if(rawLen    >    0    ||    rawNum.equals(   "-   "))    {    	compilable	  [FE]  JsonParseException  	70	8	replace
293	[BUG]  [BUGGY]  if(rawLen  >  1  ||  rawNum.startsWith(   "-   "))  {  if(rawLen  >  1  ||  rawNum.startsWith( ")-   "))  {  [CE]  illegal  start  of  expression  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  >  1  ||  rawNum.startsWith(   "-   "))  {  if(rawLen  >  1  ||  rawNum.startsWith( ")-   "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen    >    1    ||    rawNum.startsWith(   "-   "))    {    if(rawLen  >  1  ||  rawNum.startsWith( ")-   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	25	None	add
294	[BUG]  [BUGGY]  if(rawLen  ==  0)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.VALUE_NUMBER_FLOAT)  {  return  _currToken.substring(0,  rawLen);  }  [CE]  cannot  find  symbol  [FE]                  JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  ==  0)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.VALUE_NUMBER_FLOAT)  {  return  _currToken.substring(0,  rawLen);  }  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen  ==  0)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.VALUE_NUMBER_FLOAT)  {  return  _currToken.substring(0,  rawLen);  }	  if(rawLen    ==    0)    {    if(_currToken!=    JsonToken.VALUE_NUMBER_INT)    {    return    _currToken.substring(0,    rawLen);    }    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
295	[BUG]  [BUGGY]  if(rawLen  >  0  ||  rawNum.equals(   "-   "))  {  if(rawLen  >  0  ||  rawNum.equals( ",-   "))  {  [CE]  illegal  start  of  expression  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  >  0  ||  rawNum.equals(   "-   "))  {  if(rawLen  >  0  ||  rawNum.equals( ",-   "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen    >    0    ||    rawNum.equals(   "-   "))    {    if(rawLen  >  0  ||  rawNum.equals( ",-   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	69	None	add
296	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawNum.startsWith( "0 ")||  rawNum.startsWith( "- "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	add	if(rawNum.startsWith( "0 ")||  rawNum.startsWith( "- "))  {	  if(rawNum.startsWith(   "-   ")||    rawNum.startsWith(   "-   "))    {    	compilable	  [FE]  JsonParseException  	73	8	replace
297	[BUG]  [BUGGY]  if(rawNum.startsWith( "0 ")||  rawNum.startsWith( "- "))  {  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawNum.startsWith( "0 ")||  rawNum.startsWith( "- "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawNum.startsWith( "0 ")||  rawNum.startsWith( "- "))  {	  if(rawNum.startsWith(   "-   ")||    rawNum.startsWith(   "-   "))    {    	compilable	  [FE]  JsonParseException  	73	8	replace
298	[BUG]  [BUGGY]  if(rawLen  <  1  ||  rawNum.startsWith(   ".0   "))  {  if(rawLen  <  1  ||  rawNum.startsWith(. ".0   "))  {  [CE]  illegal  start  of  expression  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  <  1  ||  rawNum.startsWith(   ".0   "))  {  if(rawLen  <  1  ||  rawNum.startsWith(. ".0   "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen    <    1    ||    rawNum.startsWith(   ".0   "))    {    if(rawLen  <  1  ||  rawNum.startsWith(. ".0   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	49	None	add
299	[BUG]  [BUGGY]  if(rawLen  <  1  ||  rawNum.startsWith(   ".0   "))  {  if(rawLen  <  1  ||  rawNum.startsWith( ",.0   "))  {  [CE]  illegal  start  of  expression  [FE]      JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  <  1  ||  rawNum.startsWith(   ".0   "))  {  if(rawLen  <  1  ||  rawNum.startsWith( ",.0   "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen    <    1    ||    rawNum.startsWith(   ".0   "))    {    if(rawLen  <  1  ||  rawNum.startsWith( ",.0   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	49	None	add
300	[BUG]  [BUGGY]  if(rawLen  >  0  ||  rawNum.startsWith(   ".0   "))  {  if(rawLen  >  0  ||  rawNum.startsWith(. ".0   "))  {  [CE]  illegal  start  of  expression  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  >  0  ||  rawNum.startsWith(   ".0   "))  {  if(rawLen  >  0  ||  rawNum.startsWith(. ".0   "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen    >    0    ||    rawNum.startsWith(   ".0   "))    {    if(rawLen  >  0  ||  rawNum.startsWith(. ".0   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	67	None	add
301	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  >  1000  ||  rawNum.startsWith( "- "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	add	if(rawLen  >  1000  ||  rawNum.startsWith( "- "))  {	  if(rawLen    >    1    ||    rawNum.startsWith(   "-   "))    {    	compilable	  [FE]  JsonParseException  	26	8	replace
302	[BUG]  [BUGGY]  if(rawLen  >  1000  ||  rawNum.startsWith( "- "))  {  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  >  1000  ||  rawNum.startsWith( "- "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen  >  1000  ||  rawNum.startsWith( "- "))  {	  if(rawLen    >    1    ||    rawNum.startsWith(   "-   "))    {    	compilable	  [FE]  JsonParseException  	26	8	replace
303	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  >  9)  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	add	if(rawLen  >  9)  {	  if(rawLen    >    0)    {    	compilable	  [FE]  JsonParseException  	14	8	replace
304	[BUG]  [BUGGY]  if(rawLen  >  9)  {  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  >  9)  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen  >  9)  {	  if(rawLen    >    0)    {    	compilable	  [FE]  JsonParseException  	14	8	replace
305	[BUG]  [BUGGY]  if(rawLen  ==  0  ||  rawNum.startsWith(   "-     "))  {  if(rawLen  ==  0  ||  rawNum.startsWith( ")-   "))  {  [CE]  illegal  start  of  expression  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  ==  0  ||  rawNum.startsWith(   "-     "))  {  if(rawLen  ==  0  ||  rawNum.startsWith( ")-   "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen    ==    0    ||    rawNum.startsWith(   "-       "))    {    if(rawLen  ==  0  ||  rawNum.startsWith( ")-   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	27	None	add
306	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]                      JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  ==  0)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.VALUE_NUMBER_INT)  {  return  rawNum;  }  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	add	if(rawLen  ==  0)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.VALUE_NUMBER_INT)  {  return  rawNum;  }	  if(rawLen    ==    0)    {    if(_currToken!=    JsonToken.VALUE_NUMBER_INT)    {    return    _currToken;    }    	compilable	  [FE]  JsonParseException  	6	8	replace
307	[BUG]  [BUGGY]  if(rawLen  ==  0)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.VALUE_NUMBER_INT)  {  return  rawNum;  }  [FE]  JsonParseException  [FE]                      JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  ==  0)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.VALUE_NUMBER_INT)  {  return  rawNum;  }  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen  ==  0)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.VALUE_NUMBER_INT)  {  return  rawNum;  }	  if(rawLen    ==    0)    {    if(_currToken!=    JsonToken.VALUE_NUMBER_INT)    {    return    _currToken;    }    	compilable	  [FE]  JsonParseException  	6	8	replace
308	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]                        JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  ==  0)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.VALUE_NUMBER_FLOAT)  {  return  rawNum;  }  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	add	if(rawLen  ==  0)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.VALUE_NUMBER_FLOAT)  {  return  rawNum;  }	  if(rawLen    ==    0)    {    if(_currToken!=    JsonToken.VALUE_NUMBER_INT)    {    return    _currToken;    }    	compilable	  [FE]  JsonParseException  	6	8	replace
309	[BUG]  [BUGGY]  if(rawLen  ==  0)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.VALUE_NUMBER_FLOAT)  {  return  rawNum;  }  [FE]  JsonParseException  [FE]                        JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  ==  0)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.VALUE_NUMBER_FLOAT)  {  return  rawNum;  }  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen  ==  0)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.VALUE_NUMBER_FLOAT)  {  return  rawNum;  }	  if(rawLen    ==    0)    {    if(_currToken!=    JsonToken.VALUE_NUMBER_INT)    {    return    _currToken;    }    	compilable	  [FE]  JsonParseException  	6	8	replace
310	[BUG]  [BUGGY]  if(rawLen  >=  1)  {  If(rawLen  >=  1)  {  [CE]  ';'  expected  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  >=  1)  {  If(rawLen  >=  1)  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen    >=    1)    {    If(rawLen  >=  1)  {	  	non-compiled	[CE]  ';'  expected	58	None	add
311	[BUG]  [BUGGY]  If(rawLen  >  1  ||  rawNum.startsWith( "- "))  {  [CE]  [FE]            JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  If(rawLen  >  1  ||  rawNum.startsWith( "- "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	If(rawLen  >  1  ||  rawNum.startsWith( "- "))  {	  if(rawLen    >    0    ||    rawNum.startsWith(       "-       "))    {    If(rawLen    >    0    ||    rawNum.startsWith(   "-       "))    {    	non-compiled	[CE]  	3	None	replace
312	[BUG]  [BUGGY]  if(rawLen  >  0)  {  If(rawLen  >  0)  {  [CE]  ';'  expected  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  >  0)  {  If(rawLen  >  0)  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen    >    0)    {    If(rawLen  >  0)  {	  	non-compiled	[CE]  ';'  expected	13	None	add
313	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  ==  0  ||  rawNum.startsWith( "0 ")||  rawNum.startsWith( "-- "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	add	if(rawLen  ==  0  ||  rawNum.startsWith( "0 ")||  rawNum.startsWith( "-- "))  {	  if(rawNum.startsWith(   "0   ")||    rawNum.startsWith(   "--   "))    {    	compilable	  [FE]  JsonParseException  	75	8	replace
314	[BUG]  [BUGGY]  if(rawLen  ==  0  ||  rawNum.startsWith( "0 ")||  rawNum.startsWith( "-- "))  {  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {  return  rawNum;  }      [BUGGY]  if(rawLen  ==  0  ||  rawNum.startsWith( "0 ")||  rawNum.startsWith( "-- "))  {  [BUGGY]      rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.5	602	602	8	replace	if(rawLen  ==  0  ||  rawNum.startsWith( "0 ")||  rawNum.startsWith( "-- "))  {	  if(rawNum.startsWith(   "0   ")||    rawNum.startsWith(   "--   "))    {    	compilable	  [FE]  JsonParseException  	75	8	replace
