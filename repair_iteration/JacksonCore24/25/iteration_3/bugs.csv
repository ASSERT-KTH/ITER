bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(_numTypesValid  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.VALUE_NUMBER_FLOAT)  {  [CE]  incomparable  types:  int  and  JsonToken  [FE]              JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_numTypesValid  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	replace	if(_numTypesValid  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.VALUE_NUMBER_FLOAT)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken!=    JsonToken.VALUE_NUMBER_FLOAT)    {    if(_currToken!=    JsonToken.VALUE_NUMBER_INT    ||    _currToken!=    JsonToken.VALUE_NUMBER_FLOAT)    {    	non-compiled	[CE]  incomparable  types:  int  and  JsonToken	24	None	replace
2	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_FLOAT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_FLOAT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  [CE]  ';'  expected  [FE]    JsonParseException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_FLOAT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_FLOAT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_FLOAT    ||    _currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_currToken  ==  JsonToken.VALUE_NUMBER_FLOAT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {	  	non-compiled	[CE]  ';'  expected	13	None	add
3	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_FLOAT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  [CE]  ';'  expected  [FE]      JsonParseException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_FLOAT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_FLOAT    ||    _currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {	  	non-compiled	[CE]  ';'  expected	13	None	add
4	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_FLOAT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_LONG  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  [CE]  ';'  expected  [FE]        JsonParseException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_FLOAT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_LONG  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_FLOAT    ||    _currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_currToken  ==  JsonToken.VALUE_NUMBER_LONG  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {	  	non-compiled	[CE]  ';'  expected	13	None	add
5	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_FLOAT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_numTypesValid  ==  JsonToken.VALUE_NUMBER_FLOAT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  [CE]  ';'  expected  [FE]          JsonParseException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_FLOAT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_numTypesValid  ==  JsonToken.VALUE_NUMBER_FLOAT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_FLOAT    ||    _currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_numTypesValid  ==  JsonToken.VALUE_NUMBER_FLOAT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {	  	non-compiled	[CE]  ';'  expected	13	None	add
6	[BUG]  [BUGGY]  if(_numTypesValid  ==  JsonToken.VALUE_NUMBER_FLOAT  ||  _numTypesValid!=  JsonToken.VALUE_NUMBER_INT)  {  [CE]  incomparable  types:  int  and  JsonToken  [FE]                JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_numTypesValid  ==  JsonToken.VALUE_NUMBER_FLOAT  ||  _numTypesValid!=  JsonToken.VALUE_NUMBER_INT)  {  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	replace	if(_numTypesValid  ==  JsonToken.VALUE_NUMBER_FLOAT  ||  _numTypesValid!=  JsonToken.VALUE_NUMBER_INT)  {	  if(_numTypesValid    ==    JsonToken.VALUE_NUMBER_INT    ||    _numTypesValid!=    JsonToken.VALUE_NUMBER_FLOAT)    {    	non-compiled	[CE]  incomparable  types:  int  and  JsonToken	6	None	replace
7	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_ARRAY)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_ARRAY)  {  [CE]  ';'  expected  [FE]    JsonParseException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_ARRAY)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_ARRAY)  {  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.START_ARRAY)    {    if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_ARRAY)  {	  	non-compiled	[CE]  ';'  expected	17	None	add
8	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_ARRAY)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_ARRAY)  {  [CE]  ';'  expected  [FE]      JsonParseException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_ARRAY)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_ARRAY)  {  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.START_ARRAY)    {    if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_ARRAY)  {	  	non-compiled	[CE]  ';'  expected	17	None	add
9	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_ARRAY)  {  if(_numTypesValid  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_ARRAY)  {  [CE]  ';'  expected  [FE]        JsonParseException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_ARRAY)  {  if(_numTypesValid  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_ARRAY)  {  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.START_ARRAY)    {    if(_numTypesValid  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_ARRAY)  {	  	non-compiled	[CE]  ';'  expected	17	None	add
10	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_ARRAY)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_OBJECT)  {  [CE]  ';'  expected  [FE]          JsonParseException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_ARRAY)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_OBJECT)  {  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.START_ARRAY)    {    if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_OBJECT)  {	  	non-compiled	[CE]  ';'  expected	17	None	add
11	[BUG]  [BUGGY]  if(_numTypesValid  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [CE]  incomparable  types:  int  and  JsonToken  [FE]        JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_numTypesValid  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	replace	if(_numTypesValid  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    If(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    	non-compiled	[CE]  incomparable  types:  int  and  JsonToken	58	None	replace
12	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_INT)  {  if(_parseNumericValue(NR_INT)!=  0)  {  return  _numberInt;  }  [CE]  'void'  type  not  allowed  here  [FE]                    JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_numTypesValid  ==  NR_INT)  {  if(_parseNumericValue(NR_INT)!=  0)  {  return  _numberInt;  }  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	replace	if(_numTypesValid  ==  NR_INT)  {  if(_parseNumericValue(NR_INT)!=  0)  {  return  _numberInt;  }	  if(_numTypesValid    ==    NR_UNKNOWN)    {    if(_parseNumericValue(NR_UNKNOWN)!=    0)    {    return    _numberInt;    }    	non-compiled	[CE]  'void'  type  not  allowed  here	9	None	replace
13	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_INT)  {  if(_parseNumericValue(NR_UNKNOWN)!=  0)  {  return  _numberInt;  }  [CE]  'void'  type  not  allowed  here  [FE]                      JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_numTypesValid  ==  NR_INT)  {  if(_parseNumericValue(NR_UNKNOWN)!=  0)  {  return  _numberInt;  }  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	replace	if(_numTypesValid  ==  NR_INT)  {  if(_parseNumericValue(NR_UNKNOWN)!=  0)  {  return  _numberInt;  }	  if(_numTypesValid    ==    NR_UNKNOWN)    {    if(_parseNumericValue(NR_UNKNOWN)!=    0)    {    return    _numberInt;    }    	non-compiled	[CE]  'void'  type  not  allowed  here	9	None	replace
14	[BUG]  [BUGGY]  if(_numTypesValid!=  NR_INT)  {  if(_parseNumericValue(NR_INT)!=  0)  {  return  _numberInt;  }  [CE]  'void'  type  not  allowed  here  [FE]                        JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_numTypesValid!=  NR_INT)  {  if(_parseNumericValue(NR_INT)!=  0)  {  return  _numberInt;  }  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	replace	if(_numTypesValid!=  NR_INT)  {  if(_parseNumericValue(NR_INT)!=  0)  {  return  _numberInt;  }	  if(_numTypesValid    ==    NR_UNKNOWN)    {    if(_parseNumericValue(NR_UNKNOWN)!=    0)    {    return    _numberInt;    }    	non-compiled	[CE]  'void'  type  not  allowed  here	9	None	replace
15	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken!=  JsonToken.VALUE_NUMBER_INT)  {  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	add	if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken!=  JsonToken.VALUE_NUMBER_INT)  {	  if(_currToken!=    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    	compilable	  [FE]  RuntimeException  	34	8	replace
16	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken!=  JsonToken.VALUE_NUMBER_INT)  {  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken!=  JsonToken.VALUE_NUMBER_INT)  {  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	replace	if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken!=  JsonToken.VALUE_NUMBER_INT)  {	  if(_currToken!=    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    	compilable	  [FE]  RuntimeException  	34	8	replace
17	[BUG]  [BUGGY]  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_OBJECT)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_OBJECT)  {  [CE]  ';'  expected  [FE]    RuntimeException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_OBJECT)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_OBJECT)  {  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	replace	if(_currToken!=    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.START_OBJECT)    {    if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_OBJECT)  {	  	non-compiled	[CE]  ';'  expected	19	None	add
18	[BUG]  [BUGGY]  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_OBJECT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_OBJECT)  {  [CE]  ';'  expected  [FE]      RuntimeException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_OBJECT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_OBJECT)  {  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	replace	if(_currToken!=    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.START_OBJECT)    {    if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_OBJECT)  {	  	non-compiled	[CE]  ';'  expected	19	None	add
19	[BUG]  [BUGGY]  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_OBJECT)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  [CE]  ';'  expected  [FE]        RuntimeException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_OBJECT)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	replace	if(_currToken!=    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.START_OBJECT)    {    if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_OBJECT)  {	  	non-compiled	[CE]  ';'  expected	19	None	add
20	[BUG]  [BUGGY]  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_OBJECT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  [CE]  ';'  expected  [FE]          RuntimeException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_OBJECT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	replace	if(_currToken!=    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.START_OBJECT)    {    if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_OBJECT)  {	  	non-compiled	[CE]  ';'  expected	19	None	add
21	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_INT)  {  if(_parseNumericValue(NR_INT)!=  0)  {  return  _numberBigDecimal;  }  [CE]  'void'  type  not  allowed  here  [FE]                  JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_numTypesValid  ==  NR_INT)  {  if(_parseNumericValue(NR_INT)!=  0)  {  return  _numberBigDecimal;  }  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	replace	if(_numTypesValid  ==  NR_INT)  {  if(_parseNumericValue(NR_INT)!=  0)  {  return  _numberBigDecimal;  }	  if(_numTypesValid    ==    NR_UNKNOWN)    {    if(_parseNumericValue(NR_UNKNOWN)!=    0)    {    return    _numberBigDecimal;    }    	non-compiled	[CE]  'void'  type  not  allowed  here	48	None	replace
22	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_INT)  {  if(_parseNumericValue(NR_UNKNOWN)!=  0)  {  return  _numberBigDecimal;  }  [CE]  'void'  type  not  allowed  here  [FE]                    JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_numTypesValid  ==  NR_INT)  {  if(_parseNumericValue(NR_UNKNOWN)!=  0)  {  return  _numberBigDecimal;  }  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	replace	if(_numTypesValid  ==  NR_INT)  {  if(_parseNumericValue(NR_UNKNOWN)!=  0)  {  return  _numberBigDecimal;  }	  if(_numTypesValid    ==    NR_UNKNOWN)    {    if(_parseNumericValue(NR_UNKNOWN)!=    0)    {    return    _numberBigDecimal;    }    	non-compiled	[CE]  'void'  type  not  allowed  here	48	None	replace
23	[BUG]  [BUGGY]  if(_numTypesValid!=  NR_INT)  {  if(_parseNumericValue(NR_INT)!=  0)  {  return  _numberBigDecimal;  }  [CE]  'void'  type  not  allowed  here  [FE]                      JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_numTypesValid!=  NR_INT)  {  if(_parseNumericValue(NR_INT)!=  0)  {  return  _numberBigDecimal;  }  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	replace	if(_numTypesValid!=  NR_INT)  {  if(_parseNumericValue(NR_INT)!=  0)  {  return  _numberBigDecimal;  }	  if(_numTypesValid    ==    NR_UNKNOWN)    {    if(_parseNumericValue(NR_UNKNOWN)!=    0)    {    return    _numberBigDecimal;    }    	non-compiled	[CE]  'void'  type  not  allowed  here	48	None	replace
24	[BUG]  [BUGGY]  if(_numTypesValid  ==  JsonToken.VALUE_NUMBER_FLOAT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  [CE]  incomparable  types:  int  and  JsonToken  [FE]          JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_numTypesValid  ==  JsonToken.VALUE_NUMBER_FLOAT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	replace	if(_numTypesValid  ==  JsonToken.VALUE_NUMBER_FLOAT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    if(_numTypesValid    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    	non-compiled	[CE]  incomparable  types:  int  and  JsonToken	38	None	replace
25	[BUG]  [BUGGY]  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [CE]  ';'  expected  [FE]    RuntimeException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	replace	if(_currToken!=    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {	  	non-compiled	[CE]  ';'  expected	33	None	add
26	[BUG]  [BUGGY]  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [CE]  ';'  expected  [FE]      RuntimeException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	replace	if(_currToken!=    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {	  	non-compiled	[CE]  ';'  expected	33	None	add
27	[BUG]  [BUGGY]  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  if(_numTypesValid!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [CE]  ';'  expected  [FE]        RuntimeException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  if(_numTypesValid!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	replace	if(_currToken!=    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    if(_numTypesValid!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {	  	non-compiled	[CE]  ';'  expected	33	None	add
28	[BUG]  [BUGGY]  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken  >=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [CE]  ';'  expected  [FE]          RuntimeException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken  >=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	replace	if(_currToken!=    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    if(_currToken  >=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {	  	non-compiled	[CE]  ';'  expected	33	None	add
29	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _numTypesValid  ==  JsonToken.START_OBJECT)  {  [CE]  incomparable  types:  int  and  JsonToken  [FE]            JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _numTypesValid  ==  JsonToken.START_OBJECT)  {  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	replace	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _numTypesValid  ==  JsonToken.START_OBJECT)  {	  if(_numTypesValid    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.START_OBJECT)    {    	non-compiled	[CE]  incomparable  types:  int  and  JsonToken	59	None	replace
30	[BUG]  [BUGGY]  if(_numTypesValid  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.START_OBJECT)  {  [CE]  incomparable  types:  int  and  JsonToken  [FE]              JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_numTypesValid  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.START_OBJECT)  {  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	replace	if(_numTypesValid  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.START_OBJECT)  {	  if(_numTypesValid    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.START_OBJECT)    {    	non-compiled	[CE]  incomparable  types:  int  and  JsonToken	59	None	replace
31	[BUG]  [BUGGY]  if(_numTypesValid  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  [CE]  incomparable  types:  int  and  JsonToken  [FE]                JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_numTypesValid  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	replace	if(_numTypesValid  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_OBJECT)  {	  if(_numTypesValid    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.START_OBJECT)    {    	non-compiled	[CE]  incomparable  types:  int  and  JsonToken	59	None	replace
32	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.FIELD_NAME)  {  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	add	if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.FIELD_NAME)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken!=    JsonToken.FIELD_NAME)    {    	compilable	  [FE]  JsonParseException  	36	8	replace
33	[BUG]  [BUGGY]  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.FIELD_NAME)  {  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.FIELD_NAME)  {  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	replace	if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.FIELD_NAME)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken!=    JsonToken.FIELD_NAME)    {    	compilable	  [FE]  JsonParseException  	36	8	replace
34	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]        JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN)  {  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	add	if(_numTypesValid  ==  NR_UNKNOWN)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    	compilable	  [FE]  RuntimeException  	37	8	replace
35	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN)  {  [FE]  RuntimeException  [FE]        JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN)  {  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	replace	if(_numTypesValid  ==  NR_UNKNOWN)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    	compilable	  [FE]  RuntimeException  	37	8	replace
36	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_LONG)  {  if(_parseNumericValue(NR_INT)!=  0)  {  return  _numberBigInt;  }  [CE]  'void'  type  not  allowed  here  [FE]                      JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_numTypesValid  ==  NR_LONG)  {  if(_parseNumericValue(NR_INT)!=  0)  {  return  _numberBigInt;  }  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	replace	if(_numTypesValid  ==  NR_LONG)  {  if(_parseNumericValue(NR_INT)!=  0)  {  return  _numberBigInt;  }	  if(_numTypesValid    ==    NR_UNKNOWN)    {    if(_parseNumericValue(NR_INT)!=    0)    {    return    _numberBigInt;    }    	non-compiled	[CE]  'void'  type  not  allowed  here	69	None	replace
37	[BUG]  [BUGGY]  if(_numTypesValid!=  NR_UNKNOWN)  {  if(_parseNumericValue(NR_INT)!=  0)  {  return  _numberBigInt;  }  [CE]  'void'  type  not  allowed  here  [FE]                        JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_numTypesValid!=  NR_UNKNOWN)  {  if(_parseNumericValue(NR_INT)!=  0)  {  return  _numberBigInt;  }  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	replace	if(_numTypesValid!=  NR_UNKNOWN)  {  if(_parseNumericValue(NR_INT)!=  0)  {  return  _numberBigInt;  }	  if(_numTypesValid    ==    NR_UNKNOWN)    {    if(_parseNumericValue(NR_INT)!=    0)    {    return    _numberBigInt;    }    	non-compiled	[CE]  'void'  type  not  allowed  here	69	None	replace
38	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    JsonParseException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	add	if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {	  if(_currToken    ==    JsonToken.FIELD_NAME    ||    _currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    	compilable	  [FE]  RuntimeException  	57	8	replace
39	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [FE]  RuntimeException  [FE]    JsonParseException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	replace	if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {	  if(_currToken    ==    JsonToken.FIELD_NAME    ||    _currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    	compilable	  [FE]  RuntimeException  	57	8	replace
40	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  [CE]  ';'  expected  [FE]    JsonParseException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	replace	if(_currToken    ==    JsonToken.START_OBJECT    ||    _currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {	  	non-compiled	[CE]  ';'  expected	52	None	add
41	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_numTypesValid  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  [CE]  ';'  expected  [FE]      JsonParseException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_numTypesValid  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	replace	if(_currToken    ==    JsonToken.START_OBJECT    ||    _currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_numTypesValid  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {	  	non-compiled	[CE]  ';'  expected	52	None	add
42	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken!=  JsonToken.VALUE_NUMBER_INT)  {  [CE]  ';'  expected  [FE]        JsonParseException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken!=  JsonToken.VALUE_NUMBER_INT)  {  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	replace	if(_currToken    ==    JsonToken.START_OBJECT    ||    _currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken!=  JsonToken.VALUE_NUMBER_INT)  {	  	non-compiled	[CE]  ';'  expected	52	None	add
43	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_currToken  ==  JsonToken.END_OBJECT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  [CE]  ';'  expected  [FE]          JsonParseException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_currToken  ==  JsonToken.END_OBJECT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	replace	if(_currToken    ==    JsonToken.START_OBJECT    ||    _currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_currToken  ==  JsonToken.END_OBJECT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {	  	non-compiled	[CE]  ';'  expected	52	None	add
44	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    JsonParseException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	add	if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_OBJECT)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.END_OBJECT)    {    	compilable	  [FE]  RuntimeException  	16	8	replace
45	[BUG]  [BUGGY]  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  [FE]  RuntimeException  [FE]    JsonParseException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	replace	if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_OBJECT)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.END_OBJECT)    {    	compilable	  [FE]  RuntimeException  	16	8	replace
46	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  NR_INT)  {  return  _numberInt;  }  if(_numTypesValid  ==  NR_INT)  {  if(_numTypesValid  ==  NR_INT)  {  return  _numberInt;  }  [CE]  ';'  expected  [FE]    RuntimeException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  NR_INT)  {  return  _numberInt;  }  if(_numTypesValid  ==  NR_INT)  {  if(_numTypesValid  ==  NR_INT)  {  return  _numberInt;  }  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	replace	if(_numTypesValid    ==    NR_UNKNOWN)    {    if(_numTypesValid    ==    NR_INT)    {    return    _numberInt;    }    if(_numTypesValid  ==  NR_INT)  {  if(_numTypesValid  ==  NR_INT)  {  return  _numberInt;  }	  	non-compiled	[CE]  ';'  expected	67	None	add
47	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  NR_INT)  {  return  _numberInt;  }  if(_numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  NR_INT)  {  return  _numberInt;  }  [CE]  ';'  expected  [FE]      RuntimeException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  NR_INT)  {  return  _numberInt;  }  if(_numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  NR_INT)  {  return  _numberInt;  }  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	replace	if(_numTypesValid    ==    NR_UNKNOWN)    {    if(_numTypesValid    ==    NR_INT)    {    return    _numberInt;    }    if(_numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  NR_INT)  {  return  _numberInt;  }	  	non-compiled	[CE]  ';'  expected	67	None	add
48	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  NR_INT)  {  return  _numberInt;  }  if(_numTypesValid  ==  NR_INT)  {  return  _numberInt;  }  if((_numTypesValid  &  NR_INT)!=  0)  {  return  _numberInt;  }  [CE]  ';'  expected  [FE]        RuntimeException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  NR_INT)  {  return  _numberInt;  }  if(_numTypesValid  ==  NR_INT)  {  return  _numberInt;  }  if((_numTypesValid  &  NR_INT)!=  0)  {  return  _numberInt;  }  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	replace	if(_numTypesValid    ==    NR_UNKNOWN)    {    if(_numTypesValid    ==    NR_INT)    {    return    _numberInt;    }    if(_numTypesValid  ==  NR_INT)  {  return  _numberInt;  }  if((_numTypesValid  &  NR_INT)!=  0)  {  return  _numberInt;  }	  	non-compiled	[CE]  ';'  expected	67	None	add
49	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  NR_INT)  {  return  _numberInt;  }  if(_numTypesValid!=  NR_INT)  {  if(_numTypesValid  ==  NR_INT)  {  return  _numberInt;  }  [CE]  ';'  expected  [FE]          RuntimeException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  NR_INT)  {  return  _numberInt;  }  if(_numTypesValid!=  NR_INT)  {  if(_numTypesValid  ==  NR_INT)  {  return  _numberInt;  }  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	replace	if(_numTypesValid    ==    NR_UNKNOWN)    {    if(_numTypesValid    ==    NR_INT)    {    return    _numberInt;    }    if(_numTypesValid!=  NR_INT)  {  if(_numTypesValid  ==  NR_INT)  {  return  _numberInt;  }	  	non-compiled	[CE]  ';'  expected	67	None	add
50	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  NR_INT)  {  return  _numberInt;  }  if(_numTypesValid  ==  NR_LONG)  {  if(_numTypesValid  ==  NR_LONG)  {  return  _numberInt;  }  [CE]  ';'  expected  [FE]            RuntimeException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  NR_INT)  {  return  _numberInt;  }  if(_numTypesValid  ==  NR_LONG)  {  if(_numTypesValid  ==  NR_LONG)  {  return  _numberInt;  }  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	replace	if(_numTypesValid    ==    NR_UNKNOWN)    {    if(_numTypesValid    ==    NR_INT)    {    return    _numberInt;    }    if(_numTypesValid  ==  NR_LONG)  {  if(_numTypesValid  ==  NR_LONG)  {  return  _numberInt;  }	  	non-compiled	[CE]  ';'  expected	67	None	add
51	[BUG]  [BUGGY]  _parseNumericValue(NR_INT);  [CE]  illegal  start  of  type  [FE]                  JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  _parseNumericValue(NR_INT);  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	replace	_parseNumericValue(NR_INT);	  _parseNumericValue(NR_UNKNOWN);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
52	[BUG]  [BUGGY]  _parseNumericValue(NR_UNKNOWN,  value);  [CE]  illegal  start  of  type  [FE]                    JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  _parseNumericValue(NR_UNKNOWN,  value);  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	replace	_parseNumericValue(NR_UNKNOWN,  value);	  _parseNumericValue(NR_UNKNOWN);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
53	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_MINUS)  {  if(_parseNumericValue(NR_INT)!=  0)  {  return  _numberBigDecimal;  }  [CE]  cannot  find  symbol  NR_MINUS  [FE]                        JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_numTypesValid  ==  NR_MINUS)  {  if(_parseNumericValue(NR_INT)!=  0)  {  return  _numberBigDecimal;  }  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	replace	if(_numTypesValid  ==  NR_MINUS)  {  if(_parseNumericValue(NR_INT)!=  0)  {  return  _numberBigDecimal;  }	  if(_numTypesValid    ==    NR_UNKNOWN)    {    if(_parseNumericValue(NR_INT)!=    0)    {    return    _numberBigDecimal;    }    	non-compiled	[CE]  cannot  find  symbol  NR_MINUS	51	None	replace
54	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_INFINITY)  {  if(_parseNumericValue(NR_INT)!=  0)  {  return  _numberBigDecimal;  }  [CE]  cannot  find  symbol  NR_INFINITY  [FE]                          JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_numTypesValid  ==  NR_INFINITY)  {  if(_parseNumericValue(NR_INT)!=  0)  {  return  _numberBigDecimal;  }  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	replace	if(_numTypesValid  ==  NR_INFINITY)  {  if(_parseNumericValue(NR_INT)!=  0)  {  return  _numberBigDecimal;  }	  if(_numTypesValid    ==    NR_UNKNOWN)    {    if(_parseNumericValue(NR_INT)!=    0)    {    return    _numberBigDecimal;    }    	non-compiled	[CE]  cannot  find  symbol  NR_INFINITY	51	None	replace
55	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  [CE]  ';'  expected  [FE]    JsonParseException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.END_OBJECT)    {    if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_OBJECT)  {	  	non-compiled	[CE]  ';'  expected	15	None	add
56	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  if(_numTypesValid  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  [CE]  ';'  expected  [FE]      JsonParseException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  if(_numTypesValid  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.END_OBJECT)    {    if(_numTypesValid  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_OBJECT)  {	  	non-compiled	[CE]  ';'  expected	15	None	add
57	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.END_OBJECT)  {  [CE]  ';'  expected  [FE]        JsonParseException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.END_OBJECT)  {  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.END_OBJECT)    {    if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.END_OBJECT)  {	  	non-compiled	[CE]  ';'  expected	15	None	add
58	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  [CE]  ';'  expected  [FE]          JsonParseException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.END_OBJECT)    {    if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_OBJECT)  {	  	non-compiled	[CE]  ';'  expected	15	None	add
59	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_INT)  {  if(_parseNumericValue(NR_INT)!=  0)  {  return  _numberBigInt;  }  [CE]  'void'  type  not  allowed  here  [FE]                      JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_numTypesValid  ==  NR_INT)  {  if(_parseNumericValue(NR_INT)!=  0)  {  return  _numberBigInt;  }  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	replace	if(_numTypesValid  ==  NR_INT)  {  if(_parseNumericValue(NR_INT)!=  0)  {  return  _numberBigInt;  }	  if(_numTypesValid    ==    NR_UNKNOWN)    {    if(_parseNumericValue(NR_UNKNOWN)!=    0)    {    return    _numberBigInt;    }    	non-compiled	[CE]  'void'  type  not  allowed  here	50	None	replace
60	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_INT)  {  if(_parseNumericValue(NR_UNKNOWN)!=  0)  {  return  _numberBigInt;  }  [CE]  'void'  type  not  allowed  here  [FE]                        JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_numTypesValid  ==  NR_INT)  {  if(_parseNumericValue(NR_UNKNOWN)!=  0)  {  return  _numberBigInt;  }  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	replace	if(_numTypesValid  ==  NR_INT)  {  if(_parseNumericValue(NR_UNKNOWN)!=  0)  {  return  _numberBigInt;  }	  if(_numTypesValid    ==    NR_UNKNOWN)    {    if(_parseNumericValue(NR_UNKNOWN)!=    0)    {    return    _numberBigInt;    }    	non-compiled	[CE]  'void'  type  not  allowed  here	50	None	replace
61	[BUG]  [BUGGY]  if(_numTypesValid!=  NR_INT)  {  if(_parseNumericValue(NR_INT)!=  0)  {  return  _numberBigInt;  }  [CE]  'void'  type  not  allowed  here  [FE]                          JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_numTypesValid!=  NR_INT)  {  if(_parseNumericValue(NR_INT)!=  0)  {  return  _numberBigInt;  }  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	replace	if(_numTypesValid!=  NR_INT)  {  if(_parseNumericValue(NR_INT)!=  0)  {  return  _numberBigInt;  }	  if(_numTypesValid    ==    NR_UNKNOWN)    {    if(_parseNumericValue(NR_UNKNOWN)!=    0)    {    return    _numberBigInt;    }    	non-compiled	[CE]  'void'  type  not  allowed  here	50	None	replace
62	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.FIELD_NAME)  {  [CE]  ';'  expected  [FE]    JsonParseException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.FIELD_NAME)  {  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken!=    JsonToken.FIELD_NAME)    {    if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.FIELD_NAME)  {	  	non-compiled	[CE]  ';'  expected	35	None	add
63	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.FIELD_NAME)  {  if(_numTypesValid  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.FIELD_NAME)  {  [CE]  ';'  expected  [FE]      JsonParseException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.FIELD_NAME)  {  if(_numTypesValid  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.FIELD_NAME)  {  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken!=    JsonToken.FIELD_NAME)    {    if(_numTypesValid  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.FIELD_NAME)  {	  	non-compiled	[CE]  ';'  expected	35	None	add
64	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.FIELD_NAME)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.FIELD_NAME)  {  [CE]  ';'  expected  [FE]        JsonParseException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.FIELD_NAME)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.FIELD_NAME)  {  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken!=    JsonToken.FIELD_NAME)    {    if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.FIELD_NAME)  {	  	non-compiled	[CE]  ';'  expected	35	None	add
65	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [CE]  ';'  expected  [FE]          JsonParseException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken!=    JsonToken.FIELD_NAME)    {    if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {	  	non-compiled	[CE]  ';'  expected	35	None	add
66	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FUNCTION_NAME)  {  [CE]  cannot  find  symbol  FUNCTION_NAME  [FE]        JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FUNCTION_NAME)  {  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	replace	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FUNCTION_NAME)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    	non-compiled	[CE]  cannot  find  symbol  FUNCTION_NAME	29	None	replace
67	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    JsonParseException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	add	if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {	  if(_currToken    ==    JsonToken.START_OBJECT    ||    _currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    	compilable	  [FE]  RuntimeException  	53	8	replace
68	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [FE]  RuntimeException  [FE]    JsonParseException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	replace	if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {	  if(_currToken    ==    JsonToken.START_OBJECT    ||    _currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    	compilable	  [FE]  RuntimeException  	53	8	replace
69	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_currToken!=  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	add	if(_currToken!=  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {	  if(_currToken    ==    JsonToken.START_OBJECT    ||    _currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    	compilable	  [FE]  JsonParseException  	53	8	replace
70	[BUG]  [BUGGY]  if(_currToken!=  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_currToken!=  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	replace	if(_currToken!=  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {	  if(_currToken    ==    JsonToken.START_OBJECT    ||    _currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    	compilable	  [FE]  JsonParseException  	53	8	replace
71	[BUG]  [BUGGY]  if(_numTypesValid  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_ARRAY)  {  [CE]  incomparable  types:  int  and  JsonToken  [FE]          JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_numTypesValid  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_ARRAY)  {  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	replace	if(_numTypesValid  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_ARRAY)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.END_ARRAY)    {    if(_numTypesValid    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.END_ARRAY)    {    	non-compiled	[CE]  incomparable  types:  int  and  JsonToken	42	None	replace
72	[BUG]  [BUGGY]  if(_numTypesValid  ==  JsonToken.VALUE_NUMBER_INT  ||  _numTypesValid  ==  JsonToken.END_OBJECT)  {  [CE]  incomparable  types:  int  and  JsonToken  [FE]                JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_numTypesValid  ==  JsonToken.VALUE_NUMBER_INT  ||  _numTypesValid  ==  JsonToken.END_OBJECT)  {  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	replace	if(_numTypesValid  ==  JsonToken.VALUE_NUMBER_INT  ||  _numTypesValid  ==  JsonToken.END_OBJECT)  {	  if(_numTypesValid    ==    JsonToken.VALUE_NUMBER_INT    ||    _numTypesValid    ==    JsonToken.END_ARRAY)    {    	non-compiled	[CE]  incomparable  types:  int  and  JsonToken	62	None	replace
73	[BUG]  [BUGGY]  if(_numTypesValid  ==  JsonToken.VALUE_NUMBER_INT  ||  _numTypesValid  ==  JsonToken.START_ARRAY)  {  [CE]  incomparable  types:  int  and  JsonToken  [FE]                  JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_numTypesValid  ==  JsonToken.VALUE_NUMBER_INT  ||  _numTypesValid  ==  JsonToken.START_ARRAY)  {  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	replace	if(_numTypesValid  ==  JsonToken.VALUE_NUMBER_INT  ||  _numTypesValid  ==  JsonToken.START_ARRAY)  {	  if(_numTypesValid    ==    JsonToken.VALUE_NUMBER_INT    ||    _numTypesValid    ==    JsonToken.END_ARRAY)    {    	non-compiled	[CE]  incomparable  types:  int  and  JsonToken	62	None	replace
74	[BUG]  [BUGGY]  if(_numTypesValid  ==  JsonToken.VALUE_NUMBER_INT  ||  _numTypesValid!=  JsonToken.END_ARRAY)  {  [CE]  incomparable  types:  int  and  JsonToken  [FE]                    JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_numTypesValid  ==  JsonToken.VALUE_NUMBER_INT  ||  _numTypesValid!=  JsonToken.END_ARRAY)  {  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	replace	if(_numTypesValid  ==  JsonToken.VALUE_NUMBER_INT  ||  _numTypesValid!=  JsonToken.END_ARRAY)  {	  if(_numTypesValid    ==    JsonToken.VALUE_NUMBER_INT    ||    _numTypesValid    ==    JsonToken.END_ARRAY)    {    	non-compiled	[CE]  incomparable  types:  int  and  JsonToken	62	None	replace
75	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]              JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_FLOAT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	add	if(_currToken  ==  JsonToken.VALUE_NUMBER_FLOAT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    if(_currToken    ==    JsonToken.VALUE_NUMBER_FLOAT    ||    _currToken    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    	compilable	  [FE]  RuntimeException  	40	8	replace
76	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_FLOAT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [FE]  RuntimeException  [FE]              JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_FLOAT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	replace	if(_currToken  ==  JsonToken.VALUE_NUMBER_FLOAT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    if(_currToken    ==    JsonToken.VALUE_NUMBER_FLOAT    ||    _currToken    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    	compilable	  [FE]  RuntimeException  	40	8	replace
77	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  [CE]  ';'  expected  [FE]    JsonParseException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	replace	if(_currToken    ==    JsonToken.FIELD_NAME    ||    _currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {	  	non-compiled	[CE]  ';'  expected	56	None	add
78	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  [CE]  ';'  expected  [FE]      JsonParseException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	replace	if(_currToken    ==    JsonToken.FIELD_NAME    ||    _currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {	  	non-compiled	[CE]  ';'  expected	56	None	add
79	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_numTypesValid  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  [CE]  ';'  expected  [FE]        JsonParseException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_numTypesValid  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	replace	if(_currToken    ==    JsonToken.FIELD_NAME    ||    _currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_numTypesValid  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {	  	non-compiled	[CE]  ';'  expected	56	None	add
80	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [CE]  ';'  expected  [FE]          JsonParseException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	replace	if(_currToken    ==    JsonToken.FIELD_NAME    ||    _currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {	  	non-compiled	[CE]  ';'  expected	56	None	add
81	[BUG]  [BUGGY]  if(JsonToken.VALUE_NUMBER_INT  ==  _numTypesValid  ||  _numTypesValid  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [CE]  incomparable  types:  JsonToken  and  int  [FE]              JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(JsonToken.VALUE_NUMBER_INT  ==  _numTypesValid  ||  _numTypesValid  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	replace	if(JsonToken.VALUE_NUMBER_INT  ==  _numTypesValid  ||  _numTypesValid  ==  JsonToken.VALUE_NUMBER_FLOAT)  {	  if(_numTypesValid    ==    JsonToken.VALUE_NUMBER_FLOAT    ||    _numTypesValid    ==    JsonToken.VALUE_NUMBER_INT)    {    	non-compiled	[CE]  incomparable  types:  JsonToken  and  int	5	None	replace
82	[BUG]  [BUGGY]  if(_numTypesValid!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [CE]  incomparable  types:  int  and  JsonToken  [FE]              RuntimeException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_numTypesValid!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	replace	if(_numTypesValid!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {	  if(_currToken!=    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    if(_numTypesValid!=    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    	non-compiled	[CE]  incomparable  types:  int  and  JsonToken	28	None	replace
83	[BUG]  [BUGGY]  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.VALUE_NUMBER_FLOAT)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.VALUE_NUMBER_FLOAT)  {  [CE]  ';'  expected  [FE]    JsonParseException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.VALUE_NUMBER_FLOAT)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	replace	if(_currToken!=    JsonToken.VALUE_NUMBER_INT    ||    _currToken!=    JsonToken.VALUE_NUMBER_FLOAT)    {    if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.VALUE_NUMBER_FLOAT)  {	  	non-compiled	[CE]  ';'  expected	45	None	add
84	[BUG]  [BUGGY]  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.VALUE_NUMBER_FLOAT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.VALUE_NUMBER_FLOAT)  {  [CE]  ';'  expected  [FE]      JsonParseException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.VALUE_NUMBER_FLOAT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	replace	if(_currToken!=    JsonToken.VALUE_NUMBER_INT    ||    _currToken!=    JsonToken.VALUE_NUMBER_FLOAT)    {    if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.VALUE_NUMBER_FLOAT)  {	  	non-compiled	[CE]  ';'  expected	45	None	add
85	[BUG]  [BUGGY]  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.VALUE_NUMBER_FLOAT)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [CE]  ';'  expected  [FE]        JsonParseException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.VALUE_NUMBER_FLOAT)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	replace	if(_currToken!=    JsonToken.VALUE_NUMBER_INT    ||    _currToken!=    JsonToken.VALUE_NUMBER_FLOAT)    {    if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {	  	non-compiled	[CE]  ';'  expected	45	None	add
86	[BUG]  [BUGGY]  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.VALUE_NUMBER_FLOAT)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_FLOAT  ||  _currToken!=  JsonToken.VALUE_NUMBER_FLOAT)  {  [CE]  ';'  expected  [FE]          JsonParseException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.VALUE_NUMBER_FLOAT)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_FLOAT  ||  _currToken!=  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	replace	if(_currToken!=    JsonToken.VALUE_NUMBER_INT    ||    _currToken!=    JsonToken.VALUE_NUMBER_FLOAT)    {    if(_currToken!=  JsonToken.VALUE_NUMBER_FLOAT  ||  _currToken!=  JsonToken.VALUE_NUMBER_FLOAT)  {	  	non-compiled	[CE]  ';'  expected	45	None	add
87	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_numTypesValid  ==  NR_LONG)  {  if(_numTypesValid  ==  NR_INT)  {  return  _numberInt;  }  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	add	if(_numTypesValid  ==  NR_LONG)  {  if(_numTypesValid  ==  NR_INT)  {  return  _numberInt;  }	  if(_numTypesValid    ==    NR_UNKNOWN)    {    if(_numTypesValid    ==    NR_INT)    {    return    _numberInt;    }    	compilable	  [FE]  RuntimeException  	68	8	replace
88	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_LONG)  {  if(_numTypesValid  ==  NR_INT)  {  return  _numberInt;  }  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_numTypesValid  ==  NR_LONG)  {  if(_numTypesValid  ==  NR_INT)  {  return  _numberInt;  }  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	replace	if(_numTypesValid  ==  NR_LONG)  {  if(_numTypesValid  ==  NR_INT)  {  return  _numberInt;  }	  if(_numTypesValid    ==    NR_UNKNOWN)    {    if(_numTypesValid    ==    NR_INT)    {    return    _numberInt;    }    	compilable	  [FE]  RuntimeException  	68	8	replace
89	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN)  {  return  _numberInt;  }  [CE]  illegal  start  of  type  [FE]      RuntimeException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN)  {  return  _numberInt;  }  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	replace	if(_numTypesValid  ==  NR_UNKNOWN)  {  return  _numberInt;  }	  if(_numTypesValid    ==    NR_UNKNOWN)    {    if(_numTypesValid    ==    NR_INT)    {    return    _numberInt;    }    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
90	[BUG]  [BUGGY]  ||(_numTypesValid  &  NR_INT)!=  0)  {  return  _numberInt;  }  [CE]  illegal  start  of  expression  [FE]        RuntimeException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  ||(_numTypesValid  &  NR_INT)!=  0)  {  return  _numberInt;  }  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	replace	||(_numTypesValid  &  NR_INT)!=  0)  {  return  _numberInt;  }	  if(_numTypesValid    ==    NR_UNKNOWN)    {    if(_numTypesValid    ==    NR_INT)    {    return    _numberInt;    }    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
91	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_INT)  {  return  _numberInt;  }  [CE]  illegal  start  of  type  [FE]          RuntimeException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_numTypesValid  ==  NR_INT)  {  return  _numberInt;  }  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	replace	if(_numTypesValid  ==  NR_INT)  {  return  _numberInt;  }	  if(_numTypesValid    ==    NR_UNKNOWN)    {    if(_numTypesValid    ==    NR_INT)    {    return    _numberInt;    }    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
92	[BUG]  [BUGGY]  ||(_numTypesValid  ==  NR_UNKNOWN)&&(_numTypesValid  ==  NR_UNKNOWN))  {  _parseNumericValue(NR_UNKNOWN);  }  [CE]  illegal  start  of  expression  [FE]                    JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  ||(_numTypesValid  ==  NR_UNKNOWN)&&(_numTypesValid  ==  NR_UNKNOWN))  {  _parseNumericValue(NR_UNKNOWN);  }  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	replace	||(_numTypesValid  ==  NR_UNKNOWN)&&(_numTypesValid  ==  NR_UNKNOWN))  {  _parseNumericValue(NR_UNKNOWN);  }	  if(_numTypesValid    ==    NR_UNKNOWN)    {    _parseNumericValue(NR_UNKNOWN);    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
93	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_LONG)  {  if(_parseNumericValue(NR_INT)!=  0)  {  return  _numberInt;  }  [CE]  'void'  type  not  allowed  here  [FE]                  JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_numTypesValid  ==  NR_LONG)  {  if(_parseNumericValue(NR_INT)!=  0)  {  return  _numberInt;  }  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	replace	if(_numTypesValid  ==  NR_LONG)  {  if(_parseNumericValue(NR_INT)!=  0)  {  return  _numberInt;  }	  if(_numTypesValid    ==    NR_UNKNOWN)    {    if(_parseNumericValue(NR_INT)!=    0)    {    return    _numberInt;    }    	non-compiled	[CE]  'void'  type  not  allowed  here	66	None	replace
94	[BUG]  [BUGGY]  if(_numTypesValid!=  NR_UNKNOWN)  {  if(_parseNumericValue(NR_INT)!=  0)  {  return  _numberInt;  }  [CE]  'void'  type  not  allowed  here  [FE]                    JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_numTypesValid!=  NR_UNKNOWN)  {  if(_parseNumericValue(NR_INT)!=  0)  {  return  _numberInt;  }  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	replace	if(_numTypesValid!=  NR_UNKNOWN)  {  if(_parseNumericValue(NR_INT)!=  0)  {  return  _numberInt;  }	  if(_numTypesValid    ==    NR_UNKNOWN)    {    if(_parseNumericValue(NR_INT)!=    0)    {    return    _numberInt;    }    	non-compiled	[CE]  'void'  type  not  allowed  here	66	None	replace
95	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN)  {  if(_parseNumericValue(NR_INT)!=  0)  {  return  _numberLong;  }  [CE]  'void'  type  not  allowed  here  [FE]                      JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN)  {  if(_parseNumericValue(NR_INT)!=  0)  {  return  _numberLong;  }  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	replace	if(_numTypesValid  ==  NR_UNKNOWN)  {  if(_parseNumericValue(NR_INT)!=  0)  {  return  _numberLong;  }	  if(_numTypesValid    ==    NR_UNKNOWN)    {    if(_parseNumericValue(NR_INT)!=    0)    {    return    _numberInt;    }    	non-compiled	[CE]  'void'  type  not  allowed  here	66	None	replace
96	[BUG]  [BUGGY]  if(_numTypesValid  ==  JsonToken.START_OBJECT  ||  _numTypesValid  ==  JsonToken.VALUE_NUMBER_INT)  {  [CE]  incomparable  types:  int  and  JsonToken  [FE]              JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_numTypesValid  ==  JsonToken.START_OBJECT  ||  _numTypesValid  ==  JsonToken.VALUE_NUMBER_INT)  {  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	replace	if(_numTypesValid  ==  JsonToken.START_OBJECT  ||  _numTypesValid  ==  JsonToken.VALUE_NUMBER_INT)  {	  if(_numTypesValid    ==    JsonToken.VALUE_NUMBER_INT    ||    _numTypesValid    ==    JsonToken.START_OBJECT)    {    	non-compiled	[CE]  incomparable  types:  int  and  JsonToken	61	None	replace
97	[BUG]  [BUGGY]  if(_numTypesValid  ==  JsonToken.VALUE_NUMBER_INT  ||  _numTypesValid  ==  JsonToken.STRING)  {  [CE]  incomparable  types:  int  and  JsonToken  [FE]                JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_numTypesValid  ==  JsonToken.VALUE_NUMBER_INT  ||  _numTypesValid  ==  JsonToken.STRING)  {  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	replace	if(_numTypesValid  ==  JsonToken.VALUE_NUMBER_INT  ||  _numTypesValid  ==  JsonToken.STRING)  {	  if(_numTypesValid    ==    JsonToken.VALUE_NUMBER_INT    ||    _numTypesValid    ==    JsonToken.START_OBJECT)    {    	non-compiled	[CE]  incomparable  types:  int  and  JsonToken	61	None	replace
98	[BUG]  [BUGGY]  _parseNumericValue(NR_NUMBER,  value);  [CE]  illegal  start  of  type  [FE]                      JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  _parseNumericValue(NR_NUMBER,  value);  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	replace	_parseNumericValue(NR_NUMBER,  value);	  _parseNumericValue(NR_NUMBER);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
99	[BUG]  [BUGGY]  _parseNumericValue(NR_NUMBER  +  1);  [CE]  illegal  start  of  type  [FE]                        JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  _parseNumericValue(NR_NUMBER  +  1);  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	replace	_parseNumericValue(NR_NUMBER  +  1);	  _parseNumericValue(NR_NUMBER);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
100	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.END_OBJECT)  {  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	add	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.END_OBJECT)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.END_OBJECT)    {    	compilable	  [FE]  JsonParseException  	16	8	replace
101	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.END_OBJECT)  {  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.END_OBJECT)  {  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	replace	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.END_OBJECT)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.END_OBJECT)    {    	compilable	  [FE]  JsonParseException  	16	8	replace
102	[BUG]  [BUGGY]  if(_parseNumericValue(NR_INT)!=  0)  {  return  _numberBigInt;  }  [CE]  illegal  start  of  type  [FE]                      JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_parseNumericValue(NR_INT)!=  0)  {  return  _numberBigInt;  }  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	replace	if(_parseNumericValue(NR_INT)!=  0)  {  return  _numberBigInt;  }	  if(_numTypesValid    ==    NR_UNKNOWN)    {    if(_parseNumericValue(NR_INT)!=    0)    {    return    _numberBigInt;    }    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
103	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]            JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME)  {  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	add	if(_currToken  ==  JsonToken.FIELD_NAME)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken!=    JsonToken.FIELD_NAME)    {    	compilable	  [FE]  RuntimeException  	31	8	replace
104	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME)  {  [FE]  RuntimeException  [FE]            JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME)  {  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	replace	if(_currToken  ==  JsonToken.FIELD_NAME)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken!=    JsonToken.FIELD_NAME)    {    	compilable	  [FE]  RuntimeException  	31	8	replace
105	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_INTEGER)  {  if(_parseNumericValue(NR_INT)!=  0)  {  return  _numberBigDecimal;  }  [CE]  cannot  find  symbol  NR_INTEGER  [FE]                        JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_numTypesValid  ==  NR_INTEGER)  {  if(_parseNumericValue(NR_INT)!=  0)  {  return  _numberBigDecimal;  }  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	replace	if(_numTypesValid  ==  NR_INTEGER)  {  if(_parseNumericValue(NR_INT)!=  0)  {  return  _numberBigDecimal;  }	  if(_numTypesValid    ==    NR_UNKNOWN)    {    if(_parseNumericValue(NR_INT)!=    0)    {    return    _numberBigDecimal;    }    	non-compiled	[CE]  cannot  find  symbol  NR_INTEGER	51	None	replace
106	[BUG]  [BUGGY]  if(_numTypesValid!=  NR_UNKNOWN)  {  if(_parseNumericValue(NR_INT)!=  0)  {  return  _numberBigDecimal;  }  [CE]  'void'  type  not  allowed  here  [FE]                          JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_numTypesValid!=  NR_UNKNOWN)  {  if(_parseNumericValue(NR_INT)!=  0)  {  return  _numberBigDecimal;  }  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	replace	if(_numTypesValid!=  NR_UNKNOWN)  {  if(_parseNumericValue(NR_INT)!=  0)  {  return  _numberBigDecimal;  }	  if(_numTypesValid    ==    NR_UNKNOWN)    {    if(_parseNumericValue(NR_INT)!=    0)    {    return    _numberBigDecimal;    }    	non-compiled	[CE]  'void'  type  not  allowed  here	51	None	replace
107	[BUG]  [BUGGY]  if(_numTypesValid  ==  JsonToken.VALUE_NUMBER_INT  ||  _numTypesValid  ==  JsonToken.FIELD_NAME)  {  [CE]  incomparable  types:  int  and  JsonToken  [FE]        JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_numTypesValid  ==  JsonToken.VALUE_NUMBER_INT  ||  _numTypesValid  ==  JsonToken.FIELD_NAME)  {  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	replace	if(_numTypesValid  ==  JsonToken.VALUE_NUMBER_INT  ||  _numTypesValid  ==  JsonToken.FIELD_NAME)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    If(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    	non-compiled	[CE]  incomparable  types:  int  and  JsonToken	58	None	replace
108	[BUG]  [BUGGY]  if(_parseNumericValue(NR_INT)!=  0)  {  return  _numberInt;  }  [CE]  illegal  start  of  type  [FE]                  JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_parseNumericValue(NR_INT)!=  0)  {  return  _numberInt;  }  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	replace	if(_parseNumericValue(NR_INT)!=  0)  {  return  _numberInt;  }	  if(_numTypesValid    ==    NR_UNKNOWN)    {    if(_parseNumericValue(NR_INT)!=    0)    {    return    _numberInt;    }    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
109	[BUG]  [BUGGY]  if(_numTypesValid!=  NR_UNKNOWN)  {  if(_parseNumericValue(NR_UNKNOWN)!=  0)  {  return  _numberBigInt;  }  [CE]  'void'  type  not  allowed  here  [FE]                      JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_numTypesValid!=  NR_UNKNOWN)  {  if(_parseNumericValue(NR_UNKNOWN)!=  0)  {  return  _numberBigInt;  }  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	replace	if(_numTypesValid!=  NR_UNKNOWN)  {  if(_parseNumericValue(NR_UNKNOWN)!=  0)  {  return  _numberBigInt;  }	  if(_numTypesValid    ==    NR_UNKNOWN)    {    if(_parseNumericValue(NR_UNKNOWN)!=    0)    {    return    _numberBigInt;    }    	non-compiled	[CE]  'void'  type  not  allowed  here	50	None	replace
110	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken!=  JsonToken.VALUE_NUMBER_INT)  {  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	add	if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken!=  JsonToken.VALUE_NUMBER_INT)  {	  if(_currToken!=    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.START_OBJECT)    {    	compilable	  [FE]  RuntimeException  	20	8	replace
111	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken!=  JsonToken.VALUE_NUMBER_INT)  {  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken!=  JsonToken.VALUE_NUMBER_INT)  {  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	replace	if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken!=  JsonToken.VALUE_NUMBER_INT)  {	  if(_currToken!=    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.START_OBJECT)    {    	compilable	  [FE]  RuntimeException  	20	8	replace
112	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]      RuntimeException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_currToken!=  JsonToken.START_OBJECT  ||  _currToken!=  JsonToken.VALUE_NUMBER_INT)  {  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	add	if(_currToken!=  JsonToken.START_OBJECT  ||  _currToken!=  JsonToken.VALUE_NUMBER_INT)  {	  if(_currToken!=    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.START_OBJECT)    {    	compilable	  [FE]  JsonParseException  	20	8	replace
113	[BUG]  [BUGGY]  if(_currToken!=  JsonToken.START_OBJECT  ||  _currToken!=  JsonToken.VALUE_NUMBER_INT)  {  [FE]  JsonParseException  [FE]      RuntimeException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_currToken!=  JsonToken.START_OBJECT  ||  _currToken!=  JsonToken.VALUE_NUMBER_INT)  {  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	replace	if(_currToken!=  JsonToken.START_OBJECT  ||  _currToken!=  JsonToken.VALUE_NUMBER_INT)  {	  if(_currToken!=    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.START_OBJECT)    {    	compilable	  [FE]  JsonParseException  	20	8	replace
114	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.FIELD_NAME)  {  If(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.FIELD_NAME)  {  [CE]  ';'  expected  [FE]    JsonParseException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.FIELD_NAME)  {  If(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.FIELD_NAME)  {  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken!=    JsonToken.FIELD_NAME)    {    If(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.FIELD_NAME)  {	  	non-compiled	[CE]  ';'  expected	35	None	add
115	[BUG]  [BUGGY]  if(_numTypesValid  ==  JsonToken.VALUE_NUMBER_INT)  {  [CE]  incomparable  types:  int  and  JsonToken  [FE]              RuntimeException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_numTypesValid  ==  JsonToken.VALUE_NUMBER_INT)  {  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	replace	if(_numTypesValid  ==  JsonToken.VALUE_NUMBER_INT)  {	  if(_currToken!=    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    if(_numTypesValid!=    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    	non-compiled	[CE]  incomparable  types:  int  and  JsonToken	28	None	replace
116	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_currToken!=  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  [CE]  ';'  expected  [FE]    JsonParseException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_currToken!=  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	replace	if(_currToken    ==    JsonToken.START_OBJECT    ||    _currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_currToken!=  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {	  	non-compiled	[CE]  ';'  expected	52	None	add
117	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]              JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.START_OBJECT)  {  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	add	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.START_OBJECT)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.START_OBJECT)    {    if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken!=    JsonToken.START_OBJECT)    {    	compilable	  [FE]  JsonParseException  	4	8	replace
118	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.START_OBJECT)  {  [FE]  JsonParseException  [FE]              JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.START_OBJECT)  {  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	replace	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.START_OBJECT)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.START_OBJECT)    {    if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken!=    JsonToken.START_OBJECT)    {    	compilable	  [FE]  JsonParseException  	4	8	replace
119	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  NR_INT)  {  return  _numberInt;  }  if(_numTypesValid  ==  NR_INTEGER)  {  if(_numTypesValid  ==  NR_INT)  {  return  _numberInt;  }  [CE]  ';'  expected  [FE]    RuntimeException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  NR_INT)  {  return  _numberInt;  }  if(_numTypesValid  ==  NR_INTEGER)  {  if(_numTypesValid  ==  NR_INT)  {  return  _numberInt;  }  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	replace	if(_numTypesValid    ==    NR_UNKNOWN)    {    if(_numTypesValid    ==    NR_INT)    {    return    _numberInt;    }    if(_numTypesValid  ==  NR_INTEGER)  {  if(_numTypesValid  ==  NR_INT)  {  return  _numberInt;  }	  	non-compiled	[CE]  ';'  expected	67	None	add
120	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  NR_INT)  {  return  _numberInt;  }  if(_numTypesValid  ==  NR_INT)  {  return  _numberInt;  }  [CE]  ';'  expected  [FE]      RuntimeException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  NR_INT)  {  return  _numberInt;  }  if(_numTypesValid  ==  NR_INT)  {  return  _numberInt;  }  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	replace	if(_numTypesValid    ==    NR_UNKNOWN)    {    if(_numTypesValid    ==    NR_INT)    {    return    _numberInt;    }    if(_numTypesValid  ==  NR_INT)  {  return  _numberInt;  }	  	non-compiled	[CE]  ';'  expected	67	None	add
121	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    JsonParseException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	add	if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {	  if(_currToken    ==    JsonToken.FIELD_NAME    ||    _currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    	compilable	  [FE]  RuntimeException  	57	8	replace
122	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [FE]  RuntimeException  [FE]    JsonParseException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	replace	if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {	  if(_currToken    ==    JsonToken.FIELD_NAME    ||    _currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    	compilable	  [FE]  RuntimeException  	57	8	replace
123	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN  ||  _numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  }  [CE]  illegal  start  of  type  [FE]                    JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN  ||  _numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  }  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	replace	if(_numTypesValid  ==  NR_UNKNOWN  ||  _numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  }	  if(_numTypesValid    ==    NR_UNKNOWN)    {    _parseNumericValue(NR_UNKNOWN);    }    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
124	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_FLOAT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_BIGINT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  [CE]  ';'  expected  [FE]    JsonParseException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_FLOAT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_BIGINT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_FLOAT    ||    _currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_currToken  ==  JsonToken.VALUE_NUMBER_BIGINT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {	  	non-compiled	[CE]  ';'  expected	13	None	add
125	[BUG]  [BUGGY]  if(_numTypesValid  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  [CE]  incomparable  types:  int  and  JsonToken  [FE]            JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_numTypesValid  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	replace	if(_numTypesValid  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {	  if(_numTypesValid    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.START_OBJECT)    {    	non-compiled	[CE]  incomparable  types:  int  and  JsonToken	59	None	replace
126	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_currToken  ==  JsonToken.START_NAME  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  [CE]  ';'  expected  [FE]    JsonParseException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_currToken  ==  JsonToken.START_NAME  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	replace	if(_currToken    ==    JsonToken.FIELD_NAME    ||    _currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_currToken  ==  JsonToken.START_NAME  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {	  	non-compiled	[CE]  ';'  expected	56	None	add
127	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    RuntimeException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_numTypesValid!=  NR_UNKNOWN)  {  if(_numTypesValid  ==  NR_INT)  {  return  _numberInt;  }  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	add	if(_numTypesValid!=  NR_UNKNOWN)  {  if(_numTypesValid  ==  NR_INT)  {  return  _numberInt;  }	  if(_numTypesValid    ==    NR_UNKNOWN)    {    if(_numTypesValid    ==    NR_INT)    {    return    _numberInt;    }    	compilable	  [FE]  JsonParseException  	68	8	replace
128	[BUG]  [BUGGY]  if(_numTypesValid!=  NR_UNKNOWN)  {  if(_numTypesValid  ==  NR_INT)  {  return  _numberInt;  }  [FE]  JsonParseException  [FE]    RuntimeException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_numTypesValid!=  NR_UNKNOWN)  {  if(_numTypesValid  ==  NR_INT)  {  return  _numberInt;  }  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	replace	if(_numTypesValid!=  NR_UNKNOWN)  {  if(_numTypesValid  ==  NR_INT)  {  return  _numberInt;  }	  if(_numTypesValid    ==    NR_UNKNOWN)    {    if(_numTypesValid    ==    NR_INT)    {    return    _numberInt;    }    	compilable	  [FE]  JsonParseException  	68	8	replace
129	[BUG]  [BUGGY]  if(_numTypesValid!=  NR_INT)  {  return  _numberInt;  }  [CE]  illegal  start  of  type  [FE]      RuntimeException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_numTypesValid!=  NR_INT)  {  return  _numberInt;  }  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	replace	if(_numTypesValid!=  NR_INT)  {  return  _numberInt;  }	  if(_numTypesValid    ==    NR_UNKNOWN)    {    if(_numTypesValid    ==    NR_INT)    {    return    _numberInt;    }    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
130	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_ARRAY)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.START_ARRAY)  {  [CE]  ';'  expected  [FE]    JsonParseException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_ARRAY)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.START_ARRAY)  {  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.START_ARRAY)    {    if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.START_ARRAY)  {	  	non-compiled	[CE]  ';'  expected	17	None	add
131	[BUG]  [BUGGY]  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  If(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [CE]  ';'  expected  [FE]    RuntimeException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  If(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	replace	if(_currToken!=    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    If(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {	  	non-compiled	[CE]  ';'  expected	33	None	add
132	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_INTEGER)  {  if(_parseNumericValue(NR_INTEGER)!=  0)  {  return  _numberBigDecimal;  }  [CE]  cannot  find  symbol  NR_INTEGER  [FE]                  JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_numTypesValid  ==  NR_INTEGER)  {  if(_parseNumericValue(NR_INTEGER)!=  0)  {  return  _numberBigDecimal;  }  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	replace	if(_numTypesValid  ==  NR_INTEGER)  {  if(_parseNumericValue(NR_INTEGER)!=  0)  {  return  _numberBigDecimal;  }	  if(_numTypesValid    ==    NR_UNKNOWN)    {    if(_parseNumericValue(NR_UNKNOWN)!=    0)    {    return    _numberBigDecimal;    }    	non-compiled	[CE]  cannot  find  symbol  NR_INTEGER	48	None	replace
133	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]            JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.START_OBJECT)  {  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	add	if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.START_OBJECT)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken!=    JsonToken.VALUE_NUMBER_FLOAT)    {    if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    	compilable	  [FE]  RuntimeException  	23	8	replace
134	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.START_OBJECT)  {  [FE]  RuntimeException  [FE]            JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.START_OBJECT)  {  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	replace	if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.START_OBJECT)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken!=    JsonToken.VALUE_NUMBER_FLOAT)    {    if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    	compilable	  [FE]  RuntimeException  	23	8	replace
135	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]              JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.END_ARRAY)  {  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	add	if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.END_ARRAY)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.END_ARRAY)    {    if(_currToken!=    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.END_ARRAY)    {    	compilable	  [FE]  RuntimeException  	44	8	replace
136	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.END_ARRAY)  {  [FE]  RuntimeException  [FE]              JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.END_ARRAY)  {  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	replace	if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.END_ARRAY)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.END_ARRAY)    {    if(_currToken!=    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.END_ARRAY)    {    	compilable	  [FE]  RuntimeException  	44	8	replace
137	[BUG]  [BUGGY]  if(_numTypesValid  ==  JsonToken.VALUE_NUMBER_FLOAT  ||  _numTypesValid  ==  JsonToken.START_OBJECT)  {  [CE]  incomparable  types:  int  and  JsonToken  [FE]              JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_numTypesValid  ==  JsonToken.VALUE_NUMBER_FLOAT  ||  _numTypesValid  ==  JsonToken.START_OBJECT)  {  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	replace	if(_numTypesValid  ==  JsonToken.VALUE_NUMBER_FLOAT  ||  _numTypesValid  ==  JsonToken.START_OBJECT)  {	  if(_numTypesValid    ==    JsonToken.VALUE_NUMBER_FLOAT    ||    _numTypesValid    ==    JsonToken.VALUE_NUMBER_INT)    {    	non-compiled	[CE]  incomparable  types:  int  and  JsonToken	5	None	replace
138	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]            JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.END_ARRAY)  {  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	add	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.END_ARRAY)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.END_ARRAY)    {    if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken!=    JsonToken.END_ARRAY)    {    	compilable	  [FE]  JsonParseException  	43	8	replace
139	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.END_ARRAY)  {  [FE]  JsonParseException  [FE]            JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.END_ARRAY)  {  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	replace	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.END_ARRAY)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.END_ARRAY)    {    if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken!=    JsonToken.END_ARRAY)    {    	compilable	  [FE]  JsonParseException  	43	8	replace
140	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  If(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  [CE]  ';'  expected  [FE]    JsonParseException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  If(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.END_OBJECT)    {    If(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_OBJECT)  {	  	non-compiled	[CE]  ';'  expected	15	None	add
141	[BUG]  [BUGGY]  _parseNumericValue(NR_INTEGER);  [CE]  illegal  start  of  type  [FE]                  JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  _parseNumericValue(NR_INTEGER);  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	replace	_parseNumericValue(NR_INTEGER);	  _parseNumericValue(NR_UNKNOWN);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
142	[BUG]  [BUGGY]  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_OBJECT)  {  if(_currToken  >=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_OBJECT)  {  [CE]  ';'  expected  [FE]    RuntimeException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_OBJECT)  {  if(_currToken  >=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_OBJECT)  {  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	replace	if(_currToken!=    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.START_OBJECT)    {    if(_currToken  >=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_OBJECT)  {	  	non-compiled	[CE]  ';'  expected	19	None	add
143	[BUG]  [BUGGY]  if((  _numTypesValid  &  NR_INT)!=  0)  {  return  _numberBigInt;  }  [CE]  illegal  start  of  type  [FE]                      JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if((  _numTypesValid  &  NR_INT)!=  0)  {  return  _numberBigInt;  }  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	replace	if((  _numTypesValid  &  NR_INT)!=  0)  {  return  _numberBigInt;  }	  if(_numTypesValid    ==    NR_UNKNOWN)    {    if(_parseNumericValue(NR_UNKNOWN)!=    0)    {    return    _numberBigInt;    }    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
144	[BUG]  [BUGGY]  if(_numTypesValid  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_NAME)  {  [CE]  incomparable  types:  int  and  JsonToken  [FE]              JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_numTypesValid  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_NAME)  {  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	replace	if(_numTypesValid  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_NAME)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    if(_currToken!=    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    	non-compiled	[CE]  incomparable  types:  int  and  JsonToken	32	None	replace
145	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_NAME)  {  [CE]  cannot  find  symbol  VALUE_NUMBER_NAME  [FE]                JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_NAME)  {  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	replace	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_NAME)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    if(_currToken!=    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_NAME	32	None	replace
146	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_INTEGER)  {  if(_parseNumericValue(NR_INT)!=  0)  {  return  _numberBigInt;  }  [CE]  cannot  find  symbol  NR_INTEGER  [FE]                      JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_numTypesValid  ==  NR_INTEGER)  {  if(_parseNumericValue(NR_INT)!=  0)  {  return  _numberBigInt;  }  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	replace	if(_numTypesValid  ==  NR_INTEGER)  {  if(_parseNumericValue(NR_INT)!=  0)  {  return  _numberBigInt;  }	  if(_numTypesValid    ==    NR_UNKNOWN)    {    if(_parseNumericValue(NR_INT)!=    0)    {    return    _numberBigInt;    }    	non-compiled	[CE]  cannot  find  symbol  NR_INTEGER	69	None	replace
147	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_FLOAT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [CE]  ';'  expected  [FE]    JsonParseException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_FLOAT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_FLOAT    ||    _currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {	  	non-compiled	[CE]  ';'  expected	13	None	add
148	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_FLOAT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INTEGER  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  [CE]  ';'  expected  [FE]      JsonParseException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_FLOAT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INTEGER  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_FLOAT    ||    _currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_currToken  ==  JsonToken.VALUE_NUMBER_INTEGER  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {	  	non-compiled	[CE]  ';'  expected	13	None	add
149	[BUG]  [BUGGY]  _parseNumericValue(NR_BIGDECIMAL);  [CE]  illegal  start  of  type  [FE]                  JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  _parseNumericValue(NR_BIGDECIMAL);  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	replace	_parseNumericValue(NR_BIGDECIMAL);	  _parseNumericValue(NR_UNKNOWN);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
150	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  >=  JsonToken.FIELD_NAME)  {  [CE]  ';'  expected  [FE]    JsonParseException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  >=  JsonToken.FIELD_NAME)  {  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken!=    JsonToken.FIELD_NAME)    {    if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  >=  JsonToken.FIELD_NAME)  {	  	non-compiled	[CE]  ';'  expected	35	None	add
151	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_NUMBER)  {  _parseNumericValue(NR_NUMBER);  }  [CE]  illegal  start  of  type  [FE]                      JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_numTypesValid  ==  NR_NUMBER)  {  _parseNumericValue(NR_NUMBER);  }  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	replace	if(_numTypesValid  ==  NR_NUMBER)  {  _parseNumericValue(NR_NUMBER);  }	  _parseNumericValue(NR_NUMBER);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
152	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_NUMBER);  }  [CE]  illegal  start  of  type  [FE]                        JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_NUMBER);  }  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	replace	if(_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_NUMBER);  }	  _parseNumericValue(NR_NUMBER);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
153	[BUG]  [BUGGY]  if(_numTypesValid!=  JsonToken.VALUE_NUMBER_INT  ||  _numTypesValid  ==  JsonToken.END_ARRAY)  {  [CE]  incomparable  types:  int  and  JsonToken  [FE]                JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_numTypesValid!=  JsonToken.VALUE_NUMBER_INT  ||  _numTypesValid  ==  JsonToken.END_ARRAY)  {  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	replace	if(_numTypesValid!=  JsonToken.VALUE_NUMBER_INT  ||  _numTypesValid  ==  JsonToken.END_ARRAY)  {	  if(_numTypesValid    ==    JsonToken.VALUE_NUMBER_INT    ||    _numTypesValid    ==    JsonToken.END_ARRAY)    {    	non-compiled	[CE]  incomparable  types:  int  and  JsonToken	62	None	replace
154	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_ARRAY)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_ARRAY)  {  [CE]  ';'  expected  [FE]    JsonParseException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_ARRAY)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_ARRAY)  {  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.START_ARRAY)    {    if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_ARRAY)  {	  	non-compiled	[CE]  ';'  expected	17	None	add
155	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_INT)  {  _parseNumericValue(NR_INT);  }  [CE]  illegal  start  of  type  [FE]                    JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_numTypesValid  ==  NR_INT)  {  _parseNumericValue(NR_INT);  }  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	replace	if(_numTypesValid  ==  NR_INT)  {  _parseNumericValue(NR_INT);  }	  if(_numTypesValid    ==    NR_UNKNOWN)    {    _parseNumericValue(NR_UNKNOWN);    }    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
156	[BUG]  [BUGGY]  if((  _numTypesValid  &  NR_INT)!=  0)  {  return  _numberInt;  }  [CE]  illegal  start  of  type  [FE]    RuntimeException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if((  _numTypesValid  &  NR_INT)!=  0)  {  return  _numberInt;  }  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	replace	if((  _numTypesValid  &  NR_INT)!=  0)  {  return  _numberInt;  }	  if(_numTypesValid    ==    NR_UNKNOWN)    {    if(_numTypesValid    ==    NR_INT)    {    return    _numberInt;    }    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
157	[BUG]  [BUGGY]  if((  _numTypesValid  &  NR_INT)!=  0)  {  return  _numberBigDecimal;  }  [CE]  illegal  start  of  type  [FE]                        JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if((  _numTypesValid  &  NR_INT)!=  0)  {  return  _numberBigDecimal;  }  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	replace	if((  _numTypesValid  &  NR_INT)!=  0)  {  return  _numberBigDecimal;  }	  if(_numTypesValid    ==    NR_UNKNOWN)    {    if(_parseNumericValue(NR_INT)!=    0)    {    return    _numberBigDecimal;    }    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
158	[BUG]  [BUGGY]  if(_parseNumericValue(NR_INT)!=  0)  {  return  _numberBigDecimal;  }  [CE]  illegal  start  of  type  [FE]                          JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_parseNumericValue(NR_INT)!=  0)  {  return  _numberBigDecimal;  }  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	replace	if(_parseNumericValue(NR_INT)!=  0)  {  return  _numberBigDecimal;  }	  if(_numTypesValid    ==    NR_UNKNOWN)    {    if(_parseNumericValue(NR_INT)!=    0)    {    return    _numberBigDecimal;    }    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
159	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_currToken  ==  JsonToken.START_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  [CE]  ';'  expected  [FE]    JsonParseException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_currToken  ==  JsonToken.START_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	replace	if(_currToken    ==    JsonToken.START_OBJECT    ||    _currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_currToken  ==  JsonToken.START_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {	  	non-compiled	[CE]  ';'  expected	52	None	add
160	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_INFINITY)  {  if(_parseNumericValue(NR_INFINITY)!=  0)  {  return  _numberBigDecimal;  }  [CE]  cannot  find  symbol  NR_INFINITY  [FE]                  JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_numTypesValid  ==  NR_INFINITY)  {  if(_parseNumericValue(NR_INFINITY)!=  0)  {  return  _numberBigDecimal;  }  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	replace	if(_numTypesValid  ==  NR_INFINITY)  {  if(_parseNumericValue(NR_INFINITY)!=  0)  {  return  _numberBigDecimal;  }	  if(_numTypesValid    ==    NR_UNKNOWN)    {    if(_parseNumericValue(NR_UNKNOWN)!=    0)    {    return    _numberBigDecimal;    }    	non-compiled	[CE]  cannot  find  symbol  NR_INFINITY	48	None	replace
161	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  NR_INT)  {  return  _numberInt;  }  if(_numTypesValid!=  NR_UNKNOWN)  {  if(_numTypesValid  ==  NR_INT)  {  return  _numberInt;  }  [CE]  ';'  expected  [FE]    RuntimeException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  NR_INT)  {  return  _numberInt;  }  if(_numTypesValid!=  NR_UNKNOWN)  {  if(_numTypesValid  ==  NR_INT)  {  return  _numberInt;  }  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	replace	if(_numTypesValid    ==    NR_UNKNOWN)    {    if(_numTypesValid    ==    NR_INT)    {    return    _numberInt;    }    if(_numTypesValid!=  NR_UNKNOWN)  {  if(_numTypesValid  ==  NR_INT)  {  return  _numberInt;  }	  	non-compiled	[CE]  ';'  expected	67	None	add
162	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  NR_INT)  {  return  _numberInt;  }  if((  _numTypesValid  &  NR_INT)!=  0)  {  return  _numberInt;  }  if((  _numTypesValid  &  NR_INT)!=  0)  {  return  _numberInt;  }  [CE]  ';'  expected  [FE]      RuntimeException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  NR_INT)  {  return  _numberInt;  }  if((  _numTypesValid  &  NR_INT)!=  0)  {  return  _numberInt;  }  if((  _numTypesValid  &  NR_INT)!=  0)  {  return  _numberInt;  }  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	replace	if(_numTypesValid    ==    NR_UNKNOWN)    {    if(_numTypesValid    ==    NR_INT)    {    return    _numberInt;    }    if((  _numTypesValid  &  NR_INT)!=  0)  {  return  _numberInt;  }  if((  _numTypesValid  &  NR_INT)!=  0)  {  return  _numberInt;  }	  	non-compiled	[CE]  ';'  expected	67	None	add
163	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    JsonParseException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_ARRAY)  {  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	add	if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_ARRAY)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.START_ARRAY)    {    	compilable	  [FE]  RuntimeException  	18	8	replace
164	[BUG]  [BUGGY]  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_ARRAY)  {  [FE]  RuntimeException  [FE]    JsonParseException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_ARRAY)  {  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	replace	if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_ARRAY)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.START_ARRAY)    {    	compilable	  [FE]  RuntimeException  	18	8	replace
165	[BUG]  [BUGGY]  if(_numTypesValid!=  JsonToken.VALUE_NUMBER_INT  ||  _numTypesValid  ==  JsonToken.START_OBJECT)  {  [CE]  incomparable  types:  int  and  JsonToken  [FE]              JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_numTypesValid!=  JsonToken.VALUE_NUMBER_INT  ||  _numTypesValid  ==  JsonToken.START_OBJECT)  {  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	replace	if(_numTypesValid!=  JsonToken.VALUE_NUMBER_INT  ||  _numTypesValid  ==  JsonToken.START_OBJECT)  {	  if(_numTypesValid    ==    JsonToken.VALUE_NUMBER_INT    ||    _numTypesValid    ==    JsonToken.START_OBJECT)    {    	non-compiled	[CE]  incomparable  types:  int  and  JsonToken	61	None	replace
166	[BUG]  [BUGGY]  if(_numTypesValid  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.VALUE_NUMBER_NAME)  {  [CE]  incomparable  types:  int  and  JsonToken  [FE]            JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_numTypesValid  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.VALUE_NUMBER_NAME)  {  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	replace	if(_numTypesValid  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.VALUE_NUMBER_NAME)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken!=    JsonToken.FIELD_NAME)    {    	non-compiled	[CE]  incomparable  types:  int  and  JsonToken	31	None	replace
167	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  &&  _currToken  ==  JsonToken.START_OBJECT)  {  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	add	if(_currToken!=  JsonToken.VALUE_NUMBER_INT  &&  _currToken  ==  JsonToken.START_OBJECT)  {	  if(_currToken!=    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.START_OBJECT)    {    	compilable	  [FE]  RuntimeException  	20	8	replace
168	[BUG]  [BUGGY]  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  &&  _currToken  ==  JsonToken.START_OBJECT)  {  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }        [BUGGY]  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  &&  _currToken  ==  JsonToken.START_OBJECT)  {  [BUGGY]      if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	587	587	8	replace	if(_currToken!=  JsonToken.VALUE_NUMBER_INT  &&  _currToken  ==  JsonToken.START_OBJECT)  {	  if(_currToken!=    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.START_OBJECT)    {    	compilable	  [FE]  RuntimeException  	20	8	replace
