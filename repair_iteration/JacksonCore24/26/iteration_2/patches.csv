bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  if(_numTypesValid!=  NR_UNKNOWN)  {  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	add	if(_numTypesValid!=  NR_UNKNOWN)  {	  if(_numTypesValid    ==    NR_UNKNOWN)    {    if(_numTypesValid!=    NR_UNKNOWN)    {    	compilable	  [FE]  AssertionFailedError  	45	8	replace
2	[BUG]  [BUGGY]  if(_numTypesValid!=  NR_UNKNOWN)  {  [FE]  AssertionFailedError  [FE]        JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  if(_numTypesValid!=  NR_UNKNOWN)  {  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	replace	if(_numTypesValid!=  NR_UNKNOWN)  {	  if(_numTypesValid    ==    NR_UNKNOWN)    {    if(_numTypesValid!=    NR_UNKNOWN)    {    	compilable	  [FE]  AssertionFailedError  	45	8	replace
3	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {	  	non-compiled	[CE]  ';'  expected	19	None	add
4	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.FIELD_NAME)  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.FIELD_NAME)  {  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.FIELD_NAME)  {	  	non-compiled	[CE]  ';'  expected	19	None	add
5	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {	  	non-compiled	[CE]  ';'  expected	19	None	add
6	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  If(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  If(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    If(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {	  	non-compiled	[CE]  ';'  expected	19	None	add
7	[BUG]  [BUGGY]  _parseNumberValue(NR_UNKNOWN,  _currToken);  [CE]  illegal  start  of  type  [FE]                        JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  _parseNumberValue(NR_UNKNOWN,  _currToken);  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	replace	_parseNumberValue(NR_UNKNOWN,  _currToken);	  _parseNumberValue(NR_UNKNOWN);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
8	[BUG]  [BUGGY]  if((  _numTypesValid  &  NR_INT)  >=  0)  {  if((  _numTypesValid  &  NR_INT)!=  0)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  if((  _numTypesValid  &  NR_INT)  >=  0)  {  if((  _numTypesValid  &  NR_INT)!=  0)  {  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	replace	if((    _numTypesValid    &    NR_INT)    >=    0)    {    if((  _numTypesValid  &  NR_INT)!=  0)  {	  	non-compiled	[CE]  ';'  expected	29	None	add
9	[BUG]  [BUGGY]  if((  _numTypesValid  &  NR_INT)  >=  0)  {  if((  _numTypesValid  &  NR_INT)  >=  0)  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  if((  _numTypesValid  &  NR_INT)  >=  0)  {  if((  _numTypesValid  &  NR_INT)  >=  0)  {  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	replace	if((    _numTypesValid    &    NR_INT)    >=    0)    {    if((  _numTypesValid  &  NR_INT)  >=  0)  {	  	non-compiled	[CE]  ';'  expected	29	None	add
10	[BUG]  [BUGGY]  if((  _numTypesValid  &  NR_INT)  >=  0)  {  if((  _numTypesValid  &  NR_INT)  >>  0)  {  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  if((  _numTypesValid  &  NR_INT)  >=  0)  {  if((  _numTypesValid  &  NR_INT)  >>  0)  {  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	replace	if((    _numTypesValid    &    NR_INT)    >=    0)    {    if((  _numTypesValid  &  NR_INT)  >>  0)  {	  	non-compiled	[CE]  ';'  expected	29	None	add
11	[BUG]  [BUGGY]  if((  _numTypesValid  &  NR_INT)  >=  0)  {  if((  _numTypesValid  &  NR_INT)  ==  0)  {  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  if((  _numTypesValid  &  NR_INT)  >=  0)  {  if((  _numTypesValid  &  NR_INT)  ==  0)  {  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	replace	if((    _numTypesValid    &    NR_INT)    >=    0)    {    if((  _numTypesValid  &  NR_INT)  ==  0)  {	  	non-compiled	[CE]  ';'  expected	29	None	add
12	[BUG]  [BUGGY]  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  _parseNumericValue(NR_INT);  }  [CE]  illegal  start  of  expression  [FE]                      JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  _parseNumericValue(NR_INT);  }  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	replace	||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  _parseNumericValue(NR_INT);  }	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    _parseNumericValue(NR_INT);    }    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
13	[BUG]  [BUGGY]  ||(_currToken  ==  JsonToken.VALUE_NUMBER_INT))  {  _parseNumericValue(NR_INT);  }  [CE]  illegal  start  of  expression  [FE]                        JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  ||(_currToken  ==  JsonToken.VALUE_NUMBER_INT))  {  _parseNumericValue(NR_INT);  }  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	replace	||(_currToken  ==  JsonToken.VALUE_NUMBER_INT))  {  _parseNumericValue(NR_INT);  }	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    _parseNumericValue(NR_INT);    }    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
14	[BUG]  [BUGGY]  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  _parseNumericValue(NR_INT);  [CE]  illegal  start  of  expression  [FE]                          JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  _parseNumericValue(NR_INT);  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	replace	||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  _parseNumericValue(NR_INT);	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    _parseNumericValue(NR_INT);    }    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
15	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    JsonParseException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	add	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.VALUE_NUMBER_FLOAT)  {	  if(_currToken!=    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    	compilable	  [FE]  AssertionFailedError  	18	8	replace
16	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.VALUE_NUMBER_FLOAT)  {  [FE]  AssertionFailedError  [FE]    JsonParseException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	replace	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.VALUE_NUMBER_FLOAT)  {	  if(_currToken!=    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    	compilable	  [FE]  AssertionFailedError  	18	8	replace
17	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_INIT)  {  [CE]  cannot  find  symbol  NR_INIT  [FE]            JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  if(_numTypesValid  ==  NR_INIT)  {  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	replace	if(_numTypesValid  ==  NR_INIT)  {	  if(_numTypesValid    ==    NR_UNKNOWN)    {    if(_numTypesValid    ==    NR_INIT)    {    	non-compiled	[CE]  cannot  find  symbol  NR_INIT	47	None	replace
18	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    JsonParseException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  if(_numTypesValid  ==  NR_INT  ||  _numTypesValid  ==  NR_BIGINT)  {  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	add	if(_numTypesValid  ==  NR_INT  ||  _numTypesValid  ==  NR_BIGINT)  {	  if(_numTypesValid    ==    NR_INT    ||    _numTypesValid    ==    NR_LONG)    {    	compilable	  [FE]  AssertionFailedError  	13	8	replace
19	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_INT  ||  _numTypesValid  ==  NR_BIGINT)  {  [FE]  AssertionFailedError  [FE]    JsonParseException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  if(_numTypesValid  ==  NR_INT  ||  _numTypesValid  ==  NR_BIGINT)  {  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	replace	if(_numTypesValid  ==  NR_INT  ||  _numTypesValid  ==  NR_BIGINT)  {	  if(_numTypesValid    ==    NR_INT    ||    _numTypesValid    ==    NR_LONG)    {    	compilable	  [FE]  AssertionFailedError  	13	8	replace
20	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  if(_numTypesValid  ==  0  ||  _numTypesValid  ==  0)  {  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	add	if(_numTypesValid  ==  0  ||  _numTypesValid  ==  0)  {	  if(_numTypesValid    ==    NR_INT    ||    _numTypesValid    ==    NR_LONG)    {    	compilable	  [FE]  JsonParseException  	13	8	replace
21	[BUG]  [BUGGY]  if(_numTypesValid  ==  0  ||  _numTypesValid  ==  0)  {  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  if(_numTypesValid  ==  0  ||  _numTypesValid  ==  0)  {  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	replace	if(_numTypesValid  ==  0  ||  _numTypesValid  ==  0)  {	  if(_numTypesValid    ==    NR_INT    ||    _numTypesValid    ==    NR_LONG)    {    	compilable	  [FE]  JsonParseException  	13	8	replace
22	[BUG]  [BUGGY]  _parseNumericValue(NR_NUMBER_INT,  _currToken);  [CE]  illegal  start  of  type  [FE]                  JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  _parseNumericValue(NR_NUMBER_INT,  _currToken);  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	replace	_parseNumericValue(NR_NUMBER_INT,  _currToken);	  _parseNumericValue(NR_NUMBER_INT);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
23	[BUG]  [BUGGY]  _parseNumericValue(NR_NUMBER_INT,  value);  [CE]  illegal  start  of  type  [FE]                    JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  _parseNumericValue(NR_NUMBER_INT,  value);  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	replace	_parseNumericValue(NR_NUMBER_INT,  value);	  _parseNumericValue(NR_NUMBER_INT);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
24	[BUG]  [BUGGY]  _parseNumberValue(NR_NUMBER_INT);  [CE]  illegal  start  of  type  [FE]                      JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  _parseNumberValue(NR_NUMBER_INT);  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	replace	_parseNumberValue(NR_NUMBER_INT);	  _parseNumericValue(NR_NUMBER_INT);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
25	[BUG]  [BUGGY]  _parseNumericValue(NR_NUMBER_INT  +  1);  [CE]  illegal  start  of  type  [FE]                        JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  _parseNumericValue(NR_NUMBER_INT  +  1);  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	replace	_parseNumericValue(NR_NUMBER_INT  +  1);	  _parseNumericValue(NR_NUMBER_INT);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
26	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]              AssertionFailedError      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	add	if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    	compilable	  [FE]  JsonParseException  	63	8	replace
27	[BUG]  [BUGGY]  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [FE]  JsonParseException  [FE]              AssertionFailedError      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	replace	if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    	compilable	  [FE]  JsonParseException  	63	8	replace
28	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.FIELD_NAME)  {  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	add	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.FIELD_NAME)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    	compilable	  [FE]  AssertionFailedError  	63	8	replace
29	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.FIELD_NAME)  {  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.FIELD_NAME)  {  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	replace	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.FIELD_NAME)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    	compilable	  [FE]  AssertionFailedError  	63	8	replace
30	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_INT  ||  _numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  NR_INT  ||  _numTypesValid  ==  NR_UNKNOWN)  {  [CE]  ';'  expected  [FE]    JsonParseException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  if(_numTypesValid  ==  NR_INT  ||  _numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  NR_INT  ||  _numTypesValid  ==  NR_UNKNOWN)  {  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	replace	if(_numTypesValid    ==    NR_INT    ||    _numTypesValid    ==    NR_UNKNOWN)    {    if(_numTypesValid  ==  NR_INT  ||  _numTypesValid  ==  NR_UNKNOWN)  {	  	non-compiled	[CE]  ';'  expected	10	None	add
31	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_INT  ||  _numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  NR_INT  ||  _numTypesValid!=  NR_UNKNOWN)  {  [CE]  ';'  expected  [FE]      JsonParseException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  if(_numTypesValid  ==  NR_INT  ||  _numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  NR_INT  ||  _numTypesValid!=  NR_UNKNOWN)  {  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	replace	if(_numTypesValid    ==    NR_INT    ||    _numTypesValid    ==    NR_UNKNOWN)    {    if(_numTypesValid  ==  NR_INT  ||  _numTypesValid!=  NR_UNKNOWN)  {	  	non-compiled	[CE]  ';'  expected	10	None	add
32	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_INT  ||  _numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid!=  NR_INT  ||  _numTypesValid  ==  NR_UNKNOWN)  {  [CE]  ';'  expected  [FE]        JsonParseException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  if(_numTypesValid  ==  NR_INT  ||  _numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid!=  NR_INT  ||  _numTypesValid  ==  NR_UNKNOWN)  {  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	replace	if(_numTypesValid    ==    NR_INT    ||    _numTypesValid    ==    NR_UNKNOWN)    {    if(_numTypesValid!=  NR_INT  ||  _numTypesValid  ==  NR_UNKNOWN)  {	  	non-compiled	[CE]  ';'  expected	10	None	add
33	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_INT  ||  _numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  NR_INT  ||  _numTypesValid  >=  NR_UNKNOWN)  {  [CE]  ';'  expected  [FE]          JsonParseException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  if(_numTypesValid  ==  NR_INT  ||  _numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  NR_INT  ||  _numTypesValid  >=  NR_UNKNOWN)  {  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	replace	if(_numTypesValid    ==    NR_INT    ||    _numTypesValid    ==    NR_UNKNOWN)    {    if(_numTypesValid  ==  NR_INT  ||  _numTypesValid  >=  NR_UNKNOWN)  {	  	non-compiled	[CE]  ';'  expected	10	None	add
34	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_INT  ||  _numTypesValid  ==  NR_LONG)  {  if(_numTypesValid  ==  NR_INT  ||  _numTypesValid  ==  NR_LONG)  {  [CE]  ';'  expected  [FE]    JsonParseException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  if(_numTypesValid  ==  NR_INT  ||  _numTypesValid  ==  NR_LONG)  {  if(_numTypesValid  ==  NR_INT  ||  _numTypesValid  ==  NR_LONG)  {  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	replace	if(_numTypesValid    ==    NR_INT    ||    _numTypesValid    ==    NR_LONG)    {    if(_numTypesValid  ==  NR_INT  ||  _numTypesValid  ==  NR_LONG)  {	  	non-compiled	[CE]  ';'  expected	12	None	add
35	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_INT  ||  _numTypesValid  ==  NR_LONG)  {  if(_numTypesValid  ==  NR_INT  ||  _numTypesValid!=  NR_LONG)  {  [CE]  ';'  expected  [FE]      JsonParseException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  if(_numTypesValid  ==  NR_INT  ||  _numTypesValid  ==  NR_LONG)  {  if(_numTypesValid  ==  NR_INT  ||  _numTypesValid!=  NR_LONG)  {  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	replace	if(_numTypesValid    ==    NR_INT    ||    _numTypesValid    ==    NR_LONG)    {    if(_numTypesValid  ==  NR_INT  ||  _numTypesValid!=  NR_LONG)  {	  	non-compiled	[CE]  ';'  expected	12	None	add
36	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_INT  ||  _numTypesValid  ==  NR_LONG)  {  if(_numTypesValid!=  NR_INT  ||  _numTypesValid  ==  NR_LONG)  {  [CE]  ';'  expected  [FE]        JsonParseException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  if(_numTypesValid  ==  NR_INT  ||  _numTypesValid  ==  NR_LONG)  {  if(_numTypesValid!=  NR_INT  ||  _numTypesValid  ==  NR_LONG)  {  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	replace	if(_numTypesValid    ==    NR_INT    ||    _numTypesValid    ==    NR_LONG)    {    if(_numTypesValid!=  NR_INT  ||  _numTypesValid  ==  NR_LONG)  {	  	non-compiled	[CE]  ';'  expected	12	None	add
37	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_INT  ||  _numTypesValid  ==  NR_LONG)  {  if(_numTypesValid  ==  NR_INT  ||  _numTypesValid  >=  NR_LONG)  {  [CE]  ';'  expected  [FE]          JsonParseException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  if(_numTypesValid  ==  NR_INT  ||  _numTypesValid  ==  NR_LONG)  {  if(_numTypesValid  ==  NR_INT  ||  _numTypesValid  >=  NR_LONG)  {  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	replace	if(_numTypesValid    ==    NR_INT    ||    _numTypesValid    ==    NR_LONG)    {    if(_numTypesValid  ==  NR_INT  ||  _numTypesValid  >=  NR_LONG)  {	  	non-compiled	[CE]  ';'  expected	12	None	add
38	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]          AssertionFailedError      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	add	if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_currToken!=    JsonToken.VALUE_NUMBER_INT)    {    	compilable	  [FE]  JsonParseException  	7	8	replace
39	[BUG]  [BUGGY]  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  [FE]  JsonParseException  [FE]          AssertionFailedError      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	replace	if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_currToken!=    JsonToken.VALUE_NUMBER_INT)    {    	compilable	  [FE]  JsonParseException  	7	8	replace
40	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_LONG)  {  [CE]  cannot  find  symbol  VALUE_NUMBER_LONG  [FE]              AssertionFailedError      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_LONG)  {  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	replace	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_LONG)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_currToken    ==    JsonToken.VALUE_NUMBER_INTE)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_LONG	9	None	replace
41	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_ARRAY)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_ARRAY)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_ARRAY)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_ARRAY)  {  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.END_ARRAY)    {    if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_ARRAY)  {	  	non-compiled	[CE]  ';'  expected	43	None	add
42	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_ARRAY)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.END_ARRAY)  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_ARRAY)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.END_ARRAY)  {  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.END_ARRAY)    {    if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.END_ARRAY)  {	  	non-compiled	[CE]  ';'  expected	43	None	add
43	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_ARRAY)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_ARRAY)  {  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_ARRAY)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_ARRAY)  {  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.END_ARRAY)    {    if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_ARRAY)  {	  	non-compiled	[CE]  ';'  expected	43	None	add
44	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_ARRAY)  {  If(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_ARRAY)  {  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_ARRAY)  {  If(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_ARRAY)  {  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.END_ARRAY)    {    If(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_ARRAY)  {	  	non-compiled	[CE]  ';'  expected	43	None	add
45	[BUG]  [BUGGY]  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [CE]  ';'  expected  [FE]    JsonParseException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	replace	if(_currToken!=    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {	  	non-compiled	[CE]  ';'  expected	17	None	add
46	[BUG]  [BUGGY]  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [CE]  ';'  expected  [FE]      JsonParseException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	replace	if(_currToken!=    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {	  	non-compiled	[CE]  ';'  expected	17	None	add
47	[BUG]  [BUGGY]  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  if(_currToken  >=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [CE]  ';'  expected  [FE]        JsonParseException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  if(_currToken  >=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	replace	if(_currToken!=    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    if(_currToken  >=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {	  	non-compiled	[CE]  ';'  expected	17	None	add
48	[BUG]  [BUGGY]  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  if(_currToken  >>  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [CE]  ';'  expected  [FE]          JsonParseException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  if(_currToken  >>  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	replace	if(_currToken!=    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    if(_currToken  >>  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {	  	non-compiled	[CE]  ';'  expected	17	None	add
49	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_INITIALIZED)  {  [CE]  cannot  find  symbol  NR_INITIALIZED  [FE]          JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  if(_numTypesValid  ==  NR_INITIALIZED)  {  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	replace	if(_numTypesValid  ==  NR_INITIALIZED)  {	  if(_numTypesValid    ==    NR_UNKNOWN)    {    if(_numTypesValid    ==    NR_INITIALIZED)    {    	non-compiled	[CE]  cannot  find  symbol  NR_INITIALIZED	24	None	replace
50	[BUG]  [BUGGY]  if(_numTypesValid!=  NR_INITIALIZED)  {  [CE]  cannot  find  symbol  NR_INITIALIZED  [FE]            JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  if(_numTypesValid!=  NR_INITIALIZED)  {  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	replace	if(_numTypesValid!=  NR_INITIALIZED)  {	  if(_numTypesValid    ==    NR_UNKNOWN)    {    if(_numTypesValid    ==    NR_INITIALIZED)    {    	non-compiled	[CE]  cannot  find  symbol  NR_INITIALIZED	24	None	replace
51	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_DECIMAL)  {  [CE]  cannot  find  symbol  VALUE_NUMBER_DECIMAL  [FE]            AssertionFailedError      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_DECIMAL)  {  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	replace	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_DECIMAL)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.VALUE_NUMBER_DECIMAL)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_DECIMAL	62	None	replace
52	[BUG]  [BUGGY]  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_DECIMAL)  {  [CE]  cannot  find  symbol  VALUE_NUMBER_DECIMAL  [FE]              AssertionFailedError      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_DECIMAL)  {  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	replace	if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_DECIMAL)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.VALUE_NUMBER_DECIMAL)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_DECIMAL	62	None	replace
53	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.VALUE_NUMBER_DECIMAL)  {  [CE]  cannot  find  symbol  VALUE_NUMBER_DECIMAL  [FE]                AssertionFailedError      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.VALUE_NUMBER_DECIMAL)  {  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	replace	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.VALUE_NUMBER_DECIMAL)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.VALUE_NUMBER_DECIMAL)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_DECIMAL	62	None	replace
54	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]          AssertionFailedError      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  if((  _numTypesValid  &  NR_INT)!=  0  ||(_numTypesValid  &  NR_INT)!=  0)  {  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	add	if((  _numTypesValid  &  NR_INT)!=  0  ||(_numTypesValid  &  NR_INT)!=  0)  {	  if((    _numTypesValid    &    NR_INT)    ==    0)    {    if((    _numTypesValid    &    NR_INT)!=    0)    {    	compilable	  [FE]  JsonParseException  	39	8	replace
55	[BUG]  [BUGGY]  if((  _numTypesValid  &  NR_INT)!=  0  ||(_numTypesValid  &  NR_INT)!=  0)  {  [FE]  JsonParseException  [FE]          AssertionFailedError      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  if((  _numTypesValid  &  NR_INT)!=  0  ||(_numTypesValid  &  NR_INT)!=  0)  {  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	replace	if((  _numTypesValid  &  NR_INT)!=  0  ||(_numTypesValid  &  NR_INT)!=  0)  {	  if((    _numTypesValid    &    NR_INT)    ==    0)    {    if((    _numTypesValid    &    NR_INT)!=    0)    {    	compilable	  [FE]  JsonParseException  	39	8	replace
56	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_INITIAL)  {  [CE]  cannot  find  symbol  NR_INITIAL  [FE]          JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  if(_numTypesValid  ==  NR_INITIAL)  {  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	replace	if(_numTypesValid  ==  NR_INITIAL)  {	  if(_numTypesValid    ==    NR_UNKNOWN)    {    if(_numTypesValid    ==    NR_INITIAL)    {    	non-compiled	[CE]  cannot  find  symbol  NR_INITIAL	57	None	replace
57	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_FLOAT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	add	if(_currToken  ==  JsonToken.VALUE_NUMBER_FLOAT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    	compilable	  [FE]  AssertionFailedError  	60	8	replace
58	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_FLOAT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_FLOAT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	replace	if(_currToken  ==  JsonToken.VALUE_NUMBER_FLOAT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    	compilable	  [FE]  AssertionFailedError  	60	8	replace
59	[BUG]  [BUGGY]  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_LONG)  {  [CE]  cannot  find  symbol  VALUE_NUMBER_LONG  [FE]          AssertionFailedError      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_LONG)  {  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	replace	if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_LONG)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.VALUE_NUMBER_LONG)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_LONG	61	None	replace
60	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.VALUE_NUMBER_LONG)  {  [CE]  cannot  find  symbol  VALUE_NUMBER_LONG  [FE]            AssertionFailedError      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.VALUE_NUMBER_LONG)  {  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	replace	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.VALUE_NUMBER_LONG)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.VALUE_NUMBER_LONG)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_LONG	61	None	replace
61	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	add	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_OBJECT)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.START_OBJECT)    {    	compilable	  [FE]  AssertionFailedError  	22	8	replace
62	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	replace	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_OBJECT)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.START_OBJECT)    {    	compilable	  [FE]  AssertionFailedError  	22	8	replace
63	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	add	if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.START_OBJECT)    {    	compilable	  [FE]  AssertionFailedError  	22	8	replace
64	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	replace	if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.START_OBJECT)    {    	compilable	  [FE]  AssertionFailedError  	22	8	replace
65	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  if(_numTypesValid!=  NR_INT)  {  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	add	if(_numTypesValid!=  NR_INT)  {	  if(_numTypesValid    ==    NR_INT)    {    if(_numTypesValid    >=    NR_INT)    {    	compilable	  [FE]  AssertionFailedError  	3	8	replace
66	[BUG]  [BUGGY]  if(_numTypesValid!=  NR_INT)  {  [FE]  AssertionFailedError  [FE]            JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  if(_numTypesValid!=  NR_INT)  {  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	replace	if(_numTypesValid!=  NR_INT)  {	  if(_numTypesValid    ==    NR_INT)    {    if(_numTypesValid    >=    NR_INT)    {    	compilable	  [FE]  AssertionFailedError  	3	8	replace
67	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_INVALID)  {  [CE]  cannot  find  symbol  NR_INVALID  [FE]            JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  if(_numTypesValid  ==  NR_INVALID)  {  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	replace	if(_numTypesValid  ==  NR_INVALID)  {	  if(_numTypesValid    ==    NR_UNKNOWN)    {    if(_numTypesValid    ==    NR_INVALID)    {    	non-compiled	[CE]  cannot  find  symbol  NR_INVALID	25	None	replace
68	[BUG]  [BUGGY]  if(_numTypesValid!=  NR_INVALID)  {  [CE]  cannot  find  symbol  NR_INVALID  [FE]              JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  if(_numTypesValid!=  NR_INVALID)  {  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	replace	if(_numTypesValid!=  NR_INVALID)  {	  if(_numTypesValid    ==    NR_UNKNOWN)    {    if(_numTypesValid    ==    NR_INVALID)    {    	non-compiled	[CE]  cannot  find  symbol  NR_INVALID	25	None	replace
69	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_ARRAY)  {  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	add	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_ARRAY)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.END_ARRAY)    {    	compilable	  [FE]  AssertionFailedError  	44	8	replace
70	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_ARRAY)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_ARRAY)  {  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	replace	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_ARRAY)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.END_ARRAY)    {    	compilable	  [FE]  AssertionFailedError  	44	8	replace
71	[BUG]  [BUGGY]  if((  _numTypesValid  &  NR_MINUS)!=  0)  {  [CE]  cannot  find  symbol  NR_MINUS  [FE]        AssertionFailedError      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  if((  _numTypesValid  &  NR_MINUS)!=  0)  {  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	replace	if((  _numTypesValid  &  NR_MINUS)!=  0)  {	  if((    _numTypesValid    &    NR_INTEGER)!=    0)    {    	non-compiled	[CE]  cannot  find  symbol  NR_MINUS	28	None	replace
72	[BUG]  [BUGGY]  if((  _numTypesValid  &  NR_INFINITY)!=  0)  {  [CE]  cannot  find  symbol  NR_INFINITY  [FE]          AssertionFailedError      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  if((  _numTypesValid  &  NR_INFINITY)!=  0)  {  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	replace	if((  _numTypesValid  &  NR_INFINITY)!=  0)  {	  if((    _numTypesValid    &    NR_INTEGER)!=    0)    {    	non-compiled	[CE]  cannot  find  symbol  NR_INFINITY	28	None	replace
73	[BUG]  [BUGGY]  ||(_currToken  ==  JsonToken.VALUE_NUMBER_INT)&&(_numTypesValid  ==  NR_LONG))  {  return  _numberInt;  [CE]  illegal  start  of  expression  [FE]                    JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  ||(_currToken  ==  JsonToken.VALUE_NUMBER_INT)&&(_numTypesValid  ==  NR_LONG))  {  return  _numberInt;  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	replace	||(_currToken  ==  JsonToken.VALUE_NUMBER_INT)&&(_numTypesValid  ==  NR_LONG))  {  return  _numberInt;	  ||(_currToken    ==    JsonToken.VALUE_NUMBER_INT))    {    return    _numberInt;    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
74	[BUG]  [BUGGY]  ||(_currToken  ==  JsonToken.VALUE_NUMBER_INT)&&(_numTypesValid  ==  NR_UNKNOWN))  {  return  _numberInt;  [CE]  illegal  start  of  expression  [FE]                      JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  ||(_currToken  ==  JsonToken.VALUE_NUMBER_INT)&&(_numTypesValid  ==  NR_UNKNOWN))  {  return  _numberInt;  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	replace	||(_currToken  ==  JsonToken.VALUE_NUMBER_INT)&&(_numTypesValid  ==  NR_UNKNOWN))  {  return  _numberInt;	  ||(_currToken    ==    JsonToken.VALUE_NUMBER_INT))    {    return    _numberInt;    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
75	[BUG]  [BUGGY]  ||(_currToken  ==  JsonToken.VALUE_NUMBER_FLOAT))  {  return  _numberInt;  [CE]  illegal  start  of  expression  [FE]                        JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  ||(_currToken  ==  JsonToken.VALUE_NUMBER_FLOAT))  {  return  _numberInt;  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	replace	||(_currToken  ==  JsonToken.VALUE_NUMBER_FLOAT))  {  return  _numberInt;	  ||(_currToken    ==    JsonToken.VALUE_NUMBER_INT))    {    return    _numberInt;    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
76	[BUG]  [BUGGY]  ||(_currToken  ==  JsonToken.VALUE_NUMBER_INT)&&(_numTypesValid  ==  NR_BIGINT))  {  return  _numberInt;  [CE]  illegal  start  of  expression  [FE]                          JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  ||(_currToken  ==  JsonToken.VALUE_NUMBER_INT)&&(_numTypesValid  ==  NR_BIGINT))  {  return  _numberInt;  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	replace	||(_currToken  ==  JsonToken.VALUE_NUMBER_INT)&&(_numTypesValid  ==  NR_BIGINT))  {  return  _numberInt;	  ||(_currToken    ==    JsonToken.VALUE_NUMBER_INT))    {    return    _numberInt;    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
77	[BUG]  [BUGGY]  if(_numTypesValid  ==  0)  {  if(_numTypesValid  ==  0)  {  [CE]  ';'  expected  [FE]    JsonParseException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  if(_numTypesValid  ==  0)  {  if(_numTypesValid  ==  0)  {  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	replace	if(_numTypesValid    ==    0)    {    if(_numTypesValid  ==  0)  {	  	non-compiled	[CE]  ';'  expected	35	None	add
78	[BUG]  [BUGGY]  if(_numTypesValid  ==  0)  {  if(_numTypesValid!=  0)  {  [CE]  ';'  expected  [FE]      JsonParseException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  if(_numTypesValid  ==  0)  {  if(_numTypesValid!=  0)  {  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	replace	if(_numTypesValid    ==    0)    {    if(_numTypesValid!=  0)  {	  	non-compiled	[CE]  ';'  expected	35	None	add
79	[BUG]  [BUGGY]  if(_numTypesValid  ==  0)  {  if(_numTypesValid  >=  0)  {  [CE]  ';'  expected  [FE]        JsonParseException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  if(_numTypesValid  ==  0)  {  if(_numTypesValid  >=  0)  {  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	replace	if(_numTypesValid    ==    0)    {    if(_numTypesValid  >=  0)  {	  	non-compiled	[CE]  ';'  expected	35	None	add
80	[BUG]  [BUGGY]  if(_numTypesValid  ==  0)  {  if(_numTypesValid  >>  0)  {  [CE]  ';'  expected  [FE]          JsonParseException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  if(_numTypesValid  ==  0)  {  if(_numTypesValid  >>  0)  {  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	replace	if(_numTypesValid    ==    0)    {    if(_numTypesValid  >>  0)  {	  	non-compiled	[CE]  ';'  expected	35	None	add
81	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_OBJECT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_OBJECT)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_OBJECT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_OBJECT)  {  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.START_OBJECT)    {    if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_OBJECT)  {	  	non-compiled	[CE]  ';'  expected	21	None	add
82	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_OBJECT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.START_OBJECT)  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_OBJECT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.START_OBJECT)  {  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.START_OBJECT)    {    if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.START_OBJECT)  {	  	non-compiled	[CE]  ';'  expected	21	None	add
83	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_OBJECT)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_OBJECT)  {  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_OBJECT)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_OBJECT)  {  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.START_OBJECT)    {    if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_OBJECT)  {	  	non-compiled	[CE]  ';'  expected	21	None	add
84	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_OBJECT)  {  If(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_OBJECT)  {  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_OBJECT)  {  If(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_OBJECT)  {  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.START_OBJECT)    {    If(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_OBJECT)  {	  	non-compiled	[CE]  ';'  expected	21	None	add
85	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_INFINITY  ||  _numTypesValid  ==  NR_UNKNOWN)  {  [CE]  cannot  find  symbol  NR_INFINITY  [FE]          JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  if(_numTypesValid  ==  NR_INFINITY  ||  _numTypesValid  ==  NR_UNKNOWN)  {  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	replace	if(_numTypesValid  ==  NR_INFINITY  ||  _numTypesValid  ==  NR_UNKNOWN)  {	  if(_numTypesValid    ==    NR_INFINITY)    {    	non-compiled	[CE]  cannot  find  symbol  NR_INFINITY	37	None	replace
86	[BUG]  [BUGGY]  If((  _numTypesValid  &  NR_INT)!=  0)  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  If((  _numTypesValid  &  NR_INT)!=  0)  {  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	replace	If((  _numTypesValid  &  NR_INT)!=  0)  {	  if((    _numTypesValid    &    NR_INT)    ==    0)    {    If((    _numTypesValid    &    NR_INT)    ==    0)    {    	non-compiled	[CE]  ';'  expected	41	None	replace
87	[BUG]  [BUGGY]  If((  _numTypesValid  &  NR_INT)  ==  0)  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  If((  _numTypesValid  &  NR_INT)  ==  0)  {  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	replace	If((  _numTypesValid  &  NR_INT)  ==  0)  {	  if((    _numTypesValid    &    NR_INT)    ==    0)    {    If((    _numTypesValid    &    NR_INT)    ==    0)    {    	non-compiled	[CE]  ';'  expected	41	None	replace
88	[BUG]  [BUGGY]  _parseNumberValue(NR_INT,  value);  [CE]  illegal  start  of  type  [FE]                    JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  _parseNumberValue(NR_INT,  value);  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	replace	_parseNumberValue(NR_INT,  value);	  _parseNumberValue(NR_INT);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
89	[BUG]  [BUGGY]  _parseNumberValue(NR_BIGINT);  [CE]  illegal  start  of  type  [FE]                      JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  _parseNumberValue(NR_BIGINT);  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	replace	_parseNumberValue(NR_BIGINT);	  _parseNumberValue(NR_INT);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
90	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_INFINITY  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [CE]  cannot  find  symbol  VALUE_INFINITY  [FE]    AssertionFailedError    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_INFINITY  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	replace	if(_currToken  ==  JsonToken.VALUE_INFINITY  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_INFINITY	16	None	replace
91	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _parseNumericValue(NR_INT)!=  0)  {  return  _numberInt;  }  [CE]  illegal  start  of  type  [FE]                  JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _parseNumericValue(NR_INT)!=  0)  {  return  _numberInt;  }  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	replace	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _parseNumericValue(NR_INT)!=  0)  {  return  _numberInt;  }	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_parseNumericValue(NR_INT)!=    0)    {    return    _numberInt;    }    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
92	[BUG]  [BUGGY]  ||  _parseNumericValue(NR_INT)!=  0)  {  return  _numberInt;  [CE]  illegal  start  of  expression  [FE]                    JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  ||  _parseNumericValue(NR_INT)!=  0)  {  return  _numberInt;  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	replace	||  _parseNumericValue(NR_INT)!=  0)  {  return  _numberInt;	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_parseNumericValue(NR_INT)!=    0)    {    return    _numberInt;    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
93	[BUG]  [BUGGY]  if(_parseNumericValue(NR_INT)!=  0)  {  return  _numberInt;  }  [CE]  illegal  start  of  type  [FE]                      JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  if(_parseNumericValue(NR_INT)!=  0)  {  return  _numberInt;  }  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	replace	if(_parseNumericValue(NR_INT)!=  0)  {  return  _numberInt;  }	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_parseNumericValue(NR_INT)!=    0)    {    return    _numberInt;    }    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
94	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  if(_numTypesValid  ==  NR_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	add	if(_numTypesValid  ==  NR_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {	  if(_numTypesValid    ==    NR_INCONCLUSIVE    ||    _currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    	compilable	  [FE]  AssertionFailedError  	59	8	replace
95	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  [FE]  AssertionFailedError  [FE]              JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  if(_numTypesValid  ==  NR_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	replace	if(_numTypesValid  ==  NR_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {	  if(_numTypesValid    ==    NR_INCONCLUSIVE    ||    _currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    	compilable	  [FE]  AssertionFailedError  	59	8	replace
96	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _numTypesValid  ==  NR_INCONCLUSIVE)  {  [CE]  cannot  find  symbol  NR_INCONCLUSIVE  [FE]                JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _numTypesValid  ==  NR_INCONCLUSIVE)  {  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	replace	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _numTypesValid  ==  NR_INCONCLUSIVE)  {	  if(_numTypesValid    ==    NR_INCONCLUSIVE    ||    _currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    	non-compiled	[CE]  cannot  find  symbol  NR_INCONCLUSIVE	59	None	replace
97	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                  JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	add	if(_numTypesValid  ==  NR_UNKNOWN  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {	  if(_numTypesValid    ==    NR_INCONCLUSIVE    ||    _currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    	compilable	  [FE]  AssertionFailedError  	59	8	replace
98	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  [FE]  AssertionFailedError  [FE]                  JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	replace	if(_numTypesValid  ==  NR_UNKNOWN  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {	  if(_numTypesValid    ==    NR_INCONCLUSIVE    ||    _currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    	compilable	  [FE]  AssertionFailedError  	59	8	replace
99	[BUG]  [BUGGY]  _parseNumericValue(NR_UNKNOWN,  _currToken);  [CE]  illegal  start  of  type  [FE]                      JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  _parseNumericValue(NR_UNKNOWN,  _currToken);  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	replace	_parseNumericValue(NR_UNKNOWN,  _currToken);	  _parseNumericValue(NR_UNKNOWN);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
100	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_INT  ||  _numTypesValid  ==  NR_INT)  {  if(_numTypesValid  ==  NR_INT  ||  _numTypesValid  ==  NR_INT)  {  [CE]  ';'  expected  [FE]    JsonParseException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  if(_numTypesValid  ==  NR_INT  ||  _numTypesValid  ==  NR_INT)  {  if(_numTypesValid  ==  NR_INT  ||  _numTypesValid  ==  NR_INT)  {  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	replace	if(_numTypesValid    ==    NR_INT    ||    _numTypesValid    ==    NR_INT)    {    if(_numTypesValid  ==  NR_INT  ||  _numTypesValid  ==  NR_INT)  {	  	non-compiled	[CE]  ';'  expected	54	None	add
101	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_INT  ||  _numTypesValid  ==  NR_INT)  {  if(_numTypesValid  ==  NR_INT  ||  _numTypesValid!=  NR_INT)  {  [CE]  ';'  expected  [FE]      JsonParseException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  if(_numTypesValid  ==  NR_INT  ||  _numTypesValid  ==  NR_INT)  {  if(_numTypesValid  ==  NR_INT  ||  _numTypesValid!=  NR_INT)  {  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	replace	if(_numTypesValid    ==    NR_INT    ||    _numTypesValid    ==    NR_INT)    {    if(_numTypesValid  ==  NR_INT  ||  _numTypesValid!=  NR_INT)  {	  	non-compiled	[CE]  ';'  expected	54	None	add
102	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_INT  ||  _numTypesValid  ==  NR_INT)  {  if(_numTypesValid!=  NR_INT  ||  _numTypesValid  ==  NR_INT)  {  [CE]  ';'  expected  [FE]        JsonParseException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  if(_numTypesValid  ==  NR_INT  ||  _numTypesValid  ==  NR_INT)  {  if(_numTypesValid!=  NR_INT  ||  _numTypesValid  ==  NR_INT)  {  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	replace	if(_numTypesValid    ==    NR_INT    ||    _numTypesValid    ==    NR_INT)    {    if(_numTypesValid!=  NR_INT  ||  _numTypesValid  ==  NR_INT)  {	  	non-compiled	[CE]  ';'  expected	54	None	add
103	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_INT  ||  _numTypesValid  ==  NR_INT)  {  if(_numTypesValid  >=  NR_INT  ||  _numTypesValid  ==  NR_INT)  {  [CE]  ';'  expected  [FE]          JsonParseException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  if(_numTypesValid  ==  NR_INT  ||  _numTypesValid  ==  NR_INT)  {  if(_numTypesValid  >=  NR_INT  ||  _numTypesValid  ==  NR_INT)  {  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	replace	if(_numTypesValid    ==    NR_INT    ||    _numTypesValid    ==    NR_INT)    {    if(_numTypesValid  >=  NR_INT  ||  _numTypesValid  ==  NR_INT)  {	  	non-compiled	[CE]  ';'  expected	54	None	add
104	[BUG]  [BUGGY]  _parseNumericValue(NR_INT,  value);  [CE]  illegal  start  of  type  [FE]                  JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  _parseNumericValue(NR_INT,  value);  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	replace	_parseNumericValue(NR_INT,  value);	  _parseNumericValue(NR_INT);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
105	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {	  	non-compiled	[CE]  ';'  expected	15	None	add
106	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.VALUE_NUMBER_FLOAT)  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.VALUE_NUMBER_FLOAT)  {	  	non-compiled	[CE]  ';'  expected	15	None	add
107	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {	  	non-compiled	[CE]  ';'  expected	15	None	add
108	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  If(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  If(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    If(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {	  	non-compiled	[CE]  ';'  expected	15	None	add
109	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_INT  ||  _numTypesValid  ==  NR_INCONCLUSIVE)  {  [CE]  cannot  find  symbol  NR_INCONCLUSIVE  [FE]            JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  if(_numTypesValid  ==  NR_INT  ||  _numTypesValid  ==  NR_INCONCLUSIVE)  {  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	replace	if(_numTypesValid  ==  NR_INT  ||  _numTypesValid  ==  NR_INCONCLUSIVE)  {	  if(_numTypesValid    ==    NR_INCONCLUSIVE    ||    _numTypesValid    ==    NR_INT)    {    	non-compiled	[CE]  cannot  find  symbol  NR_INCONCLUSIVE	58	None	replace
110	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_INTEGER  ||  _numTypesValid  ==  NR_INT)  {  [CE]  cannot  find  symbol  NR_INTEGER  [FE]              JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  if(_numTypesValid  ==  NR_INTEGER  ||  _numTypesValid  ==  NR_INT)  {  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	replace	if(_numTypesValid  ==  NR_INTEGER  ||  _numTypesValid  ==  NR_INT)  {	  if(_numTypesValid    ==    NR_INCONCLUSIVE    ||    _numTypesValid    ==    NR_INT)    {    	non-compiled	[CE]  cannot  find  symbol  NR_INTEGER	58	None	replace
111	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]                JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN  ||  _numTypesValid  ==  NR_INT)  {  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	add	if(_numTypesValid  ==  NR_UNKNOWN  ||  _numTypesValid  ==  NR_INT)  {	  if(_numTypesValid    ==    NR_INCONCLUSIVE    ||    _numTypesValid    ==    NR_INT)    {    	compilable	  [FE]  JsonParseException  	58	8	replace
112	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN  ||  _numTypesValid  ==  NR_INT)  {  [FE]  JsonParseException  [FE]                JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN  ||  _numTypesValid  ==  NR_INT)  {  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	replace	if(_numTypesValid  ==  NR_UNKNOWN  ||  _numTypesValid  ==  NR_INT)  {	  if(_numTypesValid    ==    NR_INCONCLUSIVE    ||    _numTypesValid    ==    NR_INT)    {    	compilable	  [FE]  JsonParseException  	58	8	replace
113	[BUG]  [BUGGY]  _parseNumericValue(NR_INT  +  1);  [CE]  illegal  start  of  type  [FE]                  JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  _parseNumericValue(NR_INT  +  1);  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	replace	_parseNumericValue(NR_INT  +  1);	  _parseNumericValue(NR_INT);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
114	[BUG]  [BUGGY]  _parseIntValue(NR_INT);  [CE]  illegal  start  of  type  [FE]                        JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  _parseIntValue(NR_INT);  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	replace	_parseIntValue(NR_INT);	  _parseNumberValue(NR_UNKNOWN);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
115	[BUG]  [BUGGY]  _parseNumberValue(NR_INTEGER);  [CE]  illegal  start  of  type  [FE]                          JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  _parseNumberValue(NR_INTEGER);  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	replace	_parseNumberValue(NR_INTEGER);	  _parseNumberValue(NR_UNKNOWN);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
116	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_INT  ||  _numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  NR_INT  ||  _numtypesValid  ==  NR_UNKNOWN)  {  [CE]  ';'  expected  [FE]    JsonParseException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  if(_numTypesValid  ==  NR_INT  ||  _numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  NR_INT  ||  _numtypesValid  ==  NR_UNKNOWN)  {  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	replace	if(_numTypesValid    ==    NR_INT    ||    _numTypesValid    ==    NR_UNKNOWN)    {    if(_numTypesValid  ==  NR_INT  ||  _numtypesValid  ==  NR_UNKNOWN)  {	  	non-compiled	[CE]  ';'  expected	10	None	add
117	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_INTEGER  ||  _numTypesValid  ==  NR_BIGINT)  {  [CE]  cannot  find  symbol  NR_INTEGER  [FE]            JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  if(_numTypesValid  ==  NR_INTEGER  ||  _numTypesValid  ==  NR_BIGINT)  {  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	replace	if(_numTypesValid  ==  NR_INTEGER  ||  _numTypesValid  ==  NR_BIGINT)  {	  if(_numTypesValid    ==    NR_INTEGER)    {    	non-compiled	[CE]  cannot  find  symbol  NR_INTEGER	5	None	replace
118	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]        JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  if(_numTypesValid  <  NR_INT)  {  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	add	if(_numTypesValid  <  NR_INT)  {	  if(_numTypesValid    ==    NR_INT)    {    if(_numTypesValid    <    NR_INT)    {    	compilable	  [FE]  JsonParseException  	52	8	replace
119	[BUG]  [BUGGY]  if(_numTypesValid  <  NR_INT)  {  [FE]  JsonParseException  [FE]        JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  if(_numTypesValid  <  NR_INT)  {  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	replace	if(_numTypesValid  <  NR_INT)  {	  if(_numTypesValid    ==    NR_INT)    {    if(_numTypesValid    <    NR_INT)    {    	compilable	  [FE]  JsonParseException  	52	8	replace
120	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]              AssertionFailedError      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME)  {  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	add	if(_currToken  ==  JsonToken.FIELD_NAME)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    	compilable	  [FE]  JsonParseException  	63	8	replace
121	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME)  {  [FE]  JsonParseException  [FE]              AssertionFailedError      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME)  {  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	replace	if(_currToken  ==  JsonToken.FIELD_NAME)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    	compilable	  [FE]  JsonParseException  	63	8	replace
122	[BUG]  [BUGGY]  if((  _numTypesValid  &  NR_MINUTE)!=  0)  {  [CE]  cannot  find  symbol  NR_MINUTE  [FE]        AssertionFailedError      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  if((  _numTypesValid  &  NR_MINUTE)!=  0)  {  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	replace	if((  _numTypesValid  &  NR_MINUTE)!=  0)  {	  if((    _numTypesValid    &    NR_INTEGER)!=    0)    {    	non-compiled	[CE]  cannot  find  symbol  NR_MINUTE	28	None	replace
123	[BUG]  [BUGGY]  if((  _numTypesValid  &  NR_INIT)!=  0)  {  [CE]  cannot  find  symbol  NR_INIT  [FE]          AssertionFailedError      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  if((  _numTypesValid  &  NR_INIT)!=  0)  {  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	replace	if((  _numTypesValid  &  NR_INIT)!=  0)  {	  if((    _numTypesValid    &    NR_INTEGER)!=    0)    {    	non-compiled	[CE]  cannot  find  symbol  NR_INIT	28	None	replace
124	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	add	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {	  if(_numTypesValid    ==    NR_UNKNOWN)    {    if(_numTypesValid    ==    NR_INT)    {    	compilable	  [FE]  AssertionFailedError  	27	8	replace
125	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  [FE]  AssertionFailedError  [FE]                JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	replace	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {	  if(_numTypesValid    ==    NR_UNKNOWN)    {    if(_numTypesValid    ==    NR_INT)    {    	compilable	  [FE]  AssertionFailedError  	27	8	replace
126	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_INTEGER  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  [CE]  cannot  find  symbol  NR_INTEGER  [FE]              JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  if(_numTypesValid  ==  NR_INTEGER  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	replace	if(_numTypesValid  ==  NR_INTEGER  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {	  if(_numTypesValid    ==    NR_INCONCLUSIVE    ||    _currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    	non-compiled	[CE]  cannot  find  symbol  NR_INTEGER	59	None	replace
127	[BUG]  [BUGGY]  if(_numTypesValid!=  NR_INCONCLUSIVE)  {  [CE]  cannot  find  symbol  NR_INCONCLUSIVE  [FE]        JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  if(_numTypesValid!=  NR_INCONCLUSIVE)  {  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	replace	if(_numTypesValid!=  NR_INCONCLUSIVE)  {	  if(_numTypesValid    ==    NR_UNKNOWN)    {    if(_numTypesValid    ==    NR_INCONCLUSIVE)    {    	non-compiled	[CE]  cannot  find  symbol  NR_INCONCLUSIVE	56	None	replace
128	[BUG]  [BUGGY]  _parseNumberValue(NR_INT  +  1);  [CE]  illegal  start  of  type  [FE]                    JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  _parseNumberValue(NR_INT  +  1);  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	replace	_parseNumberValue(NR_INT  +  1);	  _parseNumberValue(NR_INT);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
129	[BUG]  [BUGGY]  _parseNumberValue(NR_INT,  _currToken);  [CE]  illegal  start  of  type  [FE]                      JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  _parseNumberValue(NR_INT,  _currToken);  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	replace	_parseNumberValue(NR_INT,  _currToken);	  _parseNumberValue(NR_INT);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
130	[BUG]  [BUGGY]  ||(_currToken  ==  JsonToken.VALUE_NUMBER_INT))  {  _parseNumericValue(NR_INT);  [CE]  illegal  start  of  expression  [FE]                      JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  ||(_currToken  ==  JsonToken.VALUE_NUMBER_INT))  {  _parseNumericValue(NR_INT);  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	replace	||(_currToken  ==  JsonToken.VALUE_NUMBER_INT))  {  _parseNumericValue(NR_INT);	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    _parseNumericValue(NR_INT);    }    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
131	[BUG]  [BUGGY]  if(_numTypesValid  ==  0)  {  If(_numTypesValid  ==  0)  {  [CE]  ';'  expected  [FE]    JsonParseException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  if(_numTypesValid  ==  0)  {  If(_numTypesValid  ==  0)  {  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	replace	if(_numTypesValid    ==    0)    {    If(_numTypesValid  ==  0)  {	  	non-compiled	[CE]  ';'  expected	35	None	add
132	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	add	if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    	compilable	  [FE]  AssertionFailedError  	20	8	replace
133	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	replace	if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    	compilable	  [FE]  AssertionFailedError  	20	8	replace
134	[BUG]  [BUGGY]  _parseIntValue(NR_UNKNOWN);  [CE]  illegal  start  of  type  [FE]                      JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  _parseIntValue(NR_UNKNOWN);  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	replace	_parseIntValue(NR_UNKNOWN);	  _parseNumericValue(NR_UNKNOWN);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
135	[BUG]  [BUGGY]  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  if(_parseNumericValue(NR_INT)!=  0)  {  return  _numberInt;  }  [CE]  'void'  type  not  allowed  here  [FE]                  JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  if(_parseNumericValue(NR_INT)!=  0)  {  return  _numberInt;  }  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	replace	if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  if(_parseNumericValue(NR_INT)!=  0)  {  return  _numberInt;  }	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_parseNumericValue(NR_INT)!=    0)    {    return    _numberInt;    }    	non-compiled	[CE]  'void'  type  not  allowed  here	51	None	replace
136	[BUG]  [BUGGY]  ||(_currToken  ==  JsonToken.FIELD_NAME))  {  return  _numberInt;  [CE]  illegal  start  of  expression  [FE]                    JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  ||(_currToken  ==  JsonToken.FIELD_NAME))  {  return  _numberInt;  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	replace	||(_currToken  ==  JsonToken.FIELD_NAME))  {  return  _numberInt;	  ||(_currToken    ==    JsonToken.VALUE_NUMBER_INT))    {    return    _numberInt;    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
137	[BUG]  [BUGGY]  ||(_currToken  ==  JsonToken.VALUE_NUMBER_INT))  {  return  _numberLong;  [CE]  illegal  start  of  expression  [FE]                      JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  ||(_currToken  ==  JsonToken.VALUE_NUMBER_INT))  {  return  _numberLong;  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	replace	||(_currToken  ==  JsonToken.VALUE_NUMBER_INT))  {  return  _numberLong;	  ||(_currToken    ==    JsonToken.VALUE_NUMBER_INT))    {    return    _numberInt;    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
138	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  if(_numTypesValid  >=  NR_UNKNOWN)  {  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	add	if(_numTypesValid  >=  NR_UNKNOWN)  {	  if(_numTypesValid    ==    NR_UNKNOWN)    {    if(_numTypesValid    >=    NR_UNKNOWN)    {    	compilable	  [FE]  AssertionFailedError  	46	8	replace
139	[BUG]  [BUGGY]  if(_numTypesValid  >=  NR_UNKNOWN)  {  [FE]  AssertionFailedError  [FE]          JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  if(_numTypesValid  >=  NR_UNKNOWN)  {  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	replace	if(_numTypesValid  >=  NR_UNKNOWN)  {	  if(_numTypesValid    ==    NR_UNKNOWN)    {    if(_numTypesValid    >=    NR_UNKNOWN)    {    	compilable	  [FE]  AssertionFailedError  	46	8	replace
140	[BUG]  [BUGGY]  _parseNumericValue(NR_VALUE_NUMBER_INT);  [CE]  illegal  start  of  type  [FE]                  JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  _parseNumericValue(NR_VALUE_NUMBER_INT);  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	replace	_parseNumericValue(NR_VALUE_NUMBER_INT);	  _parseNumericValue(NR_NUMBER_INT);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
141	[BUG]  [BUGGY]  if(_numTypesValid  ==  JsonToken.VALUE_NUMBER_INT)  {  [CE]  incomparable  types:  int  and  JsonToken  [FE]        AssertionFailedError      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  if(_numTypesValid  ==  JsonToken.VALUE_NUMBER_INT)  {  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	replace	if(_numTypesValid  ==  JsonToken.VALUE_NUMBER_INT)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    	non-compiled	[CE]  incomparable  types:  int  and  JsonToken	6	None	replace
142	[BUG]  [BUGGY]  if(_numTypesValid  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [CE]  incomparable  types:  int  and  JsonToken  [FE]        AssertionFailedError      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  if(_numTypesValid  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	replace	if(_numTypesValid  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    	non-compiled	[CE]  incomparable  types:  int  and  JsonToken	60	None	replace
143	[BUG]  [BUGGY]  if(_numTypesValid  ==  JsonToken.VALUE_NUMBER_INT  ||  _numTypesValid  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [CE]  incomparable  types:  int  and  JsonToken  [FE]          AssertionFailedError      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  if(_numTypesValid  ==  JsonToken.VALUE_NUMBER_INT  ||  _numTypesValid  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	replace	if(_numTypesValid  ==  JsonToken.VALUE_NUMBER_INT  ||  _numTypesValid  ==  JsonToken.VALUE_NUMBER_FLOAT)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    	non-compiled	[CE]  incomparable  types:  int  and  JsonToken	60	None	replace
144	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  if(_currToken  >=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  if(_currToken  >=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    if(_currToken  >=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {	  	non-compiled	[CE]  ';'  expected	15	None	add
145	[BUG]  [BUGGY]  if(_numTypesValid  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [CE]  incomparable  types:  int  and  JsonToken  [FE]              AssertionFailedError      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  if(_numTypesValid  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	replace	if(_numTypesValid  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    	non-compiled	[CE]  incomparable  types:  int  and  JsonToken	63	None	replace
146	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_OBJECT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_OBJECT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.START_OBJECT)    {    if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_OBJECT)  {	  	non-compiled	[CE]  ';'  expected	21	None	add
147	[BUG]  [BUGGY]  ||(_currToken  ==  JsonToken.VALUE_NUMBER_INT  &&  _numTypesValid  ==  NR_INT))  {  _parseNumericValue(NR_INT);  }  [CE]  illegal  start  of  expression  [FE]                      JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  ||(_currToken  ==  JsonToken.VALUE_NUMBER_INT  &&  _numTypesValid  ==  NR_INT))  {  _parseNumericValue(NR_INT);  }  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	replace	||(_currToken  ==  JsonToken.VALUE_NUMBER_INT  &&  _numTypesValid  ==  NR_INT))  {  _parseNumericValue(NR_INT);  }	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    _parseNumericValue(NR_INT);    }    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
148	[BUG]  [BUGGY]  ||(_currToken  ==  JsonToken.VALUE_NUMBER_INT  &&  _numberTypesValid  ==  JsonToken.VALUE_NUMBER_FLOAT))  {  return  _numberInt;  [CE]  illegal  start  of  expression  [FE]                    JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  ||(_currToken  ==  JsonToken.VALUE_NUMBER_INT  &&  _numberTypesValid  ==  JsonToken.VALUE_NUMBER_FLOAT))  {  return  _numberInt;  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	replace	||(_currToken  ==  JsonToken.VALUE_NUMBER_INT  &&  _numberTypesValid  ==  JsonToken.VALUE_NUMBER_FLOAT))  {  return  _numberInt;	  ||(_currToken    ==    JsonToken.VALUE_NUMBER_INT))    {    return    _numberInt;    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
149	[BUG]  [BUGGY]  ||(_currToken  ==  JsonToken.VALUE_NUMBER_INT  &&  _numberTypesValid!=  JsonToken.VALUE_NUMBER_FLOAT))  {  return  _numberInt;  [CE]  illegal  start  of  expression  [FE]                      JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  ||(_currToken  ==  JsonToken.VALUE_NUMBER_INT  &&  _numberTypesValid!=  JsonToken.VALUE_NUMBER_FLOAT))  {  return  _numberInt;  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	replace	||(_currToken  ==  JsonToken.VALUE_NUMBER_INT  &&  _numberTypesValid!=  JsonToken.VALUE_NUMBER_FLOAT))  {  return  _numberInt;	  ||(_currToken    ==    JsonToken.VALUE_NUMBER_INT))    {    return    _numberInt;    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
150	[BUG]  [BUGGY]  ||(_currToken  ==  JsonToken.VALUE_NUMBER_INT  &&  _numberInt!=  0))  {  return  _numberInt;  [CE]  illegal  start  of  expression  [FE]                        JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  ||(_currToken  ==  JsonToken.VALUE_NUMBER_INT  &&  _numberInt!=  0))  {  return  _numberInt;  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	replace	||(_currToken  ==  JsonToken.VALUE_NUMBER_INT  &&  _numberInt!=  0))  {  return  _numberInt;	  ||(_currToken    ==    JsonToken.VALUE_NUMBER_INT))    {    return    _numberInt;    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
151	[BUG]  [BUGGY]  if(_numTypesValid  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_DECIMAL)  {  [CE]  incomparable  types:  int  and  JsonToken  [FE]            AssertionFailedError      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  if(_numTypesValid  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_DECIMAL)  {  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	replace	if(_numTypesValid  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_DECIMAL)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.VALUE_NUMBER_DECIMAL)    {    	non-compiled	[CE]  incomparable  types:  int  and  JsonToken	62	None	replace
152	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_ARRAY)  {  if(_currToken  >=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_ARRAY)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_ARRAY)  {  if(_currToken  >=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_ARRAY)  {  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.END_ARRAY)    {    if(_currToken  >=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_ARRAY)  {	  	non-compiled	[CE]  ';'  expected	43	None	add
153	[BUG]  [BUGGY]  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INTE  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [CE]  ';'  expected  [FE]    JsonParseException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INTE  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	replace	if(_currToken!=    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    if(_currToken!=  JsonToken.VALUE_NUMBER_INTE  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {	  	non-compiled	[CE]  ';'  expected	17	None	add
154	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_INT  ||  _numTypesValid  ==  NR_INT)  {  if(_numTypesValid  ==  NR_INT  ||  _numtypesValid  ==  NR_INT)  {  [CE]  ';'  expected  [FE]    JsonParseException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  if(_numTypesValid  ==  NR_INT  ||  _numTypesValid  ==  NR_INT)  {  if(_numTypesValid  ==  NR_INT  ||  _numtypesValid  ==  NR_INT)  {  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	replace	if(_numTypesValid    ==    NR_INT    ||    _numTypesValid    ==    NR_INT)    {    if(_numTypesValid  ==  NR_INT  ||  _numtypesValid  ==  NR_INT)  {	  	non-compiled	[CE]  ';'  expected	54	None	add
155	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_INT  ||  _numTypesValid  ==  NR_LONG)  {  if(_numTypesValid  ==  NR_INT  ||  _numtypesValid  ==  NR_LONG)  {  [CE]  ';'  expected  [FE]    JsonParseException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  if(_numTypesValid  ==  NR_INT  ||  _numTypesValid  ==  NR_LONG)  {  if(_numTypesValid  ==  NR_INT  ||  _numtypesValid  ==  NR_LONG)  {  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	replace	if(_numTypesValid    ==    NR_INT    ||    _numTypesValid    ==    NR_LONG)    {    if(_numTypesValid  ==  NR_INT  ||  _numtypesValid  ==  NR_LONG)  {	  	non-compiled	[CE]  ';'  expected	12	None	add
156	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_INCONCLUSIVE  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [CE]  cannot  find  symbol  NR_INCONCLUSIVE  [FE]              JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  if(_numTypesValid  ==  NR_INCONCLUSIVE  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	replace	if(_numTypesValid  ==  NR_INCONCLUSIVE  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {	  if(_numTypesValid    ==    NR_INCONCLUSIVE    ||    _currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    	non-compiled	[CE]  cannot  find  symbol  NR_INCONCLUSIVE	59	None	replace
157	[BUG]  [BUGGY]  if(_numTypesValid  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_LONG)  {  [CE]  incomparable  types:  int  and  JsonToken  [FE]          AssertionFailedError      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  if(_numTypesValid  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_LONG)  {  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	replace	if(_numTypesValid  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_LONG)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.VALUE_NUMBER_LONG)    {    	non-compiled	[CE]  incomparable  types:  int  and  JsonToken	61	None	replace
158	[BUG]  [BUGGY]  if(_numTypesValid  ==  0)  {  if(_numTypesValid  ==  1)  {  [CE]  ';'  expected  [FE]    JsonParseException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  if(_numTypesValid  ==  0)  {  if(_numTypesValid  ==  1)  {  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	replace	if(_numTypesValid    ==    0)    {    if(_numTypesValid  ==  1)  {	  	non-compiled	[CE]  ';'  expected	35	None	add
159	[BUG]  [BUGGY]  if((  _numTypesValid  &  NR_INFINITE)!=  0)  {  [CE]  cannot  find  symbol  NR_INFINITE  [FE]        AssertionFailedError      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  if((  _numTypesValid  &  NR_INFINITE)!=  0)  {  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	replace	if((  _numTypesValid  &  NR_INFINITE)!=  0)  {	  if((    _numTypesValid    &    NR_INTEGER)!=    0)    {    	non-compiled	[CE]  cannot  find  symbol  NR_INFINITE	28	None	replace
160	[BUG]  [BUGGY]  if(_numTypesValid  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_parseNumericValue(NR_INT)!=  0)  {  return  _numberInt;  }  [CE]  incomparable  types:  int  and  JsonToken  [FE]                  JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  if(_numTypesValid  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_parseNumericValue(NR_INT)!=  0)  {  return  _numberInt;  }  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	replace	if(_numTypesValid  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_parseNumericValue(NR_INT)!=  0)  {  return  _numberInt;  }	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_parseNumericValue(NR_INT)!=    0)    {    return    _numberInt;    }    	non-compiled	[CE]  incomparable  types:  int  and  JsonToken	51	None	replace
161	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken  >=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken  >=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    if(_currToken  >=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {	  	non-compiled	[CE]  ';'  expected	19	None	add
162	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_INFINITY  ||  _numTypesValid  ==  NR_INT)  {  [CE]  cannot  find  symbol  NR_INFINITY  [FE]              JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  if(_numTypesValid  ==  NR_INFINITY  ||  _numTypesValid  ==  NR_INT)  {  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	replace	if(_numTypesValid  ==  NR_INFINITY  ||  _numTypesValid  ==  NR_INT)  {	  if(_numTypesValid    ==    NR_UNKNOWN)    {    if(_numTypesValid    ==    NR_INFINITY)    {    	non-compiled	[CE]  cannot  find  symbol  NR_INFINITY	26	None	replace
163	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_INT  ||  _numTypesValid  ==  NR_INTEGER)  {  [CE]  cannot  find  symbol  NR_INTEGER  [FE]            JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  if(_numTypesValid  ==  NR_INT  ||  _numTypesValid  ==  NR_INTEGER)  {  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	replace	if(_numTypesValid  ==  NR_INT  ||  _numTypesValid  ==  NR_INTEGER)  {	  if(_numTypesValid    ==    NR_INT    ||    _numTypesValid    ==    NR_NUMBER_INT)    {    	non-compiled	[CE]  cannot  find  symbol  NR_INTEGER	14	None	replace
164	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_INFINITY  ||  _numTypesValid  ==  NR_INFINITY)  {  [CE]  cannot  find  symbol  NR_INFINITY  [FE]              JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {      [BUGGY]  if(_numTypesValid  ==  NR_INFINITY  ||  _numTypesValid  ==  NR_INFINITY)  {  [BUGGY]      return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	588	588	8	replace	if(_numTypesValid  ==  NR_INFINITY  ||  _numTypesValid  ==  NR_INFINITY)  {	  if(_numTypesValid    ==    NR_INT    ||    _numTypesValid    ==    NR_NUMBER_INT)    {    	non-compiled	[CE]  cannot  find  symbol  NR_INFINITY	14	None	replace
