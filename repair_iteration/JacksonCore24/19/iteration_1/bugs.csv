bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException  [CONTEXT]  if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {    [BUGGY]  if((  expType  ==  NR_LONG)||(expType  ==  NR_INT))  {  [BUGGY]  _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	add	if((  expType  ==  NR_LONG)||(expType  ==  NR_INT))  {	if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {  	compilable	  [FE]  JsonParseException  	37	8	replace
2	[BUG]  [BUGGY]  if((  expType  ==  NR_LONG)||(expType  ==  NR_INT))  {  [FE]  JsonParseException  [FE]    JsonParseException  [CONTEXT]  if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {    [BUGGY]  if((  expType  ==  NR_LONG)||(expType  ==  NR_INT))  {  [BUGGY]  _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((  expType  ==  NR_LONG)||(expType  ==  NR_INT))  {	if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {  	compilable	  [FE]  JsonParseException  	37	8	replace
3	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]      JsonParseException  [CONTEXT]  if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {    [BUGGY]  if((  expType  ==  NR_INT)&&(expType  ==  NR_LONG))  {  [BUGGY]  _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	add	if((  expType  ==  NR_INT)&&(expType  ==  NR_LONG))  {	if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {  	compilable	  [FE]  JsonParseException  	37	8	replace
4	[BUG]  [BUGGY]  if((  expType  ==  NR_INT)&&(expType  ==  NR_LONG))  {  [FE]  JsonParseException  [FE]      JsonParseException  [CONTEXT]  if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {    [BUGGY]  if((  expType  ==  NR_INT)&&(expType  ==  NR_LONG))  {  [BUGGY]  _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((  expType  ==  NR_INT)&&(expType  ==  NR_LONG))  {	if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {  	compilable	  [FE]  JsonParseException  	37	8	replace
5	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]        JsonParseException  [CONTEXT]  if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {    [BUGGY]  if((  expType  ==  NR_INT)&&(expType!=  NR_LONG))  {  [BUGGY]  _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	add	if((  expType  ==  NR_INT)&&(expType!=  NR_LONG))  {	if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {  	compilable	  [FE]  JsonParseException  	37	8	replace
6	[BUG]  [BUGGY]  if((  expType  ==  NR_INT)&&(expType!=  NR_LONG))  {  [FE]  JsonParseException  [FE]        JsonParseException  [CONTEXT]  if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {    [BUGGY]  if((  expType  ==  NR_INT)&&(expType!=  NR_LONG))  {  [BUGGY]  _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((  expType  ==  NR_INT)&&(expType!=  NR_LONG))  {	if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {  	compilable	  [FE]  JsonParseException  	37	8	replace
7	[BUG]  [BUGGY]    [CE]  [FE]          JsonParseException  [CONTEXT]  if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {    [BUGGY]    [BUGGY]  _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	  	if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {  	non-compiled	[CE]  	37	None	replace
8	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException  [CONTEXT]  if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {    [BUGGY]  if(_numTypesValid  ==  0)  {  [BUGGY]  _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	add	if(_numTypesValid  ==  0)  {	if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {  	compilable	  [FE]  JsonParseException  	37	15	replace
9	[BUG]  [BUGGY]  if(_numTypesValid  ==  0)  {  [FE]  JsonParseException  [FE]    JsonParseException  [CONTEXT]  if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {    [BUGGY]  if(_numTypesValid  ==  0)  {  [BUGGY]  _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if(_numTypesValid  ==  0)  {	if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {  	compilable	  [FE]  JsonParseException  	37	15	replace
10	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]      JsonParseException  [CONTEXT]  if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {    [BUGGY]  if((  expType  ==  NR_INT)||(expType  ==  NR_BIGINT))  {  [BUGGY]  _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	add	if((  expType  ==  NR_INT)||(expType  ==  NR_BIGINT))  {	if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {  	compilable	  [FE]  JsonParseException  	37	11	replace
11	[BUG]  [BUGGY]  if((  expType  ==  NR_INT)||(expType  ==  NR_BIGINT))  {  [FE]  JsonParseException  [FE]      JsonParseException  [CONTEXT]  if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {    [BUGGY]  if((  expType  ==  NR_INT)||(expType  ==  NR_BIGINT))  {  [BUGGY]  _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((  expType  ==  NR_INT)||(expType  ==  NR_BIGINT))  {	if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {  	compilable	  [FE]  JsonParseException  	37	11	replace
12	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException  [CONTEXT]  if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {    [BUGGY]  if((  expType  ==  NR_INT)||(expType  ==  NR_UNKNOWN))  {  [BUGGY]  _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	add	if((  expType  ==  NR_INT)||(expType  ==  NR_UNKNOWN))  {	if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {  	compilable	  [FE]  JsonParseException  	37	10	replace
13	[BUG]  [BUGGY]  if((  expType  ==  NR_INT)||(expType  ==  NR_UNKNOWN))  {  [FE]  JsonParseException  [FE]    JsonParseException  [CONTEXT]  if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {    [BUGGY]  if((  expType  ==  NR_INT)||(expType  ==  NR_UNKNOWN))  {  [BUGGY]  _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((  expType  ==  NR_INT)||(expType  ==  NR_UNKNOWN))  {	if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {  	compilable	  [FE]  JsonParseException  	37	10	replace
