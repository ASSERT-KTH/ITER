bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]    if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {      [BUGGY]  if((  expType  ==  NR_LONG)&&(expType  ==  NR_INT))  {  [BUGGY]    _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	add	if((  expType  ==  NR_LONG)&&(expType  ==  NR_INT))  {	  if((    expType    ==    NR_LONG)||(expType    ==    NR_INT))    {    	compilable	  [FE]  JsonParseException  	2	8	replace
2	[BUG]  [BUGGY]  if((  expType  ==  NR_LONG)&&(expType  ==  NR_INT))  {  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]    if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {      [BUGGY]  if((  expType  ==  NR_LONG)&&(expType  ==  NR_INT))  {  [BUGGY]    _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((  expType  ==  NR_LONG)&&(expType  ==  NR_INT))  {	  if((    expType    ==    NR_LONG)||(expType    ==    NR_INT))    {    	compilable	  [FE]  JsonParseException  	2	8	replace
3	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]    if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {      [BUGGY]  if((  expType  ==  NR_INT)||(expType!=  NR_LONG))  {  [BUGGY]    _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	add	if((  expType  ==  NR_INT)||(expType!=  NR_LONG))  {	  if((    expType    ==    NR_INT)&&(expType!=    NR_LONG))    {    	compilable	  [FE]  JsonParseException  	6	15	replace
4	[BUG]  [BUGGY]  if((  expType  ==  NR_INT)||(expType!=  NR_LONG))  {  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]    if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {      [BUGGY]  if((  expType  ==  NR_INT)||(expType!=  NR_LONG))  {  [BUGGY]    _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((  expType  ==  NR_INT)||(expType!=  NR_LONG))  {	  if((    expType    ==    NR_INT)&&(expType!=    NR_LONG))    {    	compilable	  [FE]  JsonParseException  	6	15	replace
5	[BUG]  [BUGGY]  if((  expType  ==  NR_INT)&&(expType  ==  NR_LONG))  {  if((  expType  ==  NR_INT)&&(expType  ==  NR_LONG))  {  [CE]  'catch'  without  'try'  [FE]    JsonParseException    [CONTEXT]    if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {      [BUGGY]  if((  expType  ==  NR_INT)&&(expType  ==  NR_LONG))  {  if((  expType  ==  NR_INT)&&(expType  ==  NR_LONG))  {  [BUGGY]    _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((    expType    ==    NR_INT)&&(expType    ==    NR_LONG))    {    if((  expType  ==  NR_INT)&&(expType  ==  NR_LONG))  {	  	non-compiled	[CE]  'catch'  without  'try'	3	None	add
6	[BUG]  [BUGGY]  if((  expType  ==  NR_INT)&&(expType  ==  NR_LONG))  {  if((  expType!=  NR_INT)&&(expType  ==  NR_LONG))  {  [CE]  'catch'  without  'try'  [FE]      JsonParseException    [CONTEXT]    if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {      [BUGGY]  if((  expType  ==  NR_INT)&&(expType  ==  NR_LONG))  {  if((  expType!=  NR_INT)&&(expType  ==  NR_LONG))  {  [BUGGY]    _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((    expType    ==    NR_INT)&&(expType    ==    NR_LONG))    {    if((  expType!=  NR_INT)&&(expType  ==  NR_LONG))  {	  	non-compiled	[CE]  'catch'  without  'try'	3	None	add
7	[BUG]  [BUGGY]  if((  expType  ==  NR_INT)&&(expType  ==  NR_LONG))  {  if((  expType  ==  NR_INT)&&(expType!=  NR_LONG))  {  [CE]  'catch'  without  'try'  [FE]        JsonParseException    [CONTEXT]    if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {      [BUGGY]  if((  expType  ==  NR_INT)&&(expType  ==  NR_LONG))  {  if((  expType  ==  NR_INT)&&(expType!=  NR_LONG))  {  [BUGGY]    _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((    expType    ==    NR_INT)&&(expType    ==    NR_LONG))    {    if((  expType  ==  NR_INT)&&(expType!=  NR_LONG))  {	  	non-compiled	[CE]  'catch'  without  'try'	3	None	add
8	[BUG]  [BUGGY]  if((  expType  ==  NR_INT)&&(expType  ==  NR_LONG))  {  if((  expType  >=  NR_INT)&&(expType  ==  NR_LONG))  {  [CE]  'catch'  without  'try'  [FE]          JsonParseException    [CONTEXT]    if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {      [BUGGY]  if((  expType  ==  NR_INT)&&(expType  ==  NR_LONG))  {  if((  expType  >=  NR_INT)&&(expType  ==  NR_LONG))  {  [BUGGY]    _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((    expType    ==    NR_INT)&&(expType    ==    NR_LONG))    {    if((  expType  >=  NR_INT)&&(expType  ==  NR_LONG))  {	  	non-compiled	[CE]  'catch'  without  'try'	3	None	add
9	[BUG]  [BUGGY]  if((  expType  ==  NR_INT)&&(expType!=  NR_LONG))  {  if((  expType  ==  NR_INT)&&(expType!=  NR_LONG))  {  [CE]  'catch'  without  'try'  [FE]    JsonParseException    [CONTEXT]    if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {      [BUGGY]  if((  expType  ==  NR_INT)&&(expType!=  NR_LONG))  {  if((  expType  ==  NR_INT)&&(expType!=  NR_LONG))  {  [BUGGY]    _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((    expType    ==    NR_INT)&&(expType!=    NR_LONG))    {    if((  expType  ==  NR_INT)&&(expType!=  NR_LONG))  {	  	non-compiled	[CE]  'catch'  without  'try'	5	None	add
10	[BUG]  [BUGGY]  if((  expType  ==  NR_INT)&&(expType!=  NR_LONG))  {  if((  expType  ==  NR_INT)&&(expType  >>  NR_LONG))  {  [CE]  'catch'  without  'try'  [FE]      JsonParseException    [CONTEXT]    if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {      [BUGGY]  if((  expType  ==  NR_INT)&&(expType!=  NR_LONG))  {  if((  expType  ==  NR_INT)&&(expType  >>  NR_LONG))  {  [BUGGY]    _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((    expType    ==    NR_INT)&&(expType!=    NR_LONG))    {    if((  expType  ==  NR_INT)&&(expType  >>  NR_LONG))  {	  	non-compiled	[CE]  'catch'  without  'try'	5	None	add
11	[BUG]  [BUGGY]  if((  expType  ==  NR_INT)&&(expType!=  NR_LONG))  {  if((  expType  ==  NR_INT)&&(expType  >=  NR_LONG))  {  [CE]  'catch'  without  'try'  [FE]        JsonParseException    [CONTEXT]    if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {      [BUGGY]  if((  expType  ==  NR_INT)&&(expType!=  NR_LONG))  {  if((  expType  ==  NR_INT)&&(expType  >=  NR_LONG))  {  [BUGGY]    _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((    expType    ==    NR_INT)&&(expType!=    NR_LONG))    {    if((  expType  ==  NR_INT)&&(expType  >=  NR_LONG))  {	  	non-compiled	[CE]  'catch'  without  'try'	5	None	add
12	[BUG]  [BUGGY]  if((  expType  ==  NR_INT)&&(expType!=  NR_LONG))  {  if((  expType!=  NR_INT)&&(expType!=  NR_LONG))  {  [CE]  'catch'  without  'try'  [FE]          JsonParseException    [CONTEXT]    if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {      [BUGGY]  if((  expType  ==  NR_INT)&&(expType!=  NR_LONG))  {  if((  expType!=  NR_INT)&&(expType!=  NR_LONG))  {  [BUGGY]    _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((    expType    ==    NR_INT)&&(expType!=    NR_LONG))    {    if((  expType!=  NR_INT)&&(expType!=  NR_LONG))  {	  	non-compiled	[CE]  'catch'  without  'try'	5	None	add
13	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]    if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {      [BUGGY]  if((  expType  ==  NR_INT)&&(expType  ==  NR_LONG)||(expType  ==  NR_BIGINT))  {  [BUGGY]    _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	add	if((  expType  ==  NR_INT)&&(expType  ==  NR_LONG)||(expType  ==  NR_BIGINT))  {	  if((    expType    ==    NR_INT)&&(expType    ==    NR_LONG))    {    	compilable	  [FE]  JsonParseException  	4	11	replace
14	[BUG]  [BUGGY]  if((  expType  ==  NR_INT)&&(expType  ==  NR_LONG)||(expType  ==  NR_BIGINT))  {  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]    if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {      [BUGGY]  if((  expType  ==  NR_INT)&&(expType  ==  NR_LONG)||(expType  ==  NR_BIGINT))  {  [BUGGY]    _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((  expType  ==  NR_INT)&&(expType  ==  NR_LONG)||(expType  ==  NR_BIGINT))  {	  if((    expType    ==    NR_INT)&&(expType    ==    NR_LONG))    {    	compilable	  [FE]  JsonParseException  	4	11	replace
15	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]    if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {      [BUGGY]  if((  expType  ==  NR_LONG)||(expType  ==  NR_LONG))  {  [BUGGY]    _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	add	if((  expType  ==  NR_LONG)||(expType  ==  NR_LONG))  {	  if(_numTypesValid    ==    0)    {    	compilable	  [FE]  JsonParseException  	9	8	replace
16	[BUG]  [BUGGY]  if((  expType  ==  NR_LONG)||(expType  ==  NR_LONG))  {  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]    if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {      [BUGGY]  if((  expType  ==  NR_LONG)||(expType  ==  NR_LONG))  {  [BUGGY]    _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((  expType  ==  NR_LONG)||(expType  ==  NR_LONG))  {	  if(_numTypesValid    ==    0)    {    	compilable	  [FE]  JsonParseException  	9	8	replace
17	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]    if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {      [BUGGY]  if((  _numTypesValid  ==  NR_LONG)||(expType  ==  NR_LONG))  {  [BUGGY]    _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	add	if((  _numTypesValid  ==  NR_LONG)||(expType  ==  NR_LONG))  {	  if(_numTypesValid    ==    0)    {    	compilable	  [FE]  JsonParseException  	9	8	replace
18	[BUG]  [BUGGY]  if((  _numTypesValid  ==  NR_LONG)||(expType  ==  NR_LONG))  {  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]    if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {      [BUGGY]  if((  _numTypesValid  ==  NR_LONG)||(expType  ==  NR_LONG))  {  [BUGGY]    _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((  _numTypesValid  ==  NR_LONG)||(expType  ==  NR_LONG))  {	  if(_numTypesValid    ==    0)    {    	compilable	  [FE]  JsonParseException  	9	8	replace
19	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]        JsonParseException    [CONTEXT]    if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {      [BUGGY]  if(_numTypesValid  ==  NR_LONG)  {  [BUGGY]    _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	add	if(_numTypesValid  ==  NR_LONG)  {	  if(_numTypesValid    ==    0)    {    	compilable	  [FE]  JsonParseException  	9	8	replace
20	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_LONG)  {  [FE]  JsonParseException  [FE]        JsonParseException    [CONTEXT]    if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {      [BUGGY]  if(_numTypesValid  ==  NR_LONG)  {  [BUGGY]    _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if(_numTypesValid  ==  NR_LONG)  {	  if(_numTypesValid    ==    0)    {    	compilable	  [FE]  JsonParseException  	9	8	replace
21	[BUG]  [BUGGY]  _numberLong  =  Long.parseLong(numStr);  [CE]  [FE]              JsonParseException    [CONTEXT]    if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {      [BUGGY]  _numberLong  =  Long.parseLong(numStr);  [BUGGY]    _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	_numberLong  =  Long.parseLong(numStr);	      	non-compiled	[CE]  	7	None	replace
22	[BUG]  [BUGGY]  _numberInt  =  Long.parseLong(numStr);  [CE]  [FE]                JsonParseException    [CONTEXT]    if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {      [BUGGY]  _numberInt  =  Long.parseLong(numStr);  [BUGGY]    _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	_numberInt  =  Long.parseLong(numStr);	      	non-compiled	[CE]  	7	None	replace
23	[BUG]  [BUGGY]  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  [CE]  [FE]                  JsonParseException    [CONTEXT]    if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {      [BUGGY]  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  [BUGGY]    _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	_numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;	      	non-compiled	[CE]  	7	None	replace
24	[BUG]  [BUGGY]  _numberLong  =  Long.parseLong(numStr);  expType  =  NR_LONG;  [CE]  [FE]                    JsonParseException    [CONTEXT]    if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {      [BUGGY]  _numberLong  =  Long.parseLong(numStr);  expType  =  NR_LONG;  [BUGGY]    _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	_numberLong  =  Long.parseLong(numStr);  expType  =  NR_LONG;	      	non-compiled	[CE]  	7	None	replace
25	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]    if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {      [BUGGY]  if((  expType  ==  NR_INT)&&(expType  ==  NR_BIGINT))  {  [BUGGY]    _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	add	if((  expType  ==  NR_INT)&&(expType  ==  NR_BIGINT))  {	  if((    expType    ==    NR_INT)||(expType    ==    NR_BIGINT))    {    	compilable	  [FE]  JsonParseException  	11	8	replace
26	[BUG]  [BUGGY]  if((  expType  ==  NR_INT)&&(expType  ==  NR_BIGINT))  {  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]    if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {      [BUGGY]  if((  expType  ==  NR_INT)&&(expType  ==  NR_BIGINT))  {  [BUGGY]    _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((  expType  ==  NR_INT)&&(expType  ==  NR_BIGINT))  {	  if((    expType    ==    NR_INT)||(expType    ==    NR_BIGINT))    {    	compilable	  [FE]  JsonParseException  	11	8	replace
27	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]    if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {      [BUGGY]  if((  expType  ==  NR_LONG)||(expType  ==  NR_BIGINT))  {  [BUGGY]    _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	add	if((  expType  ==  NR_LONG)||(expType  ==  NR_BIGINT))  {	  if((    expType    ==    NR_INT)||(expType    ==    NR_BIGINT))    {    	compilable	  [FE]  JsonParseException  	11	11	replace
28	[BUG]  [BUGGY]  if((  expType  ==  NR_LONG)||(expType  ==  NR_BIGINT))  {  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]    if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {      [BUGGY]  if((  expType  ==  NR_LONG)||(expType  ==  NR_BIGINT))  {  [BUGGY]    _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((  expType  ==  NR_LONG)||(expType  ==  NR_BIGINT))  {	  if((    expType    ==    NR_INT)||(expType    ==    NR_BIGINT))    {    	compilable	  [FE]  JsonParseException  	11	11	replace
29	[BUG]  [BUGGY]  if((  expType  ==  NR_LONG)||(expType  ==  NR_INT))  {  if((  expType  ==  NR_LONG)||(expType  ==  NR_INT))  {  [CE]  'catch'  without  'try'  [FE]    JsonParseException    [CONTEXT]    if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {      [BUGGY]  if((  expType  ==  NR_LONG)||(expType  ==  NR_INT))  {  if((  expType  ==  NR_LONG)||(expType  ==  NR_INT))  {  [BUGGY]    _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((    expType    ==    NR_LONG)||(expType    ==    NR_INT))    {    if((  expType  ==  NR_LONG)||(expType  ==  NR_INT))  {	  	non-compiled	[CE]  'catch'  without  'try'	1	None	add
30	[BUG]  [BUGGY]  if((  expType  ==  NR_LONG)||(expType  ==  NR_INT))  {  if((  expType  ==  NR_LONG)||(expType!=  NR_INT))  {  [CE]  'catch'  without  'try'  [FE]      JsonParseException    [CONTEXT]    if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {      [BUGGY]  if((  expType  ==  NR_LONG)||(expType  ==  NR_INT))  {  if((  expType  ==  NR_LONG)||(expType!=  NR_INT))  {  [BUGGY]    _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((    expType    ==    NR_LONG)||(expType    ==    NR_INT))    {    if((  expType  ==  NR_LONG)||(expType!=  NR_INT))  {	  	non-compiled	[CE]  'catch'  without  'try'	1	None	add
31	[BUG]  [BUGGY]  if((  expType  ==  NR_LONG)||(expType  ==  NR_INT))  {  if((  expType!=  NR_LONG)||(expType  ==  NR_INT))  {  [CE]  'catch'  without  'try'  [FE]        JsonParseException    [CONTEXT]    if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {      [BUGGY]  if((  expType  ==  NR_LONG)||(expType  ==  NR_INT))  {  if((  expType!=  NR_LONG)||(expType  ==  NR_INT))  {  [BUGGY]    _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((    expType    ==    NR_LONG)||(expType    ==    NR_INT))    {    if((  expType!=  NR_LONG)||(expType  ==  NR_INT))  {	  	non-compiled	[CE]  'catch'  without  'try'	1	None	add
32	[BUG]  [BUGGY]  if(_numTypesValid  ==  0)  {  if(_numTypesValid  ==  0)  {  [CE]  'catch'  without  'try'  [FE]    JsonParseException    [CONTEXT]    if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {      [BUGGY]  if(_numTypesValid  ==  0)  {  if(_numTypesValid  ==  0)  {  [BUGGY]    _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if(_numTypesValid    ==    0)    {    if(_numTypesValid  ==  0)  {	  	non-compiled	[CE]  'catch'  without  'try'	8	None	add
33	[BUG]  [BUGGY]  if(_numTypesValid  ==  0)  {  if(_numTypesValid!=  0)  {  [CE]  'catch'  without  'try'  [FE]      JsonParseException    [CONTEXT]    if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {      [BUGGY]  if(_numTypesValid  ==  0)  {  if(_numTypesValid!=  0)  {  [BUGGY]    _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if(_numTypesValid    ==    0)    {    if(_numTypesValid!=  0)  {	  	non-compiled	[CE]  'catch'  without  'try'	8	None	add
34	[BUG]  [BUGGY]  if(_numTypesValid  ==  0)  {  if(_numTypesValid  >=  0)  {  [CE]  'catch'  without  'try'  [FE]        JsonParseException    [CONTEXT]    if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {      [BUGGY]  if(_numTypesValid  ==  0)  {  if(_numTypesValid  >=  0)  {  [BUGGY]    _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if(_numTypesValid    ==    0)    {    if(_numTypesValid  >=  0)  {	  	non-compiled	[CE]  'catch'  without  'try'	8	None	add
35	[BUG]  [BUGGY]  if(_numTypesValid  ==  0)  {  If(_numTypesValid  ==  0)  {  [CE]  ';'  expected  [FE]          JsonParseException    [CONTEXT]    if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {      [BUGGY]  if(_numTypesValid  ==  0)  {  If(_numTypesValid  ==  0)  {  [BUGGY]    _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if(_numTypesValid    ==    0)    {    If(_numTypesValid  ==  0)  {	  	non-compiled	[CE]  ';'  expected	8	None	add
36	[BUG]  [BUGGY]  if((  expType  ==  NR_INT)||(expType  ==  NR_UNKNOWN))  {  if((  expType  ==  NR_INT)||(expType  ==  NR_UNKNOWN))  {  [CE]  'catch'  without  'try'  [FE]    JsonParseException    [CONTEXT]    if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {      [BUGGY]  if((  expType  ==  NR_INT)||(expType  ==  NR_UNKNOWN))  {  if((  expType  ==  NR_INT)||(expType  ==  NR_UNKNOWN))  {  [BUGGY]    _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((    expType    ==    NR_INT)||(expType    ==    NR_UNKNOWN))    {    if((  expType  ==  NR_INT)||(expType  ==  NR_UNKNOWN))  {	  	non-compiled	[CE]  'catch'  without  'try'	12	None	add
37	[BUG]  [BUGGY]  if((  expType  ==  NR_INT)||(expType  ==  NR_UNKNOWN))  {  if((  expType  ==  NR_INT)||(expType!=  NR_UNKNOWN))  {  [CE]  'catch'  without  'try'  [FE]      JsonParseException    [CONTEXT]    if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {      [BUGGY]  if((  expType  ==  NR_INT)||(expType  ==  NR_UNKNOWN))  {  if((  expType  ==  NR_INT)||(expType!=  NR_UNKNOWN))  {  [BUGGY]    _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((    expType    ==    NR_INT)||(expType    ==    NR_UNKNOWN))    {    if((  expType  ==  NR_INT)||(expType!=  NR_UNKNOWN))  {	  	non-compiled	[CE]  'catch'  without  'try'	12	None	add
38	[BUG]  [BUGGY]  if((  expType  ==  NR_INT)||(expType  ==  NR_UNKNOWN))  {  if((  expType!=  NR_INT)||(expType  ==  NR_UNKNOWN))  {  [CE]  'catch'  without  'try'  [FE]        JsonParseException    [CONTEXT]    if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {      [BUGGY]  if((  expType  ==  NR_INT)||(expType  ==  NR_UNKNOWN))  {  if((  expType!=  NR_INT)||(expType  ==  NR_UNKNOWN))  {  [BUGGY]    _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((    expType    ==    NR_INT)||(expType    ==    NR_UNKNOWN))    {    if((  expType!=  NR_INT)||(expType  ==  NR_UNKNOWN))  {	  	non-compiled	[CE]  'catch'  without  'try'	12	None	add
39	[BUG]  [BUGGY]  if((  expType  ==  NR_INT)||(expType  ==  NR_BIGINT))  {  if((  expType  ==  NR_INT)||(expType  ==  NR_BIGINT))  {  [CE]  'catch'  without  'try'  [FE]    JsonParseException    [CONTEXT]    if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {      [BUGGY]  if((  expType  ==  NR_INT)||(expType  ==  NR_BIGINT))  {  if((  expType  ==  NR_INT)||(expType  ==  NR_BIGINT))  {  [BUGGY]    _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((    expType    ==    NR_INT)||(expType    ==    NR_BIGINT))    {    if((  expType  ==  NR_INT)||(expType  ==  NR_BIGINT))  {	  	non-compiled	[CE]  'catch'  without  'try'	10	None	add
40	[BUG]  [BUGGY]  if((  expType  ==  NR_INT)||(expType  ==  NR_BIGINT))  {  if((  expType  ==  NR_INT)||(expType!=  NR_BIGINT))  {  [CE]  'catch'  without  'try'  [FE]      JsonParseException    [CONTEXT]    if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {      [BUGGY]  if((  expType  ==  NR_INT)||(expType  ==  NR_BIGINT))  {  if((  expType  ==  NR_INT)||(expType!=  NR_BIGINT))  {  [BUGGY]    _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((    expType    ==    NR_INT)||(expType    ==    NR_BIGINT))    {    if((  expType  ==  NR_INT)||(expType!=  NR_BIGINT))  {	  	non-compiled	[CE]  'catch'  without  'try'	10	None	add
41	[BUG]  [BUGGY]  if((  expType  ==  NR_INT)||(expType  ==  NR_BIGINT))  {  if((  expType!=  NR_INT)||(expType  ==  NR_BIGINT))  {  [CE]  'catch'  without  'try'  [FE]        JsonParseException    [CONTEXT]    if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {      [BUGGY]  if((  expType  ==  NR_INT)||(expType  ==  NR_BIGINT))  {  if((  expType!=  NR_INT)||(expType  ==  NR_BIGINT))  {  [BUGGY]    _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((    expType    ==    NR_INT)||(expType    ==    NR_BIGINT))    {    if((  expType!=  NR_INT)||(expType  ==  NR_BIGINT))  {	  	non-compiled	[CE]  'catch'  without  'try'	10	None	add
42	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]    if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {      [BUGGY]  if((  expType  ==  NR_LONG)||(expType  ==  NR_UNKNOWN))  {  [BUGGY]    _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	add	if((  expType  ==  NR_LONG)||(expType  ==  NR_UNKNOWN))  {	  if((    expType    ==    NR_INT)||(expType    ==    NR_UNKNOWN))    {    	compilable	  [FE]  JsonParseException  	13	10	replace
43	[BUG]  [BUGGY]  if((  expType  ==  NR_LONG)||(expType  ==  NR_UNKNOWN))  {  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]    if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {      [BUGGY]  if((  expType  ==  NR_LONG)||(expType  ==  NR_UNKNOWN))  {  [BUGGY]    _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((  expType  ==  NR_LONG)||(expType  ==  NR_UNKNOWN))  {	  if((    expType    ==    NR_INT)||(expType    ==    NR_UNKNOWN))    {    	compilable	  [FE]  JsonParseException  	13	10	replace
44	[BUG]  [BUGGY]  if((  expType  ==  NR_INTEGER)||(expType  ==  NR_BIGINT))  {  [CE]  cannot  find  symbol  NR_INTEGER  [FE]    JsonParseException    [CONTEXT]    if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {      [BUGGY]  if((  expType  ==  NR_INTEGER)||(expType  ==  NR_BIGINT))  {  [BUGGY]    _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((  expType  ==  NR_INTEGER)||(expType  ==  NR_BIGINT))  {	  if((    expType    ==    NR_INT)||(expType    ==    NR_BIGINT))    {    	non-compiled	[CE]  cannot  find  symbol  NR_INTEGER	11	None	replace
45	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]    if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {      [BUGGY]  if((  expType  ==  NR_LONG)||(expType!=  NR_INT))  {  [BUGGY]    _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	add	if((  expType  ==  NR_LONG)||(expType!=  NR_INT))  {	  if((    expType    ==    NR_INT)&&(expType!=    NR_LONG))    {    	compilable	  [FE]  JsonParseException  	6	15	replace
46	[BUG]  [BUGGY]  if((  expType  ==  NR_LONG)||(expType!=  NR_INT))  {  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]    if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {      [BUGGY]  if((  expType  ==  NR_LONG)||(expType!=  NR_INT))  {  [BUGGY]    _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((  expType  ==  NR_LONG)||(expType!=  NR_INT))  {	  if((    expType    ==    NR_INT)&&(expType!=    NR_LONG))    {    	compilable	  [FE]  JsonParseException  	6	15	replace
47	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]    if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {      [BUGGY]  if((  expType  ==  NR_LONG)&&(expType!=  NR_INT))  {  [BUGGY]    _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	add	if((  expType  ==  NR_LONG)&&(expType!=  NR_INT))  {	  if((    expType    ==    NR_INT)&&(expType!=    NR_LONG))    {    	compilable	  [FE]  JsonParseException  	6	8	replace
48	[BUG]  [BUGGY]  if((  expType  ==  NR_LONG)&&(expType!=  NR_INT))  {  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]    if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {      [BUGGY]  if((  expType  ==  NR_LONG)&&(expType!=  NR_INT))  {  [BUGGY]    _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((  expType  ==  NR_LONG)&&(expType!=  NR_INT))  {	  if((    expType    ==    NR_INT)&&(expType!=    NR_LONG))    {    	compilable	  [FE]  JsonParseException  	6	8	replace
49	[BUG]  [BUGGY]  _reportIntegral(numStr);  [CE]  [FE]              JsonParseException    [CONTEXT]    if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {      [BUGGY]  _reportIntegral(numStr);  [BUGGY]    _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	_reportIntegral(numStr);	      	non-compiled	[CE]  	7	None	replace
50	[BUG]  [BUGGY]  _parsingContext.setCurrentName(null);  [CE]  [FE]                JsonParseException    [CONTEXT]    if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {      [BUGGY]  _parsingContext.setCurrentName(null);  [BUGGY]    _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	_parsingContext.setCurrentName(null);	      	non-compiled	[CE]  	7	None	replace
51	[BUG]  [BUGGY]  _parsingContext.setCurrentLong(numStr);  [CE]  [FE]                  JsonParseException    [CONTEXT]    if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {      [BUGGY]  _parsingContext.setCurrentLong(numStr);  [BUGGY]    _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	_parsingContext.setCurrentLong(numStr);	      	non-compiled	[CE]  	7	None	replace
52	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]    if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {      [BUGGY]  if((  _numTypesValid  ==  NR_LONG)||(_numTypesValid  ==  NR_LONG))  {  [BUGGY]    _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	add	if((  _numTypesValid  ==  NR_LONG)||(_numTypesValid  ==  NR_LONG))  {	  if(_numTypesValid    ==    0)    {    	compilable	  [FE]  JsonParseException  	9	8	replace
53	[BUG]  [BUGGY]  if((  _numTypesValid  ==  NR_LONG)||(_numTypesValid  ==  NR_LONG))  {  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]    if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {      [BUGGY]  if((  _numTypesValid  ==  NR_LONG)||(_numTypesValid  ==  NR_LONG))  {  [BUGGY]    _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((  _numTypesValid  ==  NR_LONG)||(_numTypesValid  ==  NR_LONG))  {	  if(_numTypesValid    ==    0)    {    	compilable	  [FE]  JsonParseException  	9	8	replace
54	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]    if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {      [BUGGY]  if((  expType  ==  NR_UNKNOWN)||(expType  ==  NR_INT))  {  [BUGGY]    _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	add	if((  expType  ==  NR_UNKNOWN)||(expType  ==  NR_INT))  {	  if((    expType    ==    NR_INT)||(expType    ==    NR_UNKNOWN))    {    	compilable	  [FE]  JsonParseException  	13	10	replace
55	[BUG]  [BUGGY]  if((  expType  ==  NR_UNKNOWN)||(expType  ==  NR_INT))  {  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]    if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {      [BUGGY]  if((  expType  ==  NR_UNKNOWN)||(expType  ==  NR_INT))  {  [BUGGY]    _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((  expType  ==  NR_UNKNOWN)||(expType  ==  NR_INT))  {	  if((    expType    ==    NR_INT)||(expType    ==    NR_UNKNOWN))    {    	compilable	  [FE]  JsonParseException  	13	10	replace
56	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]    if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {      [BUGGY]  if((  expType  ==  NR_LONG)||(expType  ==  NR_FLOAT))  {  [BUGGY]    _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	add	if((  expType  ==  NR_LONG)||(expType  ==  NR_FLOAT))  {	  if(_numTypesValid    ==    0)    {    	compilable	  [FE]  JsonParseException  	9	8	replace
57	[BUG]  [BUGGY]  if((  expType  ==  NR_LONG)||(expType  ==  NR_FLOAT))  {  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]    if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {      [BUGGY]  if((  expType  ==  NR_LONG)||(expType  ==  NR_FLOAT))  {  [BUGGY]    _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((  expType  ==  NR_LONG)||(expType  ==  NR_FLOAT))  {	  if(_numTypesValid    ==    0)    {    	compilable	  [FE]  JsonParseException  	9	8	replace
58	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]    if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {      [BUGGY]  if((  expType  ==  NR_LONG)||(expType  ==  NR_DOUBLE))  {  [BUGGY]    _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	add	if((  expType  ==  NR_LONG)||(expType  ==  NR_DOUBLE))  {	  if(_numTypesValid    ==    0)    {    	compilable	  [FE]  JsonParseException  	9	10	replace
59	[BUG]  [BUGGY]  if((  expType  ==  NR_LONG)||(expType  ==  NR_DOUBLE))  {  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]    if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {      [BUGGY]  if((  expType  ==  NR_LONG)||(expType  ==  NR_DOUBLE))  {  [BUGGY]    _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((  expType  ==  NR_LONG)||(expType  ==  NR_DOUBLE))  {	  if(_numTypesValid    ==    0)    {    	compilable	  [FE]  JsonParseException  	9	10	replace
60	[BUG]  [BUGGY]  if((  expType  ==  NR_LONG)||(expType  ==  NR_INT))  {  if((  expType  >=  NR_LONG)||(expType  ==  NR_INT))  {  [CE]  'catch'  without  'try'  [FE]    JsonParseException    [CONTEXT]    if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {      [BUGGY]  if((  expType  ==  NR_LONG)||(expType  ==  NR_INT))  {  if((  expType  >=  NR_LONG)||(expType  ==  NR_INT))  {  [BUGGY]    _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((    expType    ==    NR_LONG)||(expType    ==    NR_INT))    {    if((  expType  >=  NR_LONG)||(expType  ==  NR_INT))  {	  	non-compiled	[CE]  'catch'  without  'try'	1	None	add
61	[BUG]  [BUGGY]  _parsingContext.setCurrentName(numStr);  [CE]  [FE]              JsonParseException    [CONTEXT]    if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {      [BUGGY]  _parsingContext.setCurrentName(numStr);  [BUGGY]    _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	_parsingContext.setCurrentName(numStr);	      	non-compiled	[CE]  	7	None	replace
62	[BUG]  [BUGGY]  _parsingContext  =  JsonReadContext.createRootContext(-1,  -1);  [CE]  [FE]                JsonParseException    [CONTEXT]    if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {      [BUGGY]  _parsingContext  =  JsonReadContext.createRootContext(-1,  -1);  [BUGGY]    _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	_parsingContext  =  JsonReadContext.createRootContext(-1,  -1);	      	non-compiled	[CE]  	7	None	replace
63	[BUG]  [BUGGY]  _parsingContext  =  JsonReadContext.createRootContext(null);  [CE]  [FE]                  JsonParseException    [CONTEXT]    if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {      [BUGGY]  _parsingContext  =  JsonReadContext.createRootContext(null);  [BUGGY]    _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	_parsingContext  =  JsonReadContext.createRootContext(null);	      	non-compiled	[CE]  	7	None	replace
64	[BUG]  [BUGGY]  if((  expType  ==  NR_INT)||(expType  ==  NR_BIGINT))  {  if((  expType  >=  NR_INT)||(expType  ==  NR_BIGINT))  {  [CE]  'catch'  without  'try'  [FE]    JsonParseException    [CONTEXT]    if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {      [BUGGY]  if((  expType  ==  NR_INT)||(expType  ==  NR_BIGINT))  {  if((  expType  >=  NR_INT)||(expType  ==  NR_BIGINT))  {  [BUGGY]    _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((    expType    ==    NR_INT)||(expType    ==    NR_BIGINT))    {    if((  expType  >=  NR_INT)||(expType  ==  NR_BIGINT))  {	  	non-compiled	[CE]  'catch'  without  'try'	10	None	add
65	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]    if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {      [BUGGY]  if((  expType  ==  NR_INT)&&(expType  ==  NR_UNKNOWN))  {  [BUGGY]    _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	add	if((  expType  ==  NR_INT)&&(expType  ==  NR_UNKNOWN))  {	  if((    expType    ==    NR_INT)||(expType    ==    NR_UNKNOWN))    {    	compilable	  [FE]  JsonParseException  	13	8	replace
66	[BUG]  [BUGGY]  if((  expType  ==  NR_INT)&&(expType  ==  NR_UNKNOWN))  {  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]    if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {      [BUGGY]  if((  expType  ==  NR_INT)&&(expType  ==  NR_UNKNOWN))  {  [BUGGY]    _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((  expType  ==  NR_INT)&&(expType  ==  NR_UNKNOWN))  {	  if((    expType    ==    NR_INT)||(expType    ==    NR_UNKNOWN))    {    	compilable	  [FE]  JsonParseException  	13	8	replace
