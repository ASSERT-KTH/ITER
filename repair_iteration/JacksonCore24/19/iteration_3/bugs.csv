bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  _numTypesValid  ==  NR_LONG)||(expType  ==  NR_BIGINT))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	add	if((  _numTypesValid  ==  NR_LONG)||(expType  ==  NR_BIGINT))  {	  if((    _numTypesValid    ==    NR_LONG)||(_numTypesValid    ==    NR_LONG))    {    	compilable	  [FE]  JsonParseException  	53	11	replace
2	[BUG]  [BUGGY]  if((  _numTypesValid  ==  NR_LONG)||(expType  ==  NR_BIGINT))  {  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  _numTypesValid  ==  NR_LONG)||(expType  ==  NR_BIGINT))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((  _numTypesValid  ==  NR_LONG)||(expType  ==  NR_BIGINT))  {	  if((    _numTypesValid    ==    NR_LONG)||(_numTypesValid    ==    NR_LONG))    {    	compilable	  [FE]  JsonParseException  	53	11	replace
3	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  _numTypesValid  ==  NR_LONG)||(_numTypesValid  ==  NR_UNKNOWN))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	add	if((  _numTypesValid  ==  NR_LONG)||(_numTypesValid  ==  NR_UNKNOWN))  {	  if((    _numTypesValid    ==    NR_LONG)||(_numTypesValid    ==    NR_LONG))    {    	compilable	  [FE]  JsonParseException  	53	15	replace
4	[BUG]  [BUGGY]  if((  _numTypesValid  ==  NR_LONG)||(_numTypesValid  ==  NR_UNKNOWN))  {  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  _numTypesValid  ==  NR_LONG)||(_numTypesValid  ==  NR_UNKNOWN))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((  _numTypesValid  ==  NR_LONG)||(_numTypesValid  ==  NR_UNKNOWN))  {	  if((    _numTypesValid    ==    NR_LONG)||(_numTypesValid    ==    NR_LONG))    {    	compilable	  [FE]  JsonParseException  	53	15	replace
5	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]        JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  _numTypesValid  ==  NR_LONG)||(expType  ==  NR_UNKNOWN))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	add	if((  _numTypesValid  ==  NR_LONG)||(expType  ==  NR_UNKNOWN))  {	  if((    _numTypesValid    ==    NR_LONG)||(_numTypesValid    ==    NR_LONG))    {    	compilable	  [FE]  JsonParseException  	53	10	replace
6	[BUG]  [BUGGY]  if((  _numTypesValid  ==  NR_LONG)||(expType  ==  NR_UNKNOWN))  {  [FE]  JsonParseException  [FE]        JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  _numTypesValid  ==  NR_LONG)||(expType  ==  NR_UNKNOWN))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((  _numTypesValid  ==  NR_LONG)||(expType  ==  NR_UNKNOWN))  {	  if((    _numTypesValid    ==    NR_LONG)||(_numTypesValid    ==    NR_LONG))    {    	compilable	  [FE]  JsonParseException  	53	10	replace
7	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]          JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  _numTypesValid  ==  NR_LONG)&&(_numTypesValid  ==  NR_LONG))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	add	if((  _numTypesValid  ==  NR_LONG)&&(_numTypesValid  ==  NR_LONG))  {	  if((    _numTypesValid    ==    NR_LONG)||(_numTypesValid    ==    NR_LONG))    {    	compilable	  [FE]  JsonParseException  	53	8	replace
8	[BUG]  [BUGGY]  if((  _numTypesValid  ==  NR_LONG)&&(_numTypesValid  ==  NR_LONG))  {  [FE]  JsonParseException  [FE]          JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  _numTypesValid  ==  NR_LONG)&&(_numTypesValid  ==  NR_LONG))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((  _numTypesValid  ==  NR_LONG)&&(_numTypesValid  ==  NR_LONG))  {	  if((    _numTypesValid    ==    NR_LONG)||(_numTypesValid    ==    NR_LONG))    {    	compilable	  [FE]  JsonParseException  	53	8	replace
9	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]          JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType  ==  NR_LONG)&&(expType!=  NR_LONG))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	add	if((  expType  ==  NR_LONG)&&(expType!=  NR_LONG))  {	  if((    expType    ==    NR_INT)&&(expType!=    NR_LONG))    {    if((    expType    ==    NR_INT)&&(expType    >>    NR_LONG))    {    	compilable	  [FE]  JsonParseException  	10	8	replace
10	[BUG]  [BUGGY]  if((  expType  ==  NR_LONG)&&(expType!=  NR_LONG))  {  [FE]  JsonParseException  [FE]          JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType  ==  NR_LONG)&&(expType!=  NR_LONG))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((  expType  ==  NR_LONG)&&(expType!=  NR_LONG))  {	  if((    expType    ==    NR_INT)&&(expType!=    NR_LONG))    {    if((    expType    ==    NR_INT)&&(expType    >>    NR_LONG))    {    	compilable	  [FE]  JsonParseException  	10	8	replace
11	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]            JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType  ==  NR_LONG)||(expType!=  NR_LONG))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	add	if((  expType  ==  NR_LONG)||(expType!=  NR_LONG))  {	  if((    expType    ==    NR_INT)&&(expType!=    NR_LONG))    {    if((    expType    ==    NR_INT)&&(expType    >>    NR_LONG))    {    	compilable	  [FE]  JsonParseException  	10	15	replace
12	[BUG]  [BUGGY]  if((  expType  ==  NR_LONG)||(expType!=  NR_LONG))  {  [FE]  JsonParseException  [FE]            JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType  ==  NR_LONG)||(expType!=  NR_LONG))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((  expType  ==  NR_LONG)||(expType!=  NR_LONG))  {	  if((    expType    ==    NR_INT)&&(expType!=    NR_LONG))    {    if((    expType    ==    NR_INT)&&(expType    >>    NR_LONG))    {    	compilable	  [FE]  JsonParseException  	10	15	replace
13	[BUG]  [BUGGY]  if(_numberNegative)  {  if((  expType  ==  NR_INT)||(expType  ==  NR_BIGINT))  {  [CE]  'catch'  without  'try'  [FE]        JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if(_numberNegative)  {  if((  expType  ==  NR_INT)||(expType  ==  NR_BIGINT))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if(_numberNegative)  {  if((  expType  ==  NR_INT)||(expType  ==  NR_BIGINT))  {	  if((    expType    ==    NR_INT)||(expType    ==    NR_BIGINT))    {    if((    expType    ==    NR_INT)||(expType    ==    NR_BIGINT))    {    	non-compiled	[CE]  'catch'  without  'try'	39	None	replace
14	[BUG]  [BUGGY]  if((  expType  ==  NR_INTEGER)||(expType  ==  NR_INTEGER))  {  [CE]  cannot  find  symbol  NR_INTEGER  [FE]          JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType  ==  NR_INTEGER)||(expType  ==  NR_INTEGER))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((  expType  ==  NR_INTEGER)||(expType  ==  NR_INTEGER))  {	  if((    expType    ==    NR_INT)||(expType    ==    NR_BIGINT))    {    if((    expType    ==    NR_INT)||(expType    ==    NR_BIGINT))    {    	non-compiled	[CE]  cannot  find  symbol  NR_INTEGER	39	None	replace
15	[BUG]  [BUGGY]  _reportIntegral(expType,  numStr);  [CE]  [FE]                  JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  _reportIntegral(expType,  numStr);  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	_reportIntegral(expType,  numStr);	  _reportIntegral(numStr);    	non-compiled	[CE]  	49	None	replace
16	[BUG]  [BUGGY]  _reportIntegral(expType);  [CE]  [FE]                    JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  _reportIntegral(expType);  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	_reportIntegral(expType);	  _reportIntegral(numStr);    	non-compiled	[CE]  	49	None	replace
17	[BUG]  [BUGGY]  _reportError(numStr);  [CE]  [FE]                      JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  _reportError(numStr);  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	_reportError(numStr);	  _reportIntegral(numStr);    	non-compiled	[CE]  	49	None	replace
18	[BUG]  [BUGGY]  _reportIntegral(expType,  0);  [CE]  [FE]                        JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  _reportIntegral(expType,  0);  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	_reportIntegral(expType,  0);	  _reportIntegral(numStr);    	non-compiled	[CE]  	49	None	replace
19	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]            JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType  ==  NR_UNKNOWN)||(expType  ==  NR_UNKNOWN))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	add	if((  expType  ==  NR_UNKNOWN)||(expType  ==  NR_UNKNOWN))  {	  if((    expType    ==    NR_INT)||(expType    ==    NR_UNKNOWN))    {    if((    expType!=    NR_INT)||(expType    ==    NR_UNKNOWN))    {    	compilable	  [FE]  JsonParseException  	38	10	replace
20	[BUG]  [BUGGY]  if((  expType  ==  NR_UNKNOWN)||(expType  ==  NR_UNKNOWN))  {  [FE]  JsonParseException  [FE]            JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType  ==  NR_UNKNOWN)||(expType  ==  NR_UNKNOWN))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((  expType  ==  NR_UNKNOWN)||(expType  ==  NR_UNKNOWN))  {	  if((    expType    ==    NR_INT)||(expType    ==    NR_UNKNOWN))    {    if((    expType!=    NR_INT)||(expType    ==    NR_UNKNOWN))    {    	compilable	  [FE]  JsonParseException  	38	10	replace
21	[BUG]  [BUGGY]  if((  expType  ==  0)||(expType  ==  0))  {  if((  expType!=  0)||(expType  ==  0))  {  [CE]  'catch'  without  'try'  [FE]              JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType  ==  0)||(expType  ==  0))  {  if((  expType!=  0)||(expType  ==  0))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((  expType  ==  0)||(expType  ==  0))  {  if((  expType!=  0)||(expType  ==  0))  {	  if((    expType    ==    NR_INT)||(expType    ==    NR_UNKNOWN))    {    if((    expType!=    NR_INT)||(expType    ==    NR_UNKNOWN))    {    	non-compiled	[CE]  'catch'  without  'try'	38	None	replace
22	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType  ==  NR_INT)||(expType  ==  NR_LONG)||(expType  ==  NR_BIGINT))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	add	if((  expType  ==  NR_INT)||(expType  ==  NR_LONG)||(expType  ==  NR_BIGINT))  {	  if((    expType    ==    NR_INT)&&(expType    ==    NR_LONG)||(expType    ==    NR_BIGINT))    {    	compilable	  [FE]  JsonParseException  	14	11	replace
23	[BUG]  [BUGGY]  if((  expType  ==  NR_INT)||(expType  ==  NR_LONG)||(expType  ==  NR_BIGINT))  {  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType  ==  NR_INT)||(expType  ==  NR_LONG)||(expType  ==  NR_BIGINT))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((  expType  ==  NR_INT)||(expType  ==  NR_LONG)||(expType  ==  NR_BIGINT))  {	  if((    expType    ==    NR_INT)&&(expType    ==    NR_LONG)||(expType    ==    NR_BIGINT))    {    	compilable	  [FE]  JsonParseException  	14	11	replace
24	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType  ==  NR_LONG)&&(expType  ==  NR_INT)||(expType  ==  NR_BIGINT))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	add	if((  expType  ==  NR_LONG)&&(expType  ==  NR_INT)||(expType  ==  NR_BIGINT))  {	  if((    expType    ==    NR_INT)&&(expType    ==    NR_LONG)||(expType    ==    NR_BIGINT))    {    	compilable	  [FE]  JsonParseException  	14	11	replace
25	[BUG]  [BUGGY]  if((  expType  ==  NR_LONG)&&(expType  ==  NR_INT)||(expType  ==  NR_BIGINT))  {  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType  ==  NR_LONG)&&(expType  ==  NR_INT)||(expType  ==  NR_BIGINT))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((  expType  ==  NR_LONG)&&(expType  ==  NR_INT)||(expType  ==  NR_BIGINT))  {	  if((    expType    ==    NR_INT)&&(expType    ==    NR_LONG)||(expType    ==    NR_BIGINT))    {    	compilable	  [FE]  JsonParseException  	14	11	replace
26	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]        JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType  ==  NR_INT)&&(expType  ==  NR_BIGINT)||(expType  ==  NR_LONG))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	add	if((  expType  ==  NR_INT)&&(expType  ==  NR_BIGINT)||(expType  ==  NR_LONG))  {	  if((    expType    ==    NR_INT)&&(expType    ==    NR_LONG)||(expType    ==    NR_BIGINT))    {    	compilable	  [FE]  JsonParseException  	14	8	replace
27	[BUG]  [BUGGY]  if((  expType  ==  NR_INT)&&(expType  ==  NR_BIGINT)||(expType  ==  NR_LONG))  {  [FE]  JsonParseException  [FE]        JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType  ==  NR_INT)&&(expType  ==  NR_BIGINT)||(expType  ==  NR_LONG))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((  expType  ==  NR_INT)&&(expType  ==  NR_BIGINT)||(expType  ==  NR_LONG))  {	  if((    expType    ==    NR_INT)&&(expType    ==    NR_LONG)||(expType    ==    NR_BIGINT))    {    	compilable	  [FE]  JsonParseException  	14	8	replace
28	[BUG]  [BUGGY]  if((  expType  ==  NR_LONG)&&(expType!=  NR_INT))  {  if((  expType  ==  NR_LONG)&&(expType!=  NR_INT))  {  [CE]  'catch'  without  'try'  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType  ==  NR_LONG)&&(expType!=  NR_INT))  {  if((  expType  ==  NR_LONG)&&(expType!=  NR_INT))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((    expType    ==    NR_LONG)&&(expType!=    NR_INT))    {    if((  expType  ==  NR_LONG)&&(expType!=  NR_INT))  {	  	non-compiled	[CE]  'catch'  without  'try'	47	None	add
29	[BUG]  [BUGGY]  if((  expType  ==  NR_LONG)&&(expType!=  NR_INT))  {  if((  expType  ==  NR_LONG)&&(expType  >>  NR_INT))  {  [CE]  'catch'  without  'try'  [FE]      JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType  ==  NR_LONG)&&(expType!=  NR_INT))  {  if((  expType  ==  NR_LONG)&&(expType  >>  NR_INT))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((    expType    ==    NR_LONG)&&(expType!=    NR_INT))    {    if((  expType  ==  NR_LONG)&&(expType  >>  NR_INT))  {	  	non-compiled	[CE]  'catch'  without  'try'	47	None	add
30	[BUG]  [BUGGY]  if((  expType  ==  NR_LONG)&&(expType!=  NR_INT))  {  if((  expType  ==  NR_LONG)&&(expType  >=  NR_INT))  {  [CE]  'catch'  without  'try'  [FE]        JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType  ==  NR_LONG)&&(expType!=  NR_INT))  {  if((  expType  ==  NR_LONG)&&(expType  >=  NR_INT))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((    expType    ==    NR_LONG)&&(expType!=    NR_INT))    {    if((  expType  ==  NR_LONG)&&(expType  >=  NR_INT))  {	  	non-compiled	[CE]  'catch'  without  'try'	47	None	add
31	[BUG]  [BUGGY]  if((  expType  ==  NR_LONG)&&(expType!=  NR_INT))  {  if((  expType!=  NR_LONG)&&(expType!=  NR_INT))  {  [CE]  'catch'  without  'try'  [FE]          JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType  ==  NR_LONG)&&(expType!=  NR_INT))  {  if((  expType!=  NR_LONG)&&(expType!=  NR_INT))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((    expType    ==    NR_LONG)&&(expType!=    NR_INT))    {    if((  expType!=  NR_LONG)&&(expType!=  NR_INT))  {	  	non-compiled	[CE]  'catch'  without  'try'	47	None	add
32	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]          JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType  ==  NR_LONG)&&(expType  ==  NR_BIGINT))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	add	if((  expType  ==  NR_LONG)&&(expType  ==  NR_BIGINT))  {	  if((    expType    ==    NR_INT)&&(expType    ==    NR_LONG))    {    if((    expType!=    NR_INT)&&(expType    ==    NR_LONG))    {    	compilable	  [FE]  JsonParseException  	6	8	replace
33	[BUG]  [BUGGY]  if((  expType  ==  NR_LONG)&&(expType  ==  NR_BIGINT))  {  [FE]  JsonParseException  [FE]          JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType  ==  NR_LONG)&&(expType  ==  NR_BIGINT))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((  expType  ==  NR_LONG)&&(expType  ==  NR_BIGINT))  {	  if((    expType    ==    NR_INT)&&(expType    ==    NR_LONG))    {    if((    expType!=    NR_INT)&&(expType    ==    NR_LONG))    {    	compilable	  [FE]  JsonParseException  	6	8	replace
34	[BUG]  [BUGGY]  if((  expType  ==  NR_LONG)||(expType  ==  NR_DECIMAL))  {  [CE]  cannot  find  symbol  NR_DECIMAL  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType  ==  NR_LONG)||(expType  ==  NR_DECIMAL))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((  expType  ==  NR_LONG)||(expType  ==  NR_DECIMAL))  {	  if((    _numTypesValid    ==    NR_LONG)||(expType    ==    NR_LONG))    {    	non-compiled	[CE]  cannot  find  symbol  NR_DECIMAL	18	None	replace
35	[BUG]  [BUGGY]  if((  _numTypesValid  ==  NR_LONG)||(expType  ==  NR_LONG))  {  if((  _numTypesValid  ==  NR_LONG)||(expType  ==  NR_LONG))  {  [CE]  'catch'  without  'try'  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  _numTypesValid  ==  NR_LONG)||(expType  ==  NR_LONG))  {  if((  _numTypesValid  ==  NR_LONG)||(expType  ==  NR_LONG))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((    _numTypesValid    ==    NR_LONG)||(expType    ==    NR_LONG))    {    if((  _numTypesValid  ==  NR_LONG)||(expType  ==  NR_LONG))  {	  	non-compiled	[CE]  'catch'  without  'try'	17	None	add
36	[BUG]  [BUGGY]  if((  _numTypesValid  ==  NR_LONG)||(expType  ==  NR_LONG))  {  if((  _numTypesValid  ==  NR_LONG)||(expType!=  NR_LONG))  {  [CE]  'catch'  without  'try'  [FE]      JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  _numTypesValid  ==  NR_LONG)||(expType  ==  NR_LONG))  {  if((  _numTypesValid  ==  NR_LONG)||(expType!=  NR_LONG))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((    _numTypesValid    ==    NR_LONG)||(expType    ==    NR_LONG))    {    if((  _numTypesValid  ==  NR_LONG)||(expType!=  NR_LONG))  {	  	non-compiled	[CE]  'catch'  without  'try'	17	None	add
37	[BUG]  [BUGGY]  if((  _numTypesValid  ==  NR_LONG)||(expType  ==  NR_LONG))  {  if((  _numTypesValid!=  NR_LONG)||(expType  ==  NR_LONG))  {  [CE]  'catch'  without  'try'  [FE]        JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  _numTypesValid  ==  NR_LONG)||(expType  ==  NR_LONG))  {  if((  _numTypesValid!=  NR_LONG)||(expType  ==  NR_LONG))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((    _numTypesValid    ==    NR_LONG)||(expType    ==    NR_LONG))    {    if((  _numTypesValid!=  NR_LONG)||(expType  ==  NR_LONG))  {	  	non-compiled	[CE]  'catch'  without  'try'	17	None	add
38	[BUG]  [BUGGY]  _numberLong  =  Long.parseLong(expType);  [CE]  [FE]                  JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  _numberLong  =  Long.parseLong(expType);  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	_numberLong  =  Long.parseLong(expType);	  _numberLong    =    Long.parseLong(numStr);    	non-compiled	[CE]  	21	None	replace
39	[BUG]  [BUGGY]  _numberLong  =  Integer.parseInt(numStr);  [CE]  [FE]                    JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  _numberLong  =  Integer.parseInt(numStr);  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	_numberLong  =  Integer.parseInt(numStr);	  _numberLong    =    Long.parseLong(numStr);    	non-compiled	[CE]  	21	None	replace
40	[BUG]  [BUGGY]  _parsingContext.setCurrentName(name);  [CE]  [FE]                  JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  _parsingContext.setCurrentName(name);  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	_parsingContext.setCurrentName(name);	  _parsingContext.setCurrentName(numStr);    	non-compiled	[CE]  	61	None	replace
41	[BUG]  [BUGGY]  _numberInt  =  Integer.parseInt(numStr);  [CE]  [FE]                    JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  _numberInt  =  Integer.parseInt(numStr);  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	_numberInt  =  Integer.parseInt(numStr);	  _numberInt    =    Long.parseLong(numStr);    	non-compiled	[CE]  	22	None	replace
42	[BUG]  [BUGGY]  _numberInt  =  Long.parseLong(expType);  [CE]  [FE]                      JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  _numberInt  =  Long.parseLong(expType);  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	_numberInt  =  Long.parseLong(expType);	  _numberInt    =    Long.parseLong(numStr);    	non-compiled	[CE]  	22	None	replace
43	[BUG]  [BUGGY]  if((  expType  ==  NR_LONG)||(expType  ==  NR_UNKNOWN))  {  if((  expType  ==  NR_LONG)||(expType  ==  NR_UNKNOWN))  {  [CE]  'catch'  without  'try'  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType  ==  NR_LONG)||(expType  ==  NR_UNKNOWN))  {  if((  expType  ==  NR_LONG)||(expType  ==  NR_UNKNOWN))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((    expType    ==    NR_LONG)||(expType    ==    NR_UNKNOWN))    {    if((  expType  ==  NR_LONG)||(expType  ==  NR_UNKNOWN))  {	  	non-compiled	[CE]  'catch'  without  'try'	42	None	add
44	[BUG]  [BUGGY]  if((  expType  ==  NR_LONG)||(expType  ==  NR_UNKNOWN))  {  if((  expType  ==  NR_LONG)||(expType!=  NR_UNKNOWN))  {  [CE]  'catch'  without  'try'  [FE]      JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType  ==  NR_LONG)||(expType  ==  NR_UNKNOWN))  {  if((  expType  ==  NR_LONG)||(expType!=  NR_UNKNOWN))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((    expType    ==    NR_LONG)||(expType    ==    NR_UNKNOWN))    {    if((  expType  ==  NR_LONG)||(expType!=  NR_UNKNOWN))  {	  	non-compiled	[CE]  'catch'  without  'try'	42	None	add
45	[BUG]  [BUGGY]  if((  expType  ==  NR_LONG)||(expType  ==  NR_UNKNOWN))  {  if((  expType!=  NR_LONG)||(expType  ==  NR_UNKNOWN))  {  [CE]  'catch'  without  'try'  [FE]        JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType  ==  NR_LONG)||(expType  ==  NR_UNKNOWN))  {  if((  expType!=  NR_LONG)||(expType  ==  NR_UNKNOWN))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((    expType    ==    NR_LONG)||(expType    ==    NR_UNKNOWN))    {    if((  expType!=  NR_LONG)||(expType  ==  NR_UNKNOWN))  {	  	non-compiled	[CE]  'catch'  without  'try'	42	None	add
46	[BUG]  [BUGGY]  if(_numberNegative)  {  if((  expType  ==  NR_LONG)||(expType!=  NR_INT))  {  [CE]  'catch'  without  'try'  [FE]          JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if(_numberNegative)  {  if((  expType  ==  NR_LONG)||(expType!=  NR_INT))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if(_numberNegative)  {  if((  expType  ==  NR_LONG)||(expType!=  NR_INT))  {	  if((    expType    ==    NR_LONG)||(expType    ==    NR_INT))    {    if((    expType    ==    NR_LONG)||(expType!=    NR_INT))    {    	non-compiled	[CE]  'catch'  without  'try'	30	None	replace
47	[BUG]  [BUGGY]  if((  expType  ==  NR_INT)&&(expType  ==  NR_LONG)||(expType  ==  NR_BIGINT))  {  if((  expType  ==  NR_INT)&&(expType  ==  NR_LONG)||(expType  ==  NR_BIGINT))  {  [CE]  'catch'  without  'try'  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType  ==  NR_INT)&&(expType  ==  NR_LONG)||(expType  ==  NR_BIGINT))  {  if((  expType  ==  NR_INT)&&(expType  ==  NR_LONG)||(expType  ==  NR_BIGINT))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((    expType    ==    NR_INT)&&(expType    ==    NR_LONG)||(expType    ==    NR_BIGINT))    {    if((  expType  ==  NR_INT)&&(expType  ==  NR_LONG)||(expType  ==  NR_BIGINT))  {	  	non-compiled	[CE]  'catch'  without  'try'	13	None	add
48	[BUG]  [BUGGY]  if((  expType  ==  NR_INT)&&(expType  ==  NR_LONG)||(expType  ==  NR_BIGINT))  {  if((  expType  ==  NR_INT)&&(expType  ==  NR_LONG)||(expType!=  NR_BIGINT))  {  [CE]  'catch'  without  'try'  [FE]      JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType  ==  NR_INT)&&(expType  ==  NR_LONG)||(expType  ==  NR_BIGINT))  {  if((  expType  ==  NR_INT)&&(expType  ==  NR_LONG)||(expType!=  NR_BIGINT))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((    expType    ==    NR_INT)&&(expType    ==    NR_LONG)||(expType    ==    NR_BIGINT))    {    if((  expType  ==  NR_INT)&&(expType  ==  NR_LONG)||(expType!=  NR_BIGINT))  {	  	non-compiled	[CE]  'catch'  without  'try'	13	None	add
49	[BUG]  [BUGGY]  if((  expType  ==  NR_INT)&&(expType  ==  NR_LONG)||(expType  ==  NR_BIGINT))  {  if((  expType  ==  NR_INT)&&(expType!=  NR_LONG)||(expType  ==  NR_BIGINT))  {  [CE]  'catch'  without  'try'  [FE]        JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType  ==  NR_INT)&&(expType  ==  NR_LONG)||(expType  ==  NR_BIGINT))  {  if((  expType  ==  NR_INT)&&(expType!=  NR_LONG)||(expType  ==  NR_BIGINT))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((    expType    ==    NR_INT)&&(expType    ==    NR_LONG)||(expType    ==    NR_BIGINT))    {    if((  expType  ==  NR_INT)&&(expType!=  NR_LONG)||(expType  ==  NR_BIGINT))  {	  	non-compiled	[CE]  'catch'  without  'try'	13	None	add
50	[BUG]  [BUGGY]  if((  expType  ==  NR_INT)&&(expType  ==  NR_LONG)||(expType  ==  NR_BIGINT))  {  if((  expType!=  NR_INT)&&(expType  ==  NR_LONG)||(expType  ==  NR_BIGINT))  {  [CE]  'catch'  without  'try'  [FE]          JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType  ==  NR_INT)&&(expType  ==  NR_LONG)||(expType  ==  NR_BIGINT))  {  if((  expType!=  NR_INT)&&(expType  ==  NR_LONG)||(expType  ==  NR_BIGINT))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((    expType    ==    NR_INT)&&(expType    ==    NR_LONG)||(expType    ==    NR_BIGINT))    {    if((  expType!=  NR_INT)&&(expType  ==  NR_LONG)||(expType  ==  NR_BIGINT))  {	  	non-compiled	[CE]  'catch'  without  'try'	13	None	add
51	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]          JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType  ==  NR_INT)||(expType!=  NR_BIGINT))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	add	if((  expType  ==  NR_INT)||(expType!=  NR_BIGINT))  {	  if((    expType    ==    NR_INT)||(expType    ==    NR_BIGINT))    {    if((    expType    ==    NR_INT)||(expType!=    NR_BIGINT))    {    	compilable	  [FE]  JsonParseException  	40	12	replace
52	[BUG]  [BUGGY]  if((  expType  ==  NR_INT)||(expType!=  NR_BIGINT))  {  [FE]  JsonParseException  [FE]          JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType  ==  NR_INT)||(expType!=  NR_BIGINT))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((  expType  ==  NR_INT)||(expType!=  NR_BIGINT))  {	  if((    expType    ==    NR_INT)||(expType    ==    NR_BIGINT))    {    if((    expType    ==    NR_INT)||(expType!=    NR_BIGINT))    {    	compilable	  [FE]  JsonParseException  	40	12	replace
53	[BUG]  [BUGGY]  if(_numberNegative)  {  if((  expType  ==  NR_INT)||(expType!=  NR_BIGINT))  {  [CE]  'catch'  without  'try'  [FE]            JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if(_numberNegative)  {  if((  expType  ==  NR_INT)||(expType!=  NR_BIGINT))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if(_numberNegative)  {  if((  expType  ==  NR_INT)||(expType!=  NR_BIGINT))  {	  if((    expType    ==    NR_INT)||(expType    ==    NR_BIGINT))    {    if((    expType    ==    NR_INT)||(expType!=    NR_BIGINT))    {    	non-compiled	[CE]  'catch'  without  'try'	40	None	replace
54	[BUG]  [BUGGY]  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_INT;  [CE]  [FE]                      JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_INT;  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	_numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_INT;	  _numberLong    =    Long.parseLong(numStr);    _numTypesValid    =    NR_LONG;    	non-compiled	[CE]  	23	None	replace
55	[BUG]  [BUGGY]  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_BIGINT;  [CE]  [FE]                        JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_BIGINT;  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	_numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_BIGINT;	  _numberLong    =    Long.parseLong(numStr);    _numTypesValid    =    NR_LONG;    	non-compiled	[CE]  	23	None	replace
56	[BUG]  [BUGGY]  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_UNKNOWN;  [CE]  [FE]                          JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_UNKNOWN;  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	_numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_UNKNOWN;	  _numberLong    =    Long.parseLong(numStr);    _numTypesValid    =    NR_LONG;    	non-compiled	[CE]  	23	None	replace
57	[BUG]  [BUGGY]  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_OBJECT;  [CE]  [FE]                            JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_OBJECT;  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	_numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_OBJECT;	  _numberLong    =    Long.parseLong(numStr);    _numTypesValid    =    NR_LONG;    	non-compiled	[CE]  	23	None	replace
58	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType  ==  NR_LONG)&&(expType  ==  NR_UNKNOWN))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	add	if((  expType  ==  NR_LONG)&&(expType  ==  NR_UNKNOWN))  {	  if((    expType    ==    NR_LONG)||(expType    ==    NR_UNKNOWN))    {    	compilable	  [FE]  JsonParseException  	43	8	replace
59	[BUG]  [BUGGY]  if((  expType  ==  NR_LONG)&&(expType  ==  NR_UNKNOWN))  {  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType  ==  NR_LONG)&&(expType  ==  NR_UNKNOWN))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((  expType  ==  NR_LONG)&&(expType  ==  NR_UNKNOWN))  {	  if((    expType    ==    NR_LONG)||(expType    ==    NR_UNKNOWN))    {    	compilable	  [FE]  JsonParseException  	43	8	replace
60	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType  ==  NR_UNKNOWN)||(expType  ==  NR_LONG))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	add	if((  expType  ==  NR_UNKNOWN)||(expType  ==  NR_LONG))  {	  if((    expType    ==    NR_LONG)||(expType    ==    NR_UNKNOWN))    {    	compilable	  [FE]  JsonParseException  	43	10	replace
61	[BUG]  [BUGGY]  if((  expType  ==  NR_UNKNOWN)||(expType  ==  NR_LONG))  {  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType  ==  NR_UNKNOWN)||(expType  ==  NR_LONG))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((  expType  ==  NR_UNKNOWN)||(expType  ==  NR_LONG))  {	  if((    expType    ==    NR_LONG)||(expType    ==    NR_UNKNOWN))    {    	compilable	  [FE]  JsonParseException  	43	10	replace
62	[BUG]  [BUGGY]  if((  expType  ==  NR_INT)&&(expType  ==  NR_UNKNOWN))  {  if((  expType  ==  NR_INT)&&(expType  ==  NR_UNKNOWN))  {  [CE]  'catch'  without  'try'  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType  ==  NR_INT)&&(expType  ==  NR_UNKNOWN))  {  if((  expType  ==  NR_INT)&&(expType  ==  NR_UNKNOWN))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((    expType    ==    NR_INT)&&(expType    ==    NR_UNKNOWN))    {    if((  expType  ==  NR_INT)&&(expType  ==  NR_UNKNOWN))  {	  	non-compiled	[CE]  'catch'  without  'try'	65	None	add
63	[BUG]  [BUGGY]  if((  expType  ==  NR_INT)&&(expType  ==  NR_UNKNOWN))  {  if((  expType!=  NR_INT)&&(expType  ==  NR_UNKNOWN))  {  [CE]  'catch'  without  'try'  [FE]      JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType  ==  NR_INT)&&(expType  ==  NR_UNKNOWN))  {  if((  expType!=  NR_INT)&&(expType  ==  NR_UNKNOWN))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((    expType    ==    NR_INT)&&(expType    ==    NR_UNKNOWN))    {    if((  expType!=  NR_INT)&&(expType  ==  NR_UNKNOWN))  {	  	non-compiled	[CE]  'catch'  without  'try'	65	None	add
64	[BUG]  [BUGGY]  if((  expType  ==  NR_INT)&&(expType  ==  NR_UNKNOWN))  {  if((  expType  ==  NR_INT)&&(expType!=  NR_UNKNOWN))  {  [CE]  'catch'  without  'try'  [FE]        JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType  ==  NR_INT)&&(expType  ==  NR_UNKNOWN))  {  if((  expType  ==  NR_INT)&&(expType!=  NR_UNKNOWN))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((    expType    ==    NR_INT)&&(expType    ==    NR_UNKNOWN))    {    if((  expType  ==  NR_INT)&&(expType!=  NR_UNKNOWN))  {	  	non-compiled	[CE]  'catch'  without  'try'	65	None	add
65	[BUG]  [BUGGY]  if((  expType  ==  NR_INT)&&(expType  ==  NR_UNKNOWN))  {  if((  expType  >=  NR_INT)&&(expType  ==  NR_UNKNOWN))  {  [CE]  'catch'  without  'try'  [FE]          JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType  ==  NR_INT)&&(expType  ==  NR_UNKNOWN))  {  if((  expType  >=  NR_INT)&&(expType  ==  NR_UNKNOWN))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((    expType    ==    NR_INT)&&(expType    ==    NR_UNKNOWN))    {    if((  expType  >=  NR_INT)&&(expType  ==  NR_UNKNOWN))  {	  	non-compiled	[CE]  'catch'  without  'try'	65	None	add
66	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType  ==  NR_INT)&&(expType  ==  NR_BIGINT)||(expType  ==  NR_UNKNOWN))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	add	if((  expType  ==  NR_INT)&&(expType  ==  NR_BIGINT)||(expType  ==  NR_UNKNOWN))  {	  if((    expType    ==    NR_INT)&&(expType    ==    NR_BIGINT))    {    	compilable	  [FE]  JsonParseException  	26	10	replace
67	[BUG]  [BUGGY]  if((  expType  ==  NR_INT)&&(expType  ==  NR_BIGINT)||(expType  ==  NR_UNKNOWN))  {  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType  ==  NR_INT)&&(expType  ==  NR_BIGINT)||(expType  ==  NR_UNKNOWN))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((  expType  ==  NR_INT)&&(expType  ==  NR_BIGINT)||(expType  ==  NR_UNKNOWN))  {	  if((    expType    ==    NR_INT)&&(expType    ==    NR_BIGINT))    {    	compilable	  [FE]  JsonParseException  	26	10	replace
68	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType  ==  NR_INT)&&(expType  ==  NR_BIGINT)||(expType  ==  NR_DOUBLE))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	add	if((  expType  ==  NR_INT)&&(expType  ==  NR_BIGINT)||(expType  ==  NR_DOUBLE))  {	  if((    expType    ==    NR_INT)&&(expType    ==    NR_BIGINT))    {    	compilable	  [FE]  JsonParseException  	26	10	replace
69	[BUG]  [BUGGY]  if((  expType  ==  NR_INT)&&(expType  ==  NR_BIGINT)||(expType  ==  NR_DOUBLE))  {  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType  ==  NR_INT)&&(expType  ==  NR_BIGINT)||(expType  ==  NR_DOUBLE))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((  expType  ==  NR_INT)&&(expType  ==  NR_BIGINT)||(expType  ==  NR_DOUBLE))  {	  if((    expType    ==    NR_INT)&&(expType    ==    NR_BIGINT))    {    	compilable	  [FE]  JsonParseException  	26	10	replace
70	[BUG]  [BUGGY]  if((  expType  ==  NR_LONG)||(expType  ==  NR_UNQUOTED))  {  [CE]  cannot  find  symbol  NR_UNQUOTED  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType  ==  NR_LONG)||(expType  ==  NR_UNQUOTED))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((  expType  ==  NR_LONG)||(expType  ==  NR_UNQUOTED))  {	  if((    expType    ==    NR_LONG)||(expType    ==    NR_LONG))    {    	non-compiled	[CE]  cannot  find  symbol  NR_UNQUOTED	16	None	replace
71	[BUG]  [BUGGY]  if(_numberNegative)  {  if((  expType  ==  NR_LONG)||(expType  ==  NR_INT))  {  [CE]  'catch'  without  'try'  [FE]        JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if(_numberNegative)  {  if((  expType  ==  NR_LONG)||(expType  ==  NR_INT))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if(_numberNegative)  {  if((  expType  ==  NR_LONG)||(expType  ==  NR_INT))  {	  if((    expType    ==    NR_LONG)||(expType    ==    NR_INT))    {    if((    expType    ==    NR_LONG)||(expType    ==    NR_INT))    {    	non-compiled	[CE]  'catch'  without  'try'	29	None	replace
72	[BUG]  [BUGGY]  if((  expType  ==  0)||(expType  ==  0))  {  if((  expType  ==  0)||(expType  ==  0))  {  [CE]  'catch'  without  'try'  [FE]          JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType  ==  0)||(expType  ==  0))  {  if((  expType  ==  0)||(expType  ==  0))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((  expType  ==  0)||(expType  ==  0))  {  if((  expType  ==  0)||(expType  ==  0))  {	  if((    expType    ==    NR_LONG)||(expType    ==    NR_INT))    {    if((    expType    ==    NR_LONG)||(expType    ==    NR_INT))    {    	non-compiled	[CE]  'catch'  without  'try'	29	None	replace
73	[BUG]  [BUGGY]  if((  expType  ==  NR_LONG)&&(expType  ==  NR_INT))  {  if((  expType  ==  NR_LONG)&&(expType  ==  NR_INT))  {  [CE]  'catch'  without  'try'  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType  ==  NR_LONG)&&(expType  ==  NR_INT))  {  if((  expType  ==  NR_LONG)&&(expType  ==  NR_INT))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((    expType    ==    NR_LONG)&&(expType    ==    NR_INT))    {    if((  expType  ==  NR_LONG)&&(expType  ==  NR_INT))  {	  	non-compiled	[CE]  'catch'  without  'try'	1	None	add
74	[BUG]  [BUGGY]  if((  expType  ==  NR_LONG)&&(expType  ==  NR_INT))  {  if((  expType!=  NR_LONG)&&(expType  ==  NR_INT))  {  [CE]  'catch'  without  'try'  [FE]      JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType  ==  NR_LONG)&&(expType  ==  NR_INT))  {  if((  expType!=  NR_LONG)&&(expType  ==  NR_INT))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((    expType    ==    NR_LONG)&&(expType    ==    NR_INT))    {    if((  expType!=  NR_LONG)&&(expType  ==  NR_INT))  {	  	non-compiled	[CE]  'catch'  without  'try'	1	None	add
75	[BUG]  [BUGGY]  if((  expType  ==  NR_LONG)&&(expType  ==  NR_INT))  {  if((  expType  ==  NR_LONG)&&(expType!=  NR_INT))  {  [CE]  'catch'  without  'try'  [FE]        JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType  ==  NR_LONG)&&(expType  ==  NR_INT))  {  if((  expType  ==  NR_LONG)&&(expType!=  NR_INT))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((    expType    ==    NR_LONG)&&(expType    ==    NR_INT))    {    if((  expType  ==  NR_LONG)&&(expType!=  NR_INT))  {	  	non-compiled	[CE]  'catch'  without  'try'	1	None	add
76	[BUG]  [BUGGY]  if((  expType  ==  NR_LONG)&&(expType  ==  NR_INT))  {  if((  expType  >=  NR_LONG)&&(expType  ==  NR_INT))  {  [CE]  'catch'  without  'try'  [FE]          JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType  ==  NR_LONG)&&(expType  ==  NR_INT))  {  if((  expType  >=  NR_LONG)&&(expType  ==  NR_INT))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((    expType    ==    NR_LONG)&&(expType    ==    NR_INT))    {    if((  expType  >=  NR_LONG)&&(expType  ==  NR_INT))  {	  	non-compiled	[CE]  'catch'  without  'try'	1	None	add
77	[BUG]  [BUGGY]  if((  expType  ==  NR_LONG)||(expType  ==  NR_BIGINT))  {  if((  expType  ==  NR_LONG)||(expType  ==  NR_BIGINT))  {  [CE]  'catch'  without  'try'  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType  ==  NR_LONG)||(expType  ==  NR_BIGINT))  {  if((  expType  ==  NR_LONG)||(expType  ==  NR_BIGINT))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((    expType    ==    NR_LONG)||(expType    ==    NR_BIGINT))    {    if((  expType  ==  NR_LONG)||(expType  ==  NR_BIGINT))  {	  	non-compiled	[CE]  'catch'  without  'try'	27	None	add
78	[BUG]  [BUGGY]  if((  expType  ==  NR_LONG)||(expType  ==  NR_BIGINT))  {  if((  expType  ==  NR_LONG)||(expType!=  NR_BIGINT))  {  [CE]  'catch'  without  'try'  [FE]      JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType  ==  NR_LONG)||(expType  ==  NR_BIGINT))  {  if((  expType  ==  NR_LONG)||(expType!=  NR_BIGINT))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((    expType    ==    NR_LONG)||(expType    ==    NR_BIGINT))    {    if((  expType  ==  NR_LONG)||(expType!=  NR_BIGINT))  {	  	non-compiled	[CE]  'catch'  without  'try'	27	None	add
79	[BUG]  [BUGGY]  if((  expType  ==  NR_LONG)||(expType  ==  NR_BIGINT))  {  if((  expType!=  NR_LONG)||(expType  ==  NR_BIGINT))  {  [CE]  'catch'  without  'try'  [FE]        JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType  ==  NR_LONG)||(expType  ==  NR_BIGINT))  {  if((  expType!=  NR_LONG)||(expType  ==  NR_BIGINT))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((    expType    ==    NR_LONG)||(expType    ==    NR_BIGINT))    {    if((  expType!=  NR_LONG)||(expType  ==  NR_BIGINT))  {	  	non-compiled	[CE]  'catch'  without  'try'	27	None	add
80	[BUG]  [BUGGY]  if((  expType  ==  NR_LONG)||(expType  ==  NR_DOUBLE))  {  if((  expType  ==  NR_LONG)||(expType  ==  NR_DOUBLE))  {  [CE]  'catch'  without  'try'  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType  ==  NR_LONG)||(expType  ==  NR_DOUBLE))  {  if((  expType  ==  NR_LONG)||(expType  ==  NR_DOUBLE))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((    expType    ==    NR_LONG)||(expType    ==    NR_DOUBLE))    {    if((  expType  ==  NR_LONG)||(expType  ==  NR_DOUBLE))  {	  	non-compiled	[CE]  'catch'  without  'try'	58	None	add
81	[BUG]  [BUGGY]  if((  expType  ==  NR_LONG)||(expType  ==  NR_DOUBLE))  {  if((  expType  ==  NR_LONG)||(expType!=  NR_DOUBLE))  {  [CE]  'catch'  without  'try'  [FE]      JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType  ==  NR_LONG)||(expType  ==  NR_DOUBLE))  {  if((  expType  ==  NR_LONG)||(expType!=  NR_DOUBLE))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((    expType    ==    NR_LONG)||(expType    ==    NR_DOUBLE))    {    if((  expType  ==  NR_LONG)||(expType!=  NR_DOUBLE))  {	  	non-compiled	[CE]  'catch'  without  'try'	58	None	add
82	[BUG]  [BUGGY]  if((  expType  ==  NR_LONG)||(expType  ==  NR_DOUBLE))  {  if((  expType!=  NR_LONG)||(expType  ==  NR_DOUBLE))  {  [CE]  'catch'  without  'try'  [FE]        JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType  ==  NR_LONG)||(expType  ==  NR_DOUBLE))  {  if((  expType!=  NR_LONG)||(expType  ==  NR_DOUBLE))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((    expType    ==    NR_LONG)||(expType    ==    NR_DOUBLE))    {    if((  expType!=  NR_LONG)||(expType  ==  NR_DOUBLE))  {	  	non-compiled	[CE]  'catch'  without  'try'	58	None	add
83	[BUG]  [BUGGY]  _parsingContext  =  JsonReadContext.createRootContext(numStr);  [CE]  [FE]                      JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  _parsingContext  =  JsonReadContext.createRootContext(numStr);  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	_parsingContext  =  JsonReadContext.createRootContext(numStr);	  _parsingContext    =    JsonReadContext.createRootContext(null);    	non-compiled	[CE]  	63	None	replace
84	[BUG]  [BUGGY]  _parsingContext  =  JsonReadContext.createRootContext(null,  expType);  [CE]  [FE]                        JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  _parsingContext  =  JsonReadContext.createRootContext(null,  expType);  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	_parsingContext  =  JsonReadContext.createRootContext(null,  expType);	  _parsingContext    =    JsonReadContext.createRootContext(null);    	non-compiled	[CE]  	63	None	replace
85	[BUG]  [BUGGY]  _parsingContext  =  JsonReadContext.createRootContext(null,  _numberNegative);  [CE]  [FE]                          JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  _parsingContext  =  JsonReadContext.createRootContext(null,  _numberNegative);  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	_parsingContext  =  JsonReadContext.createRootContext(null,  _numberNegative);	  _parsingContext    =    JsonReadContext.createRootContext(null);    	non-compiled	[CE]  	63	None	replace
86	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType  ==  NR_UNKNOWN)&&(expType  ==  NR_INT))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	add	if((  expType  ==  NR_UNKNOWN)&&(expType  ==  NR_INT))  {	  if((    expType    ==    NR_UNKNOWN)||(expType    ==    NR_INT))    {    	compilable	  [FE]  JsonParseException  	55	8	replace
87	[BUG]  [BUGGY]  if((  expType  ==  NR_UNKNOWN)&&(expType  ==  NR_INT))  {  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType  ==  NR_UNKNOWN)&&(expType  ==  NR_INT))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((  expType  ==  NR_UNKNOWN)&&(expType  ==  NR_INT))  {	  if((    expType    ==    NR_UNKNOWN)||(expType    ==    NR_INT))    {    	compilable	  [FE]  JsonParseException  	55	8	replace
88	[BUG]  [BUGGY]  if((  expType  ==  NR_LONG)||(expType  ==  NR_LONG))  {  if((  expType  ==  NR_LONG)||(expType  ==  NR_LONG))  {  [CE]  'catch'  without  'try'  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType  ==  NR_LONG)||(expType  ==  NR_LONG))  {  if((  expType  ==  NR_LONG)||(expType  ==  NR_LONG))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((    expType    ==    NR_LONG)||(expType    ==    NR_LONG))    {    if((  expType  ==  NR_LONG)||(expType  ==  NR_LONG))  {	  	non-compiled	[CE]  'catch'  without  'try'	15	None	add
89	[BUG]  [BUGGY]  if((  expType  ==  NR_LONG)||(expType  ==  NR_LONG))  {  if((  expType  ==  NR_LONG)||(expType!=  NR_LONG))  {  [CE]  'catch'  without  'try'  [FE]      JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType  ==  NR_LONG)||(expType  ==  NR_LONG))  {  if((  expType  ==  NR_LONG)||(expType!=  NR_LONG))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((    expType    ==    NR_LONG)||(expType    ==    NR_LONG))    {    if((  expType  ==  NR_LONG)||(expType!=  NR_LONG))  {	  	non-compiled	[CE]  'catch'  without  'try'	15	None	add
90	[BUG]  [BUGGY]  if((  expType  ==  NR_LONG)||(expType  ==  NR_LONG))  {  if((  expType!=  NR_LONG)||(expType  ==  NR_LONG))  {  [CE]  'catch'  without  'try'  [FE]        JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType  ==  NR_LONG)||(expType  ==  NR_LONG))  {  if((  expType!=  NR_LONG)||(expType  ==  NR_LONG))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((    expType    ==    NR_LONG)||(expType    ==    NR_LONG))    {    if((  expType!=  NR_LONG)||(expType  ==  NR_LONG))  {	  	non-compiled	[CE]  'catch'  without  'try'	15	None	add
91	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_LONG)  {  if(_numTypesValid  ==  NR_LONG)  {  [CE]  'catch'  without  'try'  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if(_numTypesValid  ==  NR_LONG)  {  if(_numTypesValid  ==  NR_LONG)  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if(_numTypesValid    ==    NR_LONG)    {    if(_numTypesValid  ==  NR_LONG)  {	  	non-compiled	[CE]  'catch'  without  'try'	19	None	add
92	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_LONG)  {  if(_numTypesValid!=  NR_LONG)  {  [CE]  'catch'  without  'try'  [FE]      JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if(_numTypesValid  ==  NR_LONG)  {  if(_numTypesValid!=  NR_LONG)  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if(_numTypesValid    ==    NR_LONG)    {    if(_numTypesValid!=  NR_LONG)  {	  	non-compiled	[CE]  'catch'  without  'try'	19	None	add
93	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_LONG)  {  if(_numTypesValid  >=  NR_LONG)  {  [CE]  'catch'  without  'try'  [FE]        JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if(_numTypesValid  ==  NR_LONG)  {  if(_numTypesValid  >=  NR_LONG)  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if(_numTypesValid    ==    NR_LONG)    {    if(_numTypesValid  >=  NR_LONG)  {	  	non-compiled	[CE]  'catch'  without  'try'	19	None	add
94	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_LONG)  {  If(_numTypesValid  ==  NR_LONG)  {  [CE]  ';'  expected  [FE]          JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if(_numTypesValid  ==  NR_LONG)  {  If(_numTypesValid  ==  NR_LONG)  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if(_numTypesValid    ==    NR_LONG)    {    If(_numTypesValid  ==  NR_LONG)  {	  	non-compiled	[CE]  ';'  expected	19	None	add
95	[BUG]  [BUGGY]  if((  expType  ==  NR_INT)&&(expType  ==  NR_BIGINT))  {  if((  expType  ==  NR_INT)&&(expType  ==  NR_BIGINT))  {  [CE]  'catch'  without  'try'  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType  ==  NR_INT)&&(expType  ==  NR_BIGINT))  {  if((  expType  ==  NR_INT)&&(expType  ==  NR_BIGINT))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((    expType    ==    NR_INT)&&(expType    ==    NR_BIGINT))    {    if((  expType  ==  NR_INT)&&(expType  ==  NR_BIGINT))  {	  	non-compiled	[CE]  'catch'  without  'try'	25	None	add
96	[BUG]  [BUGGY]  if((  expType  ==  NR_INT)&&(expType  ==  NR_BIGINT))  {  if((  expType!=  NR_INT)&&(expType  ==  NR_BIGINT))  {  [CE]  'catch'  without  'try'  [FE]      JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType  ==  NR_INT)&&(expType  ==  NR_BIGINT))  {  if((  expType!=  NR_INT)&&(expType  ==  NR_BIGINT))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((    expType    ==    NR_INT)&&(expType    ==    NR_BIGINT))    {    if((  expType!=  NR_INT)&&(expType  ==  NR_BIGINT))  {	  	non-compiled	[CE]  'catch'  without  'try'	25	None	add
97	[BUG]  [BUGGY]  if((  expType  ==  NR_INT)&&(expType  ==  NR_BIGINT))  {  if((  expType  ==  NR_INT)&&(expType!=  NR_BIGINT))  {  [CE]  'catch'  without  'try'  [FE]        JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType  ==  NR_INT)&&(expType  ==  NR_BIGINT))  {  if((  expType  ==  NR_INT)&&(expType!=  NR_BIGINT))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((    expType    ==    NR_INT)&&(expType    ==    NR_BIGINT))    {    if((  expType  ==  NR_INT)&&(expType!=  NR_BIGINT))  {	  	non-compiled	[CE]  'catch'  without  'try'	25	None	add
98	[BUG]  [BUGGY]  if((  expType  ==  NR_INT)&&(expType  ==  NR_BIGINT))  {  if((  expType  >=  NR_INT)&&(expType  ==  NR_BIGINT))  {  [CE]  'catch'  without  'try'  [FE]          JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType  ==  NR_INT)&&(expType  ==  NR_BIGINT))  {  if((  expType  >=  NR_INT)&&(expType  ==  NR_BIGINT))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((    expType    ==    NR_INT)&&(expType    ==    NR_BIGINT))    {    if((  expType  >=  NR_INT)&&(expType  ==  NR_BIGINT))  {	  	non-compiled	[CE]  'catch'  without  'try'	25	None	add
99	[BUG]  [BUGGY]  if((  expType  ==  NR_LONG)||(expType  ==  NR_FLOAT))  {  if((  expType  ==  NR_LONG)||(expType  ==  NR_FLOAT))  {  [CE]  'catch'  without  'try'  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType  ==  NR_LONG)||(expType  ==  NR_FLOAT))  {  if((  expType  ==  NR_LONG)||(expType  ==  NR_FLOAT))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((    expType    ==    NR_LONG)||(expType    ==    NR_FLOAT))    {    if((  expType  ==  NR_LONG)||(expType  ==  NR_FLOAT))  {	  	non-compiled	[CE]  'catch'  without  'try'	56	None	add
100	[BUG]  [BUGGY]  if((  expType  ==  NR_LONG)||(expType  ==  NR_FLOAT))  {  if((  expType  ==  NR_LONG)||(expType!=  NR_FLOAT))  {  [CE]  'catch'  without  'try'  [FE]      JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType  ==  NR_LONG)||(expType  ==  NR_FLOAT))  {  if((  expType  ==  NR_LONG)||(expType!=  NR_FLOAT))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((    expType    ==    NR_LONG)||(expType    ==    NR_FLOAT))    {    if((  expType  ==  NR_LONG)||(expType!=  NR_FLOAT))  {	  	non-compiled	[CE]  'catch'  without  'try'	56	None	add
101	[BUG]  [BUGGY]  if((  expType  ==  NR_LONG)||(expType  ==  NR_FLOAT))  {  if((  expType!=  NR_LONG)||(expType  ==  NR_FLOAT))  {  [CE]  'catch'  without  'try'  [FE]        JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType  ==  NR_LONG)||(expType  ==  NR_FLOAT))  {  if((  expType!=  NR_LONG)||(expType  ==  NR_FLOAT))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((    expType    ==    NR_LONG)||(expType    ==    NR_FLOAT))    {    if((  expType!=  NR_LONG)||(expType  ==  NR_FLOAT))  {	  	non-compiled	[CE]  'catch'  without  'try'	56	None	add
102	[BUG]  [BUGGY]  if(_numberNegative)  {  if((  expType  >=  NR_INT)||(expType  ==  NR_BIGINT))  {  [CE]  'catch'  without  'try'  [FE]        JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if(_numberNegative)  {  if((  expType  >=  NR_INT)||(expType  ==  NR_BIGINT))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if(_numberNegative)  {  if((  expType  >=  NR_INT)||(expType  ==  NR_BIGINT))  {	  if((    expType    ==    NR_INT)||(expType    ==    NR_BIGINT))    {    if((    expType    >=    NR_INT)||(expType    ==    NR_BIGINT))    {    	non-compiled	[CE]  'catch'  without  'try'	64	None	replace
103	[BUG]  [BUGGY]  if((  expType  ==  0)||(expType  ==  0))  {  if((  expType  >=  0)||(expType  ==  0))  {  [CE]  'catch'  without  'try'  [FE]          JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType  ==  0)||(expType  ==  0))  {  if((  expType  >=  0)||(expType  ==  0))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((  expType  ==  0)||(expType  ==  0))  {  if((  expType  >=  0)||(expType  ==  0))  {	  if((    expType    ==    NR_INT)||(expType    ==    NR_BIGINT))    {    if((    expType    >=    NR_INT)||(expType    ==    NR_BIGINT))    {    	non-compiled	[CE]  'catch'  without  'try'	64	None	replace
104	[BUG]  [BUGGY]  if((  expType  ==  NR_LONG)||(expType!=  NR_INT))  {  if((  expType  ==  NR_LONG)||(expType!=  NR_INT))  {  [CE]  'catch'  without  'try'  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType  ==  NR_LONG)||(expType!=  NR_INT))  {  if((  expType  ==  NR_LONG)||(expType!=  NR_INT))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((    expType    ==    NR_LONG)||(expType!=    NR_INT))    {    if((  expType  ==  NR_LONG)||(expType!=  NR_INT))  {	  	non-compiled	[CE]  'catch'  without  'try'	45	None	add
105	[BUG]  [BUGGY]  if((  expType  ==  NR_LONG)||(expType!=  NR_INT))  {  if((  expType  ==  NR_LONG)||(expType  >>  NR_INT))  {  [CE]  'catch'  without  'try'  [FE]      JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType  ==  NR_LONG)||(expType!=  NR_INT))  {  if((  expType  ==  NR_LONG)||(expType  >>  NR_INT))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((    expType    ==    NR_LONG)||(expType!=    NR_INT))    {    if((  expType  ==  NR_LONG)||(expType  >>  NR_INT))  {	  	non-compiled	[CE]  'catch'  without  'try'	45	None	add
106	[BUG]  [BUGGY]  if((  expType  ==  NR_LONG)||(expType!=  NR_INT))  {  if((  expType  ==  NR_LONG)||(expType  >=  NR_INT))  {  [CE]  'catch'  without  'try'  [FE]        JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType  ==  NR_LONG)||(expType!=  NR_INT))  {  if((  expType  ==  NR_LONG)||(expType  >=  NR_INT))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((    expType    ==    NR_LONG)||(expType!=    NR_INT))    {    if((  expType  ==  NR_LONG)||(expType  >=  NR_INT))  {	  	non-compiled	[CE]  'catch'  without  'try'	45	None	add
107	[BUG]  [BUGGY]  if((  expType  ==  NR_INT)||(expType!=  NR_LONG))  {  if((  expType  ==  NR_INT)||(expType!=  NR_LONG))  {  [CE]  'catch'  without  'try'  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType  ==  NR_INT)||(expType!=  NR_LONG))  {  if((  expType  ==  NR_INT)||(expType!=  NR_LONG))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((    expType    ==    NR_INT)||(expType!=    NR_LONG))    {    if((  expType  ==  NR_INT)||(expType!=  NR_LONG))  {	  	non-compiled	[CE]  'catch'  without  'try'	3	None	add
108	[BUG]  [BUGGY]  if((  expType  ==  NR_INT)||(expType!=  NR_LONG))  {  if((  expType  ==  NR_INT)||(expType  >>  NR_LONG))  {  [CE]  'catch'  without  'try'  [FE]      JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType  ==  NR_INT)||(expType!=  NR_LONG))  {  if((  expType  ==  NR_INT)||(expType  >>  NR_LONG))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((    expType    ==    NR_INT)||(expType!=    NR_LONG))    {    if((  expType  ==  NR_INT)||(expType  >>  NR_LONG))  {	  	non-compiled	[CE]  'catch'  without  'try'	3	None	add
109	[BUG]  [BUGGY]  if((  expType  ==  NR_INT)||(expType!=  NR_LONG))  {  if((  expType  ==  NR_INT)||(expType  >=  NR_LONG))  {  [CE]  'catch'  without  'try'  [FE]        JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType  ==  NR_INT)||(expType!=  NR_LONG))  {  if((  expType  ==  NR_INT)||(expType  >=  NR_LONG))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((    expType    ==    NR_INT)||(expType!=    NR_LONG))    {    if((  expType  ==  NR_INT)||(expType  >=  NR_LONG))  {	  	non-compiled	[CE]  'catch'  without  'try'	3	None	add
110	[BUG]  [BUGGY]  if((  expType  ==  NR_BIGINT)||(expType  ==  NR_INTEGER))  {  [CE]  cannot  find  symbol  NR_INTEGER  [FE]        JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType  ==  NR_BIGINT)||(expType  ==  NR_INTEGER))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((  expType  ==  NR_BIGINT)||(expType  ==  NR_INTEGER))  {	  if((    expType    ==    NR_INTEGER)||(expType    ==    NR_BIGINT))    {    	non-compiled	[CE]  cannot  find  symbol  NR_INTEGER	44	None	replace
111	[BUG]  [BUGGY]  if(_numberNegative)  {  if((  expType  >=  NR_LONG)||(expType  ==  NR_INT))  {  [CE]  'catch'  without  'try'  [FE]        JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if(_numberNegative)  {  if((  expType  >=  NR_LONG)||(expType  ==  NR_INT))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if(_numberNegative)  {  if((  expType  >=  NR_LONG)||(expType  ==  NR_INT))  {	  if((    expType    ==    NR_LONG)||(expType    ==    NR_INT))    {    if((    expType    >=    NR_LONG)||(expType    ==    NR_INT))    {    	non-compiled	[CE]  'catch'  without  'try'	60	None	replace
112	[BUG]  [BUGGY]  if((  _numTypesValid  ==  NR_LONG)||(_numTypesValid  ==  NR_LONG))  {  if((  _numTypesValid  ==  NR_LONG)||(_numTypesValid  ==  NR_LONG))  {  [CE]  'catch'  without  'try'  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  _numTypesValid  ==  NR_LONG)||(_numTypesValid  ==  NR_LONG))  {  if((  _numTypesValid  ==  NR_LONG)||(_numTypesValid  ==  NR_LONG))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((    _numTypesValid    ==    NR_LONG)||(_numTypesValid    ==    NR_LONG))    {    if((  _numTypesValid  ==  NR_LONG)||(_numTypesValid  ==  NR_LONG))  {	  	non-compiled	[CE]  'catch'  without  'try'	52	None	add
113	[BUG]  [BUGGY]  if((  _numTypesValid  ==  NR_LONG)||(_numTypesValid  ==  NR_LONG))  {  if((  _numTypesValid  ==  NR_LONG)||(_numTypesValid!=  NR_LONG))  {  [CE]  'catch'  without  'try'  [FE]      JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  _numTypesValid  ==  NR_LONG)||(_numTypesValid  ==  NR_LONG))  {  if((  _numTypesValid  ==  NR_LONG)||(_numTypesValid!=  NR_LONG))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((    _numTypesValid    ==    NR_LONG)||(_numTypesValid    ==    NR_LONG))    {    if((  _numTypesValid  ==  NR_LONG)||(_numTypesValid!=  NR_LONG))  {	  	non-compiled	[CE]  'catch'  without  'try'	52	None	add
114	[BUG]  [BUGGY]  if((  _numTypesValid  ==  NR_LONG)||(_numTypesValid  ==  NR_LONG))  {  if((  _numTypesValid!=  NR_LONG)||(_numTypesValid  ==  NR_LONG))  {  [CE]  'catch'  without  'try'  [FE]        JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  _numTypesValid  ==  NR_LONG)||(_numTypesValid  ==  NR_LONG))  {  if((  _numTypesValid!=  NR_LONG)||(_numTypesValid  ==  NR_LONG))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((    _numTypesValid    ==    NR_LONG)||(_numTypesValid    ==    NR_LONG))    {    if((  _numTypesValid!=  NR_LONG)||(_numTypesValid  ==  NR_LONG))  {	  	non-compiled	[CE]  'catch'  without  'try'	52	None	add
115	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType  ==  NR_LONG)||(expType!=  NR_BIGINT))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	add	if((  expType  ==  NR_LONG)||(expType!=  NR_BIGINT))  {	  if((    expType    ==    NR_LONG)||(expType    ==    NR_BIGINT))    {    	compilable	  [FE]  JsonParseException  	28	12	replace
116	[BUG]  [BUGGY]  if((  expType  ==  NR_LONG)||(expType!=  NR_BIGINT))  {  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType  ==  NR_LONG)||(expType!=  NR_BIGINT))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((  expType  ==  NR_LONG)||(expType!=  NR_BIGINT))  {	  if((    expType    ==    NR_LONG)||(expType    ==    NR_BIGINT))    {    	compilable	  [FE]  JsonParseException  	28	12	replace
117	[BUG]  [BUGGY]  if((  expType  ==  NR_UNKNOWN)||(expType  ==  NR_INT))  {  if((  expType  ==  NR_UNKNOWN)||(expType  ==  NR_INT))  {  [CE]  'catch'  without  'try'  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType  ==  NR_UNKNOWN)||(expType  ==  NR_INT))  {  if((  expType  ==  NR_UNKNOWN)||(expType  ==  NR_INT))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((    expType    ==    NR_UNKNOWN)||(expType    ==    NR_INT))    {    if((  expType  ==  NR_UNKNOWN)||(expType  ==  NR_INT))  {	  	non-compiled	[CE]  'catch'  without  'try'	54	None	add
118	[BUG]  [BUGGY]  if((  expType  ==  NR_UNKNOWN)||(expType  ==  NR_INT))  {  if((  expType  ==  NR_UNKNOWN)||(expType!=  NR_INT))  {  [CE]  'catch'  without  'try'  [FE]      JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType  ==  NR_UNKNOWN)||(expType  ==  NR_INT))  {  if((  expType  ==  NR_UNKNOWN)||(expType!=  NR_INT))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((    expType    ==    NR_UNKNOWN)||(expType    ==    NR_INT))    {    if((  expType  ==  NR_UNKNOWN)||(expType!=  NR_INT))  {	  	non-compiled	[CE]  'catch'  without  'try'	54	None	add
119	[BUG]  [BUGGY]  if((  expType  ==  NR_UNKNOWN)||(expType  ==  NR_INT))  {  if((  expType!=  NR_UNKNOWN)||(expType  ==  NR_INT))  {  [CE]  'catch'  without  'try'  [FE]        JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType  ==  NR_UNKNOWN)||(expType  ==  NR_INT))  {  if((  expType!=  NR_UNKNOWN)||(expType  ==  NR_INT))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((    expType    ==    NR_UNKNOWN)||(expType    ==    NR_INT))    {    if((  expType!=  NR_UNKNOWN)||(expType  ==  NR_INT))  {	  	non-compiled	[CE]  'catch'  without  'try'	54	None	add
120	[BUG]  [BUGGY]  _parsingContext.setCurrentLong(len);  [CE]  [FE]                      JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  _parsingContext.setCurrentLong(len);  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	_parsingContext.setCurrentLong(len);	  _parsingContext.setCurrentLong(numStr);    	non-compiled	[CE]  	51	None	replace
121	[BUG]  [BUGGY]  _parsingContext.setCurrentLong(long);  [CE]  [FE]                        JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  _parsingContext.setCurrentLong(long);  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	_parsingContext.setCurrentLong(long);	  _parsingContext.setCurrentLong(numStr);    	non-compiled	[CE]  	51	None	replace
122	[BUG]  [BUGGY]  if(_numberNegative)  {  if((  expType  ==  NR_INT)||(expType  ==  NR_UNKNOWN))  {  [CE]  'catch'  without  'try'  [FE]        JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if(_numberNegative)  {  if((  expType  ==  NR_INT)||(expType  ==  NR_UNKNOWN))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if(_numberNegative)  {  if((  expType  ==  NR_INT)||(expType  ==  NR_UNKNOWN))  {	  if((    expType    ==    NR_INT)||(expType    ==    NR_UNKNOWN))    {    if((    expType    ==    NR_INT)||(expType    ==    NR_UNKNOWN))    {    	non-compiled	[CE]  'catch'  without  'try'	36	None	replace
123	[BUG]  [BUGGY]  _parsingContext  =  JsonReadContext.createRootContext(-1,  1);  [CE]  [FE]                    JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  _parsingContext  =  JsonReadContext.createRootContext(-1,  1);  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	_parsingContext  =  JsonReadContext.createRootContext(-1,  1);	  _parsingContext    =    JsonReadContext.createRootContext(-1,    -1);    	non-compiled	[CE]  	62	None	replace
124	[BUG]  [BUGGY]  _parsingContext  =  JsonReadContext.createRootContext(0,  0);  [CE]  [FE]                      JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  _parsingContext  =  JsonReadContext.createRootContext(0,  0);  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	_parsingContext  =  JsonReadContext.createRootContext(0,  0);	  _parsingContext    =    JsonReadContext.createRootContext(-1,    -1);    	non-compiled	[CE]  	62	None	replace
125	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType  ==  NR_INT)&&(expType  ==  NR_UNKNOWN)||(expType  ==  NR_LONG))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	add	if((  expType  ==  NR_INT)&&(expType  ==  NR_UNKNOWN)||(expType  ==  NR_LONG))  {	  if((    expType    ==    NR_INT)&&(expType    ==    NR_UNKNOWN))    {    	compilable	  [FE]  JsonParseException  	66	8	replace
126	[BUG]  [BUGGY]  if((  expType  ==  NR_INT)&&(expType  ==  NR_UNKNOWN)||(expType  ==  NR_LONG))  {  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType  ==  NR_INT)&&(expType  ==  NR_UNKNOWN)||(expType  ==  NR_LONG))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((  expType  ==  NR_INT)&&(expType  ==  NR_UNKNOWN)||(expType  ==  NR_LONG))  {	  if((    expType    ==    NR_INT)&&(expType    ==    NR_UNKNOWN))    {    	compilable	  [FE]  JsonParseException  	66	8	replace
127	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType  ==  NR_INT)&&(expType  ==  NR_UNKNOWN)||(expType  ==  NR_BIGINT))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	add	if((  expType  ==  NR_INT)&&(expType  ==  NR_UNKNOWN)||(expType  ==  NR_BIGINT))  {	  if((    expType    ==    NR_INT)&&(expType    ==    NR_UNKNOWN))    {    	compilable	  [FE]  JsonParseException  	66	11	replace
128	[BUG]  [BUGGY]  if((  expType  ==  NR_INT)&&(expType  ==  NR_UNKNOWN)||(expType  ==  NR_BIGINT))  {  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType  ==  NR_INT)&&(expType  ==  NR_UNKNOWN)||(expType  ==  NR_BIGINT))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((  expType  ==  NR_INT)&&(expType  ==  NR_UNKNOWN)||(expType  ==  NR_BIGINT))  {	  if((    expType    ==    NR_INT)&&(expType    ==    NR_UNKNOWN))    {    	compilable	  [FE]  JsonParseException  	66	11	replace
129	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]          JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType  ==  NR_INT)||(expType!=  NR_UNKNOWN))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	add	if((  expType  ==  NR_INT)||(expType!=  NR_UNKNOWN))  {	  if((    expType    ==    NR_INT)||(expType    ==    NR_UNKNOWN))    {    if((    expType    ==    NR_INT)||(expType!=    NR_UNKNOWN))    {    	compilable	  [FE]  JsonParseException  	37	13	replace
130	[BUG]  [BUGGY]  if((  expType  ==  NR_INT)||(expType!=  NR_UNKNOWN))  {  [FE]  JsonParseException  [FE]          JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType  ==  NR_INT)||(expType!=  NR_UNKNOWN))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((  expType  ==  NR_INT)||(expType!=  NR_UNKNOWN))  {	  if((    expType    ==    NR_INT)||(expType    ==    NR_UNKNOWN))    {    if((    expType    ==    NR_INT)||(expType!=    NR_UNKNOWN))    {    	compilable	  [FE]  JsonParseException  	37	13	replace
131	[BUG]  [BUGGY]  if((  expType  ==  NR_LONG)||(expType  ==  NR_INTEGER))  {  [CE]  cannot  find  symbol  NR_INTEGER  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType  ==  NR_LONG)||(expType  ==  NR_INTEGER))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((  expType  ==  NR_LONG)||(expType  ==  NR_INTEGER))  {	  if((    expType    ==    NR_LONG)||(expType    ==    NR_FLOAT))    {    	non-compiled	[CE]  cannot  find  symbol  NR_INTEGER	57	None	replace
132	[BUG]  [BUGGY]  _parsingContext  =  JsonReadContext.createRootContext(-1L,  -1);  [CE]  [FE]                    JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  _parsingContext  =  JsonReadContext.createRootContext(-1L,  -1);  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	_parsingContext  =  JsonReadContext.createRootContext(-1L,  -1);	  _parsingContext    =    JsonReadContext.createRootContext(-1,    -1);    	non-compiled	[CE]  	62	None	replace
133	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]            JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType!=  NR_LONG)||(expType  ==  NR_UNKNOWN))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	add	if((  expType!=  NR_LONG)||(expType  ==  NR_UNKNOWN))  {	  if((    expType    ==    NR_INT)||(expType    ==    NR_UNKNOWN))    {    if((    expType!=    NR_INT)||(expType    ==    NR_UNKNOWN))    {    	compilable	  [FE]  JsonParseException  	38	15	replace
134	[BUG]  [BUGGY]  if((  expType!=  NR_LONG)||(expType  ==  NR_UNKNOWN))  {  [FE]  JsonParseException  [FE]            JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType!=  NR_LONG)||(expType  ==  NR_UNKNOWN))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((  expType!=  NR_LONG)||(expType  ==  NR_UNKNOWN))  {	  if((    expType    ==    NR_INT)||(expType    ==    NR_UNKNOWN))    {    if((    expType!=    NR_INT)||(expType    ==    NR_UNKNOWN))    {    	compilable	  [FE]  JsonParseException  	38	15	replace
135	[BUG]  [BUGGY]  if((  expType!=  0)||(expType  ==  0))  {  if((  expType!=  0)||(expType  ==  0))  {  [CE]  'catch'  without  'try'  [FE]              JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType!=  0)||(expType  ==  0))  {  if((  expType!=  0)||(expType  ==  0))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((  expType!=  0)||(expType  ==  0))  {  if((  expType!=  0)||(expType  ==  0))  {	  if((    expType    ==    NR_INT)||(expType    ==    NR_UNKNOWN))    {    if((    expType!=    NR_INT)||(expType    ==    NR_UNKNOWN))    {    	non-compiled	[CE]  'catch'  without  'try'	38	None	replace
136	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]                JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType!=  NR_LONG)||(expType  ==  NR_BIGINT))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	add	if((  expType!=  NR_LONG)||(expType  ==  NR_BIGINT))  {	  if((    expType    ==    NR_INT)||(expType    ==    NR_UNKNOWN))    {    if((    expType!=    NR_INT)||(expType    ==    NR_UNKNOWN))    {    	compilable	  [FE]  JsonParseException  	38	15	replace
137	[BUG]  [BUGGY]  if((  expType!=  NR_LONG)||(expType  ==  NR_BIGINT))  {  [FE]  JsonParseException  [FE]                JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType!=  NR_LONG)||(expType  ==  NR_BIGINT))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((  expType!=  NR_LONG)||(expType  ==  NR_BIGINT))  {	  if((    expType    ==    NR_INT)||(expType    ==    NR_UNKNOWN))    {    if((    expType!=    NR_INT)||(expType    ==    NR_UNKNOWN))    {    	compilable	  [FE]  JsonParseException  	38	15	replace
138	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]                  JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType!=  NR_UNKNOWN)||(expType  ==  NR_UNKNOWN))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	add	if((  expType!=  NR_UNKNOWN)||(expType  ==  NR_UNKNOWN))  {	  if((    expType    ==    NR_INT)||(expType    ==    NR_UNKNOWN))    {    if((    expType!=    NR_INT)||(expType    ==    NR_UNKNOWN))    {    	compilable	  [FE]  JsonParseException  	38	15	replace
139	[BUG]  [BUGGY]  if((  expType!=  NR_UNKNOWN)||(expType  ==  NR_UNKNOWN))  {  [FE]  JsonParseException  [FE]                  JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType!=  NR_UNKNOWN)||(expType  ==  NR_UNKNOWN))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((  expType!=  NR_UNKNOWN)||(expType  ==  NR_UNKNOWN))  {	  if((    expType    ==    NR_INT)||(expType    ==    NR_UNKNOWN))    {    if((    expType!=    NR_INT)||(expType    ==    NR_UNKNOWN))    {    	compilable	  [FE]  JsonParseException  	38	15	replace
140	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]            JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType  ==  NR_LONG)&&(expType!=  NR_BIGINT))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	add	if((  expType  ==  NR_LONG)&&(expType!=  NR_BIGINT))  {	  if((    expType    ==    NR_INT)&&(expType    ==    NR_LONG))    {    if((    expType    ==    NR_INT)&&(expType!=    NR_LONG))    {    	compilable	  [FE]  JsonParseException  	7	8	replace
141	[BUG]  [BUGGY]  if((  expType  ==  NR_LONG)&&(expType!=  NR_BIGINT))  {  [FE]  JsonParseException  [FE]            JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType  ==  NR_LONG)&&(expType!=  NR_BIGINT))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((  expType  ==  NR_LONG)&&(expType!=  NR_BIGINT))  {	  if((    expType    ==    NR_INT)&&(expType    ==    NR_LONG))    {    if((    expType    ==    NR_INT)&&(expType!=    NR_LONG))    {    	compilable	  [FE]  JsonParseException  	7	8	replace
142	[BUG]  [BUGGY]  _parsingContext.setCurrentName(null,  expType);  [CE]  [FE]                    JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  _parsingContext.setCurrentName(null,  expType);  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	_parsingContext.setCurrentName(null,  expType);	  _parsingContext.setCurrentName(null);    	non-compiled	[CE]  	50	None	replace
143	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]            JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType!=  NR_INT)||(expType  ==  NR_BIGINT))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	add	if((  expType!=  NR_INT)||(expType  ==  NR_BIGINT))  {	  if((    expType    ==    NR_INT)||(expType    ==    NR_BIGINT))    {    if((    expType!=    NR_INT)||(expType    ==    NR_BIGINT))    {    	compilable	  [FE]  JsonParseException  	41	15	replace
144	[BUG]  [BUGGY]  if((  expType!=  NR_INT)||(expType  ==  NR_BIGINT))  {  [FE]  JsonParseException  [FE]            JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType!=  NR_INT)||(expType  ==  NR_BIGINT))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((  expType!=  NR_INT)||(expType  ==  NR_BIGINT))  {	  if((    expType    ==    NR_INT)||(expType    ==    NR_BIGINT))    {    if((    expType!=    NR_INT)||(expType    ==    NR_BIGINT))    {    	compilable	  [FE]  JsonParseException  	41	15	replace
145	[BUG]  [BUGGY]  if((  expType!=  NR_INTEGER)||(expType  ==  NR_INTEGER))  {  [CE]  cannot  find  symbol  NR_INTEGER  [FE]              JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType!=  NR_INTEGER)||(expType  ==  NR_INTEGER))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((  expType!=  NR_INTEGER)||(expType  ==  NR_INTEGER))  {	  if((    expType    ==    NR_INT)||(expType    ==    NR_BIGINT))    {    if((    expType!=    NR_INT)||(expType    ==    NR_BIGINT))    {    	non-compiled	[CE]  cannot  find  symbol  NR_INTEGER	41	None	replace
146	[BUG]  [BUGGY]  if((  expType  ==  NR_INTEGER)||(expType!=  NR_INT))  {  [CE]  cannot  find  symbol  NR_INTEGER  [FE]          JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType  ==  NR_INTEGER)||(expType!=  NR_INT))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((  expType  ==  NR_INTEGER)||(expType!=  NR_INT))  {	  if((    expType    ==    NR_LONG)||(expType    ==    NR_INT))    {    if((    expType    ==    NR_LONG)||(expType!=    NR_INT))    {    	non-compiled	[CE]  cannot  find  symbol  NR_INTEGER	30	None	replace
147	[BUG]  [BUGGY]  if((  expType  ==  NR_NUMBER)||(expType  ==  NR_BIGINT))  {  [CE]  cannot  find  symbol  NR_NUMBER  [FE]        JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType  ==  NR_NUMBER)||(expType  ==  NR_BIGINT))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((  expType  ==  NR_NUMBER)||(expType  ==  NR_BIGINT))  {	  if((    expType    ==    NR_INTEGER)||(expType    ==    NR_BIGINT))    {    	non-compiled	[CE]  cannot  find  symbol  NR_NUMBER	44	None	replace
148	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  _numTypesValid  ==  NR_LONG)||(_numTypesValid  ==  NR_BIGINT))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	add	if((  _numTypesValid  ==  NR_LONG)||(_numTypesValid  ==  NR_BIGINT))  {	  if((    _numTypesValid    ==    NR_LONG)||(_numTypesValid    ==    NR_LONG))    {    	compilable	  [FE]  JsonParseException  	53	8	replace
149	[BUG]  [BUGGY]  if((  _numTypesValid  ==  NR_LONG)||(_numTypesValid  ==  NR_BIGINT))  {  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  _numTypesValid  ==  NR_LONG)||(_numTypesValid  ==  NR_BIGINT))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((  _numTypesValid  ==  NR_LONG)||(_numTypesValid  ==  NR_BIGINT))  {	  if((    _numTypesValid    ==    NR_LONG)||(_numTypesValid    ==    NR_LONG))    {    	compilable	  [FE]  JsonParseException  	53	8	replace
150	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  _numTypesValid  ==  NR_LONG)&&(_numTypesValid  ==  NR_UNKNOWN))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	add	if((  _numTypesValid  ==  NR_LONG)&&(_numTypesValid  ==  NR_UNKNOWN))  {	  if((    _numTypesValid    ==    NR_LONG)||(_numTypesValid    ==    NR_LONG))    {    	compilable	  [FE]  JsonParseException  	53	8	replace
151	[BUG]  [BUGGY]  if((  _numTypesValid  ==  NR_LONG)&&(_numTypesValid  ==  NR_UNKNOWN))  {  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  _numTypesValid  ==  NR_LONG)&&(_numTypesValid  ==  NR_UNKNOWN))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((  _numTypesValid  ==  NR_LONG)&&(_numTypesValid  ==  NR_UNKNOWN))  {	  if((    _numTypesValid    ==    NR_LONG)||(_numTypesValid    ==    NR_LONG))    {    	compilable	  [FE]  JsonParseException  	53	8	replace
152	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]              JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType  >=  NR_LONG)&&(expType  ==  NR_BIGINT))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	add	if((  expType  >=  NR_LONG)&&(expType  ==  NR_BIGINT))  {	  if((    expType    ==    NR_INT)&&(expType    ==    NR_LONG))    {    if((    expType    >=    NR_INT)&&(expType    ==    NR_LONG))    {    	compilable	  [FE]  JsonParseException  	8	11	replace
153	[BUG]  [BUGGY]  if((  expType  >=  NR_LONG)&&(expType  ==  NR_BIGINT))  {  [FE]  JsonParseException  [FE]              JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType  >=  NR_LONG)&&(expType  ==  NR_BIGINT))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((  expType  >=  NR_LONG)&&(expType  ==  NR_BIGINT))  {	  if((    expType    ==    NR_INT)&&(expType    ==    NR_LONG))    {    if((    expType    >=    NR_INT)&&(expType    ==    NR_LONG))    {    	compilable	  [FE]  JsonParseException  	8	11	replace
154	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]                JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType  >=  NR_LONG)||(expType  ==  NR_LONG))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	add	if((  expType  >=  NR_LONG)||(expType  ==  NR_LONG))  {	  if((    expType    ==    NR_INT)&&(expType    ==    NR_LONG))    {    if((    expType    >=    NR_INT)&&(expType    ==    NR_LONG))    {    	compilable	  [FE]  JsonParseException  	8	13	replace
155	[BUG]  [BUGGY]  if((  expType  >=  NR_LONG)||(expType  ==  NR_LONG))  {  [FE]  JsonParseException  [FE]                JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType  >=  NR_LONG)||(expType  ==  NR_LONG))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((  expType  >=  NR_LONG)||(expType  ==  NR_LONG))  {	  if((    expType    ==    NR_INT)&&(expType    ==    NR_LONG))    {    if((    expType    >=    NR_INT)&&(expType    ==    NR_LONG))    {    	compilable	  [FE]  JsonParseException  	8	13	replace
156	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]                  JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType  >=  NR_LONG)||(expType  ==  NR_BIGINT))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	add	if((  expType  >=  NR_LONG)||(expType  ==  NR_BIGINT))  {	  if((    expType    ==    NR_INT)&&(expType    ==    NR_LONG))    {    if((    expType    >=    NR_INT)&&(expType    ==    NR_LONG))    {    	compilable	  [FE]  JsonParseException  	8	13	replace
157	[BUG]  [BUGGY]  if((  expType  >=  NR_LONG)||(expType  ==  NR_BIGINT))  {  [FE]  JsonParseException  [FE]                  JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType  >=  NR_LONG)||(expType  ==  NR_BIGINT))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((  expType  >=  NR_LONG)||(expType  ==  NR_BIGINT))  {	  if((    expType    ==    NR_INT)&&(expType    ==    NR_LONG))    {    if((    expType    >=    NR_INT)&&(expType    ==    NR_LONG))    {    	compilable	  [FE]  JsonParseException  	8	13	replace
158	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]                    JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType  >=  0)&&(expType  ==  0))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	add	if((  expType  >=  0)&&(expType  ==  0))  {	  if((    expType    ==    NR_INT)&&(expType    ==    NR_LONG))    {    if((    expType    >=    NR_INT)&&(expType    ==    NR_LONG))    {    	compilable	  [FE]  JsonParseException  	8	10	replace
159	[BUG]  [BUGGY]  if((  expType  >=  0)&&(expType  ==  0))  {  [FE]  JsonParseException  [FE]                    JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType  >=  0)&&(expType  ==  0))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((  expType  >=  0)&&(expType  ==  0))  {	  if((    expType    ==    NR_INT)&&(expType    ==    NR_LONG))    {    if((    expType    >=    NR_INT)&&(expType    ==    NR_LONG))    {    	compilable	  [FE]  JsonParseException  	8	10	replace
160	[BUG]  [BUGGY]  if((  expType  ==  NR_LONG)||(expType  ==  NR_BIGINT))  {  if((  expType  ==  NR_INT)||(expType!=  NR_BIGINT))  {  [CE]  'catch'  without  'try'  [FE]          JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType  ==  NR_LONG)||(expType  ==  NR_BIGINT))  {  if((  expType  ==  NR_INT)||(expType!=  NR_BIGINT))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((  expType  ==  NR_LONG)||(expType  ==  NR_BIGINT))  {  if((  expType  ==  NR_INT)||(expType!=  NR_BIGINT))  {	  if((    expType    ==    NR_INT)||(expType    ==    NR_BIGINT))    {    if((    expType    ==    NR_INT)||(expType!=    NR_BIGINT))    {    	non-compiled	[CE]  'catch'  without  'try'	40	None	replace
161	[BUG]  [BUGGY]  _parsingContext.setCurrentName(numStr,  expType);  [CE]  [FE]                  JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  _parsingContext.setCurrentName(numStr,  expType);  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	_parsingContext.setCurrentName(numStr,  expType);	  _parsingContext.setCurrentName(numStr);    	non-compiled	[CE]  	61	None	replace
162	[BUG]  [BUGGY]  _numberInt  =  NumberInput.parseLong(numStr);  [CE]  [FE]                    JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  _numberInt  =  NumberInput.parseLong(numStr);  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	_numberInt  =  NumberInput.parseLong(numStr);	  _numberInt    =    Long.parseLong(numStr);    	non-compiled	[CE]  	22	None	replace
163	[BUG]  [BUGGY]  if((  expType  ==  NR_LONG)||(expType  ==  NR_OBJECT))  {  [CE]  cannot  find  symbol  NR_OBJECT  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType  ==  NR_LONG)||(expType  ==  NR_OBJECT))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((  expType  ==  NR_LONG)||(expType  ==  NR_OBJECT))  {	  if((    expType    ==    NR_LONG)||(expType    ==    NR_LONG))    {    	non-compiled	[CE]  cannot  find  symbol  NR_OBJECT	16	None	replace
164	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]        JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType  >=  NR_LONG)||(expType  ==  NR_INT))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	add	if((  expType  >=  NR_LONG)||(expType  ==  NR_INT))  {	  if((    expType    ==    NR_LONG)||(expType    ==    NR_INT))    {    if((    expType    >=    NR_LONG)||(expType    ==    NR_INT))    {    	compilable	  [FE]  JsonParseException  	60	13	replace
165	[BUG]  [BUGGY]  if((  expType  >=  NR_LONG)||(expType  ==  NR_INT))  {  [FE]  JsonParseException  [FE]        JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType  >=  NR_LONG)||(expType  ==  NR_INT))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((  expType  >=  NR_LONG)||(expType  ==  NR_INT))  {	  if((    expType    ==    NR_LONG)||(expType    ==    NR_INT))    {    if((    expType    >=    NR_LONG)||(expType    ==    NR_INT))    {    	compilable	  [FE]  JsonParseException  	60	13	replace
166	[BUG]  [BUGGY]  if((  expType  >=  0)||(expType  ==  0))  {  if((  expType  >=  0)||(expType  ==  0))  {  [CE]  'catch'  without  'try'  [FE]          JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType  >=  0)||(expType  ==  0))  {  if((  expType  >=  0)||(expType  ==  0))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((  expType  >=  0)||(expType  ==  0))  {  if((  expType  >=  0)||(expType  ==  0))  {	  if((    expType    ==    NR_LONG)||(expType    ==    NR_INT))    {    if((    expType    >=    NR_LONG)||(expType    ==    NR_INT))    {    	non-compiled	[CE]  'catch'  without  'try'	60	None	replace
167	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]            JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType  >=  NR_INT)||(expType  ==  NR_LONG))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	add	if((  expType  >=  NR_INT)||(expType  ==  NR_LONG))  {	  if((    expType    ==    NR_LONG)||(expType    ==    NR_INT))    {    if((    expType    >=    NR_LONG)||(expType    ==    NR_INT))    {    	compilable	  [FE]  JsonParseException  	60	13	replace
168	[BUG]  [BUGGY]  if((  expType  >=  NR_INT)||(expType  ==  NR_LONG))  {  [FE]  JsonParseException  [FE]            JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType  >=  NR_INT)||(expType  ==  NR_LONG))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((  expType  >=  NR_INT)||(expType  ==  NR_LONG))  {	  if((    expType    ==    NR_LONG)||(expType    ==    NR_INT))    {    if((    expType    >=    NR_LONG)||(expType    ==    NR_INT))    {    	compilable	  [FE]  JsonParseException  	60	13	replace
169	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]              JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType  <  NR_INT)||(expType  >  NR_INT))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	add	if((  expType  <  NR_INT)||(expType  >  NR_INT))  {	  if((    expType    ==    NR_LONG)||(expType    ==    NR_INT))    {    if((    expType    >=    NR_LONG)||(expType    ==    NR_INT))    {    	compilable	  [FE]  JsonParseException  	60	15	replace
170	[BUG]  [BUGGY]  if((  expType  <  NR_INT)||(expType  >  NR_INT))  {  [FE]  JsonParseException  [FE]              JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType  <  NR_INT)||(expType  >  NR_INT))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((  expType  <  NR_INT)||(expType  >  NR_INT))  {	  if((    expType    ==    NR_LONG)||(expType    ==    NR_INT))    {    if((    expType    >=    NR_LONG)||(expType    ==    NR_INT))    {    	compilable	  [FE]  JsonParseException  	60	15	replace
171	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]              JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType!=  NR_LONG)&&(expType!=  NR_BIGINT))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	add	if((  expType!=  NR_LONG)&&(expType!=  NR_BIGINT))  {	  if((    expType    ==    NR_INT)&&(expType!=    NR_LONG))    {    if((    expType!=    NR_INT)&&(expType!=    NR_LONG))    {    	compilable	  [FE]  JsonParseException  	12	12	replace
172	[BUG]  [BUGGY]  if((  expType!=  NR_LONG)&&(expType!=  NR_BIGINT))  {  [FE]  JsonParseException  [FE]              JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType!=  NR_LONG)&&(expType!=  NR_BIGINT))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((  expType!=  NR_LONG)&&(expType!=  NR_BIGINT))  {	  if((    expType    ==    NR_INT)&&(expType!=    NR_LONG))    {    if((    expType!=    NR_INT)&&(expType!=    NR_LONG))    {    	compilable	  [FE]  JsonParseException  	12	12	replace
173	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]                JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType!=  NR_LONG)||(expType!=  NR_LONG))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	add	if((  expType!=  NR_LONG)||(expType!=  NR_LONG))  {	  if((    expType    ==    NR_INT)&&(expType!=    NR_LONG))    {    if((    expType!=    NR_INT)&&(expType!=    NR_LONG))    {    	compilable	  [FE]  JsonParseException  	12	15	replace
174	[BUG]  [BUGGY]  if((  expType!=  NR_LONG)||(expType!=  NR_LONG))  {  [FE]  JsonParseException  [FE]                JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType!=  NR_LONG)||(expType!=  NR_LONG))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((  expType!=  NR_LONG)||(expType!=  NR_LONG))  {	  if((    expType    ==    NR_INT)&&(expType!=    NR_LONG))    {    if((    expType!=    NR_INT)&&(expType!=    NR_LONG))    {    	compilable	  [FE]  JsonParseException  	12	15	replace
175	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]                  JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType!=  NR_LONG)||(expType!=  NR_BIGINT))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	add	if((  expType!=  NR_LONG)||(expType!=  NR_BIGINT))  {	  if((    expType    ==    NR_INT)&&(expType!=    NR_LONG))    {    if((    expType!=    NR_INT)&&(expType!=    NR_LONG))    {    	compilable	  [FE]  JsonParseException  	12	15	replace
176	[BUG]  [BUGGY]  if((  expType!=  NR_LONG)||(expType!=  NR_BIGINT))  {  [FE]  JsonParseException  [FE]                  JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType!=  NR_LONG)||(expType!=  NR_BIGINT))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((  expType!=  NR_LONG)||(expType!=  NR_BIGINT))  {	  if((    expType    ==    NR_INT)&&(expType!=    NR_LONG))    {    if((    expType!=    NR_INT)&&(expType!=    NR_LONG))    {    	compilable	  [FE]  JsonParseException  	12	15	replace
177	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]                    JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType!=  NR_LONG)&&(expType!=  NR_UNKNOWN))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	add	if((  expType!=  NR_LONG)&&(expType!=  NR_UNKNOWN))  {	  if((    expType    ==    NR_INT)&&(expType!=    NR_LONG))    {    if((    expType!=    NR_INT)&&(expType!=    NR_LONG))    {    	compilable	  [FE]  JsonParseException  	12	13	replace
178	[BUG]  [BUGGY]  if((  expType!=  NR_LONG)&&(expType!=  NR_UNKNOWN))  {  [FE]  JsonParseException  [FE]                    JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType!=  NR_LONG)&&(expType!=  NR_UNKNOWN))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((  expType!=  NR_LONG)&&(expType!=  NR_UNKNOWN))  {	  if((    expType    ==    NR_INT)&&(expType!=    NR_LONG))    {    if((    expType!=    NR_INT)&&(expType!=    NR_LONG))    {    	compilable	  [FE]  JsonParseException  	12	13	replace
179	[BUG]  [BUGGY]  _parsingContext  =  JsonReadContext.createRootContext(null,  len);  [CE]  [FE]                      JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  _parsingContext  =  JsonReadContext.createRootContext(null,  len);  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	_parsingContext  =  JsonReadContext.createRootContext(null,  len);	  _parsingContext    =    JsonReadContext.createRootContext(null);    	non-compiled	[CE]  	63	None	replace
180	[BUG]  [BUGGY]  _numberLong  =  NumberInput.parseLong(numStr);  [CE]  [FE]                  JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  _numberLong  =  NumberInput.parseLong(numStr);  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	_numberLong  =  NumberInput.parseLong(numStr);	  _numberLong    =    Long.parseLong(numStr);    	non-compiled	[CE]  	21	None	replace
181	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]            JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  _numTypesValid  >=  NR_LONG)||(_numTypesValid  ==  NR_LONG))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	add	if((  _numTypesValid  >=  NR_LONG)||(_numTypesValid  ==  NR_LONG))  {	  if(_numTypesValid    ==    0)    {    if(_numTypesValid    >=    0)    {    	compilable	  [FE]  JsonParseException  	34	8	replace
182	[BUG]  [BUGGY]  if((  _numTypesValid  >=  NR_LONG)||(_numTypesValid  ==  NR_LONG))  {  [FE]  JsonParseException  [FE]            JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  _numTypesValid  >=  NR_LONG)||(_numTypesValid  ==  NR_LONG))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((  _numTypesValid  >=  NR_LONG)||(_numTypesValid  ==  NR_LONG))  {	  if(_numTypesValid    ==    0)    {    if(_numTypesValid    >=    0)    {    	compilable	  [FE]  JsonParseException  	34	8	replace
183	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]            JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType!=  NR_LONG)||(expType  ==  NR_INT))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	add	if((  expType!=  NR_LONG)||(expType  ==  NR_INT))  {	  if((    expType    ==    NR_LONG)||(expType    ==    NR_INT))    {    if((    expType!=    NR_LONG)||(expType    ==    NR_INT))    {    	compilable	  [FE]  JsonParseException  	31	15	replace
184	[BUG]  [BUGGY]  if((  expType!=  NR_LONG)||(expType  ==  NR_INT))  {  [FE]  JsonParseException  [FE]            JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType!=  NR_LONG)||(expType  ==  NR_INT))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((  expType!=  NR_LONG)||(expType  ==  NR_INT))  {	  if((    expType    ==    NR_LONG)||(expType    ==    NR_INT))    {    if((    expType!=    NR_LONG)||(expType    ==    NR_INT))    {    	compilable	  [FE]  JsonParseException  	31	15	replace
185	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]              JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType!=  NR_INT)||(expType  ==  NR_LONG))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	add	if((  expType!=  NR_INT)||(expType  ==  NR_LONG))  {	  if((    expType    ==    NR_LONG)||(expType    ==    NR_INT))    {    if((    expType!=    NR_LONG)||(expType    ==    NR_INT))    {    	compilable	  [FE]  JsonParseException  	31	15	replace
186	[BUG]  [BUGGY]  if((  expType!=  NR_INT)||(expType  ==  NR_LONG))  {  [FE]  JsonParseException  [FE]              JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType!=  NR_INT)||(expType  ==  NR_LONG))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((  expType!=  NR_INT)||(expType  ==  NR_LONG))  {	  if((    expType    ==    NR_LONG)||(expType    ==    NR_INT))    {    if((    expType!=    NR_LONG)||(expType    ==    NR_INT))    {    	compilable	  [FE]  JsonParseException  	31	15	replace
187	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]        JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType  >=  NR_INT)||(expType  ==  NR_BIGINT))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	add	if((  expType  >=  NR_INT)||(expType  ==  NR_BIGINT))  {	  if((    expType    ==    NR_INT)||(expType    ==    NR_BIGINT))    {    if((    expType    >=    NR_INT)||(expType    ==    NR_BIGINT))    {    	compilable	  [FE]  JsonParseException  	64	13	replace
188	[BUG]  [BUGGY]  if((  expType  >=  NR_INT)||(expType  ==  NR_BIGINT))  {  [FE]  JsonParseException  [FE]        JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType  >=  NR_INT)||(expType  ==  NR_BIGINT))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((  expType  >=  NR_INT)||(expType  ==  NR_BIGINT))  {	  if((    expType    ==    NR_INT)||(expType    ==    NR_BIGINT))    {    if((    expType    >=    NR_INT)||(expType    ==    NR_BIGINT))    {    	compilable	  [FE]  JsonParseException  	64	13	replace
189	[BUG]  [BUGGY]  if((  expType  >=  NR_INTEGER)||(expType  ==  NR_INTEGER))  {  [CE]  cannot  find  symbol  NR_INTEGER  [FE]          JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType  >=  NR_INTEGER)||(expType  ==  NR_INTEGER))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((  expType  >=  NR_INTEGER)||(expType  ==  NR_INTEGER))  {	  if((    expType    ==    NR_INT)||(expType    ==    NR_BIGINT))    {    if((    expType    >=    NR_INT)||(expType    ==    NR_BIGINT))    {    	non-compiled	[CE]  cannot  find  symbol  NR_INTEGER	64	None	replace
190	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]          JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType!=  NR_LONG)&&(expType  ==  NR_BIGINT))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	add	if((  expType!=  NR_LONG)&&(expType  ==  NR_BIGINT))  {	  if((    expType    ==    NR_INT)&&(expType    ==    NR_LONG))    {    if((    expType!=    NR_INT)&&(expType    ==    NR_LONG))    {    	compilable	  [FE]  JsonParseException  	6	11	replace
191	[BUG]  [BUGGY]  if((  expType!=  NR_LONG)&&(expType  ==  NR_BIGINT))  {  [FE]  JsonParseException  [FE]          JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType!=  NR_LONG)&&(expType  ==  NR_BIGINT))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((  expType!=  NR_LONG)&&(expType  ==  NR_BIGINT))  {	  if((    expType    ==    NR_INT)&&(expType    ==    NR_LONG))    {    if((    expType!=    NR_INT)&&(expType    ==    NR_LONG))    {    	compilable	  [FE]  JsonParseException  	6	11	replace
192	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]            JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType!=  NR_LONG)||(expType  ==  NR_LONG))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	add	if((  expType!=  NR_LONG)||(expType  ==  NR_LONG))  {	  if((    expType    ==    NR_INT)&&(expType    ==    NR_LONG))    {    if((    expType!=    NR_INT)&&(expType    ==    NR_LONG))    {    	compilable	  [FE]  JsonParseException  	6	15	replace
193	[BUG]  [BUGGY]  if((  expType!=  NR_LONG)||(expType  ==  NR_LONG))  {  [FE]  JsonParseException  [FE]            JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType!=  NR_LONG)||(expType  ==  NR_LONG))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((  expType!=  NR_LONG)||(expType  ==  NR_LONG))  {	  if((    expType    ==    NR_INT)&&(expType    ==    NR_LONG))    {    if((    expType!=    NR_INT)&&(expType    ==    NR_LONG))    {    	compilable	  [FE]  JsonParseException  	6	15	replace
194	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]              JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType!=  NR_LONG)&&(expType  ==  NR_INT))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	add	if((  expType!=  NR_LONG)&&(expType  ==  NR_INT))  {	  if((    expType    ==    NR_INT)&&(expType    ==    NR_LONG))    {    if((    expType!=    NR_INT)&&(expType    ==    NR_LONG))    {    	compilable	  [FE]  JsonParseException  	6	8	replace
195	[BUG]  [BUGGY]  if((  expType!=  NR_LONG)&&(expType  ==  NR_INT))  {  [FE]  JsonParseException  [FE]              JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType!=  NR_LONG)&&(expType  ==  NR_INT))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((  expType!=  NR_LONG)&&(expType  ==  NR_INT))  {	  if((    expType    ==    NR_INT)&&(expType    ==    NR_LONG))    {    if((    expType!=    NR_INT)&&(expType    ==    NR_LONG))    {    	compilable	  [FE]  JsonParseException  	6	8	replace
196	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]          JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType  ==  NR_UNKNOWN)||(expType!=  NR_UNKNOWN))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	add	if((  expType  ==  NR_UNKNOWN)||(expType!=  NR_UNKNOWN))  {	  if((    expType    ==    NR_INT)||(expType    ==    NR_UNKNOWN))    {    if((    expType    ==    NR_INT)||(expType!=    NR_UNKNOWN))    {    	compilable	  [FE]  JsonParseException  	37	15	replace
197	[BUG]  [BUGGY]  if((  expType  ==  NR_UNKNOWN)||(expType!=  NR_UNKNOWN))  {  [FE]  JsonParseException  [FE]          JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType  ==  NR_UNKNOWN)||(expType!=  NR_UNKNOWN))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((  expType  ==  NR_UNKNOWN)||(expType!=  NR_UNKNOWN))  {	  if((    expType    ==    NR_INT)||(expType    ==    NR_UNKNOWN))    {    if((    expType    ==    NR_INT)||(expType!=    NR_UNKNOWN))    {    	compilable	  [FE]  JsonParseException  	37	15	replace
198	[BUG]  [BUGGY]  _reportUnsupportedOperation();  [CE]  [FE]                  JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  _reportUnsupportedOperation();  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	_reportUnsupportedOperation();	  _reportIntegral(numStr);    	non-compiled	[CE]  	49	None	replace
199	[BUG]  [BUGGY]  _reportIntegral(numStr,  expType);  [CE]  [FE]                    JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  _reportIntegral(numStr,  expType);  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	_reportIntegral(numStr,  expType);	  _reportIntegral(numStr);    	non-compiled	[CE]  	49	None	replace
200	[BUG]  [BUGGY]  if((  expType  ==  NR_LONG)||(expType  ==  NR_BIGINT))  {  If(_numTypesValid  ==  NR_LONG)  {  [CE]  ';'  expected  [FE]              JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType  ==  NR_LONG)||(expType  ==  NR_BIGINT))  {  If(_numTypesValid  ==  NR_LONG)  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((  expType  ==  NR_LONG)||(expType  ==  NR_BIGINT))  {  If(_numTypesValid  ==  NR_LONG)  {	  if(_numTypesValid    ==    0)    {    If(_numTypesValid    ==    0)    {    	non-compiled	[CE]  ';'  expected	35	None	replace
201	[BUG]  [BUGGY]  if((  expType  ==  NR_MINUS)||(expType  ==  NR_INT))  {  [CE]  cannot  find  symbol  NR_MINUS  [FE]        JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType  ==  NR_MINUS)||(expType  ==  NR_INT))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((  expType  ==  NR_MINUS)||(expType  ==  NR_INT))  {	  if((    expType    ==    NR_LONG)||(expType    ==    NR_INT))    {    if((    expType    ==    NR_LONG)||(expType    ==    NR_INT))    {    	non-compiled	[CE]  cannot  find  symbol  NR_MINUS	29	None	replace
202	[BUG]  [BUGGY]  if((  expType  ==  NR_INTEGER)||(expType  ==  NR_INT))  {  [CE]  cannot  find  symbol  NR_INTEGER  [FE]          JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType  ==  NR_INTEGER)||(expType  ==  NR_INT))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((  expType  ==  NR_INTEGER)||(expType  ==  NR_INT))  {	  if((    expType    ==    NR_LONG)||(expType    ==    NR_INT))    {    if((    expType    ==    NR_LONG)||(expType    ==    NR_INT))    {    	non-compiled	[CE]  cannot  find  symbol  NR_INTEGER	29	None	replace
203	[BUG]  [BUGGY]  _reportUnexpectedNumberInput(len);  [CE]  [FE]                  JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  _reportUnexpectedNumberInput(len);  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	_reportUnexpectedNumberInput(len);	  _reportIntegral(numStr);    	non-compiled	[CE]  	49	None	replace
204	[BUG]  [BUGGY]  if((  expType  ==  NR_UNKNOWN)||(expType  ==  NR_TYPE))  {  [CE]  cannot  find  symbol  NR_TYPE  [FE]        JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType  ==  NR_UNKNOWN)||(expType  ==  NR_TYPE))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((  expType  ==  NR_UNKNOWN)||(expType  ==  NR_TYPE))  {	  if((    expType    ==    NR_INT)||(expType    ==    NR_UNKNOWN))    {    if((    expType    ==    NR_INT)||(expType    ==    NR_UNKNOWN))    {    	non-compiled	[CE]  cannot  find  symbol  NR_TYPE	36	None	replace
205	[BUG]  [BUGGY]  if(expType  ==  NR_UNKNOWN)  {  _numberLong  =  Long.parseLong(numStr);  expType  =  NR_LONG;  }  [CE]  [FE]                        JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if(expType  ==  NR_UNKNOWN)  {  _numberLong  =  Long.parseLong(numStr);  expType  =  NR_LONG;  }  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if(expType  ==  NR_UNKNOWN)  {  _numberLong  =  Long.parseLong(numStr);  expType  =  NR_LONG;  }	  _numberLong    =    Long.parseLong(numStr);    expType    =    NR_LONG;    	non-compiled	[CE]  	24	None	replace
206	[BUG]  [BUGGY]  _numberLong  =  Long.parseLong(numStr);  _expTypesValid  =  NR_LONG;  [CE]  [FE]                          JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  _numberLong  =  Long.parseLong(numStr);  _expTypesValid  =  NR_LONG;  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	_numberLong  =  Long.parseLong(numStr);  _expTypesValid  =  NR_LONG;	  _numberLong    =    Long.parseLong(numStr);    expType    =    NR_LONG;    	non-compiled	[CE]  	24	None	replace
207	[BUG]  [BUGGY]  if((  expType  ==  NR_LONG)||(expType  ==  NR_LONG))  {  if((  expType  >=  NR_LONG)||(expType  ==  NR_LONG))  {  [CE]  'catch'  without  'try'  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType  ==  NR_LONG)||(expType  ==  NR_LONG))  {  if((  expType  >=  NR_LONG)||(expType  ==  NR_LONG))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((    expType    ==    NR_LONG)||(expType    ==    NR_LONG))    {    if((  expType  >=  NR_LONG)||(expType  ==  NR_LONG))  {	  	non-compiled	[CE]  'catch'  without  'try'	15	None	add
208	[BUG]  [BUGGY]  if((  expType  ==  NR_UNKNOWN)||(expType  ==  NR_INT))  {  if((  expType  >=  NR_UNKNOWN)||(expType  ==  NR_INT))  {  [CE]  'catch'  without  'try'  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType  ==  NR_UNKNOWN)||(expType  ==  NR_INT))  {  if((  expType  >=  NR_UNKNOWN)||(expType  ==  NR_INT))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((    expType    ==    NR_UNKNOWN)||(expType    ==    NR_INT))    {    if((  expType  >=  NR_UNKNOWN)||(expType  ==  NR_INT))  {	  	non-compiled	[CE]  'catch'  without  'try'	54	None	add
209	[BUG]  [BUGGY]  if((  expType  ==  NR_INTEGER)||(expType!=  NR_INTEGER))  {  [CE]  cannot  find  symbol  NR_INTEGER  [FE]          JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType  ==  NR_INTEGER)||(expType!=  NR_INTEGER))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((  expType  ==  NR_INTEGER)||(expType!=  NR_INTEGER))  {	  if((    expType    ==    NR_INT)||(expType    ==    NR_BIGINT))    {    if((    expType    ==    NR_INT)||(expType!=    NR_BIGINT))    {    	non-compiled	[CE]  cannot  find  symbol  NR_INTEGER	40	None	replace
210	[BUG]  [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(-1,  -1);  [CE]  [FE]                  JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(-1,  -1);  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	_parsingContext  =  _parsingContext.createChildObjectContext(-1,  -1);	  _parsingContext.setCurrentName(numStr);    	non-compiled	[CE]  	61	None	replace
211	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]              JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType  >=  NR_LONG)&&(expType  ==  NR_INT))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	add	if((  expType  >=  NR_LONG)&&(expType  ==  NR_INT))  {	  if((    expType    ==    NR_INT)&&(expType    ==    NR_LONG))    {    if((    expType    >=    NR_INT)&&(expType    ==    NR_LONG))    {    	compilable	  [FE]  JsonParseException  	8	8	replace
212	[BUG]  [BUGGY]  if((  expType  >=  NR_LONG)&&(expType  ==  NR_INT))  {  [FE]  JsonParseException  [FE]              JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType  >=  NR_LONG)&&(expType  ==  NR_INT))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((  expType  >=  NR_LONG)&&(expType  ==  NR_INT))  {	  if((    expType    ==    NR_INT)&&(expType    ==    NR_LONG))    {    if((    expType    >=    NR_INT)&&(expType    ==    NR_LONG))    {    	compilable	  [FE]  JsonParseException  	8	8	replace
213	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]                JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType  >=  NR_LONG)&&(expType  ==  NR_UNKNOWN))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	add	if((  expType  >=  NR_LONG)&&(expType  ==  NR_UNKNOWN))  {	  if((    expType    ==    NR_INT)&&(expType    ==    NR_LONG))    {    if((    expType    >=    NR_INT)&&(expType    ==    NR_LONG))    {    	compilable	  [FE]  JsonParseException  	8	8	replace
214	[BUG]  [BUGGY]  if((  expType  >=  NR_LONG)&&(expType  ==  NR_UNKNOWN))  {  [FE]  JsonParseException  [FE]                JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType  >=  NR_LONG)&&(expType  ==  NR_UNKNOWN))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((  expType  >=  NR_LONG)&&(expType  ==  NR_UNKNOWN))  {	  if((    expType    ==    NR_INT)&&(expType    ==    NR_LONG))    {    if((    expType    >=    NR_INT)&&(expType    ==    NR_LONG))    {    	compilable	  [FE]  JsonParseException  	8	8	replace
215	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]          JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType  ==  NR_LONG)&&(expType!=  NR_UNKNOWN))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	add	if((  expType  ==  NR_LONG)&&(expType!=  NR_UNKNOWN))  {	  if((    expType    ==    NR_INT)&&(expType!=    NR_LONG))    {    if((    expType    ==    NR_INT)&&(expType    >>    NR_LONG))    {    	compilable	  [FE]  JsonParseException  	10	8	replace
216	[BUG]  [BUGGY]  if((  expType  ==  NR_LONG)&&(expType!=  NR_UNKNOWN))  {  [FE]  JsonParseException  [FE]          JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType  ==  NR_LONG)&&(expType!=  NR_UNKNOWN))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((  expType  ==  NR_LONG)&&(expType!=  NR_UNKNOWN))  {	  if((    expType    ==    NR_INT)&&(expType!=    NR_LONG))    {    if((    expType    ==    NR_INT)&&(expType    >>    NR_LONG))    {    	compilable	  [FE]  JsonParseException  	10	8	replace
217	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]        JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType  <  NR_INT)||(expType  >  NR_BIGINT))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	add	if((  expType  <  NR_INT)||(expType  >  NR_BIGINT))  {	  if((    expType    ==    NR_INT)||(expType    ==    NR_BIGINT))    {    if((    expType    >=    NR_INT)||(expType    ==    NR_BIGINT))    {    	compilable	  [FE]  JsonParseException  	64	12	replace
218	[BUG]  [BUGGY]  if((  expType  <  NR_INT)||(expType  >  NR_BIGINT))  {  [FE]  JsonParseException  [FE]        JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType  <  NR_INT)||(expType  >  NR_BIGINT))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((  expType  <  NR_INT)||(expType  >  NR_BIGINT))  {	  if((    expType    ==    NR_INT)||(expType    ==    NR_BIGINT))    {    if((    expType    >=    NR_INT)||(expType    ==    NR_BIGINT))    {    	compilable	  [FE]  JsonParseException  	64	12	replace
219	[BUG]  [BUGGY]  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LBIGINT;  [CE]  [FE]                      JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LBIGINT;  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	_numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LBIGINT;	  _numberLong    =    Long.parseLong(numStr);    _numTypesValid    =    NR_LONG;    	non-compiled	[CE]  	23	None	replace
220	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]        JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType  ==  NR_BIGINT)||(expType  ==  NR_INT))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	add	if((  expType  ==  NR_BIGINT)||(expType  ==  NR_INT))  {	  if((    expType    ==    NR_INT)||(expType    ==    NR_BIGINT))    {    if((    expType    ==    NR_INT)||(expType    ==    NR_BIGINT))    {    	compilable	  [FE]  JsonParseException  	39	11	replace
221	[BUG]  [BUGGY]  if((  expType  ==  NR_BIGINT)||(expType  ==  NR_INT))  {  [FE]  JsonParseException  [FE]        JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType  ==  NR_BIGINT)||(expType  ==  NR_INT))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((  expType  ==  NR_BIGINT)||(expType  ==  NR_INT))  {	  if((    expType    ==    NR_INT)||(expType    ==    NR_BIGINT))    {    if((    expType    ==    NR_INT)||(expType    ==    NR_BIGINT))    {    	compilable	  [FE]  JsonParseException  	39	11	replace
222	[BUG]  [BUGGY]  _parsingContext  =  JsonReadContext.createRootContext(null,  null);  [CE]  [FE]                      JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  _parsingContext  =  JsonReadContext.createRootContext(null,  null);  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	_parsingContext  =  JsonReadContext.createRootContext(null,  null);	  _parsingContext    =    JsonReadContext.createRootContext(null);    	non-compiled	[CE]  	63	None	replace
223	[BUG]  [BUGGY]  _parsingContext  =  JsonReadContext.createRootContext(buf,  len);  [CE]  [FE]                        JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  _parsingContext  =  JsonReadContext.createRootContext(buf,  len);  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	_parsingContext  =  JsonReadContext.createRootContext(buf,  len);	  _parsingContext    =    JsonReadContext.createRootContext(null);    	non-compiled	[CE]  	63	None	replace
224	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType  ==  NR_LONG)&&(expType  ==  NR_FLOAT))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	add	if((  expType  ==  NR_LONG)&&(expType  ==  NR_FLOAT))  {	  if((    expType    ==    NR_LONG)||(expType    ==    NR_FLOAT))    {    	compilable	  [FE]  JsonParseException  	57	8	replace
225	[BUG]  [BUGGY]  if((  expType  ==  NR_LONG)&&(expType  ==  NR_FLOAT))  {  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType  ==  NR_LONG)&&(expType  ==  NR_FLOAT))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((  expType  ==  NR_LONG)&&(expType  ==  NR_FLOAT))  {	  if((    expType    ==    NR_LONG)||(expType    ==    NR_FLOAT))    {    	compilable	  [FE]  JsonParseException  	57	8	replace
226	[BUG]  [BUGGY]  if((  expType  ==  NR_LONG)||(expType  ==  NR_DOUBLE))  {  if((  expType  >=  NR_LONG)||(expType  ==  NR_DOUBLE))  {  [CE]  'catch'  without  'try'  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType  ==  NR_LONG)||(expType  ==  NR_DOUBLE))  {  if((  expType  >=  NR_LONG)||(expType  ==  NR_DOUBLE))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((    expType    ==    NR_LONG)||(expType    ==    NR_DOUBLE))    {    if((  expType  >=  NR_LONG)||(expType  ==  NR_DOUBLE))  {	  	non-compiled	[CE]  'catch'  without  'try'	58	None	add
227	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]            JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType  ==  NR_INT)&&(expType  >=  NR_LONG))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	add	if((  expType  ==  NR_INT)&&(expType  >=  NR_LONG))  {	  if((    expType    ==    NR_INT)&&(expType!=    NR_LONG))    {    if((    expType    ==    NR_INT)&&(expType    >=    NR_LONG))    {    	compilable	  [FE]  JsonParseException  	11	8	replace
228	[BUG]  [BUGGY]  if((  expType  ==  NR_INT)&&(expType  >=  NR_LONG))  {  [FE]  JsonParseException  [FE]            JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType  ==  NR_INT)&&(expType  >=  NR_LONG))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((  expType  ==  NR_INT)&&(expType  >=  NR_LONG))  {	  if((    expType    ==    NR_INT)&&(expType!=    NR_LONG))    {    if((    expType    ==    NR_INT)&&(expType    >=    NR_LONG))    {    	compilable	  [FE]  JsonParseException  	11	8	replace
229	[BUG]  [BUGGY]  if((  expType  ==  NR_LONG)||(expType  ==  NR_BIGINT))  {  if((  expType  >=  NR_LONG)||(expType  ==  NR_BIGINT))  {  [CE]  'catch'  without  'try'  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType  ==  NR_LONG)||(expType  ==  NR_BIGINT))  {  if((  expType  >=  NR_LONG)||(expType  ==  NR_BIGINT))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((    expType    ==    NR_LONG)||(expType    ==    NR_BIGINT))    {    if((  expType  >=  NR_LONG)||(expType  ==  NR_BIGINT))  {	  	non-compiled	[CE]  'catch'  without  'try'	27	None	add
230	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]              JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType!=  NR_LONG)&&(expType!=  NR_INT))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	add	if((  expType!=  NR_LONG)&&(expType!=  NR_INT))  {	  if((    expType    ==    NR_INT)&&(expType!=    NR_LONG))    {    if((    expType!=    NR_INT)&&(expType!=    NR_LONG))    {    	compilable	  [FE]  JsonParseException  	12	15	replace
231	[BUG]  [BUGGY]  if((  expType!=  NR_LONG)&&(expType!=  NR_INT))  {  [FE]  JsonParseException  [FE]              JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType!=  NR_LONG)&&(expType!=  NR_INT))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((  expType!=  NR_LONG)&&(expType!=  NR_INT))  {	  if((    expType    ==    NR_INT)&&(expType!=    NR_LONG))    {    if((    expType!=    NR_INT)&&(expType!=    NR_LONG))    {    	compilable	  [FE]  JsonParseException  	12	15	replace
232	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]                JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType!=  NR_INT)&&(expType!=  NR_LONG))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	add	if((  expType!=  NR_INT)&&(expType!=  NR_LONG))  {	  if((    expType    ==    NR_INT)&&(expType!=    NR_LONG))    {    if((    expType!=    NR_INT)&&(expType!=    NR_LONG))    {    	compilable	  [FE]  JsonParseException  	12	15	replace
233	[BUG]  [BUGGY]  if((  expType!=  NR_INT)&&(expType!=  NR_LONG))  {  [FE]  JsonParseException  [FE]                JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType!=  NR_INT)&&(expType!=  NR_LONG))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((  expType!=  NR_INT)&&(expType!=  NR_LONG))  {	  if((    expType    ==    NR_INT)&&(expType!=    NR_LONG))    {    if((    expType!=    NR_INT)&&(expType!=    NR_LONG))    {    	compilable	  [FE]  JsonParseException  	12	15	replace
234	[BUG]  [BUGGY]  _parsingContext.setCurrentLong(expType);  [CE]  [FE]                      JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  _parsingContext.setCurrentLong(expType);  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	_parsingContext.setCurrentLong(expType);	  _parsingContext.setCurrentLong(numStr);    	non-compiled	[CE]  	51	None	replace
235	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]            JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType!=  NR_INT)||(expType  ==  NR_UNKNOWN))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	add	if((  expType!=  NR_INT)||(expType  ==  NR_UNKNOWN))  {	  if((    expType    ==    NR_INT)||(expType    ==    NR_UNKNOWN))    {    if((    expType!=    NR_INT)||(expType    ==    NR_UNKNOWN))    {    	compilable	  [FE]  JsonParseException  	38	15	replace
236	[BUG]  [BUGGY]  if((  expType!=  NR_INT)||(expType  ==  NR_UNKNOWN))  {  [FE]  JsonParseException  [FE]            JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType!=  NR_INT)||(expType  ==  NR_UNKNOWN))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((  expType!=  NR_INT)||(expType  ==  NR_UNKNOWN))  {	  if((    expType    ==    NR_INT)||(expType    ==    NR_UNKNOWN))    {    if((    expType!=    NR_INT)||(expType    ==    NR_UNKNOWN))    {    	compilable	  [FE]  JsonParseException  	38	15	replace
237	[BUG]  [BUGGY]  if((  expType!=  NR_UNKNOWN)||(expType  ==  NR_TYPE))  {  [CE]  cannot  find  symbol  NR_TYPE  [FE]              JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType!=  NR_UNKNOWN)||(expType  ==  NR_TYPE))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((  expType!=  NR_UNKNOWN)||(expType  ==  NR_TYPE))  {	  if((    expType    ==    NR_INT)||(expType    ==    NR_UNKNOWN))    {    if((    expType!=    NR_INT)||(expType    ==    NR_UNKNOWN))    {    	non-compiled	[CE]  cannot  find  symbol  NR_TYPE	38	None	replace
238	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]          JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType!=  NR_LONG)&&(expType  ==  NR_UNKNOWN))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	add	if((  expType!=  NR_LONG)&&(expType  ==  NR_UNKNOWN))  {	  if((    expType    ==    NR_INT)&&(expType    ==    NR_LONG))    {    if((    expType!=    NR_INT)&&(expType    ==    NR_LONG))    {    	compilable	  [FE]  JsonParseException  	6	10	replace
239	[BUG]  [BUGGY]  if((  expType!=  NR_LONG)&&(expType  ==  NR_UNKNOWN))  {  [FE]  JsonParseException  [FE]          JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  if((  expType!=  NR_LONG)&&(expType  ==  NR_UNKNOWN))  {  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	if((  expType!=  NR_LONG)&&(expType  ==  NR_UNKNOWN))  {	  if((    expType    ==    NR_INT)&&(expType    ==    NR_LONG))    {    if((    expType!=    NR_INT)&&(expType    ==    NR_LONG))    {    	compilable	  [FE]  JsonParseException  	6	10	replace
240	[BUG]  [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext();  [CE]  [FE]                    JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {        [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext();  [BUGGY]      _reportTooLongIntegral(expType,  numStr);  }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5103103630798288	848	848	8	replace	_parsingContext  =  _parsingContext.createChildObjectContext();	  _parsingContext.setCurrentName(null);    	non-compiled	[CE]  	50	None	replace
