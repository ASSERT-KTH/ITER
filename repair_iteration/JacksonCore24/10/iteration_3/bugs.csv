bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]          _parsingContext  =  _parsingContext.getParent();  _parsingContext  =  _parsingContext.getParent();  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	add	                _parsingContext    =    _parsingContext.getParent();    _parsingContext  =  _parsingContext.getParent();	  	compilable	  [FE]  JsonParseException  	5	8	add
2	[BUG]  [BUGGY]          _parsingContext  =  _parsingContext.getParent();  _parsingContext  =  _parsingContext.getParent();  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]          _parsingContext  =  _parsingContext.getParent();  _parsingContext  =  _parsingContext.getParent();  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	replace	                _parsingContext    =    _parsingContext.getParent();    _parsingContext  =  _parsingContext.getParent();	  	compilable	  [FE]  JsonParseException  	5	8	add
3	[BUG]  [BUGGY]          _parsingContext  =  _parsingContext.getParent();  _parsingContext  =  _parsingContext.getParent();  (expType  ==  NR_LONG)?   "long "  :   "long ");  [CE]  not  a  statement  [FE]      JsonParseException    [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]          _parsingContext  =  _parsingContext.getParent();  _parsingContext  =  _parsingContext.getParent();  (expType  ==  NR_LONG)?   "long "  :   "long ");  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	replace	                _parsingContext    =    _parsingContext.getParent();    _parsingContext  =  _parsingContext.getParent();  (expType  ==  NR_LONG)?   "long "  :   "long ");	  	non-compiled	[CE]  not  a  statement	5	None	add
4	[BUG]  [BUGGY]          _parsingContext  =  _parsingContext.getParent();  _parsingContext  =  _parsingContext.getParent();  (expType  ==  NR_LONG)?   "long "  :   "int ");  [CE]  not  a  statement  [FE]        JsonParseException    [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]          _parsingContext  =  _parsingContext.getParent();  _parsingContext  =  _parsingContext.getParent();  (expType  ==  NR_LONG)?   "long "  :   "int ");  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	replace	                _parsingContext    =    _parsingContext.getParent();    _parsingContext  =  _parsingContext.getParent();  (expType  ==  NR_LONG)?   "long "  :   "int ");	  	non-compiled	[CE]  not  a  statement	5	None	add
5	[BUG]  [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(rawNum,  numDesc);  [CE]  method  createChildObjectContext  in  class  JsonReadContext  cannot  be  applied  to  given  types;  [FE]          JsonParseException      [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(rawNum,  numDesc);  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	replace	_parsingContext  =  _parsingContext.createChildObjectContext(rawNum,  numDesc);	          _parsingContext    =    _parsingContext.createChildObjectContext(numDesc);    	non-compiled	[CE]  method  createChildObjectContext  in  class  JsonReadContext  cannot  be  applied  to  given  types;	2	None	replace
6	[BUG]  [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(null,  numDesc);  [CE]  method  createChildObjectContext  in  class  JsonReadContext  cannot  be  applied  to  given  types;  [FE]            JsonParseException      [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(null,  numDesc);  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	replace	_parsingContext  =  _parsingContext.createChildObjectContext(null,  numDesc);	          _parsingContext    =    _parsingContext.createChildObjectContext(numDesc);    	non-compiled	[CE]  method  createChildObjectContext  in  class  JsonReadContext  cannot  be  applied  to  given  types;	2	None	replace
7	[BUG]  [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(numDesc,  rawNum);  [CE]  method  createChildObjectContext  in  class  JsonReadContext  cannot  be  applied  to  given  types;  [FE]              JsonParseException      [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(numDesc,  rawNum);  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	replace	_parsingContext  =  _parsingContext.createChildObjectContext(numDesc,  rawNum);	          _parsingContext    =    _parsingContext.createChildObjectContext(numDesc);    	non-compiled	[CE]  method  createChildObjectContext  in  class  JsonReadContext  cannot  be  applied  to  given  types;	2	None	replace
8	[BUG]  [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(rawNum);  [CE]  method  createChildObjectContext  in  class  JsonReadContext  cannot  be  applied  to  given  types;  [FE]                JsonParseException      [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(rawNum);  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	replace	_parsingContext  =  _parsingContext.createChildObjectContext(rawNum);	          _parsingContext    =    _parsingContext.createChildObjectContext(numDesc);    	non-compiled	[CE]  method  createChildObjectContext  in  class  JsonReadContext  cannot  be  applied  to  given  types;	2	None	replace
9	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]  _reportError(   "Numeric  value(%s)out  of  range  of  %s   "  +  numDesc,  (expType  ==  NR_LONG)?     "long   "  :   "long   ");  _reportError( "Numeric  value(%s)out  of  range  of  %s   "  +  numDesc,  (expType  ==  NR_LONG)?   "long   "  :   "long ");  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	add	_reportError(   "Numeric    value(%s)out    of    range    of    %s   "    +    numDesc,    (expType    ==    NR_LONG)?       "long   "    :   "long   ");    _reportError( "Numeric  value(%s)out  of  range  of  %s   "  +  numDesc,  (expType  ==  NR_LONG)?   "long   "  :   "long ");	  	compilable	  [FE]  JsonParseException  	22	8	add
10	[BUG]  [BUGGY]  _reportError(   "Numeric  value(%s)out  of  range  of  %s   "  +  numDesc,  (expType  ==  NR_LONG)?     "long   "  :   "long   ");  _reportError( "Numeric  value(%s)out  of  range  of  %s   "  +  numDesc,  (expType  ==  NR_LONG)?   "long   "  :   "long ");  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]  _reportError(   "Numeric  value(%s)out  of  range  of  %s   "  +  numDesc,  (expType  ==  NR_LONG)?     "long   "  :   "long   ");  _reportError( "Numeric  value(%s)out  of  range  of  %s   "  +  numDesc,  (expType  ==  NR_LONG)?   "long   "  :   "long ");  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	replace	_reportError(   "Numeric    value(%s)out    of    range    of    %s   "    +    numDesc,    (expType    ==    NR_LONG)?       "long   "    :   "long   ");    _reportError( "Numeric  value(%s)out  of  range  of  %s   "  +  numDesc,  (expType  ==  NR_LONG)?   "long   "  :   "long ");	  	compilable	  [FE]  JsonParseException  	22	8	add
11	[BUG]  [BUGGY]  if(numDesc  ==  null)  {  if(expType.length()  ==  0)  {  return;  }  [CE]  illegal  start  of  expression  [FE]                JsonParseException      [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]  if(numDesc  ==  null)  {  if(expType.length()  ==  0)  {  return;  }  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	replace	if(numDesc  ==  null)  {  if(expType.length()  ==  0)  {  return;  }	          if(numDesc!=    null)    {    if(expType.length()    ==    0)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
12	[BUG]  [BUGGY]  if(rawNum  ==  0)  {  if(expType.length()  ==  0)  {  return;  }  [CE]  illegal  start  of  expression  [FE]                  JsonParseException      [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]  if(rawNum  ==  0)  {  if(expType.length()  ==  0)  {  return;  }  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	replace	if(rawNum  ==  0)  {  if(expType.length()  ==  0)  {  return;  }	          if(numDesc!=    null)    {    if(expType.length()    ==    0)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
13	[BUG]  [BUGGY]  if(numDesc  ==  null)  {  if(expType.length()!=  0)  {  return;  }  [CE]  illegal  start  of  expression  [FE]                    JsonParseException      [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]  if(numDesc  ==  null)  {  if(expType.length()!=  0)  {  return;  }  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	replace	if(numDesc  ==  null)  {  if(expType.length()!=  0)  {  return;  }	          if(numDesc!=    null)    {    if(expType.length()    ==    0)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
14	[BUG]  [BUGGY]  (expType  ==  NR_LONG)?   "long "  : "long ");  [CE]  not  a  statement  [FE]                      JsonParseException      [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]  (expType  ==  NR_LONG)?   "long "  : "long ");  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	replace	(expType  ==  NR_LONG)?   "long "  : "long ");	          if(numDesc!=    null)    {    if(expType.length()    ==    0)    {    return;    }    	non-compiled	[CE]  not  a  statement	29	None	replace
15	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(-1,  1);  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	add	_parsingContext  =  _parsingContext.createChildObjectContext(-1,  1);	          _parsingContext    =    _parsingContext.createChildObjectContext(-1,    -1);    	compilable	  [FE]  JsonParseException  	8	8	replace
16	[BUG]  [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(-1,  1);  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(-1,  1);  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	replace	_parsingContext  =  _parsingContext.createChildObjectContext(-1,  1);	          _parsingContext    =    _parsingContext.createChildObjectContext(-1,    -1);    	compilable	  [FE]  JsonParseException  	8	8	replace
17	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]  _parsingContext  =  _parsingContext.createChildArrayContext(-1,  -1);  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	add	_parsingContext  =  _parsingContext.createChildArrayContext(-1,  -1);	          _parsingContext    =    _parsingContext.createChildObjectContext(-1,    -1);    	compilable	  [FE]  JsonParseException  	8	8	replace
18	[BUG]  [BUGGY]  _parsingContext  =  _parsingContext.createChildArrayContext(-1,  -1);  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]  _parsingContext  =  _parsingContext.createChildArrayContext(-1,  -1);  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	replace	_parsingContext  =  _parsingContext.createChildArrayContext(-1,  -1);	          _parsingContext    =    _parsingContext.createChildObjectContext(-1,    -1);    	compilable	  [FE]  JsonParseException  	8	8	replace
19	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]        JsonParseException    [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(-1,  2);  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	add	_parsingContext  =  _parsingContext.createChildObjectContext(-1,  2);	          _parsingContext    =    _parsingContext.createChildObjectContext(-1,    -1);    	compilable	  [FE]  JsonParseException  	8	8	replace
20	[BUG]  [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(-1,  2);  [FE]  JsonParseException  [FE]        JsonParseException    [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(-1,  2);  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	replace	_parsingContext  =  _parsingContext.createChildObjectContext(-1,  2);	          _parsingContext    =    _parsingContext.createChildObjectContext(-1,    -1);    	compilable	  [FE]  JsonParseException  	8	8	replace
21	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]  _parsingContext.setCurrentName(rawNum);  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	add	_parsingContext.setCurrentName(rawNum);	          _parsingContext.setCurrentName(numDesc);    	compilable	  [FE]  JsonParseException  	4	8	replace
22	[BUG]  [BUGGY]  _parsingContext.setCurrentName(rawNum);  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]  _parsingContext.setCurrentName(rawNum);  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	replace	_parsingContext.setCurrentName(rawNum);	          _parsingContext.setCurrentName(numDesc);    	compilable	  [FE]  JsonParseException  	4	8	replace
23	[BUG]  [BUGGY]  _parsingContext.setCurrentName(numDesc,  rawNum);  [CE]  method  setCurrentName  in  class  JsonReadContext  cannot  be  applied  to  given  types;  [FE]      JsonParseException    [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]  _parsingContext.setCurrentName(numDesc,  rawNum);  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	replace	_parsingContext.setCurrentName(numDesc,  rawNum);	          _parsingContext.setCurrentName(numDesc);    	non-compiled	[CE]  method  setCurrentName  in  class  JsonReadContext  cannot  be  applied  to  given  types;	4	None	replace
24	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]        JsonParseException    [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]  _parsingContext.setCurrentName(null);  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	add	_parsingContext.setCurrentName(null);	          _parsingContext.setCurrentName(numDesc);    	compilable	  [FE]  JsonParseException  	4	8	replace
25	[BUG]  [BUGGY]  _parsingContext.setCurrentName(null);  [FE]  JsonParseException  [FE]        JsonParseException    [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]  _parsingContext.setCurrentName(null);  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	replace	_parsingContext.setCurrentName(null);	          _parsingContext.setCurrentName(numDesc);    	compilable	  [FE]  JsonParseException  	4	8	replace
26	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]          JsonParseException      [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]  _reportError( "Numeric  value(%s)out  of  range  of  %s "  +  numDesc,  expType  ==  NR_LONG?   "long "  : "long ");  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	add	_reportError( "Numeric  value(%s)out  of  range  of  %s "  +  numDesc,  expType  ==  NR_LONG?   "long "  : "long ");	  _reportError(   "Numeric    value(%s)out    of    range    of    %s   "    +    numDesc,    expType    {    NR_LONG?       "long   "    :   "long   ");    	compilable	  [FE]  JsonParseException  	19	8	replace
27	[BUG]  [BUGGY]  _reportError( "Numeric  value(%s)out  of  range  of  %s "  +  numDesc,  expType  ==  NR_LONG?   "long "  : "long ");  [FE]  JsonParseException  [FE]          JsonParseException      [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]  _reportError( "Numeric  value(%s)out  of  range  of  %s "  +  numDesc,  expType  ==  NR_LONG?   "long "  : "long ");  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	replace	_reportError( "Numeric  value(%s)out  of  range  of  %s "  +  numDesc,  expType  ==  NR_LONG?   "long "  : "long ");	  _reportError(   "Numeric    value(%s)out    of    range    of    %s   "    +    numDesc,    expType    {    NR_LONG?       "long   "    :   "long   ");    	compilable	  [FE]  JsonParseException  	19	8	replace
28	[BUG]  [BUGGY]  _reportError( "Numeric  value(%s)out  of  range  of  %s "  +  numDesc,  expType  {  NR_LONG?   "long "  : "long ");  }  [CE]  [FE]            JsonParseException      [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]  _reportError( "Numeric  value(%s)out  of  range  of  %s "  +  numDesc,  expType  {  NR_LONG?   "long "  : "long ");  }  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	replace	_reportError( "Numeric  value(%s)out  of  range  of  %s "  +  numDesc,  expType  {  NR_LONG?   "long "  : "long ");  }	  _reportError(   "Numeric    value(%s)out    of    range    of    %s   "    +    numDesc,    expType    {    NR_LONG?       "long   "    :   "long   ");    	non-compiled	[CE]  	19	None	replace
29	[BUG]  [BUGGY]  _parsingContext  =  ctxt.getCurrentContext();  [CE]  cannot  find  symbol  ctxt  [FE]        JsonParseException      [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]  _parsingContext  =  ctxt.getCurrentContext();  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	replace	_parsingContext  =  ctxt.getCurrentContext();	          _parsingContext    =    _parsingContext.getCurrentContext();    	non-compiled	[CE]  cannot  find  symbol  ctxt	24	None	replace
30	[BUG]  [BUGGY]  _parsingContext  =  context.getCurrentContext();  [CE]  cannot  find  symbol  context  [FE]          JsonParseException      [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]  _parsingContext  =  context.getCurrentContext();  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	replace	_parsingContext  =  context.getCurrentContext();	          _parsingContext    =    _parsingContext.getCurrentContext();    	non-compiled	[CE]  cannot  find  symbol  context	24	None	replace
31	[BUG]  [BUGGY]  _parsingContext  =  ctxt.getParent();  [CE]  cannot  find  symbol  ctxt  [FE]    JsonParseException    [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]  _parsingContext  =  ctxt.getParent();  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	replace	_parsingContext  =  ctxt.getParent();	          _parsingContext    =    _parsingContext.getParent();    	non-compiled	[CE]  cannot  find  symbol  ctxt	6	None	replace
32	[BUG]  [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(ctxt);  [CE]  cannot  find  symbol  ctxt  [FE]      JsonParseException    [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(ctxt);  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	replace	_parsingContext  =  _parsingContext.createChildObjectContext(ctxt);	          _parsingContext    =    _parsingContext.getParent();    	non-compiled	[CE]  cannot  find  symbol  ctxt	6	None	replace
33	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]  _reportError(     "Numeric    value    (%s)out    of    range    of    %s     ",    rawNum,(expType    ==    NR_LONG)?         "long     "    :     "int     ");    _reportError(   "Numeric  value  (%s)out  of  range  of  %s     ",  rawNum,(expType  ==  NR_LONG)?     "long   "  :     "int   ");  _reportError( "Numeric  value  (%s)out  of  range  of  %s   ",  rawNum,(expType  ==  NR_LONG)?   "long "  : "long ");  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	add	_reportError(       "Numeric        value        (%s)out        of        range        of        %s       ",        rawNum,(expType        ==        NR_LONG)?               "long       "        :       "int       ");        _reportError(   "Numeric    value    (%s)out    of    range    of    %s       ",    rawNum,(expType    ==    NR_LONG)?       "long   "    :       "int   ");    _reportError( "Numeric  value  (%s)out  of  range  of  %s   ",  rawNum,(expType  ==  NR_LONG)?   "long "  : "long ");	  	compilable	  [FE]  JsonParseException  	13	8	add
34	[BUG]  [BUGGY]  _reportError(     "Numeric    value    (%s)out    of    range    of    %s     ",    rawNum,(expType    ==    NR_LONG)?         "long     "    :     "int     ");    _reportError(   "Numeric  value  (%s)out  of  range  of  %s     ",  rawNum,(expType  ==  NR_LONG)?     "long   "  :     "int   ");  _reportError( "Numeric  value  (%s)out  of  range  of  %s   ",  rawNum,(expType  ==  NR_LONG)?   "long "  : "long ");  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]  _reportError(     "Numeric    value    (%s)out    of    range    of    %s     ",    rawNum,(expType    ==    NR_LONG)?         "long     "    :     "int     ");    _reportError(   "Numeric  value  (%s)out  of  range  of  %s     ",  rawNum,(expType  ==  NR_LONG)?     "long   "  :     "int   ");  _reportError( "Numeric  value  (%s)out  of  range  of  %s   ",  rawNum,(expType  ==  NR_LONG)?   "long "  : "long ");  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	replace	_reportError(       "Numeric        value        (%s)out        of        range        of        %s       ",        rawNum,(expType        ==        NR_LONG)?               "long       "        :       "int       ");        _reportError(   "Numeric    value    (%s)out    of    range    of    %s       ",    rawNum,(expType    ==    NR_LONG)?       "long   "    :       "int   ");    _reportError( "Numeric  value  (%s)out  of  range  of  %s   ",  rawNum,(expType  ==  NR_LONG)?   "long "  : "long ");	  	compilable	  [FE]  JsonParseException  	13	8	add
35	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]  _reportError(     "Numeric    value    (%s)out    of    range    of    %s     ",    rawNum,(expType    ==    NR_LONG)?         "long     "    :     "int     ");    _reportError(   "Numeric  value  (%s)out  of  range  of  %s     ",  rawNum,(expType  ==  NR_LONG)?     "long   "  :     "int   ");  _reportError( "Numeric  value  (%s)out  of  range  of  %s   ",  rawNum,(expType  ==  NR_LONG)?   "long "  :   "int ");  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	add	_reportError(       "Numeric        value        (%s)out        of        range        of        %s       ",        rawNum,(expType        ==        NR_LONG)?               "long       "        :       "int       ");        _reportError(   "Numeric    value    (%s)out    of    range    of    %s       ",    rawNum,(expType    ==    NR_LONG)?       "long   "    :       "int   ");    _reportError( "Numeric  value  (%s)out  of  range  of  %s   ",  rawNum,(expType  ==  NR_LONG)?   "long "  :   "int ");	  	compilable	  [FE]  JsonParseException  	13	8	add
36	[BUG]  [BUGGY]  _reportError(     "Numeric    value    (%s)out    of    range    of    %s     ",    rawNum,(expType    ==    NR_LONG)?         "long     "    :     "int     ");    _reportError(   "Numeric  value  (%s)out  of  range  of  %s     ",  rawNum,(expType  ==  NR_LONG)?     "long   "  :     "int   ");  _reportError( "Numeric  value  (%s)out  of  range  of  %s   ",  rawNum,(expType  ==  NR_LONG)?   "long "  :   "int ");  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]  _reportError(     "Numeric    value    (%s)out    of    range    of    %s     ",    rawNum,(expType    ==    NR_LONG)?         "long     "    :     "int     ");    _reportError(   "Numeric  value  (%s)out  of  range  of  %s     ",  rawNum,(expType  ==  NR_LONG)?     "long   "  :     "int   ");  _reportError( "Numeric  value  (%s)out  of  range  of  %s   ",  rawNum,(expType  ==  NR_LONG)?   "long "  :   "int ");  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	replace	_reportError(       "Numeric        value        (%s)out        of        range        of        %s       ",        rawNum,(expType        ==        NR_LONG)?               "long       "        :       "int       ");        _reportError(   "Numeric    value    (%s)out    of    range    of    %s       ",    rawNum,(expType    ==    NR_LONG)?       "long   "    :       "int   ");    _reportError( "Numeric  value  (%s)out  of  range  of  %s   ",  rawNum,(expType  ==  NR_LONG)?   "long "  :   "int ");	  	compilable	  [FE]  JsonParseException  	13	8	add
37	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]  _reportError(   "Numeric  value  (%s)out  of  range  of  %s   ",  rawNum,  expType  ==  NR_LONG?     "long   "  :   "long   ");  _reportError( "Numeric  value  (%s)out  of  range  of  %s   ",  rawNum,  expType  ==  NR_LONG?   "long   "  :   "long ");  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	add	_reportError(   "Numeric    value    (%s)out    of    range    of    %s   ",    rawNum,    expType    ==    NR_LONG?       "long   "    :   "long   ");    _reportError( "Numeric  value  (%s)out  of  range  of  %s   ",  rawNum,  expType  ==  NR_LONG?   "long   "  :   "long ");	  	compilable	  [FE]  JsonParseException  	17	8	add
38	[BUG]  [BUGGY]  _reportError(   "Numeric  value  (%s)out  of  range  of  %s   ",  rawNum,  expType  ==  NR_LONG?     "long   "  :   "long   ");  _reportError( "Numeric  value  (%s)out  of  range  of  %s   ",  rawNum,  expType  ==  NR_LONG?   "long   "  :   "long ");  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]  _reportError(   "Numeric  value  (%s)out  of  range  of  %s   ",  rawNum,  expType  ==  NR_LONG?     "long   "  :   "long   ");  _reportError( "Numeric  value  (%s)out  of  range  of  %s   ",  rawNum,  expType  ==  NR_LONG?   "long   "  :   "long ");  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	replace	_reportError(   "Numeric    value    (%s)out    of    range    of    %s   ",    rawNum,    expType    ==    NR_LONG?       "long   "    :   "long   ");    _reportError( "Numeric  value  (%s)out  of  range  of  %s   ",  rawNum,  expType  ==  NR_LONG?   "long   "  :   "long ");	  	compilable	  [FE]  JsonParseException  	17	8	add
39	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]          _parsingContext  =  _parsingContext.createChildObjectContext(-1,  -1);  _parsingContext  =  _parsingContext.createChildObjectContext(-1,  -1);  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	add	                _parsingContext    =    _parsingContext.createChildObjectContext(-1,    -1);    _parsingContext  =  _parsingContext.createChildObjectContext(-1,  -1);	  	compilable	  [FE]  JsonParseException  	7	8	add
40	[BUG]  [BUGGY]          _parsingContext  =  _parsingContext.createChildObjectContext(-1,  -1);  _parsingContext  =  _parsingContext.createChildObjectContext(-1,  -1);  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]          _parsingContext  =  _parsingContext.createChildObjectContext(-1,  -1);  _parsingContext  =  _parsingContext.createChildObjectContext(-1,  -1);  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	replace	                _parsingContext    =    _parsingContext.createChildObjectContext(-1,    -1);    _parsingContext  =  _parsingContext.createChildObjectContext(-1,  -1);	  	compilable	  [FE]  JsonParseException  	7	8	add
41	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]          _parsingContext  =  _parsingContext.createChildObjectContext(-1,  -1);  _parsingContext  =  _parsingContext.createChildObjectContext(-2,  -1);  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	add	                _parsingContext    =    _parsingContext.createChildObjectContext(-1,    -1);    _parsingContext  =  _parsingContext.createChildObjectContext(-2,  -1);	  	compilable	  [FE]  JsonParseException  	7	8	add
42	[BUG]  [BUGGY]          _parsingContext  =  _parsingContext.createChildObjectContext(-1,  -1);  _parsingContext  =  _parsingContext.createChildObjectContext(-2,  -1);  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]          _parsingContext  =  _parsingContext.createChildObjectContext(-1,  -1);  _parsingContext  =  _parsingContext.createChildObjectContext(-2,  -1);  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	replace	                _parsingContext    =    _parsingContext.createChildObjectContext(-1,    -1);    _parsingContext  =  _parsingContext.createChildObjectContext(-2,  -1);	  	compilable	  [FE]  JsonParseException  	7	8	add
43	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]  _reportError(     "Numeric    value    (%s)out    of    range    of    %s     ",    numDesc,    expType    ==    NR_LONG?         "long     "    :     "long     ");    _reportError(   "Numeric  value  (%s)out  of  range  of  %s     ",  numDesc,  expType  ==  NR_LONG?     "long     "  :     "long   ");  _reportError( "Numeric  value  (%s)out  of  range  of  %s   ",  numDesc,  expType  ==  NR_LONG?   "long "  : "long ");  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	add	_reportError(       "Numeric        value        (%s)out        of        range        of        %s       ",        numDesc,        expType        ==        NR_LONG?               "long       "        :       "long       ");        _reportError(   "Numeric    value    (%s)out    of    range    of    %s       ",    numDesc,    expType    ==    NR_LONG?       "long       "    :       "long   ");    _reportError( "Numeric  value  (%s)out  of  range  of  %s   ",  numDesc,  expType  ==  NR_LONG?   "long "  : "long ");	  	compilable	  [FE]  JsonParseException  	11	8	add
44	[BUG]  [BUGGY]  _reportError(     "Numeric    value    (%s)out    of    range    of    %s     ",    numDesc,    expType    ==    NR_LONG?         "long     "    :     "long     ");    _reportError(   "Numeric  value  (%s)out  of  range  of  %s     ",  numDesc,  expType  ==  NR_LONG?     "long     "  :     "long   ");  _reportError( "Numeric  value  (%s)out  of  range  of  %s   ",  numDesc,  expType  ==  NR_LONG?   "long "  : "long ");  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]  _reportError(     "Numeric    value    (%s)out    of    range    of    %s     ",    numDesc,    expType    ==    NR_LONG?         "long     "    :     "long     ");    _reportError(   "Numeric  value  (%s)out  of  range  of  %s     ",  numDesc,  expType  ==  NR_LONG?     "long     "  :     "long   ");  _reportError( "Numeric  value  (%s)out  of  range  of  %s   ",  numDesc,  expType  ==  NR_LONG?   "long "  : "long ");  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	replace	_reportError(       "Numeric        value        (%s)out        of        range        of        %s       ",        numDesc,        expType        ==        NR_LONG?               "long       "        :       "long       ");        _reportError(   "Numeric    value    (%s)out    of    range    of    %s       ",    numDesc,    expType    ==    NR_LONG?       "long       "    :       "long   ");    _reportError( "Numeric  value  (%s)out  of  range  of  %s   ",  numDesc,  expType  ==  NR_LONG?   "long "  : "long ");	  	compilable	  [FE]  JsonParseException  	11	8	add
45	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]  _reportError(     "Numeric    value    (%s)out    of    range    of    %s     ",    numDesc,    expType    ==    NR_LONG?         "long     "    :     "long     ");    _reportError(   "Numeric  value  (%s)out  of  range  of  %s     ",  numDesc,  expType  ==  NR_LONG?     "long     "  :     "long   ");  _reportError( "Numeric  value  (%s)out  of  range  of  %s   ",  numDesc,  expType  ==  NR_LONG?   "int "  : "int ");  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	add	_reportError(       "Numeric        value        (%s)out        of        range        of        %s       ",        numDesc,        expType        ==        NR_LONG?               "long       "        :       "long       ");        _reportError(   "Numeric    value    (%s)out    of    range    of    %s       ",    numDesc,    expType    ==    NR_LONG?       "long       "    :       "long   ");    _reportError( "Numeric  value  (%s)out  of  range  of  %s   ",  numDesc,  expType  ==  NR_LONG?   "int "  : "int ");	  	compilable	  [FE]  JsonParseException  	11	8	add
46	[BUG]  [BUGGY]  _reportError(     "Numeric    value    (%s)out    of    range    of    %s     ",    numDesc,    expType    ==    NR_LONG?         "long     "    :     "long     ");    _reportError(   "Numeric  value  (%s)out  of  range  of  %s     ",  numDesc,  expType  ==  NR_LONG?     "long     "  :     "long   ");  _reportError( "Numeric  value  (%s)out  of  range  of  %s   ",  numDesc,  expType  ==  NR_LONG?   "int "  : "int ");  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]  _reportError(     "Numeric    value    (%s)out    of    range    of    %s     ",    numDesc,    expType    ==    NR_LONG?         "long     "    :     "long     ");    _reportError(   "Numeric  value  (%s)out  of  range  of  %s     ",  numDesc,  expType  ==  NR_LONG?     "long     "  :     "long   ");  _reportError( "Numeric  value  (%s)out  of  range  of  %s   ",  numDesc,  expType  ==  NR_LONG?   "int "  : "int ");  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	replace	_reportError(       "Numeric        value        (%s)out        of        range        of        %s       ",        numDesc,        expType        ==        NR_LONG?               "long       "        :       "long       ");        _reportError(   "Numeric    value    (%s)out    of    range    of    %s       ",    numDesc,    expType    ==    NR_LONG?       "long       "    :       "long   ");    _reportError( "Numeric  value  (%s)out  of  range  of  %s   ",  numDesc,  expType  ==  NR_LONG?   "int "  : "int ");	  	compilable	  [FE]  JsonParseException  	11	8	add
47	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]  _reportError( "Numeric  value(%s)out  of  range  of  %s "  +  numDesc,  rawNum,  (expType  ==  NR_LONG)?   "long "  : "long ");  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	add	_reportError( "Numeric  value(%s)out  of  range  of  %s "  +  numDesc,  rawNum,  (expType  ==  NR_LONG)?   "long "  : "long ");	  _reportError(   "Numeric    value(%s)out    of    range    of    %s   "    +    numDesc,    (expType    ==    NR_LONG)?       "long   "    :   "long   ");    	compilable	  [FE]  JsonParseException  	23	8	replace
48	[BUG]  [BUGGY]  _reportError( "Numeric  value(%s)out  of  range  of  %s "  +  numDesc,  rawNum,  (expType  ==  NR_LONG)?   "long "  : "long ");  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]  _reportError( "Numeric  value(%s)out  of  range  of  %s "  +  numDesc,  rawNum,  (expType  ==  NR_LONG)?   "long "  : "long ");  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	replace	_reportError( "Numeric  value(%s)out  of  range  of  %s "  +  numDesc,  rawNum,  (expType  ==  NR_LONG)?   "long "  : "long ");	  _reportError(   "Numeric    value(%s)out    of    range    of    %s   "    +    numDesc,    (expType    ==    NR_LONG)?       "long   "    :   "long   ");    	compilable	  [FE]  JsonParseException  	23	8	replace
49	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]  _reportError(     "Numeric    value    (%s)out    of    range    of    %s     ",    rawNum,(expType    ==    NR_LONG)?         "long     "    :     "int     ");    _reportError(   "Numeric  value  (%s)out  of  range  of  %s     ",  rawNum,(expType  ==  NR_LONG)?     "long     "  :     "long   ");  _reportError( "Numeric  value  (%s)out  of  range  of  %s   ",  rawNum,(expType  ==  NR_LONG)?   "long "  : "long ");  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	add	_reportError(       "Numeric        value        (%s)out        of        range        of        %s       ",        rawNum,(expType        ==        NR_LONG)?               "long       "        :       "int       ");        _reportError(   "Numeric    value    (%s)out    of    range    of    %s       ",    rawNum,(expType    ==    NR_LONG)?       "long       "    :       "long   ");    _reportError( "Numeric  value  (%s)out  of  range  of  %s   ",  rawNum,(expType  ==  NR_LONG)?   "long "  : "long ");	  	compilable	  [FE]  JsonParseException  	15	8	add
50	[BUG]  [BUGGY]  _reportError(     "Numeric    value    (%s)out    of    range    of    %s     ",    rawNum,(expType    ==    NR_LONG)?         "long     "    :     "int     ");    _reportError(   "Numeric  value  (%s)out  of  range  of  %s     ",  rawNum,(expType  ==  NR_LONG)?     "long     "  :     "long   ");  _reportError( "Numeric  value  (%s)out  of  range  of  %s   ",  rawNum,(expType  ==  NR_LONG)?   "long "  : "long ");  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]  _reportError(     "Numeric    value    (%s)out    of    range    of    %s     ",    rawNum,(expType    ==    NR_LONG)?         "long     "    :     "int     ");    _reportError(   "Numeric  value  (%s)out  of  range  of  %s     ",  rawNum,(expType  ==  NR_LONG)?     "long     "  :     "long   ");  _reportError( "Numeric  value  (%s)out  of  range  of  %s   ",  rawNum,(expType  ==  NR_LONG)?   "long "  : "long ");  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	replace	_reportError(       "Numeric        value        (%s)out        of        range        of        %s       ",        rawNum,(expType        ==        NR_LONG)?               "long       "        :       "int       ");        _reportError(   "Numeric    value    (%s)out    of    range    of    %s       ",    rawNum,(expType    ==    NR_LONG)?       "long       "    :       "long   ");    _reportError( "Numeric  value  (%s)out  of  range  of  %s   ",  rawNum,(expType  ==  NR_LONG)?   "long "  : "long ");	  	compilable	  [FE]  JsonParseException  	15	8	add
51	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]  _reportError(     "Numeric    value    (%s)out    of    range    of    %s     ",    rawNum,(expType    ==    NR_LONG)?         "long     "    :     "int     ");    _reportError(   "Numeric  value  (%s)out  of  range  of  %s     ",  rawNum,(expType  ==  NR_LONG)?     "long     "  :     "long   ");  _reportError( "Numeric  value  (%s)out  of  range  of  %s   ",  rawNum,(expType  ==  NR_LONG)?   "int "  : "int ");  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	add	_reportError(       "Numeric        value        (%s)out        of        range        of        %s       ",        rawNum,(expType        ==        NR_LONG)?               "long       "        :       "int       ");        _reportError(   "Numeric    value    (%s)out    of    range    of    %s       ",    rawNum,(expType    ==    NR_LONG)?       "long       "    :       "long   ");    _reportError( "Numeric  value  (%s)out  of  range  of  %s   ",  rawNum,(expType  ==  NR_LONG)?   "int "  : "int ");	  	compilable	  [FE]  JsonParseException  	15	8	add
52	[BUG]  [BUGGY]  _reportError(     "Numeric    value    (%s)out    of    range    of    %s     ",    rawNum,(expType    ==    NR_LONG)?         "long     "    :     "int     ");    _reportError(   "Numeric  value  (%s)out  of  range  of  %s     ",  rawNum,(expType  ==  NR_LONG)?     "long     "  :     "long   ");  _reportError( "Numeric  value  (%s)out  of  range  of  %s   ",  rawNum,(expType  ==  NR_LONG)?   "int "  : "int ");  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]  _reportError(     "Numeric    value    (%s)out    of    range    of    %s     ",    rawNum,(expType    ==    NR_LONG)?         "long     "    :     "int     ");    _reportError(   "Numeric  value  (%s)out  of  range  of  %s     ",  rawNum,(expType  ==  NR_LONG)?     "long     "  :     "long   ");  _reportError( "Numeric  value  (%s)out  of  range  of  %s   ",  rawNum,(expType  ==  NR_LONG)?   "int "  : "int ");  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	replace	_reportError(       "Numeric        value        (%s)out        of        range        of        %s       ",        rawNum,(expType        ==        NR_LONG)?               "long       "        :       "int       ");        _reportError(   "Numeric    value    (%s)out    of    range    of    %s       ",    rawNum,(expType    ==    NR_LONG)?       "long       "    :       "long   ");    _reportError( "Numeric  value  (%s)out  of  range  of  %s   ",  rawNum,(expType  ==  NR_LONG)?   "int "  : "int ");	  	compilable	  [FE]  JsonParseException  	15	8	add
53	[BUG]  [BUGGY]  if(expType  ==  NR_LONG)  {  if(numDesc!=  null)  {  return;  }  [CE]  illegal  start  of  expression  [FE]        JsonParseException      [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]  if(expType  ==  NR_LONG)  {  if(numDesc!=  null)  {  return;  }  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	replace	if(expType  ==  NR_LONG)  {  if(numDesc!=  null)  {  return;  }	          if(numDesc!=    null)    {    if(expType    ==    NR_LONG)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
54	[BUG]  [BUGGY]  if(numDesc  ==  null)  {  if(expType  ==  NR_LONG)  {  return;  }  [CE]  illegal  start  of  expression  [FE]          JsonParseException      [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]  if(numDesc  ==  null)  {  if(expType  ==  NR_LONG)  {  return;  }  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	replace	if(numDesc  ==  null)  {  if(expType  ==  NR_LONG)  {  return;  }	          if(numDesc!=    null)    {    if(expType    ==    NR_LONG)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
55	[BUG]  [BUGGY]  ||  expType  ==  NR_LONG)  {  return;  [CE]  illegal  start  of  expression  [FE]            JsonParseException      [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]  ||  expType  ==  NR_LONG)  {  return;  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	replace	||  expType  ==  NR_LONG)  {  return;	          if(numDesc!=    null)    {    if(expType    ==    NR_LONG)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
56	[BUG]  [BUGGY]  if(numDesc  ==  null)  {  if(expType  ==  NR_UNKNOWN)  {  return;  }  [CE]  illegal  start  of  expression  [FE]            JsonParseException      [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]  if(numDesc  ==  null)  {  if(expType  ==  NR_UNKNOWN)  {  return;  }  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	replace	if(numDesc  ==  null)  {  if(expType  ==  NR_UNKNOWN)  {  return;  }	          if(numDesc!=    null)    {    if(expType    ==    NR_UNKNOWN)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
57	[BUG]  [BUGGY]  ||  expType  ==  NR_UNKNOWN)  {  return;  [CE]  illegal  start  of  expression  [FE]              JsonParseException      [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]  ||  expType  ==  NR_UNKNOWN)  {  return;  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	replace	||  expType  ==  NR_UNKNOWN)  {  return;	          if(numDesc!=    null)    {    if(expType    ==    NR_UNKNOWN)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
58	[BUG]  [BUGGY]  if(numDesc  ==  null)  {  if(expType!=  NR_UNKNOWN)  {  return;  }  [CE]  illegal  start  of  expression  [FE]                JsonParseException      [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]  if(numDesc  ==  null)  {  if(expType!=  NR_UNKNOWN)  {  return;  }  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	replace	if(numDesc  ==  null)  {  if(expType!=  NR_UNKNOWN)  {  return;  }	          if(numDesc!=    null)    {    if(expType    ==    NR_UNKNOWN)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
59	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]  _reportError(     "Numeric    value(%s)out    of    range    of    %s     ",    numDesc,    (expType    ==    NR_LONG)?         "long     "    :     "long     ");    _reportError(   "Numeric  value(%s)out  of  range  of  %s     ",  numDesc,  (expType  ==  NR_LONG)?     "long     "  :     "long   ");  _reportError( "Numeric  value(%s)out  of  range  of  %s   ",  numDesc,  (expType  ==  NR_LONG)?   "long "  : "long ");  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	add	_reportError(       "Numeric        value(%s)out        of        range        of        %s       ",        numDesc,        (expType        ==        NR_LONG)?               "long       "        :       "long       ");        _reportError(   "Numeric    value(%s)out    of    range    of    %s       ",    numDesc,    (expType    ==    NR_LONG)?       "long       "    :       "long   ");    _reportError( "Numeric  value(%s)out  of  range  of  %s   ",  numDesc,  (expType  ==  NR_LONG)?   "long "  : "long ");	  	compilable	  [FE]  JsonParseException  	9	8	add
60	[BUG]  [BUGGY]  _reportError(     "Numeric    value(%s)out    of    range    of    %s     ",    numDesc,    (expType    ==    NR_LONG)?         "long     "    :     "long     ");    _reportError(   "Numeric  value(%s)out  of  range  of  %s     ",  numDesc,  (expType  ==  NR_LONG)?     "long     "  :     "long   ");  _reportError( "Numeric  value(%s)out  of  range  of  %s   ",  numDesc,  (expType  ==  NR_LONG)?   "long "  : "long ");  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]  _reportError(     "Numeric    value(%s)out    of    range    of    %s     ",    numDesc,    (expType    ==    NR_LONG)?         "long     "    :     "long     ");    _reportError(   "Numeric  value(%s)out  of  range  of  %s     ",  numDesc,  (expType  ==  NR_LONG)?     "long     "  :     "long   ");  _reportError( "Numeric  value(%s)out  of  range  of  %s   ",  numDesc,  (expType  ==  NR_LONG)?   "long "  : "long ");  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	replace	_reportError(       "Numeric        value(%s)out        of        range        of        %s       ",        numDesc,        (expType        ==        NR_LONG)?               "long       "        :       "long       ");        _reportError(   "Numeric    value(%s)out    of    range    of    %s       ",    numDesc,    (expType    ==    NR_LONG)?       "long       "    :       "long   ");    _reportError( "Numeric  value(%s)out  of  range  of  %s   ",  numDesc,  (expType  ==  NR_LONG)?   "long "  : "long ");	  	compilable	  [FE]  JsonParseException  	9	8	add
61	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]              JsonParseException      [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]  expType  =  NR_LONG;  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	add	expType  =  NR_LONG;	          if(numDesc!=    null)    {    if(expType    ==    NR_LONG)    {    expType    =    NR_LONG;    }    	compilable	  [FE]  JsonParseException  	28	8	replace
62	[BUG]  [BUGGY]  expType  =  NR_LONG;  [FE]  JsonParseException  [FE]              JsonParseException      [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]  expType  =  NR_LONG;  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	replace	expType  =  NR_LONG;	          if(numDesc!=    null)    {    if(expType    ==    NR_LONG)    {    expType    =    NR_LONG;    }    	compilable	  [FE]  JsonParseException  	28	8	replace
63	[BUG]  [BUGGY]  ||  expType  ==  NR_LONG)  {  expType  =  NR_LONG;  [CE]  illegal  start  of  expression  [FE]                JsonParseException      [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]  ||  expType  ==  NR_LONG)  {  expType  =  NR_LONG;  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	replace	||  expType  ==  NR_LONG)  {  expType  =  NR_LONG;	          if(numDesc!=    null)    {    if(expType    ==    NR_LONG)    {    expType    =    NR_LONG;    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
64	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]                  JsonParseException      [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]  if(expType  ==  NR_LONG)  {  expType  =  NR_LONG;  }  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	add	if(expType  ==  NR_LONG)  {  expType  =  NR_LONG;  }	          if(numDesc!=    null)    {    if(expType    ==    NR_LONG)    {    expType    =    NR_LONG;    }    	compilable	  [FE]  JsonParseException  	28	8	replace
65	[BUG]  [BUGGY]  if(expType  ==  NR_LONG)  {  expType  =  NR_LONG;  }  [FE]  JsonParseException  [FE]                  JsonParseException      [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]  if(expType  ==  NR_LONG)  {  expType  =  NR_LONG;  }  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	replace	if(expType  ==  NR_LONG)  {  expType  =  NR_LONG;  }	          if(numDesc!=    null)    {    if(expType    ==    NR_LONG)    {    expType    =    NR_LONG;    }    	compilable	  [FE]  JsonParseException  	28	8	replace
66	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]  _reportError(   "Numeric  value  (%s)out  of  range  of  %s   ",  rawNum,(expType  ==  NR_LONG)?     "long   "  :   "long   ");  _reportError( "Numeric  value  (%s)out  of  range  of  %s   ",  rawNum,(expType  ==  NR_LONG)?   "long   "  :   "long ");  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	add	_reportError(   "Numeric    value    (%s)out    of    range    of    %s   ",    rawNum,(expType    ==    NR_LONG)?       "long   "    :   "long   ");    _reportError( "Numeric  value  (%s)out  of  range  of  %s   ",  rawNum,(expType  ==  NR_LONG)?   "long   "  :   "long ");	  	compilable	  [FE]  JsonParseException  	20	8	add
67	[BUG]  [BUGGY]  _reportError(   "Numeric  value  (%s)out  of  range  of  %s   ",  rawNum,(expType  ==  NR_LONG)?     "long   "  :   "long   ");  _reportError( "Numeric  value  (%s)out  of  range  of  %s   ",  rawNum,(expType  ==  NR_LONG)?   "long   "  :   "long ");  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]  _reportError(   "Numeric  value  (%s)out  of  range  of  %s   ",  rawNum,(expType  ==  NR_LONG)?     "long   "  :   "long   ");  _reportError( "Numeric  value  (%s)out  of  range  of  %s   ",  rawNum,(expType  ==  NR_LONG)?   "long   "  :   "long ");  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	replace	_reportError(   "Numeric    value    (%s)out    of    range    of    %s   ",    rawNum,(expType    ==    NR_LONG)?       "long   "    :   "long   ");    _reportError( "Numeric  value  (%s)out  of  range  of  %s   ",  rawNum,(expType  ==  NR_LONG)?   "long   "  :   "long ");	  	compilable	  [FE]  JsonParseException  	20	8	add
68	[BUG]  [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(null);  [CE]  method  createChildObjectContext  in  class  JsonReadContext  cannot  be  applied  to  given  types;  [FE]        JsonParseException      [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(null);  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	replace	_parsingContext  =  _parsingContext.createChildObjectContext(null);	          _parsingContext    =    _parsingContext.createChildObjectContext();    	non-compiled	[CE]  method  createChildObjectContext  in  class  JsonReadContext  cannot  be  applied  to  given  types;	1	None	replace
69	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]          _parsingContext.setCurrentName(numDesc);  _parsingContext.setCurrentName(numDesc);  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	add	                _parsingContext.setCurrentName(numDesc);    _parsingContext.setCurrentName(numDesc);	  	compilable	  [FE]  JsonParseException  	3	8	add
70	[BUG]  [BUGGY]          _parsingContext.setCurrentName(numDesc);  _parsingContext.setCurrentName(numDesc);  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]          _parsingContext.setCurrentName(numDesc);  _parsingContext.setCurrentName(numDesc);  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	replace	                _parsingContext.setCurrentName(numDesc);    _parsingContext.setCurrentName(numDesc);	  	compilable	  [FE]  JsonParseException  	3	8	add
71	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]          _parsingContext.setCurrentName(numDesc);  _parsingContext.setCurrentName(null);  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	add	                _parsingContext.setCurrentName(numDesc);    _parsingContext.setCurrentName(null);	  	compilable	  [FE]  JsonParseException  	3	8	add
72	[BUG]  [BUGGY]          _parsingContext.setCurrentName(numDesc);  _parsingContext.setCurrentName(null);  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]          _parsingContext.setCurrentName(numDesc);  _parsingContext.setCurrentName(null);  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	replace	                _parsingContext.setCurrentName(numDesc);    _parsingContext.setCurrentName(null);	  	compilable	  [FE]  JsonParseException  	3	8	add
73	[BUG]  [BUGGY]          _parsingContext.setCurrentName(numDesc);  _parsingContext.setCurrentName(nameDesc);  [CE]  cannot  find  symbol  nameDesc  [FE]        JsonParseException    [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]          _parsingContext.setCurrentName(numDesc);  _parsingContext.setCurrentName(nameDesc);  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	replace	                _parsingContext.setCurrentName(numDesc);    _parsingContext.setCurrentName(nameDesc);	  	non-compiled	[CE]  cannot  find  symbol  nameDesc	3	None	add
74	[BUG]  [BUGGY]          _parsingContext.setCurrentName(numDesc);  _parsingContext.setCurrentName(numDesc);  return;  [CE]  unreachable  statement  [FE]          JsonParseException    [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]          _parsingContext.setCurrentName(numDesc);  _parsingContext.setCurrentName(numDesc);  return;  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	replace	                _parsingContext.setCurrentName(numDesc);    _parsingContext.setCurrentName(numDesc);  return;	  	non-compiled	[CE]  unreachable  statement	3	None	add
75	[BUG]  [BUGGY]  ||  expType  ==  NR_LONG)  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]          JsonParseException      [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]  ||  expType  ==  NR_LONG)  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	replace	||  expType  ==  NR_LONG)  {  throw  new  IllegalArgumentException( " ");	          if(numDesc!=    null)    {    if(expType    ==    NR_LONG)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
76	[BUG]  [BUGGY]  ||  expType  ==  NR_LONG)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]            JsonParseException      [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]  ||  expType  ==  NR_LONG)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	replace	||  expType  ==  NR_LONG)  {  throw  new  IllegalArgumentException( " ");  }	          if(numDesc!=    null)    {    if(expType    ==    NR_LONG)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
77	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]          JsonParseException      [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]  _reportError( "Numeric  value(%s)out  of  range  of  %s "  +  rawNum,  expType  ==  NR_LONG?   "long "  : "long ");  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	add	_reportError( "Numeric  value(%s)out  of  range  of  %s "  +  rawNum,  expType  ==  NR_LONG?   "long "  : "long ");	  _reportError(   "Numeric    value(%s)out    of    range    of    %s   "    +    numDesc,    expType    {    NR_LONG?       "long   "    :   "long   ");    	compilable	  [FE]  JsonParseException  	19	8	replace
78	[BUG]  [BUGGY]  _reportError( "Numeric  value(%s)out  of  range  of  %s "  +  rawNum,  expType  ==  NR_LONG?   "long "  : "long ");  [FE]  JsonParseException  [FE]          JsonParseException      [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]  _reportError( "Numeric  value(%s)out  of  range  of  %s "  +  rawNum,  expType  ==  NR_LONG?   "long "  : "long ");  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	replace	_reportError( "Numeric  value(%s)out  of  range  of  %s "  +  rawNum,  expType  ==  NR_LONG?   "long "  : "long ");	  _reportError(   "Numeric    value(%s)out    of    range    of    %s   "    +    numDesc,    expType    {    NR_LONG?       "long   "    :   "long   ");    	compilable	  [FE]  JsonParseException  	19	8	replace
79	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]            JsonParseException      [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]  _reportError( "Numeric  value(%s)out  of  range  of  %s "  +  numDesc,  rawNum,  expType  ==  NR_LONG?   "long "  : "long ");  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	add	_reportError( "Numeric  value(%s)out  of  range  of  %s "  +  numDesc,  rawNum,  expType  ==  NR_LONG?   "long "  : "long ");	  _reportError(   "Numeric    value(%s)out    of    range    of    %s   "    +    numDesc,    expType    {    NR_LONG?       "long   "    :   "long   ");    	compilable	  [FE]  JsonParseException  	19	8	replace
80	[BUG]  [BUGGY]  _reportError( "Numeric  value(%s)out  of  range  of  %s "  +  numDesc,  rawNum,  expType  ==  NR_LONG?   "long "  : "long ");  [FE]  JsonParseException  [FE]            JsonParseException      [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]  _reportError( "Numeric  value(%s)out  of  range  of  %s "  +  numDesc,  rawNum,  expType  ==  NR_LONG?   "long "  : "long ");  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	replace	_reportError( "Numeric  value(%s)out  of  range  of  %s "  +  numDesc,  rawNum,  expType  ==  NR_LONG?   "long "  : "long ");	  _reportError(   "Numeric    value(%s)out    of    range    of    %s   "    +    numDesc,    expType    {    NR_LONG?       "long   "    :   "long   ");    	compilable	  [FE]  JsonParseException  	19	8	replace
81	[BUG]  [BUGGY]  if(rawNum  ==  0)  {  if(numDesc!=  null)  {  return;  }  [CE]  illegal  start  of  expression  [FE]        JsonParseException      [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]  if(rawNum  ==  0)  {  if(numDesc!=  null)  {  return;  }  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	replace	if(rawNum  ==  0)  {  if(numDesc!=  null)  {  return;  }	          if(numDesc!=    null)    {    if(expType    ==    NR_LONG)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
82	[BUG]  [BUGGY]  if(rawNum  ==  0)  {  if(expType  ==  NR_LONG)  {  return;  }  [CE]  illegal  start  of  expression  [FE]          JsonParseException      [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]  if(rawNum  ==  0)  {  if(expType  ==  NR_LONG)  {  return;  }  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	replace	if(rawNum  ==  0)  {  if(expType  ==  NR_LONG)  {  return;  }	          if(numDesc!=    null)    {    if(expType    ==    NR_LONG)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
83	[BUG]  [BUGGY]  if(rawNum  ==  _intLen)  {  if(numDesc!=  null)  {  return;  }  [CE]  illegal  start  of  expression  [FE]            JsonParseException      [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]  if(rawNum  ==  _intLen)  {  if(numDesc!=  null)  {  return;  }  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	replace	if(rawNum  ==  _intLen)  {  if(numDesc!=  null)  {  return;  }	          if(numDesc!=    null)    {    if(expType    ==    NR_LONG)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
84	[BUG]  [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(null,  rawNum);  [CE]  method  createChildObjectContext  in  class  JsonReadContext  cannot  be  applied  to  given  types;  [FE]        JsonParseException      [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(null,  rawNum);  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	replace	_parsingContext  =  _parsingContext.createChildObjectContext(null,  rawNum);	          _parsingContext    =    _parsingContext.createChildObjectContext();    	non-compiled	[CE]  method  createChildObjectContext  in  class  JsonReadContext  cannot  be  applied  to  given  types;	1	None	replace
85	[BUG]  [BUGGY]  _reportError(     "Numeric    value    (%s)out    of    range    of    %s     ",    numDesc,    expType    ==    NR_LONG?         "long     "    :     "long     ");    _reportError(   "Numeric  value  (%s)out  of  range  of  %s     ",  numDesc,  expType  ==  NR_LONG?     "long     "  :     "long   ");  _reportError( "Numeric  value  (%s)out  of  range  of  %s   ",  numDesc,  expType  ==  NR_LONG?   "long "  : "long ");  _reportError( "Numeric  value  (%s)out  of  range  of  %s   ",  numDesc,  expType  ==  NR_LONG?  [CE]  :  expected  [FE]    JsonParseException    [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]  _reportError(     "Numeric    value    (%s)out    of    range    of    %s     ",    numDesc,    expType    ==    NR_LONG?         "long     "    :     "long     ");    _reportError(   "Numeric  value  (%s)out  of  range  of  %s     ",  numDesc,  expType  ==  NR_LONG?     "long     "  :     "long   ");  _reportError( "Numeric  value  (%s)out  of  range  of  %s   ",  numDesc,  expType  ==  NR_LONG?   "long "  : "long ");  _reportError( "Numeric  value  (%s)out  of  range  of  %s   ",  numDesc,  expType  ==  NR_LONG?  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	replace	_reportError(       "Numeric        value        (%s)out        of        range        of        %s       ",        numDesc,        expType        ==        NR_LONG?               "long       "        :       "long       ");        _reportError(   "Numeric    value    (%s)out    of    range    of    %s       ",    numDesc,    expType    ==    NR_LONG?       "long       "    :       "long   ");    _reportError( "Numeric  value  (%s)out  of  range  of  %s   ",  numDesc,  expType  ==  NR_LONG?   "long "  : "long ");  _reportError( "Numeric  value  (%s)out  of  range  of  %s   ",  numDesc,  expType  ==  NR_LONG?	  	non-compiled	[CE]  :  expected	11	None	add
86	[BUG]  [BUGGY]  _reportError(     "Numeric    value    (%s)out    of    range    of    %s     ",    numDesc,    expType    ==    NR_LONG?         "long     "    :     "long     ");    _reportError(   "Numeric  value  (%s)out  of  range  of  %s     ",  numDesc,  expType  ==  NR_LONG?     "long     "  :     "long   ");  _reportError( "Numeric  value  (%s)out  of  range  of  %s   ",  numDesc,  expType  ==  NR_LONG?   "long "  : "long ");  _reportError( "Numeric  value  (%s)out  of  range  of  %s   ",  numDesc,  expType  ==  NR_LONG  [CE]  [FE]      JsonParseException    [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]  _reportError(     "Numeric    value    (%s)out    of    range    of    %s     ",    numDesc,    expType    ==    NR_LONG?         "long     "    :     "long     ");    _reportError(   "Numeric  value  (%s)out  of  range  of  %s     ",  numDesc,  expType  ==  NR_LONG?     "long     "  :     "long   ");  _reportError( "Numeric  value  (%s)out  of  range  of  %s   ",  numDesc,  expType  ==  NR_LONG?   "long "  : "long ");  _reportError( "Numeric  value  (%s)out  of  range  of  %s   ",  numDesc,  expType  ==  NR_LONG  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	replace	_reportError(       "Numeric        value        (%s)out        of        range        of        %s       ",        numDesc,        expType        ==        NR_LONG?               "long       "        :       "long       ");        _reportError(   "Numeric    value    (%s)out    of    range    of    %s       ",    numDesc,    expType    ==    NR_LONG?       "long       "    :       "long   ");    _reportError( "Numeric  value  (%s)out  of  range  of  %s   ",  numDesc,  expType  ==  NR_LONG?   "long "  : "long ");  _reportError( "Numeric  value  (%s)out  of  range  of  %s   ",  numDesc,  expType  ==  NR_LONG	  	non-compiled	[CE]  	11	None	add
87	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]  _reportError( "Numeric  value  (%s)out  of  range  of  %s   ",  numDesc,  expType  ==  NR_LONG?   "int "  : "int ");  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	add	_reportError( "Numeric  value  (%s)out  of  range  of  %s   ",  numDesc,  expType  ==  NR_LONG?   "int "  : "int ");	  _reportError(       "Numeric    value    (%s)out    of    range    of    %s       ",    numDesc,    expType    ==    NR_LONG?           "long       "    :       "long       ");    _reportError(   "Numeric    value    (%s)out    of    range    of    %s       ",    numDesc,    expType    ==    NR_LONG?       "long       "    :       "long   ");    	compilable	  [FE]  JsonParseException  	12	8	replace
88	[BUG]  [BUGGY]  _reportError( "Numeric  value  (%s)out  of  range  of  %s   ",  numDesc,  expType  ==  NR_LONG?   "int "  : "int ");  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]  _reportError( "Numeric  value  (%s)out  of  range  of  %s   ",  numDesc,  expType  ==  NR_LONG?   "int "  : "int ");  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	replace	_reportError( "Numeric  value  (%s)out  of  range  of  %s   ",  numDesc,  expType  ==  NR_LONG?   "int "  : "int ");	  _reportError(       "Numeric    value    (%s)out    of    range    of    %s       ",    numDesc,    expType    ==    NR_LONG?           "long       "    :       "long       ");    _reportError(   "Numeric    value    (%s)out    of    range    of    %s       ",    numDesc,    expType    ==    NR_LONG?       "long       "    :       "long   ");    	compilable	  [FE]  JsonParseException  	12	8	replace
89	[BUG]  [BUGGY]          _parsingContext.setCurrentName(numDesc);  JsonReadContext  ctxt  =  _parsingContext.getCurrentContext();  [CE]  cannot  find  symbol  [FE]    JsonParseException    [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]          _parsingContext.setCurrentName(numDesc);  JsonReadContext  ctxt  =  _parsingContext.getCurrentContext();  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	replace	                _parsingContext.setCurrentName(numDesc);    JsonReadContext  ctxt  =  _parsingContext.getCurrentContext();	  	non-compiled	[CE]  cannot  find  symbol	3	None	add
90	[BUG]  [BUGGY]          _parsingContext.setCurrentName(numDesc);  JsonReadContext  ctxt  =  _parsingContext.createChildArrayContext();  [CE]  method  createChildArrayContext  in  class  JsonReadContext  cannot  be  applied  to  given  types;  [FE]      JsonParseException    [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]          _parsingContext.setCurrentName(numDesc);  JsonReadContext  ctxt  =  _parsingContext.createChildArrayContext();  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	replace	                _parsingContext.setCurrentName(numDesc);    JsonReadContext  ctxt  =  _parsingContext.createChildArrayContext();	  	non-compiled	[CE]  method  createChildArrayContext  in  class  JsonReadContext  cannot  be  applied  to  given  types;	3	None	add
91	[BUG]  [BUGGY]          _parsingContext.setCurrentName(numDesc);  JsonReadContext  ctxt  =  _parsingContext.createChildCountContext();  [CE]  cannot  find  symbol  [FE]        JsonParseException    [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]          _parsingContext.setCurrentName(numDesc);  JsonReadContext  ctxt  =  _parsingContext.createChildCountContext();  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	replace	                _parsingContext.setCurrentName(numDesc);    JsonReadContext  ctxt  =  _parsingContext.createChildCountContext();	  	non-compiled	[CE]  cannot  find  symbol	3	None	add
92	[BUG]  [BUGGY]  if(expType  ==  null)  {  if(numDesc!=  null)  {  return;  }  [CE]  illegal  start  of  expression  [FE]                JsonParseException      [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]  if(expType  ==  null)  {  if(numDesc!=  null)  {  return;  }  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	replace	if(expType  ==  null)  {  if(numDesc!=  null)  {  return;  }	          if(numDesc!=    null)    {    if(expType.length()    ==    0)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
93	[BUG]  [BUGGY]  if(rawNum  ==  _intLength)  {  if(numDesc!=  null)  {  if(expType.length()  ==  0)  {  return;  }  [CE]  illegal  start  of  expression  [FE]                  JsonParseException      [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]  if(rawNum  ==  _intLength)  {  if(numDesc!=  null)  {  if(expType.length()  ==  0)  {  return;  }  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	replace	if(rawNum  ==  _intLength)  {  if(numDesc!=  null)  {  if(expType.length()  ==  0)  {  return;  }	          if(numDesc!=    null)    {    if(expType.length()    ==    0)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
94	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]  _reportError( "Numeric  value(%s)out  of  range  of  %s   ",  numDesc,  (expType  ==  NR_LONG)?   "int "  : "int ");  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	add	_reportError( "Numeric  value(%s)out  of  range  of  %s   ",  numDesc,  (expType  ==  NR_LONG)?   "int "  : "int ");	  _reportError(       "Numeric    value(%s)out    of    range    of    %s       ",    numDesc,    (expType    ==    NR_LONG)?           "long       "    :       "long       ");    _reportError(   "Numeric    value(%s)out    of    range    of    %s       ",    numDesc,    (expType    ==    NR_LONG)?       "long       "    :       "long   ");    	compilable	  [FE]  JsonParseException  	10	8	replace
95	[BUG]  [BUGGY]  _reportError( "Numeric  value(%s)out  of  range  of  %s   ",  numDesc,  (expType  ==  NR_LONG)?   "int "  : "int ");  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]  _reportError( "Numeric  value(%s)out  of  range  of  %s   ",  numDesc,  (expType  ==  NR_LONG)?   "int "  : "int ");  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	replace	_reportError( "Numeric  value(%s)out  of  range  of  %s   ",  numDesc,  (expType  ==  NR_LONG)?   "int "  : "int ");	  _reportError(       "Numeric    value(%s)out    of    range    of    %s       ",    numDesc,    (expType    ==    NR_LONG)?           "long       "    :       "long       ");    _reportError(   "Numeric    value(%s)out    of    range    of    %s       ",    numDesc,    (expType    ==    NR_LONG)?       "long       "    :       "long   ");    	compilable	  [FE]  JsonParseException  	10	8	replace
96	[BUG]  [BUGGY]          _parsingContext  =  _parsingContext.createChildObjectContext(-1,  -1);  JsonReadContext  _parsingContext  =  _parsingContext.createChildObjectContext(-1,  -1);  [CE]  variable  _parsingContext  might  not  have  been  initialized  [FE]    JsonParseException    [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]          _parsingContext  =  _parsingContext.createChildObjectContext(-1,  -1);  JsonReadContext  _parsingContext  =  _parsingContext.createChildObjectContext(-1,  -1);  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	replace	                _parsingContext    =    _parsingContext.createChildObjectContext(-1,    -1);    JsonReadContext  _parsingContext  =  _parsingContext.createChildObjectContext(-1,  -1);	  	non-compiled	[CE]  variable  _parsingContext  might  not  have  been  initialized	7	None	add
97	[BUG]  [BUGGY]          _parsingContext  =  _parsingContext.createChildObjectContext(-1,  -1);  (_parsingContext  =  _parsingContext.createChildObjectContext(-1,  -1);  [CE]  ')'  expected  [FE]      JsonParseException    [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]          _parsingContext  =  _parsingContext.createChildObjectContext(-1,  -1);  (_parsingContext  =  _parsingContext.createChildObjectContext(-1,  -1);  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	replace	                _parsingContext    =    _parsingContext.createChildObjectContext(-1,    -1);    (_parsingContext  =  _parsingContext.createChildObjectContext(-1,  -1);	  	non-compiled	[CE]  ')'  expected	7	None	add
98	[BUG]  [BUGGY]  if(numDesc  ==  null)  {  if(expType  ==  NR_LONG)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]          JsonParseException      [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]  if(numDesc  ==  null)  {  if(expType  ==  NR_LONG)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	replace	if(numDesc  ==  null)  {  if(expType  ==  NR_LONG)  {  throw  new  IllegalArgumentException( " ");  }	          if(numDesc!=    null)    {    if(expType    ==    NR_LONG)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
99	[BUG]  [BUGGY]  if(rawNum  ==  0)  {  if(expType  ==  NR_LONG)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]            JsonParseException      [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]  if(rawNum  ==  0)  {  if(expType  ==  NR_LONG)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	replace	if(rawNum  ==  0)  {  if(expType  ==  NR_LONG)  {  throw  new  IllegalArgumentException( " ");  }	          if(numDesc!=    null)    {    if(expType    ==    NR_LONG)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
100	[BUG]  [BUGGY]  if(expType  ==  null)  {  if(numDesc!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]              JsonParseException      [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]  if(expType  ==  null)  {  if(numDesc!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	replace	if(expType  ==  null)  {  if(numDesc!=  null)  {  throw  new  IllegalArgumentException( " ");  }	          if(numDesc!=    null)    {    if(expType    ==    NR_LONG)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
101	[BUG]  [BUGGY]  if(rawNum  ==  _intLen)  {  if(expType  ==  NR_LONG)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                JsonParseException      [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]  if(rawNum  ==  _intLen)  {  if(expType  ==  NR_LONG)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	replace	if(rawNum  ==  _intLen)  {  if(expType  ==  NR_LONG)  {  throw  new  IllegalArgumentException( " ");  }	          if(numDesc!=    null)    {    if(expType    ==    NR_LONG)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
102	[BUG]  [BUGGY]  _reportError(     "Numeric    value    (%s)out    of    range    of    %s     ",    rawNum,(expType    ==    NR_LONG)?         "long     "    :     "int     ");    _reportError(   "Numeric  value  (%s)out  of  range  of  %s     ",  rawNum,(expType  ==  NR_LONG)?     "long   "  :     "int   ");  _reportError( "Numeric  value  (%s)out  of  range  of  %s   ",  rawNum,(expType  ==  NR_LONG)?   "long "  :   "long ");  _reportError( "Numeric  value  (%s)out  of  range  of  %s   ",  rawNum,(expType  ==  NR_L  [CE]  [FE]    JsonParseException    [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]  _reportError(     "Numeric    value    (%s)out    of    range    of    %s     ",    rawNum,(expType    ==    NR_LONG)?         "long     "    :     "int     ");    _reportError(   "Numeric  value  (%s)out  of  range  of  %s     ",  rawNum,(expType  ==  NR_LONG)?     "long   "  :     "int   ");  _reportError( "Numeric  value  (%s)out  of  range  of  %s   ",  rawNum,(expType  ==  NR_LONG)?   "long "  :   "long ");  _reportError( "Numeric  value  (%s)out  of  range  of  %s   ",  rawNum,(expType  ==  NR_L  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	replace	_reportError(       "Numeric        value        (%s)out        of        range        of        %s       ",        rawNum,(expType        ==        NR_LONG)?               "long       "        :       "int       ");        _reportError(   "Numeric    value    (%s)out    of    range    of    %s       ",    rawNum,(expType    ==    NR_LONG)?       "long   "    :       "int   ");    _reportError( "Numeric  value  (%s)out  of  range  of  %s   ",  rawNum,(expType  ==  NR_LONG)?   "long "  :   "long ");  _reportError( "Numeric  value  (%s)out  of  range  of  %s   ",  rawNum,(expType  ==  NR_L	  	non-compiled	[CE]  	13	None	add
103	[BUG]  [BUGGY]  _reportError(     "Numeric    value    (%s)out    of    range    of    %s     ",    rawNum,(expType    ==    NR_LONG)?         "long     "    :     "int     ");    _reportError(   "Numeric  value  (%s)out  of  range  of  %s     ",  rawNum,(expType  ==  NR_LONG)?     "long   "  :     "int   ");  _reportError( "Numeric  value  (%s)out  of  range  of  %s   ",  rawNum,(expType  ==  NR_LONG)?   "long "  :   "long ");  _reportError( "Numeric  value  (%s)out  of  range  of  %s   ",  rawNum,(expType  ==  NR_  [CE]  [FE]      JsonParseException    [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]  _reportError(     "Numeric    value    (%s)out    of    range    of    %s     ",    rawNum,(expType    ==    NR_LONG)?         "long     "    :     "int     ");    _reportError(   "Numeric  value  (%s)out  of  range  of  %s     ",  rawNum,(expType  ==  NR_LONG)?     "long   "  :     "int   ");  _reportError( "Numeric  value  (%s)out  of  range  of  %s   ",  rawNum,(expType  ==  NR_LONG)?   "long "  :   "long ");  _reportError( "Numeric  value  (%s)out  of  range  of  %s   ",  rawNum,(expType  ==  NR_  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	replace	_reportError(       "Numeric        value        (%s)out        of        range        of        %s       ",        rawNum,(expType        ==        NR_LONG)?               "long       "        :       "int       ");        _reportError(   "Numeric    value    (%s)out    of    range    of    %s       ",    rawNum,(expType    ==    NR_LONG)?       "long   "    :       "int   ");    _reportError( "Numeric  value  (%s)out  of  range  of  %s   ",  rawNum,(expType  ==  NR_LONG)?   "long "  :   "long ");  _reportError( "Numeric  value  (%s)out  of  range  of  %s   ",  rawNum,(expType  ==  NR_	  	non-compiled	[CE]  	13	None	add
104	[BUG]  [BUGGY]          _parsingContext  =  _parsingContext.getParent();  JsonReadContext  _parsingContext  =  _parsingContext.getParent();  [CE]  variable  _parsingContext  might  not  have  been  initialized  [FE]    JsonParseException    [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]          _parsingContext  =  _parsingContext.getParent();  JsonReadContext  _parsingContext  =  _parsingContext.getParent();  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	replace	                _parsingContext    =    _parsingContext.getParent();    JsonReadContext  _parsingContext  =  _parsingContext.getParent();	  	non-compiled	[CE]  variable  _parsingContext  might  not  have  been  initialized	5	None	add
105	[BUG]  [BUGGY]          _parsingContext  =  _parsingContext.getParent();  (expType  ==  NR_LONG)?   "long "  :   "long ");  [CE]  not  a  statement  [FE]      JsonParseException    [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]          _parsingContext  =  _parsingContext.getParent();  (expType  ==  NR_LONG)?   "long "  :   "long ");  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	replace	                _parsingContext    =    _parsingContext.getParent();    (expType  ==  NR_LONG)?   "long "  :   "long ");	  	non-compiled	[CE]  not  a  statement	5	None	add
106	[BUG]  [BUGGY]          _parsingContext  =  _parsingContext.getParent();  _parsingContext  =  _parsingContext.getNext();  [CE]  cannot  find  symbol  [FE]        JsonParseException    [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]          _parsingContext  =  _parsingContext.getParent();  _parsingContext  =  _parsingContext.getNext();  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	replace	                _parsingContext    =    _parsingContext.getParent();    _parsingContext  =  _parsingContext.getNext();	  	non-compiled	[CE]  cannot  find  symbol	5	None	add
107	[BUG]  [BUGGY]  if(expType  ==  null)  {  if(numDesc!=  null)  {  expType  =  NR_LONG;  }  [CE]  illegal  start  of  expression  [FE]              JsonParseException      [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]  if(expType  ==  null)  {  if(numDesc!=  null)  {  expType  =  NR_LONG;  }  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	replace	if(expType  ==  null)  {  if(numDesc!=  null)  {  expType  =  NR_LONG;  }	          if(numDesc!=    null)    {    if(expType    ==    NR_LONG)    {    expType    =    NR_LONG;    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
108	[BUG]  [BUGGY]  if(rawNum  ==  _intLen)  {  if(expType  ==  NR_LONG)  {  expType  =  NR_LONG;  }  [CE]  illegal  start  of  expression  [FE]                JsonParseException      [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]  if(rawNum  ==  _intLen)  {  if(expType  ==  NR_LONG)  {  expType  =  NR_LONG;  }  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	replace	if(rawNum  ==  _intLen)  {  if(expType  ==  NR_LONG)  {  expType  =  NR_LONG;  }	          if(numDesc!=    null)    {    if(expType    ==    NR_LONG)    {    expType    =    NR_LONG;    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
109	[BUG]  [BUGGY]  if(expType!=  null)  {  if(numDesc!=  null)  {  expType  =  NR_LONG;  }  [CE]  illegal  start  of  expression  [FE]                  JsonParseException      [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]  if(expType!=  null)  {  if(numDesc!=  null)  {  expType  =  NR_LONG;  }  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	replace	if(expType!=  null)  {  if(numDesc!=  null)  {  expType  =  NR_LONG;  }	          if(numDesc!=    null)    {    if(expType    ==    NR_LONG)    {    expType    =    NR_LONG;    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
110	[BUG]  [BUGGY]  if(expType  ==  null)  {  if(numDesc!=  null)  {  expType  =  NR_UNKNOWN;  }  [CE]  illegal  start  of  expression  [FE]                    JsonParseException      [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]  if(expType  ==  null)  {  if(numDesc!=  null)  {  expType  =  NR_UNKNOWN;  }  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	replace	if(expType  ==  null)  {  if(numDesc!=  null)  {  expType  =  NR_UNKNOWN;  }	          if(numDesc!=    null)    {    if(expType    ==    NR_LONG)    {    expType    =    NR_LONG;    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
111	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(0,  0);  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	add	_parsingContext  =  _parsingContext.createChildObjectContext(0,  0);	          _parsingContext    =    _parsingContext.createChildObjectContext(-1,    -1);    	compilable	  [FE]  JsonParseException  	8	8	replace
112	[BUG]  [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(0,  0);  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(0,  0);  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	replace	_parsingContext  =  _parsingContext.createChildObjectContext(0,  0);	          _parsingContext    =    _parsingContext.createChildObjectContext(-1,    -1);    	compilable	  [FE]  JsonParseException  	8	8	replace
113	[BUG]  [BUGGY]  _reportError(     "Numeric    value    (%s)out    of    range    of    %s     ",    rawNum,(expType    ==    NR_LONG)?         "long     "    :     "int     ");    _reportError(   "Numeric  value  (%s)out  of  range  of  %s     ",  rawNum,(expType  ==  NR_LONG)?     "long     "  :     "long   ");  _reportError( "Numeric  value  (%s)out  of  range  of  %s   ",  rawNum,(expType  ==  NR_LONG)?   "long "  :   "long ");  _reportError( "Numeric  value  (%s)out  of  range  of  %s   ",  rawNum,(expType  ==  NR_L  [CE]  [FE]    JsonParseException    [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]  _reportError(     "Numeric    value    (%s)out    of    range    of    %s     ",    rawNum,(expType    ==    NR_LONG)?         "long     "    :     "int     ");    _reportError(   "Numeric  value  (%s)out  of  range  of  %s     ",  rawNum,(expType  ==  NR_LONG)?     "long     "  :     "long   ");  _reportError( "Numeric  value  (%s)out  of  range  of  %s   ",  rawNum,(expType  ==  NR_LONG)?   "long "  :   "long ");  _reportError( "Numeric  value  (%s)out  of  range  of  %s   ",  rawNum,(expType  ==  NR_L  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	replace	_reportError(       "Numeric        value        (%s)out        of        range        of        %s       ",        rawNum,(expType        ==        NR_LONG)?               "long       "        :       "int       ");        _reportError(   "Numeric    value    (%s)out    of    range    of    %s       ",    rawNum,(expType    ==    NR_LONG)?       "long       "    :       "long   ");    _reportError( "Numeric  value  (%s)out  of  range  of  %s   ",  rawNum,(expType  ==  NR_LONG)?   "long "  :   "long ");  _reportError( "Numeric  value  (%s)out  of  range  of  %s   ",  rawNum,(expType  ==  NR_L	  	non-compiled	[CE]  	15	None	add
114	[BUG]  [BUGGY]  _reportError(     "Numeric    value    (%s)out    of    range    of    %s     ",    rawNum,(expType    ==    NR_LONG)?         "long     "    :     "int     ");    _reportError(   "Numeric  value  (%s)out  of  range  of  %s     ",  rawNum,(expType  ==  NR_LONG)?     "long     "  :     "long   ");  _reportError( "Numeric  value  (%s)out  of  range  of  %s   ",  rawNum,(expType  ==  NR_LONG)?   "long "  :   "long ");  _reportError( "Numeric  value  (%s)out  of  range  of  %s   ",  rawNum,(expType  ==  NR_  [CE]  [FE]      JsonParseException    [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]  _reportError(     "Numeric    value    (%s)out    of    range    of    %s     ",    rawNum,(expType    ==    NR_LONG)?         "long     "    :     "int     ");    _reportError(   "Numeric  value  (%s)out  of  range  of  %s     ",  rawNum,(expType  ==  NR_LONG)?     "long     "  :     "long   ");  _reportError( "Numeric  value  (%s)out  of  range  of  %s   ",  rawNum,(expType  ==  NR_LONG)?   "long "  :   "long ");  _reportError( "Numeric  value  (%s)out  of  range  of  %s   ",  rawNum,(expType  ==  NR_  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	replace	_reportError(       "Numeric        value        (%s)out        of        range        of        %s       ",        rawNum,(expType        ==        NR_LONG)?               "long       "        :       "int       ");        _reportError(   "Numeric    value    (%s)out    of    range    of    %s       ",    rawNum,(expType    ==    NR_LONG)?       "long       "    :       "long   ");    _reportError( "Numeric  value  (%s)out  of  range  of  %s   ",  rawNum,(expType  ==  NR_LONG)?   "long "  :   "long ");  _reportError( "Numeric  value  (%s)out  of  range  of  %s   ",  rawNum,(expType  ==  NR_	  	non-compiled	[CE]  	15	None	add
115	[BUG]  [BUGGY]  _parsingContext  =  _parsingContext.createChildArrayContext(rawNum,  numDesc);  [CE]  method  createChildArrayContext  in  class  JsonReadContext  cannot  be  applied  to  given  types;  [FE]          JsonParseException      [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]  _parsingContext  =  _parsingContext.createChildArrayContext(rawNum,  numDesc);  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	replace	_parsingContext  =  _parsingContext.createChildArrayContext(rawNum,  numDesc);	          _parsingContext    =    _parsingContext.createChildObjectContext(numDesc);    	non-compiled	[CE]  method  createChildArrayContext  in  class  JsonReadContext  cannot  be  applied  to  given  types;	2	None	replace
116	[BUG]  [BUGGY]  _reportError(     "Numeric    value    (%s)out    of    range    of    %s     ",    rawNum,(expType    ==    NR_LONG)?         "long     "    :     "int     ");    _reportError(   "Numeric  value  (%s)out  of  range  of  %s     ",  rawNum,(expType  ==  NR_LONG)?     "long   "  :     "int   ");  _reportError( "Numeric  value  (%s)out  of  range  of  %s   ",  rawNum,(expType  ==  NR_LONG)?   "long "  :   "long ");  _reportError( "Numeric  value  (%s)out  of  range  of  %s   ",  rawNum,(expType  ==  NR  [CE]  [FE]    JsonParseException    [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]  _reportError(     "Numeric    value    (%s)out    of    range    of    %s     ",    rawNum,(expType    ==    NR_LONG)?         "long     "    :     "int     ");    _reportError(   "Numeric  value  (%s)out  of  range  of  %s     ",  rawNum,(expType  ==  NR_LONG)?     "long   "  :     "int   ");  _reportError( "Numeric  value  (%s)out  of  range  of  %s   ",  rawNum,(expType  ==  NR_LONG)?   "long "  :   "long ");  _reportError( "Numeric  value  (%s)out  of  range  of  %s   ",  rawNum,(expType  ==  NR  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	replace	_reportError(       "Numeric        value        (%s)out        of        range        of        %s       ",        rawNum,(expType        ==        NR_LONG)?               "long       "        :       "int       ");        _reportError(   "Numeric    value    (%s)out    of    range    of    %s       ",    rawNum,(expType    ==    NR_LONG)?       "long   "    :       "int   ");    _reportError( "Numeric  value  (%s)out  of  range  of  %s   ",  rawNum,(expType  ==  NR_LONG)?   "long "  :   "long ");  _reportError( "Numeric  value  (%s)out  of  range  of  %s   ",  rawNum,(expType  ==  NR	  	non-compiled	[CE]  	13	None	add
117	[BUG]  [BUGGY]  _reportError(     "Numeric    value    (%s)out    of    range    of    %s     ",    rawNum,(expType    ==    NR_LONG)?         "long     "    :     "int     ");    _reportError(   "Numeric  value  (%s)out  of  range  of  %s     ",  rawNum,(expType  ==  NR_LONG)?     "long   "  :     "int   ");  _reportError( "Numeric  value  (%s)out  of  range  of  %s   ",  rawNum,(expType  ==  NR_LONG)?   "long "  :   "long ");  _reportError( "Numeric  value  (%s)out  of  range  of  %s   ",  rawNum,  [CE]  [FE]      JsonParseException    [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]  _reportError(     "Numeric    value    (%s)out    of    range    of    %s     ",    rawNum,(expType    ==    NR_LONG)?         "long     "    :     "int     ");    _reportError(   "Numeric  value  (%s)out  of  range  of  %s     ",  rawNum,(expType  ==  NR_LONG)?     "long   "  :     "int   ");  _reportError( "Numeric  value  (%s)out  of  range  of  %s   ",  rawNum,(expType  ==  NR_LONG)?   "long "  :   "long ");  _reportError( "Numeric  value  (%s)out  of  range  of  %s   ",  rawNum,  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	replace	_reportError(       "Numeric        value        (%s)out        of        range        of        %s       ",        rawNum,(expType        ==        NR_LONG)?               "long       "        :       "int       ");        _reportError(   "Numeric    value    (%s)out    of    range    of    %s       ",    rawNum,(expType    ==    NR_LONG)?       "long   "    :       "int   ");    _reportError( "Numeric  value  (%s)out  of  range  of  %s   ",  rawNum,(expType  ==  NR_LONG)?   "long "  :   "long ");  _reportError( "Numeric  value  (%s)out  of  range  of  %s   ",  rawNum,	  	non-compiled	[CE]  	13	None	add
118	[BUG]  [BUGGY]  _reportError(     "Numeric    value(%s)out    of    range    of    %s     ",    numDesc,    (expType    ==    NR_LONG)?         "long     "    :     "long     ");    _reportError(   "Numeric  value(%s)out  of  range  of  %s     ",  numDesc,  (expType  ==  NR_LONG)?     "long     "  :     "long   ");  _reportError( "Numeric  value(%s)out  of  range  of  %s   ",  numDesc,  (expType  ==  NR_LONG)?   "long "  :   "long ");  _reportError( "Numeric  value(%s)out  of  range  of  %s   ",  numDesc,  [CE]  [FE]    JsonParseException    [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]  _reportError(     "Numeric    value(%s)out    of    range    of    %s     ",    numDesc,    (expType    ==    NR_LONG)?         "long     "    :     "long     ");    _reportError(   "Numeric  value(%s)out  of  range  of  %s     ",  numDesc,  (expType  ==  NR_LONG)?     "long     "  :     "long   ");  _reportError( "Numeric  value(%s)out  of  range  of  %s   ",  numDesc,  (expType  ==  NR_LONG)?   "long "  :   "long ");  _reportError( "Numeric  value(%s)out  of  range  of  %s   ",  numDesc,  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	replace	_reportError(       "Numeric        value(%s)out        of        range        of        %s       ",        numDesc,        (expType        ==        NR_LONG)?               "long       "        :       "long       ");        _reportError(   "Numeric    value(%s)out    of    range    of    %s       ",    numDesc,    (expType    ==    NR_LONG)?       "long       "    :       "long   ");    _reportError( "Numeric  value(%s)out  of  range  of  %s   ",  numDesc,  (expType  ==  NR_LONG)?   "long "  :   "long ");  _reportError( "Numeric  value(%s)out  of  range  of  %s   ",  numDesc,	  	non-compiled	[CE]  	9	None	add
119	[BUG]  [BUGGY]  _reportError(     "Numeric    value(%s)out    of    range    of    %s     ",    numDesc,    (expType    ==    NR_LONG)?         "long     "    :     "long     ");    _reportError(   "Numeric  value(%s)out  of  range  of  %s     ",  numDesc,  (expType  ==  NR_LONG)?     "long     "  :     "long   ");  _reportError( "Numeric  value(%s)out  of  range  of  %s   ",  numDesc,  (expType  ==  NR_LONG)?   "long "  :   "long ");  _reportError( "Numeric  value(%s)out  of  range  of  %s   ",  numDesc,  (expType  ==  NR  [CE]  [FE]      JsonParseException    [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]  _reportError(     "Numeric    value(%s)out    of    range    of    %s     ",    numDesc,    (expType    ==    NR_LONG)?         "long     "    :     "long     ");    _reportError(   "Numeric  value(%s)out  of  range  of  %s     ",  numDesc,  (expType  ==  NR_LONG)?     "long     "  :     "long   ");  _reportError( "Numeric  value(%s)out  of  range  of  %s   ",  numDesc,  (expType  ==  NR_LONG)?   "long "  :   "long ");  _reportError( "Numeric  value(%s)out  of  range  of  %s   ",  numDesc,  (expType  ==  NR  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	replace	_reportError(       "Numeric        value(%s)out        of        range        of        %s       ",        numDesc,        (expType        ==        NR_LONG)?               "long       "        :       "long       ");        _reportError(   "Numeric    value(%s)out    of    range    of    %s       ",    numDesc,    (expType    ==    NR_LONG)?       "long       "    :       "long   ");    _reportError( "Numeric  value(%s)out  of  range  of  %s   ",  numDesc,  (expType  ==  NR_LONG)?   "long "  :   "long ");  _reportError( "Numeric  value(%s)out  of  range  of  %s   ",  numDesc,  (expType  ==  NR	  	non-compiled	[CE]  	9	None	add
120	[BUG]  [BUGGY]  _reportError(     "Numeric    value(%s)out    of    range    of    %s     ",    numDesc,    (expType    ==    NR_LONG)?         "long     "    :     "long     ");    _reportError(   "Numeric  value(%s)out  of  range  of  %s     ",  numDesc,  (expType  ==  NR_LONG)?     "long     "  :     "long   ");  _reportError( "Numeric  value(%s)out  of  range  of  %s   ",  numDesc,  (expType  ==  NR_LONG)?   "long "  :   "long ");  _reportError( "Numeric  value(%s)out  of  range  of  %s   ",  numDesc  [CE]  [FE]        JsonParseException    [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]  _reportError(     "Numeric    value(%s)out    of    range    of    %s     ",    numDesc,    (expType    ==    NR_LONG)?         "long     "    :     "long     ");    _reportError(   "Numeric  value(%s)out  of  range  of  %s     ",  numDesc,  (expType  ==  NR_LONG)?     "long     "  :     "long   ");  _reportError( "Numeric  value(%s)out  of  range  of  %s   ",  numDesc,  (expType  ==  NR_LONG)?   "long "  :   "long ");  _reportError( "Numeric  value(%s)out  of  range  of  %s   ",  numDesc  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	replace	_reportError(       "Numeric        value(%s)out        of        range        of        %s       ",        numDesc,        (expType        ==        NR_LONG)?               "long       "        :       "long       ");        _reportError(   "Numeric    value(%s)out    of    range    of    %s       ",    numDesc,    (expType    ==    NR_LONG)?       "long       "    :       "long   ");    _reportError( "Numeric  value(%s)out  of  range  of  %s   ",  numDesc,  (expType  ==  NR_LONG)?   "long "  :   "long ");  _reportError( "Numeric  value(%s)out  of  range  of  %s   ",  numDesc	  	non-compiled	[CE]  	9	None	add
121	[BUG]  [BUGGY]  expType  =  _longIntegerDesc(rawNum);  [CE]  incompatible  types  [FE]              JsonParseException      [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]  expType  =  _longIntegerDesc(rawNum);  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	replace	expType  =  _longIntegerDesc(rawNum);	          if(numDesc!=    null)    {    if(expType    ==    NR_LONG)    {    expType    =    NR_LONG;    }    	non-compiled	[CE]  incompatible  types	28	None	replace
122	[BUG]  [BUGGY]  ||  expType  ==  NR_LONG)  {  expType  =  NR_LONG;  }  [CE]  illegal  start  of  expression  [FE]                JsonParseException      [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]  ||  expType  ==  NR_LONG)  {  expType  =  NR_LONG;  }  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	replace	||  expType  ==  NR_LONG)  {  expType  =  NR_LONG;  }	          if(numDesc!=    null)    {    if(expType    ==    NR_LONG)    {    expType    =    NR_LONG;    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
123	[BUG]  [BUGGY]  _reportError(     "Numeric    value    (%s)out    of    range    of    %s     ",    numDesc,    expType    ==    NR_LONG?         "long     "    :     "long     ");    _reportError(   "Numeric  value  (%s)out  of  range  of  %s     ",  numDesc,  expType  ==  NR_LONG?     "long     "  :     "long   ");  _reportError( "Numeric  value  (%s)out  of  range  of  %s   ",  numDesc,  expType  ==  NR_LONG?   "long   "  :   "long ");  _reportError( "Numeric  value  (%s)out  of  range  of  %s   ",  numDesc,  expType  ==  NR  [CE]  [FE]    JsonParseException    [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]  _reportError(     "Numeric    value    (%s)out    of    range    of    %s     ",    numDesc,    expType    ==    NR_LONG?         "long     "    :     "long     ");    _reportError(   "Numeric  value  (%s)out  of  range  of  %s     ",  numDesc,  expType  ==  NR_LONG?     "long     "  :     "long   ");  _reportError( "Numeric  value  (%s)out  of  range  of  %s   ",  numDesc,  expType  ==  NR_LONG?   "long   "  :   "long ");  _reportError( "Numeric  value  (%s)out  of  range  of  %s   ",  numDesc,  expType  ==  NR  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	replace	_reportError(       "Numeric        value        (%s)out        of        range        of        %s       ",        numDesc,        expType        ==        NR_LONG?               "long       "        :       "long       ");        _reportError(   "Numeric    value    (%s)out    of    range    of    %s       ",    numDesc,    expType    ==    NR_LONG?       "long       "    :       "long   ");    _reportError( "Numeric  value  (%s)out  of  range  of  %s   ",  numDesc,  expType  ==  NR_LONG?   "long   "  :   "long ");  _reportError( "Numeric  value  (%s)out  of  range  of  %s   ",  numDesc,  expType  ==  NR	  	non-compiled	[CE]  	11	None	add
124	[BUG]  [BUGGY]  _reportError(     "Numeric    value    (%s)out    of    range    of    %s     ",    numDesc,    expType    ==    NR_LONG?         "long     "    :     "long     ");    _reportError(   "Numeric  value  (%s)out  of  range  of  %s     ",  numDesc,  expType  ==  NR_LONG?     "long     "  :     "long   ");  _reportError( "Numeric  value  (%s)out  of  range  of  %s   ",  numDesc,  expType  ==  NR_LONG?   "long   "  :   "long ");  _reportError( "Numeric  value  (%s)out  of  range  of  %s   ",  numDesc,  expType  ==  NR_  [CE]  [FE]      JsonParseException    [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]  _reportError(     "Numeric    value    (%s)out    of    range    of    %s     ",    numDesc,    expType    ==    NR_LONG?         "long     "    :     "long     ");    _reportError(   "Numeric  value  (%s)out  of  range  of  %s     ",  numDesc,  expType  ==  NR_LONG?     "long     "  :     "long   ");  _reportError( "Numeric  value  (%s)out  of  range  of  %s   ",  numDesc,  expType  ==  NR_LONG?   "long   "  :   "long ");  _reportError( "Numeric  value  (%s)out  of  range  of  %s   ",  numDesc,  expType  ==  NR_  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	replace	_reportError(       "Numeric        value        (%s)out        of        range        of        %s       ",        numDesc,        expType        ==        NR_LONG?               "long       "        :       "long       ");        _reportError(   "Numeric    value    (%s)out    of    range    of    %s       ",    numDesc,    expType    ==    NR_LONG?       "long       "    :       "long   ");    _reportError( "Numeric  value  (%s)out  of  range  of  %s   ",  numDesc,  expType  ==  NR_LONG?   "long   "  :   "long ");  _reportError( "Numeric  value  (%s)out  of  range  of  %s   ",  numDesc,  expType  ==  NR_	  	non-compiled	[CE]  	11	None	add
125	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]        JsonParseException      [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]  if(expType  ==  NR_LONG)  {  return;  }  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	add	if(expType  ==  NR_LONG)  {  return;  }	          if(numDesc!=    null)    {    if(expType    ==    NR_LONG)    {    return;    }    	compilable	  [FE]  JsonParseException  	25	8	replace
126	[BUG]  [BUGGY]  if(expType  ==  NR_LONG)  {  return;  }  [FE]  JsonParseException  [FE]        JsonParseException      [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]  if(expType  ==  NR_LONG)  {  return;  }  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	replace	if(expType  ==  NR_LONG)  {  return;  }	          if(numDesc!=    null)    {    if(expType    ==    NR_LONG)    {    return;    }    	compilable	  [FE]  JsonParseException  	25	8	replace
127	[BUG]  [BUGGY]  if(rawNum  ==  _inputEnd)  {  if(numDesc!=  null)  {  return;  }  [CE]  illegal  start  of  expression  [FE]          JsonParseException      [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]  if(rawNum  ==  _inputEnd)  {  if(numDesc!=  null)  {  return;  }  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	replace	if(rawNum  ==  _inputEnd)  {  if(numDesc!=  null)  {  return;  }	          if(numDesc!=    null)    {    if(expType    ==    NR_LONG)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
128	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]            JsonParseException      [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]  if(expType!=  NR_LONG)  {  return;  }  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	add	if(expType!=  NR_LONG)  {  return;  }	          if(numDesc!=    null)    {    if(expType    ==    NR_LONG)    {    return;    }    	compilable	  [FE]  JsonParseException  	25	8	replace
129	[BUG]  [BUGGY]  if(expType!=  NR_LONG)  {  return;  }  [FE]  JsonParseException  [FE]            JsonParseException      [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]  if(expType!=  NR_LONG)  {  return;  }  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	replace	if(expType!=  NR_LONG)  {  return;  }	          if(numDesc!=    null)    {    if(expType    ==    NR_LONG)    {    return;    }    	compilable	  [FE]  JsonParseException  	25	8	replace
130	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]          JsonParseException      [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]  _reportError( "Numeric  value(%s)in  of  range  of  %s "  +  numDesc,  expType  ==  NR_LONG?   "long "  : "long ");  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	add	_reportError( "Numeric  value(%s)in  of  range  of  %s "  +  numDesc,  expType  ==  NR_LONG?   "long "  : "long ");	  _reportError(   "Numeric    value(%s)out    of    range    of    %s   "    +    numDesc,    expType    {    NR_LONG?       "long   "    :   "long   ");    	compilable	  [FE]  JsonParseException  	19	8	replace
131	[BUG]  [BUGGY]  _reportError( "Numeric  value(%s)in  of  range  of  %s "  +  numDesc,  expType  ==  NR_LONG?   "long "  : "long ");  [FE]  JsonParseException  [FE]          JsonParseException      [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]  _reportError( "Numeric  value(%s)in  of  range  of  %s "  +  numDesc,  expType  ==  NR_LONG?   "long "  : "long ");  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	replace	_reportError( "Numeric  value(%s)in  of  range  of  %s "  +  numDesc,  expType  ==  NR_LONG?   "long "  : "long ");	  _reportError(   "Numeric    value(%s)out    of    range    of    %s   "    +    numDesc,    expType    {    NR_LONG?       "long   "    :   "long   ");    	compilable	  [FE]  JsonParseException  	19	8	replace
132	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]            JsonParseException      [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]  _reportError( "Numeric  value(%s)out  of  range  of  %s "  +  numDesc,  expType  ==  NR_LONG?   "long "  : "long ",  rawNum);  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	add	_reportError( "Numeric  value(%s)out  of  range  of  %s "  +  numDesc,  expType  ==  NR_LONG?   "long "  : "long ",  rawNum);	  _reportError(   "Numeric    value(%s)out    of    range    of    %s   "    +    numDesc,    expType    {    NR_LONG?       "long   "    :   "long   ");    	compilable	  [FE]  JsonParseException  	19	8	replace
133	[BUG]  [BUGGY]  _reportError( "Numeric  value(%s)out  of  range  of  %s "  +  numDesc,  expType  ==  NR_LONG?   "long "  : "long ",  rawNum);  [FE]  JsonParseException  [FE]            JsonParseException      [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]  _reportError( "Numeric  value(%s)out  of  range  of  %s "  +  numDesc,  expType  ==  NR_LONG?   "long "  : "long ",  rawNum);  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	replace	_reportError( "Numeric  value(%s)out  of  range  of  %s "  +  numDesc,  expType  ==  NR_LONG?   "long "  : "long ",  rawNum);	  _reportError(   "Numeric    value(%s)out    of    range    of    %s   "    +    numDesc,    expType    {    NR_LONG?       "long   "    :   "long   ");    	compilable	  [FE]  JsonParseException  	19	8	replace
134	[BUG]  [BUGGY]  _reportError(     "Numeric    value    (%s)out    of    range    of    %s     ",    rawNum,(expType    ==    NR_LONG)?         "long     "    :     "int     ");    _reportError(   "Numeric  value  (%s)out  of  range  of  %s     ",  rawNum,(expType  ==  NR_LONG)?     "long     "  :     "long   ");  _reportError( "Numeric  value  (%s)out  of  range  of  %s   ",  rawNum,(expType  ==  NR_LONG)?   "long "  :   "long ");  _reportError( "Numeric  value  (%s)out  of  range  of  %s   ",  rawNum,(expType  ==  NR  [CE]  [FE]    JsonParseException    [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]  _reportError(     "Numeric    value    (%s)out    of    range    of    %s     ",    rawNum,(expType    ==    NR_LONG)?         "long     "    :     "int     ");    _reportError(   "Numeric  value  (%s)out  of  range  of  %s     ",  rawNum,(expType  ==  NR_LONG)?     "long     "  :     "long   ");  _reportError( "Numeric  value  (%s)out  of  range  of  %s   ",  rawNum,(expType  ==  NR_LONG)?   "long "  :   "long ");  _reportError( "Numeric  value  (%s)out  of  range  of  %s   ",  rawNum,(expType  ==  NR  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	replace	_reportError(       "Numeric        value        (%s)out        of        range        of        %s       ",        rawNum,(expType        ==        NR_LONG)?               "long       "        :       "int       ");        _reportError(   "Numeric    value    (%s)out    of    range    of    %s       ",    rawNum,(expType    ==    NR_LONG)?       "long       "    :       "long   ");    _reportError( "Numeric  value  (%s)out  of  range  of  %s   ",  rawNum,(expType  ==  NR_LONG)?   "long "  :   "long ");  _reportError( "Numeric  value  (%s)out  of  range  of  %s   ",  rawNum,(expType  ==  NR	  	non-compiled	[CE]  	15	None	add
135	[BUG]  [BUGGY]  _reportError(     "Numeric    value    (%s)out    of    range    of    %s     ",    rawNum,(expType    ==    NR_LONG)?         "long     "    :     "int     ");    _reportError(   "Numeric  value  (%s)out  of  range  of  %s     ",  rawNum,(expType  ==  NR_LONG)?     "long     "  :     "long   ");  _reportError( "Numeric  value  (%s)out  of  range  of  %s   ",  rawNum,(expType  ==  NR_LONG)?   "long "  :   "long ");  _reportError( "Numeric  value  (%s)out  of  range  of  %s   ",  rawNum,  [CE]  [FE]      JsonParseException    [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]  _reportError(     "Numeric    value    (%s)out    of    range    of    %s     ",    rawNum,(expType    ==    NR_LONG)?         "long     "    :     "int     ");    _reportError(   "Numeric  value  (%s)out  of  range  of  %s     ",  rawNum,(expType  ==  NR_LONG)?     "long     "  :     "long   ");  _reportError( "Numeric  value  (%s)out  of  range  of  %s   ",  rawNum,(expType  ==  NR_LONG)?   "long "  :   "long ");  _reportError( "Numeric  value  (%s)out  of  range  of  %s   ",  rawNum,  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	replace	_reportError(       "Numeric        value        (%s)out        of        range        of        %s       ",        rawNum,(expType        ==        NR_LONG)?               "long       "        :       "int       ");        _reportError(   "Numeric    value    (%s)out    of    range    of    %s       ",    rawNum,(expType    ==    NR_LONG)?       "long       "    :       "long   ");    _reportError( "Numeric  value  (%s)out  of  range  of  %s   ",  rawNum,(expType  ==  NR_LONG)?   "long "  :   "long ");  _reportError( "Numeric  value  (%s)out  of  range  of  %s   ",  rawNum,	  	non-compiled	[CE]  	15	None	add
136	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]  _reportError( "Numeric  value(%s)in  of  range  of  %s "  +  numDesc,  (expType  ==  NR_LONG)?   "long "  : "long ");  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	add	_reportError( "Numeric  value(%s)in  of  range  of  %s "  +  numDesc,  (expType  ==  NR_LONG)?   "long "  : "long ");	  _reportError(   "Numeric    value(%s)out    of    range    of    %s   "    +    numDesc,    (expType    ==    NR_LONG)?       "long   "    :   "long   ");    	compilable	  [FE]  JsonParseException  	23	8	replace
137	[BUG]  [BUGGY]  _reportError( "Numeric  value(%s)in  of  range  of  %s "  +  numDesc,  (expType  ==  NR_LONG)?   "long "  : "long ");  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]  _reportError( "Numeric  value(%s)in  of  range  of  %s "  +  numDesc,  (expType  ==  NR_LONG)?   "long "  : "long ");  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	replace	_reportError( "Numeric  value(%s)in  of  range  of  %s "  +  numDesc,  (expType  ==  NR_LONG)?   "long "  : "long ");	  _reportError(   "Numeric    value(%s)out    of    range    of    %s   "    +    numDesc,    (expType    ==    NR_LONG)?       "long   "    :   "long   ");    	compilable	  [FE]  JsonParseException  	23	8	replace
138	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]  _reportError( "Numeric  value(%s)out  of  range  of  %s "  +  numDesc,  (expType  ==  NR_LONG)?   "int "  : "int ");  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	add	_reportError( "Numeric  value(%s)out  of  range  of  %s "  +  numDesc,  (expType  ==  NR_LONG)?   "int "  : "int ");	  _reportError(   "Numeric    value(%s)out    of    range    of    %s   "    +    numDesc,    (expType    ==    NR_LONG)?       "long   "    :   "long   ");    	compilable	  [FE]  JsonParseException  	23	8	replace
139	[BUG]  [BUGGY]  _reportError( "Numeric  value(%s)out  of  range  of  %s "  +  numDesc,  (expType  ==  NR_LONG)?   "int "  : "int ");  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]  _reportError( "Numeric  value(%s)out  of  range  of  %s "  +  numDesc,  (expType  ==  NR_LONG)?   "int "  : "int ");  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	replace	_reportError( "Numeric  value(%s)out  of  range  of  %s "  +  numDesc,  (expType  ==  NR_LONG)?   "int "  : "int ");	  _reportError(   "Numeric    value(%s)out    of    range    of    %s   "    +    numDesc,    (expType    ==    NR_LONG)?       "long   "    :   "long   ");    	compilable	  [FE]  JsonParseException  	23	8	replace
140	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]          _parsingContext  =  _parsingContext.getParent();  JsonReadContext  ctxt  =  _parsingContext.getParent();  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	add	                _parsingContext    =    _parsingContext.getParent();    JsonReadContext  ctxt  =  _parsingContext.getParent();	  	compilable	  [FE]  JsonParseException  	5	8	add
141	[BUG]  [BUGGY]          _parsingContext  =  _parsingContext.getParent();  JsonReadContext  ctxt  =  _parsingContext.getParent();  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]          _parsingContext  =  _parsingContext.getParent();  JsonReadContext  ctxt  =  _parsingContext.getParent();  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	replace	                _parsingContext    =    _parsingContext.getParent();    JsonReadContext  ctxt  =  _parsingContext.getParent();	  	compilable	  [FE]  JsonParseException  	5	8	add
142	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]          _parsingContext.setCurrentName(numDesc);  if(_parsingContext!=  null)  {  _parsingContext.setCurrentName(numDesc);  }  else  {  _parsingContext.setCurrentName(rawNum);  }  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	add	                _parsingContext.setCurrentName(numDesc);    if(_parsingContext!=  null)  {  _parsingContext.setCurrentName(numDesc);  }  else  {  _parsingContext.setCurrentName(rawNum);  }	  	compilable	  [FE]  JsonParseException  	3	8	add
143	[BUG]  [BUGGY]          _parsingContext.setCurrentName(numDesc);  if(_parsingContext!=  null)  {  _parsingContext.setCurrentName(numDesc);  }  else  {  _parsingContext.setCurrentName(rawNum);  }  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]          _parsingContext.setCurrentName(numDesc);  if(_parsingContext!=  null)  {  _parsingContext.setCurrentName(numDesc);  }  else  {  _parsingContext.setCurrentName(rawNum);  }  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	replace	                _parsingContext.setCurrentName(numDesc);    if(_parsingContext!=  null)  {  _parsingContext.setCurrentName(numDesc);  }  else  {  _parsingContext.setCurrentName(rawNum);  }	  	compilable	  [FE]  JsonParseException  	3	8	add
144	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]          _parsingContext.setCurrentName(numDesc);  if(_parsingContext!=  null)  {  _parsingContext.setCurrentName(numDesc);  }  else  {  _parsingContext.setCurrentName(null);  }  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	add	                _parsingContext.setCurrentName(numDesc);    if(_parsingContext!=  null)  {  _parsingContext.setCurrentName(numDesc);  }  else  {  _parsingContext.setCurrentName(null);  }	  	compilable	  [FE]  JsonParseException  	3	8	add
145	[BUG]  [BUGGY]          _parsingContext.setCurrentName(numDesc);  if(_parsingContext!=  null)  {  _parsingContext.setCurrentName(numDesc);  }  else  {  _parsingContext.setCurrentName(null);  }  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]          _parsingContext.setCurrentName(numDesc);  if(_parsingContext!=  null)  {  _parsingContext.setCurrentName(numDesc);  }  else  {  _parsingContext.setCurrentName(null);  }  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	replace	                _parsingContext.setCurrentName(numDesc);    if(_parsingContext!=  null)  {  _parsingContext.setCurrentName(numDesc);  }  else  {  _parsingContext.setCurrentName(null);  }	  	compilable	  [FE]  JsonParseException  	3	8	add
146	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]        JsonParseException    [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]          _parsingContext.setCurrentName(numDesc);  if(_parsingContext!=  null)  {  _parsingContext.setCurrentName(numDesc);  }  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	add	                _parsingContext.setCurrentName(numDesc);    if(_parsingContext!=  null)  {  _parsingContext.setCurrentName(numDesc);  }	  	compilable	  [FE]  JsonParseException  	3	8	add
147	[BUG]  [BUGGY]          _parsingContext.setCurrentName(numDesc);  if(_parsingContext!=  null)  {  _parsingContext.setCurrentName(numDesc);  }  [FE]  JsonParseException  [FE]        JsonParseException    [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]          _parsingContext.setCurrentName(numDesc);  if(_parsingContext!=  null)  {  _parsingContext.setCurrentName(numDesc);  }  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	replace	                _parsingContext.setCurrentName(numDesc);    if(_parsingContext!=  null)  {  _parsingContext.setCurrentName(numDesc);  }	  	compilable	  [FE]  JsonParseException  	3	8	add
148	[BUG]  [BUGGY]          _parsingContext.setCurrentName(numDesc);  if(_parsingContext!=  null)  {  _parsingContext.setCurrentName(numDesc);  }  else  {  _parsingContext.setCurrentName(nameDesc);  }  [CE]  cannot  find  symbol  nameDesc  [FE]          JsonParseException    [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]          _parsingContext.setCurrentName(numDesc);  if(_parsingContext!=  null)  {  _parsingContext.setCurrentName(numDesc);  }  else  {  _parsingContext.setCurrentName(nameDesc);  }  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	replace	                _parsingContext.setCurrentName(numDesc);    if(_parsingContext!=  null)  {  _parsingContext.setCurrentName(numDesc);  }  else  {  _parsingContext.setCurrentName(nameDesc);  }	  	non-compiled	[CE]  cannot  find  symbol  nameDesc	3	None	add
149	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]            JsonParseException      [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]  if(expType  ==  NR_UNKNOWN)  {  return;  }  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	add	if(expType  ==  NR_UNKNOWN)  {  return;  }	          if(numDesc!=    null)    {    if(expType    ==    NR_UNKNOWN)    {    return;    }    	compilable	  [FE]  JsonParseException  	27	8	replace
150	[BUG]  [BUGGY]  if(expType  ==  NR_UNKNOWN)  {  return;  }  [FE]  JsonParseException  [FE]            JsonParseException      [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]  if(expType  ==  NR_UNKNOWN)  {  return;  }  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	replace	if(expType  ==  NR_UNKNOWN)  {  return;  }	          if(numDesc!=    null)    {    if(expType    ==    NR_UNKNOWN)    {    return;    }    	compilable	  [FE]  JsonParseException  	27	8	replace
151	[BUG]  [BUGGY]  (expType  ==  NR_LONG)?   "long "  :   "int ");  [CE]  not  a  statement  [FE]              JsonParseException      [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]  (expType  ==  NR_LONG)?   "long "  :   "int ");  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	replace	(expType  ==  NR_LONG)?   "long "  :   "int ");	          if(numDesc!=    null)    {    if(expType    ==    NR_UNKNOWN)    {    return;    }    	non-compiled	[CE]  not  a  statement	27	None	replace
152	[BUG]  [BUGGY]  if(expType!=  null)  {  if(expType.length()  ==  0)  {  return;  }  [CE]  illegal  start  of  expression  [FE]                JsonParseException      [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]  if(expType!=  null)  {  if(expType.length()  ==  0)  {  return;  }  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	replace	if(expType!=  null)  {  if(expType.length()  ==  0)  {  return;  }	          if(numDesc!=    null)    {    if(expType.length()    ==    0)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
153	[BUG]  [BUGGY]  if(expType.length()  ==  0)  {  return;  }  [CE]  int  cannot  be  dereferenced  [FE]                  JsonParseException      [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]  if(expType.length()  ==  0)  {  return;  }  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	replace	if(expType.length()  ==  0)  {  return;  }	          if(numDesc!=    null)    {    if(expType.length()    ==    0)    {    return;    }    	non-compiled	[CE]  int  cannot  be  dereferenced	29	None	replace
154	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]  if(numDesc!=  null)  {  _parsingContext.setCurrentName(numDesc);  }  else  {  _parsingContext.setCurrentName(numDesc);  }  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	add	if(numDesc!=  null)  {  _parsingContext.setCurrentName(numDesc);  }  else  {  _parsingContext.setCurrentName(numDesc);  }	          _parsingContext.setCurrentName(numDesc);    	compilable	  [FE]  JsonParseException  	4	8	replace
155	[BUG]  [BUGGY]  if(numDesc!=  null)  {  _parsingContext.setCurrentName(numDesc);  }  else  {  _parsingContext.setCurrentName(numDesc);  }  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]  if(numDesc!=  null)  {  _parsingContext.setCurrentName(numDesc);  }  else  {  _parsingContext.setCurrentName(numDesc);  }  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	replace	if(numDesc!=  null)  {  _parsingContext.setCurrentName(numDesc);  }  else  {  _parsingContext.setCurrentName(numDesc);  }	          _parsingContext.setCurrentName(numDesc);    	compilable	  [FE]  JsonParseException  	4	8	replace
156	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]  if(numDesc!=  null)  {  _parsingContext.setCurrentName(numDesc);  }  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	add	if(numDesc!=  null)  {  _parsingContext.setCurrentName(numDesc);  }	          _parsingContext.setCurrentName(numDesc);    	compilable	  [FE]  JsonParseException  	4	8	replace
157	[BUG]  [BUGGY]  if(numDesc!=  null)  {  _parsingContext.setCurrentName(numDesc);  }  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]  if(numDesc!=  null)  {  _parsingContext.setCurrentName(numDesc);  }  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	replace	if(numDesc!=  null)  {  _parsingContext.setCurrentName(numDesc);  }	          _parsingContext.setCurrentName(numDesc);    	compilable	  [FE]  JsonParseException  	4	8	replace
158	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]        JsonParseException    [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]  if(numDesc!=  null)  {  _parsingContext.setCurrentName(numDesc);  }  else  {  _parsingContext.setCurrentName(null);  }  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	add	if(numDesc!=  null)  {  _parsingContext.setCurrentName(numDesc);  }  else  {  _parsingContext.setCurrentName(null);  }	          _parsingContext.setCurrentName(numDesc);    	compilable	  [FE]  JsonParseException  	4	8	replace
159	[BUG]  [BUGGY]  if(numDesc!=  null)  {  _parsingContext.setCurrentName(numDesc);  }  else  {  _parsingContext.setCurrentName(null);  }  [FE]  JsonParseException  [FE]        JsonParseException    [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]  if(numDesc!=  null)  {  _parsingContext.setCurrentName(numDesc);  }  else  {  _parsingContext.setCurrentName(null);  }  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	replace	if(numDesc!=  null)  {  _parsingContext.setCurrentName(numDesc);  }  else  {  _parsingContext.setCurrentName(null);  }	          _parsingContext.setCurrentName(numDesc);    	compilable	  [FE]  JsonParseException  	4	8	replace
160	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]          _parsingContext  =  _parsingContext.createChildObjectContext(-1,  -1);  _parsingContext  =  _parsingContext.createChildArrayContext(-1,  -1);  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	add	                _parsingContext    =    _parsingContext.createChildObjectContext(-1,    -1);    _parsingContext  =  _parsingContext.createChildArrayContext(-1,  -1);	  	compilable	  [FE]  JsonParseException  	7	8	add
161	[BUG]  [BUGGY]          _parsingContext  =  _parsingContext.createChildObjectContext(-1,  -1);  _parsingContext  =  _parsingContext.createChildArrayContext(-1,  -1);  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]          _parsingContext  =  _parsingContext.createChildObjectContext(-1,  -1);  _parsingContext  =  _parsingContext.createChildArrayContext(-1,  -1);  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	replace	                _parsingContext    =    _parsingContext.createChildObjectContext(-1,    -1);    _parsingContext  =  _parsingContext.createChildArrayContext(-1,  -1);	  	compilable	  [FE]  JsonParseException  	7	8	add
162	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]          _parsingContext  =  _parsingContext.createChildObjectContext(-1,  -1);  _parsingContext  =  _parsingContext.createChildObjectContext(-3,  -1);  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	add	                _parsingContext    =    _parsingContext.createChildObjectContext(-1,    -1);    _parsingContext  =  _parsingContext.createChildObjectContext(-3,  -1);	  	compilable	  [FE]  JsonParseException  	7	8	add
163	[BUG]  [BUGGY]          _parsingContext  =  _parsingContext.createChildObjectContext(-1,  -1);  _parsingContext  =  _parsingContext.createChildObjectContext(-3,  -1);  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]          _parsingContext  =  _parsingContext.createChildObjectContext(-1,  -1);  _parsingContext  =  _parsingContext.createChildObjectContext(-3,  -1);  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	replace	                _parsingContext    =    _parsingContext.createChildObjectContext(-1,    -1);    _parsingContext  =  _parsingContext.createChildObjectContext(-3,  -1);	  	compilable	  [FE]  JsonParseException  	7	8	add
164	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]          JsonParseException      [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]  if(expType  ==  NR_LONG)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	add	if(expType  ==  NR_LONG)  {  throw  new  IllegalArgumentException( " ");  }	          if(numDesc!=    null)    {    if(expType    ==    NR_LONG)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  JsonParseException  	26	8	replace
165	[BUG]  [BUGGY]  if(expType  ==  NR_LONG)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  JsonParseException  [FE]          JsonParseException      [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]  if(expType  ==  NR_LONG)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	replace	if(expType  ==  NR_LONG)  {  throw  new  IllegalArgumentException( " ");  }	          if(numDesc!=    null)    {    if(expType    ==    NR_LONG)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  JsonParseException  	26	8	replace
166	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]            JsonParseException      [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]  if(expType!=  NR_LONG)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	add	if(expType!=  NR_LONG)  {  throw  new  IllegalArgumentException( " ");  }	          if(numDesc!=    null)    {    if(expType    ==    NR_LONG)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  JsonParseException  	26	8	replace
167	[BUG]  [BUGGY]  if(expType!=  NR_LONG)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  JsonParseException  [FE]            JsonParseException      [CONTEXT]      protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);      [BUGGY]  if(expType!=  NR_LONG)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      (expType  ==  NR_LONG)  ?       "long     "  :       "int     ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	replace	if(expType!=  NR_LONG)  {  throw  new  IllegalArgumentException( " ");  }	          if(numDesc!=    null)    {    if(expType    ==    NR_LONG)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  JsonParseException  	26	8	replace
