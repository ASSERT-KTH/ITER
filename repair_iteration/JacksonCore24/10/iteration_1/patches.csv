bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]      _parsingContext  =  _parsingContext.createChildObjectContext();  [CE]  method  createChildObjectContext  in  class  JsonReadContext  cannot  be  applied  to  given  types;  [FE]    JsonParseException    [CONTEXT]    protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);    [BUGGY]      _parsingContext  =  _parsingContext.createChildObjectContext();  [BUGGY]    (expType  ==  NR_LONG)  ?     "long   "  :     "int   ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	replace	        _parsingContext  =  _parsingContext.createChildObjectContext();	  	non-compiled	[CE]  method  createChildObjectContext  in  class  JsonReadContext  cannot  be  applied  to  given  types;	5	None	add
2	[BUG]  [BUGGY]      _parsingContext  =  _parsingContext.createChildObjectContext(numDesc);  [CE]  method  createChildObjectContext  in  class  JsonReadContext  cannot  be  applied  to  given  types;  [FE]      JsonParseException    [CONTEXT]    protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);    [BUGGY]      _parsingContext  =  _parsingContext.createChildObjectContext(numDesc);  [BUGGY]    (expType  ==  NR_LONG)  ?     "long   "  :     "int   ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	replace	        _parsingContext  =  _parsingContext.createChildObjectContext(numDesc);	  	non-compiled	[CE]  method  createChildObjectContext  in  class  JsonReadContext  cannot  be  applied  to  given  types;	5	None	add
3	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]        JsonParseException    [CONTEXT]    protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);    [BUGGY]      _parsingContext.setCurrentName(numDesc);  [BUGGY]    (expType  ==  NR_LONG)  ?     "long   "  :     "int   ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	add	        _parsingContext.setCurrentName(numDesc);	  	compilable	  [FE]  JsonParseException  	5	8	add
4	[BUG]  [BUGGY]      _parsingContext.setCurrentName(numDesc);  [FE]  JsonParseException  [FE]        JsonParseException    [CONTEXT]    protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);    [BUGGY]      _parsingContext.setCurrentName(numDesc);  [BUGGY]    (expType  ==  NR_LONG)  ?     "long   "  :     "int   ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	replace	        _parsingContext.setCurrentName(numDesc);	  	compilable	  [FE]  JsonParseException  	5	8	add
5	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]          JsonParseException    [CONTEXT]    protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);    [BUGGY]      _parsingContext  =  _parsingContext.getParent();  [BUGGY]    (expType  ==  NR_LONG)  ?     "long   "  :     "int   ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	add	        _parsingContext  =  _parsingContext.getParent();	  	compilable	  [FE]  JsonParseException  	5	8	add
6	[BUG]  [BUGGY]      _parsingContext  =  _parsingContext.getParent();  [FE]  JsonParseException  [FE]          JsonParseException    [CONTEXT]    protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);    [BUGGY]      _parsingContext  =  _parsingContext.getParent();  [BUGGY]    (expType  ==  NR_LONG)  ?     "long   "  :     "int   ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	replace	        _parsingContext  =  _parsingContext.getParent();	  	compilable	  [FE]  JsonParseException  	5	8	add
7	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]            JsonParseException    [CONTEXT]    protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);    [BUGGY]      _parsingContext  =  _parsingContext.createChildObjectContext(-1,  -1);  [BUGGY]    (expType  ==  NR_LONG)  ?     "long   "  :     "int   ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	add	        _parsingContext  =  _parsingContext.createChildObjectContext(-1,  -1);	  	compilable	  [FE]  JsonParseException  	5	8	add
8	[BUG]  [BUGGY]      _parsingContext  =  _parsingContext.createChildObjectContext(-1,  -1);  [FE]  JsonParseException  [FE]            JsonParseException    [CONTEXT]    protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);    [BUGGY]      _parsingContext  =  _parsingContext.createChildObjectContext(-1,  -1);  [BUGGY]    (expType  ==  NR_LONG)  ?     "long   "  :     "int   ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	replace	        _parsingContext  =  _parsingContext.createChildObjectContext(-1,  -1);	  	compilable	  [FE]  JsonParseException  	5	8	add
9	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]    protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);    [BUGGY]  _reportError(   "Numeric  value(%s)out  of  range  of  %s   ",  numDesc,  (expType  ==  NR_LONG)?     "long   "  :   "long   ");  _reportError( "Numeric  value(%s)out  of  range  of  %s   ",  numDesc,  (expType  ==  NR_LONG)?   "long   "  :   "long ");  [BUGGY]    (expType  ==  NR_LONG)  ?     "long   "  :     "int   ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	add	_reportError(   "Numeric    value(%s)out    of    range    of    %s   ",    numDesc,    (expType    ==    NR_LONG)?       "long   "    :   "long   ");    _reportError( "Numeric  value(%s)out  of  range  of  %s   ",  numDesc,  (expType  ==  NR_LONG)?   "long   "  :   "long ");	  	compilable	  [FE]  JsonParseException  	7	8	add
10	[BUG]  [BUGGY]  _reportError(   "Numeric  value(%s)out  of  range  of  %s   ",  numDesc,  (expType  ==  NR_LONG)?     "long   "  :   "long   ");  _reportError( "Numeric  value(%s)out  of  range  of  %s   ",  numDesc,  (expType  ==  NR_LONG)?   "long   "  :   "long ");  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]    protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);    [BUGGY]  _reportError(   "Numeric  value(%s)out  of  range  of  %s   ",  numDesc,  (expType  ==  NR_LONG)?     "long   "  :   "long   ");  _reportError( "Numeric  value(%s)out  of  range  of  %s   ",  numDesc,  (expType  ==  NR_LONG)?   "long   "  :   "long ");  [BUGGY]    (expType  ==  NR_LONG)  ?     "long   "  :     "int   ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	replace	_reportError(   "Numeric    value(%s)out    of    range    of    %s   ",    numDesc,    (expType    ==    NR_LONG)?       "long   "    :   "long   ");    _reportError( "Numeric  value(%s)out  of  range  of  %s   ",  numDesc,  (expType  ==  NR_LONG)?   "long   "  :   "long ");	  	compilable	  [FE]  JsonParseException  	7	8	add
11	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]    protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);    [BUGGY]  _reportError(   "Numeric  value  (%s)out  of  range  of  %s   ",  numDesc,  expType  ==  NR_LONG?     "long   "  :   "long   ");  _reportError( "Numeric  value  (%s)out  of  range  of  %s   ",  numDesc,  expType  ==  NR_LONG?   "long   "  :   "long ");  [BUGGY]    (expType  ==  NR_LONG)  ?     "long   "  :     "int   ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	add	_reportError(   "Numeric    value    (%s)out    of    range    of    %s   ",    numDesc,    expType    ==    NR_LONG?       "long   "    :   "long   ");    _reportError( "Numeric  value  (%s)out  of  range  of  %s   ",  numDesc,  expType  ==  NR_LONG?   "long   "  :   "long ");	  	compilable	  [FE]  JsonParseException  	3	8	add
12	[BUG]  [BUGGY]  _reportError(   "Numeric  value  (%s)out  of  range  of  %s   ",  numDesc,  expType  ==  NR_LONG?     "long   "  :   "long   ");  _reportError( "Numeric  value  (%s)out  of  range  of  %s   ",  numDesc,  expType  ==  NR_LONG?   "long   "  :   "long ");  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]    protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);    [BUGGY]  _reportError(   "Numeric  value  (%s)out  of  range  of  %s   ",  numDesc,  expType  ==  NR_LONG?     "long   "  :   "long   ");  _reportError( "Numeric  value  (%s)out  of  range  of  %s   ",  numDesc,  expType  ==  NR_LONG?   "long   "  :   "long ");  [BUGGY]    (expType  ==  NR_LONG)  ?     "long   "  :     "int   ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	replace	_reportError(   "Numeric    value    (%s)out    of    range    of    %s   ",    numDesc,    expType    ==    NR_LONG?       "long   "    :   "long   ");    _reportError( "Numeric  value  (%s)out  of  range  of  %s   ",  numDesc,  expType  ==  NR_LONG?   "long   "  :   "long ");	  	compilable	  [FE]  JsonParseException  	3	8	add
13	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]    protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);    [BUGGY]  _reportError(   "Numeric  value  (%s)out  of  range  of  %s   ",  rawNum,(expType  ==  NR_LONG)?     "long   "  :   "int   ");  _reportError( "Numeric  value  (%s)out  of  range  of  %s   ",  rawNum,(expType  ==  NR_LONG)?   "long "  :   "int ");  [BUGGY]    (expType  ==  NR_LONG)  ?     "long   "  :     "int   ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	add	_reportError(   "Numeric    value    (%s)out    of    range    of    %s   ",    rawNum,(expType    ==    NR_LONG)?       "long   "    :   "int   ");    _reportError( "Numeric  value  (%s)out  of  range  of  %s   ",  rawNum,(expType  ==  NR_LONG)?   "long "  :   "int ");	  	compilable	  [FE]  JsonParseException  	1	8	add
14	[BUG]  [BUGGY]  _reportError(   "Numeric  value  (%s)out  of  range  of  %s   ",  rawNum,(expType  ==  NR_LONG)?     "long   "  :   "int   ");  _reportError( "Numeric  value  (%s)out  of  range  of  %s   ",  rawNum,(expType  ==  NR_LONG)?   "long "  :   "int ");  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]    protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);    [BUGGY]  _reportError(   "Numeric  value  (%s)out  of  range  of  %s   ",  rawNum,(expType  ==  NR_LONG)?     "long   "  :   "int   ");  _reportError( "Numeric  value  (%s)out  of  range  of  %s   ",  rawNum,(expType  ==  NR_LONG)?   "long "  :   "int ");  [BUGGY]    (expType  ==  NR_LONG)  ?     "long   "  :     "int   ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	replace	_reportError(   "Numeric    value    (%s)out    of    range    of    %s   ",    rawNum,(expType    ==    NR_LONG)?       "long   "    :   "int   ");    _reportError( "Numeric  value  (%s)out  of  range  of  %s   ",  rawNum,(expType  ==  NR_LONG)?   "long "  :   "int ");	  	compilable	  [FE]  JsonParseException  	1	8	add
15	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]    protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);    [BUGGY]  _reportError(   "Numeric  value  (%s)out  of  range  of  %s   ",  rawNum,(expType  ==  NR_LONG)?     "long   "  :   "int   ");  _reportError( "Numeric  value  (%s)out  of  range  of  %s   ",  rawNum,(expType  ==  NR_LONG)?   "long   "  :   "long ");  [BUGGY]    (expType  ==  NR_LONG)  ?     "long   "  :     "int   ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	add	_reportError(   "Numeric    value    (%s)out    of    range    of    %s   ",    rawNum,(expType    ==    NR_LONG)?       "long   "    :   "int   ");    _reportError( "Numeric  value  (%s)out  of  range  of  %s   ",  rawNum,(expType  ==  NR_LONG)?   "long   "  :   "long ");	  	compilable	  [FE]  JsonParseException  	1	8	add
16	[BUG]  [BUGGY]  _reportError(   "Numeric  value  (%s)out  of  range  of  %s   ",  rawNum,(expType  ==  NR_LONG)?     "long   "  :   "int   ");  _reportError( "Numeric  value  (%s)out  of  range  of  %s   ",  rawNum,(expType  ==  NR_LONG)?   "long   "  :   "long ");  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]    protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);    [BUGGY]  _reportError(   "Numeric  value  (%s)out  of  range  of  %s   ",  rawNum,(expType  ==  NR_LONG)?     "long   "  :   "int   ");  _reportError( "Numeric  value  (%s)out  of  range  of  %s   ",  rawNum,(expType  ==  NR_LONG)?   "long   "  :   "long ");  [BUGGY]    (expType  ==  NR_LONG)  ?     "long   "  :     "int   ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	replace	_reportError(   "Numeric    value    (%s)out    of    range    of    %s   ",    rawNum,(expType    ==    NR_LONG)?       "long   "    :   "int   ");    _reportError( "Numeric  value  (%s)out  of  range  of  %s   ",  rawNum,(expType  ==  NR_LONG)?   "long   "  :   "long ");	  	compilable	  [FE]  JsonParseException  	1	8	add
17	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]    protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);    [BUGGY]  _reportError( "Numeric  value  (%s)out  of  range  of  %s ",  rawNum,  expType  ==  NR_LONG?   "long "  : "long ");  [BUGGY]    (expType  ==  NR_LONG)  ?     "long   "  :     "int   ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	add	_reportError( "Numeric  value  (%s)out  of  range  of  %s ",  rawNum,  expType  ==  NR_LONG?   "long "  : "long ");	  _reportError(   "Numeric    value    (%s)out    of    range    of    %s   ",    numDesc,    expType    ==    NR_LONG?       "long   "    :   "long   ");    	compilable	  [FE]  JsonParseException  	4	8	replace
18	[BUG]  [BUGGY]  _reportError( "Numeric  value  (%s)out  of  range  of  %s ",  rawNum,  expType  ==  NR_LONG?   "long "  : "long ");  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]    protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);    [BUGGY]  _reportError( "Numeric  value  (%s)out  of  range  of  %s ",  rawNum,  expType  ==  NR_LONG?   "long "  : "long ");  [BUGGY]    (expType  ==  NR_LONG)  ?     "long   "  :     "int   ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	replace	_reportError( "Numeric  value  (%s)out  of  range  of  %s ",  rawNum,  expType  ==  NR_LONG?   "long "  : "long ");	  _reportError(   "Numeric    value    (%s)out    of    range    of    %s   ",    numDesc,    expType    ==    NR_LONG?       "long   "    :   "long   ");    	compilable	  [FE]  JsonParseException  	4	8	replace
19	[BUG]  [BUGGY]  _reportError( "Numeric  value(%s)out  of  range  of  %s "  +  numDesc,  expType  {  NR_LONG?   "long "  : "long ");  [CE]  [FE]      JsonParseException    [CONTEXT]    protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);    [BUGGY]  _reportError( "Numeric  value(%s)out  of  range  of  %s "  +  numDesc,  expType  {  NR_LONG?   "long "  : "long ");  [BUGGY]    (expType  ==  NR_LONG)  ?     "long   "  :     "int   ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	replace	_reportError( "Numeric  value(%s)out  of  range  of  %s "  +  numDesc,  expType  {  NR_LONG?   "long "  : "long ");	  _reportError(   "Numeric    value    (%s)out    of    range    of    %s   ",    numDesc,    expType    ==    NR_LONG?       "long   "    :   "long   ");    	non-compiled	[CE]  	4	None	replace
20	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]    protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);    [BUGGY]  _reportError( "Numeric  value  (%s)out  of  range  of  %s ",  rawNum,(expType  ==  NR_LONG)?   "long "  : "long ");  [BUGGY]    (expType  ==  NR_LONG)  ?     "long   "  :     "int   ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	add	_reportError( "Numeric  value  (%s)out  of  range  of  %s ",  rawNum,(expType  ==  NR_LONG)?   "long "  : "long ");	  _reportError(   "Numeric    value    (%s)out    of    range    of    %s   ",    rawNum,(expType    ==    NR_LONG)?       "long   "    :   "int   ");    	compilable	  [FE]  JsonParseException  	2	8	replace
21	[BUG]  [BUGGY]  _reportError( "Numeric  value  (%s)out  of  range  of  %s ",  rawNum,(expType  ==  NR_LONG)?   "long "  : "long ");  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]    protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);    [BUGGY]  _reportError( "Numeric  value  (%s)out  of  range  of  %s ",  rawNum,(expType  ==  NR_LONG)?   "long "  : "long ");  [BUGGY]    (expType  ==  NR_LONG)  ?     "long   "  :     "int   ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	replace	_reportError( "Numeric  value  (%s)out  of  range  of  %s ",  rawNum,(expType  ==  NR_LONG)?   "long "  : "long ");	  _reportError(   "Numeric    value    (%s)out    of    range    of    %s   ",    rawNum,(expType    ==    NR_LONG)?       "long   "    :   "int   ");    	compilable	  [FE]  JsonParseException  	2	8	replace
22	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]    protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);    [BUGGY]  _reportError( "Numeric  value(%s)out  of  range  of  %s "  +  numDesc,  (expType  ==  NR_LONG)?   "long "  : "long ");  [BUGGY]    (expType  ==  NR_LONG)  ?     "long   "  :     "int   ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	add	_reportError( "Numeric  value(%s)out  of  range  of  %s "  +  numDesc,  (expType  ==  NR_LONG)?   "long "  : "long ");	  _reportError(   "Numeric    value(%s)out    of    range    of    %s   ",    numDesc,    (expType    ==    NR_LONG)?       "long   "    :   "long   ");    	compilable	  [FE]  JsonParseException  	8	8	replace
23	[BUG]  [BUGGY]  _reportError( "Numeric  value(%s)out  of  range  of  %s "  +  numDesc,  (expType  ==  NR_LONG)?   "long "  : "long ");  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]    protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);    [BUGGY]  _reportError( "Numeric  value(%s)out  of  range  of  %s "  +  numDesc,  (expType  ==  NR_LONG)?   "long "  : "long ");  [BUGGY]    (expType  ==  NR_LONG)  ?     "long   "  :     "int   ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	replace	_reportError( "Numeric  value(%s)out  of  range  of  %s "  +  numDesc,  (expType  ==  NR_LONG)?   "long "  : "long ");	  _reportError(   "Numeric    value(%s)out    of    range    of    %s   ",    numDesc,    (expType    ==    NR_LONG)?       "long   "    :   "long   ");    	compilable	  [FE]  JsonParseException  	8	8	replace
24	[BUG]  [BUGGY]      _parsingContext  =  _parsingContext.getCurrentContext();  [CE]  cannot  find  symbol  [FE]    JsonParseException    [CONTEXT]    protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);    [BUGGY]      _parsingContext  =  _parsingContext.getCurrentContext();  [BUGGY]    (expType  ==  NR_LONG)  ?     "long   "  :     "int   ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	replace	        _parsingContext  =  _parsingContext.getCurrentContext();	  	non-compiled	[CE]  cannot  find  symbol	5	None	add
25	[BUG]  [BUGGY]      if(numDesc!=  null)  {  if(expType  ==  NR_LONG)  {  return;  }  [CE]  illegal  start  of  expression  [FE]    JsonParseException    [CONTEXT]    protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);    [BUGGY]      if(numDesc!=  null)  {  if(expType  ==  NR_LONG)  {  return;  }  [BUGGY]    (expType  ==  NR_LONG)  ?     "long   "  :     "int   ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	replace	        if(numDesc!=  null)  {  if(expType  ==  NR_LONG)  {  return;  }	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
26	[BUG]  [BUGGY]      if(numDesc!=  null)  {  if(expType  ==  NR_LONG)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]      JsonParseException    [CONTEXT]    protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);    [BUGGY]      if(numDesc!=  null)  {  if(expType  ==  NR_LONG)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    (expType  ==  NR_LONG)  ?     "long   "  :     "int   ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	replace	        if(numDesc!=  null)  {  if(expType  ==  NR_LONG)  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
27	[BUG]  [BUGGY]      if(numDesc!=  null)  {  if(expType  ==  NR_UNKNOWN)  {  return;  }  [CE]  illegal  start  of  expression  [FE]        JsonParseException    [CONTEXT]    protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);    [BUGGY]      if(numDesc!=  null)  {  if(expType  ==  NR_UNKNOWN)  {  return;  }  [BUGGY]    (expType  ==  NR_LONG)  ?     "long   "  :     "int   ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	replace	        if(numDesc!=  null)  {  if(expType  ==  NR_UNKNOWN)  {  return;  }	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
28	[BUG]  [BUGGY]      if(numDesc!=  null)  {  if(expType  ==  NR_LONG)  {  expType  =  NR_LONG;  }  [CE]  illegal  start  of  expression  [FE]          JsonParseException    [CONTEXT]    protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);    [BUGGY]      if(numDesc!=  null)  {  if(expType  ==  NR_LONG)  {  expType  =  NR_LONG;  }  [BUGGY]    (expType  ==  NR_LONG)  ?     "long   "  :     "int   ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	replace	        if(numDesc!=  null)  {  if(expType  ==  NR_LONG)  {  expType  =  NR_LONG;  }	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
29	[BUG]  [BUGGY]      if(numDesc!=  null)  {  if(expType.length()  ==  0)  {  return;  }  [CE]  illegal  start  of  expression  [FE]            JsonParseException    [CONTEXT]    protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);    [BUGGY]      if(numDesc!=  null)  {  if(expType.length()  ==  0)  {  return;  }  [BUGGY]    (expType  ==  NR_LONG)  ?     "long   "  :     "int   ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	replace	        if(numDesc!=  null)  {  if(expType.length()  ==  0)  {  return;  }	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
