bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException  [CONTEXT]  protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);  [BUGGY]  _reportError( "Numeric  value  (%s)out  of  range  of  %s ",  rawNum,(expType  ==  NR_LONG)?   "long "  : "int ");  [BUGGY]  (expType  ==  NR_LONG)  ?   "long "  :   "int ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	add	_reportError( "Numeric  value  (%s)out  of  range  of  %s ",  rawNum,(expType  ==  NR_LONG)?   "long "  : "int ");	_reportError( "Numeric  value  (%s)  out  of  range  of  %s ",  numDesc,  (expType  ==  NR_LONG)  ?   "long "  :   "int ");  	compilable	  [FE]  JsonParseException  	19	8	replace
2	[BUG]  [BUGGY]  _reportError( "Numeric  value  (%s)out  of  range  of  %s ",  rawNum,(expType  ==  NR_LONG)?   "long "  : "int ");  [FE]  JsonParseException  [FE]    JsonParseException  [CONTEXT]  protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);  [BUGGY]  _reportError( "Numeric  value  (%s)out  of  range  of  %s ",  rawNum,(expType  ==  NR_LONG)?   "long "  : "int ");  [BUGGY]  (expType  ==  NR_LONG)  ?   "long "  :   "int ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	replace	_reportError( "Numeric  value  (%s)out  of  range  of  %s ",  rawNum,(expType  ==  NR_LONG)?   "long "  : "int ");	_reportError( "Numeric  value  (%s)  out  of  range  of  %s ",  numDesc,  (expType  ==  NR_LONG)  ?   "long "  :   "int ");  	compilable	  [FE]  JsonParseException  	19	8	replace
3	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]      JsonParseException  [CONTEXT]  protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);  [BUGGY]  _reportError( "Numeric  value  (%s)out  of  range  of  %s ",  numDesc,  expType  ==  NR_LONG?   "long "  : "long ");  [BUGGY]  (expType  ==  NR_LONG)  ?   "long "  :   "int ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	add	_reportError( "Numeric  value  (%s)out  of  range  of  %s ",  numDesc,  expType  ==  NR_LONG?   "long "  : "long ");	_reportError( "Numeric  value  (%s)  out  of  range  of  %s ",  numDesc,  (expType  ==  NR_LONG)  ?   "long "  :   "int ");  	compilable	  [FE]  JsonParseException  	19	8	replace
4	[BUG]  [BUGGY]  _reportError( "Numeric  value  (%s)out  of  range  of  %s ",  numDesc,  expType  ==  NR_LONG?   "long "  : "long ");  [FE]  JsonParseException  [FE]      JsonParseException  [CONTEXT]  protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);  [BUGGY]  _reportError( "Numeric  value  (%s)out  of  range  of  %s ",  numDesc,  expType  ==  NR_LONG?   "long "  : "long ");  [BUGGY]  (expType  ==  NR_LONG)  ?   "long "  :   "int ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	replace	_reportError( "Numeric  value  (%s)out  of  range  of  %s ",  numDesc,  expType  ==  NR_LONG?   "long "  : "long ");	_reportError( "Numeric  value  (%s)  out  of  range  of  %s ",  numDesc,  (expType  ==  NR_LONG)  ?   "long "  :   "int ");  	compilable	  [FE]  JsonParseException  	19	8	replace
5	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]        JsonParseException  [CONTEXT]  protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);  [BUGGY]    [BUGGY]  (expType  ==  NR_LONG)  ?   "long "  :   "int ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	add	  	_reportError( "Numeric  value  (%s)  out  of  range  of  %s ",  numDesc,  (expType  ==  NR_LONG)  ?   "long "  :   "int ");  	compilable	  [FE]  JsonParseException  	19	8	replace
6	[BUG]  [BUGGY]    [FE]  JsonParseException  [FE]        JsonParseException  [CONTEXT]  protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);  [BUGGY]    [BUGGY]  (expType  ==  NR_LONG)  ?   "long "  :   "int ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	replace	  	_reportError( "Numeric  value  (%s)  out  of  range  of  %s ",  numDesc,  (expType  ==  NR_LONG)  ?   "long "  :   "int ");  	compilable	  [FE]  JsonParseException  	19	8	replace
7	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException  [CONTEXT]  protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);  [BUGGY]  _reportError( "Numeric  value(%s)out  of  range  of  %s ",  numDesc,  (expType  ==  NR_LONG)?   "long "  : "long ");  [BUGGY]  (expType  ==  NR_LONG)  ?   "long "  :   "int ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	add	_reportError( "Numeric  value(%s)out  of  range  of  %s ",  numDesc,  (expType  ==  NR_LONG)?   "long "  : "long ");	_reportError( "Numeric  value  (%s)  out  of  range  of  %s ",  numDesc,  (expType  ==  NR_LONG)  ?   "long "  :   "int ");  	compilable	  [FE]  JsonParseException  	19	8	replace
8	[BUG]  [BUGGY]  _reportError( "Numeric  value(%s)out  of  range  of  %s ",  numDesc,  (expType  ==  NR_LONG)?   "long "  : "long ");  [FE]  JsonParseException  [FE]    JsonParseException  [CONTEXT]  protected  void  _reportTooLongIntegral(int  expType,  String  rawNum)  throws  IOException  {  final  String  numDesc  =  _longIntegerDesc(rawNum);  [BUGGY]  _reportError( "Numeric  value(%s)out  of  range  of  %s ",  numDesc,  (expType  ==  NR_LONG)?   "long "  : "long ");  [BUGGY]  (expType  ==  NR_LONG)  ?   "long "  :   "int ");  }  [CLASS]  ParserBase  [METHOD]  _reportTooLongIntegral  [RETURN_TYPE]  void  int  expType  String  rawNum  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  String  numDesc  rawNum  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	870	871	8	replace	_reportError( "Numeric  value(%s)out  of  range  of  %s ",  numDesc,  (expType  ==  NR_LONG)?   "long "  : "long ");	_reportError( "Numeric  value  (%s)  out  of  range  of  %s ",  numDesc,  (expType  ==  NR_LONG)  ?   "long "  :   "int ");  	compilable	  [FE]  JsonParseException  	19	8	replace
