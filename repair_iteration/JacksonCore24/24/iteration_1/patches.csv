bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(_numTypesValid  <  =  NR_UNKNOWN)  {  [CE]  illegal  start  of  expression  [FE]    JsonParseException    [CONTEXT]    {    [BUGGY]  if(_numTypesValid  <  =  NR_UNKNOWN)  {  [BUGGY]    _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	583	583	8	replace	if(_numTypesValid  <  =  NR_UNKNOWN)  {	  if(_numTypesValid    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
2	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]    {    [BUGGY]  if(_numTypesValid!=  NR_UNKNOWN)  {  [BUGGY]    _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	583	583	8	add	if(_numTypesValid!=  NR_UNKNOWN)  {	  if(_numTypesValid    ==    0)    {    	compilable	  [FE]  JsonParseException  	2	8	replace
3	[BUG]  [BUGGY]  if(_numTypesValid!=  NR_UNKNOWN)  {  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]    {    [BUGGY]  if(_numTypesValid!=  NR_UNKNOWN)  {  [BUGGY]    _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	583	583	8	replace	if(_numTypesValid!=  NR_UNKNOWN)  {	  if(_numTypesValid    ==    0)    {    	compilable	  [FE]  JsonParseException  	2	8	replace
4	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]    {    [BUGGY]  if(_numTypesValid  ==  0  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]    _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	583	583	8	add	if(_numTypesValid  ==  0  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {	  if(_numTypesValid    ==    NR_UNKNOWN    ||    _currToken    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    	compilable	  [FE]  JsonParseException  	8	8	replace
5	[BUG]  [BUGGY]  if(_numTypesValid  ==  0  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]    {    [BUGGY]  if(_numTypesValid  ==  0  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]    _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	583	583	8	replace	if(_numTypesValid  ==  0  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {	  if(_numTypesValid    ==    NR_UNKNOWN    ||    _currToken    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    	compilable	  [FE]  JsonParseException  	8	8	replace
6	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]    {    [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  [BUGGY]    _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	583	583	8	add	if(_numTypesValid  ==  NR_UNKNOWN  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {	  if(_numTypesValid    ==    NR_UNKNOWN    ||    _currToken    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    	compilable	  [FE]  JsonParseException  	8	8	replace
7	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]    {    [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  [BUGGY]    _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	583	583	8	replace	if(_numTypesValid  ==  NR_UNKNOWN  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {	  if(_numTypesValid    ==    NR_UNKNOWN    ||    _currToken    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    	compilable	  [FE]  JsonParseException  	8	8	replace
8	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]        JsonParseException    [CONTEXT]    {    [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_FLOAT  ||  _numTypesValid  ==  NR_UNKNOWN)  {  [BUGGY]    _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	583	583	8	add	if(_currToken  ==  JsonToken.VALUE_NUMBER_FLOAT  ||  _numTypesValid  ==  NR_UNKNOWN)  {	  if(_numTypesValid    ==    NR_UNKNOWN    ||    _currToken    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    	compilable	  [FE]  JsonParseException  	8	8	replace
9	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_FLOAT  ||  _numTypesValid  ==  NR_UNKNOWN)  {  [FE]  JsonParseException  [FE]        JsonParseException    [CONTEXT]    {    [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_FLOAT  ||  _numTypesValid  ==  NR_UNKNOWN)  {  [BUGGY]    _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	583	583	8	replace	if(_currToken  ==  JsonToken.VALUE_NUMBER_FLOAT  ||  _numTypesValid  ==  NR_UNKNOWN)  {	  if(_numTypesValid    ==    NR_UNKNOWN    ||    _currToken    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    	compilable	  [FE]  JsonParseException  	8	8	replace
10	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  [CE]  ';'  expected  [FE]    JsonParseException    [CONTEXT]    {    [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  [BUGGY]    _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	583	583	8	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {	  	non-compiled	[CE]  ';'  expected	5	None	add
11	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [CE]  ';'  expected  [FE]      JsonParseException    [CONTEXT]    {    [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]    _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	583	583	8	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {	  	non-compiled	[CE]  ';'  expected	5	None	add
12	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [CE]  ';'  expected  [FE]        JsonParseException    [CONTEXT]    {    [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [BUGGY]    _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	583	583	8	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {	  	non-compiled	[CE]  ';'  expected	5	None	add
13	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_OBJECT)  {  [CE]  ';'  expected  [FE]          JsonParseException    [CONTEXT]    {    [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_OBJECT)  {  [BUGGY]    _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	583	583	8	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_OBJECT)  {	  	non-compiled	[CE]  ';'  expected	5	None	add
14	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  [CE]  ';'  expected  [FE]            JsonParseException    [CONTEXT]    {    [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  [BUGGY]    _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	583	583	8	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_OBJECT)  {	  	non-compiled	[CE]  ';'  expected	5	None	add
15	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  if(_numTypesValid  ==  NR_UNKNOWN  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [CE]  ';'  expected  [FE]    JsonParseException    [CONTEXT]    {    [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  if(_numTypesValid  ==  NR_UNKNOWN  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]    _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	583	583	8	replace	if(_numTypesValid    ==    NR_UNKNOWN    ||    _currToken    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    if(_numTypesValid  ==  NR_UNKNOWN  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {	  	non-compiled	[CE]  ';'  expected	7	None	add
16	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [CE]  ';'  expected  [FE]      JsonParseException    [CONTEXT]    {    [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]    _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	583	583	8	replace	if(_numTypesValid    ==    NR_UNKNOWN    ||    _currToken    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {	  	non-compiled	[CE]  ';'  expected	7	None	add
17	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [CE]  ';'  expected  [FE]        JsonParseException    [CONTEXT]    {    [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]    _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	583	583	8	replace	if(_numTypesValid    ==    NR_UNKNOWN    ||    _currToken    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    if(_currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {	  	non-compiled	[CE]  ';'  expected	7	None	add
18	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_FLOAT  ||  _numTypesValid  ==  NR_UNKNOWN)  {  [CE]  ';'  expected  [FE]          JsonParseException    [CONTEXT]    {    [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_FLOAT  ||  _numTypesValid  ==  NR_UNKNOWN)  {  [BUGGY]    _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	583	583	8	replace	if(_numTypesValid    ==    NR_UNKNOWN    ||    _currToken    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    if(_currToken  ==  JsonToken.VALUE_NUMBER_FLOAT  ||  _numTypesValid  ==  NR_UNKNOWN)  {	  	non-compiled	[CE]  ';'  expected	7	None	add
19	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  if(_numTypesValid  ==  NR_UNKNOWN  ||  _currToken!=  JsonToken.VALUE_NUMBER_FLOAT)  {  [CE]  ';'  expected  [FE]            JsonParseException    [CONTEXT]    {    [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  if(_numTypesValid  ==  NR_UNKNOWN  ||  _currToken!=  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]    _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	583	583	8	replace	if(_numTypesValid    ==    NR_UNKNOWN    ||    _currToken    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    if(_numTypesValid  ==  NR_UNKNOWN  ||  _currToken!=  JsonToken.VALUE_NUMBER_FLOAT)  {	  	non-compiled	[CE]  ';'  expected	7	None	add
20	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  return  _currToken;  }  [CE]  incompatible  types  [FE]            JsonParseException    [CONTEXT]    {    [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  return  _currToken;  }  [BUGGY]    _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	583	583	8	replace	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  return  _currToken;  }	      	non-compiled	[CE]  incompatible  types	4	None	replace
21	[BUG]  [BUGGY]  _parseNumericValue(NR_UNKNOWN);  [CE]  illegal  start  of  type  [FE]              JsonParseException    [CONTEXT]    {    [BUGGY]  _parseNumericValue(NR_UNKNOWN);  [BUGGY]    _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	583	583	8	replace	_parseNumericValue(NR_UNKNOWN);	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
22	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  return  _currToken;  }  [CE]  incompatible  types  [FE]                JsonParseException    [CONTEXT]    {    [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  return  _currToken;  }  [BUGGY]    _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	583	583	8	replace	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  return  _currToken;  }	      	non-compiled	[CE]  incompatible  types	4	None	replace
23	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  return  _  [CE]  ';'  expected  [FE]                  JsonParseException    [CONTEXT]    {    [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  return  _  [BUGGY]    _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	583	583	8	replace	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  return  _	      	non-compiled	[CE]  ';'  expected	4	None	replace
24	[BUG]  [BUGGY]  if(_numTypesValid  ==  0)  {  if(_numTypesValid  ==  0)  {  [CE]  ';'  expected  [FE]    JsonParseException    [CONTEXT]    {    [BUGGY]  if(_numTypesValid  ==  0)  {  if(_numTypesValid  ==  0)  {  [BUGGY]    _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	583	583	8	replace	if(_numTypesValid    ==    0)    {    if(_numTypesValid  ==  0)  {	  	non-compiled	[CE]  ';'  expected	1	None	add
25	[BUG]  [BUGGY]  if(_numTypesValid  ==  0)  {  if(_numTypesValid  ==  NR_UNKNOWN)  {  [CE]  ';'  expected  [FE]      JsonParseException    [CONTEXT]    {    [BUGGY]  if(_numTypesValid  ==  0)  {  if(_numTypesValid  ==  NR_UNKNOWN)  {  [BUGGY]    _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	583	583	8	replace	if(_numTypesValid    ==    0)    {    if(_numTypesValid  ==  NR_UNKNOWN)  {	  	non-compiled	[CE]  ';'  expected	1	None	add
26	[BUG]  [BUGGY]  if(_numTypesValid  ==  0)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  [CE]  ';'  expected  [FE]        JsonParseException    [CONTEXT]    {    [BUGGY]  if(_numTypesValid  ==  0)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  [BUGGY]    _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	583	583	8	replace	if(_numTypesValid    ==    0)    {    if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {	  	non-compiled	[CE]  ';'  expected	1	None	add
27	[BUG]  [BUGGY]  if(_numTypesValid  ==  0)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [CE]  ';'  expected  [FE]          JsonParseException    [CONTEXT]    {    [BUGGY]  if(_numTypesValid  ==  0)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]    _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	583	583	8	replace	if(_numTypesValid    ==    0)    {    if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {	  	non-compiled	[CE]  ';'  expected	1	None	add
28	[BUG]  [BUGGY]  if(_numTypesValid  ==  0)  {  if(_numTypesValid  ==  NR_UNKNOWN  ||  _numTypesValid  ==  NR_UNKNOWN)  {  [CE]  ';'  expected  [FE]            JsonParseException    [CONTEXT]    {    [BUGGY]  if(_numTypesValid  ==  0)  {  if(_numTypesValid  ==  NR_UNKNOWN  ||  _numTypesValid  ==  NR_UNKNOWN)  {  [BUGGY]    _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	583	583	8	replace	if(_numTypesValid    ==    0)    {    if(_numTypesValid  ==  NR_UNKNOWN  ||  _numTypesValid  ==  NR_UNKNOWN)  {	  	non-compiled	[CE]  ';'  expected	1	None	add
29	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]    {    [BUGGY]  if(_numTypesValid  ==  0  ||  _numTypesValid  ==  0)  {  [BUGGY]    _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	583	583	8	add	if(_numTypesValid  ==  0  ||  _numTypesValid  ==  0)  {	  if(_numTypesValid    ==    NR_UNKNOWN    ||    _numTypesValid    ==    NR_UNKNOWN)    {    	compilable	  [FE]  JsonParseException  	10	8	replace
30	[BUG]  [BUGGY]  if(_numTypesValid  ==  0  ||  _numTypesValid  ==  0)  {  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]    {    [BUGGY]  if(_numTypesValid  ==  0  ||  _numTypesValid  ==  0)  {  [BUGGY]    _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	583	583	8	replace	if(_numTypesValid  ==  0  ||  _numTypesValid  ==  0)  {	  if(_numTypesValid    ==    NR_UNKNOWN    ||    _numTypesValid    ==    NR_UNKNOWN)    {    	compilable	  [FE]  JsonParseException  	10	8	replace
31	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_NUMBER_INT  ||  _numTypesValid  ==  NR_UNKNOWN)  {  [CE]  cannot  find  symbol  NR_NUMBER_INT  [FE]      JsonParseException    [CONTEXT]    {    [BUGGY]  if(_numTypesValid  ==  NR_NUMBER_INT  ||  _numTypesValid  ==  NR_UNKNOWN)  {  [BUGGY]    _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	583	583	8	replace	if(_numTypesValid  ==  NR_NUMBER_INT  ||  _numTypesValid  ==  NR_UNKNOWN)  {	  if(_numTypesValid    ==    NR_UNKNOWN    ||    _numTypesValid    ==    NR_UNKNOWN)    {    	non-compiled	[CE]  cannot  find  symbol  NR_NUMBER_INT	10	None	replace
32	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_NUMBER_INT  ||  _numTypesValid  ==  NR_NUMBER_FLOAT)  {  [CE]  cannot  find  symbol  NR_NUMBER_INT  [FE]        JsonParseException    [CONTEXT]    {    [BUGGY]  if(_numTypesValid  ==  NR_NUMBER_INT  ||  _numTypesValid  ==  NR_NUMBER_FLOAT)  {  [BUGGY]    _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	583	583	8	replace	if(_numTypesValid  ==  NR_NUMBER_INT  ||  _numTypesValid  ==  NR_NUMBER_FLOAT)  {	  if(_numTypesValid    ==    NR_UNKNOWN    ||    _numTypesValid    ==    NR_UNKNOWN)    {    	non-compiled	[CE]  cannot  find  symbol  NR_NUMBER_INT	10	None	replace
33	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN  ||  _numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  NR_UNKNOWN  ||  _numTypesValid  ==  NR_UNKNOWN)  {  [CE]  ';'  expected  [FE]    JsonParseException    [CONTEXT]    {    [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN  ||  _numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  NR_UNKNOWN  ||  _numTypesValid  ==  NR_UNKNOWN)  {  [BUGGY]    _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	583	583	8	replace	if(_numTypesValid    ==    NR_UNKNOWN    ||    _numTypesValid    ==    NR_UNKNOWN)    {    if(_numTypesValid  ==  NR_UNKNOWN  ||  _numTypesValid  ==  NR_UNKNOWN)  {	  	non-compiled	[CE]  ';'  expected	9	None	add
34	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN  ||  _numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  NR_NUMBER_INT  ||  _numTypesValid  ==  NR_NUMBER_NAME)  {  [CE]  ';'  expected  [FE]      JsonParseException    [CONTEXT]    {    [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN  ||  _numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  NR_NUMBER_INT  ||  _numTypesValid  ==  NR_NUMBER_NAME)  {  [BUGGY]    _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	583	583	8	replace	if(_numTypesValid    ==    NR_UNKNOWN    ||    _numTypesValid    ==    NR_UNKNOWN)    {    if(_numTypesValid  ==  NR_NUMBER_INT  ||  _numTypesValid  ==  NR_NUMBER_NAME)  {	  	non-compiled	[CE]  ';'  expected	9	None	add
35	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN  ||  _numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  NR_NUMBER_INT  ||  _numTypesValid  ==  NR_NUMBER_FLOAT)  {  [CE]  ';'  expected  [FE]        JsonParseException    [CONTEXT]    {    [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN  ||  _numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  NR_NUMBER_INT  ||  _numTypesValid  ==  NR_NUMBER_FLOAT)  {  [BUGGY]    _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	583	583	8	replace	if(_numTypesValid    ==    NR_UNKNOWN    ||    _numTypesValid    ==    NR_UNKNOWN)    {    if(_numTypesValid  ==  NR_NUMBER_INT  ||  _numTypesValid  ==  NR_NUMBER_FLOAT)  {	  	non-compiled	[CE]  ';'  expected	9	None	add
36	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN  ||  _numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  NR_UNKNOWN  ||  _numTypesValid!=  NR_UNKNOWN)  {  [CE]  ';'  expected  [FE]          JsonParseException    [CONTEXT]    {    [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN  ||  _numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  NR_UNKNOWN  ||  _numTypesValid!=  NR_UNKNOWN)  {  [BUGGY]    _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	583	583	8	replace	if(_numTypesValid    ==    NR_UNKNOWN    ||    _numTypesValid    ==    NR_UNKNOWN)    {    if(_numTypesValid  ==  NR_UNKNOWN  ||  _numTypesValid!=  NR_UNKNOWN)  {	  	non-compiled	[CE]  ';'  expected	9	None	add
37	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN  ||  _numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  NR_NULL  ||  _numTypesValid  ==  NR_NULL)  {  [CE]  ';'  expected  [FE]            JsonParseException    [CONTEXT]    {    [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN  ||  _numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  NR_NULL  ||  _numTypesValid  ==  NR_NULL)  {  [BUGGY]    _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	583	583	8	replace	if(_numTypesValid    ==    NR_UNKNOWN    ||    _numTypesValid    ==    NR_UNKNOWN)    {    if(_numTypesValid  ==  NR_NULL  ||  _numTypesValid  ==  NR_NULL)  {	  	non-compiled	[CE]  ';'  expected	9	None	add
38	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]    {    [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]    _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	583	583	8	add	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    	compilable	  [FE]  JsonParseException  	6	8	replace
39	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]    {    [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]    _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	583	583	8	replace	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    	compilable	  [FE]  JsonParseException  	6	8	replace
40	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]    {    [BUGGY]  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]    _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	583	583	8	add	if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    	compilable	  [FE]  JsonParseException  	6	8	replace
41	[BUG]  [BUGGY]  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]    {    [BUGGY]  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]    _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	583	583	8	replace	if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    	compilable	  [FE]  JsonParseException  	6	8	replace
42	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]        JsonParseException    [CONTEXT]    {    [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_OBJECT)  {  [BUGGY]    _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	583	583	8	add	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_OBJECT)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    	compilable	  [FE]  JsonParseException  	6	8	replace
43	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_OBJECT)  {  [FE]  JsonParseException  [FE]        JsonParseException    [CONTEXT]    {    [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_OBJECT)  {  [BUGGY]    _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	583	583	8	replace	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_OBJECT)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    	compilable	  [FE]  JsonParseException  	6	8	replace
44	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]          JsonParseException    [CONTEXT]    {    [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [BUGGY]    _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	583	583	8	add	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    	compilable	  [FE]  JsonParseException  	6	8	replace
45	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [FE]  JsonParseException  [FE]          JsonParseException    [CONTEXT]    {    [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [BUGGY]    _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	583	583	8	replace	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    	compilable	  [FE]  JsonParseException  	6	8	replace
46	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  if(_numTypesValid  ==  NR_NUMBER_FLOAT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [CE]  ';'  expected  [FE]    JsonParseException    [CONTEXT]    {    [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  if(_numTypesValid  ==  NR_NUMBER_FLOAT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]    _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	583	583	8	replace	if(_numTypesValid    ==    NR_UNKNOWN    ||    _currToken    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    if(_numTypesValid  ==  NR_NUMBER_FLOAT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {	  	non-compiled	[CE]  ';'  expected	7	None	add
47	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_FLOAT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [CE]  ';'  expected  [FE]      JsonParseException    [CONTEXT]    {    [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_FLOAT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]    _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	583	583	8	replace	if(_numTypesValid    ==    NR_UNKNOWN    ||    _currToken    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    if(_currToken  ==  JsonToken.VALUE_NUMBER_FLOAT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {	  	non-compiled	[CE]  ';'  expected	7	None	add
48	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  return  _currInt;  }  [CE]  cannot  find  symbol  _currInt  [FE]            JsonParseException    [CONTEXT]    {    [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  return  _currInt;  }  [BUGGY]    _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	583	583	8	replace	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  return  _currInt;  }	      	non-compiled	[CE]  cannot  find  symbol  _currInt	4	None	replace
49	[BUG]  [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(-1,  -1);  [CE]  illegal  start  of  type  [FE]              JsonParseException    [CONTEXT]    {    [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(-1,  -1);  [BUGGY]    _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	583	583	8	replace	_parsingContext  =  _parsingContext.createChildObjectContext(-1,  -1);	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
50	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                JsonParseException    [CONTEXT]    {    [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  return  _numberInt;  }  [BUGGY]    _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	583	583	8	add	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  return  _numberInt;  }	      	compilable	  [FE]  AssertionFailedError  	4	8	replace
51	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  return  _numberInt;  }  [FE]  AssertionFailedError  [FE]                JsonParseException    [CONTEXT]    {    [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  return  _numberInt;  }  [BUGGY]    _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	583	583	8	replace	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  return  _numberInt;  }	      	compilable	  [FE]  AssertionFailedError  	4	8	replace
52	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN  ||  _numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  NR_NUMBER_INT  ||  _numTypesValid  ==  NR_NUMBER_NUMBER_INT)  {  [CE]  ';'  expected  [FE]    JsonParseException    [CONTEXT]    {    [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN  ||  _numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  NR_NUMBER_INT  ||  _numTypesValid  ==  NR_NUMBER_NUMBER_INT)  {  [BUGGY]    _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	583	583	8	replace	if(_numTypesValid    ==    NR_UNKNOWN    ||    _numTypesValid    ==    NR_UNKNOWN)    {    if(_numTypesValid  ==  NR_NUMBER_INT  ||  _numTypesValid  ==  NR_NUMBER_NUMBER_INT)  {	  	non-compiled	[CE]  ';'  expected	9	None	add
53	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN  ||  _numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  NR_NUMBER_INT  ||  _numTypesValid  ==  NR_NUMBER_N)  {  [CE]  ';'  expected  [FE]      JsonParseException    [CONTEXT]    {    [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN  ||  _numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  NR_NUMBER_INT  ||  _numTypesValid  ==  NR_NUMBER_N)  {  [BUGGY]    _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	583	583	8	replace	if(_numTypesValid    ==    NR_UNKNOWN    ||    _numTypesValid    ==    NR_UNKNOWN)    {    if(_numTypesValid  ==  NR_NUMBER_INT  ||  _numTypesValid  ==  NR_NUMBER_N)  {	  	non-compiled	[CE]  ';'  expected	9	None	add
54	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN  ||  _numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  NR_NUMBER_INT  ||  _numTypesValid  ==  NR_NUMBER_NUMBER)  {  [CE]  ';'  expected  [FE]        JsonParseException    [CONTEXT]    {    [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN  ||  _numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  NR_NUMBER_INT  ||  _numTypesValid  ==  NR_NUMBER_NUMBER)  {  [BUGGY]    _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	583	583	8	replace	if(_numTypesValid    ==    NR_UNKNOWN    ||    _numTypesValid    ==    NR_UNKNOWN)    {    if(_numTypesValid  ==  NR_NUMBER_INT  ||  _numTypesValid  ==  NR_NUMBER_NUMBER)  {	  	non-compiled	[CE]  ';'  expected	9	None	add
55	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN  ||  _numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  NR_NUMBER_INT  ||  _numTypesValid  ==  NR_NUMBER_NIT)  {  [CE]  ';'  expected  [FE]          JsonParseException    [CONTEXT]    {    [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN  ||  _numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  NR_NUMBER_INT  ||  _numTypesValid  ==  NR_NUMBER_NIT)  {  [BUGGY]    _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	583	583	8	replace	if(_numTypesValid    ==    NR_UNKNOWN    ||    _numTypesValid    ==    NR_UNKNOWN)    {    if(_numTypesValid  ==  NR_NUMBER_INT  ||  _numTypesValid  ==  NR_NUMBER_NIT)  {	  	non-compiled	[CE]  ';'  expected	9	None	add
56	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]    {    [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]    _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	583	583	8	add	if(_currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {	  if(_numTypesValid    ==    NR_UNKNOWN    ||    _currToken    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    	compilable	  [FE]  JsonParseException  	8	8	replace
57	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]    {    [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]    _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	583	583	8	replace	if(_currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {	  if(_numTypesValid    ==    NR_UNKNOWN    ||    _currToken    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    	compilable	  [FE]  JsonParseException  	8	8	replace
58	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]    {    [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _numTypesValid  ==  NR_UNKNOWN)  {  [BUGGY]    _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	583	583	8	add	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _numTypesValid  ==  NR_UNKNOWN)  {	  if(_numTypesValid    ==    NR_UNKNOWN    ||    _currToken    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    	compilable	  [FE]  JsonParseException  	8	8	replace
59	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _numTypesValid  ==  NR_UNKNOWN)  {  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]    {    [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _numTypesValid  ==  NR_UNKNOWN)  {  [BUGGY]    _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	583	583	8	replace	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _numTypesValid  ==  NR_UNKNOWN)  {	  if(_numTypesValid    ==    NR_UNKNOWN    ||    _currToken    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    	compilable	  [FE]  JsonParseException  	8	8	replace
60	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]    {    [BUGGY]  if(_numTypesValid  >=  NR_UNKNOWN)  {  [BUGGY]    _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	583	583	8	add	if(_numTypesValid  >=  NR_UNKNOWN)  {	  if(_numTypesValid    ==    0)    {    	compilable	  [FE]  JsonParseException  	2	8	replace
61	[BUG]  [BUGGY]  if(_numTypesValid  >=  NR_UNKNOWN)  {  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]    {    [BUGGY]  if(_numTypesValid  >=  NR_UNKNOWN)  {  [BUGGY]    _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	583	583	8	replace	if(_numTypesValid  >=  NR_UNKNOWN)  {	  if(_numTypesValid    ==    0)    {    	compilable	  [FE]  JsonParseException  	2	8	replace
62	[BUG]  [BUGGY]  if(_numTypesValid  ==  JsonToken.VALUE_NUMBER_INT)  {  [CE]  incomparable  types:  int  and  JsonToken  [FE]          JsonParseException    [CONTEXT]    {    [BUGGY]  if(_numTypesValid  ==  JsonToken.VALUE_NUMBER_INT)  {  [BUGGY]    _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	583	583	8	replace	if(_numTypesValid  ==  JsonToken.VALUE_NUMBER_INT)  {	  if(_numTypesValid    ==    NR_NUMBER_INT)    {    	non-compiled	[CE]  incomparable  types:  int  and  JsonToken	3	None	replace
63	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_NUMBER_INT  ||  _numTypesValid  ==  NR_NUMBER_N)  {  [CE]  cannot  find  symbol  NR_NUMBER_INT  [FE]    JsonParseException    [CONTEXT]    {    [BUGGY]  if(_numTypesValid  ==  NR_NUMBER_INT  ||  _numTypesValid  ==  NR_NUMBER_N)  {  [BUGGY]    _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	583	583	8	replace	if(_numTypesValid  ==  NR_NUMBER_INT  ||  _numTypesValid  ==  NR_NUMBER_N)  {	  if(_numTypesValid    ==    NR_UNKNOWN    ||    _numTypesValid    ==    NR_UNKNOWN)    {    	non-compiled	[CE]  cannot  find  symbol  NR_NUMBER_INT	10	None	replace
64	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_ARRAY)  {  [CE]  ';'  expected  [FE]    JsonParseException    [CONTEXT]    {    [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_ARRAY)  {  [BUGGY]    _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	583	583	8	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_ARRAY)  {	  	non-compiled	[CE]  ';'  expected	5	None	add
65	[BUG]  [BUGGY]  if(_numTypesValid  ==  0)  {  if(_numTypesValid  ==  -1)  {  [CE]  ';'  expected  [FE]    JsonParseException    [CONTEXT]    {    [BUGGY]  if(_numTypesValid  ==  0)  {  if(_numTypesValid  ==  -1)  {  [BUGGY]    _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	583	583	8	replace	if(_numTypesValid    ==    0)    {    if(_numTypesValid  ==  -1)  {	  	non-compiled	[CE]  ';'  expected	1	None	add
66	[BUG]  [BUGGY]  if(_numTypesValid  ==  0)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [CE]  ';'  expected  [FE]      JsonParseException    [CONTEXT]    {    [BUGGY]  if(_numTypesValid  ==  0)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]    _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	583	583	8	replace	if(_numTypesValid    ==    0)    {    if(_currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {	  	non-compiled	[CE]  ';'  expected	1	None	add
67	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]    {    [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_ARRAY)  {  [BUGGY]    _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	583	583	8	add	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_ARRAY)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    	compilable	  [FE]  JsonParseException  	6	8	replace
68	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_ARRAY)  {  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]    {    [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_ARRAY)  {  [BUGGY]    _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	583	583	8	replace	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_ARRAY)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    	compilable	  [FE]  JsonParseException  	6	8	replace
69	[BUG]  [BUGGY]  if(_numTypesValid  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [CE]  incomparable  types:  int  and  JsonToken  [FE]          JsonParseException    [CONTEXT]    {    [BUGGY]  if(_numTypesValid  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]    _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	583	583	8	replace	if(_numTypesValid  ==  JsonToken.VALUE_NUMBER_FLOAT)  {	  if(_numTypesValid    ==    NR_NUMBER_INT)    {    	non-compiled	[CE]  incomparable  types:  int  and  JsonToken	3	None	replace
70	[BUG]  [BUGGY]  if(_numTypesValid  ==  NUMBER_NUMBER_INT)  {  [CE]  cannot  find  symbol  NUMBER_NUMBER_INT  [FE]            JsonParseException    [CONTEXT]    {    [BUGGY]  if(_numTypesValid  ==  NUMBER_NUMBER_INT)  {  [BUGGY]    _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	583	583	8	replace	if(_numTypesValid  ==  NUMBER_NUMBER_INT)  {	  if(_numTypesValid    ==    NR_NUMBER_INT)    {    	non-compiled	[CE]  cannot  find  symbol  NUMBER_NUMBER_INT	3	None	replace
71	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]            JsonParseException    [CONTEXT]    {    [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  return  _numberInt;  }  [BUGGY]    _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	583	583	8	add	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  return  _numberInt;  }	      	compilable	  [FE]  JsonParseException  	4	8	replace
72	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  return  _numberInt;  }  [FE]  JsonParseException  [FE]            JsonParseException    [CONTEXT]    {    [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  return  _numberInt;  }  [BUGGY]    _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	583	583	8	replace	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  return  _numberInt;  }	      	compilable	  [FE]  JsonParseException  	4	8	replace
73	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]              JsonParseException    [CONTEXT]    {    [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_numTypesValid  ==  NR_UNKNOWN)  {  return  _numberInt;  }  [BUGGY]    _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	583	583	8	add	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_numTypesValid  ==  NR_UNKNOWN)  {  return  _numberInt;  }	      	compilable	  [FE]  JsonParseException  	4	8	replace
74	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_numTypesValid  ==  NR_UNKNOWN)  {  return  _numberInt;  }  [FE]  JsonParseException  [FE]              JsonParseException    [CONTEXT]    {    [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_numTypesValid  ==  NR_UNKNOWN)  {  return  _numberInt;  }  [BUGGY]    _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	583	583	8	replace	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_numTypesValid  ==  NR_UNKNOWN)  {  return  _numberInt;  }	      	compilable	  [FE]  JsonParseException  	4	8	replace
75	[BUG]  [BUGGY]  if(_numTypesValid  ==  0)  {  if(_numTypesValid  ==  1)  {  [CE]  ';'  expected  [FE]    JsonParseException    [CONTEXT]    {    [BUGGY]  if(_numTypesValid  ==  0)  {  if(_numTypesValid  ==  1)  {  [BUGGY]    _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	583	583	8	replace	if(_numTypesValid    ==    0)    {    if(_numTypesValid  ==  1)  {	  	non-compiled	[CE]  ';'  expected	1	None	add
76	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN  ||  _numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  NR_NUMBER_INT  ||  _numTypesValid  ==  NR_NUMBER_INT)  {  [CE]  ';'  expected  [FE]    JsonParseException    [CONTEXT]    {    [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN  ||  _numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  NR_NUMBER_INT  ||  _numTypesValid  ==  NR_NUMBER_INT)  {  [BUGGY]    _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	583	583	8	replace	if(_numTypesValid    ==    NR_UNKNOWN    ||    _numTypesValid    ==    NR_UNKNOWN)    {    if(_numTypesValid  ==  NR_NUMBER_INT  ||  _numTypesValid  ==  NR_NUMBER_INT)  {	  	non-compiled	[CE]  ';'  expected	9	None	add
77	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN  ||  _numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  NR_UNKNOWN  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [CE]  ';'  expected  [FE]      JsonParseException    [CONTEXT]    {    [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN  ||  _numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  NR_UNKNOWN  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]    _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	583	583	8	replace	if(_numTypesValid    ==    NR_UNKNOWN    ||    _numTypesValid    ==    NR_UNKNOWN)    {    if(_numTypesValid  ==  NR_UNKNOWN  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {	  	non-compiled	[CE]  ';'  expected	9	None	add
78	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN  ||  _numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  NR_NUMBER_INT  ||  _numTypesValid  ==  NR_UNKNOWN)  {  [CE]  ';'  expected  [FE]        JsonParseException    [CONTEXT]    {    [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN  ||  _numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  NR_NUMBER_INT  ||  _numTypesValid  ==  NR_UNKNOWN)  {  [BUGGY]    _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	583	583	8	replace	if(_numTypesValid    ==    NR_UNKNOWN    ||    _numTypesValid    ==    NR_UNKNOWN)    {    if(_numTypesValid  ==  NR_NUMBER_INT  ||  _numTypesValid  ==  NR_UNKNOWN)  {	  	non-compiled	[CE]  ';'  expected	9	None	add
79	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN  ||  _numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  NR_UNKNOWN  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  [CE]  ';'  expected  [FE]          JsonParseException    [CONTEXT]    {    [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN  ||  _numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  NR_UNKNOWN  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  [BUGGY]    _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	583	583	8	replace	if(_numTypesValid    ==    NR_UNKNOWN    ||    _numTypesValid    ==    NR_UNKNOWN)    {    if(_numTypesValid  ==  NR_UNKNOWN  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {	  	non-compiled	[CE]  ';'  expected	9	None	add
80	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]    {    [BUGGY]  if(_nextToken  ==  JsonToken.VALUE_NUMBER_INT)  {  [BUGGY]    _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	583	583	8	add	if(_nextToken  ==  JsonToken.VALUE_NUMBER_INT)  {	  if(_numTypesValid    ==    0)    {    	compilable	  [FE]  JsonParseException  	2	8	replace
81	[BUG]  [BUGGY]  if(_nextToken  ==  JsonToken.VALUE_NUMBER_INT)  {  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]    {    [BUGGY]  if(_nextToken  ==  JsonToken.VALUE_NUMBER_INT)  {  [BUGGY]    _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	583	583	8	replace	if(_nextToken  ==  JsonToken.VALUE_NUMBER_INT)  {	  if(_numTypesValid    ==    0)    {    	compilable	  [FE]  JsonParseException  	2	8	replace
82	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_ARRAY)  {  [CE]  ';'  expected  [FE]    JsonParseException    [CONTEXT]    {    [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_ARRAY)  {  [BUGGY]    _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }  if  ((_numTypesValid  &  NR_LONG)  !=  0)  {  return  _numberLong;  }  [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	583	583	8	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_ARRAY)  {	  	non-compiled	[CE]  ';'  expected	5	None	add
