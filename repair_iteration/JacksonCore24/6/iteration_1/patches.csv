bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  rawNum.toLowerCase();  return  rawNum.toLowerCase();  [CE]  unreachable  statement  [FE]    JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {    [BUGGY]  return  rawNum.toLowerCase();  return  rawNum.toLowerCase();  [BUGGY]    }  if  (rawNum.startsWith(   "-   "))  {  rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return    rawNum.toLowerCase();    return  rawNum.toLowerCase();	  	non-compiled	[CE]  unreachable  statement	4	None	add
2	[BUG]  [BUGGY]  return  rawNum.toLowerCase();  if(rawNum.startsWith( "- "))  {  return  rawNum.toLowerCase();  }  [CE]  unreachable  statement  [FE]      JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {    [BUGGY]  return  rawNum.toLowerCase();  if(rawNum.startsWith( "- "))  {  return  rawNum.toLowerCase();  }  [BUGGY]    }  if  (rawNum.startsWith(   "-   "))  {  rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return    rawNum.toLowerCase();    if(rawNum.startsWith( "- "))  {  return  rawNum.toLowerCase();  }	  	non-compiled	[CE]  unreachable  statement	4	None	add
3	[BUG]  [BUGGY]  return  rawNum.toLowerCase();  if(rawNum.startsWith( "- "))  {  return  rawNum.toLowerCase();  }  else  {  return  rawNum.toLowerCase();  }  [CE]  unreachable  statement  [FE]        JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {    [BUGGY]  return  rawNum.toLowerCase();  if(rawNum.startsWith( "- "))  {  return  rawNum.toLowerCase();  }  else  {  return  rawNum.toLowerCase();  }  [BUGGY]    }  if  (rawNum.startsWith(   "-   "))  {  rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return    rawNum.toLowerCase();    if(rawNum.startsWith( "- "))  {  return  rawNum.toLowerCase();  }  else  {  return  rawNum.toLowerCase();  }	  	non-compiled	[CE]  unreachable  statement	4	None	add
4	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {    [BUGGY]  return  rawNum.substring(0,  rawLen  +  1);  [BUGGY]    }  if  (rawNum.startsWith(   "-   "))  {  rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	add	return  rawNum.substring(0,  rawLen  +  1);	  return    rawNum.substring(0,    rawLen);    	compilable	  [FE]  StringIndexOutOfBoundsException  	2	8	replace
5	[BUG]  [BUGGY]  return  rawNum.substring(0,  rawLen  +  1);  [FE]  StringIndexOutOfBoundsException  [FE]    JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {    [BUGGY]  return  rawNum.substring(0,  rawLen  +  1);  [BUGGY]    }  if  (rawNum.startsWith(   "-   "))  {  rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return  rawNum.substring(0,  rawLen  +  1);	  return    rawNum.substring(0,    rawLen);    	compilable	  [FE]  StringIndexOutOfBoundsException  	2	8	replace
6	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {    [BUGGY]  return  rawNum.substring(0,  rawLen  -  1);  [BUGGY]    }  if  (rawNum.startsWith(   "-   "))  {  rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	add	return  rawNum.substring(0,  rawLen  -  1);	  return    rawNum.substring(0,    rawLen);    	compilable	  [FE]  JsonParseException  	2	8	replace
7	[BUG]  [BUGGY]  return  rawNum.substring(0,  rawLen  -  1);  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {    [BUGGY]  return  rawNum.substring(0,  rawLen  -  1);  [BUGGY]    }  if  (rawNum.startsWith(   "-   "))  {  rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return  rawNum.substring(0,  rawLen  -  1);	  return    rawNum.substring(0,    rawLen);    	compilable	  [FE]  JsonParseException  	2	8	replace
8	[BUG]  [BUGGY]  String  rawNum  =  rawNum.substring(0,  rawLen);  [CE]  variable  rawNum  is  already  defined  in  method  _longIntegerDesc(String)  [FE]        JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {    [BUGGY]  String  rawNum  =  rawNum.substring(0,  rawLen);  [BUGGY]    }  if  (rawNum.startsWith(   "-   "))  {  rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	String  rawNum  =  rawNum.substring(0,  rawLen);	  return    rawNum.substring(0,    rawLen);    	non-compiled	[CE]  variable  rawNum  is  already  defined  in  method  _longIntegerDesc(String)	2	None	replace
9	[BUG]  [BUGGY]  return  rawNum.substring(0,  rawLen);  return  rawNum.substring(0,  rawLen);  [CE]  unreachable  statement  [FE]    JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {    [BUGGY]  return  rawNum.substring(0,  rawLen);  return  rawNum.substring(0,  rawLen);  [BUGGY]    }  if  (rawNum.startsWith(   "-   "))  {  rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return    rawNum.substring(0,    rawLen);    return  rawNum.substring(0,  rawLen);	  	non-compiled	[CE]  unreachable  statement	1	None	add
10	[BUG]  [BUGGY]  return  rawNum.substring(0,  rawLen);  String  rawNum  =  rawNum.substring(0,  rawLen);  [CE]  variable  rawNum  is  already  defined  in  method  _longIntegerDesc(String)  [FE]      JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {    [BUGGY]  return  rawNum.substring(0,  rawLen);  String  rawNum  =  rawNum.substring(0,  rawLen);  [BUGGY]    }  if  (rawNum.startsWith(   "-   "))  {  rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return    rawNum.substring(0,    rawLen);    String  rawNum  =  rawNum.substring(0,  rawLen);	  	non-compiled	[CE]  variable  rawNum  is  already  defined  in  method  _longIntegerDesc(String)	1	None	add
11	[BUG]  [BUGGY]  return  rawNum.substring(0,  rawLen);  if(rawNum.startsWith( "-   "))  {  return  rawNum.substring(0,  rawLen);  }  [CE]  unreachable  statement  [FE]        JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {    [BUGGY]  return  rawNum.substring(0,  rawLen);  if(rawNum.startsWith( "-   "))  {  return  rawNum.substring(0,  rawLen);  }  [BUGGY]    }  if  (rawNum.startsWith(   "-   "))  {  rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return    rawNum.substring(0,    rawLen);    if(rawNum.startsWith( "-   "))  {  return  rawNum.substring(0,  rawLen);  }	  	non-compiled	[CE]  unreachable  statement	1	None	add
12	[BUG]  [BUGGY]  return  rawNum.substring(0,  rawLen);  if(rawNum.startsWith( "-   ")||  rawNum.startsWith( "-   "))  {  return  rawNum.substring(0,  rawLen);  }  [CE]  unreachable  statement  [FE]          JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {    [BUGGY]  return  rawNum.substring(0,  rawLen);  if(rawNum.startsWith( "-   ")||  rawNum.startsWith( "-   "))  {  return  rawNum.substring(0,  rawLen);  }  [BUGGY]    }  if  (rawNum.startsWith(   "-   "))  {  rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return    rawNum.substring(0,    rawLen);    if(rawNum.startsWith( "-   ")||  rawNum.startsWith( "-   "))  {  return  rawNum.substring(0,  rawLen);  }	  	non-compiled	[CE]  unreachable  statement	1	None	add
13	[BUG]  [BUGGY]  return  rawLen.substring(0,  rawLen.length()  -  1);  [CE]  int  cannot  be  dereferenced  [FE]          JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {    [BUGGY]  return  rawLen.substring(0,  rawLen.length()  -  1);  [BUGGY]    }  if  (rawNum.startsWith(   "-   "))  {  rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return  rawLen.substring(0,  rawLen.length()  -  1);	  return    rawLen;    	non-compiled	[CE]  int  cannot  be  dereferenced	3	None	replace
14	[BUG]  [BUGGY]  return  rawLen.substring(0,  rawLen.length()  -  3);  [CE]  int  cannot  be  dereferenced  [FE]            JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {    [BUGGY]  return  rawLen.substring(0,  rawLen.length()  -  3);  [BUGGY]    }  if  (rawNum.startsWith(   "-   "))  {  rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return  rawLen.substring(0,  rawLen.length()  -  3);	  return    rawLen;    	non-compiled	[CE]  int  cannot  be  dereferenced	3	None	replace
15	[BUG]  [BUGGY]  return  rawLen.substring(0,  rawLen.length()  -  2);  [CE]  int  cannot  be  dereferenced  [FE]              JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {    [BUGGY]  return  rawLen.substring(0,  rawLen.length()  -  2);  [BUGGY]    }  if  (rawNum.startsWith(   "-   "))  {  rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return  rawLen.substring(0,  rawLen.length()  -  2);	  return    rawLen;    	non-compiled	[CE]  int  cannot  be  dereferenced	3	None	replace
16	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {    [BUGGY]  return  rawNum.substring(0,  rawLen).trim();  [BUGGY]    }  if  (rawNum.startsWith(   "-   "))  {  rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	add	return  rawNum.substring(0,  rawLen).trim();	  return    rawNum.trim();    	compilable	  [FE]  JsonParseException  	7	8	replace
17	[BUG]  [BUGGY]  return  rawNum.substring(0,  rawLen).trim();  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {    [BUGGY]  return  rawNum.substring(0,  rawLen).trim();  [BUGGY]    }  if  (rawNum.startsWith(   "-   "))  {  rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return  rawNum.substring(0,  rawLen).trim();	  return    rawNum.trim();    	compilable	  [FE]  JsonParseException  	7	8	replace
18	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {    [BUGGY]  if(rawNum.startsWith( "- ")||  rawNum.startsWith( "- "))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  if  (rawNum.startsWith(   "-   "))  {  rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	add	if(rawNum.startsWith( "- ")||  rawNum.startsWith( "- "))  {  throw  new  IllegalArgumentException( " ");  }	      	compilable	  [FE]  JsonParseException  	9	8	replace
19	[BUG]  [BUGGY]  if(rawNum.startsWith( "- ")||  rawNum.startsWith( "- "))  {  throw  new  IllegalArgumentException( " ");  }  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {    [BUGGY]  if(rawNum.startsWith( "- ")||  rawNum.startsWith( "- "))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  if  (rawNum.startsWith(   "-   "))  {  rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	if(rawNum.startsWith( "- ")||  rawNum.startsWith( "- "))  {  throw  new  IllegalArgumentException( " ");  }	      	compilable	  [FE]  JsonParseException  	9	8	replace
20	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]      JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {    [BUGGY]  _reportUnsupportedOperation();  [BUGGY]    }  if  (rawNum.startsWith(   "-   "))  {  rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	add	_reportUnsupportedOperation();	      	compilable	  [FE]  UnsupportedOperationException  	9	8	replace
21	[BUG]  [BUGGY]  _reportUnsupportedOperation();  [FE]  UnsupportedOperationException  [FE]      JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {    [BUGGY]  _reportUnsupportedOperation();  [BUGGY]    }  if  (rawNum.startsWith(   "-   "))  {  rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	_reportUnsupportedOperation();	      	compilable	  [FE]  UnsupportedOperationException  	9	8	replace
22	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]        JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {    [BUGGY]  if(rawNum.startsWith( "- ")||  rawNum.startsWith( "- "))  {  return  String.format( "Integer  with  %d  digits] ",  rawLen);  }  [BUGGY]    }  if  (rawNum.startsWith(   "-   "))  {  rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	add	if(rawNum.startsWith( "- ")||  rawNum.startsWith( "- "))  {  return  String.format( "Integer  with  %d  digits] ",  rawLen);  }	      	compilable	  [FE]  JsonParseException  	9	8	replace
23	[BUG]  [BUGGY]  if(rawNum.startsWith( "- ")||  rawNum.startsWith( "- "))  {  return  String.format( "Integer  with  %d  digits] ",  rawLen);  }  [FE]  JsonParseException  [FE]        JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {    [BUGGY]  if(rawNum.startsWith( "- ")||  rawNum.startsWith( "- "))  {  return  String.format( "Integer  with  %d  digits] ",  rawLen);  }  [BUGGY]    }  if  (rawNum.startsWith(   "-   "))  {  rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	if(rawNum.startsWith( "- ")||  rawNum.startsWith( "- "))  {  return  String.format( "Integer  with  %d  digits] ",  rawLen);  }	      	compilable	  [FE]  JsonParseException  	9	8	replace
24	[BUG]  [BUGGY]  if(rawNum.startsWith( "- ")||  rawNum.startsWith( "- "))  {  throw  new  JsonParseException( " ");  }  [CE]  no  suitable  constructor  found  for  JsonParseException(String)  [FE]          JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {    [BUGGY]  if(rawNum.startsWith( "- ")||  rawNum.startsWith( "- "))  {  throw  new  JsonParseException( " ");  }  [BUGGY]    }  if  (rawNum.startsWith(   "-   "))  {  rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	if(rawNum.startsWith( "- ")||  rawNum.startsWith( "- "))  {  throw  new  JsonParseException( " ");  }	      	non-compiled	[CE]  no  suitable  constructor  found  for  JsonParseException(String)	9	None	replace
25	[BUG]  [BUGGY]  return  rawNum.trim();  if(rawNum.startsWith( "- "))  {  return  rawNum.trim();  }  [CE]  unreachable  statement  [FE]    JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {    [BUGGY]  return  rawNum.trim();  if(rawNum.startsWith( "- "))  {  return  rawNum.trim();  }  [BUGGY]    }  if  (rawNum.startsWith(   "-   "))  {  rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return    rawNum.trim();    if(rawNum.startsWith( "- "))  {  return  rawNum.trim();  }	  	non-compiled	[CE]  unreachable  statement	6	None	add
26	[BUG]  [BUGGY]  return  rawNum.trim();  if(rawNum.startsWith( "- ")||  rawNum.startsWith( "- "))  {  return  rawNum.trim();  }  [CE]  unreachable  statement  [FE]      JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {    [BUGGY]  return  rawNum.trim();  if(rawNum.startsWith( "- ")||  rawNum.startsWith( "- "))  {  return  rawNum.trim();  }  [BUGGY]    }  if  (rawNum.startsWith(   "-   "))  {  rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return    rawNum.trim();    if(rawNum.startsWith( "- ")||  rawNum.startsWith( "- "))  {  return  rawNum.trim();  }	  	non-compiled	[CE]  unreachable  statement	6	None	add
27	[BUG]  [BUGGY]  return  rawNum.trim();  return  rawNum.trim();  [CE]  unreachable  statement  [FE]        JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {    [BUGGY]  return  rawNum.trim();  return  rawNum.trim();  [BUGGY]    }  if  (rawNum.startsWith(   "-   "))  {  rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return    rawNum.trim();    return  rawNum.trim();	  	non-compiled	[CE]  unreachable  statement	6	None	add
28	[BUG]  [BUGGY]  return  rawNum.trim();  if(rawNum.startsWith( "- "))  {  return  rawNum.trim();  }  else  {  return  rawNum.trim();  }  [CE]  unreachable  statement  [FE]          JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {    [BUGGY]  return  rawNum.trim();  if(rawNum.startsWith( "- "))  {  return  rawNum.trim();  }  else  {  return  rawNum.trim();  }  [BUGGY]    }  if  (rawNum.startsWith(   "-   "))  {  rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return    rawNum.trim();    if(rawNum.startsWith( "- "))  {  return  rawNum.trim();  }  else  {  return  rawNum.trim();  }	  	non-compiled	[CE]  unreachable  statement	6	None	add
29	[BUG]  [BUGGY]  return  rawNum.trim();  if(rawNum.startsWith( "- "))  {  return  rawNum.trim();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  unreachable  statement  [FE]            JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {    [BUGGY]  return  rawNum.trim();  if(rawNum.startsWith( "- "))  {  return  rawNum.trim();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  if  (rawNum.startsWith(   "-   "))  {  rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return    rawNum.trim();    if(rawNum.startsWith( "- "))  {  return  rawNum.trim();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  unreachable  statement	6	None	add
30	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {    [BUGGY]  return  rawNum.toUpperCase();  [BUGGY]    }  if  (rawNum.startsWith(   "-   "))  {  rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	add	return  rawNum.toUpperCase();	  return    rawNum.toLowerCase();    	compilable	  [FE]  JsonParseException  	5	8	replace
31	[BUG]  [BUGGY]  return  rawNum.toUpperCase();  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {    [BUGGY]  return  rawNum.toUpperCase();  [BUGGY]    }  if  (rawNum.startsWith(   "-   "))  {  rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return  rawNum.toUpperCase();	  return    rawNum.toLowerCase();    	compilable	  [FE]  JsonParseException  	5	8	replace
32	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {    [BUGGY]  return  rawNum.substring(0,  rawLen).toLowerCase();  [BUGGY]    }  if  (rawNum.startsWith(   "-   "))  {  rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	add	return  rawNum.substring(0,  rawLen).toLowerCase();	  return    rawNum.toLowerCase();    	compilable	  [FE]  JsonParseException  	5	8	replace
33	[BUG]  [BUGGY]  return  rawNum.substring(0,  rawLen).toLowerCase();  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {    [BUGGY]  return  rawNum.substring(0,  rawLen).toLowerCase();  [BUGGY]    }  if  (rawNum.startsWith(   "-   "))  {  rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return  rawNum.substring(0,  rawLen).toLowerCase();	  return    rawNum.toLowerCase();    	compilable	  [FE]  JsonParseException  	5	8	replace
34	[BUG]  [BUGGY]  return  rawNum.trim();  if(rawNum!=  null)  {  return  rawNum.trim();  }  [CE]  unreachable  statement  [FE]    JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {    [BUGGY]  return  rawNum.trim();  if(rawNum!=  null)  {  return  rawNum.trim();  }  [BUGGY]    }  if  (rawNum.startsWith(   "-   "))  {  rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return    rawNum.trim();    if(rawNum!=  null)  {  return  rawNum.trim();  }	  	non-compiled	[CE]  unreachable  statement	6	None	add
35	[BUG]  [BUGGY]  return  rawNum.trim();  char[]  rawNum  =  rawNum.toCharArray();  return  rawNum.trim();  [CE]  variable  rawNum  is  already  defined  in  method  _longIntegerDesc(String)  [FE]      JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {    [BUGGY]  return  rawNum.trim();  char[]  rawNum  =  rawNum.toCharArray();  return  rawNum.trim();  [BUGGY]    }  if  (rawNum.startsWith(   "-   "))  {  rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return    rawNum.trim();    char[]  rawNum  =  rawNum.toCharArray();  return  rawNum.trim();	  	non-compiled	[CE]  variable  rawNum  is  already  defined  in  method  _longIntegerDesc(String)	6	None	add
36	[BUG]  [BUGGY]  return  rawNum.trim();  char[]  rawNum  =  rawNum.toCharArray();  [CE]  variable  rawNum  is  already  defined  in  method  _longIntegerDesc(String)  [FE]        JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {    [BUGGY]  return  rawNum.trim();  char[]  rawNum  =  rawNum.toCharArray();  [BUGGY]    }  if  (rawNum.startsWith(   "-   "))  {  rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return    rawNum.trim();    char[]  rawNum  =  rawNum.toCharArray();	  	non-compiled	[CE]  variable  rawNum  is  already  defined  in  method  _longIntegerDesc(String)	6	None	add
37	[BUG]  [BUGGY]  return  rawNum.substring(0,  rawLen);  if(rawNum!=  null)  {  return  rawNum.substring(0,  rawLen);  }  [CE]  unreachable  statement  [FE]    JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {    [BUGGY]  return  rawNum.substring(0,  rawLen);  if(rawNum!=  null)  {  return  rawNum.substring(0,  rawLen);  }  [BUGGY]    }  if  (rawNum.startsWith(   "-   "))  {  rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return    rawNum.substring(0,    rawLen);    if(rawNum!=  null)  {  return  rawNum.substring(0,  rawLen);  }	  	non-compiled	[CE]  unreachable  statement	1	None	add
38	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {    [BUGGY]  _currToken  =  JsonToken.VALUE_STRING;  [BUGGY]    }  if  (rawNum.startsWith(   "-   "))  {  rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	add	_currToken  =  JsonToken.VALUE_STRING;	      	compilable	  [FE]  JsonParseException  	9	8	replace
39	[BUG]  [BUGGY]  _currToken  =  JsonToken.VALUE_STRING;  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {    [BUGGY]  _currToken  =  JsonToken.VALUE_STRING;  [BUGGY]    }  if  (rawNum.startsWith(   "-   "))  {  rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	_currToken  =  JsonToken.VALUE_STRING;	      	compilable	  [FE]  JsonParseException  	9	8	replace
40	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {    [BUGGY]  _currToken  =  JsonToken.VALUE_NUMBER_FLOAT;  [BUGGY]    }  if  (rawNum.startsWith(   "-   "))  {  rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	add	_currToken  =  JsonToken.VALUE_NUMBER_FLOAT;	      	compilable	  [FE]  JsonParseException  	9	8	replace
41	[BUG]  [BUGGY]  _currToken  =  JsonToken.VALUE_NUMBER_FLOAT;  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {    [BUGGY]  _currToken  =  JsonToken.VALUE_NUMBER_FLOAT;  [BUGGY]    }  if  (rawNum.startsWith(   "-   "))  {  rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	_currToken  =  JsonToken.VALUE_NUMBER_FLOAT;	      	compilable	  [FE]  JsonParseException  	9	8	replace
42	[BUG]  [BUGGY]  return  rawNum.toLowerCase();  if(rawNum!=  null)  {  return  rawNum.toLowerCase();  }  [CE]  unreachable  statement  [FE]    JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {    [BUGGY]  return  rawNum.toLowerCase();  if(rawNum!=  null)  {  return  rawNum.toLowerCase();  }  [BUGGY]    }  if  (rawNum.startsWith(   "-   "))  {  rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return    rawNum.toLowerCase();    if(rawNum!=  null)  {  return  rawNum.toLowerCase();  }	  	non-compiled	[CE]  unreachable  statement	4	None	add
43	[BUG]  [BUGGY]  return  rawNum.toLowerCase();  if(rawNum!=  null)  {  return  rawNum.toLowerCase();  }  else  {  return  rawNum.toLowerCase();  }  [CE]  unreachable  statement  [FE]      JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {    [BUGGY]  return  rawNum.toLowerCase();  if(rawNum!=  null)  {  return  rawNum.toLowerCase();  }  else  {  return  rawNum.toLowerCase();  }  [BUGGY]    }  if  (rawNum.startsWith(   "-   "))  {  rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return    rawNum.toLowerCase();    if(rawNum!=  null)  {  return  rawNum.toLowerCase();  }  else  {  return  rawNum.toLowerCase();  }	  	non-compiled	[CE]  unreachable  statement	4	None	add
44	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]          JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {    [BUGGY]  return  rawLen  +  _longIntegerDesc(rawNum);  [BUGGY]    }  if  (rawNum.startsWith(   "-   "))  {  rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	add	return  rawLen  +  _longIntegerDesc(rawNum);	  return    rawLen;    	compilable	  [FE]  StackOverflowError  	3	8	replace
45	[BUG]  [BUGGY]  return  rawLen  +  _longIntegerDesc(rawNum);  [FE]  StackOverflowError  [FE]          JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {    [BUGGY]  return  rawLen  +  _longIntegerDesc(rawNum);  [BUGGY]    }  if  (rawNum.startsWith(   "-   "))  {  rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return  rawLen  +  _longIntegerDesc(rawNum);	  return    rawLen;    	compilable	  [FE]  StackOverflowError  	3	8	replace
46	[BUG]  [BUGGY]  return  rawLen  +  _longIntegerDesc;  [CE]  cannot  find  symbol  _longIntegerDesc  [FE]            JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {    [BUGGY]  return  rawLen  +  _longIntegerDesc;  [BUGGY]    }  if  (rawNum.startsWith(   "-   "))  {  rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return  rawLen  +  _longIntegerDesc;	  return    rawLen;    	non-compiled	[CE]  cannot  find  symbol  _longIntegerDesc	3	None	replace
47	[BUG]  [BUGGY]  return  rawLen  +  _longIntegerDesc.toString();  [CE]  cannot  find  symbol  _longIntegerDesc  [FE]              JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {    [BUGGY]  return  rawLen  +  _longIntegerDesc.toString();  [BUGGY]    }  if  (rawNum.startsWith(   "-   "))  {  rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return  rawLen  +  _longIntegerDesc.toString();	  return    rawLen;    	non-compiled	[CE]  cannot  find  symbol  _longIntegerDesc	3	None	replace
48	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {    [BUGGY]  return  rawNum.substring(0,  rawLen  -  2);  [BUGGY]    }  if  (rawNum.startsWith(   "-   "))  {  rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	add	return  rawNum.substring(0,  rawLen  -  2);	  return    rawNum.substring(0,    rawLen);    	compilable	  [FE]  JsonParseException  	2	8	replace
49	[BUG]  [BUGGY]  return  rawNum.substring(0,  rawLen  -  2);  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {    [BUGGY]  return  rawNum.substring(0,  rawLen  -  2);  [BUGGY]    }  if  (rawNum.startsWith(   "-   "))  {  rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return  rawNum.substring(0,  rawLen  -  2);	  return    rawNum.substring(0,    rawLen);    	compilable	  [FE]  JsonParseException  	2	8	replace
50	[BUG]  [BUGGY]  return  rawNum.toLowerCase(Locale.ENGLISH);  [CE]  cannot  find  symbol  Locale  [FE]    JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {    [BUGGY]  return  rawNum.toLowerCase(Locale.ENGLISH);  [BUGGY]    }  if  (rawNum.startsWith(   "-   "))  {  rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return  rawNum.toLowerCase(Locale.ENGLISH);	  return    rawNum.toLowerCase();    	non-compiled	[CE]  cannot  find  symbol  Locale	5	None	replace
51	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {    [BUGGY]      if(rawNum.startsWith( "- ")||  rawNum.startsWith( "- "))  {  rawLen  -=  1;  }  [BUGGY]    }  if  (rawNum.startsWith(   "-   "))  {  rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	add	        if(rawNum.startsWith( "- ")||  rawNum.startsWith( "- "))  {  rawLen  -=  1;  }	  	compilable	  [FE]  JsonParseException  	8	8	add
52	[BUG]  [BUGGY]      if(rawNum.startsWith( "- ")||  rawNum.startsWith( "- "))  {  rawLen  -=  1;  }  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {    [BUGGY]      if(rawNum.startsWith( "- ")||  rawNum.startsWith( "- "))  {  rawLen  -=  1;  }  [BUGGY]    }  if  (rawNum.startsWith(   "-   "))  {  rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	        if(rawNum.startsWith( "- ")||  rawNum.startsWith( "- "))  {  rawLen  -=  1;  }	  	compilable	  [FE]  JsonParseException  	8	8	add
53	[BUG]  [BUGGY]  return  rawNum.toLowerCase();  if(rawNum.startsWith( "- ")||  rawNum.startsWith( "- "))  {  return  rawNum.toLowerCase();  }  [CE]  unreachable  statement  [FE]    JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {    [BUGGY]  return  rawNum.toLowerCase();  if(rawNum.startsWith( "- ")||  rawNum.startsWith( "- "))  {  return  rawNum.toLowerCase();  }  [BUGGY]    }  if  (rawNum.startsWith(   "-   "))  {  rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return    rawNum.toLowerCase();    if(rawNum.startsWith( "- ")||  rawNum.startsWith( "- "))  {  return  rawNum.toLowerCase();  }	  	non-compiled	[CE]  unreachable  statement	4	None	add
54	[BUG]  [BUGGY]  return  rawNum.toLowerCase();  if(rawNum.startsWith( "- ")||  rawLen  <  2)  {  return  rawNum.toLowerCase();  }  [CE]  unreachable  statement  [FE]      JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {    [BUGGY]  return  rawNum.toLowerCase();  if(rawNum.startsWith( "- ")||  rawLen  <  2)  {  return  rawNum.toLowerCase();  }  [BUGGY]    }  if  (rawNum.startsWith(   "-   "))  {  rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return    rawNum.toLowerCase();    if(rawNum.startsWith( "- ")||  rawLen  <  2)  {  return  rawNum.toLowerCase();  }	  	non-compiled	[CE]  unreachable  statement	4	None	add
55	[BUG]  [BUGGY]  return  rawNum.trim();  if(rawNum.trim().equals( "- "))  {  return  rawNum.trim();  }  [CE]  unreachable  statement  [FE]    JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {    [BUGGY]  return  rawNum.trim();  if(rawNum.trim().equals( "- "))  {  return  rawNum.trim();  }  [BUGGY]    }  if  (rawNum.startsWith(   "-   "))  {  rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return    rawNum.trim();    if(rawNum.trim().equals( "- "))  {  return  rawNum.trim();  }	  	non-compiled	[CE]  unreachable  statement	6	None	add
56	[BUG]  [BUGGY]  return  rawNum.trim();  if(rawNum.startsWith( "- ")||  rawLen  <  2)  {  return  rawNum.trim();  }  [CE]  unreachable  statement  [FE]      JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {    [BUGGY]  return  rawNum.trim();  if(rawNum.startsWith( "- ")||  rawLen  <  2)  {  return  rawNum.trim();  }  [BUGGY]    }  if  (rawNum.startsWith(   "-   "))  {  rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return    rawNum.trim();    if(rawNum.startsWith( "- ")||  rawLen  <  2)  {  return  rawNum.trim();  }	  	non-compiled	[CE]  unreachable  statement	6	None	add
57	[BUG]  [BUGGY]  return  rawLen  <  =  MAX_ERROR_TOKEN_LENGTH?  String.valueOf(rawNum):  rawNum;  [CE]  illegal  start  of  expression  [FE]          JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {    [BUGGY]  return  rawLen  <  =  MAX_ERROR_TOKEN_LENGTH?  String.valueOf(rawNum):  rawNum;  [BUGGY]    }  if  (rawNum.startsWith(   "-   "))  {  rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return  rawLen  <  =  MAX_ERROR_TOKEN_LENGTH?  String.valueOf(rawNum):  rawNum;	  return    rawLen;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
58	[BUG]  [BUGGY]  return  rawLen  <  =  MAX_ERROR_TOKEN_LENGTH?  String.valueOf(rawNum):  null;  [CE]  illegal  start  of  expression  [FE]            JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {    [BUGGY]  return  rawLen  <  =  MAX_ERROR_TOKEN_LENGTH?  String.valueOf(rawNum):  null;  [BUGGY]    }  if  (rawNum.startsWith(   "-   "))  {  rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return  rawLen  <  =  MAX_ERROR_TOKEN_LENGTH?  String.valueOf(rawNum):  null;	  return    rawLen;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
59	[BUG]  [BUGGY]  return  rawLen  <  =  MAX_ERROR_TOKEN_LENGTH?  null  :  rawLen;  [CE]  illegal  start  of  expression  [FE]              JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {    [BUGGY]  return  rawLen  <  =  MAX_ERROR_TOKEN_LENGTH?  null  :  rawLen;  [BUGGY]    }  if  (rawNum.startsWith(   "-   "))  {  rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return  rawLen  <  =  MAX_ERROR_TOKEN_LENGTH?  null  :  rawLen;	  return    rawLen;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
60	[BUG]  [BUGGY]  return  rawNum.substring(0,  rawLen);  if(rawNum.startsWith( "- "))  {  return  rawNum.substring(0,  rawLen);  }  else  {  return  String.format( "[Integer  with  %d  digits] ",  rawLen);  }  [CE]  unreachable  statement  [FE]    JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {    [BUGGY]  return  rawNum.substring(0,  rawLen);  if(rawNum.startsWith( "- "))  {  return  rawNum.substring(0,  rawLen);  }  else  {  return  String.format( "[Integer  with  %d  digits] ",  rawLen);  }  [BUGGY]    }  if  (rawNum.startsWith(   "-   "))  {  rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return    rawNum.substring(0,    rawLen);    if(rawNum.startsWith( "- "))  {  return  rawNum.substring(0,  rawLen);  }  else  {  return  String.format( "[Integer  with  %d  digits] ",  rawLen);  }	  	non-compiled	[CE]  unreachable  statement	1	None	add
61	[BUG]  [BUGGY]  return  rawNum.substring(0,  rawLen);  if(rawNum.indexOf( "- ")  <  0)  {  return  rawNum.substring(0,  rawLen);  }  [CE]  unreachable  statement  [FE]      JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {    [BUGGY]  return  rawNum.substring(0,  rawLen);  if(rawNum.indexOf( "- ")  <  0)  {  return  rawNum.substring(0,  rawLen);  }  [BUGGY]    }  if  (rawNum.startsWith(   "-   "))  {  rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return    rawNum.substring(0,    rawLen);    if(rawNum.indexOf( "- ")  <  0)  {  return  rawNum.substring(0,  rawLen);  }	  	non-compiled	[CE]  unreachable  statement	1	None	add
62	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {    [BUGGY]  if(rawNum.startsWith( "- ")||  rawLen  <  2)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  if  (rawNum.startsWith(   "-   "))  {  rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	add	if(rawNum.startsWith( "- ")||  rawLen  <  2)  {  throw  new  IllegalArgumentException( " ");  }	      	compilable	  [FE]  JsonParseException  	9	8	replace
63	[BUG]  [BUGGY]  if(rawNum.startsWith( "- ")||  rawLen  <  2)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {    [BUGGY]  if(rawNum.startsWith( "- ")||  rawLen  <  2)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  if  (rawNum.startsWith(   "-   "))  {  rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	if(rawNum.startsWith( "- ")||  rawLen  <  2)  {  throw  new  IllegalArgumentException( " ");  }	      	compilable	  [FE]  JsonParseException  	9	8	replace
64	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {    [BUGGY]  if(rawNum.startsWith( "- ")||  rawLen  <  2)  {  return  String.format( "Integer  with  %d  digits ");  }  [BUGGY]    }  if  (rawNum.startsWith(   "-   "))  {  rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	add	if(rawNum.startsWith( "- ")||  rawLen  <  2)  {  return  String.format( "Integer  with  %d  digits ");  }	      	compilable	  [FE]  JsonParseException  	9	8	replace
65	[BUG]  [BUGGY]  if(rawNum.startsWith( "- ")||  rawLen  <  2)  {  return  String.format( "Integer  with  %d  digits ");  }  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {    [BUGGY]  if(rawNum.startsWith( "- ")||  rawLen  <  2)  {  return  String.format( "Integer  with  %d  digits ");  }  [BUGGY]    }  if  (rawNum.startsWith(   "-   "))  {  rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	if(rawNum.startsWith( "- ")||  rawLen  <  2)  {  return  String.format( "Integer  with  %d  digits ");  }	      	compilable	  [FE]  JsonParseException  	9	8	replace
66	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]        JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {    [BUGGY]  if(rawNum.startsWith( "- ")||  rawLen  <  2)  {  return  null;  }  [BUGGY]    }  if  (rawNum.startsWith(   "-   "))  {  rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	add	if(rawNum.startsWith( "- ")||  rawLen  <  2)  {  return  null;  }	      	compilable	  [FE]  JsonParseException  	9	8	replace
67	[BUG]  [BUGGY]  if(rawNum.startsWith( "- ")||  rawLen  <  2)  {  return  null;  }  [FE]  JsonParseException  [FE]        JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {    [BUGGY]  if(rawNum.startsWith( "- ")||  rawLen  <  2)  {  return  null;  }  [BUGGY]    }  if  (rawNum.startsWith(   "-   "))  {  rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	if(rawNum.startsWith( "- ")||  rawLen  <  2)  {  return  null;  }	      	compilable	  [FE]  JsonParseException  	9	8	replace
68	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {    [BUGGY]      if(rawNum.startsWith( "- ")||  rawLen  <  2)  {  return  String.format( "Integer  with  %d  digits] ",  1);  }  [BUGGY]    }  if  (rawNum.startsWith(   "-   "))  {  rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	add	        if(rawNum.startsWith( "- ")||  rawLen  <  2)  {  return  String.format( "Integer  with  %d  digits] ",  1);  }	  	compilable	  [FE]  JsonParseException  	8	8	add
69	[BUG]  [BUGGY]      if(rawNum.startsWith( "- ")||  rawLen  <  2)  {  return  String.format( "Integer  with  %d  digits] ",  1);  }  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]    protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {    [BUGGY]      if(rawNum.startsWith( "- ")||  rawLen  <  2)  {  return  String.format( "Integer  with  %d  digits] ",  1);  }  [BUGGY]    }  if  (rawNum.startsWith(   "-   "))  {  rawLen  -=  1;  }  return  String.format(   "[Integer  with  %d  digits]   ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	        if(rawNum.startsWith( "- ")||  rawLen  <  2)  {  return  String.format( "Integer  with  %d  digits] ",  1);  }	  	compilable	  [FE]  JsonParseException  	8	8	add
