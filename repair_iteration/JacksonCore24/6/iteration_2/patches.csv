bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  rawLen  +  1;  [CE]  incompatible  types  [FE]                JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  return  rawLen  +  1;  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return  rawLen  +  1;	  return    rawLen    +    _longIntegerDesc;    	non-compiled	[CE]  incompatible  types	46	None	replace
2	[BUG]  [BUGGY]  return  rawLen  +  MAX_ERROR_TOKEN_LENGTH;  [CE]  incompatible  types  [FE]                  JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  return  rawLen  +  MAX_ERROR_TOKEN_LENGTH;  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return  rawLen  +  MAX_ERROR_TOKEN_LENGTH;	  return    rawLen    +    _longIntegerDesc;    	non-compiled	[CE]  incompatible  types	46	None	replace
3	[BUG]  [BUGGY]  return  rawNum.substring(0,  rawLen  +  1);  return  rawNum.substring(0,  rawLen  +  1);  [CE]  unreachable  statement  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  return  rawNum.substring(0,  rawLen  +  1);  return  rawNum.substring(0,  rawLen  +  1);  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return    rawNum.substring(0,    rawLen    +    1);    return  rawNum.substring(0,  rawLen  +  1);	  	non-compiled	[CE]  unreachable  statement	4	None	add
4	[BUG]  [BUGGY]  return  rawNum.substring(0,  rawLen  +  1);  String  rawNum  =  rawNum.substring(0,  rawLen  +  1);  [CE]  variable  rawNum  is  already  defined  in  method  _longIntegerDesc(String)  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  return  rawNum.substring(0,  rawLen  +  1);  String  rawNum  =  rawNum.substring(0,  rawLen  +  1);  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return    rawNum.substring(0,    rawLen    +    1);    String  rawNum  =  rawNum.substring(0,  rawLen  +  1);	  	non-compiled	[CE]  variable  rawNum  is  already  defined  in  method  _longIntegerDesc(String)	4	None	add
5	[BUG]  [BUGGY]  return  rawNum.substring(0,  rawLen  +  1);  String  rawNum  =  rawNum.substring(0,  rawLen  +  1);  if(rawNum.startsWith( "-   "))  {  return  rawNum.substring(0,  rawLen  +  1);  }  [CE]  variable  rawNum  is  already  defined  in  method  _longIntegerDesc(String)  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  return  rawNum.substring(0,  rawLen  +  1);  String  rawNum  =  rawNum.substring(0,  rawLen  +  1);  if(rawNum.startsWith( "-   "))  {  return  rawNum.substring(0,  rawLen  +  1);  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return    rawNum.substring(0,    rawLen    +    1);    String  rawNum  =  rawNum.substring(0,  rawLen  +  1);  if(rawNum.startsWith( "-   "))  {  return  rawNum.substring(0,  rawLen  +  1);  }	  	non-compiled	[CE]  variable  rawNum  is  already  defined  in  method  _longIntegerDesc(String)	4	None	add
6	[BUG]  [BUGGY]  return  rawNum.substring(0,  rawLen  +  1);  StringBuffer  rawNum  =  new  StringBuffer(32);  return  rawNum.substring(0,  rawLen  +  1);  [CE]  variable  rawNum  is  already  defined  in  method  _longIntegerDesc(String)  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  return  rawNum.substring(0,  rawLen  +  1);  StringBuffer  rawNum  =  new  StringBuffer(32);  return  rawNum.substring(0,  rawLen  +  1);  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return    rawNum.substring(0,    rawLen    +    1);    StringBuffer  rawNum  =  new  StringBuffer(32);  return  rawNum.substring(0,  rawLen  +  1);	  	non-compiled	[CE]  variable  rawNum  is  already  defined  in  method  _longIntegerDesc(String)	4	None	add
7	[BUG]  [BUGGY]  ||  rawNum.startsWith( "- "))  {  throw  new  JsonParseException( " ");  }  [CE]  illegal  start  of  expression  [FE]              JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  ||  rawNum.startsWith( "- "))  {  throw  new  JsonParseException( " ");  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	||  rawNum.startsWith( "- "))  {  throw  new  JsonParseException( " ");  }	  if(rawNum.startsWith(   "-   ")||    rawNum.startsWith(   "-   "))    {    throw    new    JsonParseException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
8	[BUG]  [BUGGY]  ||  rawNum.startsWith( ".000 "))  {  throw  new  JsonParseException( " ");  }  [CE]  illegal  start  of  expression  [FE]                JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  ||  rawNum.startsWith( ".000 "))  {  throw  new  JsonParseException( " ");  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	||  rawNum.startsWith( ".000 "))  {  throw  new  JsonParseException( " ");  }	  if(rawNum.startsWith(   "-   ")||    rawNum.startsWith(   "-   "))    {    throw    new    JsonParseException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
9	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  if(rawNum.startsWith(   "-   ")||  rawLen  <  2)  {  return  String.format(   "Integer  with  %d  digits   ");  }  if(rawNum.startsWith( "-   ")||  rawLen  <  2)  {  return  String.format( "Integer  with  %d  digits   ");  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	add	if(rawNum.startsWith(   "-   ")||    rawLen    <    2)    {    return    String.format(   "Integer    with    %d    digits   ");    }    if(rawNum.startsWith( "-   ")||  rawLen  <  2)  {  return  String.format( "Integer  with  %d  digits   ");  }	  	compilable	  [FE]  JsonParseException  	64	8	add
10	[BUG]  [BUGGY]  if(rawNum.startsWith(   "-   ")||  rawLen  <  2)  {  return  String.format(   "Integer  with  %d  digits   ");  }  if(rawNum.startsWith( "-   ")||  rawLen  <  2)  {  return  String.format( "Integer  with  %d  digits   ");  }  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  if(rawNum.startsWith(   "-   ")||  rawLen  <  2)  {  return  String.format(   "Integer  with  %d  digits   ");  }  if(rawNum.startsWith( "-   ")||  rawLen  <  2)  {  return  String.format( "Integer  with  %d  digits   ");  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	if(rawNum.startsWith(   "-   ")||    rawLen    <    2)    {    return    String.format(   "Integer    with    %d    digits   ");    }    if(rawNum.startsWith( "-   ")||  rawLen  <  2)  {  return  String.format( "Integer  with  %d  digits   ");  }	  	compilable	  [FE]  JsonParseException  	64	8	add
11	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  if(rawNum.startsWith(   "-   ")||  rawLen  <  2)  {  return  String.format(   "Integer  with  %d  digits   ");  }  if(rawNum.startsWith( ".-   ")||  rawLen  <  2)  {  return  String.format( "Integer  with  %d  digits   ");  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	add	if(rawNum.startsWith(   "-   ")||    rawLen    <    2)    {    return    String.format(   "Integer    with    %d    digits   ");    }    if(rawNum.startsWith( ".-   ")||  rawLen  <  2)  {  return  String.format( "Integer  with  %d  digits   ");  }	  	compilable	  [FE]  JsonParseException  	64	8	add
12	[BUG]  [BUGGY]  if(rawNum.startsWith(   "-   ")||  rawLen  <  2)  {  return  String.format(   "Integer  with  %d  digits   ");  }  if(rawNum.startsWith( ".-   ")||  rawLen  <  2)  {  return  String.format( "Integer  with  %d  digits   ");  }  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  if(rawNum.startsWith(   "-   ")||  rawLen  <  2)  {  return  String.format(   "Integer  with  %d  digits   ");  }  if(rawNum.startsWith( ".-   ")||  rawLen  <  2)  {  return  String.format( "Integer  with  %d  digits   ");  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	if(rawNum.startsWith(   "-   ")||    rawLen    <    2)    {    return    String.format(   "Integer    with    %d    digits   ");    }    if(rawNum.startsWith( ".-   ")||  rawLen  <  2)  {  return  String.format( "Integer  with  %d  digits   ");  }	  	compilable	  [FE]  JsonParseException  	64	8	add
13	[BUG]  [BUGGY]  char  rawNum  =  rawNum.substring(0,  rawLen);  [CE]  variable  rawNum  is  already  defined  in  method  _longIntegerDesc(String)  [FE]          JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  char  rawNum  =  rawNum.substring(0,  rawLen);  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	char  rawNum  =  rawNum.substring(0,  rawLen);	  return    rawNum.substring(0,    rawLen);    String    rawNum    =    rawNum.substring(0,    rawLen);    	non-compiled	[CE]  variable  rawNum  is  already  defined  in  method  _longIntegerDesc(String)	10	None	replace
14	[BUG]  [BUGGY]  char[]  rawNum  =  rawNum.substring(0,  rawLen);  [CE]  variable  rawNum  is  already  defined  in  method  _longIntegerDesc(String)  [FE]            JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  char[]  rawNum  =  rawNum.substring(0,  rawLen);  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	char[]  rawNum  =  rawNum.substring(0,  rawLen);	  return    rawNum.substring(0,    rawLen);    String    rawNum    =    rawNum.substring(0,    rawLen);    	non-compiled	[CE]  variable  rawNum  is  already  defined  in  method  _longIntegerDesc(String)	10	None	replace
15	[BUG]  [BUGGY]  char[]  rawNum  =  rawNum.toCharArray();  [CE]  variable  rawNum  is  already  defined  in  method  _longIntegerDesc(String)  [FE]              JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  char[]  rawNum  =  rawNum.toCharArray();  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	char[]  rawNum  =  rawNum.toCharArray();	  return    rawNum.substring(0,    rawLen);    String    rawNum    =    rawNum.substring(0,    rawLen);    	non-compiled	[CE]  variable  rawNum  is  already  defined  in  method  _longIntegerDesc(String)	10	None	replace
16	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  if(rawNum.startsWith(   "-   ")||  rawLen  <  2)  {  return  null;  }  if(rawNum.startsWith( "-   ")||  rawLen  <  2)  {  return  null;  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	add	if(rawNum.startsWith(   "-   ")||    rawLen    <    2)    {    return    null;    }    if(rawNum.startsWith( "-   ")||  rawLen  <  2)  {  return  null;  }	  	compilable	  [FE]  JsonParseException  	66	8	add
17	[BUG]  [BUGGY]  if(rawNum.startsWith(   "-   ")||  rawLen  <  2)  {  return  null;  }  if(rawNum.startsWith( "-   ")||  rawLen  <  2)  {  return  null;  }  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  if(rawNum.startsWith(   "-   ")||  rawLen  <  2)  {  return  null;  }  if(rawNum.startsWith( "-   ")||  rawLen  <  2)  {  return  null;  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	if(rawNum.startsWith(   "-   ")||    rawLen    <    2)    {    return    null;    }    if(rawNum.startsWith( "-   ")||  rawLen  <  2)  {  return  null;  }	  	compilable	  [FE]  JsonParseException  	66	8	add
18	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  if(rawNum.startsWith(   "-   ")||  rawLen  <  2)  {  return  null;  }  if(rawNum.startsWith( ".-   ")||  rawLen  <  2)  {  return  null;  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	add	if(rawNum.startsWith(   "-   ")||    rawLen    <    2)    {    return    null;    }    if(rawNum.startsWith( ".-   ")||  rawLen  <  2)  {  return  null;  }	  	compilable	  [FE]  JsonParseException  	66	8	add
19	[BUG]  [BUGGY]  if(rawNum.startsWith(   "-   ")||  rawLen  <  2)  {  return  null;  }  if(rawNum.startsWith( ".-   ")||  rawLen  <  2)  {  return  null;  }  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  if(rawNum.startsWith(   "-   ")||  rawLen  <  2)  {  return  null;  }  if(rawNum.startsWith( ".-   ")||  rawLen  <  2)  {  return  null;  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	if(rawNum.startsWith(   "-   ")||    rawLen    <    2)    {    return    null;    }    if(rawNum.startsWith( ".-   ")||  rawLen  <  2)  {  return  null;  }	  	compilable	  [FE]  JsonParseException  	66	8	add
20	[BUG]  [BUGGY]  String  rawNum  =  rawNum.substring(0,  rawLen);  if(rawNum.indexOf( "- ")  <  0)  {  return  rawNum.substring(0,  rawLen);  }  [CE]  variable  rawNum  is  already  defined  in  method  _longIntegerDesc(String)  [FE]          JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  String  rawNum  =  rawNum.substring(0,  rawLen);  if(rawNum.indexOf( "- ")  <  0)  {  return  rawNum.substring(0,  rawLen);  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	String  rawNum  =  rawNum.substring(0,  rawLen);  if(rawNum.indexOf( "- ")  <  0)  {  return  rawNum.substring(0,  rawLen);  }	  return    rawNum.substring(0,    rawLen);    if(rawNum.indexOf(   "-   ")    <    0)    {    return    rawNum.substring(0,    rawLen);    }    	non-compiled	[CE]  variable  rawNum  is  already  defined  in  method  _longIntegerDesc(String)	61	None	replace
21	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]            JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  if(rawNum.indexOf( "- ")  <  0)  {  return  rawNum.substring(0,  rawLen);  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	add	if(rawNum.indexOf( "- ")  <  0)  {  return  rawNum.substring(0,  rawLen);  }	  return    rawNum.substring(0,    rawLen);    if(rawNum.indexOf(   "-   ")    <    0)    {    return    rawNum.substring(0,    rawLen);    }    	compilable	  [FE]  JsonParseException  	61	8	replace
22	[BUG]  [BUGGY]  if(rawNum.indexOf( "- ")  <  0)  {  return  rawNum.substring(0,  rawLen);  }  [FE]  JsonParseException  [FE]            JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  if(rawNum.indexOf( "- ")  <  0)  {  return  rawNum.substring(0,  rawLen);  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	if(rawNum.indexOf( "- ")  <  0)  {  return  rawNum.substring(0,  rawLen);  }	  return    rawNum.substring(0,    rawLen);    if(rawNum.indexOf(   "-   ")    <    0)    {    return    rawNum.substring(0,    rawLen);    }    	compilable	  [FE]  JsonParseException  	61	8	replace
23	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]        JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  if(rawNum.startsWith( "- "))  {  return  rawNum.trim();  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	add	if(rawNum.startsWith( "- "))  {  return  rawNum.trim();  }	  return    rawNum.trim();    if(rawNum.startsWith(   "-   "))    {    return    rawNum.trim();    }    	compilable	  [FE]  JsonParseException  	25	8	replace
24	[BUG]  [BUGGY]  if(rawNum.startsWith( "- "))  {  return  rawNum.trim();  }  [FE]  JsonParseException  [FE]        JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  if(rawNum.startsWith( "- "))  {  return  rawNum.trim();  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	if(rawNum.startsWith( "- "))  {  return  rawNum.trim();  }	  return    rawNum.trim();    if(rawNum.startsWith(   "-   "))    {    return    rawNum.trim();    }    	compilable	  [FE]  JsonParseException  	25	8	replace
25	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]          JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  if(rawLen  <  1000)  {  return  rawNum.trim();  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	add	if(rawLen  <  1000)  {  return  rawNum.trim();  }	  return    rawNum.trim();    if(rawNum.startsWith(   "-   "))    {    return    rawNum.trim();    }    	compilable	  [FE]  JsonParseException  	25	8	replace
26	[BUG]  [BUGGY]  if(rawLen  <  1000)  {  return  rawNum.trim();  }  [FE]  JsonParseException  [FE]          JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  if(rawLen  <  1000)  {  return  rawNum.trim();  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	if(rawLen  <  1000)  {  return  rawNum.trim();  }	  return    rawNum.trim();    if(rawNum.startsWith(   "-   "))    {    return    rawNum.trim();    }    	compilable	  [FE]  JsonParseException  	25	8	replace
27	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]          JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  if(rawNum.startsWith( "- ")||  rawNum.startsWith( "- "))  {  return  rawNum.trim();  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	add	if(rawNum.startsWith( "- ")||  rawNum.startsWith( "- "))  {  return  rawNum.trim();  }	  return    rawNum.trim();    if(rawNum.startsWith(   "-   ")||    rawNum.startsWith(   "-   "))    {    return    rawNum.trim();    }    	compilable	  [FE]  JsonParseException  	26	8	replace
28	[BUG]  [BUGGY]  if(rawNum.startsWith( "- ")||  rawNum.startsWith( "- "))  {  return  rawNum.trim();  }  [FE]  JsonParseException  [FE]          JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  if(rawNum.startsWith( "- ")||  rawNum.startsWith( "- "))  {  return  rawNum.trim();  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	if(rawNum.startsWith( "- ")||  rawNum.startsWith( "- "))  {  return  rawNum.trim();  }	  return    rawNum.trim();    if(rawNum.startsWith(   "-   ")||    rawNum.startsWith(   "-   "))    {    return    rawNum.trim();    }    	compilable	  [FE]  JsonParseException  	26	8	replace
29	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]            JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  if(rawNum.startsWith( "0 ")||  rawNum.startsWith( "- "))  {  return  rawNum.trim();  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	add	if(rawNum.startsWith( "0 ")||  rawNum.startsWith( "- "))  {  return  rawNum.trim();  }	  return    rawNum.trim();    if(rawNum.startsWith(   "-   ")||    rawNum.startsWith(   "-   "))    {    return    rawNum.trim();    }    	compilable	  [FE]  JsonParseException  	26	8	replace
30	[BUG]  [BUGGY]  if(rawNum.startsWith( "0 ")||  rawNum.startsWith( "- "))  {  return  rawNum.trim();  }  [FE]  JsonParseException  [FE]            JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  if(rawNum.startsWith( "0 ")||  rawNum.startsWith( "- "))  {  return  rawNum.trim();  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	if(rawNum.startsWith( "0 ")||  rawNum.startsWith( "- "))  {  return  rawNum.trim();  }	  return    rawNum.trim();    if(rawNum.startsWith(   "-   ")||    rawNum.startsWith(   "-   "))    {    return    rawNum.trim();    }    	compilable	  [FE]  JsonParseException  	26	8	replace
31	[BUG]  [BUGGY]  if(rawNum.startsWith( "- ")||  rawNum.startsWith( "-))  {  return  rawNum.trim();  }  [CE]  unclosed  string  literal  [FE]              JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  if(rawNum.startsWith( "- ")||  rawNum.startsWith( "-))  {  return  rawNum.trim();  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	if(rawNum.startsWith( "- ")||  rawNum.startsWith( "-))  {  return  rawNum.trim();  }	  return    rawNum.trim();    if(rawNum.startsWith(   "-   ")||    rawNum.startsWith(   "-   "))    {    return    rawNum.trim();    }    	non-compiled	[CE]  unclosed  string  literal	26	None	replace
32	[BUG]  [BUGGY]  return  rawNum.toUpperCase();  return  rawNum.toUpperCase();  [CE]  unreachable  statement  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  return  rawNum.toUpperCase();  return  rawNum.toUpperCase();  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return    rawNum.toUpperCase();    return  rawNum.toUpperCase();	  	non-compiled	[CE]  unreachable  statement	30	None	add
33	[BUG]  [BUGGY]  return  rawNum.toUpperCase();  if(rawNum.startsWith( "-   "))  {  return  rawNum.toUpperCase();  }  [CE]  unreachable  statement  [FE]      JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  return  rawNum.toUpperCase();  if(rawNum.startsWith( "-   "))  {  return  rawNum.toUpperCase();  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return    rawNum.toUpperCase();    if(rawNum.startsWith( "-   "))  {  return  rawNum.toUpperCase();  }	  	non-compiled	[CE]  unreachable  statement	30	None	add
34	[BUG]  [BUGGY]  return  rawNum.toUpperCase();  if(rawNum.startsWith( "-   ")||  rawNum.startsWith( "-   "))  {  return  rawNum.toUpperCase();  }  [CE]  unreachable  statement  [FE]        JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  return  rawNum.toUpperCase();  if(rawNum.startsWith( "-   ")||  rawNum.startsWith( "-   "))  {  return  rawNum.toUpperCase();  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return    rawNum.toUpperCase();    if(rawNum.startsWith( "-   ")||  rawNum.startsWith( "-   "))  {  return  rawNum.toUpperCase();  }	  	non-compiled	[CE]  unreachable  statement	30	None	add
35	[BUG]  [BUGGY]  return  rawNum.toUpperCase();  if(rawNum.startsWith( "-   "))  {  return  rawNum.toUpperCase();  }  else  {  return  rawNum.toUpperCase();  }  [CE]  unreachable  statement  [FE]          JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  return  rawNum.toUpperCase();  if(rawNum.startsWith( "-   "))  {  return  rawNum.toUpperCase();  }  else  {  return  rawNum.toUpperCase();  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return    rawNum.toUpperCase();    if(rawNum.startsWith( "-   "))  {  return  rawNum.toUpperCase();  }  else  {  return  rawNum.toUpperCase();  }	  	non-compiled	[CE]  unreachable  statement	30	None	add
36	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]          JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  if(rawNum.startsWith( "- "))  {  return  rawNum.toLowerCase();  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	add	if(rawNum.startsWith( "- "))  {  return  rawNum.toLowerCase();  }	  return    rawNum.toLowerCase();    if(rawNum.startsWith(   "-   "))    {    return    rawNum.toLowerCase();    }    	compilable	  [FE]  JsonParseException  	2	8	replace
37	[BUG]  [BUGGY]  if(rawNum.startsWith( "- "))  {  return  rawNum.toLowerCase();  }  [FE]  JsonParseException  [FE]          JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  if(rawNum.startsWith( "- "))  {  return  rawNum.toLowerCase();  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	if(rawNum.startsWith( "- "))  {  return  rawNum.toLowerCase();  }	  return    rawNum.toLowerCase();    if(rawNum.startsWith(   "-   "))    {    return    rawNum.toLowerCase();    }    	compilable	  [FE]  JsonParseException  	2	8	replace
38	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]            JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  if(rawNum.startsWith( "- ")||  rawNum.startsWith( "- "))  {  return  rawNum.toLowerCase();  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	add	if(rawNum.startsWith( "- ")||  rawNum.startsWith( "- "))  {  return  rawNum.toLowerCase();  }	  return    rawNum.toLowerCase();    if(rawNum.startsWith(   "-   "))    {    return    rawNum.toLowerCase();    }    	compilable	  [FE]  JsonParseException  	2	8	replace
39	[BUG]  [BUGGY]  if(rawNum.startsWith( "- ")||  rawNum.startsWith( "- "))  {  return  rawNum.toLowerCase();  }  [FE]  JsonParseException  [FE]            JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  if(rawNum.startsWith( "- ")||  rawNum.startsWith( "- "))  {  return  rawNum.toLowerCase();  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	if(rawNum.startsWith( "- ")||  rawNum.startsWith( "- "))  {  return  rawNum.toLowerCase();  }	  return    rawNum.toLowerCase();    if(rawNum.startsWith(   "-   "))    {    return    rawNum.toLowerCase();    }    	compilable	  [FE]  JsonParseException  	2	8	replace
40	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]              JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  if(rawLen  <  1000)  {  return  rawNum.toLowerCase();  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	add	if(rawLen  <  1000)  {  return  rawNum.toLowerCase();  }	  return    rawNum.toLowerCase();    if(rawNum.startsWith(   "-   "))    {    return    rawNum.toLowerCase();    }    	compilable	  [FE]  JsonParseException  	2	8	replace
41	[BUG]  [BUGGY]  if(rawLen  <  1000)  {  return  rawNum.toLowerCase();  }  [FE]  JsonParseException  [FE]              JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  if(rawLen  <  1000)  {  return  rawNum.toLowerCase();  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	if(rawLen  <  1000)  {  return  rawNum.toLowerCase();  }	  return    rawNum.toLowerCase();    if(rawNum.startsWith(   "-   "))    {    return    rawNum.toLowerCase();    }    	compilable	  [FE]  JsonParseException  	2	8	replace
42	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]          if(rawNum.startsWith(   "-   ")||  rawLen  <  2)  {  return  String.format(   "Integer  with  %d  digits]   ",  1);  }  if(rawNum.startsWith( "-   ")||  rawLen  <  2)  {  return  String.format( "Integer  with  %d  digits]   ",  1);  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	add	                if(rawNum.startsWith(   "-   ")||    rawLen    <    2)    {    return    String.format(   "Integer    with    %d    digits]   ",    1);    }    if(rawNum.startsWith( "-   ")||  rawLen  <  2)  {  return  String.format( "Integer  with  %d  digits]   ",  1);  }	  	compilable	  [FE]  JsonParseException  	68	8	add
43	[BUG]  [BUGGY]          if(rawNum.startsWith(   "-   ")||  rawLen  <  2)  {  return  String.format(   "Integer  with  %d  digits]   ",  1);  }  if(rawNum.startsWith( "-   ")||  rawLen  <  2)  {  return  String.format( "Integer  with  %d  digits]   ",  1);  }  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]          if(rawNum.startsWith(   "-   ")||  rawLen  <  2)  {  return  String.format(   "Integer  with  %d  digits]   ",  1);  }  if(rawNum.startsWith( "-   ")||  rawLen  <  2)  {  return  String.format( "Integer  with  %d  digits]   ",  1);  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	                if(rawNum.startsWith(   "-   ")||    rawLen    <    2)    {    return    String.format(   "Integer    with    %d    digits]   ",    1);    }    if(rawNum.startsWith( "-   ")||  rawLen  <  2)  {  return  String.format( "Integer  with  %d  digits]   ",  1);  }	  	compilable	  [FE]  JsonParseException  	68	8	add
44	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  if(rawNum.startsWith(   "-   ")||  rawNum.startsWith(   "-   "))  {  return  String.format(   "Integer  with  %d  digits]   ",  rawLen);  }  if(rawNum.startsWith( "-   ")||  rawNum.startsWith( "-   "))  {  return  String.format( "Integer  with  %d  digits]   ",  rawLen);  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	add	if(rawNum.startsWith(   "-   ")||    rawNum.startsWith(   "-   "))    {    return    String.format(   "Integer    with    %d    digits]   ",    rawLen);    }    if(rawNum.startsWith( "-   ")||  rawNum.startsWith( "-   "))  {  return  String.format( "Integer  with  %d  digits]   ",  rawLen);  }	  	compilable	  [FE]  JsonParseException  	22	8	add
45	[BUG]  [BUGGY]  if(rawNum.startsWith(   "-   ")||  rawNum.startsWith(   "-   "))  {  return  String.format(   "Integer  with  %d  digits]   ",  rawLen);  }  if(rawNum.startsWith( "-   ")||  rawNum.startsWith( "-   "))  {  return  String.format( "Integer  with  %d  digits]   ",  rawLen);  }  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  if(rawNum.startsWith(   "-   ")||  rawNum.startsWith(   "-   "))  {  return  String.format(   "Integer  with  %d  digits]   ",  rawLen);  }  if(rawNum.startsWith( "-   ")||  rawNum.startsWith( "-   "))  {  return  String.format( "Integer  with  %d  digits]   ",  rawLen);  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	if(rawNum.startsWith(   "-   ")||    rawNum.startsWith(   "-   "))    {    return    String.format(   "Integer    with    %d    digits]   ",    rawLen);    }    if(rawNum.startsWith( "-   ")||  rawNum.startsWith( "-   "))  {  return  String.format( "Integer  with  %d  digits]   ",  rawLen);  }	  	compilable	  [FE]  JsonParseException  	22	8	add
46	[BUG]  [BUGGY]  String  rawNum  =  rawNum.substring(0,  rawLen  -  1);  [CE]  variable  rawNum  is  already  defined  in  method  _longIntegerDesc(String)  [FE]            JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  String  rawNum  =  rawNum.substring(0,  rawLen  -  1);  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	String  rawNum  =  rawNum.substring(0,  rawLen  -  1);	  String    rawNum    =    rawNum.substring(0,    rawLen);    	non-compiled	[CE]  variable  rawNum  is  already  defined  in  method  _longIntegerDesc(String)	8	None	replace
47	[BUG]  [BUGGY]  String  rawNum  =  rawNum.substring(0,  rawLen  +  1);  [CE]  variable  rawNum  is  already  defined  in  method  _longIntegerDesc(String)  [FE]              JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  String  rawNum  =  rawNum.substring(0,  rawLen  +  1);  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	String  rawNum  =  rawNum.substring(0,  rawLen  +  1);	  String    rawNum    =    rawNum.substring(0,    rawLen);    	non-compiled	[CE]  variable  rawNum  is  already  defined  in  method  _longIntegerDesc(String)	8	None	replace
48	[BUG]  [BUGGY]  String  rawNum  =  rawNum.substring(0,  rawLen  -  2);  [CE]  variable  rawNum  is  already  defined  in  method  _longIntegerDesc(String)  [FE]                JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  String  rawNum  =  rawNum.substring(0,  rawLen  -  2);  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	String  rawNum  =  rawNum.substring(0,  rawLen  -  2);	  String    rawNum    =    rawNum.substring(0,    rawLen);    	non-compiled	[CE]  variable  rawNum  is  already  defined  in  method  _longIntegerDesc(String)	8	None	replace
49	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  if(rawNum.startsWith(   "-   ")||  rawLen  <  2)  {  throw  new  IllegalArgumentException(   "   ");  }  if(rawNum.startsWith( "-   ")||  rawLen  <  2)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	add	if(rawNum.startsWith(   "-   ")||    rawLen    <    2)    {    throw    new    IllegalArgumentException(   "   ");    }    if(rawNum.startsWith( "-   ")||  rawLen  <  2)  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  JsonParseException  	62	8	add
50	[BUG]  [BUGGY]  if(rawNum.startsWith(   "-   ")||  rawLen  <  2)  {  throw  new  IllegalArgumentException(   "   ");  }  if(rawNum.startsWith( "-   ")||  rawLen  <  2)  {  throw  new  IllegalArgumentException( "   ");  }  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  if(rawNum.startsWith(   "-   ")||  rawLen  <  2)  {  throw  new  IllegalArgumentException(   "   ");  }  if(rawNum.startsWith( "-   ")||  rawLen  <  2)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	if(rawNum.startsWith(   "-   ")||    rawLen    <    2)    {    throw    new    IllegalArgumentException(   "   ");    }    if(rawNum.startsWith( "-   ")||  rawLen  <  2)  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  JsonParseException  	62	8	add
51	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  if(rawNum.startsWith(   "-   ")||  rawLen  <  2)  {  throw  new  IllegalArgumentException(   "   ");  }  if(rawNum.startsWith( ".-   ")||  rawLen  <  2)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	add	if(rawNum.startsWith(   "-   ")||    rawLen    <    2)    {    throw    new    IllegalArgumentException(   "   ");    }    if(rawNum.startsWith( ".-   ")||  rawLen  <  2)  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  JsonParseException  	62	8	add
52	[BUG]  [BUGGY]  if(rawNum.startsWith(   "-   ")||  rawLen  <  2)  {  throw  new  IllegalArgumentException(   "   ");  }  if(rawNum.startsWith( ".-   ")||  rawLen  <  2)  {  throw  new  IllegalArgumentException( "   ");  }  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  if(rawNum.startsWith(   "-   ")||  rawLen  <  2)  {  throw  new  IllegalArgumentException(   "   ");  }  if(rawNum.startsWith( ".-   ")||  rawLen  <  2)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	if(rawNum.startsWith(   "-   ")||    rawLen    <    2)    {    throw    new    IllegalArgumentException(   "   ");    }    if(rawNum.startsWith( ".-   ")||  rawLen  <  2)  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  JsonParseException  	62	8	add
53	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]                JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  return  rawLen  <  MAX_ERROR_TOKEN_LENGTH?  String.valueOf(rawNum):  null;  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	add	return  rawLen  <  MAX_ERROR_TOKEN_LENGTH?  String.valueOf(rawNum):  null;	  return    rawLen    <    =    MAX_ERROR_TOKEN_LENGTH?    String.valueOf(rawNum):    null;    	compilable	  [FE]  JsonParseException  	58	8	replace
54	[BUG]  [BUGGY]  return  rawLen  <  MAX_ERROR_TOKEN_LENGTH?  String.valueOf(rawNum):  null;  [FE]  JsonParseException  [FE]                JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  return  rawLen  <  MAX_ERROR_TOKEN_LENGTH?  String.valueOf(rawNum):  null;  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return  rawLen  <  MAX_ERROR_TOKEN_LENGTH?  String.valueOf(rawNum):  null;	  return    rawLen    <    =    MAX_ERROR_TOKEN_LENGTH?    String.valueOf(rawNum):    null;    	compilable	  [FE]  JsonParseException  	58	8	replace
55	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]                  JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  return  rawLen  ==  MAX_ERROR_TOKEN_LENGTH?  String.valueOf(rawNum):  null;  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	add	return  rawLen  ==  MAX_ERROR_TOKEN_LENGTH?  String.valueOf(rawNum):  null;	  return    rawLen    <    =    MAX_ERROR_TOKEN_LENGTH?    String.valueOf(rawNum):    null;    	compilable	  [FE]  JsonParseException  	58	8	replace
56	[BUG]  [BUGGY]  return  rawLen  ==  MAX_ERROR_TOKEN_LENGTH?  String.valueOf(rawNum):  null;  [FE]  JsonParseException  [FE]                  JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  return  rawLen  ==  MAX_ERROR_TOKEN_LENGTH?  String.valueOf(rawNum):  null;  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return  rawLen  ==  MAX_ERROR_TOKEN_LENGTH?  String.valueOf(rawNum):  null;	  return    rawLen    <    =    MAX_ERROR_TOKEN_LENGTH?    String.valueOf(rawNum):    null;    	compilable	  [FE]  JsonParseException  	58	8	replace
57	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]        JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  if(rawNum.startsWith( "- ")||  rawNum.startsWith( "-- "))  {  return  rawNum.trim();  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	add	if(rawNum.startsWith( "- ")||  rawNum.startsWith( "-- "))  {  return  rawNum.trim();  }	  return    rawNum.trim();    if(rawNum.trim().equals(   "-   "))    {    return    rawNum.trim();    }    	compilable	  [FE]  JsonParseException  	55	8	replace
58	[BUG]  [BUGGY]  if(rawNum.startsWith( "- ")||  rawNum.startsWith( "-- "))  {  return  rawNum.trim();  }  [FE]  JsonParseException  [FE]        JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  if(rawNum.startsWith( "- ")||  rawNum.startsWith( "-- "))  {  return  rawNum.trim();  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	if(rawNum.startsWith( "- ")||  rawNum.startsWith( "-- "))  {  return  rawNum.trim();  }	  return    rawNum.trim();    if(rawNum.trim().equals(   "-   "))    {    return    rawNum.trim();    }    	compilable	  [FE]  JsonParseException  	55	8	replace
59	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  _currToken  =  JsonToken.VALUE_STRING;  _currToken  =  JsonToken.VALUE_STRING;  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	add	_currToken    =    JsonToken.VALUE_STRING;    _currToken  =  JsonToken.VALUE_STRING;	  	compilable	  [FE]  JsonParseException  	38	8	add
60	[BUG]  [BUGGY]  _currToken  =  JsonToken.VALUE_STRING;  _currToken  =  JsonToken.VALUE_STRING;  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  _currToken  =  JsonToken.VALUE_STRING;  _currToken  =  JsonToken.VALUE_STRING;  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	_currToken    =    JsonToken.VALUE_STRING;    _currToken  =  JsonToken.VALUE_STRING;	  	compilable	  [FE]  JsonParseException  	38	8	add
61	[BUG]  [BUGGY]  _currToken  =  JsonToken.VALUE_STRING;  CharacterToken  _currToken  =  JsonToken.VALUE_STRING;  [CE]  cannot  find  symbol  [FE]      JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  _currToken  =  JsonToken.VALUE_STRING;  CharacterToken  _currToken  =  JsonToken.VALUE_STRING;  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	_currToken    =    JsonToken.VALUE_STRING;    CharacterToken  _currToken  =  JsonToken.VALUE_STRING;	  	non-compiled	[CE]  cannot  find  symbol	38	None	add
62	[BUG]  [BUGGY]  _currToken  =  JsonToken.VALUE_STRING;  ||  rawNum  ==  JsonToken.VALUE_STRING;  [CE]  illegal  start  of  expression  [FE]        JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  _currToken  =  JsonToken.VALUE_STRING;  ||  rawNum  ==  JsonToken.VALUE_STRING;  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	_currToken    =    JsonToken.VALUE_STRING;    ||  rawNum  ==  JsonToken.VALUE_STRING;	  	non-compiled	[CE]  illegal  start  of  expression	38	None	add
63	[BUG]  [BUGGY]  _currToken  =  JsonToken.VALUE_STRING;  _currToken  =  JsonToken.VALUE_StrING;  [CE]  cannot  find  symbol  VALUE_StrING  [FE]          JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  _currToken  =  JsonToken.VALUE_STRING;  _currToken  =  JsonToken.VALUE_StrING;  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	_currToken    =    JsonToken.VALUE_STRING;    _currToken  =  JsonToken.VALUE_StrING;	  	non-compiled	[CE]  cannot  find  symbol  VALUE_StrING	38	None	add
64	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]              JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  if(rawLen  <  1000)  {  return  rawNum.trim();  }  else  {  return  rawNum.trim();  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	add	if(rawLen  <  1000)  {  return  rawNum.trim();  }  else  {  return  rawNum.trim();  }	  return    rawNum.trim();    if(rawNum.startsWith(   "-   "))    {    return    rawNum.trim();    }    else    {    return    rawNum.trim();    }    	compilable	  [FE]  JsonParseException  	28	8	replace
65	[BUG]  [BUGGY]  if(rawLen  <  1000)  {  return  rawNum.trim();  }  else  {  return  rawNum.trim();  }  [FE]  JsonParseException  [FE]              JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  if(rawLen  <  1000)  {  return  rawNum.trim();  }  else  {  return  rawNum.trim();  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	if(rawLen  <  1000)  {  return  rawNum.trim();  }  else  {  return  rawNum.trim();  }	  return    rawNum.trim();    if(rawNum.startsWith(   "-   "))    {    return    rawNum.trim();    }    else    {    return    rawNum.trim();    }    	compilable	  [FE]  JsonParseException  	28	8	replace
66	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]                JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  if(rawLen  <  1)  {  return  rawNum.trim();  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	add	if(rawLen  <  1)  {  return  rawNum.trim();  }	  return    rawNum.trim();    if(rawNum.startsWith(   "-   "))    {    return    rawNum.trim();    }    else    {    return    rawNum.trim();    }    	compilable	  [FE]  JsonParseException  	28	8	replace
67	[BUG]  [BUGGY]  if(rawLen  <  1)  {  return  rawNum.trim();  }  [FE]  JsonParseException  [FE]                JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  if(rawLen  <  1)  {  return  rawNum.trim();  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	if(rawLen  <  1)  {  return  rawNum.trim();  }	  return    rawNum.trim();    if(rawNum.startsWith(   "-   "))    {    return    rawNum.trim();    }    else    {    return    rawNum.trim();    }    	compilable	  [FE]  JsonParseException  	28	8	replace
68	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]        JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  if(rawLen  <  1000)  {  return  rawNum.substring(0,  rawLen);  }  else  {  return  String.format( "[Integer  with  %d  digits] ",  rawLen);  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	add	if(rawLen  <  1000)  {  return  rawNum.substring(0,  rawLen);  }  else  {  return  String.format( "[Integer  with  %d  digits] ",  rawLen);  }	  return    rawNum.substring(0,    rawLen);    if(rawNum.startsWith(   "-   "))    {    return    rawNum.substring(0,    rawLen);    }    else    {    return    String.format(   "[Integer    with    %d    digits]   ",    rawLen);    }    	compilable	  [FE]  JsonParseException  	60	8	replace
69	[BUG]  [BUGGY]  if(rawLen  <  1000)  {  return  rawNum.substring(0,  rawLen);  }  else  {  return  String.format( "[Integer  with  %d  digits] ",  rawLen);  }  [FE]  JsonParseException  [FE]        JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  if(rawLen  <  1000)  {  return  rawNum.substring(0,  rawLen);  }  else  {  return  String.format( "[Integer  with  %d  digits] ",  rawLen);  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	if(rawLen  <  1000)  {  return  rawNum.substring(0,  rawLen);  }  else  {  return  String.format( "[Integer  with  %d  digits] ",  rawLen);  }	  return    rawNum.substring(0,    rawLen);    if(rawNum.startsWith(   "-   "))    {    return    rawNum.substring(0,    rawLen);    }    else    {    return    String.format(   "[Integer    with    %d    digits]   ",    rawLen);    }    	compilable	  [FE]  JsonParseException  	60	8	replace
70	[BUG]  [BUGGY]  String  rawNum  =  rawNum.substring(0,  rawLen);  if(rawNum.startsWith( "- "))  {  return  rawNum.substring(0,  rawLen);  }  else  {  return  String.format( "[Integer  with  %d  digits] "  [CE]  [FE]          JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  String  rawNum  =  rawNum.substring(0,  rawLen);  if(rawNum.startsWith( "- "))  {  return  rawNum.substring(0,  rawLen);  }  else  {  return  String.format( "[Integer  with  %d  digits] "  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	String  rawNum  =  rawNum.substring(0,  rawLen);  if(rawNum.startsWith( "- "))  {  return  rawNum.substring(0,  rawLen);  }  else  {  return  String.format( "[Integer  with  %d  digits] "	  return    rawNum.substring(0,    rawLen);    if(rawNum.startsWith(   "-   "))    {    return    rawNum.substring(0,    rawLen);    }    else    {    return    String.format(   "[Integer    with    %d    digits]   ",    rawLen);    }    	non-compiled	[CE]  	60	None	replace
71	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  return  rawNum.substring(0,  rawLen  +  2);  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	add	return  rawNum.substring(0,  rawLen  +  2);	  return    rawNum.substring(0,    rawLen    +    1);    	compilable	  [FE]  StringIndexOutOfBoundsException  	5	8	replace
72	[BUG]  [BUGGY]  return  rawNum.substring(0,  rawLen  +  2);  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  return  rawNum.substring(0,  rawLen  +  2);  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return  rawNum.substring(0,  rawLen  +  2);	  return    rawNum.substring(0,    rawLen    +    1);    	compilable	  [FE]  StringIndexOutOfBoundsException  	5	8	replace
73	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  return  rawNum.substring(0,  rawLen  +  3);  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	add	return  rawNum.substring(0,  rawLen  +  3);	  return    rawNum.substring(0,    rawLen    +    1);    	compilable	  [FE]  StringIndexOutOfBoundsException  	5	8	replace
74	[BUG]  [BUGGY]  return  rawNum.substring(0,  rawLen  +  3);  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  return  rawNum.substring(0,  rawLen  +  3);  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return  rawNum.substring(0,  rawLen  +  3);	  return    rawNum.substring(0,    rawLen    +    1);    	compilable	  [FE]  StringIndexOutOfBoundsException  	5	8	replace
75	[BUG]  [BUGGY]  String  rawNum  =  rawNum.substring(0,  rawLen);  if(rawNum!=  null)  {  return  rawNum.substring(0,  rawLen);  }  [CE]  variable  rawNum  is  already  defined  in  method  _longIntegerDesc(String)  [FE]        JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  String  rawNum  =  rawNum.substring(0,  rawLen);  if(rawNum!=  null)  {  return  rawNum.substring(0,  rawLen);  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	String  rawNum  =  rawNum.substring(0,  rawLen);  if(rawNum!=  null)  {  return  rawNum.substring(0,  rawLen);  }	  return    rawNum.substring(0,    rawLen);    if(rawNum!=    null)    {    return    rawNum.substring(0,    rawLen);    }    	non-compiled	[CE]  variable  rawNum  is  already  defined  in  method  _longIntegerDesc(String)	37	None	replace
76	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]          JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  String  digits  =  rawNum.substring(0,  rawLen);  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	add	String  digits  =  rawNum.substring(0,  rawLen);	  return    rawNum.substring(0,    rawLen);    if(rawNum!=    null)    {    return    rawNum.substring(0,    rawLen);    }    	compilable	  [FE]  JsonParseException  	37	8	replace
77	[BUG]  [BUGGY]  String  digits  =  rawNum.substring(0,  rawLen);  [FE]  JsonParseException  [FE]          JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  String  digits  =  rawNum.substring(0,  rawLen);  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	String  digits  =  rawNum.substring(0,  rawLen);	  return    rawNum.substring(0,    rawLen);    if(rawNum!=    null)    {    return    rawNum.substring(0,    rawLen);    }    	compilable	  [FE]  JsonParseException  	37	8	replace
78	[BUG]  [BUGGY]  String  rawNum  =  rawNum.substring(0,  rawLen);  if(rawNum  ==  null)  {  return  rawNum.substring(0,  rawLen);  }  [CE]  variable  rawNum  is  already  defined  in  method  _longIntegerDesc(String)  [FE]            JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  String  rawNum  =  rawNum.substring(0,  rawLen);  if(rawNum  ==  null)  {  return  rawNum.substring(0,  rawLen);  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	String  rawNum  =  rawNum.substring(0,  rawLen);  if(rawNum  ==  null)  {  return  rawNum.substring(0,  rawLen);  }	  return    rawNum.substring(0,    rawLen);    if(rawNum!=    null)    {    return    rawNum.substring(0,    rawLen);    }    	non-compiled	[CE]  variable  rawNum  is  already  defined  in  method  _longIntegerDesc(String)	37	None	replace
79	[BUG]  [BUGGY]  return  rawNum.substring(0,  rawLen  -  1);  return  rawNum.substring(0,  rawLen  -  1);  [CE]  unreachable  statement  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  return  rawNum.substring(0,  rawLen  -  1);  return  rawNum.substring(0,  rawLen  -  1);  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return    rawNum.substring(0,    rawLen    -    1);    return  rawNum.substring(0,  rawLen  -  1);	  	non-compiled	[CE]  unreachable  statement	6	None	add
80	[BUG]  [BUGGY]  return  rawNum.substring(0,  rawLen  -  1);  String  rawNum  =  rawNum.substring(0,  rawLen  -  1);  [CE]  variable  rawNum  is  already  defined  in  method  _longIntegerDesc(String)  [FE]      JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  return  rawNum.substring(0,  rawLen  -  1);  String  rawNum  =  rawNum.substring(0,  rawLen  -  1);  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return    rawNum.substring(0,    rawLen    -    1);    String  rawNum  =  rawNum.substring(0,  rawLen  -  1);	  	non-compiled	[CE]  variable  rawNum  is  already  defined  in  method  _longIntegerDesc(String)	6	None	add
81	[BUG]  [BUGGY]  return  rawNum.substring(0,  rawLen  -  1);  String  rawNum  =  _currToken.substring(0,  rawLen  -  1);  [CE]  variable  rawNum  is  already  defined  in  method  _longIntegerDesc(String)  [FE]        JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  return  rawNum.substring(0,  rawLen  -  1);  String  rawNum  =  _currToken.substring(0,  rawLen  -  1);  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return    rawNum.substring(0,    rawLen    -    1);    String  rawNum  =  _currToken.substring(0,  rawLen  -  1);	  	non-compiled	[CE]  variable  rawNum  is  already  defined  in  method  _longIntegerDesc(String)	6	None	add
82	[BUG]  [BUGGY]  return  rawNum.substring(0,  rawLen  -  1);  String  rawNum  =  _parseString(rawNum);  return  rawNum.substring(0,  rawLen  -  1);  [CE]  variable  rawNum  is  already  defined  in  method  _longIntegerDesc(String)  [FE]          JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  return  rawNum.substring(0,  rawLen  -  1);  String  rawNum  =  _parseString(rawNum);  return  rawNum.substring(0,  rawLen  -  1);  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return    rawNum.substring(0,    rawLen    -    1);    String  rawNum  =  _parseString(rawNum);  return  rawNum.substring(0,  rawLen  -  1);	  	non-compiled	[CE]  variable  rawNum  is  already  defined  in  method  _longIntegerDesc(String)	6	None	add
83	[BUG]  [BUGGY]  return  rawNum.substring(0,  rawLen  -  1);  String  rawNum  =  rawNum.substring(0,  rawLen  -  1);  return  rawNum.substring(0,  rawLen  -  1);  [CE]  variable  rawNum  is  already  defined  in  method  _longIntegerDesc(String)  [FE]            JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  return  rawNum.substring(0,  rawLen  -  1);  String  rawNum  =  rawNum.substring(0,  rawLen  -  1);  return  rawNum.substring(0,  rawLen  -  1);  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return    rawNum.substring(0,    rawLen    -    1);    String  rawNum  =  rawNum.substring(0,  rawLen  -  1);  return  rawNum.substring(0,  rawLen  -  1);	  	non-compiled	[CE]  variable  rawNum  is  already  defined  in  method  _longIntegerDesc(String)	6	None	add
84	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]        JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  if(rawLen  ==  0)  {  return  rawNum.trim();  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	add	if(rawLen  ==  0)  {  return  rawNum.trim();  }	  return    rawNum.trim();    if(rawNum!=    null)    {    return    rawNum.trim();    }    	compilable	  [FE]  JsonParseException  	34	8	replace
85	[BUG]  [BUGGY]  if(rawLen  ==  0)  {  return  rawNum.trim();  }  [FE]  JsonParseException  [FE]        JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  if(rawLen  ==  0)  {  return  rawNum.trim();  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	if(rawLen  ==  0)  {  return  rawNum.trim();  }	  return    rawNum.trim();    if(rawNum!=    null)    {    return    rawNum.trim();    }    	compilable	  [FE]  JsonParseException  	34	8	replace
86	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]          JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  if(rawLen  >  0)  {  return  rawNum.trim();  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	add	if(rawLen  >  0)  {  return  rawNum.trim();  }	  return    rawNum.trim();    if(rawNum!=    null)    {    return    rawNum.trim();    }    	compilable	  [FE]  JsonParseException  	34	8	replace
87	[BUG]  [BUGGY]  if(rawLen  >  0)  {  return  rawNum.trim();  }  [FE]  JsonParseException  [FE]          JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  if(rawLen  >  0)  {  return  rawNum.trim();  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	if(rawLen  >  0)  {  return  rawNum.trim();  }	  return    rawNum.trim();    if(rawNum!=    null)    {    return    rawNum.trim();    }    	compilable	  [FE]  JsonParseException  	34	8	replace
88	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]                  JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  return  rawLen  +  rawNum.toString();  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	add	return  rawLen  +  rawNum.toString();	  return    rawLen    +    _longIntegerDesc.toString();    	compilable	  [FE]  JsonParseException  	47	8	replace
89	[BUG]  [BUGGY]  return  rawLen  +  rawNum.toString();  [FE]  JsonParseException  [FE]                  JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  return  rawLen  +  rawNum.toString();  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return  rawLen  +  rawNum.toString();	  return    rawLen    +    _longIntegerDesc.toString();    	compilable	  [FE]  JsonParseException  	47	8	replace
90	[BUG]  [BUGGY]  return  rawLen  +  _longNum.toString();  [CE]  cannot  find  symbol  _longNum  [FE]                    JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  return  rawLen  +  _longNum.toString();  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return  rawLen  +  _longNum.toString();	  return    rawLen    +    _longIntegerDesc.toString();    	non-compiled	[CE]  cannot  find  symbol  _longNum	47	None	replace
91	[BUG]  [BUGGY]  return  rawLen  +  this._longIntegerDesc.toString();  [CE]  cannot  find  symbol  _longIntegerDesc  [FE]                      JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  return  rawLen  +  this._longIntegerDesc.toString();  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return  rawLen  +  this._longIntegerDesc.toString();	  return    rawLen    +    _longIntegerDesc.toString();    	non-compiled	[CE]  cannot  find  symbol  _longIntegerDesc	47	None	replace
92	[BUG]  [BUGGY]  ||  rawLen  <  2)  {  return  String.format( "Integer  with  %d  digits] ",  1);  }  [CE]  illegal  start  of  expression  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  ||  rawLen  <  2)  {  return  String.format( "Integer  with  %d  digits] ",  1);  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	||  rawLen  <  2)  {  return  String.format( "Integer  with  %d  digits] ",  1);  }	          if(rawNum.startsWith(   "-   ")||    rawLen    <    2)    {    return    String.format(   "Integer    with    %d    digits]   ",    1);    }    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
93	[BUG]  [BUGGY]  ||  rawNum.startsWith( "- "))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  ||  rawNum.startsWith( "- "))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	||  rawNum.startsWith( "- "))  {  throw  new  IllegalArgumentException( " ");  }	  if(rawNum.startsWith(   "-   ")||    rawNum.startsWith(   "-   "))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
94	[BUG]  [BUGGY]  ||  rawNum.startsWith( ".000 "))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]      JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  ||  rawNum.startsWith( ".000 "))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	||  rawNum.startsWith( ".000 "))  {  throw  new  IllegalArgumentException( " ");  }	  if(rawNum.startsWith(   "-   ")||    rawNum.startsWith(   "-   "))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
95	[BUG]  [BUGGY]  ||  rawNum.startsWith( ".0 "))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]        JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  ||  rawNum.startsWith( ".0 "))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	||  rawNum.startsWith( ".0 "))  {  throw  new  IllegalArgumentException( " ");  }	  if(rawNum.startsWith(   "-   ")||    rawNum.startsWith(   "-   "))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
96	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]        JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  String  digits  =  rawNum.substring(0,  rawLen);  return  digits.substring(0,  rawLen);  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	add	String  digits  =  rawNum.substring(0,  rawLen);  return  digits.substring(0,  rawLen);	  return    rawNum.substring(0,    rawLen);    return    rawNum.substring(0,    rawLen);    	compilable	  [FE]  JsonParseException  	9	8	replace
97	[BUG]  [BUGGY]  String  digits  =  rawNum.substring(0,  rawLen);  return  digits.substring(0,  rawLen);  [FE]  JsonParseException  [FE]        JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  String  digits  =  rawNum.substring(0,  rawLen);  return  digits.substring(0,  rawLen);  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	String  digits  =  rawNum.substring(0,  rawLen);  return  digits.substring(0,  rawLen);	  return    rawNum.substring(0,    rawLen);    return    rawNum.substring(0,    rawLen);    	compilable	  [FE]  JsonParseException  	9	8	replace
98	[BUG]  [BUGGY]  String  rawNum  =  rawNum.substring(0,  rawLen);  return  rawNum.substring(0,  rawLen);  [CE]  variable  rawNum  is  already  defined  in  method  _longIntegerDesc(String)  [FE]          JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  String  rawNum  =  rawNum.substring(0,  rawLen);  return  rawNum.substring(0,  rawLen);  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	String  rawNum  =  rawNum.substring(0,  rawLen);  return  rawNum.substring(0,  rawLen);	  return    rawNum.substring(0,    rawLen);    return    rawNum.substring(0,    rawLen);    	non-compiled	[CE]  variable  rawNum  is  already  defined  in  method  _longIntegerDesc(String)	9	None	replace
99	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  if(rawNum.startsWith(   "-   ")||  rawNum.startsWith(   "-   "))  {  throw  new  IllegalArgumentException(   "   ");  }  if(rawNum.startsWith( "-   ")||  rawNum.startsWith( "-   "))  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	add	if(rawNum.startsWith(   "-   ")||    rawNum.startsWith(   "-   "))    {    throw    new    IllegalArgumentException(   "   ");    }    if(rawNum.startsWith( "-   ")||  rawNum.startsWith( "-   "))  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  JsonParseException  	18	8	add
100	[BUG]  [BUGGY]  if(rawNum.startsWith(   "-   ")||  rawNum.startsWith(   "-   "))  {  throw  new  IllegalArgumentException(   "   ");  }  if(rawNum.startsWith( "-   ")||  rawNum.startsWith( "-   "))  {  throw  new  IllegalArgumentException( "   ");  }  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  if(rawNum.startsWith(   "-   ")||  rawNum.startsWith(   "-   "))  {  throw  new  IllegalArgumentException(   "   ");  }  if(rawNum.startsWith( "-   ")||  rawNum.startsWith( "-   "))  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	if(rawNum.startsWith(   "-   ")||    rawNum.startsWith(   "-   "))    {    throw    new    IllegalArgumentException(   "   ");    }    if(rawNum.startsWith( "-   ")||  rawNum.startsWith( "-   "))  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  JsonParseException  	18	8	add
101	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]            JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  if(rawLen  <  1)  {  return  rawNum.toLowerCase();  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	add	if(rawLen  <  1)  {  return  rawNum.toLowerCase();  }	  return    rawNum.toLowerCase();    if(rawNum.startsWith(   "-   "))    {    return    rawNum.toLowerCase();    }    else    {    return    rawNum.toLowerCase();    }    	compilable	  [FE]  JsonParseException  	3	8	replace
102	[BUG]  [BUGGY]  if(rawLen  <  1)  {  return  rawNum.toLowerCase();  }  [FE]  JsonParseException  [FE]            JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  if(rawLen  <  1)  {  return  rawNum.toLowerCase();  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	if(rawLen  <  1)  {  return  rawNum.toLowerCase();  }	  return    rawNum.toLowerCase();    if(rawNum.startsWith(   "-   "))    {    return    rawNum.toLowerCase();    }    else    {    return    rawNum.toLowerCase();    }    	compilable	  [FE]  JsonParseException  	3	8	replace
103	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]              JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  if(rawLen  >  1000)  {  return  rawNum.toLowerCase();  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	add	if(rawLen  >  1000)  {  return  rawNum.toLowerCase();  }	  return    rawNum.toLowerCase();    if(rawNum.startsWith(   "-   "))    {    return    rawNum.toLowerCase();    }    else    {    return    rawNum.toLowerCase();    }    	compilable	  [FE]  JsonParseException  	3	8	replace
104	[BUG]  [BUGGY]  if(rawLen  >  1000)  {  return  rawNum.toLowerCase();  }  [FE]  JsonParseException  [FE]              JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  if(rawLen  >  1000)  {  return  rawNum.toLowerCase();  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	if(rawLen  >  1000)  {  return  rawNum.toLowerCase();  }	  return    rawNum.toLowerCase();    if(rawNum.startsWith(   "-   "))    {    return    rawNum.toLowerCase();    }    else    {    return    rawNum.toLowerCase();    }    	compilable	  [FE]  JsonParseException  	3	8	replace
105	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]                JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  if(rawLen  ==  0)  {  return  rawNum.toLowerCase();  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	add	if(rawLen  ==  0)  {  return  rawNum.toLowerCase();  }	  return    rawNum.toLowerCase();    if(rawNum.startsWith(   "-   "))    {    return    rawNum.toLowerCase();    }    else    {    return    rawNum.toLowerCase();    }    	compilable	  [FE]  JsonParseException  	3	8	replace
106	[BUG]  [BUGGY]  if(rawLen  ==  0)  {  return  rawNum.toLowerCase();  }  [FE]  JsonParseException  [FE]                JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  if(rawLen  ==  0)  {  return  rawNum.toLowerCase();  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	if(rawLen  ==  0)  {  return  rawNum.toLowerCase();  }	  return    rawNum.toLowerCase();    if(rawNum.startsWith(   "-   "))    {    return    rawNum.toLowerCase();    }    else    {    return    rawNum.toLowerCase();    }    	compilable	  [FE]  JsonParseException  	3	8	replace
107	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  return  rawNum.substring(0,  rawLen).toUpperCase();  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	add	return  rawNum.substring(0,  rawLen).toUpperCase();	  return    rawNum.toUpperCase();    	compilable	  [FE]  JsonParseException  	31	8	replace
108	[BUG]  [BUGGY]  return  rawNum.substring(0,  rawLen).toUpperCase();  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  return  rawNum.substring(0,  rawLen).toUpperCase();  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return  rawNum.substring(0,  rawLen).toUpperCase();	  return    rawNum.toUpperCase();    	compilable	  [FE]  JsonParseException  	31	8	replace
109	[BUG]  [BUGGY]  return  rawNum.toUpperCase(Locale.ENGLISH);  [CE]  cannot  find  symbol  Locale  [FE]      JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  return  rawNum.toUpperCase(Locale.ENGLISH);  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return  rawNum.toUpperCase(Locale.ENGLISH);	  return    rawNum.toUpperCase();    	non-compiled	[CE]  cannot  find  symbol  Locale	31	None	replace
110	[BUG]  [BUGGY]  if(rawNum.startsWith( "- ")||  rawNum.startsWith( "-))  {  return  rawNum.toLowerCase();  }  [CE]  unclosed  string  literal  [FE]        JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  if(rawNum.startsWith( "- ")||  rawNum.startsWith( "-))  {  return  rawNum.toLowerCase();  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	if(rawNum.startsWith( "- ")||  rawNum.startsWith( "-))  {  return  rawNum.toLowerCase();  }	  return    rawNum.toLowerCase();    if(rawNum.startsWith(   "-   ")||    rawNum.startsWith(   "-   "))    {    return    rawNum.toLowerCase();    }    	non-compiled	[CE]  unclosed  string  literal	53	None	replace
111	[BUG]  [BUGGY]  return  rawLen.substring(0,  rawLen.length());  [CE]  int  cannot  be  dereferenced  [FE]              JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  return  rawLen.substring(0,  rawLen.length());  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return  rawLen.substring(0,  rawLen.length());	  return    rawLen.substring(0,    rawLen.length()    -    1);    	non-compiled	[CE]  int  cannot  be  dereferenced	13	None	replace
112	[BUG]  [BUGGY]  return  rawLen.substring(0,  rawNum.length()  -  1);  [CE]  int  cannot  be  dereferenced  [FE]                JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  return  rawLen.substring(0,  rawNum.length()  -  1);  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return  rawLen.substring(0,  rawNum.length()  -  1);	  return    rawLen.substring(0,    rawLen.length()    -    1);    	non-compiled	[CE]  int  cannot  be  dereferenced	13	None	replace
113	[BUG]  [BUGGY]  return  rawNum.substring(0,  rawLen.length()  -  1);  [CE]  int  cannot  be  dereferenced  [FE]                  JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  return  rawNum.substring(0,  rawLen.length()  -  1);  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return  rawNum.substring(0,  rawLen.length()  -  1);	  return    rawLen.substring(0,    rawLen.length()    -    1);    	non-compiled	[CE]  int  cannot  be  dereferenced	13	None	replace
114	[BUG]  [BUGGY]  return  rawLen  +  _longIntegerDesc(rawNum);  return  rawLen  +  _longIntegerDesc(rawNum);  [CE]  unreachable  statement  [FE]    StackOverflowError    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  return  rawLen  +  _longIntegerDesc(rawNum);  return  rawLen  +  _longIntegerDesc(rawNum);  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return    rawLen    +    _longIntegerDesc(rawNum);    return  rawLen  +  _longIntegerDesc(rawNum);	  	non-compiled	[CE]  unreachable  statement	44	None	add
115	[BUG]  [BUGGY]  return  rawLen  +  _longIntegerDesc(rawNum);  if(rawLen  ==  0)  {  return  rawLen  +  _longIntegerDesc(rawNum);  }  [CE]  unreachable  statement  [FE]      StackOverflowError    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  return  rawLen  +  _longIntegerDesc(rawNum);  if(rawLen  ==  0)  {  return  rawLen  +  _longIntegerDesc(rawNum);  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return    rawLen    +    _longIntegerDesc(rawNum);    if(rawLen  ==  0)  {  return  rawLen  +  _longIntegerDesc(rawNum);  }	  	non-compiled	[CE]  unreachable  statement	44	None	add
116	[BUG]  [BUGGY]  return  rawLen  +  _longIntegerDesc(rawNum);  int  rawLen  =  _integerDesc(rawNum);  [CE]  variable  rawLen  is  already  defined  in  method  _longIntegerDesc(String)  [FE]        StackOverflowError    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  return  rawLen  +  _longIntegerDesc(rawNum);  int  rawLen  =  _integerDesc(rawNum);  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return    rawLen    +    _longIntegerDesc(rawNum);    int  rawLen  =  _integerDesc(rawNum);	  	non-compiled	[CE]  variable  rawLen  is  already  defined  in  method  _longIntegerDesc(String)	44	None	add
117	[BUG]  [BUGGY]  return  rawLen  +  _longIntegerDesc(rawNum);  if(rawLen  ==  0)  {  return  rawLen  +  _longIntegerDesc(rawNum);  }  else  {  return  rawLen  +  _longIntegerDesc(rawNum);  }  [CE]  unreachable  statement  [FE]          StackOverflowError    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  return  rawLen  +  _longIntegerDesc(rawNum);  if(rawLen  ==  0)  {  return  rawLen  +  _longIntegerDesc(rawNum);  }  else  {  return  rawLen  +  _longIntegerDesc(rawNum);  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return    rawLen    +    _longIntegerDesc(rawNum);    if(rawLen  ==  0)  {  return  rawLen  +  _longIntegerDesc(rawNum);  }  else  {  return  rawLen  +  _longIntegerDesc(rawNum);  }	  	non-compiled	[CE]  unreachable  statement	44	None	add
118	[BUG]  [BUGGY]  return  rawLen  +  _longIntegerDesc(rawNum);  String  rawLen  =  _longIntegerDesc(rawNum);  [CE]  variable  rawLen  is  already  defined  in  method  _longIntegerDesc(String)  [FE]            StackOverflowError    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  return  rawLen  +  _longIntegerDesc(rawNum);  String  rawLen  =  _longIntegerDesc(rawNum);  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return    rawLen    +    _longIntegerDesc(rawNum);    String  rawLen  =  _longIntegerDesc(rawNum);	  	non-compiled	[CE]  variable  rawLen  is  already  defined  in  method  _longIntegerDesc(String)	44	None	add
119	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]        JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  if(rawLen  >  0)  {  return  rawNum.toLowerCase();  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	add	if(rawLen  >  0)  {  return  rawNum.toLowerCase();  }	  return    rawNum.toLowerCase();    if(rawNum!=    null)    {    return    rawNum.toLowerCase();    }    	compilable	  [FE]  JsonParseException  	42	8	replace
120	[BUG]  [BUGGY]  if(rawLen  >  0)  {  return  rawNum.toLowerCase();  }  [FE]  JsonParseException  [FE]        JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  if(rawLen  >  0)  {  return  rawNum.toLowerCase();  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	if(rawLen  >  0)  {  return  rawNum.toLowerCase();  }	  return    rawNum.toLowerCase();    if(rawNum!=    null)    {    return    rawNum.toLowerCase();    }    	compilable	  [FE]  JsonParseException  	42	8	replace
121	[BUG]  [BUGGY]  return  rawLen  <  =  MAX_ERROR_TOKEN_LENGTH?  String.valueOf(rawNum):  rawLen;  [CE]  illegal  start  of  expression  [FE]              JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  return  rawLen  <  =  MAX_ERROR_TOKEN_LENGTH?  String.valueOf(rawNum):  rawLen;  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return  rawLen  <  =  MAX_ERROR_TOKEN_LENGTH?  String.valueOf(rawNum):  rawLen;	  return    rawLen    <    =    MAX_ERROR_TOKEN_LENGTH?    String.valueOf(rawNum):    rawNum;    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
122	[BUG]  [BUGGY]  return  rawLen  <  MAX_ERROR_TOKEN_LENGTH?  String.valueOf(rawNum):  rawLen;  [CE]  incompatible  types  [FE]                JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  return  rawLen  <  MAX_ERROR_TOKEN_LENGTH?  String.valueOf(rawNum):  rawLen;  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return  rawLen  <  MAX_ERROR_TOKEN_LENGTH?  String.valueOf(rawNum):  rawLen;	  return    rawLen    <    =    MAX_ERROR_TOKEN_LENGTH?    String.valueOf(rawNum):    rawNum;    	non-compiled	[CE]  incompatible  types	57	None	replace
123	[BUG]  [BUGGY]  return  rawLen  ==  MAX_ERROR_TOKEN_LENGTH?  String.valueOf(rawNum):  rawLen;  [CE]  incompatible  types  [FE]                  JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  return  rawLen  ==  MAX_ERROR_TOKEN_LENGTH?  String.valueOf(rawNum):  rawLen;  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return  rawLen  ==  MAX_ERROR_TOKEN_LENGTH?  String.valueOf(rawNum):  rawLen;	  return    rawLen    <    =    MAX_ERROR_TOKEN_LENGTH?    String.valueOf(rawNum):    rawNum;    	non-compiled	[CE]  incompatible  types	57	None	replace
124	[BUG]  [BUGGY]  return  rawLen  >=  MAX_ERROR_TOKEN_LENGTH?  String.valueOf(rawNum):  rawLen;  [CE]  incompatible  types  [FE]                    JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  return  rawLen  >=  MAX_ERROR_TOKEN_LENGTH?  String.valueOf(rawNum):  rawLen;  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return  rawLen  >=  MAX_ERROR_TOKEN_LENGTH?  String.valueOf(rawNum):  rawLen;	  return    rawLen    <    =    MAX_ERROR_TOKEN_LENGTH?    String.valueOf(rawNum):    rawNum;    	non-compiled	[CE]  incompatible  types	57	None	replace
125	[BUG]  [BUGGY]  ||  rawLen  <  2)  {  return  String.format( "Integer  with  %d  digits ");  }  [CE]  illegal  start  of  expression  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  ||  rawLen  <  2)  {  return  String.format( "Integer  with  %d  digits ");  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	||  rawLen  <  2)  {  return  String.format( "Integer  with  %d  digits ");  }	  if(rawNum.startsWith(   "-   ")||    rawLen    <    2)    {    return    String.format(   "Integer    with    %d    digits   ");    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
126	[BUG]  [BUGGY]  ||  rawLen  <  2  ||  rawNum.startsWith( "- "))  {  return  String.format( "Integer  with  %d  digits ");  }  [CE]  illegal  start  of  expression  [FE]      JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  ||  rawLen  <  2  ||  rawNum.startsWith( "- "))  {  return  String.format( "Integer  with  %d  digits ");  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	||  rawLen  <  2  ||  rawNum.startsWith( "- "))  {  return  String.format( "Integer  with  %d  digits ");  }	  if(rawNum.startsWith(   "-   ")||    rawLen    <    2)    {    return    String.format(   "Integer    with    %d    digits   ");    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
127	[BUG]  [BUGGY]  String  rawLen  =  rawNum.substring(0,  rawLen);  [CE]  variable  rawLen  is  already  defined  in  method  _longIntegerDesc(String)  [FE]        JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  String  rawLen  =  rawNum.substring(0,  rawLen);  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	String  rawLen  =  rawNum.substring(0,  rawLen);	  if(rawNum.startsWith(   "-   ")||    rawLen    <    2)    {    return    String.format(   "Integer    with    %d    digits   ");    }    	non-compiled	[CE]  variable  rawLen  is  already  defined  in  method  _longIntegerDesc(String)	65	None	replace
128	[BUG]  [BUGGY]  return  rawLen  <  =  MAX_ERROR_TOKEN_LENGTH?  null  :  rawNum;  [CE]  illegal  start  of  expression  [FE]                  JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  return  rawLen  <  =  MAX_ERROR_TOKEN_LENGTH?  null  :  rawNum;  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return  rawLen  <  =  MAX_ERROR_TOKEN_LENGTH?  null  :  rawNum;	  return    rawLen    <    =    MAX_ERROR_TOKEN_LENGTH?    null    :    rawLen;    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
129	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]                    JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  return  rawLen  <  MAX_ERROR_TOKEN_LENGTH?  null  :  rawNum;  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	add	return  rawLen  <  MAX_ERROR_TOKEN_LENGTH?  null  :  rawNum;	  return    rawLen    <    =    MAX_ERROR_TOKEN_LENGTH?    null    :    rawLen;    	compilable	  [FE]  JsonParseException  	59	8	replace
130	[BUG]  [BUGGY]  return  rawLen  <  MAX_ERROR_TOKEN_LENGTH?  null  :  rawNum;  [FE]  JsonParseException  [FE]                    JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  return  rawLen  <  MAX_ERROR_TOKEN_LENGTH?  null  :  rawNum;  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return  rawLen  <  MAX_ERROR_TOKEN_LENGTH?  null  :  rawNum;	  return    rawLen    <    =    MAX_ERROR_TOKEN_LENGTH?    null    :    rawLen;    	compilable	  [FE]  JsonParseException  	59	8	replace
131	[BUG]  [BUGGY]  ||  rawLen  <  2)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  ||  rawLen  <  2)  {  return  null;  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	||  rawLen  <  2)  {  return  null;  }	  if(rawNum.startsWith(   "-   ")||    rawLen    <    2)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
132	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  if(rawNum.startsWith( "- ")||  rawLen  <  1)  {  return  null;  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	add	if(rawNum.startsWith( "- ")||  rawLen  <  1)  {  return  null;  }	  if(rawNum.startsWith(   "-   ")||    rawLen    <    2)    {    return    null;    }    	compilable	  [FE]  JsonParseException  	67	8	replace
133	[BUG]  [BUGGY]  if(rawNum.startsWith( "- ")||  rawLen  <  1)  {  return  null;  }  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  if(rawNum.startsWith( "- ")||  rawLen  <  1)  {  return  null;  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	if(rawNum.startsWith( "- ")||  rawLen  <  1)  {  return  null;  }	  if(rawNum.startsWith(   "-   ")||    rawLen    <    2)    {    return    null;    }    	compilable	  [FE]  JsonParseException  	67	8	replace
134	[BUG]  [BUGGY]  if(rawNum.startsWith( "- ")||  rawLen  <  =  2)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]        JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  if(rawNum.startsWith( "- ")||  rawLen  <  =  2)  {  return  null;  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	if(rawNum.startsWith( "- ")||  rawLen  <  =  2)  {  return  null;  }	  if(rawNum.startsWith(   "-   ")||    rawLen    <    2)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
135	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  _currToken  =  JsonToken.VALUE_NUMBER_INT;  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	add	_currToken  =  JsonToken.VALUE_NUMBER_INT;	  _currToken    =    JsonToken.VALUE_NUMBER_FLOAT;    	compilable	  [FE]  JsonParseException  	41	8	replace
136	[BUG]  [BUGGY]  _currToken  =  JsonToken.VALUE_NUMBER_INT;  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  _currToken  =  JsonToken.VALUE_NUMBER_INT;  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	_currToken  =  JsonToken.VALUE_NUMBER_INT;	  _currToken    =    JsonToken.VALUE_NUMBER_FLOAT;    	compilable	  [FE]  JsonParseException  	41	8	replace
137	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  _currToken  =  JsonToken.FIELD_NAME;  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	add	_currToken  =  JsonToken.FIELD_NAME;	  _currToken    =    JsonToken.VALUE_NUMBER_FLOAT;    	compilable	  [FE]  JsonParseException  	41	8	replace
138	[BUG]  [BUGGY]  _currToken  =  JsonToken.FIELD_NAME;  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  _currToken  =  JsonToken.FIELD_NAME;  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	_currToken  =  JsonToken.FIELD_NAME;	  _currToken    =    JsonToken.VALUE_NUMBER_FLOAT;    	compilable	  [FE]  JsonParseException  	41	8	replace
139	[BUG]  [BUGGY]  return  rawNum.substring(0,  rawLen).trim();  return  rawNum.substring(0,  rawLen).trim();  [CE]  unreachable  statement  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  return  rawNum.substring(0,  rawLen).trim();  return  rawNum.substring(0,  rawLen).trim();  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return    rawNum.substring(0,    rawLen).trim();    return  rawNum.substring(0,  rawLen).trim();	  	non-compiled	[CE]  unreachable  statement	16	None	add
140	[BUG]  [BUGGY]  return  rawNum.substring(0,  rawLen).trim();  String  rawNum  =  rawNum.substring(0,  rawLen).trim();  [CE]  variable  rawNum  is  already  defined  in  method  _longIntegerDesc(String)  [FE]      JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  return  rawNum.substring(0,  rawLen).trim();  String  rawNum  =  rawNum.substring(0,  rawLen).trim();  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return    rawNum.substring(0,    rawLen).trim();    String  rawNum  =  rawNum.substring(0,  rawLen).trim();	  	non-compiled	[CE]  variable  rawNum  is  already  defined  in  method  _longIntegerDesc(String)	16	None	add
141	[BUG]  [BUGGY]  return  rawNum.substring(0,  rawLen).trim();  String  rawNum  =  _currToken.substring(0,  rawLen).trim();  [CE]  variable  rawNum  is  already  defined  in  method  _longIntegerDesc(String)  [FE]        JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  return  rawNum.substring(0,  rawLen).trim();  String  rawNum  =  _currToken.substring(0,  rawLen).trim();  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return    rawNum.substring(0,    rawLen).trim();    String  rawNum  =  _currToken.substring(0,  rawLen).trim();	  	non-compiled	[CE]  variable  rawNum  is  already  defined  in  method  _longIntegerDesc(String)	16	None	add
142	[BUG]  [BUGGY]  return  rawNum.substring(0,  rawLen).trim();  String  rawNum  =  _parseString(rawNum);  [CE]  variable  rawNum  is  already  defined  in  method  _longIntegerDesc(String)  [FE]          JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  return  rawNum.substring(0,  rawLen).trim();  String  rawNum  =  _parseString(rawNum);  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return    rawNum.substring(0,    rawLen).trim();    String  rawNum  =  _parseString(rawNum);	  	non-compiled	[CE]  variable  rawNum  is  already  defined  in  method  _longIntegerDesc(String)	16	None	add
143	[BUG]  [BUGGY]  return  rawNum.substring(0,  rawLen).trim();  int  rawLen  =  rawNum.length();  [CE]  variable  rawLen  is  already  defined  in  method  _longIntegerDesc(String)  [FE]            JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  return  rawNum.substring(0,  rawLen).trim();  int  rawLen  =  rawNum.length();  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return    rawNum.substring(0,    rawLen).trim();    int  rawLen  =  rawNum.length();	  	non-compiled	[CE]  variable  rawLen  is  already  defined  in  method  _longIntegerDesc(String)	16	None	add
144	[BUG]  [BUGGY]  return  rawLen.substring(0,  rawNum.length()  -  3);  [CE]  int  cannot  be  dereferenced  [FE]                JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  return  rawLen.substring(0,  rawNum.length()  -  3);  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return  rawLen.substring(0,  rawNum.length()  -  3);	  return    rawLen.substring(0,    rawLen.length()    -    3);    	non-compiled	[CE]  int  cannot  be  dereferenced	14	None	replace
145	[BUG]  [BUGGY]  return  rawLen.substring(0,  rawNum.length());  [CE]  int  cannot  be  dereferenced  [FE]                  JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  return  rawLen.substring(0,  rawNum.length());  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return  rawLen.substring(0,  rawNum.length());	  return    rawLen.substring(0,    rawLen.length()    -    3);    	non-compiled	[CE]  int  cannot  be  dereferenced	14	None	replace
146	[BUG]  [BUGGY]  return  rawNum.substring(0,  rawLen.length());  [CE]  int  cannot  be  dereferenced  [FE]                    JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  return  rawNum.substring(0,  rawLen.length());  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return  rawNum.substring(0,  rawLen.length());	  return    rawLen.substring(0,    rawLen.length()    -    3);    	non-compiled	[CE]  int  cannot  be  dereferenced	14	None	replace
147	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  _reportUnsupportedOperation();  _reportUnsupportedOperation();  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	add	_reportUnsupportedOperation();    _reportUnsupportedOperation();	  	compilable	  [FE]  UnsupportedOperationException  	20	8	add
148	[BUG]  [BUGGY]  _reportUnsupportedOperation();  _reportUnsupportedOperation();  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  _reportUnsupportedOperation();  _reportUnsupportedOperation();  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	_reportUnsupportedOperation();    _reportUnsupportedOperation();	  	compilable	  [FE]  UnsupportedOperationException  	20	8	add
149	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]      UnsupportedOperationException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  _reportUnsupportedOperation();  if(rawNum.startsWith( "-   "))  {  _reportUnsupportedOperation();  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	add	_reportUnsupportedOperation();    if(rawNum.startsWith( "-   "))  {  _reportUnsupportedOperation();  }	  	compilable	  [FE]  UnsupportedOperationException  	20	8	add
150	[BUG]  [BUGGY]  _reportUnsupportedOperation();  if(rawNum.startsWith( "-   "))  {  _reportUnsupportedOperation();  }  [FE]  UnsupportedOperationException  [FE]      UnsupportedOperationException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  _reportUnsupportedOperation();  if(rawNum.startsWith( "-   "))  {  _reportUnsupportedOperation();  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	_reportUnsupportedOperation();    if(rawNum.startsWith( "-   "))  {  _reportUnsupportedOperation();  }	  	compilable	  [FE]  UnsupportedOperationException  	20	8	add
151	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]        UnsupportedOperationException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  _reportUnsupportedOperation();  if(rawLen  ==  0)  {  _reportUnsupportedOperation();  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	add	_reportUnsupportedOperation();    if(rawLen  ==  0)  {  _reportUnsupportedOperation();  }	  	compilable	  [FE]  UnsupportedOperationException  	20	8	add
152	[BUG]  [BUGGY]  _reportUnsupportedOperation();  if(rawLen  ==  0)  {  _reportUnsupportedOperation();  }  [FE]  UnsupportedOperationException  [FE]        UnsupportedOperationException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  _reportUnsupportedOperation();  if(rawLen  ==  0)  {  _reportUnsupportedOperation();  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	_reportUnsupportedOperation();    if(rawLen  ==  0)  {  _reportUnsupportedOperation();  }	  	compilable	  [FE]  UnsupportedOperationException  	20	8	add
153	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]          UnsupportedOperationException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  _reportUnsupportedOperation();  if(rawNum.equals( "- "))  {  _reportUnsupportedOperation();  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	add	_reportUnsupportedOperation();    if(rawNum.equals( "- "))  {  _reportUnsupportedOperation();  }	  	compilable	  [FE]  UnsupportedOperationException  	20	8	add
154	[BUG]  [BUGGY]  _reportUnsupportedOperation();  if(rawNum.equals( "- "))  {  _reportUnsupportedOperation();  }  [FE]  UnsupportedOperationException  [FE]          UnsupportedOperationException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  _reportUnsupportedOperation();  if(rawNum.equals( "- "))  {  _reportUnsupportedOperation();  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	_reportUnsupportedOperation();    if(rawNum.equals( "- "))  {  _reportUnsupportedOperation();  }	  	compilable	  [FE]  UnsupportedOperationException  	20	8	add
155	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]          JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  if(rawNum.startsWith( "- ")||  rawLen  <  2)  {  return  rawNum.toLowerCase();  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	add	if(rawNum.startsWith( "- ")||  rawLen  <  2)  {  return  rawNum.toLowerCase();  }	  return    rawNum.toLowerCase();    if(rawNum.startsWith(   "-   ")||    rawLen    <    2)    {    return    rawNum.toLowerCase();    }    	compilable	  [FE]  JsonParseException  	54	8	replace
156	[BUG]  [BUGGY]  if(rawNum.startsWith( "- ")||  rawLen  <  2)  {  return  rawNum.toLowerCase();  }  [FE]  JsonParseException  [FE]          JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  if(rawNum.startsWith( "- ")||  rawLen  <  2)  {  return  rawNum.toLowerCase();  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	if(rawNum.startsWith( "- ")||  rawLen  <  2)  {  return  rawNum.toLowerCase();  }	  return    rawNum.toLowerCase();    if(rawNum.startsWith(   "-   ")||    rawLen    <    2)    {    return    rawNum.toLowerCase();    }    	compilable	  [FE]  JsonParseException  	54	8	replace
157	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]            JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  if(rawNum.startsWith( "- ")||  rawLen  <  1)  {  return  rawNum.toLowerCase();  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	add	if(rawNum.startsWith( "- ")||  rawLen  <  1)  {  return  rawNum.toLowerCase();  }	  return    rawNum.toLowerCase();    if(rawNum.startsWith(   "-   ")||    rawLen    <    2)    {    return    rawNum.toLowerCase();    }    	compilable	  [FE]  JsonParseException  	54	8	replace
158	[BUG]  [BUGGY]  if(rawNum.startsWith( "- ")||  rawLen  <  1)  {  return  rawNum.toLowerCase();  }  [FE]  JsonParseException  [FE]            JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  if(rawNum.startsWith( "- ")||  rawLen  <  1)  {  return  rawNum.toLowerCase();  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	if(rawNum.startsWith( "- ")||  rawLen  <  1)  {  return  rawNum.toLowerCase();  }	  return    rawNum.toLowerCase();    if(rawNum.startsWith(   "-   ")||    rawLen    <    2)    {    return    rawNum.toLowerCase();    }    	compilable	  [FE]  JsonParseException  	54	8	replace
159	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]        JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  if(rawLen  >  0)  {  return  rawNum.toLowerCase();  }  else  {  return  rawNum.toLowerCase();  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	add	if(rawLen  >  0)  {  return  rawNum.toLowerCase();  }  else  {  return  rawNum.toLowerCase();  }	  return    rawNum.toLowerCase();    return    rawNum.toLowerCase();    	compilable	  [FE]  JsonParseException  	1	8	replace
160	[BUG]  [BUGGY]  if(rawLen  >  0)  {  return  rawNum.toLowerCase();  }  else  {  return  rawNum.toLowerCase();  }  [FE]  JsonParseException  [FE]        JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  if(rawLen  >  0)  {  return  rawNum.toLowerCase();  }  else  {  return  rawNum.toLowerCase();  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	if(rawLen  >  0)  {  return  rawNum.toLowerCase();  }  else  {  return  rawNum.toLowerCase();  }	  return    rawNum.toLowerCase();    return    rawNum.toLowerCase();    	compilable	  [FE]  JsonParseException  	1	8	replace
161	[BUG]  [BUGGY]  if(rawLen  <  1)  {  return  rawNum.toLowerCase();  return  rawNum.toLowerCase();  }  [CE]  unreachable  statement  [FE]          JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  if(rawLen  <  1)  {  return  rawNum.toLowerCase();  return  rawNum.toLowerCase();  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	if(rawLen  <  1)  {  return  rawNum.toLowerCase();  return  rawNum.toLowerCase();  }	  return    rawNum.toLowerCase();    return    rawNum.toLowerCase();    	non-compiled	[CE]  unreachable  statement	1	None	replace
162	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]            JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  if(rawLen  <  1)  {  return  rawNum.toLowerCase();  }  else  {  return  rawNum.toLowerCase();  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	add	if(rawLen  <  1)  {  return  rawNum.toLowerCase();  }  else  {  return  rawNum.toLowerCase();  }	  return    rawNum.toLowerCase();    return    rawNum.toLowerCase();    	compilable	  [FE]  JsonParseException  	1	8	replace
163	[BUG]  [BUGGY]  if(rawLen  <  1)  {  return  rawNum.toLowerCase();  }  else  {  return  rawNum.toLowerCase();  }  [FE]  JsonParseException  [FE]            JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  if(rawLen  <  1)  {  return  rawNum.toLowerCase();  }  else  {  return  rawNum.toLowerCase();  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	if(rawLen  <  1)  {  return  rawNum.toLowerCase();  }  else  {  return  rawNum.toLowerCase();  }	  return    rawNum.toLowerCase();    return    rawNum.toLowerCase();    	compilable	  [FE]  JsonParseException  	1	8	replace
164	[BUG]  [BUGGY]  String  rawNum  =  rawNum.substring(0,  rawLen);  if(rawNum.startsWith( "- "))  {  return  rawNum.substring(0,  rawLen);  }  [CE]  variable  rawNum  is  already  defined  in  method  _longIntegerDesc(String)  [FE]            JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  String  rawNum  =  rawNum.substring(0,  rawLen);  if(rawNum.startsWith( "- "))  {  return  rawNum.substring(0,  rawLen);  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	String  rawNum  =  rawNum.substring(0,  rawLen);  if(rawNum.startsWith( "- "))  {  return  rawNum.substring(0,  rawLen);  }	  return    rawNum.substring(0,    rawLen);    if(rawNum.startsWith(   "-       "))    {    return    rawNum.substring(0,    rawLen);    }    	non-compiled	[CE]  variable  rawNum  is  already  defined  in  method  _longIntegerDesc(String)	11	None	replace
165	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  _currToken  =  JsonToken.VALUE_NUMBER_FLOAT;  _currToken  =  JsonToken.VALUE_NUMBER_FLOAT;  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	add	_currToken    =    JsonToken.VALUE_NUMBER_FLOAT;    _currToken  =  JsonToken.VALUE_NUMBER_FLOAT;	  	compilable	  [FE]  JsonParseException  	40	8	add
166	[BUG]  [BUGGY]  _currToken  =  JsonToken.VALUE_NUMBER_FLOAT;  _currToken  =  JsonToken.VALUE_NUMBER_FLOAT;  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  _currToken  =  JsonToken.VALUE_NUMBER_FLOAT;  _currToken  =  JsonToken.VALUE_NUMBER_FLOAT;  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	_currToken    =    JsonToken.VALUE_NUMBER_FLOAT;    _currToken  =  JsonToken.VALUE_NUMBER_FLOAT;	  	compilable	  [FE]  JsonParseException  	40	8	add
167	[BUG]  [BUGGY]  _currToken  =  JsonToken.VALUE_NUMBER_FLOAT;  ||  rawNum.startsWith( "- "))  {  _currToken  =  JsonToken.VALUE_NUMBER_FLOAT;  [CE]  illegal  start  of  expression  [FE]      JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  _currToken  =  JsonToken.VALUE_NUMBER_FLOAT;  ||  rawNum.startsWith( "- "))  {  _currToken  =  JsonToken.VALUE_NUMBER_FLOAT;  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	_currToken    =    JsonToken.VALUE_NUMBER_FLOAT;    ||  rawNum.startsWith( "- "))  {  _currToken  =  JsonToken.VALUE_NUMBER_FLOAT;	  	non-compiled	[CE]  illegal  start  of  expression	40	None	add
168	[BUG]  [BUGGY]  _currToken  =  JsonToken.VALUE_NUMBER_FLOAT;  _currToken  =  JsonToken.VALUE_NUMBER_FLOAT;  }  else  if(rawNum.startsWith( "- "))  {  rawLen  -=  1;  }  [CE]  illegal  start  of  type  [FE]        JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  _currToken  =  JsonToken.VALUE_NUMBER_FLOAT;  _currToken  =  JsonToken.VALUE_NUMBER_FLOAT;  }  else  if(rawNum.startsWith( "- "))  {  rawLen  -=  1;  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	_currToken    =    JsonToken.VALUE_NUMBER_FLOAT;    _currToken  =  JsonToken.VALUE_NUMBER_FLOAT;  }  else  if(rawNum.startsWith( "- "))  {  rawLen  -=  1;  }	  	non-compiled	[CE]  illegal  start  of  type	40	None	add
169	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]          JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  _currToken  =  JsonToken.VALUE_NUMBER_FLOAT;  _currToken  =  JsonToken.VALUE_NUMBER_FLOAT;  }  else  {  _currToken  =  JsonToken.VALUE_NUMBER_FLOAT;  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	add	_currToken    =    JsonToken.VALUE_NUMBER_FLOAT;    _currToken  =  JsonToken.VALUE_NUMBER_FLOAT;  }  else  {  _currToken  =  JsonToken.VALUE_NUMBER_FLOAT;	  	compilable	  [FE]  JsonParseException  	40	8	add
170	[BUG]  [BUGGY]  _currToken  =  JsonToken.VALUE_NUMBER_FLOAT;  _currToken  =  JsonToken.VALUE_NUMBER_FLOAT;  }  else  {  _currToken  =  JsonToken.VALUE_NUMBER_FLOAT;  [FE]  JsonParseException  [FE]          JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  _currToken  =  JsonToken.VALUE_NUMBER_FLOAT;  _currToken  =  JsonToken.VALUE_NUMBER_FLOAT;  }  else  {  _currToken  =  JsonToken.VALUE_NUMBER_FLOAT;  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	_currToken    =    JsonToken.VALUE_NUMBER_FLOAT;    _currToken  =  JsonToken.VALUE_NUMBER_FLOAT;  }  else  {  _currToken  =  JsonToken.VALUE_NUMBER_FLOAT;	  	compilable	  [FE]  JsonParseException  	40	8	add
171	[BUG]  [BUGGY]  return  rawLen.substring(0,  rawNum.length()  -  2);  [CE]  int  cannot  be  dereferenced  [FE]                  JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  return  rawLen.substring(0,  rawNum.length()  -  2);  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return  rawLen.substring(0,  rawNum.length()  -  2);	  return    rawLen.substring(0,    rawLen.length()    -    2);    	non-compiled	[CE]  int  cannot  be  dereferenced	15	None	replace
172	[BUG]  [BUGGY]  return  rawNum.substring(0,  rawLen.length()  -  2);  [CE]  int  cannot  be  dereferenced  [FE]                    JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  return  rawNum.substring(0,  rawLen.length()  -  2);  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return  rawNum.substring(0,  rawLen.length()  -  2);	  return    rawLen.substring(0,    rawLen.length()    -    2);    	non-compiled	[CE]  int  cannot  be  dereferenced	15	None	replace
173	[BUG]  [BUGGY]  ||  rawNum.startsWith( "- "))  {  return  String.format( "Integer  with  %d  digits] ",  rawLen);  }  [CE]  illegal  start  of  expression  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  ||  rawNum.startsWith( "- "))  {  return  String.format( "Integer  with  %d  digits] ",  rawLen);  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	||  rawNum.startsWith( "- "))  {  return  String.format( "Integer  with  %d  digits] ",  rawLen);  }	  if(rawNum.startsWith(   "-   ")||    rawNum.startsWith(   "-   "))    {    return    String.format(   "Integer    with    %d    digits]   ",    rawLen);    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
174	[BUG]  [BUGGY]  ||  rawNum.startsWith( "- "))  {  return  String.format( "Integer  with  %d  digits] ",  rawLen);  [CE]  illegal  start  of  expression  [FE]      JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  ||  rawNum.startsWith( "- "))  {  return  String.format( "Integer  with  %d  digits] ",  rawLen);  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	||  rawNum.startsWith( "- "))  {  return  String.format( "Integer  with  %d  digits] ",  rawLen);	  if(rawNum.startsWith(   "-   ")||    rawNum.startsWith(   "-   "))    {    return    String.format(   "Integer    with    %d    digits]   ",    rawLen);    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
175	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]          JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  if(rawNum.startsWith( "- ")||  rawLen  <  2)  {  return  rawNum.trim();  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	add	if(rawNum.startsWith( "- ")||  rawLen  <  2)  {  return  rawNum.trim();  }	  return    rawNum.trim();    if(rawNum.startsWith(   "-   ")||    rawLen    <    2)    {    return    rawNum.trim();    }    	compilable	  [FE]  JsonParseException  	56	8	replace
176	[BUG]  [BUGGY]  if(rawNum.startsWith( "- ")||  rawLen  <  2)  {  return  rawNum.trim();  }  [FE]  JsonParseException  [FE]          JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  if(rawNum.startsWith( "- ")||  rawLen  <  2)  {  return  rawNum.trim();  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	if(rawNum.startsWith( "- ")||  rawLen  <  2)  {  return  rawNum.trim();  }	  return    rawNum.trim();    if(rawNum.startsWith(   "-   ")||    rawLen    <    2)    {    return    rawNum.trim();    }    	compilable	  [FE]  JsonParseException  	56	8	replace
177	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]            JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  if(rawNum.startsWith( "- ")||  rawLen  <  1)  {  return  rawNum.trim();  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	add	if(rawNum.startsWith( "- ")||  rawLen  <  1)  {  return  rawNum.trim();  }	  return    rawNum.trim();    if(rawNum.startsWith(   "-   ")||    rawLen    <    2)    {    return    rawNum.trim();    }    	compilable	  [FE]  JsonParseException  	56	8	replace
178	[BUG]  [BUGGY]  if(rawNum.startsWith( "- ")||  rawLen  <  1)  {  return  rawNum.trim();  }  [FE]  JsonParseException  [FE]            JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  if(rawNum.startsWith( "- ")||  rawLen  <  1)  {  return  rawNum.trim();  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	if(rawNum.startsWith( "- ")||  rawLen  <  1)  {  return  rawNum.trim();  }	  return    rawNum.trim();    if(rawNum.startsWith(   "-   ")||    rawLen    <    2)    {    return    rawNum.trim();    }    	compilable	  [FE]  JsonParseException  	56	8	replace
179	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  return  rawNum.substring(0,  rawLen  -  3);  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	add	return  rawNum.substring(0,  rawLen  -  3);	  return    rawNum.substring(0,    rawLen    -    2);    	compilable	  [FE]  JsonParseException  	49	8	replace
180	[BUG]  [BUGGY]  return  rawNum.substring(0,  rawLen  -  3);  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  return  rawNum.substring(0,  rawLen  -  3);  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return  rawNum.substring(0,  rawLen  -  3);	  return    rawNum.substring(0,    rawLen    -    2);    	compilable	  [FE]  JsonParseException  	49	8	replace
181	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  return  rawNum.substring(0,  rawLen  -  4);  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	add	return  rawNum.substring(0,  rawLen  -  4);	  return    rawNum.substring(0,    rawLen    -    2);    	compilable	  [FE]  JsonParseException  	49	8	replace
182	[BUG]  [BUGGY]  return  rawNum.substring(0,  rawLen  -  4);  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  return  rawNum.substring(0,  rawLen  -  4);  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return  rawNum.substring(0,  rawLen  -  4);	  return    rawNum.substring(0,    rawLen    -    2);    	compilable	  [FE]  JsonParseException  	49	8	replace
183	[BUG]  [BUGGY]  ||  rawLen  <  2)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  ||  rawLen  <  2)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	||  rawLen  <  2)  {  throw  new  IllegalArgumentException( " ");  }	  if(rawNum.startsWith(   "-   ")||    rawLen    <    2)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
184	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  if(rawNum.startsWith( "- ")||  rawLen  <  1)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	add	if(rawNum.startsWith( "- ")||  rawLen  <  1)  {  throw  new  IllegalArgumentException( " ");  }	  if(rawNum.startsWith(   "-   ")||    rawLen    <    2)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  JsonParseException  	63	8	replace
185	[BUG]  [BUGGY]  if(rawNum.startsWith( "- ")||  rawLen  <  1)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  if(rawNum.startsWith( "- ")||  rawLen  <  1)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	if(rawNum.startsWith( "- ")||  rawLen  <  1)  {  throw  new  IllegalArgumentException( " ");  }	  if(rawNum.startsWith(   "-   ")||    rawLen    <    2)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  JsonParseException  	63	8	replace
186	[BUG]  [BUGGY]  _currToken  =  JsonToken.VALUE_NUMBER;  [CE]  cannot  find  symbol  VALUE_NUMBER  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  _currToken  =  JsonToken.VALUE_NUMBER;  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	_currToken  =  JsonToken.VALUE_NUMBER;	  _currToken    =    JsonToken.VALUE_STRING;    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER	39	None	replace
187	[BUG]  [BUGGY]  return  rawNum.substring(0,  rawLen).toLowerCase();  return  rawNum.substring(0,  rawLen).toLowerCase();  [CE]  unreachable  statement  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  return  rawNum.substring(0,  rawLen).toLowerCase();  return  rawNum.substring(0,  rawLen).toLowerCase();  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return    rawNum.substring(0,    rawLen).toLowerCase();    return  rawNum.substring(0,  rawLen).toLowerCase();	  	non-compiled	[CE]  unreachable  statement	32	None	add
188	[BUG]  [BUGGY]  return  rawNum.substring(0,  rawLen).toLowerCase();  if(rawNum.startsWith( "- "))  {  return  rawNum.substring(0,  rawLen).toLowerCase();  }  [CE]  unreachable  statement  [FE]      JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  return  rawNum.substring(0,  rawLen).toLowerCase();  if(rawNum.startsWith( "- "))  {  return  rawNum.substring(0,  rawLen).toLowerCase();  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return    rawNum.substring(0,    rawLen).toLowerCase();    if(rawNum.startsWith( "- "))  {  return  rawNum.substring(0,  rawLen).toLowerCase();  }	  	non-compiled	[CE]  unreachable  statement	32	None	add
189	[BUG]  [BUGGY]  return  rawNum.substring(0,  rawLen).toLowerCase();  if(rawNum.startsWith( "- "))  {  return  rawNum.substring(0,  rawLen).toLowerCase();  }  else  {  return  rawNum.substring(0,  rawLen).toLowerCase();  }  [CE]  unreachable  statement  [FE]        JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  return  rawNum.substring(0,  rawLen).toLowerCase();  if(rawNum.startsWith( "- "))  {  return  rawNum.substring(0,  rawLen).toLowerCase();  }  else  {  return  rawNum.substring(0,  rawLen).toLowerCase();  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return    rawNum.substring(0,    rawLen).toLowerCase();    if(rawNum.startsWith( "- "))  {  return  rawNum.substring(0,  rawLen).toLowerCase();  }  else  {  return  rawNum.substring(0,  rawLen).toLowerCase();  }	  	non-compiled	[CE]  unreachable  statement	32	None	add
190	[BUG]  [BUGGY]  return  rawNum.substring(0,  rawLen).toLowerCase();  if(rawNum.startsWith( "- "))  {  return  rawNum.substring(0,  rawLen).toLowerCase();  }  else  {  return  rawNum.substring(1,  rawLen).toLowerCase();  }  [CE]  unreachable  statement  [FE]          JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  return  rawNum.substring(0,  rawLen).toLowerCase();  if(rawNum.startsWith( "- "))  {  return  rawNum.substring(0,  rawLen).toLowerCase();  }  else  {  return  rawNum.substring(1,  rawLen).toLowerCase();  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return    rawNum.substring(0,    rawLen).toLowerCase();    if(rawNum.startsWith( "- "))  {  return  rawNum.substring(0,  rawLen).toLowerCase();  }  else  {  return  rawNum.substring(1,  rawLen).toLowerCase();  }	  	non-compiled	[CE]  unreachable  statement	32	None	add
191	[BUG]  [BUGGY]  return  rawNum.substring(0,  rawLen).toLowerCase();  if(rawNum.startsWith( "- "))  {  return  rawNum.substring(0,  rawLen).toLowerCase();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  unreachable  statement  [FE]            JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  return  rawNum.substring(0,  rawLen).toLowerCase();  if(rawNum.startsWith( "- "))  {  return  rawNum.substring(0,  rawLen).toLowerCase();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return    rawNum.substring(0,    rawLen).toLowerCase();    if(rawNum.startsWith( "- "))  {  return  rawNum.substring(0,  rawLen).toLowerCase();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  unreachable  statement	32	None	add
192	[BUG]  [BUGGY]  ||  rawNum.startsWith( "- "))  {  rawLen  -=  1;  }  [CE]  illegal  start  of  expression  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  ||  rawNum.startsWith( "- "))  {  rawLen  -=  1;  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	||  rawNum.startsWith( "- "))  {  rawLen  -=  1;  }	          if(rawNum.startsWith(   "-   ")||    rawNum.startsWith(   "-   "))    {    rawLen    -=    1;    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
193	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  rawLen  -=  1;  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	add	rawLen  -=  1;	          if(rawNum.startsWith(   "-   ")||    rawNum.startsWith(   "-   "))    {    rawLen    -=    1;    }    	compilable	  [FE]  JsonParseException  	52	8	replace
194	[BUG]  [BUGGY]  rawLen  -=  1;  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  rawLen  -=  1;  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	rawLen  -=  1;	          if(rawNum.startsWith(   "-   ")||    rawNum.startsWith(   "-   "))    {    rawLen    -=    1;    }    	compilable	  [FE]  JsonParseException  	52	8	replace
195	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    UnsupportedOperationException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  _throwInternal();  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	add	_throwInternal();	  _reportUnsupportedOperation();    	compilable	  [FE]  RuntimeException  	21	8	replace
196	[BUG]  [BUGGY]  _throwInternal();  [FE]  RuntimeException  [FE]    UnsupportedOperationException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  _throwInternal();  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	_throwInternal();	  _reportUnsupportedOperation();    	compilable	  [FE]  RuntimeException  	21	8	replace
197	[BUG]  [BUGGY]  _throwUnsupportedOperation();  [CE]  cannot  find  symbol  [FE]      UnsupportedOperationException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  _throwUnsupportedOperation();  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	_throwUnsupportedOperation();	  _reportUnsupportedOperation();    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
198	[BUG]  [BUGGY]  _reportError( "Unsupported  Operation  method: "  +  rawNum);  [CE]  unreported  exception  JsonParseException;  must  be  caught  or  declared  to  be  thrown  [FE]        UnsupportedOperationException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  _reportError( "Unsupported  Operation  method: "  +  rawNum);  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	_reportError( "Unsupported  Operation  method: "  +  rawNum);	  _reportUnsupportedOperation();    	non-compiled	[CE]  unreported  exception  JsonParseException;  must  be  caught  or  declared  to  be  thrown	21	None	replace
199	[BUG]  [BUGGY]  return  rawLen  /  _longIntegerDesc(rawNum);  [CE]  bad  operand  types  for  binary  operator  '/'  [FE]    StackOverflowError    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  return  rawLen  /  _longIntegerDesc(rawNum);  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return  rawLen  /  _longIntegerDesc(rawNum);	  return    rawLen    +    _longIntegerDesc(rawNum);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '/'	45	None	replace
200	[BUG]  [BUGGY]  return  rawNum  +  _longIntegerDesc(rawLen);  [CE]  method  _longIntegerDesc  in  class  ParserMinimalBase  cannot  be  applied  to  given  types;  [FE]      StackOverflowError    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  return  rawNum  +  _longIntegerDesc(rawLen);  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return  rawNum  +  _longIntegerDesc(rawLen);	  return    rawLen    +    _longIntegerDesc(rawNum);    	non-compiled	[CE]  method  _longIntegerDesc  in  class  ParserMinimalBase  cannot  be  applied  to  given  types;	45	None	replace
201	[BUG]  [BUGGY]  return  rawLen  -  _longIntegerDesc(rawNum);  [CE]  bad  operand  types  for  binary  operator  '-'  [FE]        StackOverflowError    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  return  rawLen  -  _longIntegerDesc(rawNum);  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return  rawLen  -  _longIntegerDesc(rawNum);	  return    rawLen    +    _longIntegerDesc(rawNum);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	45	None	replace
202	[BUG]  [BUGGY]  return  rawLen  +  _longIntegerDesc(rawNum,  1);  [CE]  method  _longIntegerDesc  in  class  ParserMinimalBase  cannot  be  applied  to  given  types;  [FE]          StackOverflowError    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  return  rawLen  +  _longIntegerDesc(rawNum,  1);  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return  rawLen  +  _longIntegerDesc(rawNum,  1);	  return    rawLen    +    _longIntegerDesc(rawNum);    	non-compiled	[CE]  method  _longIntegerDesc  in  class  ParserMinimalBase  cannot  be  applied  to  given  types;	45	None	replace
203	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]          JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  if(rawLen  <  1000)  {  return  rawNum.toLowerCase();  }  else  {  return  rawNum.toLowerCase();  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	add	if(rawLen  <  1000)  {  return  rawNum.toLowerCase();  }  else  {  return  rawNum.toLowerCase();  }	  return    rawNum.toLowerCase();    if(rawNum!=    null)    {    return    rawNum.toLowerCase();    }    else    {    return    rawNum.toLowerCase();    }    	compilable	  [FE]  JsonParseException  	43	8	replace
204	[BUG]  [BUGGY]  if(rawLen  <  1000)  {  return  rawNum.toLowerCase();  }  else  {  return  rawNum.toLowerCase();  }  [FE]  JsonParseException  [FE]          JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  if(rawLen  <  1000)  {  return  rawNum.toLowerCase();  }  else  {  return  rawNum.toLowerCase();  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	if(rawLen  <  1000)  {  return  rawNum.toLowerCase();  }  else  {  return  rawNum.toLowerCase();  }	  return    rawNum.toLowerCase();    if(rawNum!=    null)    {    return    rawNum.toLowerCase();    }    else    {    return    rawNum.toLowerCase();    }    	compilable	  [FE]  JsonParseException  	43	8	replace
205	[BUG]  [BUGGY]  if(rawLen  <  1000)  {  return  rawNum.trim();  char[]  rawNum  =  rawNum.toCharArray();  return  rawNum.trim();  }  [CE]  variable  rawNum  is  already  defined  in  method  _longIntegerDesc(String)  [FE]          JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  if(rawLen  <  1000)  {  return  rawNum.trim();  char[]  rawNum  =  rawNum.toCharArray();  return  rawNum.trim();  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	if(rawLen  <  1000)  {  return  rawNum.trim();  char[]  rawNum  =  rawNum.toCharArray();  return  rawNum.trim();  }	  return    rawNum.trim();    char[]    rawNum    =    rawNum.toCharArray();    return    rawNum.trim();    	non-compiled	[CE]  variable  rawNum  is  already  defined  in  method  _longIntegerDesc(String)	35	None	replace
206	[BUG]  [BUGGY]  if(rawLen  <  1)  {  return  rawNum.trim();  char[]  rawNum  =  rawNum.toCharArray();  return  rawNum.trim();  }  [CE]  variable  rawNum  is  already  defined  in  method  _longIntegerDesc(String)  [FE]            JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  if(rawLen  <  1)  {  return  rawNum.trim();  char[]  rawNum  =  rawNum.toCharArray();  return  rawNum.trim();  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	if(rawLen  <  1)  {  return  rawNum.trim();  char[]  rawNum  =  rawNum.toCharArray();  return  rawNum.trim();  }	  return    rawNum.trim();    char[]    rawNum    =    rawNum.toCharArray();    return    rawNum.trim();    	non-compiled	[CE]  variable  rawNum  is  already  defined  in  method  _longIntegerDesc(String)	35	None	replace
207	[BUG]  [BUGGY]  if(rawLen  <  1000)  {  return  rawNum.trim();  char[]  rawNum  =  rawNum.toCharArray();  return  rawNum.trim();  }  else  {  return  null;  }  [CE]  variable  rawNum  is  already  defined  in  method  _longIntegerDesc(String)  [FE]              JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  if(rawLen  <  1000)  {  return  rawNum.trim();  char[]  rawNum  =  rawNum.toCharArray();  return  rawNum.trim();  }  else  {  return  null;  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	if(rawLen  <  1000)  {  return  rawNum.trim();  char[]  rawNum  =  rawNum.toCharArray();  return  rawNum.trim();  }  else  {  return  null;  }	  return    rawNum.trim();    char[]    rawNum    =    rawNum.toCharArray();    return    rawNum.trim();    	non-compiled	[CE]  variable  rawNum  is  already  defined  in  method  _longIntegerDesc(String)	35	None	replace
208	[BUG]  [BUGGY]  String  rawNum  =  rawNum.substring(0,  rawLen);  if(rawNum.startsWith( "- ")||  rawNum.startsWith( "- "))  {  return  rawNum.substring(0,  rawLen);  }  [CE]  variable  rawNum  is  already  defined  in  method  _longIntegerDesc(String)  [FE]              JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  String  rawNum  =  rawNum.substring(0,  rawLen);  if(rawNum.startsWith( "- ")||  rawNum.startsWith( "- "))  {  return  rawNum.substring(0,  rawLen);  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	String  rawNum  =  rawNum.substring(0,  rawLen);  if(rawNum.startsWith( "- ")||  rawNum.startsWith( "- "))  {  return  rawNum.substring(0,  rawLen);  }	  return    rawNum.substring(0,    rawLen);    if(rawNum.startsWith(   "-       ")||    rawNum.startsWith(   "-       "))    {    return    rawNum.substring(0,    rawLen);    }    	non-compiled	[CE]  variable  rawNum  is  already  defined  in  method  _longIntegerDesc(String)	12	None	replace
209	[BUG]  [BUGGY]  String  rawNum  =  rawNum.substring(0,  rawLen).toLowerCase();  [CE]  variable  rawNum  is  already  defined  in  method  _longIntegerDesc(String)  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  String  rawNum  =  rawNum.substring(0,  rawLen).toLowerCase();  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	String  rawNum  =  rawNum.substring(0,  rawLen).toLowerCase();	  return    rawNum.substring(0,    rawLen).toLowerCase();    	non-compiled	[CE]  variable  rawNum  is  already  defined  in  method  _longIntegerDesc(String)	33	None	replace
210	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  return  rawNum.substring(1,  rawLen).toLowerCase();  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	add	return  rawNum.substring(1,  rawLen).toLowerCase();	  return    rawNum.substring(0,    rawLen).toLowerCase();    	compilable	  [FE]  JsonParseException  	33	8	replace
211	[BUG]  [BUGGY]  return  rawNum.substring(1,  rawLen).toLowerCase();  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  return  rawNum.substring(1,  rawLen).toLowerCase();  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return  rawNum.substring(1,  rawLen).toLowerCase();	  return    rawNum.substring(0,    rawLen).toLowerCase();    	compilable	  [FE]  JsonParseException  	33	8	replace
212	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]          if(rawNum.startsWith(   "-   ")||  rawNum.startsWith(   "-   "))  {  rawLen  -=  1;  }  if(rawNum.startsWith( "-   ")||  rawNum.startsWith( "-   "))  {  rawLen  -=  1;  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	add	                if(rawNum.startsWith(   "-   ")||    rawNum.startsWith(   "-   "))    {    rawLen    -=    1;    }    if(rawNum.startsWith( "-   ")||  rawNum.startsWith( "-   "))  {  rawLen  -=  1;  }	  	compilable	  [FE]  JsonParseException  	51	8	add
213	[BUG]  [BUGGY]          if(rawNum.startsWith(   "-   ")||  rawNum.startsWith(   "-   "))  {  rawLen  -=  1;  }  if(rawNum.startsWith( "-   ")||  rawNum.startsWith( "-   "))  {  rawLen  -=  1;  }  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]          if(rawNum.startsWith(   "-   ")||  rawNum.startsWith(   "-   "))  {  rawLen  -=  1;  }  if(rawNum.startsWith( "-   ")||  rawNum.startsWith( "-   "))  {  rawLen  -=  1;  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	                if(rawNum.startsWith(   "-   ")||    rawNum.startsWith(   "-   "))    {    rawLen    -=    1;    }    if(rawNum.startsWith( "-   ")||  rawNum.startsWith( "-   "))  {  rawLen  -=  1;  }	  	compilable	  [FE]  JsonParseException  	51	8	add
214	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]          if(rawNum.startsWith(   "-   ")||  rawNum.startsWith(   "-   "))  {  rawLen  -=  1;  }  if(rawNum.startsWith( ".-   ")||  rawNum.startsWith( "-   "))  {  rawLen  -=  1;  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	add	                if(rawNum.startsWith(   "-   ")||    rawNum.startsWith(   "-   "))    {    rawLen    -=    1;    }    if(rawNum.startsWith( ".-   ")||  rawNum.startsWith( "-   "))  {  rawLen  -=  1;  }	  	compilable	  [FE]  JsonParseException  	51	8	add
215	[BUG]  [BUGGY]          if(rawNum.startsWith(   "-   ")||  rawNum.startsWith(   "-   "))  {  rawLen  -=  1;  }  if(rawNum.startsWith( ".-   ")||  rawNum.startsWith( "-   "))  {  rawLen  -=  1;  }  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]          if(rawNum.startsWith(   "-   ")||  rawNum.startsWith(   "-   "))  {  rawLen  -=  1;  }  if(rawNum.startsWith( ".-   ")||  rawNum.startsWith( "-   "))  {  rawLen  -=  1;  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	                if(rawNum.startsWith(   "-   ")||    rawNum.startsWith(   "-   "))    {    rawLen    -=    1;    }    if(rawNum.startsWith( ".-   ")||  rawNum.startsWith( "-   "))  {  rawLen  -=  1;  }	  	compilable	  [FE]  JsonParseException  	51	8	add
216	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]        JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]          if(rawNum.startsWith(   "-   ")||  rawNum.startsWith(   "-   "))  {  rawLen  -=  1;  }  if(rawNum.startsWith( "-   ")||  rawNum.startsWith( ".-   "))  {  rawLen  -=  1;  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	add	                if(rawNum.startsWith(   "-   ")||    rawNum.startsWith(   "-   "))    {    rawLen    -=    1;    }    if(rawNum.startsWith( "-   ")||  rawNum.startsWith( ".-   "))  {  rawLen  -=  1;  }	  	compilable	  [FE]  JsonParseException  	51	8	add
217	[BUG]  [BUGGY]          if(rawNum.startsWith(   "-   ")||  rawNum.startsWith(   "-   "))  {  rawLen  -=  1;  }  if(rawNum.startsWith( "-   ")||  rawNum.startsWith( ".-   "))  {  rawLen  -=  1;  }  [FE]  JsonParseException  [FE]        JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]          if(rawNum.startsWith(   "-   ")||  rawNum.startsWith(   "-   "))  {  rawLen  -=  1;  }  if(rawNum.startsWith( "-   ")||  rawNum.startsWith( ".-   "))  {  rawLen  -=  1;  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	                if(rawNum.startsWith(   "-   ")||    rawNum.startsWith(   "-   "))    {    rawLen    -=    1;    }    if(rawNum.startsWith( "-   ")||  rawNum.startsWith( ".-   "))  {  rawLen  -=  1;  }	  	compilable	  [FE]  JsonParseException  	51	8	add
218	[BUG]  [BUGGY]  return  rawNum.substring(0,  rawLen  -  2);  return  rawNum.substring(0,  rawLen  -  2);  [CE]  unreachable  statement  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  return  rawNum.substring(0,  rawLen  -  2);  return  rawNum.substring(0,  rawLen  -  2);  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return    rawNum.substring(0,    rawLen    -    2);    return  rawNum.substring(0,  rawLen  -  2);	  	non-compiled	[CE]  unreachable  statement	48	None	add
219	[BUG]  [BUGGY]  return  rawNum.substring(0,  rawLen  -  2);  String  rawNum  =  rawNum.substring(0,  rawLen  -  2);  [CE]  variable  rawNum  is  already  defined  in  method  _longIntegerDesc(String)  [FE]      JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  return  rawNum.substring(0,  rawLen  -  2);  String  rawNum  =  rawNum.substring(0,  rawLen  -  2);  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return    rawNum.substring(0,    rawLen    -    2);    String  rawNum  =  rawNum.substring(0,  rawLen  -  2);	  	non-compiled	[CE]  variable  rawNum  is  already  defined  in  method  _longIntegerDesc(String)	48	None	add
220	[BUG]  [BUGGY]  return  rawNum.substring(0,  rawLen  -  2);  if(rawNum.startsWith( "-   "))  {  return  rawNum.substring(0,  rawLen  -  2);  }  [CE]  unreachable  statement  [FE]        JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  return  rawNum.substring(0,  rawLen  -  2);  if(rawNum.startsWith( "-   "))  {  return  rawNum.substring(0,  rawLen  -  2);  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return    rawNum.substring(0,    rawLen    -    2);    if(rawNum.startsWith( "-   "))  {  return  rawNum.substring(0,  rawLen  -  2);  }	  	non-compiled	[CE]  unreachable  statement	48	None	add
221	[BUG]  [BUGGY]  return  rawNum.substring(0,  rawLen  -  2);  if(rawNum.startsWith( "-   "))  {  return  rawNum.substring(0,  rawLen  -  2);  }  else  {  return  rawNum.substring(0,  rawLen  -  2);  }  [CE]  unreachable  statement  [FE]          JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  return  rawNum.substring(0,  rawLen  -  2);  if(rawNum.startsWith( "-   "))  {  return  rawNum.substring(0,  rawLen  -  2);  }  else  {  return  rawNum.substring(0,  rawLen  -  2);  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return    rawNum.substring(0,    rawLen    -    2);    if(rawNum.startsWith( "-   "))  {  return  rawNum.substring(0,  rawLen  -  2);  }  else  {  return  rawNum.substring(0,  rawLen  -  2);  }	  	non-compiled	[CE]  unreachable  statement	48	None	add
222	[BUG]  [BUGGY]  return  rawNum.toLowerCase(Locale.ENGLISH,  true);  [CE]  cannot  find  symbol  Locale  [FE]        JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  return  rawNum.toLowerCase(Locale.ENGLISH,  true);  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return  rawNum.toLowerCase(Locale.ENGLISH,  true);	  return    rawNum.toLowerCase(Locale.ENGLISH);    	non-compiled	[CE]  cannot  find  symbol  Locale	50	None	replace
223	[BUG]  [BUGGY]  return  rawNum.toLowerCase(Locale.ENGLISH,  rawLen);  [CE]  cannot  find  symbol  Locale  [FE]          JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  return  rawNum.toLowerCase(Locale.ENGLISH,  rawLen);  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return  rawNum.toLowerCase(Locale.ENGLISH,  rawLen);	  return    rawNum.toLowerCase(Locale.ENGLISH);    	non-compiled	[CE]  cannot  find  symbol  Locale	50	None	replace
224	[BUG]  [BUGGY]  return  rawNum.toLowerCase(Locale.ENGLISH  +  1);  [CE]  cannot  find  symbol  Locale  [FE]            JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  return  rawNum.toLowerCase(Locale.ENGLISH  +  1);  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return  rawNum.toLowerCase(Locale.ENGLISH  +  1);	  return    rawNum.toLowerCase(Locale.ENGLISH);    	non-compiled	[CE]  cannot  find  symbol  Locale	50	None	replace
225	[BUG]  [BUGGY]  String  rawNum  =  rawNum.substring(0,  rawLen).trim();  [CE]  variable  rawNum  is  already  defined  in  method  _longIntegerDesc(String)  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  String  rawNum  =  rawNum.substring(0,  rawLen).trim();  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	String  rawNum  =  rawNum.substring(0,  rawLen).trim();	  return    rawNum.substring(0,    rawLen).trim();    	non-compiled	[CE]  variable  rawNum  is  already  defined  in  method  _longIntegerDesc(String)	17	None	replace
226	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  return  rawNum.substring(0,  rawLen  +  1).trim();  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	add	return  rawNum.substring(0,  rawLen  +  1).trim();	  return    rawNum.substring(0,    rawLen).trim();    	compilable	  [FE]  StringIndexOutOfBoundsException  	17	8	replace
227	[BUG]  [BUGGY]  return  rawNum.substring(0,  rawLen  +  1).trim();  [FE]  StringIndexOutOfBoundsException  [FE]      JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  return  rawNum.substring(0,  rawLen  +  1).trim();  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return  rawNum.substring(0,  rawLen  +  1).trim();	  return    rawNum.substring(0,    rawLen).trim();    	compilable	  [FE]  StringIndexOutOfBoundsException  	17	8	replace
228	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]        JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  return  rawNum.substring(0,  rawLen).trim()  +  1;  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	add	return  rawNum.substring(0,  rawLen).trim()  +  1;	  return    rawNum.substring(0,    rawLen).trim();    	compilable	  [FE]  JsonParseException  	17	8	replace
229	[BUG]  [BUGGY]  return  rawNum.substring(0,  rawLen).trim()  +  1;  [FE]  JsonParseException  [FE]        JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  return  rawNum.substring(0,  rawLen).trim()  +  1;  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return  rawNum.substring(0,  rawLen).trim()  +  1;	  return    rawNum.substring(0,    rawLen).trim();    	compilable	  [FE]  JsonParseException  	17	8	replace
230	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  return  rawNum.substring(0,  rawLen  -  1  +  1);  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	add	return  rawNum.substring(0,  rawLen  -  1  +  1);	  return    rawNum.substring(0,    rawLen    -    1);    	compilable	  [FE]  JsonParseException  	7	8	replace
231	[BUG]  [BUGGY]  return  rawNum.substring(0,  rawLen  -  1  +  1);  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  return  rawNum.substring(0,  rawLen  -  1  +  1);  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return  rawNum.substring(0,  rawLen  -  1  +  1);	  return    rawNum.substring(0,    rawLen    -    1);    	compilable	  [FE]  JsonParseException  	7	8	replace
232	[BUG]  [BUGGY]  String  rawNum  =  rawNum.trim();  char[]  rawNum  =  rawNum.toCharArray();  [CE]  variable  rawNum  is  already  defined  in  method  _longIntegerDesc(String)  [FE]            JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  String  rawNum  =  rawNum.trim();  char[]  rawNum  =  rawNum.toCharArray();  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	String  rawNum  =  rawNum.trim();  char[]  rawNum  =  rawNum.toCharArray();	  return    rawNum.trim();    char[]    rawNum    =    rawNum.toCharArray();    	non-compiled	[CE]  variable  rawNum  is  already  defined  in  method  _longIntegerDesc(String)	36	None	replace
233	[BUG]  [BUGGY]  String[]  rawNum  =  rawNum.toCharArray();  [CE]  variable  rawNum  is  already  defined  in  method  _longIntegerDesc(String)  [FE]              JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  String[]  rawNum  =  rawNum.toCharArray();  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	String[]  rawNum  =  rawNum.toCharArray();	  return    rawNum.trim();    char[]    rawNum    =    rawNum.toCharArray();    	non-compiled	[CE]  variable  rawNum  is  already  defined  in  method  _longIntegerDesc(String)	36	None	replace
234	[BUG]  [BUGGY]  if(rawNum.length()  ==  0)  {  return  rawNum.trim();  char[]  rawNum  =  rawNum.toCharArray();  }  [CE]  variable  rawNum  is  already  defined  in  method  _longIntegerDesc(String)  [FE]            JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  if(rawNum.length()  ==  0)  {  return  rawNum.trim();  char[]  rawNum  =  rawNum.toCharArray();  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	if(rawNum.length()  ==  0)  {  return  rawNum.trim();  char[]  rawNum  =  rawNum.toCharArray();  }	  return    rawNum.trim();    char[]    rawNum    =    rawNum.toCharArray();    	non-compiled	[CE]  variable  rawNum  is  already  defined  in  method  _longIntegerDesc(String)	36	None	replace
235	[BUG]  [BUGGY]  if(rawNum.startsWith( ".- ")||  rawNum.startsWith( ".- "))  {  throw  new  JsonParseException( " ");  }  [CE]  no  suitable  constructor  found  for  JsonParseException(String)  [FE]              JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  if(rawNum.startsWith( ".- ")||  rawNum.startsWith( ".- "))  {  throw  new  JsonParseException( " ");  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	if(rawNum.startsWith( ".- ")||  rawNum.startsWith( ".- "))  {  throw  new  JsonParseException( " ");  }	  if(rawNum.startsWith(   "-   ")||    rawNum.startsWith(   "-   "))    {    throw    new    JsonParseException(   "   ");    }    	non-compiled	[CE]  no  suitable  constructor  found  for  JsonParseException(String)	24	None	replace
236	[BUG]  [BUGGY]  if(rawNum.startsWith( "- ")||  rawNum.startsWith( ".- "))  {  throw  new  JsonParseException( " ");  }  [CE]  no  suitable  constructor  found  for  JsonParseException(String)  [FE]                JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  if(rawNum.startsWith( "- ")||  rawNum.startsWith( ".- "))  {  throw  new  JsonParseException( " ");  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	if(rawNum.startsWith( "- ")||  rawNum.startsWith( ".- "))  {  throw  new  JsonParseException( " ");  }	  if(rawNum.startsWith(   "-   ")||    rawNum.startsWith(   "-   "))    {    throw    new    JsonParseException(   "   ");    }    	non-compiled	[CE]  no  suitable  constructor  found  for  JsonParseException(String)	24	None	replace
237	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  _currToken  =  JsonToken.VALUE_NUMBER_FLOAT;  JsonToken  _currToken  =  JsonToken.VALUE_NUMBER_FLOAT;  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	add	_currToken    =    JsonToken.VALUE_NUMBER_FLOAT;    JsonToken  _currToken  =  JsonToken.VALUE_NUMBER_FLOAT;	  	compilable	  [FE]  JsonParseException  	40	8	add
238	[BUG]  [BUGGY]  _currToken  =  JsonToken.VALUE_NUMBER_FLOAT;  JsonToken  _currToken  =  JsonToken.VALUE_NUMBER_FLOAT;  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  _currToken  =  JsonToken.VALUE_NUMBER_FLOAT;  JsonToken  _currToken  =  JsonToken.VALUE_NUMBER_FLOAT;  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	_currToken    =    JsonToken.VALUE_NUMBER_FLOAT;    JsonToken  _currToken  =  JsonToken.VALUE_NUMBER_FLOAT;	  	compilable	  [FE]  JsonParseException  	40	8	add
239	[BUG]  [BUGGY]  _currToken  =  JsonToken.VALUE_NUMBER_FLOAT;  ((  JsonToken)_currToken).VALUE_NUMBER_FLOAT;  [CE]  not  a  statement  [FE]      JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  _currToken  =  JsonToken.VALUE_NUMBER_FLOAT;  ((  JsonToken)_currToken).VALUE_NUMBER_FLOAT;  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	_currToken    =    JsonToken.VALUE_NUMBER_FLOAT;    ((  JsonToken)_currToken).VALUE_NUMBER_FLOAT;	  	non-compiled	[CE]  not  a  statement	40	None	add
240	[BUG]  [BUGGY]  _currToken  =  JsonToken.VALUE_NUMBER_FLOAT;  _currToken  =  JsonToken.VALUE_NUMBER_LONG;  [CE]  cannot  find  symbol  VALUE_NUMBER_LONG  [FE]        JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  _currToken  =  JsonToken.VALUE_NUMBER_FLOAT;  _currToken  =  JsonToken.VALUE_NUMBER_LONG;  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	_currToken    =    JsonToken.VALUE_NUMBER_FLOAT;    _currToken  =  JsonToken.VALUE_NUMBER_LONG;	  	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_LONG	40	None	add
241	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  if(rawNum.startsWith( "- ")||  rawLen  >  2)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	add	if(rawNum.startsWith( "- ")||  rawLen  >  2)  {  throw  new  IllegalArgumentException( " ");  }	  if(rawNum.startsWith(   "-   ")||    rawLen    <    2)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  IllegalArgumentException  	63	8	replace
242	[BUG]  [BUGGY]  if(rawNum.startsWith( "- ")||  rawLen  >  2)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  if(rawNum.startsWith( "- ")||  rawLen  >  2)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	if(rawNum.startsWith( "- ")||  rawLen  >  2)  {  throw  new  IllegalArgumentException( " ");  }	  if(rawNum.startsWith(   "-   ")||    rawLen    <    2)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  IllegalArgumentException  	63	8	replace
243	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  _currToken  =  JsonToken.VALUE_STRING;  JsonToken  _currToken  =  JsonToken.VALUE_STRING;  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	add	_currToken    =    JsonToken.VALUE_STRING;    JsonToken  _currToken  =  JsonToken.VALUE_STRING;	  	compilable	  [FE]  JsonParseException  	38	8	add
244	[BUG]  [BUGGY]  _currToken  =  JsonToken.VALUE_STRING;  JsonToken  _currToken  =  JsonToken.VALUE_STRING;  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  _currToken  =  JsonToken.VALUE_STRING;  JsonToken  _currToken  =  JsonToken.VALUE_STRING;  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	_currToken    =    JsonToken.VALUE_STRING;    JsonToken  _currToken  =  JsonToken.VALUE_STRING;	  	compilable	  [FE]  JsonParseException  	38	8	add
245	[BUG]  [BUGGY]  _currToken  =  JsonToken.VALUE_STRING;  ((  JsonToken)_currToken).VALUE_STRING;  [CE]  not  a  statement  [FE]      JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  _currToken  =  JsonToken.VALUE_STRING;  ((  JsonToken)_currToken).VALUE_STRING;  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	_currToken    =    JsonToken.VALUE_STRING;    ((  JsonToken)_currToken).VALUE_STRING;	  	non-compiled	[CE]  not  a  statement	38	None	add
246	[BUG]  [BUGGY]  return  rawLen  <  =  NR_UNKNOWN?  null  :  rawLen;  [CE]  illegal  start  of  expression  [FE]                  JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  return  rawLen  <  =  NR_UNKNOWN?  null  :  rawLen;  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return  rawLen  <  =  NR_UNKNOWN?  null  :  rawLen;	  return    rawLen    <    =    MAX_ERROR_TOKEN_LENGTH?    null    :    rawLen;    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
247	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]        JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  String  digits  =  rawNum.substring(0,  rawLen);  if(rawNum!=  null)  {  return  digits;  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	add	String  digits  =  rawNum.substring(0,  rawLen);  if(rawNum!=  null)  {  return  digits;  }	  return    rawNum.substring(0,    rawLen);    if(rawNum!=    null)    {    return    rawNum.substring(0,    rawLen);    }    	compilable	  [FE]  JsonParseException  	37	8	replace
248	[BUG]  [BUGGY]  String  digits  =  rawNum.substring(0,  rawLen);  if(rawNum!=  null)  {  return  digits;  }  [FE]  JsonParseException  [FE]        JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  String  digits  =  rawNum.substring(0,  rawLen);  if(rawNum!=  null)  {  return  digits;  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	String  digits  =  rawNum.substring(0,  rawLen);  if(rawNum!=  null)  {  return  digits;  }	  return    rawNum.substring(0,    rawLen);    if(rawNum!=    null)    {    return    rawNum.substring(0,    rawLen);    }    	compilable	  [FE]  JsonParseException  	37	8	replace
249	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]          JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  if(rawLen  >  0)  {  return  rawNum.substring(0,  rawLen);  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	add	if(rawLen  >  0)  {  return  rawNum.substring(0,  rawLen);  }	  return    rawNum.substring(0,    rawLen);    if(rawNum!=    null)    {    return    rawNum.substring(0,    rawLen);    }    	compilable	  [FE]  JsonParseException  	37	8	replace
250	[BUG]  [BUGGY]  if(rawLen  >  0)  {  return  rawNum.substring(0,  rawLen);  }  [FE]  JsonParseException  [FE]          JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  if(rawLen  >  0)  {  return  rawNum.substring(0,  rawLen);  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	if(rawLen  >  0)  {  return  rawNum.substring(0,  rawLen);  }	  return    rawNum.substring(0,    rawLen);    if(rawNum!=    null)    {    return    rawNum.substring(0,    rawLen);    }    	compilable	  [FE]  JsonParseException  	37	8	replace
251	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]            JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  String  digits  =  rawNum.substring(0,  rawLen);  if(rawNum  ==  null)  {  return  digits;  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	add	String  digits  =  rawNum.substring(0,  rawLen);  if(rawNum  ==  null)  {  return  digits;  }	  return    rawNum.substring(0,    rawLen);    if(rawNum!=    null)    {    return    rawNum.substring(0,    rawLen);    }    	compilable	  [FE]  JsonParseException  	37	8	replace
252	[BUG]  [BUGGY]  String  digits  =  rawNum.substring(0,  rawLen);  if(rawNum  ==  null)  {  return  digits;  }  [FE]  JsonParseException  [FE]            JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  String  digits  =  rawNum.substring(0,  rawLen);  if(rawNum  ==  null)  {  return  digits;  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	String  digits  =  rawNum.substring(0,  rawLen);  if(rawNum  ==  null)  {  return  digits;  }	  return    rawNum.substring(0,    rawLen);    if(rawNum!=    null)    {    return    rawNum.substring(0,    rawLen);    }    	compilable	  [FE]  JsonParseException  	37	8	replace
253	[BUG]  [BUGGY]  return  rawNum.substring(0,  rawLen).trim();  if(rawNum.startsWith( "- "))  {  return  rawNum.substring(0,  rawLen).trim();  }  else  {  return  rawNum.substring(0,  rawLen).trim();  }  [CE]  unreachable  statement  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  return  rawNum.substring(0,  rawLen).trim();  if(rawNum.startsWith( "- "))  {  return  rawNum.substring(0,  rawLen).trim();  }  else  {  return  rawNum.substring(0,  rawLen).trim();  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return    rawNum.substring(0,    rawLen).trim();    if(rawNum.startsWith( "- "))  {  return  rawNum.substring(0,  rawLen).trim();  }  else  {  return  rawNum.substring(0,  rawLen).trim();  }	  	non-compiled	[CE]  unreachable  statement	16	None	add
254	[BUG]  [BUGGY]  return  rawNum.substring(0,  rawLen).trim();  if(rawNum.startsWith( "- "))  {  return  rawNum.substring(0,  rawLen).trim();  }  [CE]  unreachable  statement  [FE]      JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  return  rawNum.substring(0,  rawLen).trim();  if(rawNum.startsWith( "- "))  {  return  rawNum.substring(0,  rawLen).trim();  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return    rawNum.substring(0,    rawLen).trim();    if(rawNum.startsWith( "- "))  {  return  rawNum.substring(0,  rawLen).trim();  }	  	non-compiled	[CE]  unreachable  statement	16	None	add
255	[BUG]  [BUGGY]  return  rawNum.substring(0,  rawLen).trim();  if(rawNum.startsWith( "- ")||  rawNum.startsWith( "- "))  {  return  rawNum.substring(0,  rawLen).trim();  }  [CE]  unreachable  statement  [FE]        JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  return  rawNum.substring(0,  rawLen).trim();  if(rawNum.startsWith( "- ")||  rawNum.startsWith( "- "))  {  return  rawNum.substring(0,  rawLen).trim();  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return    rawNum.substring(0,    rawLen).trim();    if(rawNum.startsWith( "- ")||  rawNum.startsWith( "- "))  {  return  rawNum.substring(0,  rawLen).trim();  }	  	non-compiled	[CE]  unreachable  statement	16	None	add
256	[BUG]  [BUGGY]  _throwUnquotedSpace();  [CE]  cannot  find  symbol  [FE]    UnsupportedOperationException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  _throwUnquotedSpace();  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	_throwUnquotedSpace();	  _reportUnsupportedOperation();    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
257	[BUG]  [BUGGY]  if(rawNum.startsWith( "- "))  {  return  rawNum.toLowerCase();  return  rawNum.toLowerCase();  }  [CE]  unreachable  statement  [FE]        JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  if(rawNum.startsWith( "- "))  {  return  rawNum.toLowerCase();  return  rawNum.toLowerCase();  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	if(rawNum.startsWith( "- "))  {  return  rawNum.toLowerCase();  return  rawNum.toLowerCase();  }	  return    rawNum.toLowerCase();    return    rawNum.toLowerCase();    	non-compiled	[CE]  unreachable  statement	1	None	replace
258	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]          JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  if(rawNum  ==  null)  {  return  rawNum.toLowerCase();  }  else  {  return  rawNum.toLowerCase();  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	add	if(rawNum  ==  null)  {  return  rawNum.toLowerCase();  }  else  {  return  rawNum.toLowerCase();  }	  return    rawNum.toLowerCase();    return    rawNum.toLowerCase();    	compilable	  [FE]  JsonParseException  	1	8	replace
259	[BUG]  [BUGGY]  if(rawNum  ==  null)  {  return  rawNum.toLowerCase();  }  else  {  return  rawNum.toLowerCase();  }  [FE]  JsonParseException  [FE]          JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  if(rawNum  ==  null)  {  return  rawNum.toLowerCase();  }  else  {  return  rawNum.toLowerCase();  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	if(rawNum  ==  null)  {  return  rawNum.toLowerCase();  }  else  {  return  rawNum.toLowerCase();  }	  return    rawNum.toLowerCase();    return    rawNum.toLowerCase();    	compilable	  [FE]  JsonParseException  	1	8	replace
260	[BUG]  [BUGGY]  String  rawNum  =  rawNum.substring(rawLen);  [CE]  variable  rawNum  is  already  defined  in  method  _longIntegerDesc(String)  [FE]          JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  String  rawNum  =  rawNum.substring(rawLen);  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	String  rawNum  =  rawNum.substring(rawLen);	  return    rawNum.substring(0,    rawLen);    String    rawNum    =    rawNum.substring(0,    rawLen);    	non-compiled	[CE]  variable  rawNum  is  already  defined  in  method  _longIntegerDesc(String)	10	None	replace
261	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  if(rawNum.startsWith( "- ")||  rawLen  >  2)  {  return  null;  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	add	if(rawNum.startsWith( "- ")||  rawLen  >  2)  {  return  null;  }	  if(rawNum.startsWith(   "-   ")||    rawLen    <    2)    {    return    null;    }    	compilable	  [FE]  JsonParseException  	67	8	replace
262	[BUG]  [BUGGY]  if(rawNum.startsWith( "- ")||  rawLen  >  2)  {  return  null;  }  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  if(rawNum.startsWith( "- ")||  rawLen  >  2)  {  return  null;  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	if(rawNum.startsWith( "- ")||  rawLen  >  2)  {  return  null;  }	  if(rawNum.startsWith(   "-   ")||    rawLen    <    2)    {    return    null;    }    	compilable	  [FE]  JsonParseException  	67	8	replace
263	[BUG]  [BUGGY]  return  rawLen  +  MAX_ERROR_TOKEN_LENGTH.toString();  [CE]  int  cannot  be  dereferenced  [FE]                  JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  return  rawLen  +  MAX_ERROR_TOKEN_LENGTH.toString();  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return  rawLen  +  MAX_ERROR_TOKEN_LENGTH.toString();	  return    rawLen    +    _longIntegerDesc.toString();    	non-compiled	[CE]  int  cannot  be  dereferenced	47	None	replace
264	[BUG]  [BUGGY]  return  rawNum.toLowerCase(Locale.ENGLISH)+  1;  [CE]  cannot  find  symbol  Locale  [FE]        JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  return  rawNum.toLowerCase(Locale.ENGLISH)+  1;  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return  rawNum.toLowerCase(Locale.ENGLISH)+  1;	  return    rawNum.toLowerCase(Locale.ENGLISH);    	non-compiled	[CE]  cannot  find  symbol  Locale	50	None	replace
265	[BUG]  [BUGGY]  if(rawLen  ==  0)  {  return  rawNum.trim();  char[]  rawNum  =  rawNum.toCharArray();  return  rawNum.trim();  }  [CE]  variable  rawNum  is  already  defined  in  method  _longIntegerDesc(String)  [FE]          JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  if(rawLen  ==  0)  {  return  rawNum.trim();  char[]  rawNum  =  rawNum.toCharArray();  return  rawNum.trim();  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	if(rawLen  ==  0)  {  return  rawNum.trim();  char[]  rawNum  =  rawNum.toCharArray();  return  rawNum.trim();  }	  return    rawNum.trim();    char[]    rawNum    =    rawNum.toCharArray();    return    rawNum.trim();    	non-compiled	[CE]  variable  rawNum  is  already  defined  in  method  _longIntegerDesc(String)	35	None	replace
266	[BUG]  [BUGGY]  if(rawLen  >  0)  {  return  rawNum.trim();  char[]  rawNum  =  rawNum.toCharArray();  return  rawNum.trim();  }  [CE]  variable  rawNum  is  already  defined  in  method  _longIntegerDesc(String)  [FE]            JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  if(rawLen  >  0)  {  return  rawNum.trim();  char[]  rawNum  =  rawNum.toCharArray();  return  rawNum.trim();  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	if(rawLen  >  0)  {  return  rawNum.trim();  char[]  rawNum  =  rawNum.toCharArray();  return  rawNum.trim();  }	  return    rawNum.trim();    char[]    rawNum    =    rawNum.toCharArray();    return    rawNum.trim();    	non-compiled	[CE]  variable  rawNum  is  already  defined  in  method  _longIntegerDesc(String)	35	None	replace
267	[BUG]  [BUGGY]  if(rawNum.length()  ==  0)  {  return  rawNum.trim();  char[]  rawNum  =  rawNum.toCharArray();  return  rawNum.trim();  }  [CE]  variable  rawNum  is  already  defined  in  method  _longIntegerDesc(String)  [FE]              JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  if(rawNum.length()  ==  0)  {  return  rawNum.trim();  char[]  rawNum  =  rawNum.toCharArray();  return  rawNum.trim();  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	if(rawNum.length()  ==  0)  {  return  rawNum.trim();  char[]  rawNum  =  rawNum.toCharArray();  return  rawNum.trim();  }	  return    rawNum.trim();    char[]    rawNum    =    rawNum.toCharArray();    return    rawNum.trim();    	non-compiled	[CE]  variable  rawNum  is  already  defined  in  method  _longIntegerDesc(String)	35	None	replace
268	[BUG]  [BUGGY]  if(rawLen  ==  0)  {  return  rawNum.trim();  }  else  {  char[]  rawNum  =  rawNum.toCharArray();  return  rawNum.trim();  }  [CE]  variable  rawNum  is  already  defined  in  method  _longIntegerDesc(String)  [FE]                JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  if(rawLen  ==  0)  {  return  rawNum.trim();  }  else  {  char[]  rawNum  =  rawNum.toCharArray();  return  rawNum.trim();  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	if(rawLen  ==  0)  {  return  rawNum.trim();  }  else  {  char[]  rawNum  =  rawNum.toCharArray();  return  rawNum.trim();  }	  return    rawNum.trim();    char[]    rawNum    =    rawNum.toCharArray();    return    rawNum.trim();    	non-compiled	[CE]  variable  rawNum  is  already  defined  in  method  _longIntegerDesc(String)	35	None	replace
269	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]                JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  if(rawLen  ==  0)  {  return  rawNum.trim();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	add	if(rawLen  ==  0)  {  return  rawNum.trim();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  return    rawNum.trim();    if(rawNum.startsWith(   "-   "))    {    return    rawNum.trim();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  IllegalArgumentException  	29	8	replace
270	[BUG]  [BUGGY]  if(rawLen  ==  0)  {  return  rawNum.trim();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]                JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  if(rawLen  ==  0)  {  return  rawNum.trim();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	if(rawLen  ==  0)  {  return  rawNum.trim();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  return    rawNum.trim();    if(rawNum.startsWith(   "-   "))    {    return    rawNum.trim();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  IllegalArgumentException  	29	8	replace
271	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]        JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  if(rawLen  >  0)  {  return  rawNum.substring(0,  rawLen);  }  else  {  return  rawNum.substring(0,  rawLen);  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	add	if(rawLen  >  0)  {  return  rawNum.substring(0,  rawLen);  }  else  {  return  rawNum.substring(0,  rawLen);  }	  return    rawNum.substring(0,    rawLen);    return    rawNum.substring(0,    rawLen);    	compilable	  [FE]  JsonParseException  	9	8	replace
272	[BUG]  [BUGGY]  if(rawLen  >  0)  {  return  rawNum.substring(0,  rawLen);  }  else  {  return  rawNum.substring(0,  rawLen);  }  [FE]  JsonParseException  [FE]        JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  if(rawLen  >  0)  {  return  rawNum.substring(0,  rawLen);  }  else  {  return  rawNum.substring(0,  rawLen);  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	if(rawLen  >  0)  {  return  rawNum.substring(0,  rawLen);  }  else  {  return  rawNum.substring(0,  rawLen);  }	  return    rawNum.substring(0,    rawLen);    return    rawNum.substring(0,    rawLen);    	compilable	  [FE]  JsonParseException  	9	8	replace
273	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  return  String.format( "Integer  with  %d  digits] ",  rawLen);  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	add	return  String.format( "Integer  with  %d  digits] ",  rawLen);	  if(rawNum.startsWith(   "-   ")||    rawNum.startsWith(   "-   "))    {    return    String.format(   "Integer    with    %d    digits]   ",    rawLen);    }    	compilable	  [FE]  JsonParseException  	23	8	replace
274	[BUG]  [BUGGY]  return  String.format( "Integer  with  %d  digits] ",  rawLen);  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  return  String.format( "Integer  with  %d  digits] ",  rawLen);  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return  String.format( "Integer  with  %d  digits] ",  rawLen);	  if(rawNum.startsWith(   "-   ")||    rawNum.startsWith(   "-   "))    {    return    String.format(   "Integer    with    %d    digits]   ",    rawLen);    }    	compilable	  [FE]  JsonParseException  	23	8	replace
275	[BUG]  [BUGGY]  return  rawNum.substring(0,  rawLen).toLowerCase();  String  rawNum  =  rawNum.substring(0,  rawLen).toLowerCase();  [CE]  variable  rawNum  is  already  defined  in  method  _longIntegerDesc(String)  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  return  rawNum.substring(0,  rawLen).toLowerCase();  String  rawNum  =  rawNum.substring(0,  rawLen).toLowerCase();  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return    rawNum.substring(0,    rawLen).toLowerCase();    String  rawNum  =  rawNum.substring(0,  rawLen).toLowerCase();	  	non-compiled	[CE]  variable  rawNum  is  already  defined  in  method  _longIntegerDesc(String)	32	None	add
276	[BUG]  [BUGGY]  return  rawNum.substring(0,  rawLen).toLowerCase();  if(rawNum.startsWith( "- ")||  rawLen  <  1)  {  return  rawNum.substring(0,  rawLen).toLowerCase();  }  [CE]  unreachable  statement  [FE]      JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  return  rawNum.substring(0,  rawLen).toLowerCase();  if(rawNum.startsWith( "- ")||  rawLen  <  1)  {  return  rawNum.substring(0,  rawLen).toLowerCase();  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return    rawNum.substring(0,    rawLen).toLowerCase();    if(rawNum.startsWith( "- ")||  rawLen  <  1)  {  return  rawNum.substring(0,  rawLen).toLowerCase();  }	  	non-compiled	[CE]  unreachable  statement	32	None	add
277	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  if(rawNum.startsWith( ".0 ")||  rawNum.startsWith( ".0 "))  {  rawLen  -=  1;  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	add	if(rawNum.startsWith( ".0 ")||  rawNum.startsWith( ".0 "))  {  rawLen  -=  1;  }	          if(rawNum.startsWith(   "-   ")||    rawNum.startsWith(   "-   "))    {    rawLen    -=    1;    }    	compilable	  [FE]  JsonParseException  	52	8	replace
278	[BUG]  [BUGGY]  if(rawNum.startsWith( ".0 ")||  rawNum.startsWith( ".0 "))  {  rawLen  -=  1;  }  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  if(rawNum.startsWith( ".0 ")||  rawNum.startsWith( ".0 "))  {  rawLen  -=  1;  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	if(rawNum.startsWith( ".0 ")||  rawNum.startsWith( ".0 "))  {  rawLen  -=  1;  }	          if(rawNum.startsWith(   "-   ")||    rawNum.startsWith(   "-   "))    {    rawLen    -=    1;    }    	compilable	  [FE]  JsonParseException  	52	8	replace
279	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]        JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  if(rawLen  >  0)  {  return  rawNum.substring(0,  rawLen);  }  else  {  return  String.format( "[Integer  with  %d  digits] ",  rawLen);  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	add	if(rawLen  >  0)  {  return  rawNum.substring(0,  rawLen);  }  else  {  return  String.format( "[Integer  with  %d  digits] ",  rawLen);  }	  return    rawNum.substring(0,    rawLen);    if(rawNum.startsWith(   "-   "))    {    return    rawNum.substring(0,    rawLen);    }    else    {    return    String.format(   "[Integer    with    %d    digits]   ",    rawLen);    }    	compilable	  [FE]  JsonParseException  	60	8	replace
280	[BUG]  [BUGGY]  if(rawLen  >  0)  {  return  rawNum.substring(0,  rawLen);  }  else  {  return  String.format( "[Integer  with  %d  digits] ",  rawLen);  }  [FE]  JsonParseException  [FE]        JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  if(rawLen  >  0)  {  return  rawNum.substring(0,  rawLen);  }  else  {  return  String.format( "[Integer  with  %d  digits] ",  rawLen);  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	if(rawLen  >  0)  {  return  rawNum.substring(0,  rawLen);  }  else  {  return  String.format( "[Integer  with  %d  digits] ",  rawLen);  }	  return    rawNum.substring(0,    rawLen);    if(rawNum.startsWith(   "-   "))    {    return    rawNum.substring(0,    rawLen);    }    else    {    return    String.format(   "[Integer    with    %d    digits]   ",    rawLen);    }    	compilable	  [FE]  JsonParseException  	60	8	replace
281	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  return  rawNum.substring(1,  rawLen).trim();  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	add	return  rawNum.substring(1,  rawLen).trim();	  return    rawNum.substring(0,    rawLen).trim();    	compilable	  [FE]  JsonParseException  	17	8	replace
282	[BUG]  [BUGGY]  return  rawNum.substring(1,  rawLen).trim();  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  return  rawNum.substring(1,  rawLen).trim();  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return  rawNum.substring(1,  rawLen).trim();	  return    rawNum.substring(0,    rawLen).trim();    	compilable	  [FE]  JsonParseException  	17	8	replace
283	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  return  rawNum.substring(0,  rawLen  -  10);  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	add	return  rawNum.substring(0,  rawLen  -  10);	  return    rawNum.substring(0,    rawLen    -    2);    	compilable	  [FE]  JsonParseException  	49	8	replace
284	[BUG]  [BUGGY]  return  rawNum.substring(0,  rawLen  -  10);  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  return  rawNum.substring(0,  rawLen  -  10);  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return  rawNum.substring(0,  rawLen  -  10);	  return    rawNum.substring(0,    rawLen    -    2);    	compilable	  [FE]  JsonParseException  	49	8	replace
285	[BUG]  [BUGGY]  return  rawLen  +  _longIntegerDesc(rawNum);  if(rawLen  ==  0)  {  return  rawLen  +  _longIntegerDesc(rawNum);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  unreachable  statement  [FE]    StackOverflowError    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  return  rawLen  +  _longIntegerDesc(rawNum);  if(rawLen  ==  0)  {  return  rawLen  +  _longIntegerDesc(rawNum);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return    rawLen    +    _longIntegerDesc(rawNum);    if(rawLen  ==  0)  {  return  rawLen  +  _longIntegerDesc(rawNum);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  unreachable  statement	44	None	add
286	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]              JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  return  rawLen  ==  MAX_ERROR_TOKEN_LENGTH?  String.valueOf(rawNum):  rawNum;  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	add	return  rawLen  ==  MAX_ERROR_TOKEN_LENGTH?  String.valueOf(rawNum):  rawNum;	  return    rawLen    <    =    MAX_ERROR_TOKEN_LENGTH?    String.valueOf(rawNum):    rawNum;    	compilable	  [FE]  JsonParseException  	57	8	replace
287	[BUG]  [BUGGY]  return  rawLen  ==  MAX_ERROR_TOKEN_LENGTH?  String.valueOf(rawNum):  rawNum;  [FE]  JsonParseException  [FE]              JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  return  rawLen  ==  MAX_ERROR_TOKEN_LENGTH?  String.valueOf(rawNum):  rawNum;  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return  rawLen  ==  MAX_ERROR_TOKEN_LENGTH?  String.valueOf(rawNum):  rawNum;	  return    rawLen    <    =    MAX_ERROR_TOKEN_LENGTH?    String.valueOf(rawNum):    rawNum;    	compilable	  [FE]  JsonParseException  	57	8	replace
288	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]                JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  return  rawLen  <  MAX_ERROR_TOKEN_LENGTH?  String.valueOf(rawNum):  rawNum;  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	add	return  rawLen  <  MAX_ERROR_TOKEN_LENGTH?  String.valueOf(rawNum):  rawNum;	  return    rawLen    <    =    MAX_ERROR_TOKEN_LENGTH?    String.valueOf(rawNum):    rawNum;    	compilable	  [FE]  JsonParseException  	57	8	replace
289	[BUG]  [BUGGY]  return  rawLen  <  MAX_ERROR_TOKEN_LENGTH?  String.valueOf(rawNum):  rawNum;  [FE]  JsonParseException  [FE]                JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  return  rawLen  <  MAX_ERROR_TOKEN_LENGTH?  String.valueOf(rawNum):  rawNum;  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return  rawLen  <  MAX_ERROR_TOKEN_LENGTH?  String.valueOf(rawNum):  rawNum;	  return    rawLen    <    =    MAX_ERROR_TOKEN_LENGTH?    String.valueOf(rawNum):    rawNum;    	compilable	  [FE]  JsonParseException  	57	8	replace
290	[BUG]  [BUGGY]  return  rawNum.substring(0,  rawLen  +  1);  String  digits  =  rawNum.substring(0,  rawLen  +  1);  [CE]  unreachable  statement  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  return  rawNum.substring(0,  rawLen  +  1);  String  digits  =  rawNum.substring(0,  rawLen  +  1);  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return    rawNum.substring(0,    rawLen    +    1);    String  digits  =  rawNum.substring(0,  rawLen  +  1);	  	non-compiled	[CE]  unreachable  statement	4	None	add
291	[BUG]  [BUGGY]  return  rawNum.substring(0,  rawLen  +  1);  String  digits  =  rawNum.substring(0,  rawLen  +  1);  return  rawNum.substring(0,  rawLen  +  1);  [CE]  unreachable  statement  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  return  rawNum.substring(0,  rawLen  +  1);  String  digits  =  rawNum.substring(0,  rawLen  +  1);  return  rawNum.substring(0,  rawLen  +  1);  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return    rawNum.substring(0,    rawLen    +    1);    String  digits  =  rawNum.substring(0,  rawLen  +  1);  return  rawNum.substring(0,  rawLen  +  1);	  	non-compiled	[CE]  unreachable  statement	4	None	add
292	[BUG]  [BUGGY]  return  rawNum.substring(0,  rawLen  +  1);  StringBuffer  rawNum  =  new  StringBuffer(16);  return  rawNum.substring(0,  rawLen  +  1);  [CE]  variable  rawNum  is  already  defined  in  method  _longIntegerDesc(String)  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  return  rawNum.substring(0,  rawLen  +  1);  StringBuffer  rawNum  =  new  StringBuffer(16);  return  rawNum.substring(0,  rawLen  +  1);  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return    rawNum.substring(0,    rawLen    +    1);    StringBuffer  rawNum  =  new  StringBuffer(16);  return  rawNum.substring(0,  rawLen  +  1);	  	non-compiled	[CE]  variable  rawNum  is  already  defined  in  method  _longIntegerDesc(String)	4	None	add
293	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  if(rawNum.startsWith( ".0 ")||  rawNum.startsWith( ".0 "))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	add	if(rawNum.startsWith( ".0 ")||  rawNum.startsWith( ".0 "))  {  throw  new  IllegalArgumentException( " ");  }	  if(rawNum.startsWith(   "-   ")||    rawNum.startsWith(   "-   "))    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  JsonParseException  	19	8	replace
294	[BUG]  [BUGGY]  if(rawNum.startsWith( ".0 ")||  rawNum.startsWith( ".0 "))  {  throw  new  IllegalArgumentException( " ");  }  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  if(rawNum.startsWith( ".0 ")||  rawNum.startsWith( ".0 "))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	if(rawNum.startsWith( ".0 ")||  rawNum.startsWith( ".0 "))  {  throw  new  IllegalArgumentException( " ");  }	  if(rawNum.startsWith(   "-   ")||    rawNum.startsWith(   "-   "))    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  JsonParseException  	19	8	replace
295	[BUG]  [BUGGY]  if(rawNum.startsWith( "- ")||  rawNum.startsWith( "-))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  unclosed  string  literal  [FE]      JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  if(rawNum.startsWith( "- ")||  rawNum.startsWith( "-))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	if(rawNum.startsWith( "- ")||  rawNum.startsWith( "-))  {  throw  new  IllegalArgumentException( " ");  }	  if(rawNum.startsWith(   "-   ")||    rawNum.startsWith(   "-   "))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  unclosed  string  literal	19	None	replace
296	[BUG]  [BUGGY]  String  rawNum  =  rawNum.substring(0,  rawLen);  if(rawNum.indexOf( "-+ ")  <  0)  {  return  rawNum.substring(0,  rawLen);  }  [CE]  variable  rawNum  is  already  defined  in  method  _longIntegerDesc(String)  [FE]          JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  String  rawNum  =  rawNum.substring(0,  rawLen);  if(rawNum.indexOf( "-+ ")  <  0)  {  return  rawNum.substring(0,  rawLen);  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	String  rawNum  =  rawNum.substring(0,  rawLen);  if(rawNum.indexOf( "-+ ")  <  0)  {  return  rawNum.substring(0,  rawLen);  }	  return    rawNum.substring(0,    rawLen);    if(rawNum.indexOf(   "-   ")    <    0)    {    return    rawNum.substring(0,    rawLen);    }    	non-compiled	[CE]  variable  rawNum  is  already  defined  in  method  _longIntegerDesc(String)	61	None	replace
297	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  if(rawNum.startsWith( "- ")||  rawLen  <  1)  {  return  String.format( "Integer  with  %d  digits ");  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	add	if(rawNum.startsWith( "- ")||  rawLen  <  1)  {  return  String.format( "Integer  with  %d  digits ");  }	  if(rawNum.startsWith(   "-   ")||    rawLen    <    2)    {    return    String.format(   "Integer    with    %d    digits   ");    }    	compilable	  [FE]  JsonParseException  	65	8	replace
298	[BUG]  [BUGGY]  if(rawNum.startsWith( "- ")||  rawLen  <  1)  {  return  String.format( "Integer  with  %d  digits ");  }  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  if(rawNum.startsWith( "- ")||  rawLen  <  1)  {  return  String.format( "Integer  with  %d  digits ");  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	if(rawNum.startsWith( "- ")||  rawLen  <  1)  {  return  String.format( "Integer  with  %d  digits ");  }	  if(rawNum.startsWith(   "-   ")||    rawLen    <    2)    {    return    String.format(   "Integer    with    %d    digits   ");    }    	compilable	  [FE]  JsonParseException  	65	8	replace
299	[BUG]  [BUGGY]  [FE]  MissingFormatArgumentException  [FE]      JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  return  String.format( "Integer  with  %d  digits ");  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	add	return  String.format( "Integer  with  %d  digits ");	  if(rawNum.startsWith(   "-   ")||    rawLen    <    2)    {    return    String.format(   "Integer    with    %d    digits   ");    }    	compilable	  [FE]  MissingFormatArgumentException  	65	8	replace
300	[BUG]  [BUGGY]  return  String.format( "Integer  with  %d  digits ");  [FE]  MissingFormatArgumentException  [FE]      JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  return  String.format( "Integer  with  %d  digits ");  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return  String.format( "Integer  with  %d  digits ");	  if(rawNum.startsWith(   "-   ")||    rawLen    <    2)    {    return    String.format(   "Integer    with    %d    digits   ");    }    	compilable	  [FE]  MissingFormatArgumentException  	65	8	replace
301	[BUG]  [BUGGY]  return  rawNum.toUpperCase();  if(rawNum!=  null)  {  return  rawNum.toUpperCase();  }  [CE]  unreachable  statement  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  return  rawNum.toUpperCase();  if(rawNum!=  null)  {  return  rawNum.toUpperCase();  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return    rawNum.toUpperCase();    if(rawNum!=  null)  {  return  rawNum.toUpperCase();  }	  	non-compiled	[CE]  unreachable  statement	30	None	add
302	[BUG]  [BUGGY]  return  rawNum.toUpperCase();  if(rawNum!=  null)  {  return  rawNum.toUpperCase();  }  else  {  return  rawNum.toUpperCase();  }  [CE]  unreachable  statement  [FE]      JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  return  rawNum.toUpperCase();  if(rawNum!=  null)  {  return  rawNum.toUpperCase();  }  else  {  return  rawNum.toUpperCase();  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return    rawNum.toUpperCase();    if(rawNum!=  null)  {  return  rawNum.toUpperCase();  }  else  {  return  rawNum.toUpperCase();  }	  	non-compiled	[CE]  unreachable  statement	30	None	add
303	[BUG]  [BUGGY]  return  rawNum.substring(0,  rawLen  -  2);  if(rawNum.startsWith( "-   ")||  rawNum.startsWith( "-   "))  {  return  rawNum.substring(0,  rawLen  -  2);  }  [CE]  unreachable  statement  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  return  rawNum.substring(0,  rawLen  -  2);  if(rawNum.startsWith( "-   ")||  rawNum.startsWith( "-   "))  {  return  rawNum.substring(0,  rawLen  -  2);  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return    rawNum.substring(0,    rawLen    -    2);    if(rawNum.startsWith( "-   ")||  rawNum.startsWith( "-   "))  {  return  rawNum.substring(0,  rawLen  -  2);  }	  	non-compiled	[CE]  unreachable  statement	48	None	add
304	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  _currToken  =  JsonToken.START_OBJECT;  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	add	_currToken  =  JsonToken.START_OBJECT;	  _currToken    =    JsonToken.VALUE_NUMBER_FLOAT;    	compilable	  [FE]  JsonParseException  	41	8	replace
305	[BUG]  [BUGGY]  _currToken  =  JsonToken.START_OBJECT;  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  _currToken  =  JsonToken.START_OBJECT;  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	_currToken  =  JsonToken.START_OBJECT;	  _currToken    =    JsonToken.VALUE_NUMBER_FLOAT;    	compilable	  [FE]  JsonParseException  	41	8	replace
306	[BUG]  [BUGGY]  return  rawNum.substring(0,  rawLen  -  1);  if(rawNum.startsWith( "-   "))  {  return  rawNum.substring(0,  rawLen  -  1);  }  [CE]  unreachable  statement  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  return  rawNum.substring(0,  rawLen  -  1);  if(rawNum.startsWith( "-   "))  {  return  rawNum.substring(0,  rawLen  -  1);  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return    rawNum.substring(0,    rawLen    -    1);    if(rawNum.startsWith( "-   "))  {  return  rawNum.substring(0,  rawLen  -  1);  }	  	non-compiled	[CE]  unreachable  statement	6	None	add
307	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  if(rawNum.startsWith(   "-   ")||  rawNum.startsWith(   "-   "))  {  throw  new  IllegalArgumentException(   "   ");  }  if(rawNum.startsWith( ".-   ")||  rawNum.startsWith( "-   "))  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	add	if(rawNum.startsWith(   "-   ")||    rawNum.startsWith(   "-   "))    {    throw    new    IllegalArgumentException(   "   ");    }    if(rawNum.startsWith( ".-   ")||  rawNum.startsWith( "-   "))  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  JsonParseException  	18	8	add
308	[BUG]  [BUGGY]  if(rawNum.startsWith(   "-   ")||  rawNum.startsWith(   "-   "))  {  throw  new  IllegalArgumentException(   "   ");  }  if(rawNum.startsWith( ".-   ")||  rawNum.startsWith( "-   "))  {  throw  new  IllegalArgumentException( "   ");  }  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  if(rawNum.startsWith(   "-   ")||  rawNum.startsWith(   "-   "))  {  throw  new  IllegalArgumentException(   "   ");  }  if(rawNum.startsWith( ".-   ")||  rawNum.startsWith( "-   "))  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	if(rawNum.startsWith(   "-   ")||    rawNum.startsWith(   "-   "))    {    throw    new    IllegalArgumentException(   "   ");    }    if(rawNum.startsWith( ".-   ")||  rawNum.startsWith( "-   "))  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  JsonParseException  	18	8	add
309	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]                JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  return  rawLen  ==  0?  String.valueOf(rawNum):  null;  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	add	return  rawLen  ==  0?  String.valueOf(rawNum):  null;	  return    rawLen    <    =    MAX_ERROR_TOKEN_LENGTH?    String.valueOf(rawNum):    null;    	compilable	  [FE]  JsonParseException  	58	8	replace
310	[BUG]  [BUGGY]  return  rawLen  ==  0?  String.valueOf(rawNum):  null;  [FE]  JsonParseException  [FE]                JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  return  rawLen  ==  0?  String.valueOf(rawNum):  null;  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return  rawLen  ==  0?  String.valueOf(rawNum):  null;	  return    rawLen    <    =    MAX_ERROR_TOKEN_LENGTH?    String.valueOf(rawNum):    null;    	compilable	  [FE]  JsonParseException  	58	8	replace
311	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  if(rawNum.startsWith( "- ")||  rawLen  <  1)  {  return  String.format( "Integer  with  %d  digits] ",  1);  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	add	if(rawNum.startsWith( "- ")||  rawLen  <  1)  {  return  String.format( "Integer  with  %d  digits] ",  1);  }	          if(rawNum.startsWith(   "-   ")||    rawLen    <    2)    {    return    String.format(   "Integer    with    %d    digits]   ",    1);    }    	compilable	  [FE]  JsonParseException  	69	8	replace
312	[BUG]  [BUGGY]  if(rawNum.startsWith( "- ")||  rawLen  <  1)  {  return  String.format( "Integer  with  %d  digits] ",  1);  }  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  if(rawNum.startsWith( "- ")||  rawLen  <  1)  {  return  String.format( "Integer  with  %d  digits] ",  1);  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	if(rawNum.startsWith( "- ")||  rawLen  <  1)  {  return  String.format( "Integer  with  %d  digits] ",  1);  }	          if(rawNum.startsWith(   "-   ")||    rawLen    <    2)    {    return    String.format(   "Integer    with    %d    digits]   ",    1);    }    	compilable	  [FE]  JsonParseException  	69	8	replace
313	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]            JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  if(rawNum!=  null)  {  return  rawNum.trim();  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	add	if(rawNum!=  null)  {  return  rawNum.trim();  }	  return    rawNum.trim();    return    rawNum.trim();    	compilable	  [FE]  JsonParseException  	27	8	replace
314	[BUG]  [BUGGY]  if(rawNum!=  null)  {  return  rawNum.trim();  }  [FE]  JsonParseException  [FE]            JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  if(rawNum!=  null)  {  return  rawNum.trim();  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	if(rawNum!=  null)  {  return  rawNum.trim();  }	  return    rawNum.trim();    return    rawNum.trim();    	compilable	  [FE]  JsonParseException  	27	8	replace
315	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]          JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  if(rawNum.startsWith( "- ")||  rawNum.startsWith( "-- "))  {  return  rawNum.toLowerCase();  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	add	if(rawNum.startsWith( "- ")||  rawNum.startsWith( "-- "))  {  return  rawNum.toLowerCase();  }	  return    rawNum.toLowerCase();    if(rawNum.startsWith(   "-   "))    {    return    rawNum.toLowerCase();    }    	compilable	  [FE]  JsonParseException  	2	8	replace
316	[BUG]  [BUGGY]  if(rawNum.startsWith( "- ")||  rawNum.startsWith( "-- "))  {  return  rawNum.toLowerCase();  }  [FE]  JsonParseException  [FE]          JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  if(rawNum.startsWith( "- ")||  rawNum.startsWith( "-- "))  {  return  rawNum.toLowerCase();  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	if(rawNum.startsWith( "- ")||  rawNum.startsWith( "-- "))  {  return  rawNum.toLowerCase();  }	  return    rawNum.toLowerCase();    if(rawNum.startsWith(   "-   "))    {    return    rawNum.toLowerCase();    }    	compilable	  [FE]  JsonParseException  	2	8	replace
317	[BUG]  [BUGGY]  if(rawLen  <  =  0)  {  return  rawNum.trim();  }  [CE]  illegal  start  of  expression  [FE]        JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  if(rawLen  <  =  0)  {  return  rawNum.trim();  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	if(rawLen  <  =  0)  {  return  rawNum.trim();  }	  return    rawNum.trim();    if(rawNum!=    null)    {    return    rawNum.trim();    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
318	[BUG]  [BUGGY]  _currToken  =  JsonToken.VALUE_STRING  +  1;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  _currToken  =  JsonToken.VALUE_STRING  +  1;  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	_currToken  =  JsonToken.VALUE_STRING  +  1;	  _currToken    =    JsonToken.VALUE_STRING;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	39	None	replace
319	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]            JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  if(rawLen  >=  0)  {  return  rawNum.toLowerCase();  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	add	if(rawLen  >=  0)  {  return  rawNum.toLowerCase();  }	  return    rawNum.toLowerCase();    if(rawNum.startsWith(   "-   "))    {    return    rawNum.toLowerCase();    }    else    {    return    rawNum.toLowerCase();    }    	compilable	  [FE]  JsonParseException  	3	8	replace
320	[BUG]  [BUGGY]  if(rawLen  >=  0)  {  return  rawNum.toLowerCase();  }  [FE]  JsonParseException  [FE]            JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  if(rawLen  >=  0)  {  return  rawNum.toLowerCase();  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	if(rawLen  >=  0)  {  return  rawNum.toLowerCase();  }	  return    rawNum.toLowerCase();    if(rawNum.startsWith(   "-   "))    {    return    rawNum.toLowerCase();    }    else    {    return    rawNum.toLowerCase();    }    	compilable	  [FE]  JsonParseException  	3	8	replace
321	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  _reportUnsupportedOperation();  if(rawNum.startsWith( "-   ")||  rawNum.startsWith( "-   "))  {  _reportUnsupportedOperation();  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	add	_reportUnsupportedOperation();    if(rawNum.startsWith( "-   ")||  rawNum.startsWith( "-   "))  {  _reportUnsupportedOperation();  }	  	compilable	  [FE]  UnsupportedOperationException  	20	8	add
322	[BUG]  [BUGGY]  _reportUnsupportedOperation();  if(rawNum.startsWith( "-   ")||  rawNum.startsWith( "-   "))  {  _reportUnsupportedOperation();  }  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  _reportUnsupportedOperation();  if(rawNum.startsWith( "-   ")||  rawNum.startsWith( "-   "))  {  _reportUnsupportedOperation();  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	_reportUnsupportedOperation();    if(rawNum.startsWith( "-   ")||  rawNum.startsWith( "-   "))  {  _reportUnsupportedOperation();  }	  	compilable	  [FE]  UnsupportedOperationException  	20	8	add
323	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]      UnsupportedOperationException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  _reportUnsupportedOperation();  if(rawNum.startsWith( "-   "))  {  _reportUnsupportedOperation();  }  else  {  _reportUnsupportedOperation();  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	add	_reportUnsupportedOperation();    if(rawNum.startsWith( "-   "))  {  _reportUnsupportedOperation();  }  else  {  _reportUnsupportedOperation();  }	  	compilable	  [FE]  UnsupportedOperationException  	20	8	add
324	[BUG]  [BUGGY]  _reportUnsupportedOperation();  if(rawNum.startsWith( "-   "))  {  _reportUnsupportedOperation();  }  else  {  _reportUnsupportedOperation();  }  [FE]  UnsupportedOperationException  [FE]      UnsupportedOperationException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  _reportUnsupportedOperation();  if(rawNum.startsWith( "-   "))  {  _reportUnsupportedOperation();  }  else  {  _reportUnsupportedOperation();  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	_reportUnsupportedOperation();    if(rawNum.startsWith( "-   "))  {  _reportUnsupportedOperation();  }  else  {  _reportUnsupportedOperation();  }	  	compilable	  [FE]  UnsupportedOperationException  	20	8	add
325	[BUG]  [BUGGY]  return  rawLen  +  _longNum;  [CE]  cannot  find  symbol  _longNum  [FE]                JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  return  rawLen  +  _longNum;  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return  rawLen  +  _longNum;	  return    rawLen    +    _longIntegerDesc;    	non-compiled	[CE]  cannot  find  symbol  _longNum	46	None	replace
326	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]          if(rawNum.startsWith(   "-   ")||  rawLen  <  2)  {  return  String.format(   "Integer  with  %d  digits]   ",  1);  }  if(rawNum.startsWith( ".-   ")||  rawLen  <  2)  {  return  String.format( "Integer  with  %d  digits]   ",  1);  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	add	                if(rawNum.startsWith(   "-   ")||    rawLen    <    2)    {    return    String.format(   "Integer    with    %d    digits]   ",    1);    }    if(rawNum.startsWith( ".-   ")||  rawLen  <  2)  {  return  String.format( "Integer  with  %d  digits]   ",  1);  }	  	compilable	  [FE]  JsonParseException  	68	8	add
327	[BUG]  [BUGGY]          if(rawNum.startsWith(   "-   ")||  rawLen  <  2)  {  return  String.format(   "Integer  with  %d  digits]   ",  1);  }  if(rawNum.startsWith( ".-   ")||  rawLen  <  2)  {  return  String.format( "Integer  with  %d  digits]   ",  1);  }  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]          if(rawNum.startsWith(   "-   ")||  rawLen  <  2)  {  return  String.format(   "Integer  with  %d  digits]   ",  1);  }  if(rawNum.startsWith( ".-   ")||  rawLen  <  2)  {  return  String.format( "Integer  with  %d  digits]   ",  1);  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	                if(rawNum.startsWith(   "-   ")||    rawLen    <    2)    {    return    String.format(   "Integer    with    %d    digits]   ",    1);    }    if(rawNum.startsWith( ".-   ")||  rawLen  <  2)  {  return  String.format( "Integer  with  %d  digits]   ",  1);  }	  	compilable	  [FE]  JsonParseException  	68	8	add
328	[BUG]  [BUGGY]  return  rawLen  <  =  1?  String.valueOf(rawNum):  rawLen;  [CE]  illegal  start  of  expression  [FE]              JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  return  rawLen  <  =  1?  String.valueOf(rawNum):  rawLen;  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return  rawLen  <  =  1?  String.valueOf(rawNum):  rawLen;	  return    rawLen    <    =    MAX_ERROR_TOKEN_LENGTH?    String.valueOf(rawNum):    rawNum;    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
329	[BUG]  [BUGGY]  return  rawLen  <  =  0?  String.valueOf(rawNum):  rawLen;  [CE]  illegal  start  of  expression  [FE]                JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  return  rawLen  <  =  0?  String.valueOf(rawNum):  rawLen;  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return  rawLen  <  =  0?  String.valueOf(rawNum):  rawLen;	  return    rawLen    <    =    MAX_ERROR_TOKEN_LENGTH?    String.valueOf(rawNum):    rawNum;    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
330	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]              JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  if(rawLen  <  1000)  {  return  rawNum.substring(0,  rawLen);  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	add	if(rawLen  <  1000)  {  return  rawNum.substring(0,  rawLen);  }	  return    rawNum.substring(0,    rawLen);    if(rawNum.startsWith(   "-       ")||    rawNum.startsWith(   "-       "))    {    return    rawNum.substring(0,    rawLen);    }    	compilable	  [FE]  JsonParseException  	12	8	replace
331	[BUG]  [BUGGY]  if(rawLen  <  1000)  {  return  rawNum.substring(0,  rawLen);  }  [FE]  JsonParseException  [FE]              JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  if(rawLen  <  1000)  {  return  rawNum.substring(0,  rawLen);  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	if(rawLen  <  1000)  {  return  rawNum.substring(0,  rawLen);  }	  return    rawNum.substring(0,    rawLen);    if(rawNum.startsWith(   "-       ")||    rawNum.startsWith(   "-       "))    {    return    rawNum.substring(0,    rawLen);    }    	compilable	  [FE]  JsonParseException  	12	8	replace
332	[BUG]  [BUGGY]  return  rawLen  +  _longIntegerDesc(rawNum);  if(rawLen  <  =  MAX_ERROR_TOKEN_LENGTH)  {  return  rawLen  +  _longIntegerDesc(rawNum);  }  [CE]  illegal  start  of  expression  [FE]    StackOverflowError    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  return  rawLen  +  _longIntegerDesc(rawNum);  if(rawLen  <  =  MAX_ERROR_TOKEN_LENGTH)  {  return  rawLen  +  _longIntegerDesc(rawNum);  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return    rawLen    +    _longIntegerDesc(rawNum);    if(rawLen  <  =  MAX_ERROR_TOKEN_LENGTH)  {  return  rawLen  +  _longIntegerDesc(rawNum);  }	  	non-compiled	[CE]  illegal  start  of  expression	44	None	add
333	[BUG]  [BUGGY]  return  rawLen  +  _longIntegerDesc(rawNum);  if(rawLen  >=  0)  {  return  rawLen  +  _longIntegerDesc(rawNum);  }  [CE]  unreachable  statement  [FE]      StackOverflowError    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  return  rawLen  +  _longIntegerDesc(rawNum);  if(rawLen  >=  0)  {  return  rawLen  +  _longIntegerDesc(rawNum);  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return    rawLen    +    _longIntegerDesc(rawNum);    if(rawLen  >=  0)  {  return  rawLen  +  _longIntegerDesc(rawNum);  }	  	non-compiled	[CE]  unreachable  statement	44	None	add
334	[BUG]  [BUGGY]  return  rawNum.substring(0,  rawLen).toLowerCase();  if(rawNum.startsWith( "- ")||  rawLen  <  2)  {  return  rawNum.substring(0,  rawLen).toLowerCase();  }  [CE]  unreachable  statement  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  return  rawNum.substring(0,  rawLen).toLowerCase();  if(rawNum.startsWith( "- ")||  rawLen  <  2)  {  return  rawNum.substring(0,  rawLen).toLowerCase();  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return    rawNum.substring(0,    rawLen).toLowerCase();    if(rawNum.startsWith( "- ")||  rawLen  <  2)  {  return  rawNum.substring(0,  rawLen).toLowerCase();  }	  	non-compiled	[CE]  unreachable  statement	32	None	add
335	[BUG]  [BUGGY]  return  rawNum.substring(0,  rawLen).toLowerCase();  if(rawNum.indexOf( "- ")>  0)  {  return  rawNum.substring(0,  rawLen).toLowerCase();  }  [CE]  unreachable  statement  [FE]      JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  return  rawNum.substring(0,  rawLen).toLowerCase();  if(rawNum.indexOf( "- ")>  0)  {  return  rawNum.substring(0,  rawLen).toLowerCase();  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return    rawNum.substring(0,    rawLen).toLowerCase();    if(rawNum.indexOf( "- ")>  0)  {  return  rawNum.substring(0,  rawLen).toLowerCase();  }	  	non-compiled	[CE]  unreachable  statement	32	None	add
336	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  _reportUnsupportedOperation();  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  _reportUnsupportedOperation();  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	add	_reportUnsupportedOperation();    if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  _reportUnsupportedOperation();  }	  	compilable	  [FE]  UnsupportedOperationException  	20	8	add
337	[BUG]  [BUGGY]  _reportUnsupportedOperation();  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  _reportUnsupportedOperation();  }  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  _reportUnsupportedOperation();  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  _reportUnsupportedOperation();  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	_reportUnsupportedOperation();    if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  _reportUnsupportedOperation();  }	  	compilable	  [FE]  UnsupportedOperationException  	20	8	add
338	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]      UnsupportedOperationException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  _reportUnsupportedOperation();  if(_currToken!=  JsonToken.VALUE_NULL)  {  _reportUnsupportedOperation();  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	add	_reportUnsupportedOperation();    if(_currToken!=  JsonToken.VALUE_NULL)  {  _reportUnsupportedOperation();  }	  	compilable	  [FE]  UnsupportedOperationException  	20	8	add
339	[BUG]  [BUGGY]  _reportUnsupportedOperation();  if(_currToken!=  JsonToken.VALUE_NULL)  {  _reportUnsupportedOperation();  }  [FE]  UnsupportedOperationException  [FE]      UnsupportedOperationException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  _reportUnsupportedOperation();  if(_currToken!=  JsonToken.VALUE_NULL)  {  _reportUnsupportedOperation();  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	_reportUnsupportedOperation();    if(_currToken!=  JsonToken.VALUE_NULL)  {  _reportUnsupportedOperation();  }	  	compilable	  [FE]  UnsupportedOperationException  	20	8	add
340	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]        UnsupportedOperationException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  _reportUnsupportedOperation();  if(rawNum.startsWith( "- ")||  rawLen  <  2)  {  _reportUnsupportedOperation();  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	add	_reportUnsupportedOperation();    if(rawNum.startsWith( "- ")||  rawLen  <  2)  {  _reportUnsupportedOperation();  }	  	compilable	  [FE]  UnsupportedOperationException  	20	8	add
341	[BUG]  [BUGGY]  _reportUnsupportedOperation();  if(rawNum.startsWith( "- ")||  rawLen  <  2)  {  _reportUnsupportedOperation();  }  [FE]  UnsupportedOperationException  [FE]        UnsupportedOperationException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  _reportUnsupportedOperation();  if(rawNum.startsWith( "- ")||  rawLen  <  2)  {  _reportUnsupportedOperation();  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	_reportUnsupportedOperation();    if(rawNum.startsWith( "- ")||  rawLen  <  2)  {  _reportUnsupportedOperation();  }	  	compilable	  [FE]  UnsupportedOperationException  	20	8	add
342	[BUG]  [BUGGY]  if(rawNum.startsWith( "- "))  {  return  rawNum.trim();  char[]  rawNum  =  rawNum.toCharArray();  }  [CE]  variable  rawNum  is  already  defined  in  method  _longIntegerDesc(String)  [FE]            JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  if(rawNum.startsWith( "- "))  {  return  rawNum.trim();  char[]  rawNum  =  rawNum.toCharArray();  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	if(rawNum.startsWith( "- "))  {  return  rawNum.trim();  char[]  rawNum  =  rawNum.toCharArray();  }	  return    rawNum.trim();    char[]    rawNum    =    rawNum.toCharArray();    	non-compiled	[CE]  variable  rawNum  is  already  defined  in  method  _longIntegerDesc(String)	36	None	replace
343	[BUG]  [BUGGY]  if(rawNum.startsWith( "- ")||  rawNum.startsWith( "- "))  {  return  rawNum.trim();  char[]  rawNum  =  rawNum.toCharArray();  }  [CE]  variable  rawNum  is  already  defined  in  method  _longIntegerDesc(String)  [FE]              JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  if(rawNum.startsWith( "- ")||  rawNum.startsWith( "- "))  {  return  rawNum.trim();  char[]  rawNum  =  rawNum.toCharArray();  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	if(rawNum.startsWith( "- ")||  rawNum.startsWith( "- "))  {  return  rawNum.trim();  char[]  rawNum  =  rawNum.toCharArray();  }	  return    rawNum.trim();    char[]    rawNum    =    rawNum.toCharArray();    	non-compiled	[CE]  variable  rawNum  is  already  defined  in  method  _longIntegerDesc(String)	36	None	replace
344	[BUG]  [BUGGY]  return  rawNum.substring(0,  rawLen  +  1);  if(rawNum.startsWith( "- "))  {  return  rawNum.substring(0,  rawLen  +  1);  }  [CE]  unreachable  statement  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  return  rawNum.substring(0,  rawLen  +  1);  if(rawNum.startsWith( "- "))  {  return  rawNum.substring(0,  rawLen  +  1);  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return    rawNum.substring(0,    rawLen    +    1);    if(rawNum.startsWith( "- "))  {  return  rawNum.substring(0,  rawLen  +  1);  }	  	non-compiled	[CE]  unreachable  statement	4	None	add
345	[BUG]  [BUGGY]  return  rawNum.substring(0,  rawLen  +  1);  if(rawNum.startsWith( "- ")||  rawLen  <  2)  {  return  rawNum.substring(0,  rawLen  +  1);  }  [CE]  unreachable  statement  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  return  rawNum.substring(0,  rawLen  +  1);  if(rawNum.startsWith( "- ")||  rawLen  <  2)  {  return  rawNum.substring(0,  rawLen  +  1);  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return    rawNum.substring(0,    rawLen    +    1);    if(rawNum.startsWith( "- ")||  rawLen  <  2)  {  return  rawNum.substring(0,  rawLen  +  1);  }	  	non-compiled	[CE]  unreachable  statement	4	None	add
346	[BUG]  [BUGGY]  return  rawNum.substring(0,  rawLen  +  1);  char[]  rawNum  =  rawNum.toCharArray();  return  rawNum.substring(0,  rawLen  +  1);  [CE]  variable  rawNum  is  already  defined  in  method  _longIntegerDesc(String)  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  return  rawNum.substring(0,  rawLen  +  1);  char[]  rawNum  =  rawNum.toCharArray();  return  rawNum.substring(0,  rawLen  +  1);  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return    rawNum.substring(0,    rawLen    +    1);    char[]  rawNum  =  rawNum.toCharArray();  return  rawNum.substring(0,  rawLen  +  1);	  	non-compiled	[CE]  variable  rawNum  is  already  defined  in  method  _longIntegerDesc(String)	4	None	add
347	[BUG]  [BUGGY]  return  rawNum.substring(0,  rawLen  -  2);  char[]  rawNum  =  rawNum.toCharArray();  return  rawNum.substring(0,  rawLen  -  2);  [CE]  variable  rawNum  is  already  defined  in  method  _longIntegerDesc(String)  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  return  rawNum.substring(0,  rawLen  -  2);  char[]  rawNum  =  rawNum.toCharArray();  return  rawNum.substring(0,  rawLen  -  2);  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return    rawNum.substring(0,    rawLen    -    2);    char[]  rawNum  =  rawNum.toCharArray();  return  rawNum.substring(0,  rawLen  -  2);	  	non-compiled	[CE]  variable  rawNum  is  already  defined  in  method  _longIntegerDesc(String)	48	None	add
348	[BUG]  [BUGGY]  return  rawNum.substring(0,  rawLen  -  2);  if(rawNum.startsWith( "- ")||  rawLen  <  2)  {  return  rawNum.substring(0,  rawLen  -  2);  }  [CE]  unreachable  statement  [FE]      JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  return  rawNum.substring(0,  rawLen  -  2);  if(rawNum.startsWith( "- ")||  rawLen  <  2)  {  return  rawNum.substring(0,  rawLen  -  2);  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return    rawNum.substring(0,    rawLen    -    2);    if(rawNum.startsWith( "- ")||  rawLen  <  2)  {  return  rawNum.substring(0,  rawLen  -  2);  }	  	non-compiled	[CE]  unreachable  statement	48	None	add
349	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]                JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  return  String.format( "[Integer  with  %d  digits] ",  rawLen);  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	add	return  String.format( "[Integer  with  %d  digits] ",  rawLen);	  return    rawNum.trim();    if(rawNum.startsWith(   "-   "))    {    return    rawNum.trim();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  JsonParseException  	29	8	replace
350	[BUG]  [BUGGY]  return  String.format( "[Integer  with  %d  digits] ",  rawLen);  [FE]  JsonParseException  [FE]                JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  return  String.format( "[Integer  with  %d  digits] ",  rawLen);  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return  String.format( "[Integer  with  %d  digits] ",  rawLen);	  return    rawNum.trim();    if(rawNum.startsWith(   "-   "))    {    return    rawNum.trim();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  JsonParseException  	29	8	replace
351	[BUG]  [BUGGY]  return  rawLen  +  _longDecimal;  [CE]  cannot  find  symbol  _longDecimal  [FE]                JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  return  rawLen  +  _longDecimal;  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return  rawLen  +  _longDecimal;	  return    rawLen    +    _longIntegerDesc;    	non-compiled	[CE]  cannot  find  symbol  _longDecimal	46	None	replace
352	[BUG]  [BUGGY]  return  rawLen  <  =  1?  null  :  rawLen;  [CE]  illegal  start  of  expression  [FE]                  JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  return  rawLen  <  =  1?  null  :  rawLen;  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return  rawLen  <  =  1?  null  :  rawLen;	  return    rawLen    <    =    MAX_ERROR_TOKEN_LENGTH?    null    :    rawLen;    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
353	[BUG]  [BUGGY]  return  rawNum.toUpperCase();  if(rawNum.startsWith( "- ")||  rawLen  <  2)  {  return  rawNum.toUpperCase();  }  [CE]  unreachable  statement  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  return  rawNum.toUpperCase();  if(rawNum.startsWith( "- ")||  rawLen  <  2)  {  return  rawNum.toUpperCase();  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return    rawNum.toUpperCase();    if(rawNum.startsWith( "- ")||  rawLen  <  2)  {  return  rawNum.toUpperCase();  }	  	non-compiled	[CE]  unreachable  statement	30	None	add
354	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  if(rawNum.startsWith( "0 ")||  rawNum.startsWith( "- "))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	add	if(rawNum.startsWith( "0 ")||  rawNum.startsWith( "- "))  {  throw  new  IllegalArgumentException( " ");  }	  if(rawNum.startsWith(   "-   ")||    rawNum.startsWith(   "-   "))    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  JsonParseException  	19	8	replace
355	[BUG]  [BUGGY]  if(rawNum.startsWith( "0 ")||  rawNum.startsWith( "- "))  {  throw  new  IllegalArgumentException( " ");  }  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  if(rawNum.startsWith( "0 ")||  rawNum.startsWith( "- "))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	if(rawNum.startsWith( "0 ")||  rawNum.startsWith( "- "))  {  throw  new  IllegalArgumentException( " ");  }	  if(rawNum.startsWith(   "-   ")||    rawNum.startsWith(   "-   "))    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  JsonParseException  	19	8	replace
356	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  String  digits  =  rawNum.substring(0,  rawLen).trim();  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	add	String  digits  =  rawNum.substring(0,  rawLen).trim();	  return    rawNum.substring(0,    rawLen).trim();    	compilable	  [FE]  JsonParseException  	17	8	replace
357	[BUG]  [BUGGY]  String  digits  =  rawNum.substring(0,  rawLen).trim();  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  String  digits  =  rawNum.substring(0,  rawLen).trim();  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	String  digits  =  rawNum.substring(0,  rawLen).trim();	  return    rawNum.substring(0,    rawLen).trim();    	compilable	  [FE]  JsonParseException  	17	8	replace
358	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  return  rawNum.substring(0,  rawLen  -  1).trim();  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	add	return  rawNum.substring(0,  rawLen  -  1).trim();	  return    rawNum.substring(0,    rawLen).trim();    	compilable	  [FE]  JsonParseException  	17	8	replace
359	[BUG]  [BUGGY]  return  rawNum.substring(0,  rawLen  -  1).trim();  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  return  rawNum.substring(0,  rawLen  -  1).trim();  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return  rawNum.substring(0,  rawLen  -  1).trim();	  return    rawNum.substring(0,    rawLen).trim();    	compilable	  [FE]  JsonParseException  	17	8	replace
360	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]        JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  if(rawLen  <  1)  {  return  rawNum.substring(0,  rawLen);  }  else  {  return  String.format( "[Integer  with  %d  digits] ",  rawLen);  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	add	if(rawLen  <  1)  {  return  rawNum.substring(0,  rawLen);  }  else  {  return  String.format( "[Integer  with  %d  digits] ",  rawLen);  }	  return    rawNum.substring(0,    rawLen);    if(rawNum.startsWith(   "-   "))    {    return    rawNum.substring(0,    rawLen);    }    else    {    return    String.format(   "[Integer    with    %d    digits]   ",    rawLen);    }    	compilable	  [FE]  JsonParseException  	60	8	replace
361	[BUG]  [BUGGY]  if(rawLen  <  1)  {  return  rawNum.substring(0,  rawLen);  }  else  {  return  String.format( "[Integer  with  %d  digits] ",  rawLen);  }  [FE]  JsonParseException  [FE]        JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  if(rawLen  <  1)  {  return  rawNum.substring(0,  rawLen);  }  else  {  return  String.format( "[Integer  with  %d  digits] ",  rawLen);  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	if(rawLen  <  1)  {  return  rawNum.substring(0,  rawLen);  }  else  {  return  String.format( "[Integer  with  %d  digits] ",  rawLen);  }	  return    rawNum.substring(0,    rawLen);    if(rawNum.startsWith(   "-   "))    {    return    rawNum.substring(0,    rawLen);    }    else    {    return    String.format(   "[Integer    with    %d    digits]   ",    rawLen);    }    	compilable	  [FE]  JsonParseException  	60	8	replace
362	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]        JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  if(rawLen  ==  0)  {  return  rawNum.substring(0,  rawLen);  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	add	if(rawLen  ==  0)  {  return  rawNum.substring(0,  rawLen);  }	  return    rawNum.substring(0,    rawLen);    if(rawNum!=    null)    {    return    rawNum.substring(0,    rawLen);    }    	compilable	  [FE]  JsonParseException  	37	8	replace
363	[BUG]  [BUGGY]  if(rawLen  ==  0)  {  return  rawNum.substring(0,  rawLen);  }  [FE]  JsonParseException  [FE]        JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  if(rawLen  ==  0)  {  return  rawNum.substring(0,  rawLen);  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	if(rawLen  ==  0)  {  return  rawNum.substring(0,  rawLen);  }	  return    rawNum.substring(0,    rawLen);    if(rawNum!=    null)    {    return    rawNum.substring(0,    rawLen);    }    	compilable	  [FE]  JsonParseException  	37	8	replace
364	[BUG]  [BUGGY]  if(rawLen  <  =  0)  {  return  rawNum.substring(0,  rawLen);  }  [CE]  illegal  start  of  expression  [FE]          JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  if(rawLen  <  =  0)  {  return  rawNum.substring(0,  rawLen);  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	if(rawLen  <  =  0)  {  return  rawNum.substring(0,  rawLen);  }	  return    rawNum.substring(0,    rawLen);    if(rawNum!=    null)    {    return    rawNum.substring(0,    rawLen);    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
365	[BUG]  [BUGGY]  return  rawNum.substring(0,  rawLen  -  1);  char[]  rawNum  =  rawNum.toCharArray();  return  rawNum.substring(0,  rawLen  -  1);  [CE]  variable  rawNum  is  already  defined  in  method  _longIntegerDesc(String)  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  return  rawNum.substring(0,  rawLen  -  1);  char[]  rawNum  =  rawNum.toCharArray();  return  rawNum.substring(0,  rawLen  -  1);  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return    rawNum.substring(0,    rawLen    -    1);    char[]  rawNum  =  rawNum.toCharArray();  return  rawNum.substring(0,  rawLen  -  1);	  	non-compiled	[CE]  variable  rawNum  is  already  defined  in  method  _longIntegerDesc(String)	6	None	add
366	[BUG]  [BUGGY]  return  rawNum.substring(0,  rawLen  -  1);  if(rawNum.startsWith( "- ")||  rawLen  <  2)  {  return  rawNum.substring(0,  rawLen  -  1);  }  [CE]  unreachable  statement  [FE]      JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  return  rawNum.substring(0,  rawLen  -  1);  if(rawNum.startsWith( "- ")||  rawLen  <  2)  {  return  rawNum.substring(0,  rawLen  -  1);  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return    rawNum.substring(0,    rawLen    -    1);    if(rawNum.startsWith( "- ")||  rawLen  <  2)  {  return  rawNum.substring(0,  rawLen  -  1);  }	  	non-compiled	[CE]  unreachable  statement	6	None	add
367	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]        JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  if(rawNum.startsWith( "- ")||  rawNum.startsWith( "- "))  {  return  rawNum.toUpperCase();  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	add	if(rawNum.startsWith( "- ")||  rawNum.startsWith( "- "))  {  return  rawNum.toUpperCase();  }	  return    rawNum.toLowerCase();    if(rawNum.startsWith(   "-   ")||    rawNum.startsWith(   "-   "))    {    return    rawNum.toLowerCase();    }    	compilable	  [FE]  JsonParseException  	53	8	replace
368	[BUG]  [BUGGY]  if(rawNum.startsWith( "- ")||  rawNum.startsWith( "- "))  {  return  rawNum.toUpperCase();  }  [FE]  JsonParseException  [FE]        JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  if(rawNum.startsWith( "- ")||  rawNum.startsWith( "- "))  {  return  rawNum.toUpperCase();  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	if(rawNum.startsWith( "- ")||  rawNum.startsWith( "- "))  {  return  rawNum.toUpperCase();  }	  return    rawNum.toLowerCase();    if(rawNum.startsWith(   "-   ")||    rawNum.startsWith(   "-   "))    {    return    rawNum.toLowerCase();    }    	compilable	  [FE]  JsonParseException  	53	8	replace
369	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  if(rawNum.startsWith( ".0 ")||  rawLen  <  2)  {  return  null;  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	add	if(rawNum.startsWith( ".0 ")||  rawLen  <  2)  {  return  null;  }	  if(rawNum.startsWith(   "-   ")||    rawLen    <    2)    {    return    null;    }    	compilable	  [FE]  JsonParseException  	67	8	replace
370	[BUG]  [BUGGY]  if(rawNum.startsWith( ".0 ")||  rawLen  <  2)  {  return  null;  }  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  if(rawNum.startsWith( ".0 ")||  rawLen  <  2)  {  return  null;  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	if(rawNum.startsWith( ".0 ")||  rawLen  <  2)  {  return  null;  }	  if(rawNum.startsWith(   "-   ")||    rawLen    <    2)    {    return    null;    }    	compilable	  [FE]  JsonParseException  	67	8	replace
371	[BUG]  [BUGGY]  String  rawNum  =  rawNum.substring(0,  milliseconds);  [CE]  variable  rawNum  is  already  defined  in  method  _longIntegerDesc(String)  [FE]          JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  String  rawNum  =  rawNum.substring(0,  milliseconds);  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	String  rawNum  =  rawNum.substring(0,  milliseconds);	  return    rawNum.substring(0,    rawLen);    String    rawNum    =    rawNum.substring(0,    rawLen);    	non-compiled	[CE]  variable  rawNum  is  already  defined  in  method  _longIntegerDesc(String)	10	None	replace
372	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]              JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  if(rawLen  ==  0)  {  return  null;  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	add	if(rawLen  ==  0)  {  return  null;  }	  return    rawNum.trim();    if(rawNum.startsWith(   "-   "))    {    return    rawNum.trim();    }    else    {    return    rawNum.trim();    }    	compilable	  [FE]  JsonParseException  	28	8	replace
373	[BUG]  [BUGGY]  if(rawLen  ==  0)  {  return  null;  }  [FE]  JsonParseException  [FE]              JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  if(rawLen  ==  0)  {  return  null;  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	if(rawLen  ==  0)  {  return  null;  }	  return    rawNum.trim();    if(rawNum.startsWith(   "-   "))    {    return    rawNum.trim();    }    else    {    return    rawNum.trim();    }    	compilable	  [FE]  JsonParseException  	28	8	replace
374	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  return  String.format( "Integer  with  %d  digits] ",  1);  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	add	return  String.format( "Integer  with  %d  digits] ",  1);	          if(rawNum.startsWith(   "-   ")||    rawLen    <    2)    {    return    String.format(   "Integer    with    %d    digits]   ",    1);    }    	compilable	  [FE]  JsonParseException  	69	8	replace
375	[BUG]  [BUGGY]  return  String.format( "Integer  with  %d  digits] ",  1);  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  return  String.format( "Integer  with  %d  digits] ",  1);  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return  String.format( "Integer  with  %d  digits] ",  1);	          if(rawNum.startsWith(   "-   ")||    rawLen    <    2)    {    return    String.format(   "Integer    with    %d    digits]   ",    1);    }    	compilable	  [FE]  JsonParseException  	69	8	replace
376	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  if(rawLen  <  2)  {  return  String.format( "Integer  with  %d  digits] ",  1);  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	add	if(rawLen  <  2)  {  return  String.format( "Integer  with  %d  digits] ",  1);  }	          if(rawNum.startsWith(   "-   ")||    rawLen    <    2)    {    return    String.format(   "Integer    with    %d    digits]   ",    1);    }    	compilable	  [FE]  JsonParseException  	69	8	replace
377	[BUG]  [BUGGY]  if(rawLen  <  2)  {  return  String.format( "Integer  with  %d  digits] ",  1);  }  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  if(rawLen  <  2)  {  return  String.format( "Integer  with  %d  digits] ",  1);  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	if(rawLen  <  2)  {  return  String.format( "Integer  with  %d  digits] ",  1);  }	          if(rawNum.startsWith(   "-   ")||    rawLen    <    2)    {    return    String.format(   "Integer    with    %d    digits]   ",    1);    }    	compilable	  [FE]  JsonParseException  	69	8	replace
378	[BUG]  [BUGGY]  if(rawNum.startsWith( ".0 ")||  rawNum.startsWith( ".0 "))  {  throw  new  JsonParseException( " ");  }  [CE]  no  suitable  constructor  found  for  JsonParseException(String)  [FE]              JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  if(rawNum.startsWith( ".0 ")||  rawNum.startsWith( ".0 "))  {  throw  new  JsonParseException( " ");  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	if(rawNum.startsWith( ".0 ")||  rawNum.startsWith( ".0 "))  {  throw  new  JsonParseException( " ");  }	  if(rawNum.startsWith(   "-   ")||    rawNum.startsWith(   "-   "))    {    throw    new    JsonParseException(   "   ");    }    	non-compiled	[CE]  no  suitable  constructor  found  for  JsonParseException(String)	24	None	replace
379	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  return  rawNum.substring(0,  rawLen  -  1000);  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	add	return  rawNum.substring(0,  rawLen  -  1000);	  return    rawNum.substring(0,    rawLen    -    2);    	compilable	  [FE]  StringIndexOutOfBoundsException  	49	8	replace
380	[BUG]  [BUGGY]  return  rawNum.substring(0,  rawLen  -  1000);  [FE]  StringIndexOutOfBoundsException  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  return  rawNum.substring(0,  rawLen  -  1000);  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return  rawNum.substring(0,  rawLen  -  1000);	  return    rawNum.substring(0,    rawLen    -    2);    	compilable	  [FE]  StringIndexOutOfBoundsException  	49	8	replace
381	[BUG]  [BUGGY]  return  rawLen  <  =  1?  String.valueOf(rawNum):  null;  [CE]  illegal  start  of  expression  [FE]                JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  return  rawLen  <  =  1?  String.valueOf(rawNum):  null;  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return  rawLen  <  =  1?  String.valueOf(rawNum):  null;	  return    rawLen    <    =    MAX_ERROR_TOKEN_LENGTH?    String.valueOf(rawNum):    null;    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
382	[BUG]  [BUGGY]  return  rawLen  <  =  0?  String.valueOf(rawNum):  null;  [CE]  illegal  start  of  expression  [FE]                  JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  return  rawLen  <  =  0?  String.valueOf(rawNum):  null;  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return  rawLen  <  =  0?  String.valueOf(rawNum):  null;	  return    rawLen    <    =    MAX_ERROR_TOKEN_LENGTH?    String.valueOf(rawNum):    null;    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
383	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]        JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  if(rawLen  <  1)  {  return  rawNum.substring(0,  rawLen);  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	add	if(rawLen  <  1)  {  return  rawNum.substring(0,  rawLen);  }	  return    rawNum.substring(0,    rawLen);    return    rawNum.substring(0,    rawLen);    	compilable	  [FE]  JsonParseException  	9	8	replace
384	[BUG]  [BUGGY]  if(rawLen  <  1)  {  return  rawNum.substring(0,  rawLen);  }  [FE]  JsonParseException  [FE]        JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  if(rawLen  <  1)  {  return  rawNum.substring(0,  rawLen);  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	if(rawLen  <  1)  {  return  rawNum.substring(0,  rawLen);  }	  return    rawNum.substring(0,    rawLen);    return    rawNum.substring(0,    rawLen);    	compilable	  [FE]  JsonParseException  	9	8	replace
385	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]          JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  if(rawLen  >  0)  {  return  rawNum.substring(0,  rawLen);  }  else  {  return  null;  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	add	if(rawLen  >  0)  {  return  rawNum.substring(0,  rawLen);  }  else  {  return  null;  }	  return    rawNum.substring(0,    rawLen);    return    rawNum.substring(0,    rawLen);    	compilable	  [FE]  JsonParseException  	9	8	replace
386	[BUG]  [BUGGY]  if(rawLen  >  0)  {  return  rawNum.substring(0,  rawLen);  }  else  {  return  null;  }  [FE]  JsonParseException  [FE]          JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  if(rawLen  >  0)  {  return  rawNum.substring(0,  rawLen);  }  else  {  return  null;  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	if(rawLen  >  0)  {  return  rawNum.substring(0,  rawLen);  }  else  {  return  null;  }	  return    rawNum.substring(0,    rawLen);    return    rawNum.substring(0,    rawLen);    	compilable	  [FE]  JsonParseException  	9	8	replace
387	[BUG]  [BUGGY]  _currToken  =  JsonToken.VALUE_NUMBER_FLOAT;  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT;  [CE]  illegal  start  of  expression  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  _currToken  =  JsonToken.VALUE_NUMBER_FLOAT;  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT;  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	_currToken    =    JsonToken.VALUE_NUMBER_FLOAT;    ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT;	  	non-compiled	[CE]  illegal  start  of  expression	40	None	add
388	[BUG]  [BUGGY]  if(rawNum.startsWith( "- "))  {  return  rawNum.trim();  char[]  rawNum  =  rawNum.toCharArray();  return  rawNum.trim();  }  [CE]  variable  rawNum  is  already  defined  in  method  _longIntegerDesc(String)  [FE]          JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  if(rawNum.startsWith( "- "))  {  return  rawNum.trim();  char[]  rawNum  =  rawNum.toCharArray();  return  rawNum.trim();  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	if(rawNum.startsWith( "- "))  {  return  rawNum.trim();  char[]  rawNum  =  rawNum.toCharArray();  return  rawNum.trim();  }	  return    rawNum.trim();    char[]    rawNum    =    rawNum.toCharArray();    return    rawNum.trim();    	non-compiled	[CE]  variable  rawNum  is  already  defined  in  method  _longIntegerDesc(String)	35	None	replace
389	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]            JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  if(rawNum.startsWith( "- ")||  rawNum.startsWith( "- ")||  rawNum.startsWith( "- "))  {  return  rawNum.trim();  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	add	if(rawNum.startsWith( "- ")||  rawNum.startsWith( "- ")||  rawNum.startsWith( "- "))  {  return  rawNum.trim();  }	  return    rawNum.trim();    char[]    rawNum    =    rawNum.toCharArray();    return    rawNum.trim();    	compilable	  [FE]  JsonParseException  	35	8	replace
390	[BUG]  [BUGGY]  if(rawNum.startsWith( "- ")||  rawNum.startsWith( "- ")||  rawNum.startsWith( "- "))  {  return  rawNum.trim();  }  [FE]  JsonParseException  [FE]            JsonParseException      [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  if(rawNum.startsWith( "- ")||  rawNum.startsWith( "- ")||  rawNum.startsWith( "- "))  {  return  rawNum.trim();  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	if(rawNum.startsWith( "- ")||  rawNum.startsWith( "- ")||  rawNum.startsWith( "- "))  {  return  rawNum.trim();  }	  return    rawNum.trim();    char[]    rawNum    =    rawNum.toCharArray();    return    rawNum.trim();    	compilable	  [FE]  JsonParseException  	35	8	replace
391	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  if(rawLen  <  1)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	add	if(rawLen  <  1)  {  throw  new  IllegalArgumentException( " ");  }	  if(rawNum.startsWith(   "-   ")||    rawLen    <    2)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  JsonParseException  	63	8	replace
392	[BUG]  [BUGGY]  if(rawLen  <  1)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  if(rawLen  <  1)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	if(rawLen  <  1)  {  throw  new  IllegalArgumentException( " ");  }	  if(rawNum.startsWith(   "-   ")||    rawLen    <    2)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  JsonParseException  	63	8	replace
393	[BUG]  [BUGGY]  _currToken  =  JsonToken.VALUE_STRING;  ||  _currToken  ==  JsonToken.VALUE_STRING;  [CE]  illegal  start  of  expression  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  _currToken  =  JsonToken.VALUE_STRING;  ||  _currToken  ==  JsonToken.VALUE_STRING;  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	_currToken    =    JsonToken.VALUE_STRING;    ||  _currToken  ==  JsonToken.VALUE_STRING;	  	non-compiled	[CE]  illegal  start  of  expression	38	None	add
394	[BUG]  [BUGGY]  _currToken  =  JsonToken.VALUE_STRING;  ||  _currToken  ==  JsonToken.VALUE_STRING)  {  [CE]  illegal  start  of  expression  [FE]      JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  _currToken  =  JsonToken.VALUE_STRING;  ||  _currToken  ==  JsonToken.VALUE_STRING)  {  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	_currToken    =    JsonToken.VALUE_STRING;    ||  _currToken  ==  JsonToken.VALUE_STRING)  {	  	non-compiled	[CE]  illegal  start  of  expression	38	None	add
395	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  _currToken  =  JsonToken.VALUE_NULL;  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	add	_currToken  =  JsonToken.VALUE_NULL;	  _currToken    =    JsonToken.VALUE_STRING;    	compilable	  [FE]  JsonParseException  	39	8	replace
396	[BUG]  [BUGGY]  _currToken  =  JsonToken.VALUE_NULL;  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  _currToken  =  JsonToken.VALUE_NULL;  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	_currToken  =  JsonToken.VALUE_NULL;	  _currToken    =    JsonToken.VALUE_STRING;    	compilable	  [FE]  JsonParseException  	39	8	replace
397	[BUG]  [BUGGY]  return  rawNum.substring(0,  rawLen).trim();  if(rawNum.startsWith( "- ")||  rawLen  <  2)  {  return  rawNum.substring(0,  rawLen).trim();  }  [CE]  unreachable  statement  [FE]    JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  return  rawNum.substring(0,  rawLen).trim();  if(rawNum.startsWith( "- ")||  rawLen  <  2)  {  return  rawNum.substring(0,  rawLen).trim();  }  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return    rawNum.substring(0,    rawLen).trim();    if(rawNum.startsWith( "- ")||  rawLen  <  2)  {  return  rawNum.substring(0,  rawLen).trim();  }	  	non-compiled	[CE]  unreachable  statement	16	None	add
398	[BUG]  [BUGGY]  return  rawNum.substring(0,  rawLen).trim();  char[]  rawNum  =  rawNum.toCharArray();  return  rawNum.substring(0,  rawLen).trim();  [CE]  variable  rawNum  is  already  defined  in  method  _longIntegerDesc(String)  [FE]      JsonParseException    [CONTEXT]      protected  String  _longIntegerDesc(String  rawNum)  {  int  rawLen  =  rawNum.length();  if  (rawLen  <  1000)  {      [BUGGY]  return  rawNum.substring(0,  rawLen).trim();  char[]  rawNum  =  rawNum.toCharArray();  return  rawNum.substring(0,  rawLen).trim();  [BUGGY]      }  if  (rawNum.startsWith(     "-     "))  {  rawLen  -=  1;  }  return  String.format(     "[Integer  with  %d  digits]     ",  rawLen);  }  [CLASS]  ParserMinimalBase  [METHOD]  _longIntegerDesc  [RETURN_TYPE]  String  String  rawNum  [VARIABLES]  byte[]  NO_BYTES  boolean  double  MAX_INT_D  MAX_LONG_D  MIN_INT_D  MIN_LONG_D  defaultValue  char  CHAR_NULL  BigInteger  BI_MAX_INT  BI_MAX_LONG  BI_MIN_INT  BI_MIN_LONG  int[]  NO_INTS  JsonToken  _currToken  _lastClearedToken  inputType  t  String  rawNum  int  INT_0  INT_9  INT_APOS  INT_ASTERISK  INT_BACKSLASH  INT_COLON  INT_COMMA  INT_CR  INT_E  INT_HASH  INT_LBRACKET  INT_LCURLY  INT_LF  INT_MINUS  INT_PERIOD  INT_PLUS  INT_QUOTE  INT_RBRACKET  INT_RCURLY  INT_SLASH  INT_SPACE  INT_TAB  INT_e  MAX_ERROR_TOKEN_LENGTH  NR_BIGDECIMAL  NR_BIGINT  NR_DOUBLE  NR_FLOAT  NR_INT  NR_LONG  NR_UNKNOWN  ch  defaultValue  features  id  open  rawLen  BigDecimal  BD_MAX_INT  BD_MAX_LONG  BD_MIN_INT  BD_MIN_LONG  long  MAX_INT_L  MIN_INT_L  defaultValue  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java	0.6123724356957946	600	600	8	replace	return    rawNum.substring(0,    rawLen).trim();    char[]  rawNum  =  rawNum.toCharArray();  return  rawNum.substring(0,  rawLen).trim();	  	non-compiled	[CE]  variable  rawNum  is  already  defined  in  method  _longIntegerDesc(String)	16	None	add
