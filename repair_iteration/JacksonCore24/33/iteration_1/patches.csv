bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]      ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;  }  else  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {    [BUGGY]      ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  [BUGGY]    }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  _numberLong  =  (long)  _numberDouble;  }  else  if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  if  (BD_MIN_LONG.compareTo(_numberBigDecimal)  >  0  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	921	921	8	replace	        ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
2	[BUG]  [BUGGY]      ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]    {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;  }  else  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {    [BUGGY]      ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  [BUGGY]    }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  _numberLong  =  (long)  _numberDouble;  }  else  if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  if  (BD_MIN_LONG.compareTo(_numberBigDecimal)  >  0  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	921	921	8	replace	        ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
3	[BUG]  [BUGGY]      ||  BI_MAX_LONG.compareTo(_numberBigDecimal)  <  0)  {  reportOverflowLong();  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;  }  else  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {    [BUGGY]      ||  BI_MAX_LONG.compareTo(_numberBigDecimal)  <  0)  {  reportOverflowLong();  [BUGGY]    }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  _numberLong  =  (long)  _numberDouble;  }  else  if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  if  (BD_MIN_LONG.compareTo(_numberBigDecimal)  >  0  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	921	921	8	replace	        ||  BI_MAX_LONG.compareTo(_numberBigDecimal)  <  0)  {  reportOverflowLong();	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
4	[BUG]  [BUGGY]      ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  =  0)  {  reportOverflowLong();  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;  }  else  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {    [BUGGY]      ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  =  0)  {  reportOverflowLong();  [BUGGY]    }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  _numberLong  =  (long)  _numberDouble;  }  else  if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  if  (BD_MIN_LONG.compareTo(_numberBigDecimal)  >  0  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	921	921	8	replace	        ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  =  0)  {  reportOverflowLong();	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
5	[BUG]  [BUGGY]      ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  return;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;  }  else  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {    [BUGGY]      ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  return;  [BUGGY]    }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  _numberLong  =  (long)  _numberDouble;  }  else  if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  if  (BD_MIN_LONG.compareTo(_numberBigDecimal)  >  0  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	921	921	8	replace	        ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  return;	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
6	[BUG]  [BUGGY]  reportOverflowLong(_numberBigInt,  MAX_LONG_D);  [CE]  no  suitable  method  found  for  reportOverflowLong(BigInteger,double)  [FE]        JsonParseException    [CONTEXT]    {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;  }  else  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {    [BUGGY]  reportOverflowLong(_numberBigInt,  MAX_LONG_D);  [BUGGY]    }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  _numberLong  =  (long)  _numberDouble;  }  else  if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  if  (BD_MIN_LONG.compareTo(_numberBigDecimal)  >  0  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	921	921	8	replace	reportOverflowLong(_numberBigInt,  MAX_LONG_D);	  reportOverflowLong(MAX_LONG_D);    	non-compiled	[CE]  no  suitable  method  found  for  reportOverflowLong(BigInteger,double)	1	None	replace
7	[BUG]  [BUGGY]  reportOverflowLong(MAX_LONG_D,  value);  [CE]  cannot  find  symbol  value  [FE]          JsonParseException    [CONTEXT]    {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;  }  else  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {    [BUGGY]  reportOverflowLong(MAX_LONG_D,  value);  [BUGGY]    }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  _numberLong  =  (long)  _numberDouble;  }  else  if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  if  (BD_MIN_LONG.compareTo(_numberBigDecimal)  >  0  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	921	921	8	replace	reportOverflowLong(MAX_LONG_D,  value);	  reportOverflowLong(MAX_LONG_D);    	non-compiled	[CE]  cannot  find  symbol  value	1	None	replace
8	[BUG]  [BUGGY]  reportOverflowLong(value,  MAX_LONG_D);  [CE]  cannot  find  symbol  value  [FE]            JsonParseException    [CONTEXT]    {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;  }  else  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {    [BUGGY]  reportOverflowLong(value,  MAX_LONG_D);  [BUGGY]    }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  _numberLong  =  (long)  _numberDouble;  }  else  if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  if  (BD_MIN_LONG.compareTo(_numberBigDecimal)  >  0  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	921	921	8	replace	reportOverflowLong(value,  MAX_LONG_D);	  reportOverflowLong(MAX_LONG_D);    	non-compiled	[CE]  cannot  find  symbol  value	1	None	replace
9	[BUG]  [BUGGY]  reportOverflowLong(MAX_LONG_D,  _numberDouble);  [CE]  no  suitable  method  found  for  reportOverflowLong(double,double)  [FE]              JsonParseException    [CONTEXT]    {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;  }  else  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {    [BUGGY]  reportOverflowLong(MAX_LONG_D,  _numberDouble);  [BUGGY]    }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  _numberLong  =  (long)  _numberDouble;  }  else  if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  if  (BD_MIN_LONG.compareTo(_numberBigDecimal)  >  0  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	921	921	8	replace	reportOverflowLong(MAX_LONG_D,  _numberDouble);	  reportOverflowLong(MAX_LONG_D);    	non-compiled	[CE]  no  suitable  method  found  for  reportOverflowLong(double,double)	1	None	replace
10	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    UnsupportedOperationException    [CONTEXT]    {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;  }  else  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {    [BUGGY]  _throwInternal();  [BUGGY]    }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  _numberLong  =  (long)  _numberDouble;  }  else  if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  if  (BD_MIN_LONG.compareTo(_numberBigDecimal)  >  0  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	921	921	8	add	_throwInternal();	  _reportUnsupportedOperation();    	compilable	  [FE]  RuntimeException  	9	8	replace
11	[BUG]  [BUGGY]  _throwInternal();  [FE]  RuntimeException  [FE]    UnsupportedOperationException    [CONTEXT]    {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;  }  else  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {    [BUGGY]  _throwInternal();  [BUGGY]    }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  _numberLong  =  (long)  _numberDouble;  }  else  if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  if  (BD_MIN_LONG.compareTo(_numberBigDecimal)  >  0  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	921	921	8	replace	_throwInternal();	  _reportUnsupportedOperation();    	compilable	  [FE]  RuntimeException  	9	8	replace
12	[BUG]  [BUGGY]  reportOverflowLong(BD_MIN_LONG.compareTo(_numberBigInt));  [CE]  method  compareTo  in  class  BigDecimal  cannot  be  applied  to  given  types;  [FE]        JsonParseException    [CONTEXT]    {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;  }  else  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {    [BUGGY]  reportOverflowLong(BD_MIN_LONG.compareTo(_numberBigInt));  [BUGGY]    }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  _numberLong  =  (long)  _numberDouble;  }  else  if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  if  (BD_MIN_LONG.compareTo(_numberBigDecimal)  >  0  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	921	921	8	replace	reportOverflowLong(BD_MIN_LONG.compareTo(_numberBigInt));	  reportOverflowLong(MAX_LONG.compareTo(_numberBigInt));    	non-compiled	[CE]  method  compareTo  in  class  BigDecimal  cannot  be  applied  to  given  types;	7	None	replace
13	[BUG]  [BUGGY]  reportOverflowLong(BI_MIN_LONG.compareTo(_numberBigInt));  [CE]  no  suitable  method  found  for  reportOverflowLong(int)  [FE]          JsonParseException    [CONTEXT]    {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;  }  else  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {    [BUGGY]  reportOverflowLong(BI_MIN_LONG.compareTo(_numberBigInt));  [BUGGY]    }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  _numberLong  =  (long)  _numberDouble;  }  else  if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  if  (BD_MIN_LONG.compareTo(_numberBigDecimal)  >  0  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	921	921	8	replace	reportOverflowLong(BI_MIN_LONG.compareTo(_numberBigInt));	  reportOverflowLong(MAX_LONG.compareTo(_numberBigInt));    	non-compiled	[CE]  no  suitable  method  found  for  reportOverflowLong(int)	7	None	replace
14	[BUG]  [BUGGY]  reportOverflowLong(BI_MAX_LONG.compareTo(_numberBigInt));  [CE]  no  suitable  method  found  for  reportOverflowLong(int)  [FE]            JsonParseException    [CONTEXT]    {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;  }  else  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {    [BUGGY]  reportOverflowLong(BI_MAX_LONG.compareTo(_numberBigInt));  [BUGGY]    }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  _numberLong  =  (long)  _numberDouble;  }  else  if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  if  (BD_MIN_LONG.compareTo(_numberBigDecimal)  >  0  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	921	921	8	replace	reportOverflowLong(BI_MAX_LONG.compareTo(_numberBigInt));	  reportOverflowLong(MAX_LONG.compareTo(_numberBigInt));    	non-compiled	[CE]  no  suitable  method  found  for  reportOverflowLong(int)	7	None	replace
15	[BUG]  [BUGGY]  reportOverflowLong(_numberBigInt.compareTo(_numberBigInt));  [CE]  no  suitable  method  found  for  reportOverflowLong(int)  [FE]              JsonParseException    [CONTEXT]    {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;  }  else  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {    [BUGGY]  reportOverflowLong(_numberBigInt.compareTo(_numberBigInt));  [BUGGY]    }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  _numberLong  =  (long)  _numberDouble;  }  else  if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  if  (BD_MIN_LONG.compareTo(_numberBigDecimal)  >  0  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	921	921	8	replace	reportOverflowLong(_numberBigInt.compareTo(_numberBigInt));	  reportOverflowLong(MAX_LONG.compareTo(_numberBigInt));    	non-compiled	[CE]  no  suitable  method  found  for  reportOverflowLong(int)	7	None	replace
16	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]    {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;  }  else  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {    [BUGGY]  _reportUnsupportedOperation();  _reportUnsupportedOperation();  [BUGGY]    }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  _numberLong  =  (long)  _numberDouble;  }  else  if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  if  (BD_MIN_LONG.compareTo(_numberBigDecimal)  >  0  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	921	921	8	add	_reportUnsupportedOperation();    _reportUnsupportedOperation();	  	compilable	  [FE]  UnsupportedOperationException  	8	8	add
17	[BUG]  [BUGGY]  _reportUnsupportedOperation();  _reportUnsupportedOperation();  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]    {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;  }  else  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {    [BUGGY]  _reportUnsupportedOperation();  _reportUnsupportedOperation();  [BUGGY]    }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  _numberLong  =  (long)  _numberDouble;  }  else  if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  if  (BD_MIN_LONG.compareTo(_numberBigDecimal)  >  0  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	921	921	8	replace	_reportUnsupportedOperation();    _reportUnsupportedOperation();	  	compilable	  [FE]  UnsupportedOperationException  	8	8	add
18	[BUG]  [BUGGY]  _reportUnsupportedOperation();  if(_expLength  >  MAX_LENGTH)  {  _reportUnsupportedOperation();  }  [CE]  cannot  find  symbol  MAX_LENGTH  [FE]      UnsupportedOperationException    [CONTEXT]    {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;  }  else  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {    [BUGGY]  _reportUnsupportedOperation();  if(_expLength  >  MAX_LENGTH)  {  _reportUnsupportedOperation();  }  [BUGGY]    }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  _numberLong  =  (long)  _numberDouble;  }  else  if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  if  (BD_MIN_LONG.compareTo(_numberBigDecimal)  >  0  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	921	921	8	replace	_reportUnsupportedOperation();    if(_expLength  >  MAX_LENGTH)  {  _reportUnsupportedOperation();  }	  	non-compiled	[CE]  cannot  find  symbol  MAX_LENGTH	8	None	add
19	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]        UnsupportedOperationException    [CONTEXT]    {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;  }  else  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {    [BUGGY]  _reportUnsupportedOperation();  if(_expLength  >  MAX_LONG_D)  {  _reportUnsupportedOperation();  }  [BUGGY]    }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  _numberLong  =  (long)  _numberDouble;  }  else  if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  if  (BD_MIN_LONG.compareTo(_numberBigDecimal)  >  0  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	921	921	8	add	_reportUnsupportedOperation();    if(_expLength  >  MAX_LONG_D)  {  _reportUnsupportedOperation();  }	  	compilable	  [FE]  UnsupportedOperationException  	8	8	add
20	[BUG]  [BUGGY]  _reportUnsupportedOperation();  if(_expLength  >  MAX_LONG_D)  {  _reportUnsupportedOperation();  }  [FE]  UnsupportedOperationException  [FE]        UnsupportedOperationException    [CONTEXT]    {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;  }  else  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {    [BUGGY]  _reportUnsupportedOperation();  if(_expLength  >  MAX_LONG_D)  {  _reportUnsupportedOperation();  }  [BUGGY]    }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  _numberLong  =  (long)  _numberDouble;  }  else  if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  if  (BD_MIN_LONG.compareTo(_numberBigDecimal)  >  0  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	921	921	8	replace	_reportUnsupportedOperation();    if(_expLength  >  MAX_LONG_D)  {  _reportUnsupportedOperation();  }	  	compilable	  [FE]  UnsupportedOperationException  	8	8	add
21	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]          UnsupportedOperationException    [CONTEXT]    {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;  }  else  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {    [BUGGY]  _reportUnsupportedOperation();  if(_numberBigInt!=  null)  {  _reportUnsupportedOperation();  }  [BUGGY]    }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  _numberLong  =  (long)  _numberDouble;  }  else  if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  if  (BD_MIN_LONG.compareTo(_numberBigDecimal)  >  0  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	921	921	8	add	_reportUnsupportedOperation();    if(_numberBigInt!=  null)  {  _reportUnsupportedOperation();  }	  	compilable	  [FE]  UnsupportedOperationException  	8	8	add
22	[BUG]  [BUGGY]  _reportUnsupportedOperation();  if(_numberBigInt!=  null)  {  _reportUnsupportedOperation();  }  [FE]  UnsupportedOperationException  [FE]          UnsupportedOperationException    [CONTEXT]    {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;  }  else  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {    [BUGGY]  _reportUnsupportedOperation();  if(_numberBigInt!=  null)  {  _reportUnsupportedOperation();  }  [BUGGY]    }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  _numberLong  =  (long)  _numberDouble;  }  else  if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  if  (BD_MIN_LONG.compareTo(_numberBigDecimal)  >  0  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	921	921	8	replace	_reportUnsupportedOperation();    if(_numberBigInt!=  null)  {  _reportUnsupportedOperation();  }	  	compilable	  [FE]  UnsupportedOperationException  	8	8	add
23	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]            UnsupportedOperationException    [CONTEXT]    {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;  }  else  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {    [BUGGY]  _reportUnsupportedOperation();  if(_numberBigDecimal!=  null)  {  _reportUnsupportedOperation();  }  [BUGGY]    }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  _numberLong  =  (long)  _numberDouble;  }  else  if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  if  (BD_MIN_LONG.compareTo(_numberBigDecimal)  >  0  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	921	921	8	add	_reportUnsupportedOperation();    if(_numberBigDecimal!=  null)  {  _reportUnsupportedOperation();  }	  	compilable	  [FE]  UnsupportedOperationException  	8	8	add
24	[BUG]  [BUGGY]  _reportUnsupportedOperation();  if(_numberBigDecimal!=  null)  {  _reportUnsupportedOperation();  }  [FE]  UnsupportedOperationException  [FE]            UnsupportedOperationException    [CONTEXT]    {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;  }  else  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {    [BUGGY]  _reportUnsupportedOperation();  if(_numberBigDecimal!=  null)  {  _reportUnsupportedOperation();  }  [BUGGY]    }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  _numberLong  =  (long)  _numberDouble;  }  else  if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  if  (BD_MIN_LONG.compareTo(_numberBigDecimal)  >  0  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	921	921	8	replace	_reportUnsupportedOperation();    if(_numberBigDecimal!=  null)  {  _reportUnsupportedOperation();  }	  	compilable	  [FE]  UnsupportedOperationException  	8	8	add
25	[BUG]  [BUGGY]  reportOverflowLong(_numberBigInt);  [CE]  no  suitable  method  found  for  reportOverflowLong(BigInteger)  [FE]          JsonParseException    [CONTEXT]    {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;  }  else  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {    [BUGGY]  reportOverflowLong(_numberBigInt);  [BUGGY]    }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  _numberLong  =  (long)  _numberDouble;  }  else  if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  if  (BD_MIN_LONG.compareTo(_numberBigDecimal)  >  0  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	921	921	8	replace	reportOverflowLong(_numberBigInt);	  reportOverflowLong(MAX_LONG);    	non-compiled	[CE]  no  suitable  method  found  for  reportOverflowLong(BigInteger)	2	None	replace
26	[BUG]  [BUGGY]  reportOverflowLong(_numberBigDecimal);  [CE]  no  suitable  method  found  for  reportOverflowLong(BigDecimal)  [FE]            JsonParseException    [CONTEXT]    {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;  }  else  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {    [BUGGY]  reportOverflowLong(_numberBigDecimal);  [BUGGY]    }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  _numberLong  =  (long)  _numberDouble;  }  else  if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  if  (BD_MIN_LONG.compareTo(_numberBigDecimal)  >  0  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	921	921	8	replace	reportOverflowLong(_numberBigDecimal);	  reportOverflowLong(MAX_LONG);    	non-compiled	[CE]  no  suitable  method  found  for  reportOverflowLong(BigDecimal)	2	None	replace
27	[BUG]  [BUGGY]  reportOverflowLong(MIN_LONG_D);  [CE]  no  suitable  method  found  for  reportOverflowLong(double)  [FE]              JsonParseException    [CONTEXT]    {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;  }  else  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {    [BUGGY]  reportOverflowLong(MIN_LONG_D);  [BUGGY]    }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  _numberLong  =  (long)  _numberDouble;  }  else  if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  if  (BD_MIN_LONG.compareTo(_numberBigDecimal)  >  0  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	921	921	8	replace	reportOverflowLong(MIN_LONG_D);	  reportOverflowLong(MAX_LONG);    	non-compiled	[CE]  no  suitable  method  found  for  reportOverflowLong(double)	2	None	replace
28	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]    {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;  }  else  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {    [BUGGY]  reportOverflowInt();  reportOverflowInt();  [BUGGY]    }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  _numberLong  =  (long)  _numberDouble;  }  else  if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  if  (BD_MIN_LONG.compareTo(_numberBigDecimal)  >  0  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	921	921	8	add	reportOverflowInt();    reportOverflowInt();	  	compilable	  [FE]  JsonParseException  	3	8	add
29	[BUG]  [BUGGY]  reportOverflowInt();  reportOverflowInt();  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]    {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;  }  else  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {    [BUGGY]  reportOverflowInt();  reportOverflowInt();  [BUGGY]    }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  _numberLong  =  (long)  _numberDouble;  }  else  if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  if  (BD_MIN_LONG.compareTo(_numberBigDecimal)  >  0  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	921	921	8	replace	reportOverflowInt();    reportOverflowInt();	  	compilable	  [FE]  JsonParseException  	3	8	add
30	[BUG]  [BUGGY]  reportOverflowInt();  _reportOverflowInt();  [CE]  cannot  find  symbol  [FE]      JsonParseException    [CONTEXT]    {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;  }  else  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {    [BUGGY]  reportOverflowInt();  _reportOverflowInt();  [BUGGY]    }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  _numberLong  =  (long)  _numberDouble;  }  else  if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  if  (BD_MIN_LONG.compareTo(_numberBigDecimal)  >  0  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	921	921	8	replace	reportOverflowInt();    _reportOverflowInt();	  	non-compiled	[CE]  cannot  find  symbol	3	None	add
31	[BUG]  [BUGGY]  reportOverflowInt();  Reporter.error( "Overflowing  integer: "  +  _numberInt.toString());  [CE]  int  cannot  be  dereferenced  [FE]        JsonParseException    [CONTEXT]    {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;  }  else  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {    [BUGGY]  reportOverflowInt();  Reporter.error( "Overflowing  integer: "  +  _numberInt.toString());  [BUGGY]    }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  _numberLong  =  (long)  _numberDouble;  }  else  if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  if  (BD_MIN_LONG.compareTo(_numberBigDecimal)  >  0  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	921	921	8	replace	reportOverflowInt();    Reporter.error( "Overflowing  integer: "  +  _numberInt.toString());	  	non-compiled	[CE]  int  cannot  be  dereferenced	3	None	add
32	[BUG]  [BUGGY]  reportOverflowInt();  Reporter.error( "Overflowing  integer: "  +  _numberInt.longValue());  [CE]  int  cannot  be  dereferenced  [FE]          JsonParseException    [CONTEXT]    {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;  }  else  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {    [BUGGY]  reportOverflowInt();  Reporter.error( "Overflowing  integer: "  +  _numberInt.longValue());  [BUGGY]    }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  _numberLong  =  (long)  _numberDouble;  }  else  if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  if  (BD_MIN_LONG.compareTo(_numberBigDecimal)  >  0  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	921	921	8	replace	reportOverflowInt();    Reporter.error( "Overflowing  integer: "  +  _numberInt.longValue());	  	non-compiled	[CE]  int  cannot  be  dereferenced	3	None	add
33	[BUG]  [BUGGY]  reportOverflowInt();  Reporter.error( "Overflow  int  error: "  +  _numberInt.toString());  [CE]  int  cannot  be  dereferenced  [FE]            JsonParseException    [CONTEXT]    {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;  }  else  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {    [BUGGY]  reportOverflowInt();  Reporter.error( "Overflow  int  error: "  +  _numberInt.toString());  [BUGGY]    }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  _numberLong  =  (long)  _numberDouble;  }  else  if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  if  (BD_MIN_LONG.compareTo(_numberBigDecimal)  >  0  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	921	921	8	replace	reportOverflowInt();    Reporter.error( "Overflow  int  error: "  +  _numberInt.toString());	  	non-compiled	[CE]  int  cannot  be  dereferenced	3	None	add
34	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]    {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;  }  else  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {    [BUGGY]  _reportError( "msg.no.number ");  [BUGGY]    }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  _numberLong  =  (long)  _numberDouble;  }  else  if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  if  (BD_MIN_LONG.compareTo(_numberBigDecimal)  >  0  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	921	921	8	add	_reportError( "msg.no.number ");	  reportOverflowInt();    	compilable	  [FE]  JsonParseException  	4	8	replace
35	[BUG]  [BUGGY]  _reportError( "msg.no.number ");  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]    {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;  }  else  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {    [BUGGY]  _reportError( "msg.no.number ");  [BUGGY]    }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  _numberLong  =  (long)  _numberDouble;  }  else  if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  if  (BD_MIN_LONG.compareTo(_numberBigDecimal)  >  0  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	921	921	8	replace	_reportError( "msg.no.number ");	  reportOverflowInt();    	compilable	  [FE]  JsonParseException  	4	8	replace
36	[BUG]  [BUGGY]  reportOverflowLong(NR_BIGINT);  [CE]  no  suitable  method  found  for  reportOverflowLong(int)  [FE]          JsonParseException    [CONTEXT]    {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;  }  else  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {    [BUGGY]  reportOverflowLong(NR_BIGINT);  [BUGGY]    }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  _numberLong  =  (long)  _numberDouble;  }  else  if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  if  (BD_MIN_LONG.compareTo(_numberBigDecimal)  >  0  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	921	921	8	replace	reportOverflowLong(NR_BIGINT);	  reportOverflowLong(MAX_LONG);    	non-compiled	[CE]  no  suitable  method  found  for  reportOverflowLong(int)	2	None	replace
37	[BUG]  [BUGGY]  reportOverflowLong(MAX_MIN_LONG);  [CE]  cannot  find  symbol  MAX_MIN_LONG  [FE]            JsonParseException    [CONTEXT]    {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;  }  else  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {    [BUGGY]  reportOverflowLong(MAX_MIN_LONG);  [BUGGY]    }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  _numberLong  =  (long)  _numberDouble;  }  else  if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  if  (BD_MIN_LONG.compareTo(_numberBigDecimal)  >  0  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	921	921	8	replace	reportOverflowLong(MAX_MIN_LONG);	  reportOverflowLong(MAX_LONG);    	non-compiled	[CE]  cannot  find  symbol  MAX_MIN_LONG	2	None	replace
38	[BUG]  [BUGGY]  _throwUnsupportedOperation();  [CE]  cannot  find  symbol  [FE]    UnsupportedOperationException    [CONTEXT]    {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;  }  else  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {    [BUGGY]  _throwUnsupportedOperation();  [BUGGY]    }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  _numberLong  =  (long)  _numberDouble;  }  else  if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  if  (BD_MIN_LONG.compareTo(_numberBigDecimal)  >  0  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	921	921	8	replace	_throwUnsupportedOperation();	  _reportUnsupportedOperation();    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
39	[BUG]  [BUGGY]  _reportOverflowLong();  [CE]  cannot  find  symbol  [FE]      UnsupportedOperationException    [CONTEXT]    {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;  }  else  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {    [BUGGY]  _reportOverflowLong();  [BUGGY]    }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  _numberLong  =  (long)  _numberDouble;  }  else  if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  if  (BD_MIN_LONG.compareTo(_numberBigDecimal)  >  0  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	921	921	8	replace	_reportOverflowLong();	  _reportUnsupportedOperation();    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
40	[BUG]  [BUGGY]  reportOverflowLong(NR_MAX_LONG.compareTo(_numberBigInt));  [CE]  cannot  find  symbol  NR_MAX_LONG  [FE]        JsonParseException    [CONTEXT]    {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;  }  else  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {    [BUGGY]  reportOverflowLong(NR_MAX_LONG.compareTo(_numberBigInt));  [BUGGY]    }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  _numberLong  =  (long)  _numberDouble;  }  else  if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  if  (BD_MIN_LONG.compareTo(_numberBigDecimal)  >  0  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	921	921	8	replace	reportOverflowLong(NR_MAX_LONG.compareTo(_numberBigInt));	  reportOverflowLong(MAX_LONG.compareTo(_numberBigInt));    	non-compiled	[CE]  cannot  find  symbol  NR_MAX_LONG	7	None	replace
41	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    AssertionFailedError    [CONTEXT]    {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;  }  else  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {    [BUGGY]  if(BI_MAX_LONG.compareTo(_numberBigInt)>  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  [BUGGY]    }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  _numberLong  =  (long)  _numberDouble;  }  else  if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  if  (BD_MIN_LONG.compareTo(_numberBigDecimal)  >  0  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	921	921	8	add	if(BI_MAX_LONG.compareTo(_numberBigInt)>  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }	      	compilable	  [FE]  JsonParseException  	6	8	replace
42	[BUG]  [BUGGY]  if(BI_MAX_LONG.compareTo(_numberBigInt)>  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  [FE]  JsonParseException  [FE]    AssertionFailedError    [CONTEXT]    {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;  }  else  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {    [BUGGY]  if(BI_MAX_LONG.compareTo(_numberBigInt)>  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  [BUGGY]    }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  _numberLong  =  (long)  _numberDouble;  }  else  if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  if  (BD_MIN_LONG.compareTo(_numberBigDecimal)  >  0  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	921	921	8	replace	if(BI_MAX_LONG.compareTo(_numberBigInt)>  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }	      	compilable	  [FE]  JsonParseException  	6	8	replace
43	[BUG]  [BUGGY]  if(BI_MAX_LONG.compareTo(_numberBigDecimal)>  0  ||  BI_MAX_LONG.compareTo(_numberBigDecimal)  <  0)  {  reportOverflowLong();  }  [CE]  method  compareTo  in  class  BigInteger  cannot  be  applied  to  given  types;  [FE]      AssertionFailedError    [CONTEXT]    {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;  }  else  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {    [BUGGY]  if(BI_MAX_LONG.compareTo(_numberBigDecimal)>  0  ||  BI_MAX_LONG.compareTo(_numberBigDecimal)  <  0)  {  reportOverflowLong();  }  [BUGGY]    }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  _numberLong  =  (long)  _numberDouble;  }  else  if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  if  (BD_MIN_LONG.compareTo(_numberBigDecimal)  >  0  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	921	921	8	replace	if(BI_MAX_LONG.compareTo(_numberBigDecimal)>  0  ||  BI_MAX_LONG.compareTo(_numberBigDecimal)  <  0)  {  reportOverflowLong();  }	      	non-compiled	[CE]  method  compareTo  in  class  BigInteger  cannot  be  applied  to  given  types;	6	None	replace
44	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        AssertionFailedError    [CONTEXT]    {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;  }  else  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {    [BUGGY]  if(BI_MAX_LONG.compareTo(_numberBigInt)>  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  _numberLong  =  (long)  _numberDouble;  }  else  if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  if  (BD_MIN_LONG.compareTo(_numberBigDecimal)  >  0  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	921	921	8	add	if(BI_MAX_LONG.compareTo(_numberBigInt)>  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  throw  new  IllegalArgumentException( " ");  }	      	compilable	  [FE]  IllegalArgumentException  	6	8	replace
45	[BUG]  [BUGGY]  if(BI_MAX_LONG.compareTo(_numberBigInt)>  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]        AssertionFailedError    [CONTEXT]    {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;  }  else  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {    [BUGGY]  if(BI_MAX_LONG.compareTo(_numberBigInt)>  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  _numberLong  =  (long)  _numberDouble;  }  else  if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  if  (BD_MIN_LONG.compareTo(_numberBigDecimal)  >  0  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	921	921	8	replace	if(BI_MAX_LONG.compareTo(_numberBigInt)>  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  throw  new  IllegalArgumentException( " ");  }	      	compilable	  [FE]  IllegalArgumentException  	6	8	replace
46	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]    {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;  }  else  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {    [BUGGY]  reportOverflowInt();  int  MAX_LONG_D  =  BI_MAX_LONG.compareTo(_numberBigInt);  [BUGGY]    }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  _numberLong  =  (long)  _numberDouble;  }  else  if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  if  (BD_MIN_LONG.compareTo(_numberBigDecimal)  >  0  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	921	921	8	add	reportOverflowInt();    int  MAX_LONG_D  =  BI_MAX_LONG.compareTo(_numberBigInt);	  	compilable	  [FE]  JsonParseException  	3	8	add
47	[BUG]  [BUGGY]  reportOverflowInt();  int  MAX_LONG_D  =  BI_MAX_LONG.compareTo(_numberBigInt);  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]    {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;  }  else  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {    [BUGGY]  reportOverflowInt();  int  MAX_LONG_D  =  BI_MAX_LONG.compareTo(_numberBigInt);  [BUGGY]    }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  _numberLong  =  (long)  _numberDouble;  }  else  if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  if  (BD_MIN_LONG.compareTo(_numberBigDecimal)  >  0  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	921	921	8	replace	reportOverflowInt();    int  MAX_LONG_D  =  BI_MAX_LONG.compareTo(_numberBigInt);	  	compilable	  [FE]  JsonParseException  	3	8	add
48	[BUG]  [BUGGY]  reportOverflowInt();  int  MAX_LONG_D  =  _numberBigInt.longValue();  [CE]  possible  loss  of  precision  [FE]      JsonParseException    [CONTEXT]    {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;  }  else  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {    [BUGGY]  reportOverflowInt();  int  MAX_LONG_D  =  _numberBigInt.longValue();  [BUGGY]    }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  _numberLong  =  (long)  _numberDouble;  }  else  if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  if  (BD_MIN_LONG.compareTo(_numberBigDecimal)  >  0  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	921	921	8	replace	reportOverflowInt();    int  MAX_LONG_D  =  _numberBigInt.longValue();	  	non-compiled	[CE]  possible  loss  of  precision	3	None	add
49	[BUG]  [BUGGY]  reportOverflowInt();  int  MAX_LONG_D  =  _numberBigDecimal.longValue();  [CE]  possible  loss  of  precision  [FE]        JsonParseException    [CONTEXT]    {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;  }  else  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {    [BUGGY]  reportOverflowInt();  int  MAX_LONG_D  =  _numberBigDecimal.longValue();  [BUGGY]    }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  _numberLong  =  (long)  _numberDouble;  }  else  if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  if  (BD_MIN_LONG.compareTo(_numberBigDecimal)  >  0  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	921	921	8	replace	reportOverflowInt();    int  MAX_LONG_D  =  _numberBigDecimal.longValue();	  	non-compiled	[CE]  possible  loss  of  precision	3	None	add
50	[BUG]  [BUGGY]  reportOverflowLong(value);  [CE]  cannot  find  symbol  value  [FE]        JsonParseException    [CONTEXT]    {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;  }  else  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {    [BUGGY]  reportOverflowLong(value);  [BUGGY]    }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  _numberLong  =  (long)  _numberDouble;  }  else  if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  if  (BD_MIN_LONG.compareTo(_numberBigDecimal)  >  0  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	921	921	8	replace	reportOverflowLong(value);	  reportOverflowLong(MAX_LONG_D);    	non-compiled	[CE]  cannot  find  symbol  value	1	None	replace
51	[BUG]  [BUGGY]  _reportUnsupportedOperation();  if(_expLength  >  MAX_LENGTH)  {  _reportUnsupportedOperation();  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {  reportOverflowLong();  }  [CE]  cannot  find  symbol  MAX_LENGTH  [FE]    UnsupportedOperationException    [CONTEXT]    {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;  }  else  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {    [BUGGY]  _reportUnsupportedOperation();  if(_expLength  >  MAX_LENGTH)  {  _reportUnsupportedOperation();  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {  reportOverflowLong();  }  [BUGGY]    }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  _numberLong  =  (long)  _numberDouble;  }  else  if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  if  (BD_MIN_LONG.compareTo(_numberBigDecimal)  >  0  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	921	921	8	replace	_reportUnsupportedOperation();    if(_expLength  >  MAX_LENGTH)  {  _reportUnsupportedOperation();  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {  reportOverflowLong();  }	  	non-compiled	[CE]  cannot  find  symbol  MAX_LENGTH	8	None	add
52	[BUG]  [BUGGY]  _reportUnsupportedOperation();  if(_expLength  >  MAX_LENGTH)  {  _reportUnsupportedOperation();  }  else  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  reportOverflowLong();  }  [CE]  cannot  find  symbol  MAX_LENGTH  [FE]      UnsupportedOperationException    [CONTEXT]    {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;  }  else  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {    [BUGGY]  _reportUnsupportedOperation();  if(_expLength  >  MAX_LENGTH)  {  _reportUnsupportedOperation();  }  else  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  reportOverflowLong();  }  [BUGGY]    }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  _numberLong  =  (long)  _numberDouble;  }  else  if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  if  (BD_MIN_LONG.compareTo(_numberBigDecimal)  >  0  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	921	921	8	replace	_reportUnsupportedOperation();    if(_expLength  >  MAX_LENGTH)  {  _reportUnsupportedOperation();  }  else  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  reportOverflowLong();  }	  	non-compiled	[CE]  cannot  find  symbol  MAX_LENGTH	8	None	add
53	[BUG]  [BUGGY]  _reportUnsupportedOperation();  if(_expLength  >  MAX_LENGTH)  {  _reportUnsupportedOperation();  }  else  if((  _numTypesValid  &  NR_DOUBLE)!=  0)  {  reportOverflowLong();  }  [CE]  cannot  find  symbol  MAX_LENGTH  [FE]        UnsupportedOperationException    [CONTEXT]    {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;  }  else  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {    [BUGGY]  _reportUnsupportedOperation();  if(_expLength  >  MAX_LENGTH)  {  _reportUnsupportedOperation();  }  else  if((  _numTypesValid  &  NR_DOUBLE)!=  0)  {  reportOverflowLong();  }  [BUGGY]    }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  _numberLong  =  (long)  _numberDouble;  }  else  if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  if  (BD_MIN_LONG.compareTo(_numberBigDecimal)  >  0  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	921	921	8	replace	_reportUnsupportedOperation();    if(_expLength  >  MAX_LENGTH)  {  _reportUnsupportedOperation();  }  else  if((  _numTypesValid  &  NR_DOUBLE)!=  0)  {  reportOverflowLong();  }	  	non-compiled	[CE]  cannot  find  symbol  MAX_LENGTH	8	None	add
54	[BUG]  [BUGGY]  _reportUnsupportedOperation();  if(_expLength  >  MAX_LENGTH)  {  _reportUnsupportedOperation();  }  else  if((  _numTypesValid  &  NR_INT)!=  0)  {  reportOverflowLong();  }  [CE]  cannot  find  symbol  MAX_LENGTH  [FE]          UnsupportedOperationException    [CONTEXT]    {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;  }  else  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {    [BUGGY]  _reportUnsupportedOperation();  if(_expLength  >  MAX_LENGTH)  {  _reportUnsupportedOperation();  }  else  if((  _numTypesValid  &  NR_INT)!=  0)  {  reportOverflowLong();  }  [BUGGY]    }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  _numberLong  =  (long)  _numberDouble;  }  else  if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  if  (BD_MIN_LONG.compareTo(_numberBigDecimal)  >  0  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	921	921	8	replace	_reportUnsupportedOperation();    if(_expLength  >  MAX_LENGTH)  {  _reportUnsupportedOperation();  }  else  if((  _numTypesValid  &  NR_INT)!=  0)  {  reportOverflowLong();  }	  	non-compiled	[CE]  cannot  find  symbol  MAX_LENGTH	8	None	add
55	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;  }  else  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {    [BUGGY]      if(BI_MAX_LONG.compareTo(_numberBigInt)>  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  return;  }  [BUGGY]    }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  _numberLong  =  (long)  _numberDouble;  }  else  if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  if  (BD_MIN_LONG.compareTo(_numberBigDecimal)  >  0  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	921	921	8	add	        if(BI_MAX_LONG.compareTo(_numberBigInt)>  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  return;  }	  	compilable	  [FE]  AssertionFailedError  	5	8	add
56	[BUG]  [BUGGY]      if(BI_MAX_LONG.compareTo(_numberBigInt)>  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  return;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;  }  else  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {    [BUGGY]      if(BI_MAX_LONG.compareTo(_numberBigInt)>  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  return;  }  [BUGGY]    }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  _numberLong  =  (long)  _numberDouble;  }  else  if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  if  (BD_MIN_LONG.compareTo(_numberBigDecimal)  >  0  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	921	921	8	replace	        if(BI_MAX_LONG.compareTo(_numberBigInt)>  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  return;  }	  	compilable	  [FE]  AssertionFailedError  	5	8	add
57	[BUG]  [BUGGY]  _reportOverflowInt();  [CE]  cannot  find  symbol  [FE]    JsonParseException    [CONTEXT]    {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;  }  else  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {    [BUGGY]  _reportOverflowInt();  [BUGGY]    }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  _numberLong  =  (long)  _numberDouble;  }  else  if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  if  (BD_MIN_LONG.compareTo(_numberBigDecimal)  >  0  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	921	921	8	replace	_reportOverflowInt();	  reportOverflowInt();    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
58	[BUG]  [BUGGY]  reportOverflowBigInt();  [CE]  cannot  find  symbol  [FE]      JsonParseException    [CONTEXT]    {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;  }  else  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {    [BUGGY]  reportOverflowBigInt();  [BUGGY]    }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  _numberLong  =  (long)  _numberDouble;  }  else  if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  if  (BD_MIN_LONG.compareTo(_numberBigDecimal)  >  0  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	921	921	8	replace	reportOverflowBigInt();	  reportOverflowInt();    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
59	[BUG]  [BUGGY]      if(BD_MIN_LONG.compareTo(_numberBigInt)>  0  ||  BD_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  [CE]  method  compareTo  in  class  BigDecimal  cannot  be  applied  to  given  types;  [FE]    AssertionFailedError    [CONTEXT]    {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;  }  else  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {    [BUGGY]      if(BD_MIN_LONG.compareTo(_numberBigInt)>  0  ||  BD_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  [BUGGY]    }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  _numberLong  =  (long)  _numberDouble;  }  else  if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  if  (BD_MIN_LONG.compareTo(_numberBigDecimal)  >  0  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	921	921	8	replace	        if(BD_MIN_LONG.compareTo(_numberBigInt)>  0  ||  BD_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }	  	non-compiled	[CE]  method  compareTo  in  class  BigDecimal  cannot  be  applied  to  given  types;	5	None	add
60	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]      AssertionFailedError    [CONTEXT]    {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;  }  else  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {    [BUGGY]      if(BI_MAX_LONG.compareTo(_numberBigInt)>  0  ||  BI_MIN_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  [BUGGY]    }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  _numberLong  =  (long)  _numberDouble;  }  else  if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  if  (BD_MIN_LONG.compareTo(_numberBigDecimal)  >  0  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	921	921	8	add	        if(BI_MAX_LONG.compareTo(_numberBigInt)>  0  ||  BI_MIN_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }	  	compilable	  [FE]  JsonParseException  	5	8	add
61	[BUG]  [BUGGY]      if(BI_MAX_LONG.compareTo(_numberBigInt)>  0  ||  BI_MIN_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  [FE]  JsonParseException  [FE]      AssertionFailedError    [CONTEXT]    {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;  }  else  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {    [BUGGY]      if(BI_MAX_LONG.compareTo(_numberBigInt)>  0  ||  BI_MIN_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  [BUGGY]    }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  _numberLong  =  (long)  _numberDouble;  }  else  if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  if  (BD_MIN_LONG.compareTo(_numberBigDecimal)  >  0  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	921	921	8	replace	        if(BI_MAX_LONG.compareTo(_numberBigInt)>  0  ||  BI_MIN_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }	  	compilable	  [FE]  JsonParseException  	5	8	add
62	[BUG]  [BUGGY]  reportOverflowInt();  if(BD_MIN_LONG.compareTo(_numberBigInt)>  0  ||  BD_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowInt();  }  [CE]  method  compareTo  in  class  BigDecimal  cannot  be  applied  to  given  types;  [FE]    JsonParseException    [CONTEXT]    {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;  }  else  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {    [BUGGY]  reportOverflowInt();  if(BD_MIN_LONG.compareTo(_numberBigInt)>  0  ||  BD_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowInt();  }  [BUGGY]    }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  _numberLong  =  (long)  _numberDouble;  }  else  if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  if  (BD_MIN_LONG.compareTo(_numberBigDecimal)  >  0  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	921	921	8	replace	reportOverflowInt();    if(BD_MIN_LONG.compareTo(_numberBigInt)>  0  ||  BD_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowInt();  }	  	non-compiled	[CE]  method  compareTo  in  class  BigDecimal  cannot  be  applied  to  given  types;	3	None	add
63	[BUG]  [BUGGY]  reportOverflowInt();  if(BI_maxLONG.compareTo(_numberBigInt)>  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowInt();  }  [CE]  cannot  find  symbol  BI_maxLONG  [FE]      JsonParseException    [CONTEXT]    {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;  }  else  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {    [BUGGY]  reportOverflowInt();  if(BI_maxLONG.compareTo(_numberBigInt)>  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowInt();  }  [BUGGY]    }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  _numberLong  =  (long)  _numberDouble;  }  else  if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  if  (BD_MIN_LONG.compareTo(_numberBigDecimal)  >  0  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	921	921	8	replace	reportOverflowInt();    if(BI_maxLONG.compareTo(_numberBigInt)>  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowInt();  }	  	non-compiled	[CE]  cannot  find  symbol  BI_maxLONG	3	None	add
64	[BUG]  [BUGGY]  reportOverflowInt();  if(BD_MIN_LONG.compareTo(_numberBigInt)>  0  ||  BD_MAX_LONG.compareTo(_numberBigInt)  <  =  0)  {  reportOverflowInt();  }  [CE]  illegal  start  of  expression  [FE]        JsonParseException    [CONTEXT]    {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;  }  else  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {    [BUGGY]  reportOverflowInt();  if(BD_MIN_LONG.compareTo(_numberBigInt)>  0  ||  BD_MAX_LONG.compareTo(_numberBigInt)  <  =  0)  {  reportOverflowInt();  }  [BUGGY]    }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  _numberLong  =  (long)  _numberDouble;  }  else  if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  if  (BD_MIN_LONG.compareTo(_numberBigDecimal)  >  0  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	921	921	8	replace	reportOverflowInt();    if(BD_MIN_LONG.compareTo(_numberBigInt)>  0  ||  BD_MAX_LONG.compareTo(_numberBigInt)  <  =  0)  {  reportOverflowInt();  }	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
65	[BUG]  [BUGGY]  reportOverflowLong(DateTimeUtils.currentTimeMillis());  [CE]  cannot  find  symbol  DateTimeUtils  [FE]          JsonParseException    [CONTEXT]    {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;  }  else  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {    [BUGGY]  reportOverflowLong(DateTimeUtils.currentTimeMillis());  [BUGGY]    }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  _numberLong  =  (long)  _numberDouble;  }  else  if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  if  (BD_MIN_LONG.compareTo(_numberBigDecimal)  >  0  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	921	921	8	replace	reportOverflowLong(DateTimeUtils.currentTimeMillis());	  reportOverflowLong(MAX_LONG);    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	2	None	replace
66	[BUG]  [BUGGY]  reportOverflowLong(Math.max(10,  MAX_LONG));  [CE]  cannot  find  symbol  MAX_LONG  [FE]            JsonParseException    [CONTEXT]    {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;  }  else  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {    [BUGGY]  reportOverflowLong(Math.max(10,  MAX_LONG));  [BUGGY]    }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  _numberLong  =  (long)  _numberDouble;  }  else  if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  if  (BD_MIN_LONG.compareTo(_numberBigDecimal)  >  0  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	921	921	8	replace	reportOverflowLong(Math.max(10,  MAX_LONG));	  reportOverflowLong(MAX_LONG);    	non-compiled	[CE]  cannot  find  symbol  MAX_LONG	2	None	replace
67	[BUG]  [BUGGY]  reportOverflowFloat();  [CE]  cannot  find  symbol  [FE]    JsonParseException    [CONTEXT]    {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;  }  else  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {    [BUGGY]  reportOverflowFloat();  [BUGGY]    }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  _numberLong  =  (long)  _numberDouble;  }  else  if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  if  (BD_MIN_LONG.compareTo(_numberBigDecimal)  >  0  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	921	921	8	replace	reportOverflowFloat();	  reportOverflowInt();    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
68	[BUG]  [BUGGY]  Reporter.error( "Unsupported  Operation  method: "  +  _numTypesValid);  [CE]  cannot  find  symbol  Reporter  [FE]    UnsupportedOperationException    [CONTEXT]    {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;  }  else  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {    [BUGGY]  Reporter.error( "Unsupported  Operation  method: "  +  _numTypesValid);  [BUGGY]    }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  _numberLong  =  (long)  _numberDouble;  }  else  if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  if  (BD_MIN_LONG.compareTo(_numberBigDecimal)  >  0  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	921	921	8	replace	Reporter.error( "Unsupported  Operation  method: "  +  _numTypesValid);	  _reportUnsupportedOperation();    	non-compiled	[CE]  cannot  find  symbol  Reporter	9	None	replace
69	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]    {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;  }  else  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {    [BUGGY]  _reportUnsupportedOperation();  _throwInternal();  [BUGGY]    }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  _numberLong  =  (long)  _numberDouble;  }  else  if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  if  (BD_MIN_LONG.compareTo(_numberBigDecimal)  >  0  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	921	921	8	add	_reportUnsupportedOperation();    _throwInternal();	  	compilable	  [FE]  UnsupportedOperationException  	8	8	add
70	[BUG]  [BUGGY]  _reportUnsupportedOperation();  _throwInternal();  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]    {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;  }  else  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {    [BUGGY]  _reportUnsupportedOperation();  _throwInternal();  [BUGGY]    }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  _numberLong  =  (long)  _numberDouble;  }  else  if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  if  (BD_MIN_LONG.compareTo(_numberBigDecimal)  >  0  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	921	921	8	replace	_reportUnsupportedOperation();    _throwInternal();	  	compilable	  [FE]  UnsupportedOperationException  	8	8	add
71	[BUG]  [BUGGY]  _reportUnsupportedOperation();  _throwUnsupportedOperation();  [CE]  cannot  find  symbol  [FE]      UnsupportedOperationException    [CONTEXT]    {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;  }  else  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {    [BUGGY]  _reportUnsupportedOperation();  _throwUnsupportedOperation();  [BUGGY]    }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  _numberLong  =  (long)  _numberDouble;  }  else  if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  if  (BD_MIN_LONG.compareTo(_numberBigDecimal)  >  0  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	921	921	8	replace	_reportUnsupportedOperation();    _throwUnsupportedOperation();	  	non-compiled	[CE]  cannot  find  symbol	8	None	add
72	[BUG]  [BUGGY]  _reportUnsupportedOperation();  _throwUnquotedSpace();  [CE]  method  _throwUnquotedSpace  in  class  ParserBase  cannot  be  applied  to  given  types;  [FE]        UnsupportedOperationException    [CONTEXT]    {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;  }  else  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {    [BUGGY]  _reportUnsupportedOperation();  _throwUnquotedSpace();  [BUGGY]    }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  _numberLong  =  (long)  _numberDouble;  }  else  if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  if  (BD_MIN_LONG.compareTo(_numberBigDecimal)  >  0  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	921	921	8	replace	_reportUnsupportedOperation();    _throwUnquotedSpace();	  	non-compiled	[CE]  method  _throwUnquotedSpace  in  class  ParserBase  cannot  be  applied  to  given  types;	8	None	add
73	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]          UnsupportedOperationException    [CONTEXT]    {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;  }  else  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {    [BUGGY]  _reportUnsupportedOperation();  reportOverflowLong();  [BUGGY]    }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  _numberLong  =  (long)  _numberDouble;  }  else  if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  if  (BD_MIN_LONG.compareTo(_numberBigDecimal)  >  0  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	921	921	8	add	_reportUnsupportedOperation();    reportOverflowLong();	  	compilable	  [FE]  UnsupportedOperationException  	8	8	add
74	[BUG]  [BUGGY]  _reportUnsupportedOperation();  reportOverflowLong();  [FE]  UnsupportedOperationException  [FE]          UnsupportedOperationException    [CONTEXT]    {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;  }  else  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {    [BUGGY]  _reportUnsupportedOperation();  reportOverflowLong();  [BUGGY]    }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  _numberLong  =  (long)  _numberDouble;  }  else  if  ((_numTypesValid  &  NR_BIGDECIMAL)  !=  0)  {  if  (BD_MIN_LONG.compareTo(_numberBigDecimal)  >  0  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	921	921	8	replace	_reportUnsupportedOperation();    reportOverflowLong();	  	compilable	  [FE]  UnsupportedOperationException  	8	8	add
