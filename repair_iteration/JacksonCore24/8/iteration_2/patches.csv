bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  _reportIntegral(NR_INT,  0,  expType);  [CE]  cannot  find  symbol  [FE]                JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportIntegral(NR_INT,  0,  expType);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportIntegral(NR_INT,  0,  expType);	  _reportIntegral(NR_INT,    0);    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
2	[BUG]  [BUGGY]  _reportIntegral(NR_INT,  0,  expType.intValue());  [CE]  int  cannot  be  dereferenced  [FE]                  JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportIntegral(NR_INT,  0,  expType.intValue());  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportIntegral(NR_INT,  0,  expType.intValue());	  _reportIntegral(NR_INT,    0);    	non-compiled	[CE]  int  cannot  be  dereferenced	43	None	replace
3	[BUG]  [BUGGY]  reportIntegral(NR_INT,  0);  [CE]  cannot  find  symbol  [FE]                    JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  reportIntegral(NR_INT,  0);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	reportIntegral(NR_INT,  0);	  _reportIntegral(NR_INT,    0);    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
4	[BUG]  [BUGGY]  _parsingContext  =  ctxt.getParent();  [CE]  cannot  find  symbol  ctxt  [FE]          JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _parsingContext  =  ctxt.getParent();  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_parsingContext  =  ctxt.getParent();	  _reportError(       "Missing    NR_INT    value       ");    JsonReadContext    ctxt    =    getCurrentContext();    _parsingContext    =    ctxt.getParent();    	non-compiled	[CE]  cannot  find  symbol  ctxt	99	None	replace
5	[BUG]  [BUGGY]  JsonReadContext  ctxt  =  getCurrentContext();  _parsingContext  =  ctxt.getParent();  [CE]  cannot  find  symbol  [FE]            JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  JsonReadContext  ctxt  =  getCurrentContext();  _parsingContext  =  ctxt.getParent();  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	JsonReadContext  ctxt  =  getCurrentContext();  _parsingContext  =  ctxt.getParent();	  _reportError(       "Missing    NR_INT    value       ");    JsonReadContext    ctxt    =    getCurrentContext();    _parsingContext    =    ctxt.getParent();    	non-compiled	[CE]  cannot  find  symbol	99	None	replace
6	[BUG]  [BUGGY]  _parseSlowInt(numStr,  expType);  [CE]  method  _parseSlowInt  in  class  ParserBase  cannot  be  applied  to  given  types;  [FE]        JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _parseSlowInt(numStr,  expType);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_parseSlowInt(numStr,  expType);	  _parseSlowInt();    	non-compiled	[CE]  method  _parseSlowInt  in  class  ParserBase  cannot  be  applied  to  given  types;	85	None	replace
7	[BUG]  [BUGGY]  _parseSlowInt(numStr);  [CE]  method  _parseSlowInt  in  class  ParserBase  cannot  be  applied  to  given  types;  [FE]          JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _parseSlowInt(numStr);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_parseSlowInt(numStr);	  _parseSlowInt();    	non-compiled	[CE]  method  _parseSlowInt  in  class  ParserBase  cannot  be  applied  to  given  types;	85	None	replace
8	[BUG]  [BUGGY]  _reportIntegral(NR_INT,  NR_INTEGER);  [CE]  cannot  find  symbol  NR_INTEGER  [FE]              JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportIntegral(NR_INT,  NR_INTEGER);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportIntegral(NR_INT,  NR_INTEGER);	  _reportIntegral(NR_INT,    _numberLong);    	non-compiled	[CE]  cannot  find  symbol  NR_INTEGER	69	None	replace
9	[BUG]  [BUGGY]  _reportIntegral(NR_INT,  NR_BIGINT);  [CE]  cannot  find  symbol  [FE]                JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportIntegral(NR_INT,  NR_BIGINT);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportIntegral(NR_INT,  NR_BIGINT);	  _reportIntegral(NR_INT,    _numberLong);    	non-compiled	[CE]  cannot  find  symbol	69	None	replace
10	[BUG]  [BUGGY]  _reportIntegral(NR_INT,  NR_MIN_VALUE);  [CE]  cannot  find  symbol  NR_MIN_VALUE  [FE]                  JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportIntegral(NR_INT,  NR_MIN_VALUE);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportIntegral(NR_INT,  NR_MIN_VALUE);	  _reportIntegral(NR_INT,    _numberLong);    	non-compiled	[CE]  cannot  find  symbol  NR_MIN_VALUE	69	None	replace
11	[BUG]  [BUGGY]  _reportInvalid(NR_INT,  _numberLong);  [CE]  cannot  find  symbol  [FE]                    JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalid(NR_INT,  _numberLong);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportInvalid(NR_INT,  _numberLong);	  _reportIntegral(NR_INT,    _numberLong);    	non-compiled	[CE]  cannot  find  symbol	69	None	replace
12	[BUG]  [BUGGY]  ctxt  =  _parsingContext.createChildObjectContext(-1,  -1);  [CE]  cannot  find  symbol  ctxt  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  ctxt  =  _parsingContext.createChildObjectContext(-1,  -1);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	ctxt  =  _parsingContext.createChildObjectContext(-1,  -1);	  _reportUnsupportedOperation();    JsonReadContext    ctxt    =    _parsingContext.createChildObjectContext(-1,    -1);    	non-compiled	[CE]  cannot  find  symbol  ctxt	62	None	replace
13	[BUG]  [BUGGY]  ctxt  =  _parsingContext.createChildIntContext(-1,  -1);  [CE]  cannot  find  symbol  ctxt  [FE]      JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  ctxt  =  _parsingContext.createChildIntContext(-1,  -1);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	ctxt  =  _parsingContext.createChildIntContext(-1,  -1);	  _reportUnsupportedOperation();    JsonReadContext    ctxt    =    _parsingContext.createChildObjectContext(-1,    -1);    	non-compiled	[CE]  cannot  find  symbol  ctxt	62	None	replace
14	[BUG]  [BUGGY]  _reportUnsupportedOperation();  ctxt  =  _parsingContext.createChildObjectContext(-1,  -1);  [CE]  cannot  find  symbol  ctxt  [FE]        JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportUnsupportedOperation();  ctxt  =  _parsingContext.createChildObjectContext(-1,  -1);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportUnsupportedOperation();  ctxt  =  _parsingContext.createChildObjectContext(-1,  -1);	  _reportUnsupportedOperation();    JsonReadContext    ctxt    =    _parsingContext.createChildObjectContext(-1,    -1);    	non-compiled	[CE]  cannot  find  symbol  ctxt	62	None	replace
15	[BUG]  [BUGGY]  _numberNegative  =  NumberInput.parseLong(numStr);  [CE]  incompatible  types  [FE]          JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _numberNegative  =  NumberInput.parseLong(numStr);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_numberNegative  =  NumberInput.parseLong(numStr);	  _reportTooLongIntegral(NR_INT,    numStr);    _reportTooLongIntegral(NR_INT,    numStr);    }    	non-compiled	[CE]  incompatible  types	91	None	replace
16	[BUG]  [BUGGY]  ||(expType  ==  NR_LONG))  {  _reportTooLongIntegral(NR_INT,  numStr);  }  [CE]  illegal  start  of  expression  [FE]              JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  ||(expType  ==  NR_LONG))  {  _reportTooLongIntegral(NR_INT,  numStr);  }  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	||(expType  ==  NR_LONG))  {  _reportTooLongIntegral(NR_INT,  numStr);  }	  _reportTooLongIntegral(NR_INT,    numStr);    ||(expType    ==    NR_LONG))    {    _reportTooLongIntegral(NR_INT,    numStr);    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
17	[BUG]  [BUGGY]  ||(expType  ==  NR_LONG))  {  _reportIntegral(NR_INT,  numStr);  }  [CE]  illegal  start  of  expression  [FE]                JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  ||(expType  ==  NR_LONG))  {  _reportIntegral(NR_INT,  numStr);  }  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	||(expType  ==  NR_LONG))  {  _reportIntegral(NR_INT,  numStr);  }	  _reportTooLongIntegral(NR_INT,    numStr);    ||(expType    ==    NR_LONG))    {    _reportTooLongIntegral(NR_INT,    numStr);    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
18	[BUG]  [BUGGY]  ||(expType  ==  NR_LONG))  {  _reportError(NR_INT,  numStr);  }  [CE]  illegal  start  of  expression  [FE]                  JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  ||(expType  ==  NR_LONG))  {  _reportError(NR_INT,  numStr);  }  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	||(expType  ==  NR_LONG))  {  _reportError(NR_INT,  numStr);  }	  _reportTooLongIntegral(NR_INT,    numStr);    ||(expType    ==    NR_LONG))    {    _reportTooLongIntegral(NR_INT,    numStr);    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
19	[BUG]  [BUGGY]  _reportInvalidEOFInValue(buf,  offset,  _numberNegative,  numStr);  [CE]  no  suitable  method  found  for  _reportInvalidEOFInValue(char[],int,boolean,String)  [FE]                JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalidEOFInValue(buf,  offset,  _numberNegative,  numStr);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportInvalidEOFInValue(buf,  offset,  _numberNegative,  numStr);	  _reportInvalidEOFInValue(buf,    _numberNegative,    numStr);    	non-compiled	[CE]  no  suitable  method  found  for  _reportInvalidEOFInValue(char[],int,boolean,String)	18	None	replace
20	[BUG]  [BUGGY]  _reportInvalidEOFInValue(buf,  offset,  len,  _numberNegative,  numStr);  [CE]  no  suitable  method  found  for  _reportInvalidEOFInValue(char[],int,int,boolean,String)  [FE]                  JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalidEOFInValue(buf,  offset,  len,  _numberNegative,  numStr);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportInvalidEOFInValue(buf,  offset,  len,  _numberNegative,  numStr);	  _reportInvalidEOFInValue(buf,    _numberNegative,    numStr);    	non-compiled	[CE]  no  suitable  method  found  for  _reportInvalidEOFInValue(char[],int,int,boolean,String)	18	None	replace
21	[BUG]  [BUGGY]  _reportInvalidEOFInValue(numStr,  _numberNegative,  buffer);  [CE]  cannot  find  symbol  buffer  [FE]                    JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalidEOFInValue(numStr,  _numberNegative,  buffer);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportInvalidEOFInValue(numStr,  _numberNegative,  buffer);	  _reportInvalidEOFInValue(buf,    _numberNegative,    numStr);    	non-compiled	[CE]  cannot  find  symbol  buffer	18	None	replace
22	[BUG]  [BUGGY]  _numberBigInt  =  Long.parseLong(expType);  [CE]  no  suitable  method  found  for  parseLong(int)  [FE]        JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _numberBigInt  =  Long.parseLong(expType);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_numberBigInt  =  Long.parseLong(expType);	          _numberBigInt    =    Long.parseLong(numStr);    	non-compiled	[CE]  no  suitable  method  found  for  parseLong(int)	74	None	replace
23	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportError(   "Missing  NR_INT  value.   ");  _reportError( "Missing  NR_INT  value.   ");  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	add	_reportError(   "Missing    NR_INT    value.   ");    _reportError( "Missing  NR_INT  value.   ");	  	compilable	  [FE]  JsonParseException  	34	8	add
24	[BUG]  [BUGGY]  _reportError(   "Missing  NR_INT  value.   ");  _reportError( "Missing  NR_INT  value.   ");  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportError(   "Missing  NR_INT  value.   ");  _reportError( "Missing  NR_INT  value.   ");  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportError(   "Missing    NR_INT    value.   ");    _reportError( "Missing  NR_INT  value.   ");	  	compilable	  [FE]  JsonParseException  	34	8	add
25	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportError(   "Numeric  value(   "+numStr+   ")not  in  range  [   "+len+   "]   ");  _reportError( "Numeric  value(   "+numStr+   ")not  in  range  [   "+len+   "] ");  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	add	_reportError(   "Numeric    value(   "+numStr+   ")not    in    range    [   "+len+   "]   ");    _reportError( "Numeric  value(   "+numStr+   ")not  in  range  [   "+len+   "] ");	  	compilable	  [FE]  JsonParseException  	104	8	add
26	[BUG]  [BUGGY]  _reportError(   "Numeric  value(   "+numStr+   ")not  in  range  [   "+len+   "]   ");  _reportError( "Numeric  value(   "+numStr+   ")not  in  range  [   "+len+   "] ");  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportError(   "Numeric  value(   "+numStr+   ")not  in  range  [   "+len+   "]   ");  _reportError( "Numeric  value(   "+numStr+   ")not  in  range  [   "+len+   "] ");  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportError(   "Numeric    value(   "+numStr+   ")not    in    range    [   "+len+   "]   ");    _reportError( "Numeric  value(   "+numStr+   ")not  in  range  [   "+len+   "] ");	  	compilable	  [FE]  JsonParseException  	104	8	add
27	[BUG]  [BUGGY]  _numberInt  =  Long.parseLong(expType);  [CE]  no  suitable  method  found  for  parseLong(int)  [FE]        JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _numberInt  =  Long.parseLong(expType);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_numberInt  =  Long.parseLong(expType);	          _numberInt    =    Long.parseLong(numStr);    	non-compiled	[CE]  no  suitable  method  found  for  parseLong(int)	29	None	replace
28	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalidEOFInValue();  _reportInvalidEOFInValue();  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	add	_reportInvalidEOFInValue();    _reportInvalidEOFInValue();	  	compilable	  [FE]  JsonParseException  	102	8	add
29	[BUG]  [BUGGY]  _reportInvalidEOFInValue();  _reportInvalidEOFInValue();  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalidEOFInValue();  _reportInvalidEOFInValue();  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportInvalidEOFInValue();    _reportInvalidEOFInValue();	  	compilable	  [FE]  JsonParseException  	102	8	add
30	[BUG]  [BUGGY]  _reportInvalidEOFInValue();  _reportInvalidEOFInValue();  }  else  if((expType  ==  NR_INT)||(expType  ==  NR_LONG))  {  _numberInt  =  Long.parseLong(numStr);  _numTypesValid  =  [CE]  possible  loss  of  precision  [FE]      JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalidEOFInValue();  _reportInvalidEOFInValue();  }  else  if((expType  ==  NR_INT)||(expType  ==  NR_LONG))  {  _numberInt  =  Long.parseLong(numStr);  _numTypesValid  =  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportInvalidEOFInValue();    _reportInvalidEOFInValue();  }  else  if((expType  ==  NR_INT)||(expType  ==  NR_LONG))  {  _numberInt  =  Long.parseLong(numStr);  _numTypesValid  =	  	non-compiled	[CE]  possible  loss  of  precision	102	None	add
31	[BUG]  [BUGGY]  _reportInvalidEOFInValue();  _reportInvalidEOFInValue();  }  else  if((expType  ==  NR_INT)||(expType  ==  NR_LONG))  {  _numberInt  =  Long.parseLong(numStr);  _numTypesVal  [CE]  ';'  expected  [FE]        JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalidEOFInValue();  _reportInvalidEOFInValue();  }  else  if((expType  ==  NR_INT)||(expType  ==  NR_LONG))  {  _numberInt  =  Long.parseLong(numStr);  _numTypesVal  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportInvalidEOFInValue();    _reportInvalidEOFInValue();  }  else  if((expType  ==  NR_INT)||(expType  ==  NR_LONG))  {  _numberInt  =  Long.parseLong(numStr);  _numTypesVal	  	non-compiled	[CE]  ';'  expected	102	None	add
32	[BUG]  [BUGGY]  _reportInvalidEOFInValue();  _reportInvalidEOFInValue();  }  else  if((expType  ==  NR_INT)||(expType  ==  NR_LONG))  {  _numberInt  =  Long.parseLong(numStr);  _num  [CE]  ';'  expected  [FE]          JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalidEOFInValue();  _reportInvalidEOFInValue();  }  else  if((expType  ==  NR_INT)||(expType  ==  NR_LONG))  {  _numberInt  =  Long.parseLong(numStr);  _num  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportInvalidEOFInValue();    _reportInvalidEOFInValue();  }  else  if((expType  ==  NR_INT)||(expType  ==  NR_LONG))  {  _numberInt  =  Long.parseLong(numStr);  _num	  	non-compiled	[CE]  ';'  expected	102	None	add
33	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportError( "Missing  NR_INT  value.n ");  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	add	_reportError( "Missing  NR_INT  value.n ");	  _reportError(   "Missing    NR_INT    value.   ");    	compilable	  [FE]  JsonParseException  	35	8	replace
34	[BUG]  [BUGGY]  _reportError( "Missing  NR_INT  value.n ");  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportError( "Missing  NR_INT  value.n ");  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportError( "Missing  NR_INT  value.n ");	  _reportError(   "Missing    NR_INT    value.   ");    	compilable	  [FE]  JsonParseException  	35	8	replace
35	[BUG]  [BUGGY]  _parseSlowInt(buf,  offset,  len,  expType);  [CE]  method  _parseSlowInt  in  class  ParserBase  cannot  be  applied  to  given  types;  [FE]              JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _parseSlowInt(buf,  offset,  len,  expType);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_parseSlowInt(buf,  offset,  len,  expType);	          _parseSlowInt(buf,    offset,    len);    	non-compiled	[CE]  method  _parseSlowInt  in  class  ParserBase  cannot  be  applied  to  given  types;	32	None	replace
36	[BUG]  [BUGGY]  _parseSlowInt(numStr,  buf,  offset,  len);  [CE]  method  _parseSlowInt  in  class  ParserBase  cannot  be  applied  to  given  types;  [FE]                JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _parseSlowInt(numStr,  buf,  offset,  len);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_parseSlowInt(numStr,  buf,  offset,  len);	          _parseSlowInt(buf,    offset,    len);    	non-compiled	[CE]  method  _parseSlowInt  in  class  ParserBase  cannot  be  applied  to  given  types;	32	None	replace
37	[BUG]  [BUGGY]  _parseSlowInt(buf,  off,  len,  expType);  [CE]  cannot  find  symbol  off  [FE]                  JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _parseSlowInt(buf,  off,  len,  expType);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_parseSlowInt(buf,  off,  len,  expType);	          _parseSlowInt(buf,    offset,    len);    	non-compiled	[CE]  cannot  find  symbol  off	32	None	replace
38	[BUG]  [BUGGY]  _parsingContext  =  JsonReadContext.createRootContext(buf,  offset,  len);  [CE]  no  suitable  method  found  for  createRootContext(char[],int,int)  [FE]          JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _parsingContext  =  JsonReadContext.createRootContext(buf,  offset,  len);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_parsingContext  =  JsonReadContext.createRootContext(buf,  offset,  len);	          _parsingContext    =    JsonReadContext.createRootContext();    	non-compiled	[CE]  no  suitable  method  found  for  createRootContext(char[],int,int)	75	None	replace
39	[BUG]  [BUGGY]  _parsingContext  =  JsonReadContext.createRootContext(buf);  [CE]  no  suitable  method  found  for  createRootContext(char[])  [FE]            JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _parsingContext  =  JsonReadContext.createRootContext(buf);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_parsingContext  =  JsonReadContext.createRootContext(buf);	          _parsingContext    =    JsonReadContext.createRootContext();    	non-compiled	[CE]  no  suitable  method  found  for  createRootContext(char[])	75	None	replace
40	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(   "   ");  throw  new  IllegalArgumentException( "   ");  [CE]  unreachable  statement  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  throw  new  IllegalArgumentException(   "   ");  throw  new  IllegalArgumentException( "   ");  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	throw    new    IllegalArgumentException(   "   ");    throw  new  IllegalArgumentException( "   ");	  	non-compiled	[CE]  unreachable  statement	19	None	add
41	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(   "   ");  Throwables.throw  new  IllegalArgumentException( "   ");  [CE]  <identifier>  expected  [FE]      JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  throw  new  IllegalArgumentException(   "   ");  Throwables.throw  new  IllegalArgumentException( "   ");  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	throw    new    IllegalArgumentException(   "   ");    Throwables.throw  new  IllegalArgumentException( "   ");	  	non-compiled	[CE]  <identifier>  expected	19	None	add
42	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(   "   ");  Throw  new  IllegalArgumentException( "   ");  [CE]  not  a  statement  [FE]        JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  throw  new  IllegalArgumentException(   "   ");  Throw  new  IllegalArgumentException( "   ");  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	throw    new    IllegalArgumentException(   "   ");    Throw  new  IllegalArgumentException( "   ");	  	non-compiled	[CE]  not  a  statement	19	None	add
43	[BUG]  [BUGGY]  _reportInvalidLong(len,  NR_INT);  [CE]  cannot  find  symbol  [FE]              JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalidLong(len,  NR_INT);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportInvalidLong(len,  NR_INT);	  _reportInvalidLong(numStr,    NR_INT);    	non-compiled	[CE]  cannot  find  symbol	45	None	replace
44	[BUG]  [BUGGY]  _reportInvalidLong(numStr,  NR_INT,  expType);  [CE]  cannot  find  symbol  [FE]                JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalidLong(numStr,  NR_INT,  expType);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportInvalidLong(numStr,  NR_INT,  expType);	  _reportInvalidLong(numStr,    NR_INT);    	non-compiled	[CE]  cannot  find  symbol	45	None	replace
45	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ");  [CE]  <identifier>  expected  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ");  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	Throwables.throw  new  IllegalArgumentException( " ");	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	20	None	replace
46	[BUG]  [BUGGY]  throw  new  JsonParseException( " ");  [CE]  no  suitable  constructor  found  for  JsonParseException(String)  [FE]      JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  throw  new  JsonParseException( " ");  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	throw  new  JsonParseException( " ");	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  no  suitable  constructor  found  for  JsonParseException(String)	20	None	replace
47	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ".equals(numStr));  [CE]  no  suitable  constructor  found  for  IllegalArgumentException(boolean)  [FE]        JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  throw  new  IllegalArgumentException( " ".equals(numStr));  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	throw  new  IllegalArgumentException( " ".equals(numStr));	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalArgumentException(boolean)	20	None	replace
48	[BUG]  [BUGGY]  _reportInvalidLong(buf,  offset,  expType);  [CE]  cannot  find  symbol  [FE]                JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalidLong(buf,  offset,  expType);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportInvalidLong(buf,  offset,  expType);	  _reportInvalidLong(buf,    _numberInputRow,    expType);    	non-compiled	[CE]  cannot  find  symbol	46	None	replace
49	[BUG]  [BUGGY]  _reportInvalidLong(numStr,  _numberInputRow,  expType);  [CE]  cannot  find  symbol  _numberInputRow  [FE]                  JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalidLong(numStr,  _numberInputRow,  expType);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportInvalidLong(numStr,  _numberInputRow,  expType);	  _reportInvalidLong(buf,    _numberInputRow,    expType);    	non-compiled	[CE]  cannot  find  symbol  _numberInputRow	46	None	replace
50	[BUG]  [BUGGY]  _reportInvalidLong(buf,  offset,  len);  [CE]  cannot  find  symbol  [FE]                    JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalidLong(buf,  offset,  len);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportInvalidLong(buf,  offset,  len);	  _reportInvalidLong(buf,    _numberInputRow,    expType);    	non-compiled	[CE]  cannot  find  symbol	46	None	replace
51	[BUG]  [BUGGY]  _reportInvalid(NR_INT,  _numberNegative);  [CE]  cannot  find  symbol  [FE]            JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalid(NR_INT,  _numberNegative);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportInvalid(NR_INT,  _numberNegative);	  _reportIntegral(NR_INT,    _numberNegative);    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
52	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportError(     "Missing    NR_INT    value     ");    _reportError(   "Missing  NR_INT  value     ");  _reportError( "Missing  NR_INT  value   ");  _reportError( "Missing  NR_INT  value   ");  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	add	_reportError(       "Missing        NR_INT        value       ");        _reportError(   "Missing    NR_INT    value       ");    _reportError( "Missing  NR_INT  value   ");  _reportError( "Missing  NR_INT  value   ");	  	compilable	  [FE]  JsonParseException  	14	8	add
53	[BUG]  [BUGGY]  _reportError(     "Missing    NR_INT    value     ");    _reportError(   "Missing  NR_INT  value     ");  _reportError( "Missing  NR_INT  value   ");  _reportError( "Missing  NR_INT  value   ");  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportError(     "Missing    NR_INT    value     ");    _reportError(   "Missing  NR_INT  value     ");  _reportError( "Missing  NR_INT  value   ");  _reportError( "Missing  NR_INT  value   ");  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportError(       "Missing        NR_INT        value       ");        _reportError(   "Missing    NR_INT    value       ");    _reportError( "Missing  NR_INT  value   ");  _reportError( "Missing  NR_INT  value   ");	  	compilable	  [FE]  JsonParseException  	14	8	add
54	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportUnsupportedOperation();    _reportUnsupportedOperation();  _reportUnsupportedOperation();  _reportUnsupportedOperation();  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	add	_reportUnsupportedOperation();        _reportUnsupportedOperation();    _reportUnsupportedOperation();  _reportUnsupportedOperation();	  	compilable	  [FE]  JsonParseException  	23	8	add
55	[BUG]  [BUGGY]  _reportUnsupportedOperation();    _reportUnsupportedOperation();  _reportUnsupportedOperation();  _reportUnsupportedOperation();  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportUnsupportedOperation();    _reportUnsupportedOperation();  _reportUnsupportedOperation();  _reportUnsupportedOperation();  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportUnsupportedOperation();        _reportUnsupportedOperation();    _reportUnsupportedOperation();  _reportUnsupportedOperation();	  	compilable	  [FE]  JsonParseException  	23	8	add
56	[BUG]  [BUGGY]  _reportUnsupportedOperation();    _reportUnsupportedOperation();  ||(expType  ==  NR_INT)&&  expType.equals(NR_LONG))  {  _numberInt  =  Long.parseLong(numStr);  _reportUnsupportedOperation();  [CE]  illegal  start  of  expression  [FE]      JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportUnsupportedOperation();    _reportUnsupportedOperation();  ||(expType  ==  NR_INT)&&  expType.equals(NR_LONG))  {  _numberInt  =  Long.parseLong(numStr);  _reportUnsupportedOperation();  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportUnsupportedOperation();        _reportUnsupportedOperation();    ||(expType  ==  NR_INT)&&  expType.equals(NR_LONG))  {  _numberInt  =  Long.parseLong(numStr);  _reportUnsupportedOperation();	  	non-compiled	[CE]  illegal  start  of  expression	23	None	add
57	[BUG]  [BUGGY]  _reportUnsupportedOperation();    _reportUnsupportedOperation();  ||(expType  ==  NR_INT)&&  expType.equals(NR_BIGINT))  {  _numberInt  =  Long.parseLong(numStr);  _reportUnsupportedOperation();  [CE]  illegal  start  of  expression  [FE]        JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportUnsupportedOperation();    _reportUnsupportedOperation();  ||(expType  ==  NR_INT)&&  expType.equals(NR_BIGINT))  {  _numberInt  =  Long.parseLong(numStr);  _reportUnsupportedOperation();  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportUnsupportedOperation();        _reportUnsupportedOperation();    ||(expType  ==  NR_INT)&&  expType.equals(NR_BIGINT))  {  _numberInt  =  Long.parseLong(numStr);  _reportUnsupportedOperation();	  	non-compiled	[CE]  illegal  start  of  expression	23	None	add
58	[BUG]  [BUGGY]  _reportUnsupportedOperation();    _reportUnsupportedOperation();  ||(expType  ==  NR_INT)&&  expType!=  NR_LONG)  {  _numberInt  =  Long.parseLong(numStr);  _reportUnsupportedOperation();  [CE]  illegal  start  of  expression  [FE]          JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportUnsupportedOperation();    _reportUnsupportedOperation();  ||(expType  ==  NR_INT)&&  expType!=  NR_LONG)  {  _numberInt  =  Long.parseLong(numStr);  _reportUnsupportedOperation();  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportUnsupportedOperation();        _reportUnsupportedOperation();    ||(expType  ==  NR_INT)&&  expType!=  NR_LONG)  {  _numberInt  =  Long.parseLong(numStr);  _reportUnsupportedOperation();	  	non-compiled	[CE]  illegal  start  of  expression	23	None	add
59	[BUG]  [BUGGY]  _numberInt  =  Long.parseLong(  [CE]  illegal  start  of  expression  [FE]            JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _numberInt  =  Long.parseLong(  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_numberInt  =  Long.parseLong(	  _reportUnsupportedOperation();    ||(expType    ==    NR_INT)&&    expType.inLongRange(buf,    offset,    len,    _numberNegative))    {    _numberInt    =    Long.parseLong(    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
60	[BUG]  [BUGGY]  ||(expType  ==  NR_INT)&&  expType.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberInt  =  Long.parseLong(  [CE]  illegal  start  of  expression  [FE]              JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  ||(expType  ==  NR_INT)&&  expType.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberInt  =  Long.parseLong(  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	||(expType  ==  NR_INT)&&  expType.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberInt  =  Long.parseLong(	  _reportUnsupportedOperation();    ||(expType    ==    NR_INT)&&    expType.inLongRange(buf,    offset,    len,    _numberNegative))    {    _numberInt    =    Long.parseLong(    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
61	[BUG]  [BUGGY]  ||(expType  ==  NR_INT)&&  expType.inLongRange(numStr,  offset,  len,  _numberNegative))  {  _numberInt  =  Long.parseLong(  [CE]  illegal  start  of  expression  [FE]                JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  ||(expType  ==  NR_INT)&&  expType.inLongRange(numStr,  offset,  len,  _numberNegative))  {  _numberInt  =  Long.parseLong(  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	||(expType  ==  NR_INT)&&  expType.inLongRange(numStr,  offset,  len,  _numberNegative))  {  _numberInt  =  Long.parseLong(	  _reportUnsupportedOperation();    ||(expType    ==    NR_INT)&&    expType.inLongRange(buf,    offset,    len,    _numberNegative))    {    _numberInt    =    Long.parseLong(    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
62	[BUG]  [BUGGY]  _reportInvalidEOFInValue(buf,  offset,  numStr,  NR_INT);  [CE]  no  suitable  method  found  for  _reportInvalidEOFInValue(char[],int,String,int)  [FE]            JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalidEOFInValue(buf,  offset,  numStr,  NR_INT);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportInvalidEOFInValue(buf,  offset,  numStr,  NR_INT);	  _reportInvalidEOFInValue(buf,    numStr,    NR_INT);    	non-compiled	[CE]  no  suitable  method  found  for  _reportInvalidEOFInValue(char[],int,String,int)	83	None	replace
63	[BUG]  [BUGGY]  _reportInvalidEOFInValue(buf,  offset,  len,  NR_INT);  [CE]  no  suitable  method  found  for  _reportInvalidEOFInValue(char[],int,int,int)  [FE]              JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalidEOFInValue(buf,  offset,  len,  NR_INT);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportInvalidEOFInValue(buf,  offset,  len,  NR_INT);	  _reportInvalidEOFInValue(buf,    numStr,    NR_INT);    	non-compiled	[CE]  no  suitable  method  found  for  _reportInvalidEOFInValue(char[],int,int,int)	83	None	replace
64	[BUG]  [BUGGY]  ctxt  =  _parsingContext.createChildObjectContext();  [CE]  cannot  find  symbol  ctxt  [FE]            JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  ctxt  =  _parsingContext.createChildObjectContext();  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	ctxt  =  _parsingContext.createChildObjectContext();	  _throwInternal();    JsonReadContext    ctxt    =    _parsingContext.createChildObjectContext();    	non-compiled	[CE]  cannot  find  symbol  ctxt	66	None	replace
65	[BUG]  [BUGGY]  if(_parsingContext.hasChildren())  {  _throwInternal();  JsonReadContext  ctxt  =  _parsingContext.createChildObjectContext();  }  [CE]  cannot  find  symbol  [FE]              JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  if(_parsingContext.hasChildren())  {  _throwInternal();  JsonReadContext  ctxt  =  _parsingContext.createChildObjectContext();  }  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	if(_parsingContext.hasChildren())  {  _throwInternal();  JsonReadContext  ctxt  =  _parsingContext.createChildObjectContext();  }	  _throwInternal();    JsonReadContext    ctxt    =    _parsingContext.createChildObjectContext();    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
66	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]        JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(-1,  -1);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	add	_parsingContext  =  _parsingContext.createChildObjectContext(-1,  -1);	  _reportUnsupportedOperation();    JsonReadContext    ctxt    =    getCurrentContext();    _parsingContext    =    _parsingContext.createChildObjectContext(-1,    -1);    	compilable	  [FE]  JsonParseException  	108	8	replace
67	[BUG]  [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(-1,  -1);  [FE]  JsonParseException  [FE]        JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(-1,  -1);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_parsingContext  =  _parsingContext.createChildObjectContext(-1,  -1);	  _reportUnsupportedOperation();    JsonReadContext    ctxt    =    getCurrentContext();    _parsingContext    =    _parsingContext.createChildObjectContext(-1,    -1);    	compilable	  [FE]  JsonParseException  	108	8	replace
68	[BUG]  [BUGGY]  nex  =  getCurrentContext();  _parsingContext  =  _parsingContext.createChildObjectContext(-1,  -1);  [CE]  cannot  find  symbol  nex  [FE]          JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  nex  =  getCurrentContext();  _parsingContext  =  _parsingContext.createChildObjectContext(-1,  -1);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	nex  =  getCurrentContext();  _parsingContext  =  _parsingContext.createChildObjectContext(-1,  -1);	  _reportUnsupportedOperation();    JsonReadContext    ctxt    =    getCurrentContext();    _parsingContext    =    _parsingContext.createChildObjectContext(-1,    -1);    	non-compiled	[CE]  cannot  find  symbol  nex	108	None	replace
69	[BUG]  [BUGGY]  _parsingContext  =  getCurrentContext().createChildObjectContext(-1,  -1);  [CE]  cannot  find  symbol  [FE]            JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _parsingContext  =  getCurrentContext().createChildObjectContext(-1,  -1);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_parsingContext  =  getCurrentContext().createChildObjectContext(-1,  -1);	  _reportUnsupportedOperation();    JsonReadContext    ctxt    =    getCurrentContext();    _parsingContext    =    _parsingContext.createChildObjectContext(-1,    -1);    	non-compiled	[CE]  cannot  find  symbol	108	None	replace
70	[BUG]  [BUGGY]  _reportInvalidLong(len,  expType);  [CE]  cannot  find  symbol  [FE]                  JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalidLong(len,  expType);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportInvalidLong(len,  expType);	  _reportInvalidLong(len);    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
71	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]        JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportError( "Missing  NR_INT  value ",  expType);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	add	_reportError( "Missing  NR_INT  value ",  expType);	  _reportError(   "Missing    NR_INT    value   ",    nex);    	compilable	  [FE]  JsonParseException  	107	8	replace
72	[BUG]  [BUGGY]  _reportError( "Missing  NR_INT  value ",  expType);  [FE]  JsonParseException  [FE]        JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportError( "Missing  NR_INT  value ",  expType);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportError( "Missing  NR_INT  value ",  expType);	  _reportError(   "Missing    NR_INT    value   ",    nex);    	compilable	  [FE]  JsonParseException  	107	8	replace
73	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]          JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportError( "Missing  NR_INT  value ", "Invalid  expType: "  +  expType);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	add	_reportError( "Missing  NR_INT  value ", "Invalid  expType: "  +  expType);	  _reportError(   "Missing    NR_INT    value   ",    nex);    	compilable	  [FE]  JsonParseException  	107	8	replace
74	[BUG]  [BUGGY]  _reportError( "Missing  NR_INT  value ", "Invalid  expType: "  +  expType);  [FE]  JsonParseException  [FE]          JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportError( "Missing  NR_INT  value ", "Invalid  expType: "  +  expType);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportError( "Missing  NR_INT  value ", "Invalid  expType: "  +  expType);	  _reportError(   "Missing    NR_INT    value   ",    nex);    	compilable	  [FE]  JsonParseException  	107	8	replace
75	[BUG]  [BUGGY]  ||(expType  ==  NR_INT)&&  expType.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberInt  =  Long.parseLong  [CE]  illegal  start  of  expression  [FE]              JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  ||(expType  ==  NR_INT)&&  expType.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberInt  =  Long.parseLong  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	||(expType  ==  NR_INT)&&  expType.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberInt  =  Long.parseLong	  _reportUnsupportedOperation();    ||(expType    ==    NR_INT)&&    expType.inLongRange(buf,    offset,    len,    _numberNegative))    {    _numberInt    =    Long.parseLong    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
76	[BUG]  [BUGGY]  ||(expType  ==  NR_INT)&&  expType.inLongRange(numStr,  offset,  len,  _numberNegative))  {  _numberInt  =  Long.parseLong  [CE]  illegal  start  of  expression  [FE]                JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  ||(expType  ==  NR_INT)&&  expType.inLongRange(numStr,  offset,  len,  _numberNegative))  {  _numberInt  =  Long.parseLong  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	||(expType  ==  NR_INT)&&  expType.inLongRange(numStr,  offset,  len,  _numberNegative))  {  _numberInt  =  Long.parseLong	  _reportUnsupportedOperation();    ||(expType    ==    NR_INT)&&    expType.inLongRange(buf,    offset,    len,    _numberNegative))    {    _numberInt    =    Long.parseLong    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
77	[BUG]  [BUGGY]  _numberNegative  =  Long.parseLong(expType);  [CE]  no  suitable  method  found  for  parseLong(int)  [FE]          JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _numberNegative  =  Long.parseLong(expType);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_numberNegative  =  Long.parseLong(expType);	          _numberNegative    =    Long.parseLong(numStr);    	non-compiled	[CE]  no  suitable  method  found  for  parseLong(int)	30	None	replace
78	[BUG]  [BUGGY]  _parsingContext  =  JsonReadContext.createRootContext(null,  expType);  [CE]  no  suitable  method  found  for  createRootContext(<null>,int)  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _parsingContext  =  JsonReadContext.createRootContext(null,  expType);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_parsingContext  =  JsonReadContext.createRootContext(null,  expType);	  _parsingContext    =    JsonReadContext.createRootContext(null);    	non-compiled	[CE]  no  suitable  method  found  for  createRootContext(<null>,int)	95	None	replace
79	[BUG]  [BUGGY]  _parsingContext  =  JsonReadContext.createRootContext(numStr);  [CE]  no  suitable  method  found  for  createRootContext(String)  [FE]      JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _parsingContext  =  JsonReadContext.createRootContext(numStr);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_parsingContext  =  JsonReadContext.createRootContext(numStr);	  _parsingContext    =    JsonReadContext.createRootContext(null);    	non-compiled	[CE]  no  suitable  method  found  for  createRootContext(String)	95	None	replace
80	[BUG]  [BUGGY]  _parsingContext  =  JsonReadContext.createRootContext(false);  [CE]  no  suitable  method  found  for  createRootContext(boolean)  [FE]        JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _parsingContext  =  JsonReadContext.createRootContext(false);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_parsingContext  =  JsonReadContext.createRootContext(false);	  _parsingContext    =    JsonReadContext.createRootContext(null);    	non-compiled	[CE]  no  suitable  method  found  for  createRootContext(boolean)	95	None	replace
81	[BUG]  [BUGGY]  ||(expType  ==  NR_INT)&&  expType!=  NR_BIGINT)  {  _numberInt  =  Long.parseLong(numStr);  [CE]  illegal  start  of  expression  [FE]            JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  ||(expType  ==  NR_INT)&&  expType!=  NR_BIGINT)  {  _numberInt  =  Long.parseLong(numStr);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	||(expType  ==  NR_INT)&&  expType!=  NR_BIGINT)  {  _numberInt  =  Long.parseLong(numStr);	  _throwInternal();    ||(expType    ==    NR_INT)&&    expType!=    NR_BIGINT)    {    _numberInt    =    Long.parseLong(numStr);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
82	[BUG]  [BUGGY]  ||(expType  ==  NR_OBJECT)&&  expType!=  NR_BIGINT)  {  _numberInt  =  Long.parseLong(numStr);  [CE]  illegal  start  of  expression  [FE]              JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  ||(expType  ==  NR_OBJECT)&&  expType!=  NR_BIGINT)  {  _numberInt  =  Long.parseLong(numStr);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	||(expType  ==  NR_OBJECT)&&  expType!=  NR_BIGINT)  {  _numberInt  =  Long.parseLong(numStr);	  _throwInternal();    ||(expType    ==    NR_INT)&&    expType!=    NR_BIGINT)    {    _numberInt    =    Long.parseLong(numStr);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
83	[BUG]  [BUGGY]  ||(expType  ==  NR_BIGINT)&&  expType!=  NR_INT)  {  _numberInt  =  Long.parseLong(numStr);  [CE]  illegal  start  of  expression  [FE]                JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  ||(expType  ==  NR_BIGINT)&&  expType!=  NR_INT)  {  _numberInt  =  Long.parseLong(numStr);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	||(expType  ==  NR_BIGINT)&&  expType!=  NR_INT)  {  _numberInt  =  Long.parseLong(numStr);	  _throwInternal();    ||(expType    ==    NR_INT)&&    expType!=    NR_BIGINT)    {    _numberInt    =    Long.parseLong(numStr);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
84	[BUG]  [BUGGY]  _reportInvalidEOFInValue(NR_INT,  expType,  numStr);  [CE]  no  suitable  method  found  for  _reportInvalidEOFInValue(int,int,String)  [FE]            JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalidEOFInValue(NR_INT,  expType,  numStr);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportInvalidEOFInValue(NR_INT,  expType,  numStr);	  _reportInvalidEOFInValue(NR_INT,    numStr,    expType);    	non-compiled	[CE]  no  suitable  method  found  for  _reportInvalidEOFInValue(int,int,String)	16	None	replace
85	[BUG]  [BUGGY]  _reportInvalidEOFInValue(NR_INT,  numStr,  expType,  len);  [CE]  no  suitable  method  found  for  _reportInvalidEOFInValue(int,String,int,int)  [FE]              JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalidEOFInValue(NR_INT,  numStr,  expType,  len);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportInvalidEOFInValue(NR_INT,  numStr,  expType,  len);	  _reportInvalidEOFInValue(NR_INT,    numStr,    expType);    	non-compiled	[CE]  no  suitable  method  found  for  _reportInvalidEOFInValue(int,String,int,int)	16	None	replace
86	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]        JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportError( "Missing  NR_INT  value "  +  expType);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	add	_reportError( "Missing  NR_INT  value "  +  expType);	  _reportError(   "Missing    NR_INT    value   "    +    name);    	compilable	  [FE]  JsonParseException  	89	8	replace
87	[BUG]  [BUGGY]  _reportError( "Missing  NR_INT  value "  +  expType);  [FE]  JsonParseException  [FE]        JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportError( "Missing  NR_INT  value "  +  expType);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportError( "Missing  NR_INT  value "  +  expType);	  _reportError(   "Missing    NR_INT    value   "    +    name);    	compilable	  [FE]  JsonParseException  	89	8	replace
88	[BUG]  [BUGGY]  _reportError( "Missing  NR_INT  value "  +  exType);  [CE]  cannot  find  symbol  exType  [FE]          JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportError( "Missing  NR_INT  value "  +  exType);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportError( "Missing  NR_INT  value "  +  exType);	  _reportError(   "Missing    NR_INT    value   "    +    name);    	non-compiled	[CE]  cannot  find  symbol  exType	89	None	replace
89	[BUG]  [BUGGY]  _reportInvalidEOFInValue(buf,  offset,  expType);  [CE]  no  suitable  method  found  for  _reportInvalidEOFInValue(char[],int,int)  [FE]              JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalidEOFInValue(buf,  offset,  expType);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportInvalidEOFInValue(buf,  offset,  expType);	  _reportInvalidEOFInValue(buf,    _numStr,    expType);    	non-compiled	[CE]  no  suitable  method  found  for  _reportInvalidEOFInValue(char[],int,int)	100	None	replace
90	[BUG]  [BUGGY]  throwUnsupportedOperationException( " ");  [CE]  cannot  find  symbol  [FE]        JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  throwUnsupportedOperationException( " ");  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	throwUnsupportedOperationException( " ");	  _throwUnsupportedOperation();    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
91	[BUG]  [BUGGY]  _parsingContext  =  ctxt.createChildObjectContext(-1,  -1);  [CE]  cannot  find  symbol  ctxt  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _parsingContext  =  ctxt.createChildObjectContext(-1,  -1);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_parsingContext  =  ctxt.createChildObjectContext(-1,  -1);	  _reportUnsupportedOperation();    JsonReadContext    ctxt    =    _parsingContext.createChildObjectContext(-1,    -1);    _reportUnsupportedOperation();    	non-compiled	[CE]  cannot  find  symbol  ctxt	59	None	replace
92	[BUG]  [BUGGY]  _parsingContext  =  _parsingContext.createChildIntContext(-1,  -1);  [CE]  cannot  find  symbol  [FE]      JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _parsingContext  =  _parsingContext.createChildIntContext(-1,  -1);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_parsingContext  =  _parsingContext.createChildIntContext(-1,  -1);	  _reportUnsupportedOperation();    JsonReadContext    ctxt    =    _parsingContext.createChildObjectContext(-1,    -1);    _reportUnsupportedOperation();    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
93	[BUG]  [BUGGY]  _reportUnexpectedNumberInput(NR_INT,  numStr);  [CE]  cannot  find  symbol  [FE]            JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportUnexpectedNumberInput(NR_INT,  numStr);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportUnexpectedNumberInput(NR_INT,  numStr);	  _reportTooLongIntegral(NR_INT,    numStr);    JsonParseException    _reportTooLongIntegral(NR_INT,    numStr);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
94	[BUG]  [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(buf,  offset,  len,  expType);  [CE]  method  createChildObjectContext  in  class  JsonReadContext  cannot  be  applied  to  given  types;  [FE]            JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(buf,  offset,  len,  expType);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_parsingContext  =  _parsingContext.createChildObjectContext(buf,  offset,  len,  expType);	  _reportUnsupportedOperation();    JsonReadContext    ctxt    =    getCurrentContext();    _parsingContext    =    _parsingContext.createChildObjectContext(buf,    offset,    len,    expType);    	non-compiled	[CE]  method  createChildObjectContext  in  class  JsonReadContext  cannot  be  applied  to  given  types;	110	None	replace
95	[BUG]  [BUGGY]  _reportUnsupportedOperation();  _parsingContext  =  _parsingContext.createChildObjectContext(buf,  offset,  len,  expType);  [CE]  method  createChildObjectContext  in  class  JsonReadContext  cannot  be  applied  to  given  types;  [FE]              JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportUnsupportedOperation();  _parsingContext  =  _parsingContext.createChildObjectContext(buf,  offset,  len,  expType);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportUnsupportedOperation();  _parsingContext  =  _parsingContext.createChildObjectContext(buf,  offset,  len,  expType);	  _reportUnsupportedOperation();    JsonReadContext    ctxt    =    getCurrentContext();    _parsingContext    =    _parsingContext.createChildObjectContext(buf,    offset,    len,    expType);    	non-compiled	[CE]  method  createChildObjectContext  in  class  JsonReadContext  cannot  be  applied  to  given  types;	110	None	replace
96	[BUG]  [BUGGY]  _parsingContext  =  context.createChildObjectContext(buf,  offset,  len,  expType);  [CE]  cannot  find  symbol  context  [FE]                JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _parsingContext  =  context.createChildObjectContext(buf,  offset,  len,  expType);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_parsingContext  =  context.createChildObjectContext(buf,  offset,  len,  expType);	  _reportUnsupportedOperation();    JsonReadContext    ctxt    =    getCurrentContext();    _parsingContext    =    _parsingContext.createChildObjectContext(buf,    offset,    len,    expType);    	non-compiled	[CE]  cannot  find  symbol  context	110	None	replace
97	[BUG]  [BUGGY]  _reportInvalidEOFIn();  [CE]  cannot  find  symbol  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalidEOFIn();  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportInvalidEOFIn();	  _reportInvalidEOFInValue();    	non-compiled	[CE]  cannot  find  symbol	103	None	replace
98	[BUG]  [BUGGY]  _reportUnsupportedOperation();    JsonReadContext  ctxt  =  _parsingContext.createChildObjectContext(-1,  -1);  _reportUnsupportedOperation();  JsonReadContext  ctxt  =  _parsingContext.createChildObjectContext(-1,  -1);  [CE]  variable  ctxt  is  already  defined  in  method  _parseSlowInt(int)  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportUnsupportedOperation();    JsonReadContext  ctxt  =  _parsingContext.createChildObjectContext(-1,  -1);  _reportUnsupportedOperation();  JsonReadContext  ctxt  =  _parsingContext.createChildObjectContext(-1,  -1);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportUnsupportedOperation();        JsonReadContext    ctxt    =    _parsingContext.createChildObjectContext(-1,    -1);    _reportUnsupportedOperation();  JsonReadContext  ctxt  =  _parsingContext.createChildObjectContext(-1,  -1);	  	non-compiled	[CE]  variable  ctxt  is  already  defined  in  method  _parseSlowInt(int)	61	None	add
99	[BUG]  [BUGGY]  _reportUnsupportedOperation();    JsonReadContext  ctxt  =  _parsingContext.createChildObjectContext(-1,  -1);  _reportUnsupportedOperation();  JsonReadContext  ctxt  =  _parsingContext.createChildArrayContext(-1,  -1);  [CE]  variable  ctxt  is  already  defined  in  method  _parseSlowInt(int)  [FE]      JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportUnsupportedOperation();    JsonReadContext  ctxt  =  _parsingContext.createChildObjectContext(-1,  -1);  _reportUnsupportedOperation();  JsonReadContext  ctxt  =  _parsingContext.createChildArrayContext(-1,  -1);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportUnsupportedOperation();        JsonReadContext    ctxt    =    _parsingContext.createChildObjectContext(-1,    -1);    _reportUnsupportedOperation();  JsonReadContext  ctxt  =  _parsingContext.createChildArrayContext(-1,  -1);	  	non-compiled	[CE]  variable  ctxt  is  already  defined  in  method  _parseSlowInt(int)	61	None	add
100	[BUG]  [BUGGY]  _reportUnsupportedOperation();    JsonReadContext  ctxt  =  _parsingContext.createChildObjectContext(-1,  -1);  JsonReadContext  ctxt  =  _parsingContext.createChildObjectContext(-1,  -1);  [CE]  variable  ctxt  is  already  defined  in  method  _parseSlowInt(int)  [FE]        JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportUnsupportedOperation();    JsonReadContext  ctxt  =  _parsingContext.createChildObjectContext(-1,  -1);  JsonReadContext  ctxt  =  _parsingContext.createChildObjectContext(-1,  -1);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportUnsupportedOperation();        JsonReadContext    ctxt    =    _parsingContext.createChildObjectContext(-1,    -1);    JsonReadContext  ctxt  =  _parsingContext.createChildObjectContext(-1,  -1);	  	non-compiled	[CE]  variable  ctxt  is  already  defined  in  method  _parseSlowInt(int)	61	None	add
101	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportError( "Numeric  value( "+numStr+ ")not  in  range  [ "+expType+ "] ");  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	add	_reportError( "Numeric  value( "+numStr+ ")not  in  range  [ "+expType+ "] ");	  _reportError(   "Numeric    value(   "+numStr+   ")not    in    range    [   "+len+   "]   ");    	compilable	  [FE]  JsonParseException  	105	8	replace
102	[BUG]  [BUGGY]  _reportError( "Numeric  value( "+numStr+ ")not  in  range  [ "+expType+ "] ");  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportError( "Numeric  value( "+numStr+ ")not  in  range  [ "+expType+ "] ");  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportError( "Numeric  value( "+numStr+ ")not  in  range  [ "+expType+ "] ");	  _reportError(   "Numeric    value(   "+numStr+   ")not    in    range    [   "+len+   "]   ");    	compilable	  [FE]  JsonParseException  	105	8	replace
103	[BUG]  [BUGGY]  _reportError( "Numeric  value( "+numStr+ ")not  in  range  [ "+index+ "] ");  [CE]  cannot  find  symbol  index  [FE]      JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportError( "Numeric  value( "+numStr+ ")not  in  range  [ "+index+ "] ");  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportError( "Numeric  value( "+numStr+ ")not  in  range  [ "+index+ "] ");	  _reportError(   "Numeric    value(   "+numStr+   ")not    in    range    [   "+len+   "]   ");    	non-compiled	[CE]  cannot  find  symbol  index	105	None	replace
104	[BUG]  [BUGGY]  JsonReadContext  ctxt  =  getCurrentContext();  _reportError( "Missing  NR_INT  value ");  [CE]  cannot  find  symbol  [FE]        JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  JsonReadContext  ctxt  =  getCurrentContext();  _reportError( "Missing  NR_INT  value ");  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	JsonReadContext  ctxt  =  getCurrentContext();  _reportError( "Missing  NR_INT  value ");	  _reportError(       "Missing    NR_INT    value       ");    JsonReadContext    ctxt    =    getCurrentContext();    _reportError(   "Missing    NR_INT    value       ");    	non-compiled	[CE]  cannot  find  symbol	98	None	replace
105	[BUG]  [BUGGY]  String  ctxt  =  getCurrentContext();  _reportError( "Missing  NR_INT  value ");  [CE]  cannot  find  symbol  [FE]          JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  String  ctxt  =  getCurrentContext();  _reportError( "Missing  NR_INT  value ");  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	String  ctxt  =  getCurrentContext();  _reportError( "Missing  NR_INT  value ");	  _reportError(       "Missing    NR_INT    value       ");    JsonReadContext    ctxt    =    getCurrentContext();    _reportError(   "Missing    NR_INT    value       ");    	non-compiled	[CE]  cannot  find  symbol	98	None	replace
106	[BUG]  [BUGGY]  _reportInvalidLong(null,  expType,  NR_INT);  [CE]  cannot  find  symbol  [FE]                JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalidLong(null,  expType,  NR_INT);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportInvalidLong(null,  expType,  NR_INT);	  _reportInvalidLong(null,    expType);    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
107	[BUG]  [BUGGY]  _reportInvalidEOFInValue(buf,  offset,  len,  expType,  fractLen);  [CE]  cannot  find  symbol  fractLen  [FE]                  JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalidEOFInValue(buf,  offset,  len,  expType,  fractLen);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportInvalidEOFInValue(buf,  offset,  len,  expType,  fractLen);	  _reportInvalidEOFInValue(buf,    offset,    len,    expType);    	non-compiled	[CE]  cannot  find  symbol  fractLen	40	None	replace
108	[BUG]  [BUGGY]  _reportInvalidEOFInValue(numStr,  buf,  offset,  len,  expType);  [CE]  no  suitable  method  found  for  _reportInvalidEOFInValue(String,char[],int,int,int)  [FE]                    JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalidEOFInValue(numStr,  buf,  offset,  len,  expType);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportInvalidEOFInValue(numStr,  buf,  offset,  len,  expType);	  _reportInvalidEOFInValue(buf,    offset,    len,    expType);    	non-compiled	[CE]  no  suitable  method  found  for  _reportInvalidEOFInValue(String,char[],int,int,int)	40	None	replace
109	[BUG]  [BUGGY]  _reportInvalidEOFInValue(buf,  offset,  len,  expType,  _numberNegative);  [CE]  no  suitable  method  found  for  _reportInvalidEOFInValue(char[],int,int,int,boolean)  [FE]                      JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalidEOFInValue(buf,  offset,  len,  expType,  _numberNegative);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportInvalidEOFInValue(buf,  offset,  len,  expType,  _numberNegative);	  _reportInvalidEOFInValue(buf,    offset,    len,    expType);    	non-compiled	[CE]  no  suitable  method  found  for  _reportInvalidEOFInValue(char[],int,int,int,boolean)	40	None	replace
110	[BUG]  [BUGGY]  _reportInvalidEOFInValue(buf,  offset,  len,  expType,  NR_INT);  [CE]  no  suitable  method  found  for  _reportInvalidEOFInValue(char[],int,int,int,int)  [FE]                        JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalidEOFInValue(buf,  offset,  len,  expType,  NR_INT);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportInvalidEOFInValue(buf,  offset,  len,  expType,  NR_INT);	  _reportInvalidEOFInValue(buf,    offset,    len,    expType);    	non-compiled	[CE]  no  suitable  method  found  for  _reportInvalidEOFInValue(char[],int,int,int,int)	40	None	replace
111	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportError( "msg.invalid.internal.number ",  NR_INT);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	add	_reportError( "msg.invalid.internal.number ",  NR_INT);	  _reportError(   "msg.invalid.internal.number   ");    	compilable	  [FE]  JsonParseException  	22	8	replace
112	[BUG]  [BUGGY]  _reportError( "msg.invalid.internal.number ",  NR_INT);  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportError( "msg.invalid.internal.number ",  NR_INT);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportError( "msg.invalid.internal.number ",  NR_INT);	  _reportError(   "msg.invalid.internal.number   ");    	compilable	  [FE]  JsonParseException  	22	8	replace
113	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportError( "Invalid  column.number ");  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	add	_reportError( "Invalid  column.number ");	  _reportError(   "msg.invalid.internal.number   ");    	compilable	  [FE]  JsonParseException  	22	8	replace
114	[BUG]  [BUGGY]  _reportError( "Invalid  column.number ");  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportError( "Invalid  column.number ");  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportError( "Invalid  column.number ");	  _reportError(   "msg.invalid.internal.number   ");    	compilable	  [FE]  JsonParseException  	22	8	replace
115	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]        JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _parsingContext  =  _parsingContext.createChildArrayContext(-1,  -1);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	add	_parsingContext  =  _parsingContext.createChildArrayContext(-1,  -1);	  _reportUnsupportedOperation();    JsonParseException    p    =    _parsingContext.createChildObjectContext(-1,    -1);    _reportUnsupportedOperation();    	compilable	  [FE]  JsonParseException  	57	8	replace
116	[BUG]  [BUGGY]  _parsingContext  =  _parsingContext.createChildArrayContext(-1,  -1);  [FE]  JsonParseException  [FE]        JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _parsingContext  =  _parsingContext.createChildArrayContext(-1,  -1);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_parsingContext  =  _parsingContext.createChildArrayContext(-1,  -1);	  _reportUnsupportedOperation();    JsonParseException    p    =    _parsingContext.createChildObjectContext(-1,    -1);    _reportUnsupportedOperation();    	compilable	  [FE]  JsonParseException  	57	8	replace
117	[BUG]  [BUGGY]  _reportInvalidEOFInValue(buf,  offset,  numStr);  [CE]  no  suitable  method  found  for  _reportInvalidEOFInValue(char[],int,String)  [FE]            JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalidEOFInValue(buf,  offset,  numStr);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportInvalidEOFInValue(buf,  offset,  numStr);	  _reportInvalidEOFInValue(buf,    _numStr,    numStr);    	non-compiled	[CE]  no  suitable  method  found  for  _reportInvalidEOFInValue(char[],int,String)	116	None	replace
118	[BUG]  [BUGGY]  _reportError(buf,  offset,  len);  [CE]  no  suitable  method  found  for  _reportError(char[],int,int)  [FE]        JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportError(buf,  offset,  len);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportError(buf,  offset,  len);	  _reportError();    	non-compiled	[CE]  no  suitable  method  found  for  _reportError(char[],int,int)	13	None	replace
119	[BUG]  [BUGGY]  _reportError(buf,  offset,  len,  NR_INT);  [CE]  no  suitable  method  found  for  _reportError(char[],int,int,int)  [FE]          JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportError(buf,  offset,  len,  NR_INT);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportError(buf,  offset,  len,  NR_INT);	  _reportError();    	non-compiled	[CE]  no  suitable  method  found  for  _reportError(char[],int,int,int)	13	None	replace
120	[BUG]  [BUGGY]  ||(expType  ==  NR_INT)&&  expType.equals(NR_BIGINT))  {  _numberInt  =  Long.parseLong(numStr);  [CE]  illegal  start  of  expression  [FE]          JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  ||(expType  ==  NR_INT)&&  expType.equals(NR_BIGINT))  {  _numberInt  =  Long.parseLong(numStr);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	||(expType  ==  NR_INT)&&  expType.equals(NR_BIGINT))  {  _numberInt  =  Long.parseLong(numStr);	  _throwInternal();    ||(expType    ==    NR_INT)&&    expType.equals(NR_BIGINT))    {    _numberInt    =    Long.parseLong(numStr);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
121	[BUG]  [BUGGY]  ||(expType  ==  NR_INT)&&  expType.equals(Long.parseLong(numStr)))  {  _numberInt  =  Long.parseLong(  [CE]  illegal  start  of  expression  [FE]            JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  ||(expType  ==  NR_INT)&&  expType.equals(Long.parseLong(numStr)))  {  _numberInt  =  Long.parseLong(  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	||(expType  ==  NR_INT)&&  expType.equals(Long.parseLong(numStr)))  {  _numberInt  =  Long.parseLong(	  _throwInternal();    ||(expType    ==    NR_INT)&&    expType.equals(NR_BIGINT))    {    _numberInt    =    Long.parseLong(numStr);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
122	[BUG]  [BUGGY]  ||(expType  ==  NR_INTEGER)&&  expType.equals(NR_BIGINT))  {  _numberInt  =  Long.parseLong(numStr);  [CE]  illegal  start  of  expression  [FE]              JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  ||(expType  ==  NR_INTEGER)&&  expType.equals(NR_BIGINT))  {  _numberInt  =  Long.parseLong(numStr);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	||(expType  ==  NR_INTEGER)&&  expType.equals(NR_BIGINT))  {  _numberInt  =  Long.parseLong(numStr);	  _throwInternal();    ||(expType    ==    NR_INT)&&    expType.equals(NR_BIGINT))    {    _numberInt    =    Long.parseLong(numStr);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
123	[BUG]  [BUGGY]  _parsingContext.setCurrentName(name);  [CE]  cannot  find  symbol  name  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _parsingContext.setCurrentName(name);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_parsingContext.setCurrentName(name);	  _parsingContext.setCurrentName(numStr);    	non-compiled	[CE]  cannot  find  symbol  name	97	None	replace
124	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _parsingContext.setCurrentName(null);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	add	_parsingContext.setCurrentName(null);	  _parsingContext.setCurrentName(numStr);    	compilable	  [FE]  JsonParseException  	97	8	replace
125	[BUG]  [BUGGY]  _parsingContext.setCurrentName(null);  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _parsingContext.setCurrentName(null);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_parsingContext.setCurrentName(null);	  _parsingContext.setCurrentName(numStr);    	compilable	  [FE]  JsonParseException  	97	8	replace
126	[BUG]  [BUGGY]  _parsingContext.setCurrentName(nex);  [CE]  cannot  find  symbol  nex  [FE]        JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _parsingContext.setCurrentName(nex);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_parsingContext.setCurrentName(nex);	  _parsingContext.setCurrentName(numStr);    	non-compiled	[CE]  cannot  find  symbol  nex	97	None	replace
127	[BUG]  [BUGGY]  _numberInt  =  NumberInput.parseInt(intLong);  [CE]  cannot  find  symbol  intLong  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _numberInt  =  NumberInput.parseInt(intLong);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_numberInt  =  NumberInput.parseInt(intLong);	  _numberInt    =    NumberInput.parseInt(numStr);    	non-compiled	[CE]  cannot  find  symbol  intLong	93	None	replace
128	[BUG]  [BUGGY]  _numberInt  =  NumberInput.parseInt(int);  [CE]  '.class'  expected  [FE]      JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _numberInt  =  NumberInput.parseInt(int);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_numberInt  =  NumberInput.parseInt(int);	  _numberInt    =    NumberInput.parseInt(numStr);    	non-compiled	[CE]  '.class'  expected	93	None	replace
129	[BUG]  [BUGGY]  _numberInt  =  NumberInput.parseInt(len);  [CE]  no  suitable  method  found  for  parseInt(int)  [FE]        JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _numberInt  =  NumberInput.parseInt(len);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_numberInt  =  NumberInput.parseInt(len);	  _numberInt    =    NumberInput.parseInt(numStr);    	non-compiled	[CE]  no  suitable  method  found  for  parseInt(int)	93	None	replace
130	[BUG]  [BUGGY]  _reportInvalidEOFInValue(buf,  _numberNegative,  NR_INT);  [CE]  no  suitable  method  found  for  _reportInvalidEOFInValue(char[],boolean,int)  [FE]              JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalidEOFInValue(buf,  _numberNegative,  NR_INT);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportInvalidEOFInValue(buf,  _numberNegative,  NR_INT);	  _reportInvalidEOFInValue(numStr,    NR_INT);    	non-compiled	[CE]  no  suitable  method  found  for  _reportInvalidEOFInValue(char[],boolean,int)	17	None	replace
131	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportError( "msg.no.int.number ");  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	add	_reportError( "msg.no.int.number ");	  _reportInvalidEOF(numStr);    	compilable	  [FE]  JsonParseException  	72	8	replace
132	[BUG]  [BUGGY]  _reportError( "msg.no.int.number ");  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportError( "msg.no.int.number ");  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportError( "msg.no.int.number ");	  _reportInvalidEOF(numStr);    	compilable	  [FE]  JsonParseException  	72	8	replace
133	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportError( "msg.invalid.number ",  numStr);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	add	_reportError( "msg.invalid.number ",  numStr);	  _reportInvalidEOF(numStr);    	compilable	  [FE]  JsonParseException  	72	8	replace
134	[BUG]  [BUGGY]  _reportError( "msg.invalid.number ",  numStr);  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportError( "msg.invalid.number ",  numStr);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportError( "msg.invalid.number ",  numStr);	  _reportInvalidEOF(numStr);    	compilable	  [FE]  JsonParseException  	72	8	replace
135	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]        JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportError( "msg.bad.number.int.second ");  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	add	_reportError( "msg.bad.number.int.second ");	  _reportInvalidEOF(numStr);    	compilable	  [FE]  JsonParseException  	72	8	replace
136	[BUG]  [BUGGY]  _reportError( "msg.bad.number.int.second ");  [FE]  JsonParseException  [FE]        JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportError( "msg.bad.number.int.second ");  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportError( "msg.bad.number.int.second ");	  _reportInvalidEOF(numStr);    	compilable	  [FE]  JsonParseException  	72	8	replace
137	[BUG]  [BUGGY]  _reportTooLongIntegral(NR_INT,  expType,  numStr);  [CE]  method  _reportTooLongIntegral  in  class  ParserBase  cannot  be  applied  to  given  types;  [FE]              JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportTooLongIntegral(NR_INT,  expType,  numStr);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportTooLongIntegral(NR_INT,  expType,  numStr);	  _reportTooLongIntegral(NR_INT,    numStr,    expType);    	non-compiled	[CE]  method  _reportTooLongIntegral  in  class  ParserBase  cannot  be  applied  to  given  types;	4	None	replace
138	[BUG]  [BUGGY]  _reportTooLongIntegral(NR_INT,  numStr,  expType,  fractLen);  [CE]  cannot  find  symbol  fractLen  [FE]                JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportTooLongIntegral(NR_INT,  numStr,  expType,  fractLen);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportTooLongIntegral(NR_INT,  numStr,  expType,  fractLen);	  _reportTooLongIntegral(NR_INT,    numStr,    expType);    	non-compiled	[CE]  cannot  find  symbol  fractLen	4	None	replace
139	[BUG]  [BUGGY]  _reportTooLongIntegral(NR_INT,  numStr,  expType,  len);  [CE]  method  _reportTooLongIntegral  in  class  ParserBase  cannot  be  applied  to  given  types;  [FE]                  JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportTooLongIntegral(NR_INT,  numStr,  expType,  len);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportTooLongIntegral(NR_INT,  numStr,  expType,  len);	  _reportTooLongIntegral(NR_INT,    numStr,    expType);    	non-compiled	[CE]  method  _reportTooLongIntegral  in  class  ParserBase  cannot  be  applied  to  given  types;	4	None	replace
140	[BUG]  [BUGGY]  _reportTooLongIntegral(NR_INT,  numStr,  expType,  fractLength);  [CE]  cannot  find  symbol  fractLength  [FE]                    JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportTooLongIntegral(NR_INT,  numStr,  expType,  fractLength);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportTooLongIntegral(NR_INT,  numStr,  expType,  fractLength);	  _reportTooLongIntegral(NR_INT,    numStr,    expType);    	non-compiled	[CE]  cannot  find  symbol  fractLength	4	None	replace
141	[BUG]  [BUGGY]  ctxt  =  _parsingContext.getCurrentContext();  [CE]  cannot  find  symbol  ctxt  [FE]              JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  ctxt  =  _parsingContext.getCurrentContext();  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	ctxt  =  _parsingContext.getCurrentContext();	  _throwInternal();    JsonReadContext    ctxt    =    _parsingContext.getCurrentContext();    	non-compiled	[CE]  cannot  find  symbol  ctxt	67	None	replace
142	[BUG]  [BUGGY]  null  =  _parsingContext.getCurrentContext();  [CE]  unexpected  type  [FE]                JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  null  =  _parsingContext.getCurrentContext();  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	null  =  _parsingContext.getCurrentContext();	  _throwInternal();    JsonReadContext    ctxt    =    _parsingContext.getCurrentContext();    	non-compiled	[CE]  unexpected  type	67	None	replace
143	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportError( "Missing  NR_INT  value: "  +  numStr,  expType);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	add	_reportError( "Missing  NR_INT  value: "  +  numStr,  expType);	  _reportError(   "Missing    NR_INT    value:   "    +    numStr);    	compilable	  [FE]  JsonParseException  	37	8	replace
144	[BUG]  [BUGGY]  _reportError( "Missing  NR_INT  value: "  +  numStr,  expType);  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportError( "Missing  NR_INT  value: "  +  numStr,  expType);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportError( "Missing  NR_INT  value: "  +  numStr,  expType);	  _reportError(   "Missing    NR_INT    value:   "    +    numStr);    	compilable	  [FE]  JsonParseException  	37	8	replace
145	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportError( "Missing  NR_INT  value: "  +  expType);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	add	_reportError( "Missing  NR_INT  value: "  +  expType);	  _reportError(   "Missing    NR_INT    value:   "    +    numStr);    	compilable	  [FE]  JsonParseException  	37	8	replace
146	[BUG]  [BUGGY]  _reportError( "Missing  NR_INT  value: "  +  expType);  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportError( "Missing  NR_INT  value: "  +  expType);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportError( "Missing  NR_INT  value: "  +  expType);	  _reportError(   "Missing    NR_INT    value:   "    +    numStr);    	compilable	  [FE]  JsonParseException  	37	8	replace
147	[BUG]  [BUGGY]  _reportInvalidEOFInValue(buf,  numStr,  expType,  NR_INT);  [CE]  no  suitable  method  found  for  _reportInvalidEOFInValue(char[],String,int,int)  [FE]                JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalidEOFInValue(buf,  numStr,  expType,  NR_INT);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportInvalidEOFInValue(buf,  numStr,  expType,  NR_INT);	  _reportInvalidEOFInValue(numStr,    expType,    NR_INT);    	non-compiled	[CE]  no  suitable  method  found  for  _reportInvalidEOFInValue(char[],String,int,int)	39	None	replace
148	[BUG]  [BUGGY]  _reportInvalidEOFInValue(buf,  _inputPtr,  expType,  NR_INT);  [CE]  no  suitable  method  found  for  _reportInvalidEOFInValue(char[],int,int,int)  [FE]                  JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalidEOFInValue(buf,  _inputPtr,  expType,  NR_INT);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportInvalidEOFInValue(buf,  _inputPtr,  expType,  NR_INT);	  _reportInvalidEOFInValue(numStr,    expType,    NR_INT);    	non-compiled	[CE]  no  suitable  method  found  for  _reportInvalidEOFInValue(char[],int,int,int)	39	None	replace
149	[BUG]  [BUGGY]  _reportInvalidEOFInValue(numStr,  expType,  NR_LONG);  [CE]  no  suitable  method  found  for  _reportInvalidEOFInValue(String,int,int)  [FE]                    JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalidEOFInValue(numStr,  expType,  NR_LONG);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportInvalidEOFInValue(numStr,  expType,  NR_LONG);	  _reportInvalidEOFInValue(numStr,    expType,    NR_INT);    	non-compiled	[CE]  no  suitable  method  found  for  _reportInvalidEOFInValue(String,int,int)	39	None	replace
150	[BUG]  [BUGGY]  _reportInvalidLong(NR_INT,  expType,  fractLength);  [CE]  cannot  find  symbol  fractLength  [FE]            JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalidLong(NR_INT,  expType,  fractLength);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportInvalidLong(NR_INT,  expType,  fractLength);	  _reportInvalidLong(NR_INT,    expType);    	non-compiled	[CE]  cannot  find  symbol  fractLength	78	None	replace
151	[BUG]  [BUGGY]  _reportInvalidLong(NR_INT,  expType,  NR_BIGINT);  [CE]  cannot  find  symbol  [FE]              JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalidLong(NR_INT,  expType,  NR_BIGINT);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportInvalidLong(NR_INT,  expType,  NR_BIGINT);	  _reportInvalidLong(NR_INT,    expType);    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
152	[BUG]  [BUGGY]  _reportInvalidLong(NR_INT,  expType,  fractLen);  [CE]  cannot  find  symbol  fractLen  [FE]                JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalidLong(NR_INT,  expType,  fractLen);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportInvalidLong(NR_INT,  expType,  fractLen);	  _reportInvalidLong(NR_INT,    expType);    	non-compiled	[CE]  cannot  find  symbol  fractLen	78	None	replace
153	[BUG]  [BUGGY]  _reportInvalidLong(NR_INT,  expType,  NR_FLOAT);  [CE]  cannot  find  symbol  [FE]                  JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalidLong(NR_INT,  expType,  NR_FLOAT);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportInvalidLong(NR_INT,  expType,  NR_FLOAT);	  _reportInvalidLong(NR_INT,    expType);    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
154	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _numberNegative  =  false;  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	add	_numberNegative  =  false;	  _reportUnsupportedOperation();    _reportUnsupportedOperation();    	compilable	  [FE]  JsonParseException  	24	8	replace
155	[BUG]  [BUGGY]  _numberNegative  =  false;  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _numberNegative  =  false;  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_numberNegative  =  false;	  _reportUnsupportedOperation();    _reportUnsupportedOperation();    	compilable	  [FE]  JsonParseException  	24	8	replace
156	[BUG]  [BUGGY]  _reportIntegral(NR_INT,  expType,  fractLen);  [CE]  cannot  find  symbol  fractLen  [FE]              JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportIntegral(NR_INT,  expType,  fractLen);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportIntegral(NR_INT,  expType,  fractLen);	  _reportIntegral(NR_INT,    expType);    	non-compiled	[CE]  cannot  find  symbol  fractLen	42	None	replace
157	[BUG]  [BUGGY]  _reportIntegral(NR_INT,  expType,  fractLength);  [CE]  cannot  find  symbol  fractLength  [FE]                JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportIntegral(NR_INT,  expType,  fractLength);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportIntegral(NR_INT,  expType,  fractLength);	  _reportIntegral(NR_INT,    expType);    	non-compiled	[CE]  cannot  find  symbol  fractLength	42	None	replace
158	[BUG]  [BUGGY]  _reportIntegral(NR_INT,  expType,  _numberNegative);  [CE]  cannot  find  symbol  [FE]                  JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportIntegral(NR_INT,  expType,  _numberNegative);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportIntegral(NR_INT,  expType,  _numberNegative);	  _reportIntegral(NR_INT,    expType);    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
159	[BUG]  [BUGGY]  _reportIntegral(NR_INT,  expType,  len);  [CE]  cannot  find  symbol  [FE]                    JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportIntegral(NR_INT,  expType,  len);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportIntegral(NR_INT,  expType,  len);	  _reportIntegral(NR_INT,    expType);    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
160	[BUG]  [BUGGY]  ||(expType  ==  NR_INT)&&  expType.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberInt  =  Long.parseLong(numStr);  [CE]  illegal  start  of  expression  [FE]          JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  ||(expType  ==  NR_INT)&&  expType.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberInt  =  Long.parseLong(numStr);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	||(expType  ==  NR_INT)&&  expType.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberInt  =  Long.parseLong(numStr);	  _reportUnsupportedOperation();    ||(expType    ==    NR_INT)&&    expType.inLongRange(buf,    offset,    len,    _numberNegative))    {    _numberInt    =    Long.parseLong(numStr);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
161	[BUG]  [BUGGY]  _reportIntegral(NR_INT,  NR_LONG);  [CE]  cannot  find  symbol  [FE]                JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportIntegral(NR_INT,  NR_LONG);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportIntegral(NR_INT,  NR_LONG);	  _reportIntegral(NR_INT,    _numberBigInt);    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
162	[BUG]  [BUGGY]  _reportInvalidLong(NR_INT,  _numberBigInt);  [CE]  cannot  find  symbol  [FE]                  JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalidLong(NR_INT,  _numberBigInt);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportInvalidLong(NR_INT,  _numberBigInt);	  _reportIntegral(NR_INT,    _numberBigInt);    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
163	[BUG]  [BUGGY]  _reportTooLongIntegral(NR_INT,  expType,  0);  [CE]  method  _reportTooLongIntegral  in  class  ParserBase  cannot  be  applied  to  given  types;  [FE]            JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportTooLongIntegral(NR_INT,  expType,  0);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportTooLongIntegral(NR_INT,  expType,  0);	  _reportTooLongIntegral(NR_INT,    0);    	non-compiled	[CE]  method  _reportTooLongIntegral  in  class  ParserBase  cannot  be  applied  to  given  types;	3	None	replace
164	[BUG]  [BUGGY]  _reportTooLongIntegral(NR_INT,  0,  expType);  [CE]  method  _reportTooLongIntegral  in  class  ParserBase  cannot  be  applied  to  given  types;  [FE]              JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportTooLongIntegral(NR_INT,  0,  expType);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportTooLongIntegral(NR_INT,  0,  expType);	  _reportTooLongIntegral(NR_INT,    0);    	non-compiled	[CE]  method  _reportTooLongIntegral  in  class  ParserBase  cannot  be  applied  to  given  types;	3	None	replace
165	[BUG]  [BUGGY]  _reportTooLongIntegral(numStr,  0);  [CE]  method  _reportTooLongIntegral  in  class  ParserBase  cannot  be  applied  to  given  types;  [FE]                JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportTooLongIntegral(numStr,  0);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportTooLongIntegral(numStr,  0);	  _reportTooLongIntegral(NR_INT,    0);    	non-compiled	[CE]  method  _reportTooLongIntegral  in  class  ParserBase  cannot  be  applied  to  given  types;	3	None	replace
166	[BUG]  [BUGGY]  ||(expType  ==  NR_INT)&&  expType!=  NR_BIGINT)  {  _throwInternal();  [CE]  illegal  start  of  expression  [FE]              JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  ||(expType  ==  NR_INT)&&  expType!=  NR_BIGINT)  {  _throwInternal();  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	||(expType  ==  NR_INT)&&  expType!=  NR_BIGINT)  {  _throwInternal();	  _throwInternal();    ||(expType    ==    NR_INT)&&    expType!=    NR_BIGINT)    {    _throwInternal();    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
167	[BUG]  [BUGGY]  ||(expType  ==  NR_OBJECT)&&  expType!=  NR_BIGINT)  {  _throwInternal();  [CE]  illegal  start  of  expression  [FE]                JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  ||(expType  ==  NR_OBJECT)&&  expType!=  NR_BIGINT)  {  _throwInternal();  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	||(expType  ==  NR_OBJECT)&&  expType!=  NR_BIGINT)  {  _throwInternal();	  _throwInternal();    ||(expType    ==    NR_INT)&&    expType!=    NR_BIGINT)    {    _throwInternal();    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
168	[BUG]  [BUGGY]  ||(expType  ==  NR_LONG)&&  expType!=  NR_BIGINT)  {  _throwInternal();  [CE]  illegal  start  of  expression  [FE]                  JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  ||(expType  ==  NR_LONG)&&  expType!=  NR_BIGINT)  {  _throwInternal();  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	||(expType  ==  NR_LONG)&&  expType!=  NR_BIGINT)  {  _throwInternal();	  _throwInternal();    ||(expType    ==    NR_INT)&&    expType!=    NR_BIGINT)    {    _throwInternal();    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
169	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _numberInt  =  NumberInput.parseInt(numStr);  _numberInt  =  NumberInput.parseInt(numStr);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	add	_numberInt    =    NumberInput.parseInt(numStr);    _numberInt  =  NumberInput.parseInt(numStr);	  	compilable	  [FE]  JsonParseException  	92	8	add
170	[BUG]  [BUGGY]  _numberInt  =  NumberInput.parseInt(numStr);  _numberInt  =  NumberInput.parseInt(numStr);  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _numberInt  =  NumberInput.parseInt(numStr);  _numberInt  =  NumberInput.parseInt(numStr);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_numberInt    =    NumberInput.parseInt(numStr);    _numberInt  =  NumberInput.parseInt(numStr);	  	compilable	  [FE]  JsonParseException  	92	8	add
171	[BUG]  [BUGGY]  _numberInt  =  NumberInput.parseInt(numStr);  _numberInt  =  numberInput.parseInt(numStr);  [CE]  cannot  find  symbol  numberInput  [FE]      JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _numberInt  =  NumberInput.parseInt(numStr);  _numberInt  =  numberInput.parseInt(numStr);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_numberInt    =    NumberInput.parseInt(numStr);    _numberInt  =  numberInput.parseInt(numStr);	  	non-compiled	[CE]  cannot  find  symbol  numberInput	92	None	add
172	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]        JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _numberInt  =  NumberInput.parseInt(numStr);  _numberInt  =  Integer.parseInt(numStr);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	add	_numberInt    =    NumberInput.parseInt(numStr);    _numberInt  =  Integer.parseInt(numStr);	  	compilable	  [FE]  JsonParseException  	92	8	add
173	[BUG]  [BUGGY]  _numberInt  =  NumberInput.parseInt(numStr);  _numberInt  =  Integer.parseInt(numStr);  [FE]  JsonParseException  [FE]        JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _numberInt  =  NumberInput.parseInt(numStr);  _numberInt  =  Integer.parseInt(numStr);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_numberInt    =    NumberInput.parseInt(numStr);    _numberInt  =  Integer.parseInt(numStr);	  	compilable	  [FE]  JsonParseException  	92	8	add
174	[BUG]  [BUGGY]  _numberInt  =  NumberInput.parseInt(numStr);  _numberInt  =  NodeInput.parseInt(numStr);  [CE]  cannot  find  symbol  NodeInput  [FE]          JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _numberInt  =  NumberInput.parseInt(numStr);  _numberInt  =  NodeInput.parseInt(numStr);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_numberInt    =    NumberInput.parseInt(numStr);    _numberInt  =  NodeInput.parseInt(numStr);	  	non-compiled	[CE]  cannot  find  symbol  NodeInput	92	None	add
175	[BUG]  [BUGGY]  _parsingContext  =  JsonReadContext.createRootContext(-1,  -1,  expType);  [CE]  no  suitable  method  found  for  createRootContext(int,int,int)  [FE]              JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _parsingContext  =  JsonReadContext.createRootContext(-1,  -1,  expType);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_parsingContext  =  JsonReadContext.createRootContext(-1,  -1,  expType);	          _parsingContext    =    JsonReadContext.createRootContext(-1,    -1);    	non-compiled	[CE]  no  suitable  method  found  for  createRootContext(int,int,int)	77	None	replace
176	[BUG]  [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(buf,  offset,  len);  [CE]  method  createChildObjectContext  in  class  JsonReadContext  cannot  be  applied  to  given  types;  [FE]              JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(buf,  offset,  len);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_parsingContext  =  _parsingContext.createChildObjectContext(buf,  offset,  len);	  _reportUnsupportedOperation();    JsonReadContext    ctxt    =    getCurrentContext();    _parsingContext    =    _parsingContext.createChildObjectContext(buf,    offset,    len);    	non-compiled	[CE]  method  createChildObjectContext  in  class  JsonReadContext  cannot  be  applied  to  given  types;	111	None	replace
177	[BUG]  [BUGGY]  _reportUnsupportedOperation();  _parsingContext  =  _parsingContext.createChildObjectContext(buf,  offset,  len);  [CE]  method  createChildObjectContext  in  class  JsonReadContext  cannot  be  applied  to  given  types;  [FE]                JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportUnsupportedOperation();  _parsingContext  =  _parsingContext.createChildObjectContext(buf,  offset,  len);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportUnsupportedOperation();  _parsingContext  =  _parsingContext.createChildObjectContext(buf,  offset,  len);	  _reportUnsupportedOperation();    JsonReadContext    ctxt    =    getCurrentContext();    _parsingContext    =    _parsingContext.createChildObjectContext(buf,    offset,    len);    	non-compiled	[CE]  method  createChildObjectContext  in  class  JsonReadContext  cannot  be  applied  to  given  types;	111	None	replace
178	[BUG]  [BUGGY]  _parsingContext  =  context.createChildObjectContext(buf,  offset,  len);  [CE]  cannot  find  symbol  context  [FE]                  JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _parsingContext  =  context.createChildObjectContext(buf,  offset,  len);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_parsingContext  =  context.createChildObjectContext(buf,  offset,  len);	  _reportUnsupportedOperation();    JsonReadContext    ctxt    =    getCurrentContext();    _parsingContext    =    _parsingContext.createChildObjectContext(buf,    offset,    len);    	non-compiled	[CE]  cannot  find  symbol  context	111	None	replace
179	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _parsingContext  =  JsonReadContext.createRootContext(null);  _parsingContext  =  JsonReadContext.createRootContext(null);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	add	_parsingContext    =    JsonReadContext.createRootContext(null);    _parsingContext  =  JsonReadContext.createRootContext(null);	  	compilable	  [FE]  JsonParseException  	94	8	add
180	[BUG]  [BUGGY]  _parsingContext  =  JsonReadContext.createRootContext(null);  _parsingContext  =  JsonReadContext.createRootContext(null);  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _parsingContext  =  JsonReadContext.createRootContext(null);  _parsingContext  =  JsonReadContext.createRootContext(null);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_parsingContext    =    JsonReadContext.createRootContext(null);    _parsingContext  =  JsonReadContext.createRootContext(null);	  	compilable	  [FE]  JsonParseException  	94	8	add
181	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _parsingContext  =  JsonReadContext.createRootContext(null);  JsonReadContext  ctxt  =  JsonReadContext.createRootContext(null);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	add	_parsingContext    =    JsonReadContext.createRootContext(null);    JsonReadContext  ctxt  =  JsonReadContext.createRootContext(null);	  	compilable	  [FE]  JsonParseException  	94	8	add
182	[BUG]  [BUGGY]  _parsingContext  =  JsonReadContext.createRootContext(null);  JsonReadContext  ctxt  =  JsonReadContext.createRootContext(null);  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _parsingContext  =  JsonReadContext.createRootContext(null);  JsonReadContext  ctxt  =  JsonReadContext.createRootContext(null);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_parsingContext    =    JsonReadContext.createRootContext(null);    JsonReadContext  ctxt  =  JsonReadContext.createRootContext(null);	  	compilable	  [FE]  JsonParseException  	94	8	add
183	[BUG]  [BUGGY]  _reportInvalidEOFInValue(numStr,  buf,  offset,  len);  [CE]  no  suitable  method  found  for  _reportInvalidEOFInValue(String,char[],int,int)  [FE]              JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalidEOFInValue(numStr,  buf,  offset,  len);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportInvalidEOFInValue(numStr,  buf,  offset,  len);	  _reportInvalidEOFInValue(buf,    offset,    len);    	non-compiled	[CE]  no  suitable  method  found  for  _reportInvalidEOFInValue(String,char[],int,int)	82	None	replace
184	[BUG]  [BUGGY]  _reportInvalidEOFInValue(numStr,  buffer,  offset,  len);  [CE]  cannot  find  symbol  buffer  [FE]                JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalidEOFInValue(numStr,  buffer,  offset,  len);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportInvalidEOFInValue(numStr,  buffer,  offset,  len);	  _reportInvalidEOFInValue(buf,    offset,    len);    	non-compiled	[CE]  cannot  find  symbol  buffer	82	None	replace
185	[BUG]  [BUGGY]  ||(expType  ==  NR_INT)&&  expType.equals(NR_BIGINT))  {  _numberInt  =  Long.parseLong(numStr);  _num  [CE]  illegal  start  of  expression  [FE]                JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  ||(expType  ==  NR_INT)&&  expType.equals(NR_BIGINT))  {  _numberInt  =  Long.parseLong(numStr);  _num  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	||(expType  ==  NR_INT)&&  expType.equals(NR_BIGINT))  {  _numberInt  =  Long.parseLong(numStr);  _num	  _throwInternal();    ||(expType    ==    NR_INT)&&    expType.equals(NR_BIGINT))    {    _numberInt    =    Long.parseLong(numStr);    _num    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
186	[BUG]  [BUGGY]  ||(expType  ==  NR_OBJECT)&&  expType.equals(NR_BIGINT))  {  _numberInt  =  Long.parseLong(numStr);  [CE]  illegal  start  of  expression  [FE]                  JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  ||(expType  ==  NR_OBJECT)&&  expType.equals(NR_BIGINT))  {  _numberInt  =  Long.parseLong(numStr);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	||(expType  ==  NR_OBJECT)&&  expType.equals(NR_BIGINT))  {  _numberInt  =  Long.parseLong(numStr);	  _throwInternal();    ||(expType    ==    NR_INT)&&    expType.equals(NR_BIGINT))    {    _numberInt    =    Long.parseLong(numStr);    _num    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
187	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]        JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportTooLongIntegral(NR_BIGINT,  numStr);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	add	_reportTooLongIntegral(NR_BIGINT,  numStr);	  _reportTooLongIntegral(NR_INTEGER,    numStr);    	compilable	  [FE]  JsonParseException  	81	8	replace
188	[BUG]  [BUGGY]  _reportTooLongIntegral(NR_BIGINT,  numStr);  [FE]  JsonParseException  [FE]        JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportTooLongIntegral(NR_BIGINT,  numStr);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportTooLongIntegral(NR_BIGINT,  numStr);	  _reportTooLongIntegral(NR_INTEGER,    numStr);    	compilable	  [FE]  JsonParseException  	81	8	replace
189	[BUG]  [BUGGY]  _reportTooLongIntegral(NR_INT,  expType);  [CE]  method  _reportTooLongIntegral  in  class  ParserBase  cannot  be  applied  to  given  types;  [FE]          JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportTooLongIntegral(NR_INT,  expType);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportTooLongIntegral(NR_INT,  expType);	  _reportTooLongIntegral(NR_INTEGER,    numStr);    	non-compiled	[CE]  method  _reportTooLongIntegral  in  class  ParserBase  cannot  be  applied  to  given  types;	81	None	replace
190	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalidEOF(numStr);  _reportInvalidEOF(numStr);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	add	_reportInvalidEOF(numStr);    _reportInvalidEOF(numStr);	  	compilable	  [FE]  JsonParseException  	71	8	add
191	[BUG]  [BUGGY]  _reportInvalidEOF(numStr);  _reportInvalidEOF(numStr);  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalidEOF(numStr);  _reportInvalidEOF(numStr);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportInvalidEOF(numStr);    _reportInvalidEOF(numStr);	  	compilable	  [FE]  JsonParseException  	71	8	add
192	[BUG]  [BUGGY]  _reportInvalidEOF(numStr);  ||(expType  ==  NR_INT)&&  expType!=  NR_BIGINT)  {  _reportInvalidEOF(numStr);  [CE]  illegal  start  of  expression  [FE]      JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalidEOF(numStr);  ||(expType  ==  NR_INT)&&  expType!=  NR_BIGINT)  {  _reportInvalidEOF(numStr);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportInvalidEOF(numStr);    ||(expType  ==  NR_INT)&&  expType!=  NR_BIGINT)  {  _reportInvalidEOF(numStr);	  	non-compiled	[CE]  illegal  start  of  expression	71	None	add
193	[BUG]  [BUGGY]  _reportInvalidEOF(numStr);  ||(expType  ==  NR_INT)&&  expType!=  NR_LONG)  {  _reportInvalidEOF(numStr);  [CE]  illegal  start  of  expression  [FE]        JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalidEOF(numStr);  ||(expType  ==  NR_INT)&&  expType!=  NR_LONG)  {  _reportInvalidEOF(numStr);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportInvalidEOF(numStr);    ||(expType  ==  NR_INT)&&  expType!=  NR_LONG)  {  _reportInvalidEOF(numStr);	  	non-compiled	[CE]  illegal  start  of  expression	71	None	add
194	[BUG]  [BUGGY]  _reportInvalidEOF(numStr);  ||(expType  ==  NR_INT)&&  expType  ==  NR_BIGINT)  {  _reportInvalidEOF(numStr);  [CE]  illegal  start  of  expression  [FE]          JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalidEOF(numStr);  ||(expType  ==  NR_INT)&&  expType  ==  NR_BIGINT)  {  _reportInvalidEOF(numStr);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportInvalidEOF(numStr);    ||(expType  ==  NR_INT)&&  expType  ==  NR_BIGINT)  {  _reportInvalidEOF(numStr);	  	non-compiled	[CE]  illegal  start  of  expression	71	None	add
195	[BUG]  [BUGGY]  _reportInvalidEOF(numStr);  ||(expType  ==  NR_INT)&&  expType!=  NR_BIGINT)  {  _reportInvalidEOF(numStr);  }  [CE]  illegal  start  of  expression  [FE]            JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalidEOF(numStr);  ||(expType  ==  NR_INT)&&  expType!=  NR_BIGINT)  {  _reportInvalidEOF(numStr);  }  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportInvalidEOF(numStr);    ||(expType  ==  NR_INT)&&  expType!=  NR_BIGINT)  {  _reportInvalidEOF(numStr);  }	  	non-compiled	[CE]  illegal  start  of  expression	71	None	add
196	[BUG]  [BUGGY]  _reportUnsupportedOperation();    JsonReadContext  ctxt  =  _parsingContext.createChildObjectContext(-1,  -1);  _reportUnsupportedOperation();  _reportUnsupportedOperation();  JsonReadContext  ctxt  =  _parsingContext.createChildObjectContext(-1,  -1);  _reportUnsupportedOperation();  [CE]  variable  ctxt  is  already  defined  in  method  _parseSlowInt(int)  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportUnsupportedOperation();    JsonReadContext  ctxt  =  _parsingContext.createChildObjectContext(-1,  -1);  _reportUnsupportedOperation();  _reportUnsupportedOperation();  JsonReadContext  ctxt  =  _parsingContext.createChildObjectContext(-1,  -1);  _reportUnsupportedOperation();  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportUnsupportedOperation();        JsonReadContext    ctxt    =    _parsingContext.createChildObjectContext(-1,    -1);    _reportUnsupportedOperation();    _reportUnsupportedOperation();  JsonReadContext  ctxt  =  _parsingContext.createChildObjectContext(-1,  -1);  _reportUnsupportedOperation();	  	non-compiled	[CE]  variable  ctxt  is  already  defined  in  method  _parseSlowInt(int)	58	None	add
197	[BUG]  [BUGGY]  _reportUnsupportedOperation();    JsonReadContext  ctxt  =  _parsingContext.createChildObjectContext(-1,  -1);  _reportUnsupportedOperation();  _reportUnsupportedOperation();  JsonReadContext  ctxt  =  _parsingContext.createChildObjectContext(-1,  -1);  [CE]  variable  ctxt  is  already  defined  in  method  _parseSlowInt(int)  [FE]      JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportUnsupportedOperation();    JsonReadContext  ctxt  =  _parsingContext.createChildObjectContext(-1,  -1);  _reportUnsupportedOperation();  _reportUnsupportedOperation();  JsonReadContext  ctxt  =  _parsingContext.createChildObjectContext(-1,  -1);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportUnsupportedOperation();        JsonReadContext    ctxt    =    _parsingContext.createChildObjectContext(-1,    -1);    _reportUnsupportedOperation();    _reportUnsupportedOperation();  JsonReadContext  ctxt  =  _parsingContext.createChildObjectContext(-1,  -1);	  	non-compiled	[CE]  variable  ctxt  is  already  defined  in  method  _parseSlowInt(int)	58	None	add
198	[BUG]  [BUGGY]  _reportUnsupportedOperation();    JsonReadContext  ctxt  =  _parsingContext.createChildObjectContext(-1,  -1);  _reportUnsupportedOperation();  JsonReadContext  ctxt  =  _parsingContext.createChildObjectContext(-1,  -1);  _reportUnsupportedOperation();  [CE]  variable  ctxt  is  already  defined  in  method  _parseSlowInt(int)  [FE]        JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportUnsupportedOperation();    JsonReadContext  ctxt  =  _parsingContext.createChildObjectContext(-1,  -1);  _reportUnsupportedOperation();  JsonReadContext  ctxt  =  _parsingContext.createChildObjectContext(-1,  -1);  _reportUnsupportedOperation();  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportUnsupportedOperation();        JsonReadContext    ctxt    =    _parsingContext.createChildObjectContext(-1,    -1);    _reportUnsupportedOperation();    JsonReadContext  ctxt  =  _parsingContext.createChildObjectContext(-1,  -1);  _reportUnsupportedOperation();	  	non-compiled	[CE]  variable  ctxt  is  already  defined  in  method  _parseSlowInt(int)	58	None	add
199	[BUG]  [BUGGY]  _reportUnsupportedOperation();    JsonReadContext  ctxt  =  _parsingContext.createChildObjectContext(-1,  -1);  _reportUnsupportedOperation();  _reportUnsupportedOperation();  JsonReadContext  ctxt  =  _parsingContext.createChildArrayContext(-1,  -1);  _reportUnsupportedOperation();  [CE]  variable  ctxt  is  already  defined  in  method  _parseSlowInt(int)  [FE]          JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportUnsupportedOperation();    JsonReadContext  ctxt  =  _parsingContext.createChildObjectContext(-1,  -1);  _reportUnsupportedOperation();  _reportUnsupportedOperation();  JsonReadContext  ctxt  =  _parsingContext.createChildArrayContext(-1,  -1);  _reportUnsupportedOperation();  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportUnsupportedOperation();        JsonReadContext    ctxt    =    _parsingContext.createChildObjectContext(-1,    -1);    _reportUnsupportedOperation();    _reportUnsupportedOperation();  JsonReadContext  ctxt  =  _parsingContext.createChildArrayContext(-1,  -1);  _reportUnsupportedOperation();	  	non-compiled	[CE]  variable  ctxt  is  already  defined  in  method  _parseSlowInt(int)	58	None	add
200	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _parsingContext.setCurrentName(numStr);  _parsingContext.setCurrentName(numStr);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	add	_parsingContext.setCurrentName(numStr);    _parsingContext.setCurrentName(numStr);	  	compilable	  [FE]  JsonParseException  	96	8	add
201	[BUG]  [BUGGY]  _parsingContext.setCurrentName(numStr);  _parsingContext.setCurrentName(numStr);  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _parsingContext.setCurrentName(numStr);  _parsingContext.setCurrentName(numStr);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_parsingContext.setCurrentName(numStr);    _parsingContext.setCurrentName(numStr);	  	compilable	  [FE]  JsonParseException  	96	8	add
202	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _parsingContext.setCurrentName(numStr);  _parsingContext.setCurrentName(null);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	add	_parsingContext.setCurrentName(numStr);    _parsingContext.setCurrentName(null);	  	compilable	  [FE]  JsonParseException  	96	8	add
203	[BUG]  [BUGGY]  _parsingContext.setCurrentName(numStr);  _parsingContext.setCurrentName(null);  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _parsingContext.setCurrentName(numStr);  _parsingContext.setCurrentName(null);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_parsingContext.setCurrentName(numStr);    _parsingContext.setCurrentName(null);	  	compilable	  [FE]  JsonParseException  	96	8	add
204	[BUG]  [BUGGY]  _parsingContext.setCurrentName(numStr);  parsingContext.setCurrentName(numStr);  [CE]  cannot  find  symbol  parsingContext  [FE]        JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _parsingContext.setCurrentName(numStr);  parsingContext.setCurrentName(numStr);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_parsingContext.setCurrentName(numStr);    parsingContext.setCurrentName(numStr);	  	non-compiled	[CE]  cannot  find  symbol  parsingContext	96	None	add
205	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalidEOF();  _reportInvalidEOF();  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	add	_reportInvalidEOF();    _reportInvalidEOF();	  	compilable	  [FE]  JsonParseException  	55	8	add
206	[BUG]  [BUGGY]  _reportInvalidEOF();  _reportInvalidEOF();  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalidEOF();  _reportInvalidEOF();  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportInvalidEOF();    _reportInvalidEOF();	  	compilable	  [FE]  JsonParseException  	55	8	add
207	[BUG]  [BUGGY]  _reportInvalidEOF();  _reportInvalidEOF();  }  else  if((  expType  ==  NR_INT)||(expType  ==  NR_LONG))  {  _numberInt  =  Long.parseLong(numStr);  _numTypesValid  =  NR_  [CE]  ';'  expected  [FE]      JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalidEOF();  _reportInvalidEOF();  }  else  if((  expType  ==  NR_INT)||(expType  ==  NR_LONG))  {  _numberInt  =  Long.parseLong(numStr);  _numTypesValid  =  NR_  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportInvalidEOF();    _reportInvalidEOF();  }  else  if((  expType  ==  NR_INT)||(expType  ==  NR_LONG))  {  _numberInt  =  Long.parseLong(numStr);  _numTypesValid  =  NR_	  	non-compiled	[CE]  ';'  expected	55	None	add
208	[BUG]  [BUGGY]  _reportInvalidEOF();  _reportInvalidEOF();  }  else  if((  expType  ==  NR_INT)||(expType  ==  NR_LONG))  {  _numberInt  =  Long.parseLong(numStr);  _numTypesValid  =  NR_B  [CE]  ';'  expected  [FE]        JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalidEOF();  _reportInvalidEOF();  }  else  if((  expType  ==  NR_INT)||(expType  ==  NR_LONG))  {  _numberInt  =  Long.parseLong(numStr);  _numTypesValid  =  NR_B  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportInvalidEOF();    _reportInvalidEOF();  }  else  if((  expType  ==  NR_INT)||(expType  ==  NR_LONG))  {  _numberInt  =  Long.parseLong(numStr);  _numTypesValid  =  NR_B	  	non-compiled	[CE]  ';'  expected	55	None	add
209	[BUG]  [BUGGY]  _numberInput.inLongRange(buf,  offset,  len);  _numberNegative  =  false;  [CE]  cannot  find  symbol  _numberInput  [FE]          JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _numberInput.inLongRange(buf,  offset,  len);  _numberNegative  =  false;  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_numberInput.inLongRange(buf,  offset,  len);  _numberNegative  =  false;	  _throwInternal();    if(_throwInternal)    {    _throwInternal();    }    else    {    _numberInput.inLongRange(buf,    offset,    len);    _numberNegative    =    false;    }    	non-compiled	[CE]  cannot  find  symbol  _numberInput	113	None	replace
210	[BUG]  [BUGGY]  _numberInput.inLongRange(buf,  offset,  len);  [CE]  cannot  find  symbol  _numberInput  [FE]            JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _numberInput.inLongRange(buf,  offset,  len);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_numberInput.inLongRange(buf,  offset,  len);	  _throwInternal();    if(_throwInternal)    {    _throwInternal();    }    else    {    _numberInput.inLongRange(buf,    offset,    len);    _numberNegative    =    false;    }    	non-compiled	[CE]  cannot  find  symbol  _numberInput	113	None	replace
211	[BUG]  [BUGGY]  _numberInput.inLongRange(buf,  offset,  len);  _numberNegative  =  true;  [CE]  cannot  find  symbol  _numberInput  [FE]              JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _numberInput.inLongRange(buf,  offset,  len);  _numberNegative  =  true;  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_numberInput.inLongRange(buf,  offset,  len);  _numberNegative  =  true;	  _throwInternal();    if(_throwInternal)    {    _throwInternal();    }    else    {    _numberInput.inLongRange(buf,    offset,    len);    _numberNegative    =    false;    }    	non-compiled	[CE]  cannot  find  symbol  _numberInput	113	None	replace
212	[BUG]  [BUGGY]  _numberInput.inLongRange(buf,  offset,  len,  _numberNegative);  [CE]  cannot  find  symbol  _numberInput  [FE]              JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _numberInput.inLongRange(buf,  offset,  len,  _numberNegative);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_numberInput.inLongRange(buf,  offset,  len,  _numberNegative);	  _throwInternal();    if(_throwInternal()    >    0)    {    _throwInternal();    }    else    {    _numberInput.inLongRange(buf,    offset,    len,    _numberNegative);    }    	non-compiled	[CE]  cannot  find  symbol  _numberInput	115	None	replace
213	[BUG]  [BUGGY]  _numberNegative  =  NumberInput.parseInt(numStr);  [CE]  incompatible  types  [FE]                JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _numberNegative  =  NumberInput.parseInt(numStr);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_numberNegative  =  NumberInput.parseInt(numStr);	  _throwInternal();    if(_throwInternal()    >    0)    {    _throwInternal();    }    else    {    _numberInput.inLongRange(buf,    offset,    len,    _numberNegative);    }    	non-compiled	[CE]  incompatible  types	115	None	replace
214	[BUG]  [BUGGY]  _reportInvalidLong(numStr,  expType,  NR_INT,  len);  [CE]  cannot  find  symbol  [FE]            JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalidLong(numStr,  expType,  NR_INT,  len);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportInvalidLong(numStr,  expType,  NR_INT,  len);	  _reportInvalidLong(numStr,    expType,    NR_INT);    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
215	[BUG]  [BUGGY]  _reportInvalidLong(numStr,  expType,  NR_BIGINT);  [CE]  cannot  find  symbol  [FE]              JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalidLong(numStr,  expType,  NR_BIGINT);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportInvalidLong(numStr,  expType,  NR_BIGINT);	  _reportInvalidLong(numStr,    expType,    NR_INT);    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
216	[BUG]  [BUGGY]  _reportInvalidLong(numStr,  expType,  NR_INTEGER);  [CE]  cannot  find  symbol  NR_INTEGER  [FE]                JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalidLong(numStr,  expType,  NR_INTEGER);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportInvalidLong(numStr,  expType,  NR_INTEGER);	  _reportInvalidLong(numStr,    expType,    NR_INT);    	non-compiled	[CE]  cannot  find  symbol  NR_INTEGER	44	None	replace
217	[BUG]  [BUGGY]  _reportInvalidLong(numStr,  expType,  NR_INT,  _numberNegative);  [CE]  cannot  find  symbol  [FE]                  JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalidLong(numStr,  expType,  NR_INT,  _numberNegative);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportInvalidLong(numStr,  expType,  NR_INT,  _numberNegative);	  _reportInvalidLong(numStr,    expType,    NR_INT);    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
218	[BUG]  [BUGGY]  _reportInvalidNumber(NR_INT);  [CE]  cannot  find  symbol  [FE]                JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalidNumber(NR_INT);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportInvalidNumber(NR_INT);	  _reportInvalidNumber(numStr);    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
219	[BUG]  [BUGGY]  _reportInvalidNumber(NR_INT,  numStr);  [CE]  cannot  find  symbol  [FE]                  JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalidNumber(NR_INT,  numStr);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportInvalidNumber(NR_INT,  numStr);	  _reportInvalidNumber(numStr);    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
220	[BUG]  [BUGGY]  _reportInvalidLong(NR_INT,  numStr,  expType);  [CE]  cannot  find  symbol  [FE]          JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalidLong(NR_INT,  numStr,  expType);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportInvalidLong(NR_INT,  numStr,  expType);	  _reportInvalidLong(NR_INT,    numStr);    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
221	[BUG]  [BUGGY]  _reportInvalidLong(NR_INT,  _numberNegative);  [CE]  cannot  find  symbol  [FE]            JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalidLong(NR_INT,  _numberNegative);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportInvalidLong(NR_INT,  _numberNegative);	  _reportInvalidLong(NR_INT,    numStr);    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
222	[BUG]  [BUGGY]  _parseInt(numStr);  [CE]  cannot  find  symbol  [FE]          JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _parseInt(numStr);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_parseInt(numStr);	  _parseInt();    	non-compiled	[CE]  cannot  find  symbol	86	None	replace
223	[BUG]  [BUGGY]  _reportError(buf,  NR_INT,  numStr);  [CE]  no  suitable  method  found  for  _reportError(char[],int,String)  [FE]        JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportError(buf,  NR_INT,  numStr);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportError(buf,  NR_INT,  numStr);	  _reportError(NR_INT,    numStr);    	non-compiled	[CE]  no  suitable  method  found  for  _reportError(char[],int,String)	1	None	replace
224	[BUG]  [BUGGY]  _reportError(buf,  _numberInputRow,  numStr);  [CE]  cannot  find  symbol  _numberInputRow  [FE]          JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportError(buf,  _numberInputRow,  numStr);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportError(buf,  _numberInputRow,  numStr);	  _reportError(NR_INT,    numStr);    	non-compiled	[CE]  cannot  find  symbol  _numberInputRow	1	None	replace
225	[BUG]  [BUGGY]  _reportError(buf,  _numberNegative,  NR_INT);  [CE]  no  suitable  method  found  for  _reportError(char[],boolean,int)  [FE]            JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportError(buf,  _numberNegative,  NR_INT);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportError(buf,  _numberNegative,  NR_INT);	  _reportError(NR_INT,    numStr);    	non-compiled	[CE]  no  suitable  method  found  for  _reportError(char[],boolean,int)	1	None	replace
226	[BUG]  [BUGGY]  _reportError(buf,  _numberInputPtr,  numStr);  [CE]  cannot  find  symbol  _numberInputPtr  [FE]              JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportError(buf,  _numberInputPtr,  numStr);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportError(buf,  _numberInputPtr,  numStr);	  _reportError(NR_INT,    numStr);    	non-compiled	[CE]  cannot  find  symbol  _numberInputPtr	1	None	replace
227	[BUG]  [BUGGY]  if(_numberNegative  >  0)  {  _throwInternal();  }  [CE]  bad  operand  types  for  binary  operator  '>'  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  if(_numberNegative  >  0)  {  _throwInternal();  }  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	if(_numberNegative  >  0)  {  _throwInternal();  }	  _throwInternal();    _throwInternal();    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>'	48	None	replace
228	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  if(_numberNegative)  {  _throwInternal();  }  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	add	if(_numberNegative)  {  _throwInternal();  }	  _throwInternal();    _throwInternal();    	compilable	  [FE]  JsonParseException  	48	8	replace
229	[BUG]  [BUGGY]  if(_numberNegative)  {  _throwInternal();  }  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  if(_numberNegative)  {  _throwInternal();  }  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	if(_numberNegative)  {  _throwInternal();  }	  _throwInternal();    _throwInternal();    	compilable	  [FE]  JsonParseException  	48	8	replace
230	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportError(   "Missing  NR_INT  value:   "  +  numStr);  _reportError( "Missing  NR_INT  value:   "  +  numStr);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	add	_reportError(   "Missing    NR_INT    value:   "    +    numStr);    _reportError( "Missing  NR_INT  value:   "  +  numStr);	  	compilable	  [FE]  JsonParseException  	36	8	add
231	[BUG]  [BUGGY]  _reportError(   "Missing  NR_INT  value:   "  +  numStr);  _reportError( "Missing  NR_INT  value:   "  +  numStr);  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportError(   "Missing  NR_INT  value:   "  +  numStr);  _reportError( "Missing  NR_INT  value:   "  +  numStr);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportError(   "Missing    NR_INT    value:   "    +    numStr);    _reportError( "Missing  NR_INT  value:   "  +  numStr);	  	compilable	  [FE]  JsonParseException  	36	8	add
232	[BUG]  [BUGGY]  _reportInvalidLong(numStr,  len);  [CE]  cannot  find  symbol  [FE]                JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalidLong(numStr,  len);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportInvalidLong(numStr,  len);	  _reportInvalidLong(len,    numStr);    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
233	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]          JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(-1,  expType);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	add	_parsingContext  =  _parsingContext.createChildObjectContext(-1,  expType);	  _reportUnsupportedOperation();    JsonReadContext    ctxt    =    getCurrentContext();    _parsingContext    =    _parsingContext.createChildObjectContext(-1,    expType);    	compilable	  [FE]  JsonParseException  	109	8	replace
234	[BUG]  [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(-1,  expType);  [FE]  JsonParseException  [FE]          JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(-1,  expType);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_parsingContext  =  _parsingContext.createChildObjectContext(-1,  expType);	  _reportUnsupportedOperation();    JsonReadContext    ctxt    =    getCurrentContext();    _parsingContext    =    _parsingContext.createChildObjectContext(-1,    expType);    	compilable	  [FE]  JsonParseException  	109	8	replace
235	[BUG]  [BUGGY]  nex  =  getCurrentContext();  _parsingContext  =  _parsingContext.createChildObjectContext(-1,  expType);  [CE]  cannot  find  symbol  nex  [FE]            JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  nex  =  getCurrentContext();  _parsingContext  =  _parsingContext.createChildObjectContext(-1,  expType);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	nex  =  getCurrentContext();  _parsingContext  =  _parsingContext.createChildObjectContext(-1,  expType);	  _reportUnsupportedOperation();    JsonReadContext    ctxt    =    getCurrentContext();    _parsingContext    =    _parsingContext.createChildObjectContext(-1,    expType);    	non-compiled	[CE]  cannot  find  symbol  nex	109	None	replace
236	[BUG]  [BUGGY]  _parsingContext  =  getCurrentContext().createChildObjectContext(-1,  expType);  [CE]  cannot  find  symbol  [FE]              JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _parsingContext  =  getCurrentContext().createChildObjectContext(-1,  expType);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_parsingContext  =  getCurrentContext().createChildObjectContext(-1,  expType);	  _reportUnsupportedOperation();    JsonReadContext    ctxt    =    getCurrentContext();    _parsingContext    =    _parsingContext.createChildObjectContext(-1,    expType);    	non-compiled	[CE]  cannot  find  symbol	109	None	replace
237	[BUG]  [BUGGY]  _reportIntegral(NR_LONG,  NR_INT);  [CE]  cannot  find  symbol  [FE]            JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportIntegral(NR_LONG,  NR_INT);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportIntegral(NR_LONG,  NR_INT);	  _reportIntegral(NR_LONG,    numStr);    	non-compiled	[CE]  cannot  find  symbol	101	None	replace
238	[BUG]  [BUGGY]  _reportIntegral(NR_LONG,  numStr,  expType);  [CE]  cannot  find  symbol  [FE]              JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportIntegral(NR_LONG,  numStr,  expType);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportIntegral(NR_LONG,  numStr,  expType);	  _reportIntegral(NR_LONG,    numStr);    	non-compiled	[CE]  cannot  find  symbol	101	None	replace
239	[BUG]  [BUGGY]  _throwInternal();    JsonReadContext  ctxt  =  _parsingContext.createChildObjectContext(-1,  -1);  _throwInternal();  JsonReadContext  ctxt  =  _parsingContext.createChildObjectContext(-1,  -1);  [CE]  variable  ctxt  is  already  defined  in  method  _parseSlowInt(int)  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _throwInternal();    JsonReadContext  ctxt  =  _parsingContext.createChildObjectContext(-1,  -1);  _throwInternal();  JsonReadContext  ctxt  =  _parsingContext.createChildObjectContext(-1,  -1);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_throwInternal();        JsonReadContext    ctxt    =    _parsingContext.createChildObjectContext(-1,    -1);    _throwInternal();  JsonReadContext  ctxt  =  _parsingContext.createChildObjectContext(-1,  -1);	  	non-compiled	[CE]  variable  ctxt  is  already  defined  in  method  _parseSlowInt(int)	64	None	add
240	[BUG]  [BUGGY]  _throwInternal();    JsonReadContext  ctxt  =  _parsingContext.createChildObjectContext(-1,  -1);  _throwInternal();  JsonReadContext  ctxt  =  _parsingContext.createChildArrayContext(-1,  -1);  [CE]  variable  ctxt  is  already  defined  in  method  _parseSlowInt(int)  [FE]      JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _throwInternal();    JsonReadContext  ctxt  =  _parsingContext.createChildObjectContext(-1,  -1);  _throwInternal();  JsonReadContext  ctxt  =  _parsingContext.createChildArrayContext(-1,  -1);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_throwInternal();        JsonReadContext    ctxt    =    _parsingContext.createChildObjectContext(-1,    -1);    _throwInternal();  JsonReadContext  ctxt  =  _parsingContext.createChildArrayContext(-1,  -1);	  	non-compiled	[CE]  variable  ctxt  is  already  defined  in  method  _parseSlowInt(int)	64	None	add
241	[BUG]  [BUGGY]  _throwInternal();    JsonReadContext  ctxt  =  _parsingContext.createChildObjectContext(-1,  -1);  JsonReadContext  ctxt  =  _parsingContext.createChildObjectContext(-1,  -1);  [CE]  variable  ctxt  is  already  defined  in  method  _parseSlowInt(int)  [FE]        JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _throwInternal();    JsonReadContext  ctxt  =  _parsingContext.createChildObjectContext(-1,  -1);  JsonReadContext  ctxt  =  _parsingContext.createChildObjectContext(-1,  -1);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_throwInternal();        JsonReadContext    ctxt    =    _parsingContext.createChildObjectContext(-1,    -1);    JsonReadContext  ctxt  =  _parsingContext.createChildObjectContext(-1,  -1);	  	non-compiled	[CE]  variable  ctxt  is  already  defined  in  method  _parseSlowInt(int)	64	None	add
242	[BUG]  [BUGGY]  _reportInvalidNumber(numStr,  expType,  NR_INT);  [CE]  cannot  find  symbol  [FE]              JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalidNumber(numStr,  expType,  NR_INT);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportInvalidNumber(numStr,  expType,  NR_INT);	  _reportInvalidNumber(numStr,    expType);    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
243	[BUG]  [BUGGY]  _reportInvalidNumber(numStr,  NR_INT);  [CE]  cannot  find  symbol  [FE]                JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalidNumber(numStr,  NR_INT);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportInvalidNumber(numStr,  NR_INT);	  _reportInvalidNumber(numStr,    expType);    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
244	[BUG]  [BUGGY]  parseLongIntegral(NR_INT,  numStr);  [CE]  cannot  find  symbol  [FE]        JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  parseLongIntegral(NR_INT,  numStr);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	parseLongIntegral(NR_INT,  numStr);	  _reportTooLongIntegral(NR_INT,    numStr);    parseLongIntegral(NR_INT,    numStr);    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
245	[BUG]  [BUGGY]  _parseLongIntegral(NR_INT,  numStr);  [CE]  cannot  find  symbol  [FE]          JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _parseLongIntegral(NR_INT,  numStr);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_parseLongIntegral(NR_INT,  numStr);	  _reportTooLongIntegral(NR_INT,    numStr);    parseLongIntegral(NR_INT,    numStr);    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
246	[BUG]  [BUGGY]  null  =  _parsingContext.getCurrentToken();  _throwInternal();  [CE]  unexpected  type  [FE]        JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  null  =  _parsingContext.getCurrentToken();  _throwInternal();  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	null  =  _parsingContext.getCurrentToken();  _throwInternal();	  _throwInternal();    JsonParseException    p    =    _parsingContext.getCurrentToken();    _throwInternal();    	non-compiled	[CE]  unexpected  type	63	None	replace
247	[BUG]  [BUGGY]  null  =  _parsingContext.getCurrentToken();  [CE]  unexpected  type  [FE]          JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  null  =  _parsingContext.getCurrentToken();  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	null  =  _parsingContext.getCurrentToken();	  _throwInternal();    JsonParseException    p    =    _parsingContext.getCurrentToken();    _throwInternal();    	non-compiled	[CE]  unexpected  type	63	None	replace
248	[BUG]  [BUGGY]  _reportInvalidEOFInValue(buf,  offset,  numStr,  expType);  [CE]  no  suitable  method  found  for  _reportInvalidEOFInValue(char[],int,String,int)  [FE]              JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalidEOFInValue(buf,  offset,  numStr,  expType);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportInvalidEOFInValue(buf,  offset,  numStr,  expType);	  _reportInvalidEOFInValue(buf,    numStr,    expType);    	non-compiled	[CE]  no  suitable  method  found  for  _reportInvalidEOFInValue(char[],int,String,int)	38	None	replace
249	[BUG]  [BUGGY]  _reportInvalidEOFInValue(numStr,  expType,  buffer);  [CE]  cannot  find  symbol  buffer  [FE]                JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalidEOFInValue(numStr,  expType,  buffer);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportInvalidEOFInValue(numStr,  expType,  buffer);	  _reportInvalidEOFInValue(buf,    numStr,    expType);    	non-compiled	[CE]  cannot  find  symbol  buffer	38	None	replace
250	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportError(   "msg.invalid.internal.number   ");  _reportError( "msg.invalid.internal.number   ");  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	add	_reportError(   "msg.invalid.internal.number   ");    _reportError( "msg.invalid.internal.number   ");	  	compilable	  [FE]  JsonParseException  	21	8	add
251	[BUG]  [BUGGY]  _reportError(   "msg.invalid.internal.number   ");  _reportError( "msg.invalid.internal.number   ");  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportError(   "msg.invalid.internal.number   ");  _reportError( "msg.invalid.internal.number   ");  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportError(   "msg.invalid.internal.number   ");    _reportError( "msg.invalid.internal.number   ");	  	compilable	  [FE]  JsonParseException  	21	8	add
252	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportTooLongIntegral(NR_INT,    numStr);    _reportTooLongIntegral(NR_INT,  numStr);  _reportTooLongIntegral(NR_INT,  numStr);  _reportTooLongIntegral(NR_INT,  numStr);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	add	_reportTooLongIntegral(NR_INT,        numStr);        _reportTooLongIntegral(NR_INT,    numStr);    _reportTooLongIntegral(NR_INT,  numStr);  _reportTooLongIntegral(NR_INT,  numStr);	  	compilable	  [FE]  JsonParseException  	8	8	add
253	[BUG]  [BUGGY]  _reportTooLongIntegral(NR_INT,    numStr);    _reportTooLongIntegral(NR_INT,  numStr);  _reportTooLongIntegral(NR_INT,  numStr);  _reportTooLongIntegral(NR_INT,  numStr);  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportTooLongIntegral(NR_INT,    numStr);    _reportTooLongIntegral(NR_INT,  numStr);  _reportTooLongIntegral(NR_INT,  numStr);  _reportTooLongIntegral(NR_INT,  numStr);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportTooLongIntegral(NR_INT,        numStr);        _reportTooLongIntegral(NR_INT,    numStr);    _reportTooLongIntegral(NR_INT,  numStr);  _reportTooLongIntegral(NR_INT,  numStr);	  	compilable	  [FE]  JsonParseException  	8	8	add
254	[BUG]  [BUGGY]  _reportTooLongIntegral(NR_INT,    numStr);    _reportTooLongIntegral(NR_INT,  numStr);  _reportTooLongIntegral(NR_INT,  0);  _reportTooLongIntegral(NR_INT,  numStr);  [CE]  method  _reportTooLongIntegral  in  class  ParserBase  cannot  be  applied  to  given  types;  [FE]      JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportTooLongIntegral(NR_INT,    numStr);    _reportTooLongIntegral(NR_INT,  numStr);  _reportTooLongIntegral(NR_INT,  0);  _reportTooLongIntegral(NR_INT,  numStr);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportTooLongIntegral(NR_INT,        numStr);        _reportTooLongIntegral(NR_INT,    numStr);    _reportTooLongIntegral(NR_INT,  0);  _reportTooLongIntegral(NR_INT,  numStr);	  	non-compiled	[CE]  method  _reportTooLongIntegral  in  class  ParserBase  cannot  be  applied  to  given  types;	8	None	add
255	[BUG]  [BUGGY]  _reportTooLongIntegral(NR_INT,    numStr);    _reportTooLongIntegral(NR_INT,  numStr);  _reportTooLongIntegral(NR_INT,  numStr);  _reportTooLongIntegral(NR_INT,  0);  [CE]  method  _reportTooLongIntegral  in  class  ParserBase  cannot  be  applied  to  given  types;  [FE]        JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportTooLongIntegral(NR_INT,    numStr);    _reportTooLongIntegral(NR_INT,  numStr);  _reportTooLongIntegral(NR_INT,  numStr);  _reportTooLongIntegral(NR_INT,  0);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportTooLongIntegral(NR_INT,        numStr);        _reportTooLongIntegral(NR_INT,    numStr);    _reportTooLongIntegral(NR_INT,  numStr);  _reportTooLongIntegral(NR_INT,  0);	  	non-compiled	[CE]  method  _reportTooLongIntegral  in  class  ParserBase  cannot  be  applied  to  given  types;	8	None	add
256	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _throwInternal();    _throwInternal();  _throwInternal();  _throwInternal();  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	add	_throwInternal();        _throwInternal();    _throwInternal();  _throwInternal();	  	compilable	  [FE]  JsonParseException  	47	8	add
257	[BUG]  [BUGGY]  _throwInternal();    _throwInternal();  _throwInternal();  _throwInternal();  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _throwInternal();    _throwInternal();  _throwInternal();  _throwInternal();  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_throwInternal();        _throwInternal();    _throwInternal();  _throwInternal();	  	compilable	  [FE]  JsonParseException  	47	8	add
258	[BUG]  [BUGGY]  _throwInternal();    _throwInternal();  ||(expType  ==  NR_INT)&&  expType!=  NR_BIGINT)  {  _numberInt  =  Long.parseLong(numStr);  _throwInternal();  [CE]  illegal  start  of  expression  [FE]      JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _throwInternal();    _throwInternal();  ||(expType  ==  NR_INT)&&  expType!=  NR_BIGINT)  {  _numberInt  =  Long.parseLong(numStr);  _throwInternal();  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_throwInternal();        _throwInternal();    ||(expType  ==  NR_INT)&&  expType!=  NR_BIGINT)  {  _numberInt  =  Long.parseLong(numStr);  _throwInternal();	  	non-compiled	[CE]  illegal  start  of  expression	47	None	add
259	[BUG]  [BUGGY]  _throwInternal();    _throwInternal();  ||(expType  ==  NR_INT)&&  expType!=  NR_LONG)  {  _numberInternal();  _throwInternal();  [CE]  illegal  start  of  expression  [FE]        JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _throwInternal();    _throwInternal();  ||(expType  ==  NR_INT)&&  expType!=  NR_LONG)  {  _numberInternal();  _throwInternal();  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_throwInternal();        _throwInternal();    ||(expType  ==  NR_INT)&&  expType!=  NR_LONG)  {  _numberInternal();  _throwInternal();	  	non-compiled	[CE]  illegal  start  of  expression	47	None	add
260	[BUG]  [BUGGY]  _throwInternal();    _throwInternal();  ||(expType  ==  NR_INT)&&  expType!=  NR_UNKNOWN)  {  _throwInternal();  _throwInternal();  [CE]  illegal  start  of  expression  [FE]          JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _throwInternal();    _throwInternal();  ||(expType  ==  NR_INT)&&  expType!=  NR_UNKNOWN)  {  _throwInternal();  _throwInternal();  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_throwInternal();        _throwInternal();    ||(expType  ==  NR_INT)&&  expType!=  NR_UNKNOWN)  {  _throwInternal();  _throwInternal();	  	non-compiled	[CE]  illegal  start  of  expression	47	None	add
261	[BUG]  [BUGGY]  ||(expType  ==  NR_INT)&&  expType.inLongRange(buf,  offset,  len,  _numberNegative))  {  _reportUnsupportedOperation();  [CE]  illegal  start  of  expression  [FE]                JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  ||(expType  ==  NR_INT)&&  expType.inLongRange(buf,  offset,  len,  _numberNegative))  {  _reportUnsupportedOperation();  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	||(expType  ==  NR_INT)&&  expType.inLongRange(buf,  offset,  len,  _numberNegative))  {  _reportUnsupportedOperation();	  _reportUnsupportedOperation();    ||(expType    ==    NR_INT)&&    expType.inLongRange(buf,    offset,    len,    _numberNegative))    {    _reportUnsupportedOperation();    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
262	[BUG]  [BUGGY]  ||(expType  ==  NR_INT)&&  expType.inLongRange(numStr,  offset,  len,  _numberNegative))  {  _reportUnsupportedOperation();  [CE]  illegal  start  of  expression  [FE]                  JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  ||(expType  ==  NR_INT)&&  expType.inLongRange(numStr,  offset,  len,  _numberNegative))  {  _reportUnsupportedOperation();  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	||(expType  ==  NR_INT)&&  expType.inLongRange(numStr,  offset,  len,  _numberNegative))  {  _reportUnsupportedOperation();	  _reportUnsupportedOperation();    ||(expType    ==    NR_INT)&&    expType.inLongRange(buf,    offset,    len,    _numberNegative))    {    _reportUnsupportedOperation();    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
263	[BUG]  [BUGGY]  ||(expType  ==  NR_LONG)&&  expType.inLongRange(buf,  offset,  len,  _numberNegative))  {  _reportUnsupportedOperation();  [CE]  illegal  start  of  expression  [FE]                    JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  ||(expType  ==  NR_LONG)&&  expType.inLongRange(buf,  offset,  len,  _numberNegative))  {  _reportUnsupportedOperation();  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	||(expType  ==  NR_LONG)&&  expType.inLongRange(buf,  offset,  len,  _numberNegative))  {  _reportUnsupportedOperation();	  _reportUnsupportedOperation();    ||(expType    ==    NR_INT)&&    expType.inLongRange(buf,    offset,    len,    _numberNegative))    {    _reportUnsupportedOperation();    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
264	[BUG]  [BUGGY]  ||(expType  ==  NR_OBJECT)&&  expType.inLongRange(buf,  offset,  len,  _numberNegative))  {  _reportUnsupportedOperation();  [CE]  illegal  start  of  expression  [FE]                      JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  ||(expType  ==  NR_OBJECT)&&  expType.inLongRange(buf,  offset,  len,  _numberNegative))  {  _reportUnsupportedOperation();  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	||(expType  ==  NR_OBJECT)&&  expType.inLongRange(buf,  offset,  len,  _numberNegative))  {  _reportUnsupportedOperation();	  _reportUnsupportedOperation();    ||(expType    ==    NR_INT)&&    expType.inLongRange(buf,    offset,    len,    _numberNegative))    {    _reportUnsupportedOperation();    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
265	[BUG]  [BUGGY]  _reportIntegral(NR_INT,  expType,  numStr);  [CE]  cannot  find  symbol  [FE]            JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportIntegral(NR_INT,  expType,  numStr);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportIntegral(NR_INT,  expType,  numStr);	  _reportIntegral(NR_INT,    numStr,    expType);    	non-compiled	[CE]  cannot  find  symbol	41	None	replace
266	[BUG]  [BUGGY]  _reportIntegral(NR_INT,  numStr,  expType,  len);  [CE]  cannot  find  symbol  [FE]              JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportIntegral(NR_INT,  numStr,  expType,  len);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportIntegral(NR_INT,  numStr,  expType,  len);	  _reportIntegral(NR_INT,    numStr,    expType);    	non-compiled	[CE]  cannot  find  symbol	41	None	replace
267	[BUG]  [BUGGY]  _reportIntegral(NR_INT,  _numberNegative,  expType);  [CE]  cannot  find  symbol  [FE]                JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportIntegral(NR_INT,  _numberNegative,  expType);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportIntegral(NR_INT,  _numberNegative,  expType);	  _reportIntegral(NR_INT,    numStr,    expType);    	non-compiled	[CE]  cannot  find  symbol	41	None	replace
268	[BUG]  [BUGGY]  _reportIntegral(NR_INT,  numStr,  expType,  fractLen);  [CE]  cannot  find  symbol  fractLen  [FE]                  JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportIntegral(NR_INT,  numStr,  expType,  fractLen);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportIntegral(NR_INT,  numStr,  expType,  fractLen);	  _reportIntegral(NR_INT,    numStr,    expType);    	non-compiled	[CE]  cannot  find  symbol  fractLen	41	None	replace
269	[BUG]  [BUGGY]  _reportInvalidEOFInValue(numStr,  buf);  [CE]  no  suitable  method  found  for  _reportInvalidEOFInValue(String,char[])  [FE]              JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalidEOFInValue(numStr,  buf);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportInvalidEOFInValue(numStr,  buf);	  _reportInvalidEOFInValue(buf,    numStr);    	non-compiled	[CE]  no  suitable  method  found  for  _reportInvalidEOFInValue(String,char[])	84	None	replace
270	[BUG]  [BUGGY]  _reportInvalidEOFInValue(numStr,  buffer);  [CE]  cannot  find  symbol  buffer  [FE]                JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalidEOFInValue(numStr,  buffer);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportInvalidEOFInValue(numStr,  buffer);	  _reportInvalidEOFInValue(buf,    numStr);    	non-compiled	[CE]  cannot  find  symbol  buffer	84	None	replace
271	[BUG]  [BUGGY]  _reportInvalidLong(NR_LONG);  [CE]  cannot  find  symbol  [FE]              JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalidLong(NR_LONG);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportInvalidLong(NR_LONG);	  _reportInvalidLong(NR_INT);    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
272	[BUG]  [BUGGY]  _reportInvalidLong(NR_LONG,  expType);  [CE]  cannot  find  symbol  [FE]                JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalidLong(NR_LONG,  expType);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportInvalidLong(NR_LONG,  expType);	  _reportInvalidLong(NR_INT);    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
273	[BUG]  [BUGGY]  _reportInvalidLong(NR_BIGINT);  [CE]  cannot  find  symbol  [FE]                  JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalidLong(NR_BIGINT);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportInvalidLong(NR_BIGINT);	  _reportInvalidLong(NR_INT);    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
274	[BUG]  [BUGGY]  _numberInput.inLongRange(buf,  offset,  len,  _numberNegative);  return;  [CE]  cannot  find  symbol  _numberInput  [FE]        JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _numberInput.inLongRange(buf,  offset,  len,  _numberNegative);  return;  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_numberInput.inLongRange(buf,  offset,  len,  _numberNegative);  return;	  _throwInternal();    if(_throwInternal()    >    0)    {    _throwInternal();    }    else    {    _numberInput.inLongRange(buf,    offset,    len,    _numberNegative);    return;    }    	non-compiled	[CE]  cannot  find  symbol  _numberInput	112	None	replace
275	[BUG]  [BUGGY]  JsonReadContext  ctxt  =  _parsingContext.getCurrentContext();  [CE]  cannot  find  symbol  [FE]            JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  JsonReadContext  ctxt  =  _parsingContext.getCurrentContext();  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	JsonReadContext  ctxt  =  _parsingContext.getCurrentContext();	  _reportUnsupportedOperation();    JsonReadContext    ctxt    =    _parsingContext.getCurrentContext();    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
276	[BUG]  [BUGGY]  ||(expType  ==  NR_LONG))  {  _reportTooLongIntegral(NR_INT,  numStr);  [CE]  illegal  start  of  expression  [FE]          JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  ||(expType  ==  NR_LONG))  {  _reportTooLongIntegral(NR_INT,  numStr);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	||(expType  ==  NR_LONG))  {  _reportTooLongIntegral(NR_INT,  numStr);	  _reportTooLongIntegral(NR_INT,    numStr);    ||(expType    ==    NR_LONG))    {    _reportTooLongIntegral(NR_INT,    numStr);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
277	[BUG]  [BUGGY]  ||(expType  ==  NR_LONG))  {  _reportIntegral(NR_INT,  numStr);  [CE]  illegal  start  of  expression  [FE]            JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  ||(expType  ==  NR_LONG))  {  _reportIntegral(NR_INT,  numStr);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	||(expType  ==  NR_LONG))  {  _reportIntegral(NR_INT,  numStr);	  _reportTooLongIntegral(NR_INT,    numStr);    ||(expType    ==    NR_LONG))    {    _reportTooLongIntegral(NR_INT,    numStr);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
278	[BUG]  [BUGGY]  ||(expType  ==  NR_LONG))  {  _reportError(NR_INT,  numStr);  [CE]  illegal  start  of  expression  [FE]              JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  ||(expType  ==  NR_LONG))  {  _reportError(NR_INT,  numStr);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	||(expType  ==  NR_LONG))  {  _reportError(NR_INT,  numStr);	  _reportTooLongIntegral(NR_INT,    numStr);    ||(expType    ==    NR_LONG))    {    _reportTooLongIntegral(NR_INT,    numStr);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
279	[BUG]  [BUGGY]  _parseInt(buf,  offset,  len,  expType);  [CE]  cannot  find  symbol  [FE]            JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _parseInt(buf,  offset,  len,  expType);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_parseInt(buf,  offset,  len,  expType);	          _parseInt(buf,    offset,    len);    	non-compiled	[CE]  cannot  find  symbol	76	None	replace
280	[BUG]  [BUGGY]  _parseInt(buf,  offset,  len,  _numberNegative);  [CE]  cannot  find  symbol  [FE]              JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _parseInt(buf,  offset,  len,  _numberNegative);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_parseInt(buf,  offset,  len,  _numberNegative);	          _parseInt(buf,    offset,    len);    	non-compiled	[CE]  cannot  find  symbol	76	None	replace
281	[BUG]  [BUGGY]  _reportInvalidEOF(buf,  numStr,  expType);  [CE]  no  suitable  method  found  for  _reportInvalidEOF(char[],String,int)  [FE]            JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalidEOF(buf,  numStr,  expType);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportInvalidEOF(buf,  numStr,  expType);	  _reportInvalidEOF(numStr,    expType);    	non-compiled	[CE]  no  suitable  method  found  for  _reportInvalidEOF(char[],String,int)	117	None	replace
282	[BUG]  [BUGGY]  _reportInvalidEOF(buf,  offset,  len,  expType);  [CE]  no  suitable  method  found  for  _reportInvalidEOF(char[],int,int,int)  [FE]              JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalidEOF(buf,  offset,  len,  expType);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportInvalidEOF(buf,  offset,  len,  expType);	  _reportInvalidEOF(numStr,    expType);    	non-compiled	[CE]  no  suitable  method  found  for  _reportInvalidEOF(char[],int,int,int)	117	None	replace
283	[BUG]  [BUGGY]  _reportInvalidEOF(buf,  nex,  expType);  [CE]  cannot  find  symbol  nex  [FE]                JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalidEOF(buf,  nex,  expType);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportInvalidEOF(buf,  nex,  expType);	  _reportInvalidEOF(numStr,    expType);    	non-compiled	[CE]  cannot  find  symbol  nex	117	None	replace
284	[BUG]  [BUGGY]  _reportTooBigIntegral(NR_INT,  numStr);  [CE]  cannot  find  symbol  [FE]              JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportTooBigIntegral(NR_INT,  numStr);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportTooBigIntegral(NR_INT,  numStr);	  _reportTooLongIntegral(NR_INT,    numStr);    ||(expType    ==    NR_LONG))    {    _reportTooLongIntegral(NR_INT,    numStr);    }    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
285	[BUG]  [BUGGY]  _reportInvalidEOFInValue(NumberInput.inLongRange(buf,  offset,  len,  _numberNegative));  [CE]  no  suitable  method  found  for  _reportInvalidEOFInValue(boolean)  [FE]              JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalidEOFInValue(NumberInput.inLongRange(buf,  offset,  len,  _numberNegative));  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportInvalidEOFInValue(NumberInput.inLongRange(buf,  offset,  len,  _numberNegative));	  _reportInvalidEOFInValue(numStr);    	non-compiled	[CE]  no  suitable  method  found  for  _reportInvalidEOFInValue(boolean)	118	None	replace
286	[BUG]  [BUGGY]  _parseUnsupportedOperation();  [CE]  cannot  find  symbol  [FE]        JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _parseUnsupportedOperation();  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_parseUnsupportedOperation();	  _throwUnsupportedOperation();    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
287	[BUG]  [BUGGY]  _throwUnsupportedOperation(buf,  offset,  len);  [CE]  cannot  find  symbol  [FE]          JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _throwUnsupportedOperation(buf,  offset,  len);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_throwUnsupportedOperation(buf,  offset,  len);	  _throwUnsupportedOperation();    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
288	[BUG]  [BUGGY]  reportIntegral(NR_INT,  _numberNegative,  len);  [CE]  cannot  find  symbol  [FE]            JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  reportIntegral(NR_INT,  _numberNegative,  len);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	reportIntegral(NR_INT,  _numberNegative,  len);	  _reportIntegral(NR_INT,    _numberNegative);    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
289	[BUG]  [BUGGY]  _reportIntegral(NR_INT,  _numberNegative,  len);  [CE]  cannot  find  symbol  [FE]              JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportIntegral(NR_INT,  _numberNegative,  len);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportIntegral(NR_INT,  _numberNegative,  len);	  _reportIntegral(NR_INT,    _numberNegative);    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
290	[BUG]  [BUGGY]  _reportInvalidEOFInValue(buf,  expType,  numStr);  [CE]  no  suitable  method  found  for  _reportInvalidEOFInValue(char[],int,String)  [FE]            JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalidEOFInValue(buf,  expType,  numStr);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportInvalidEOFInValue(buf,  expType,  numStr);	  _reportInvalidEOFInValue(buf,    _numStr,    numStr);    	non-compiled	[CE]  no  suitable  method  found  for  _reportInvalidEOFInValue(char[],int,String)	116	None	replace
291	[BUG]  [BUGGY]  _reportInvalidEOFInValue(buf,  off,  numStr);  [CE]  cannot  find  symbol  off  [FE]              JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalidEOFInValue(buf,  off,  numStr);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportInvalidEOFInValue(buf,  off,  numStr);	  _reportInvalidEOFInValue(buf,    _numStr,    numStr);    	non-compiled	[CE]  cannot  find  symbol  off	116	None	replace
292	[BUG]  [BUGGY]  _reportTooLongIntegral(NR_INT,  numStr,  expType,  _inputPtr);  [CE]  method  _reportTooLongIntegral  in  class  ParserBase  cannot  be  applied  to  given  types;  [FE]              JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportTooLongIntegral(NR_INT,  numStr,  expType,  _inputPtr);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportTooLongIntegral(NR_INT,  numStr,  expType,  _inputPtr);	  _reportTooLongIntegral(NR_INT,    numStr,    expType);    	non-compiled	[CE]  method  _reportTooLongIntegral  in  class  ParserBase  cannot  be  applied  to  given  types;	4	None	replace
293	[BUG]  [BUGGY]  _reportIntegral(NR_BIGINT,  0);  [CE]  cannot  find  symbol  [FE]                JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportIntegral(NR_BIGINT,  0);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportIntegral(NR_BIGINT,  0);	  _reportIntegral(NR_INT,    0);    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
294	[BUG]  [BUGGY]  _reportIntegral(NR_LONG,  0);  [CE]  cannot  find  symbol  [FE]                  JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportIntegral(NR_LONG,  0);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportIntegral(NR_LONG,  0);	  _reportIntegral(NR_INT,    0);    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
295	[BUG]  [BUGGY]  _reportIntegral(NR_INTEGER,  0);  [CE]  cannot  find  symbol  NR_INTEGER  [FE]                    JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportIntegral(NR_INTEGER,  0);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportIntegral(NR_INTEGER,  0);	  _reportIntegral(NR_INT,    0);    	non-compiled	[CE]  cannot  find  symbol  NR_INTEGER	43	None	replace
296	[BUG]  [BUGGY]  reportIntegral(NR_INT,  _numberNegative);  [CE]  cannot  find  symbol  [FE]              JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  reportIntegral(NR_INT,  _numberNegative);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	reportIntegral(NR_INT,  _numberNegative);	  _reportIntegral(NR_INT,    _numberLong);    	non-compiled	[CE]  cannot  find  symbol	69	None	replace
297	[BUG]  [BUGGY]  _reportIntegral(NR_INTEGER,  _numberLong);  [CE]  cannot  find  symbol  NR_INTEGER  [FE]                JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportIntegral(NR_INTEGER,  _numberLong);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportIntegral(NR_INTEGER,  _numberLong);	  _reportIntegral(NR_INT,    _numberLong);    	non-compiled	[CE]  cannot  find  symbol  NR_INTEGER	69	None	replace
298	[BUG]  [BUGGY]  _reportIntegral(NR_BIGINT,  _numberLong);  [CE]  cannot  find  symbol  [FE]                  JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportIntegral(NR_BIGINT,  _numberLong);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportIntegral(NR_BIGINT,  _numberLong);	  _reportIntegral(NR_INT,    _numberLong);    	non-compiled	[CE]  cannot  find  symbol	69	None	replace
299	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]        JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _numberInt  =  Integer.parseInt(numStr);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	add	_numberInt  =  Integer.parseInt(numStr);	          _numberInt    =    Long.parseLong(numStr);    	compilable	  [FE]  JsonParseException  	29	8	replace
300	[BUG]  [BUGGY]  _numberInt  =  Integer.parseInt(numStr);  [FE]  JsonParseException  [FE]        JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _numberInt  =  Integer.parseInt(numStr);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_numberInt  =  Integer.parseInt(numStr);	          _numberInt    =    Long.parseLong(numStr);    	compilable	  [FE]  JsonParseException  	29	8	replace
301	[BUG]  [BUGGY]  ||(expType  ==  NR_INT)&&  expType!=  NR_BIGINT)  {  _numberInt  =  Integer.parseInt(numStr);  [CE]  illegal  start  of  expression  [FE]            JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  ||(expType  ==  NR_INT)&&  expType!=  NR_BIGINT)  {  _numberInt  =  Integer.parseInt(numStr);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	||(expType  ==  NR_INT)&&  expType!=  NR_BIGINT)  {  _numberInt  =  Integer.parseInt(numStr);	  _throwInternal();    ||(expType    ==    NR_INT)&&    expType!=    NR_BIGINT)    {    _numberInt    =    Long.parseLong(numStr);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
302	[BUG]  [BUGGY]  ||(expType  ==  NR_INT)&&  expType!=  NR_BIGINT)  {  _numberInt  =  Long.parseLong(numStr);  }  [CE]  illegal  start  of  expression  [FE]              JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  ||(expType  ==  NR_INT)&&  expType!=  NR_BIGINT)  {  _numberInt  =  Long.parseLong(numStr);  }  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	||(expType  ==  NR_INT)&&  expType!=  NR_BIGINT)  {  _numberInt  =  Long.parseLong(numStr);  }	  _throwInternal();    ||(expType    ==    NR_INT)&&    expType!=    NR_BIGINT)    {    _numberInt    =    Long.parseLong(numStr);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
303	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _parsingContext  =  JsonReadContext.createRootContext(null);  JsonReadContext  _parsingContext  =  JsonReadContext.createRootContext(null);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	add	_parsingContext    =    JsonReadContext.createRootContext(null);    JsonReadContext  _parsingContext  =  JsonReadContext.createRootContext(null);	  	compilable	  [FE]  JsonParseException  	94	8	add
304	[BUG]  [BUGGY]  _parsingContext  =  JsonReadContext.createRootContext(null);  JsonReadContext  _parsingContext  =  JsonReadContext.createRootContext(null);  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _parsingContext  =  JsonReadContext.createRootContext(null);  JsonReadContext  _parsingContext  =  JsonReadContext.createRootContext(null);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_parsingContext    =    JsonReadContext.createRootContext(null);    JsonReadContext  _parsingContext  =  JsonReadContext.createRootContext(null);	  	compilable	  [FE]  JsonParseException  	94	8	add
305	[BUG]  [BUGGY]  _parsingContext  =  JsonReadContext.createRootContext(null);  JsonReadContext  =  JsonReadContext.createRootContext(null);  [CE]  cannot  find  symbol  JsonReadContext  [FE]      JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _parsingContext  =  JsonReadContext.createRootContext(null);  JsonReadContext  =  JsonReadContext.createRootContext(null);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_parsingContext    =    JsonReadContext.createRootContext(null);    JsonReadContext  =  JsonReadContext.createRootContext(null);	  	non-compiled	[CE]  cannot  find  symbol  JsonReadContext	94	None	add
306	[BUG]  [BUGGY]  ||(expType  ==  NR_LONG)&&  expType.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberInt  =  Long.parseLong  [CE]  illegal  start  of  expression  [FE]              JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  ||(expType  ==  NR_LONG)&&  expType.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberInt  =  Long.parseLong  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	||(expType  ==  NR_LONG)&&  expType.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberInt  =  Long.parseLong	  _reportUnsupportedOperation();    ||(expType    ==    NR_INT)&&    expType.inLongRange(buf,    offset,    len,    _numberNegative))    {    _numberInt    =    Long.parseLong    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
307	[BUG]  [BUGGY]  _numberInt  =  Long.parseLong  [CE]  ';'  expected  [FE]                JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _numberInt  =  Long.parseLong  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_numberInt  =  Long.parseLong	  _reportUnsupportedOperation();    ||(expType    ==    NR_INT)&&    expType.inLongRange(buf,    offset,    len,    _numberNegative))    {    _numberInt    =    Long.parseLong    	non-compiled	[CE]  ';'  expected	27	None	replace
308	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]        JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalidEOF( "Missing  NR_INT  value ");  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	add	_reportInvalidEOF( "Missing  NR_INT  value ");	  _reportError(       "Missing    NR_INT    value       ");    JsonParseException    _reportError(   "Missing    NR_INT    value       ");    	compilable	  [FE]  JsonParseException  	53	8	replace
309	[BUG]  [BUGGY]  _reportInvalidEOF( "Missing  NR_INT  value ");  [FE]  JsonParseException  [FE]        JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalidEOF( "Missing  NR_INT  value ");  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportInvalidEOF( "Missing  NR_INT  value ");	  _reportError(       "Missing    NR_INT    value       ");    JsonParseException    _reportError(   "Missing    NR_INT    value       ");    	compilable	  [FE]  JsonParseException  	53	8	replace
310	[BUG]  [BUGGY]  _report( "Missing  NR_INT  value ");  [CE]  cannot  find  symbol  [FE]          JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _report( "Missing  NR_INT  value ");  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_report( "Missing  NR_INT  value ");	  _reportError(       "Missing    NR_INT    value       ");    JsonParseException    _reportError(   "Missing    NR_INT    value       ");    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
311	[BUG]  [BUGGY]  _reportError(   "Missing  NR_INT  value:   "  +  numStr);  JsonParseException  _reportError( "Missing  NR_INT  value:   "  +  numStr);  [CE]  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportError(   "Missing  NR_INT  value:   "  +  numStr);  JsonParseException  _reportError( "Missing  NR_INT  value:   "  +  numStr);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportError(   "Missing    NR_INT    value:   "    +    numStr);    JsonParseException  _reportError( "Missing  NR_INT  value:   "  +  numStr);	  	non-compiled	[CE]  	36	None	add
312	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  throw  new  IllegalStateException( " ");  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	add	throw  new  IllegalStateException( " ");	  throw    new    IllegalArgumentException(   "   ");    	compilable	  [FE]  JsonParseException  	20	8	replace
313	[BUG]  [BUGGY]  throw  new  IllegalStateException( " ");  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  throw  new  IllegalStateException( " ");  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	throw  new  IllegalStateException( " ");	  throw    new    IllegalArgumentException(   "   ");    	compilable	  [FE]  JsonParseException  	20	8	replace
314	[BUG]  [BUGGY]  _reportInvalidEOFInValue(NR_LONG,  expType,  numStr);  [CE]  no  suitable  method  found  for  _reportInvalidEOFInValue(int,int,String)  [FE]                JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalidEOFInValue(NR_LONG,  expType,  numStr);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportInvalidEOFInValue(NR_LONG,  expType,  numStr);	  _reportInvalidEOFInValue(numStr,    expType,    NR_INT);    	non-compiled	[CE]  no  suitable  method  found  for  _reportInvalidEOFInValue(int,int,String)	39	None	replace
315	[BUG]  [BUGGY]  _reportInvalidEOFInValue();  JsonParseException  _reportInvalidEOFInValue();  [CE]  ';'  expected  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalidEOFInValue();  JsonParseException  _reportInvalidEOFInValue();  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportInvalidEOFInValue();    JsonParseException  _reportInvalidEOFInValue();	  	non-compiled	[CE]  ';'  expected	102	None	add
316	[BUG]  [BUGGY]  _reportInvalidEOFInValue();  JsonReadContext  ctxt  =  getContext();  [CE]  cannot  find  symbol  [FE]      JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalidEOFInValue();  JsonReadContext  ctxt  =  getContext();  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportInvalidEOFInValue();    JsonReadContext  ctxt  =  getContext();	  	non-compiled	[CE]  cannot  find  symbol	102	None	add
317	[BUG]  [BUGGY]  _reportInvalidEOFInValue();  JsonReadContext  ctxt  =  getCurrentContext();  [CE]  cannot  find  symbol  [FE]        JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalidEOFInValue();  JsonReadContext  ctxt  =  getCurrentContext();  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportInvalidEOFInValue();    JsonReadContext  ctxt  =  getCurrentContext();	  	non-compiled	[CE]  cannot  find  symbol	102	None	add
318	[BUG]  [BUGGY]  ||(expType  ==  NR_INT)&&  expType.equals(NR_BIGINT))  {  _numberInt  =  Long.parseLong(numStr);  _  [CE]  illegal  start  of  expression  [FE]                JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  ||(expType  ==  NR_INT)&&  expType.equals(NR_BIGINT))  {  _numberInt  =  Long.parseLong(numStr);  _  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	||(expType  ==  NR_INT)&&  expType.equals(NR_BIGINT))  {  _numberInt  =  Long.parseLong(numStr);  _	  _throwInternal();    ||(expType    ==    NR_INT)&&    expType.equals(NR_BIGINT))    {    _numberInt    =    Long.parseLong(numStr);    _num    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
319	[BUG]  [BUGGY]  ||(expType  ==  NR_BIGINT)&&  expType.inLongRange(buf,  offset,  len,  _numberNegative))  {  _reportUnsupportedOperation();  [CE]  illegal  start  of  expression  [FE]                JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  ||(expType  ==  NR_BIGINT)&&  expType.inLongRange(buf,  offset,  len,  _numberNegative))  {  _reportUnsupportedOperation();  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	||(expType  ==  NR_BIGINT)&&  expType.inLongRange(buf,  offset,  len,  _numberNegative))  {  _reportUnsupportedOperation();	  _reportUnsupportedOperation();    ||(expType    ==    NR_INT)&&    expType.inLongRange(buf,    offset,    len,    _numberNegative))    {    _reportUnsupportedOperation();    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
320	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportError( "Missing  NR_INT  value.  Expected: ");  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	add	_reportError( "Missing  NR_INT  value.  Expected: ");	  _reportError(   "Missing    NR_INT    value.   ");    	compilable	  [FE]  JsonParseException  	35	8	replace
321	[BUG]  [BUGGY]  _reportError( "Missing  NR_INT  value.  Expected: ");  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportError( "Missing  NR_INT  value.  Expected: ");  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportError( "Missing  NR_INT  value.  Expected: ");	  _reportError(   "Missing    NR_INT    value.   ");    	compilable	  [FE]  JsonParseException  	35	8	replace
322	[BUG]  [BUGGY]  _reportIntegral(NR_INT,  expType,  _inputPtr);  [CE]  cannot  find  symbol  [FE]              JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportIntegral(NR_INT,  expType,  _inputPtr);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportIntegral(NR_INT,  expType,  _inputPtr);	  _reportIntegral(NR_INT,    expType);    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
323	[BUG]  [BUGGY]  _reportIntegral(NR_INT,  expType,  _inputLength);  [CE]  cannot  find  symbol  _inputLength  [FE]                JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportIntegral(NR_INT,  expType,  _inputLength);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportIntegral(NR_INT,  expType,  _inputLength);	  _reportIntegral(NR_INT,    expType);    	non-compiled	[CE]  cannot  find  symbol  _inputLength	42	None	replace
324	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _throwInternal();    JsonReadContext  ctxt  =  _parsingContext.createChildObjectContext(-1,  -1);  _throwInternal();  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	add	_throwInternal();        JsonReadContext    ctxt    =    _parsingContext.createChildObjectContext(-1,    -1);    _throwInternal();	  	compilable	  [FE]  JsonParseException  	64	8	add
325	[BUG]  [BUGGY]  _throwInternal();    JsonReadContext  ctxt  =  _parsingContext.createChildObjectContext(-1,  -1);  _throwInternal();  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _throwInternal();    JsonReadContext  ctxt  =  _parsingContext.createChildObjectContext(-1,  -1);  _throwInternal();  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_throwInternal();        JsonReadContext    ctxt    =    _parsingContext.createChildObjectContext(-1,    -1);    _throwInternal();	  	compilable	  [FE]  JsonParseException  	64	8	add
326	[BUG]  [BUGGY]  _throwInternal();    JsonReadContext  ctxt  =  _parsingContext.createChildObjectContext(-1,  -1);  JsonReadContext  ctxt  =  _parsingContext.createChildArrayContext(-1,  -1);  [CE]  variable  ctxt  is  already  defined  in  method  _parseSlowInt(int)  [FE]      JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _throwInternal();    JsonReadContext  ctxt  =  _parsingContext.createChildObjectContext(-1,  -1);  JsonReadContext  ctxt  =  _parsingContext.createChildArrayContext(-1,  -1);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_throwInternal();        JsonReadContext    ctxt    =    _parsingContext.createChildObjectContext(-1,    -1);    JsonReadContext  ctxt  =  _parsingContext.createChildArrayContext(-1,  -1);	  	non-compiled	[CE]  variable  ctxt  is  already  defined  in  method  _parseSlowInt(int)	64	None	add
327	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]        JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportError( "Missing  NR_INT  value ",  NR_LONG);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	add	_reportError( "Missing  NR_INT  value ",  NR_LONG);	  _reportError(   "Missing    NR_INT    value   ",    nex);    	compilable	  [FE]  JsonParseException  	107	8	replace
328	[BUG]  [BUGGY]  _reportError( "Missing  NR_INT  value ",  NR_LONG);  [FE]  JsonParseException  [FE]        JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportError( "Missing  NR_INT  value ",  NR_LONG);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportError( "Missing  NR_INT  value ",  NR_LONG);	  _reportError(   "Missing    NR_INT    value   ",    nex);    	compilable	  [FE]  JsonParseException  	107	8	replace
329	[BUG]  [BUGGY]  _reportError( "Missing  NR_INT  value ",  NR_NUMBER);  [CE]  cannot  find  symbol  NR_NUMBER  [FE]          JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportError( "Missing  NR_INT  value ",  NR_NUMBER);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportError( "Missing  NR_INT  value ",  NR_NUMBER);	  _reportError(   "Missing    NR_INT    value   ",    nex);    	non-compiled	[CE]  cannot  find  symbol  NR_NUMBER	107	None	replace
330	[BUG]  [BUGGY]  _numberInt  =  NumberInput.parseInt(numStr);  _numberInternal();  [CE]  cannot  find  symbol  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _numberInt  =  NumberInput.parseInt(numStr);  _numberInternal();  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_numberInt  =  NumberInput.parseInt(numStr);  _numberInternal();	  _throwInternal();    _throwInternal();    	non-compiled	[CE]  cannot  find  symbol	48	None	replace
331	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _numberInt  =  NumberInput.parseInt(numStr);  _throwInternal();  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	add	_numberInt  =  NumberInput.parseInt(numStr);  _throwInternal();	  _throwInternal();    _throwInternal();    	compilable	  [FE]  JsonParseException  	48	8	replace
332	[BUG]  [BUGGY]  _numberInt  =  NumberInput.parseInt(numStr);  _throwInternal();  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _numberInt  =  NumberInput.parseInt(numStr);  _throwInternal();  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_numberInt  =  NumberInput.parseInt(numStr);  _throwInternal();	  _throwInternal();    _throwInternal();    	compilable	  [FE]  JsonParseException  	48	8	replace
333	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportError( "msg.invalid.number ");  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	add	_reportError( "msg.invalid.number ");	  _reportError(   "msg.invalid.internal.number   ");    	compilable	  [FE]  JsonParseException  	22	8	replace
334	[BUG]  [BUGGY]  _reportError( "msg.invalid.number ");  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportError( "msg.invalid.number ");  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportError( "msg.invalid.number ");	  _reportError(   "msg.invalid.internal.number   ");    	compilable	  [FE]  JsonParseException  	22	8	replace
335	[BUG]  [BUGGY]  if(_parsingContext!=  null)  {  _throwInternal();  JsonParseException  p  =  _parsingContext.getCurrentToken();  _throwInternal();  }  [CE]  cannot  find  symbol  [FE]        JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  if(_parsingContext!=  null)  {  _throwInternal();  JsonParseException  p  =  _parsingContext.getCurrentToken();  _throwInternal();  }  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	if(_parsingContext!=  null)  {  _throwInternal();  JsonParseException  p  =  _parsingContext.getCurrentToken();  _throwInternal();  }	  _throwInternal();    JsonParseException    p    =    _parsingContext.getCurrentToken();    _throwInternal();    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
336	[BUG]  [BUGGY]  if(_parsingContext.hasCurrentToken())  {  _throwInternal();  }  else  {  _parsingContext.setCurrentToken(NR_INT);  _throwInternal();  }  [CE]  cannot  find  symbol  [FE]          JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  if(_parsingContext.hasCurrentToken())  {  _throwInternal();  }  else  {  _parsingContext.setCurrentToken(NR_INT);  _throwInternal();  }  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	if(_parsingContext.hasCurrentToken())  {  _throwInternal();  }  else  {  _parsingContext.setCurrentToken(NR_INT);  _throwInternal();  }	  _throwInternal();    JsonParseException    p    =    _parsingContext.getCurrentToken();    _throwInternal();    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
337	[BUG]  [BUGGY]  if(_parsingContext!=  null)  {  _throwInternal();  }  else  {  _parsingContext  =  _parsingContext.getCurrentToken();  _throwInternal();  }  [CE]  cannot  find  symbol  [FE]            JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  if(_parsingContext!=  null)  {  _throwInternal();  }  else  {  _parsingContext  =  _parsingContext.getCurrentToken();  _throwInternal();  }  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	if(_parsingContext!=  null)  {  _throwInternal();  }  else  {  _parsingContext  =  _parsingContext.getCurrentToken();  _throwInternal();  }	  _throwInternal();    JsonParseException    p    =    _parsingContext.getCurrentToken();    _throwInternal();    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
338	[BUG]  [BUGGY]  _reportInvalidNumber(NR_INT,  expType);  [CE]  cannot  find  symbol  [FE]              JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalidNumber(NR_INT,  expType);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportInvalidNumber(NR_INT,  expType);	  _reportInvalidNumber(numStr,    expType);    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
339	[BUG]  [BUGGY]  _reportInvalidNumber(null,  expType);  [CE]  cannot  find  symbol  [FE]                JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalidNumber(null,  expType);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportInvalidNumber(null,  expType);	  _reportInvalidNumber(numStr,    expType);    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
340	[BUG]  [BUGGY]  _reportInvalidNumber(len);  [CE]  cannot  find  symbol  [FE]                  JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalidNumber(len);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportInvalidNumber(len);	  _reportInvalidLong(len);    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
341	[BUG]  [BUGGY]  _parseInt(buf,  offset);  [CE]  cannot  find  symbol  [FE]          JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _parseInt(buf,  offset);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_parseInt(buf,  offset);	  _parseInt();    	non-compiled	[CE]  cannot  find  symbol	86	None	replace
342	[BUG]  [BUGGY]  _parseInt(buf);  [CE]  cannot  find  symbol  [FE]            JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _parseInt(buf);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_parseInt(buf);	  _parseInt();    	non-compiled	[CE]  cannot  find  symbol	86	None	replace
343	[BUG]  [BUGGY]  _reportInvalidLong(NR_LONG,  expType,  NR_INT);  [CE]  cannot  find  symbol  [FE]            JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalidLong(NR_LONG,  expType,  NR_INT);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportInvalidLong(NR_LONG,  expType,  NR_INT);	  _reportInvalidLong(numStr,    expType,    NR_INT);    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
344	[BUG]  [BUGGY]  _reportInvalidLong(NR_LBIGINT,  expType,  NR_INT);  [CE]  cannot  find  symbol  NR_LBIGINT  [FE]              JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalidLong(NR_LBIGINT,  expType,  NR_INT);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportInvalidLong(NR_LBIGINT,  expType,  NR_INT);	  _reportInvalidLong(numStr,    expType,    NR_INT);    	non-compiled	[CE]  cannot  find  symbol  NR_LBIGINT	44	None	replace
345	[BUG]  [BUGGY]  _reportInvalidLong(NR_INT,  expType,  numStr);  [CE]  cannot  find  symbol  [FE]                JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalidLong(NR_INT,  expType,  numStr);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportInvalidLong(NR_INT,  expType,  numStr);	  _reportInvalidLong(numStr,    expType,    NR_INT);    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
346	[BUG]  [BUGGY]  _reportInvalidLong(NR_LBRACKET,  expType,  NR_INT);  [CE]  cannot  find  symbol  NR_LBRACKET  [FE]                  JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalidLong(NR_LBRACKET,  expType,  NR_INT);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportInvalidLong(NR_LBRACKET,  expType,  NR_INT);	  _reportInvalidLong(numStr,    expType,    NR_INT);    	non-compiled	[CE]  cannot  find  symbol  NR_LBRACKET	44	None	replace
347	[BUG]  [BUGGY]  _reportTooLongIntegral(NR_INT,  0),  expType);  [CE]  ';'  expected  [FE]            JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportTooLongIntegral(NR_INT,  0),  expType);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportTooLongIntegral(NR_INT,  0),  expType);	  _reportTooLongIntegral(NR_INT,    0);    	non-compiled	[CE]  ';'  expected	3	None	replace
348	[BUG]  [BUGGY]  _numberNegative  =  Long.parseLong(numStr);  return  null;  [CE]  incompatible  types  [FE]                JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _numberNegative  =  Long.parseLong(numStr);  return  null;  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_numberNegative  =  Long.parseLong(numStr);  return  null;	          _numberNegative    =    Long.parseLong(numStr);    return;    	non-compiled	[CE]  incompatible  types	33	None	replace
349	[BUG]  [BUGGY]  _reportInvalidLong(buf,  expType);  [CE]  cannot  find  symbol  [FE]                JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalidLong(buf,  expType);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportInvalidLong(buf,  expType);	  _reportInvalidLong(null,    expType);    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
350	[BUG]  [BUGGY]  _reportInvalidEOFInValue(buf,  offset,  len,  _numberNegative);  [CE]  no  suitable  method  found  for  _reportInvalidEOFInValue(char[],int,int,boolean)  [FE]                  JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalidEOFInValue(buf,  offset,  len,  _numberNegative);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportInvalidEOFInValue(buf,  offset,  len,  _numberNegative);	  _reportInvalidEOFInValue(buf,    offset,    len,    expType);    	non-compiled	[CE]  no  suitable  method  found  for  _reportInvalidEOFInValue(char[],int,int,boolean)	40	None	replace
351	[BUG]  [BUGGY]  _reportInvalidEOFInValue(buf,  offset,  len,  _numberNegative,  expType);  [CE]  no  suitable  method  found  for  _reportInvalidEOFInValue(char[],int,int,boolean,int)  [FE]                    JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalidEOFInValue(buf,  offset,  len,  _numberNegative,  expType);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportInvalidEOFInValue(buf,  offset,  len,  _numberNegative,  expType);	  _reportInvalidEOFInValue(buf,    offset,    len,    expType);    	non-compiled	[CE]  no  suitable  method  found  for  _reportInvalidEOFInValue(char[],int,int,boolean,int)	40	None	replace
352	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]        JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportError( "Current  context  not  an  ARRAY  but "+expType);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	add	_reportError( "Current  context  not  an  ARRAY  but "+expType);	  _reportError(   "Current    context    not    an    ARRAY    but   "+getMessage());    	compilable	  [FE]  JsonParseException  	106	8	replace
353	[BUG]  [BUGGY]  _reportError( "Current  context  not  an  ARRAY  but "+expType);  [FE]  JsonParseException  [FE]        JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportError( "Current  context  not  an  ARRAY  but "+expType);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportError( "Current  context  not  an  ARRAY  but "+expType);	  _reportError(   "Current    context    not    an    ARRAY    but   "+getMessage());    	compilable	  [FE]  JsonParseException  	106	8	replace
354	[BUG]  [BUGGY]  null  =  _parsingContext.createChildObjectContext(buf,  offset,  len,  expType);  [CE]  unexpected  type  [FE]            JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  null  =  _parsingContext.createChildObjectContext(buf,  offset,  len,  expType);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	null  =  _parsingContext.createChildObjectContext(buf,  offset,  len,  expType);	  _reportUnsupportedOperation();    JsonReadContext    ctxt    =    getCurrentContext();    _parsingContext    =    _parsingContext.createChildObjectContext(buf,    offset,    len,    expType);    	non-compiled	[CE]  unexpected  type	110	None	replace
355	[BUG]  [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(null,  offset,  len,  expType);  [CE]  method  createChildObjectContext  in  class  JsonReadContext  cannot  be  applied  to  given  types;  [FE]              JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(null,  offset,  len,  expType);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_parsingContext  =  _parsingContext.createChildObjectContext(null,  offset,  len,  expType);	  _reportUnsupportedOperation();    JsonReadContext    ctxt    =    getCurrentContext();    _parsingContext    =    _parsingContext.createChildObjectContext(buf,    offset,    len,    expType);    	non-compiled	[CE]  method  createChildObjectContext  in  class  JsonReadContext  cannot  be  applied  to  given  types;	110	None	replace
356	[BUG]  [BUGGY]  JsonReadContext  ctxt  =  getCurrentContext();  _parsingContext  =  _parsingContext.createChildObjectContext(-1,  -1);  [CE]  cannot  find  symbol  [FE]        JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  JsonReadContext  ctxt  =  getCurrentContext();  _parsingContext  =  _parsingContext.createChildObjectContext(-1,  -1);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	JsonReadContext  ctxt  =  getCurrentContext();  _parsingContext  =  _parsingContext.createChildObjectContext(-1,  -1);	  _reportUnsupportedOperation();    JsonReadContext    ctxt    =    getCurrentContext();    _parsingContext    =    _parsingContext.createChildObjectContext(-1,    -1);    	non-compiled	[CE]  cannot  find  symbol	108	None	replace
357	[BUG]  [BUGGY]  _reportIntegral(NR_INT,  _numberBigInt,  expType);  [CE]  cannot  find  symbol  [FE]            JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportIntegral(NR_INT,  _numberBigInt,  expType);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportIntegral(NR_INT,  _numberBigInt,  expType);	  _reportIntegral(NR_INT,    numStr,    expType);    	non-compiled	[CE]  cannot  find  symbol	41	None	replace
358	[BUG]  [BUGGY]  _reportIntegral(NR_INT,  _numberLong,  expType);  [CE]  cannot  find  symbol  [FE]              JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportIntegral(NR_INT,  _numberLong,  expType);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportIntegral(NR_INT,  _numberLong,  expType);	  _reportIntegral(NR_INT,    numStr,    expType);    	non-compiled	[CE]  cannot  find  symbol	41	None	replace
359	[BUG]  [BUGGY]  _reportTooLongIntegral(NN_INT,  numStr);  [CE]  cannot  find  symbol  NN_INT  [FE]          JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportTooLongIntegral(NN_INT,  numStr);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportTooLongIntegral(NN_INT,  numStr);	  _reportTooLongIntegral(NR_INT,    numStr);    _reportTooLongIntegral(NN_INT,    numStr);    	non-compiled	[CE]  cannot  find  symbol  NN_INT	88	None	replace
360	[BUG]  [BUGGY]  _reportTooLongIntegral(NUMBER_INT,  numStr);  [CE]  cannot  find  symbol  NUMBER_INT  [FE]            JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportTooLongIntegral(NUMBER_INT,  numStr);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportTooLongIntegral(NUMBER_INT,  numStr);	  _reportTooLongIntegral(NR_INT,    numStr);    _reportTooLongIntegral(NN_INT,    numStr);    	non-compiled	[CE]  cannot  find  symbol  NUMBER_INT	88	None	replace
361	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalidEOF( ":  was  expecting  closing  quote  for  a  string  value ");  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	add	_reportInvalidEOF( ":  was  expecting  closing  quote  for  a  string  value ");	  _reportInvalidEOF(numStr);    	compilable	  [FE]  JsonParseException  	72	8	replace
362	[BUG]  [BUGGY]  _reportInvalidEOF( ":  was  expecting  closing  quote  for  a  string  value ");  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalidEOF( ":  was  expecting  closing  quote  for  a  string  value ");  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportInvalidEOF( ":  was  expecting  closing  quote  for  a  string  value ");	  _reportInvalidEOF(numStr);    	compilable	  [FE]  JsonParseException  	72	8	replace
363	[BUG]  [BUGGY]  _reportInvalidEOF();  JsonReadContext  ctxt  =  _parsingContext.getCurrentContext();  [CE]  cannot  find  symbol  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalidEOF();  JsonReadContext  ctxt  =  _parsingContext.getCurrentContext();  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportInvalidEOF();    JsonReadContext  ctxt  =  _parsingContext.getCurrentContext();	  	non-compiled	[CE]  cannot  find  symbol	55	None	add
364	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalidEOF();  JsonReadContext  ctxt  =  _parsingContext.createChildObjectContext(-1,  -1);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	add	_reportInvalidEOF();    JsonReadContext  ctxt  =  _parsingContext.createChildObjectContext(-1,  -1);	  	compilable	  [FE]  JsonParseException  	55	8	add
365	[BUG]  [BUGGY]  _reportInvalidEOF();  JsonReadContext  ctxt  =  _parsingContext.createChildObjectContext(-1,  -1);  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalidEOF();  JsonReadContext  ctxt  =  _parsingContext.createChildObjectContext(-1,  -1);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportInvalidEOF();    JsonReadContext  ctxt  =  _parsingContext.createChildObjectContext(-1,  -1);	  	compilable	  [FE]  JsonParseException  	55	8	add
366	[BUG]  [BUGGY]  _reportInvalidEOF();  JsonReadContext  ctxt  =  _parsingContext.createChildObjectContext(buf,  offset,  len);  [CE]  method  createChildObjectContext  in  class  JsonReadContext  cannot  be  applied  to  given  types;  [FE]        JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalidEOF();  JsonReadContext  ctxt  =  _parsingContext.createChildObjectContext(buf,  offset,  len);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportInvalidEOF();    JsonReadContext  ctxt  =  _parsingContext.createChildObjectContext(buf,  offset,  len);	  	non-compiled	[CE]  method  createChildObjectContext  in  class  JsonReadContext  cannot  be  applied  to  given  types;	55	None	add
367	[BUG]  [BUGGY]  _reportInvalidEOF();  JsonReadContext  ctxt  =  _parsingContext.createChildObjectContext();  [CE]  method  createChildObjectContext  in  class  JsonReadContext  cannot  be  applied  to  given  types;  [FE]          JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalidEOF();  JsonReadContext  ctxt  =  _parsingContext.createChildObjectContext();  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportInvalidEOF();    JsonReadContext  ctxt  =  _parsingContext.createChildObjectContext();	  	non-compiled	[CE]  method  createChildObjectContext  in  class  JsonReadContext  cannot  be  applied  to  given  types;	55	None	add
368	[BUG]  [BUGGY]  _reportInvalidLong(NR_LONG,  numStr);  [CE]  cannot  find  symbol  [FE]              JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalidLong(NR_LONG,  numStr);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportInvalidLong(NR_LONG,  numStr);	  _reportInvalidLong(numStr,    NR_INT);    	non-compiled	[CE]  cannot  find  symbol	45	None	replace
369	[BUG]  [BUGGY]  _reportInvalidLong(NR_LBIGINT,  numStr);  [CE]  cannot  find  symbol  NR_LBIGINT  [FE]                JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalidLong(NR_LBIGINT,  numStr);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportInvalidLong(NR_LBIGINT,  numStr);	  _reportInvalidLong(numStr,    NR_INT);    	non-compiled	[CE]  cannot  find  symbol  NR_LBIGINT	45	None	replace
370	[BUG]  [BUGGY]  _reportInvalidLong(l,  NR_INT);  [CE]  cannot  find  symbol  l  [FE]                  JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalidLong(l,  NR_INT);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportInvalidLong(l,  NR_INT);	  _reportInvalidLong(numStr,    NR_INT);    	non-compiled	[CE]  cannot  find  symbol  l	45	None	replace
371	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportError( "Missing  NR_INT  value: "  +  NR_INT);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	add	_reportError( "Missing  NR_INT  value: "  +  NR_INT);	  _reportError(   "Missing    NR_INT    value:   "    +    numStr);    	compilable	  [FE]  JsonParseException  	37	8	replace
372	[BUG]  [BUGGY]  _reportError( "Missing  NR_INT  value: "  +  NR_INT);  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportError( "Missing  NR_INT  value: "  +  NR_INT);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportError( "Missing  NR_INT  value: "  +  NR_INT);	  _reportError(   "Missing    NR_INT    value:   "    +    numStr);    	compilable	  [FE]  JsonParseException  	37	8	replace
373	[BUG]  [BUGGY]  _reportError( "Missing  NR_INT  value: "  +  nex);  [CE]  cannot  find  symbol  nex  [FE]      JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportError( "Missing  NR_INT  value: "  +  nex);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportError( "Missing  NR_INT  value: "  +  nex);	  _reportError(   "Missing    NR_INT    value:   "    +    numStr);    	non-compiled	[CE]  cannot  find  symbol  nex	37	None	replace
374	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportUnsupportedOperation();    _reportUnsupportedOperation();  JsonReadContext  ctxt  =  _parsingContext.createChildObjectContext(-1,  -1);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	add	_reportUnsupportedOperation();        _reportUnsupportedOperation();    JsonReadContext  ctxt  =  _parsingContext.createChildObjectContext(-1,  -1);	  	compilable	  [FE]  JsonParseException  	23	8	add
375	[BUG]  [BUGGY]  _reportUnsupportedOperation();    _reportUnsupportedOperation();  JsonReadContext  ctxt  =  _parsingContext.createChildObjectContext(-1,  -1);  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportUnsupportedOperation();    _reportUnsupportedOperation();  JsonReadContext  ctxt  =  _parsingContext.createChildObjectContext(-1,  -1);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportUnsupportedOperation();        _reportUnsupportedOperation();    JsonReadContext  ctxt  =  _parsingContext.createChildObjectContext(-1,  -1);	  	compilable	  [FE]  JsonParseException  	23	8	add
376	[BUG]  [BUGGY]  _reportUnsupportedOperation();    _reportUnsupportedOperation();  JsonReadContext  ctxt  =  _parsingContext.getCurrentContext();  [CE]  cannot  find  symbol  [FE]      JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportUnsupportedOperation();    _reportUnsupportedOperation();  JsonReadContext  ctxt  =  _parsingContext.getCurrentContext();  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportUnsupportedOperation();        _reportUnsupportedOperation();    JsonReadContext  ctxt  =  _parsingContext.getCurrentContext();	  	non-compiled	[CE]  cannot  find  symbol	23	None	add
377	[BUG]  [BUGGY]  _reportUnsupportedOperation();    _reportUnsupportedOperation();  JsonReadContext  ctxt  =  _parsingContext.createChildObjectContext();  [CE]  method  createChildObjectContext  in  class  JsonReadContext  cannot  be  applied  to  given  types;  [FE]        JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportUnsupportedOperation();    _reportUnsupportedOperation();  JsonReadContext  ctxt  =  _parsingContext.createChildObjectContext();  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportUnsupportedOperation();        _reportUnsupportedOperation();    JsonReadContext  ctxt  =  _parsingContext.createChildObjectContext();	  	non-compiled	[CE]  method  createChildObjectContext  in  class  JsonReadContext  cannot  be  applied  to  given  types;	23	None	add
378	[BUG]  [BUGGY]  _parsingContext  =  JsonReadContext.createRootContext(null,  len);  [CE]  no  suitable  method  found  for  createRootContext(<null>,int)  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _parsingContext  =  JsonReadContext.createRootContext(null,  len);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_parsingContext  =  JsonReadContext.createRootContext(null,  len);	  _parsingContext    =    JsonReadContext.createRootContext(null);    	non-compiled	[CE]  no  suitable  method  found  for  createRootContext(<null>,int)	95	None	replace
379	[BUG]  [BUGGY]  _reportUnsupportedOperation();    JsonReadContext  ctxt  =  _parsingContext.createChildObjectContext(-1,  -1);  _reportUnsupportedOperation();  JsonReadContext  ctxt  =  _parsingContext.createChildObjectContext(-1,  -2);  [CE]  variable  ctxt  is  already  defined  in  method  _parseSlowInt(int)  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportUnsupportedOperation();    JsonReadContext  ctxt  =  _parsingContext.createChildObjectContext(-1,  -1);  _reportUnsupportedOperation();  JsonReadContext  ctxt  =  _parsingContext.createChildObjectContext(-1,  -2);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportUnsupportedOperation();        JsonReadContext    ctxt    =    _parsingContext.createChildObjectContext(-1,    -1);    _reportUnsupportedOperation();  JsonReadContext  ctxt  =  _parsingContext.createChildObjectContext(-1,  -2);	  	non-compiled	[CE]  variable  ctxt  is  already  defined  in  method  _parseSlowInt(int)	61	None	add
380	[BUG]  [BUGGY]  _reportInvalidEOFInValue(long,  numStr);  [CE]  '.class'  expected  [FE]              JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalidEOFInValue(long,  numStr);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportInvalidEOFInValue(long,  numStr);	  _reportInvalidEOFInValue(buf,    numStr);    	non-compiled	[CE]  '.class'  expected	84	None	replace
381	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]        JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _numberLong  =  Long.parseLong(numStr);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	add	_numberLong  =  Long.parseLong(numStr);	  _throwInternal();    if(_throwInternal()    >    0)    {    _throwInternal();    }    else    {    _numberInput.inLongRange(buf,    offset,    len,    _numberNegative);    return;    }    	compilable	  [FE]  JsonParseException  	112	8	replace
382	[BUG]  [BUGGY]  _numberLong  =  Long.parseLong(numStr);  [FE]  JsonParseException  [FE]        JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _numberLong  =  Long.parseLong(numStr);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_numberLong  =  Long.parseLong(numStr);	  _throwInternal();    if(_throwInternal()    >    0)    {    _throwInternal();    }    else    {    _numberInput.inLongRange(buf,    offset,    len,    _numberNegative);    return;    }    	compilable	  [FE]  JsonParseException  	112	8	replace
383	[BUG]  [BUGGY]  _parsingContext  =  getCurrentContext().createChildObjectContext(buf,  offset,  len);  [CE]  cannot  find  symbol  [FE]              JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _parsingContext  =  getCurrentContext().createChildObjectContext(buf,  offset,  len);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_parsingContext  =  getCurrentContext().createChildObjectContext(buf,  offset,  len);	  _reportUnsupportedOperation();    JsonReadContext    ctxt    =    getCurrentContext();    _parsingContext    =    _parsingContext.createChildObjectContext(buf,    offset,    len);    	non-compiled	[CE]  cannot  find  symbol	111	None	replace
384	[BUG]  [BUGGY]  _parsingContext  =  _parsingContext.createChildArrayContext(buf,  offset,  len);  [CE]  method  createChildArrayContext  in  class  JsonReadContext  cannot  be  applied  to  given  types;  [FE]                JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _parsingContext  =  _parsingContext.createChildArrayContext(buf,  offset,  len);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_parsingContext  =  _parsingContext.createChildArrayContext(buf,  offset,  len);	  _reportUnsupportedOperation();    JsonReadContext    ctxt    =    getCurrentContext();    _parsingContext    =    _parsingContext.createChildObjectContext(buf,    offset,    len);    	non-compiled	[CE]  method  createChildArrayContext  in  class  JsonReadContext  cannot  be  applied  to  given  types;	111	None	replace
385	[BUG]  [BUGGY]  _parsingContext  =  JsonReadContext.createRootContext(buf,  offset);  [CE]  no  suitable  method  found  for  createRootContext(char[],int)  [FE]          JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _parsingContext  =  JsonReadContext.createRootContext(buf,  offset);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_parsingContext  =  JsonReadContext.createRootContext(buf,  offset);	          _parsingContext    =    JsonReadContext.createRootContext();    	non-compiled	[CE]  no  suitable  method  found  for  createRootContext(char[],int)	75	None	replace
386	[BUG]  [BUGGY]  _parseSlowInt(buf,  _numberNegative);  [CE]  method  _parseSlowInt  in  class  ParserBase  cannot  be  applied  to  given  types;  [FE]        JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _parseSlowInt(buf,  _numberNegative);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_parseSlowInt(buf,  _numberNegative);	  _parseSlowInt();    	non-compiled	[CE]  method  _parseSlowInt  in  class  ParserBase  cannot  be  applied  to  given  types;	85	None	replace
387	[BUG]  [BUGGY]  _parseSlowInt(buf,  expType);  [CE]  method  _parseSlowInt  in  class  ParserBase  cannot  be  applied  to  given  types;  [FE]          JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _parseSlowInt(buf,  expType);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_parseSlowInt(buf,  expType);	  _parseSlowInt();    	non-compiled	[CE]  method  _parseSlowInt  in  class  ParserBase  cannot  be  applied  to  given  types;	85	None	replace
388	[BUG]  [BUGGY]  _throwInternal();    _throwInternal();  JsonParseException  _throwInternal();  _throwInternal();  [CE]  ';'  expected  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _throwInternal();    _throwInternal();  JsonParseException  _throwInternal();  _throwInternal();  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_throwInternal();        _throwInternal();    JsonParseException  _throwInternal();  _throwInternal();	  	non-compiled	[CE]  ';'  expected	47	None	add
389	[BUG]  [BUGGY]  _throwInternal();    _throwInternal();  _throwInternal();  _throwInputRow();  [CE]  cannot  find  symbol  [FE]      JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _throwInternal();    _throwInternal();  _throwInternal();  _throwInputRow();  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_throwInternal();        _throwInternal();    _throwInternal();  _throwInputRow();	  	non-compiled	[CE]  cannot  find  symbol	47	None	add
390	[BUG]  [BUGGY]  _throwInternal();    _throwInternal();  _throwInternal();  _throwInvalid();  [CE]  cannot  find  symbol  [FE]        JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _throwInternal();    _throwInternal();  _throwInternal();  _throwInvalid();  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_throwInternal();        _throwInternal();    _throwInternal();  _throwInvalid();	  	non-compiled	[CE]  cannot  find  symbol	47	None	add
391	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalidEOF( ":  was  expecting  closing  quote  for  a  value ");  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	add	_reportInvalidEOF( ":  was  expecting  closing  quote  for  a  value ");	  _reportInvalidEOF();    	compilable	  [FE]  JsonParseException  	56	8	replace
392	[BUG]  [BUGGY]  _reportInvalidEOF( ":  was  expecting  closing  quote  for  a  value ");  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalidEOF( ":  was  expecting  closing  quote  for  a  value ");  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportInvalidEOF( ":  was  expecting  closing  quote  for  a  value ");	  _reportInvalidEOF();    	compilable	  [FE]  JsonParseException  	56	8	replace
393	[BUG]  [BUGGY]  ||(expType  ==  NR_INT)&&  expType.equals(NR_LONG))  {  _numberInt  =  Long.parseLong(numStr);  [CE]  illegal  start  of  expression  [FE]          JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  ||(expType  ==  NR_INT)&&  expType.equals(NR_LONG))  {  _numberInt  =  Long.parseLong(numStr);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	||(expType  ==  NR_INT)&&  expType.equals(NR_LONG))  {  _numberInt  =  Long.parseLong(numStr);	  _throwInternal();    ||(expType    ==    NR_INT)&&    expType.equals(NR_BIGINT))    {    _numberInt    =    Long.parseLong(numStr);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
394	[BUG]  [BUGGY]  _reportInvalidEOFInValue(buf,  expType,  _numStr);  [CE]  cannot  find  symbol  _numStr  [FE]              JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalidEOFInValue(buf,  expType,  _numStr);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportInvalidEOFInValue(buf,  expType,  _numStr);	  _reportInvalidEOFInValue(buf,    _numStr,    expType);    	non-compiled	[CE]  cannot  find  symbol  _numStr	100	None	replace
395	[BUG]  [BUGGY]  _reportInvalidEOF(NR_INT,  numStr);  [CE]  no  suitable  method  found  for  _reportInvalidEOF(int,String)  [FE]        JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalidEOF(NR_INT,  numStr);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportInvalidEOF(NR_INT,  numStr);	  _reportTooLongIntegral(NR_INT,    numStr);    parseLongIntegral(NR_INT,    numStr);    	non-compiled	[CE]  no  suitable  method  found  for  _reportInvalidEOF(int,String)	90	None	replace
396	[BUG]  [BUGGY]  _reportInvalidEOFInValue(NR_LONG,  numStr);  [CE]  no  suitable  method  found  for  _reportInvalidEOFInValue(int,String)  [FE]              JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalidEOFInValue(NR_LONG,  numStr);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportInvalidEOFInValue(NR_LONG,  numStr);	  _reportInvalidEOFInValue(numStr,    NR_INT);    	non-compiled	[CE]  no  suitable  method  found  for  _reportInvalidEOFInValue(int,String)	17	None	replace
397	[BUG]  [BUGGY]  _reportInvalidEOFInValue(long,  numStr,  NR_INT);  [CE]  '.class'  expected  [FE]                JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalidEOFInValue(long,  numStr,  NR_INT);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportInvalidEOFInValue(long,  numStr,  NR_INT);	  _reportInvalidEOFInValue(numStr,    NR_INT);    	non-compiled	[CE]  '.class'  expected	17	None	replace
398	[BUG]  [BUGGY]  _parsingContext.setCurrentName(numStr);  JsonReadContext  ctxt  =  _parsingContext.getCurrentName();  [CE]  incompatible  types  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _parsingContext.setCurrentName(numStr);  JsonReadContext  ctxt  =  _parsingContext.getCurrentName();  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_parsingContext.setCurrentName(numStr);    JsonReadContext  ctxt  =  _parsingContext.getCurrentName();	  	non-compiled	[CE]  incompatible  types	96	None	add
399	[BUG]  [BUGGY]  _parsingContext.setCurrentName(numStr);  JsonReadContext  ctxt  =  _parsingContext.createCurrentName(numStr);  [CE]  cannot  find  symbol  [FE]      JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _parsingContext.setCurrentName(numStr);  JsonReadContext  ctxt  =  _parsingContext.createCurrentName(numStr);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_parsingContext.setCurrentName(numStr);    JsonReadContext  ctxt  =  _parsingContext.createCurrentName(numStr);	  	non-compiled	[CE]  cannot  find  symbol	96	None	add
400	[BUG]  [BUGGY]  _parsingContext.setCurrentName(numStr);  JsonReadContext  ctxt  =  _parsingContext.createChildCount();  [CE]  cannot  find  symbol  [FE]        JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _parsingContext.setCurrentName(numStr);  JsonReadContext  ctxt  =  _parsingContext.createChildCount();  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_parsingContext.setCurrentName(numStr);    JsonReadContext  ctxt  =  _parsingContext.createChildCount();	  	non-compiled	[CE]  cannot  find  symbol	96	None	add
401	[BUG]  [BUGGY]  _numberNegative  =  Integer.parseInt(numStr);  [CE]  incompatible  types  [FE]          JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _numberNegative  =  Integer.parseInt(numStr);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_numberNegative  =  Integer.parseInt(numStr);	          _numberNegative    =    Long.parseLong(numStr);    	non-compiled	[CE]  incompatible  types	30	None	replace
402	[BUG]  [BUGGY]  _reportTooLongIntegral(NR_INTEGER,  _numberNegative);  [CE]  cannot  find  symbol  NR_INTEGER  [FE]        JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportTooLongIntegral(NR_INTEGER,  _numberNegative);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportTooLongIntegral(NR_INTEGER,  _numberNegative);	  _reportTooLongIntegral(NR_INTEGER,    numStr);    	non-compiled	[CE]  cannot  find  symbol  NR_INTEGER	81	None	replace
403	[BUG]  [BUGGY]  _reportTooLongIntegral(NR_INTEGER,  expType);  [CE]  cannot  find  symbol  NR_INTEGER  [FE]          JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportTooLongIntegral(NR_INTEGER,  expType);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportTooLongIntegral(NR_INTEGER,  expType);	  _reportTooLongIntegral(NR_INTEGER,    numStr);    	non-compiled	[CE]  cannot  find  symbol  NR_INTEGER	81	None	replace
404	[BUG]  [BUGGY]  _reportInvalidEOFInValue(NR_INT);  [CE]  no  suitable  method  found  for  _reportInvalidEOFInValue(int)  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalidEOFInValue(NR_INT);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportInvalidEOFInValue(NR_INT);	  _reportInvalidEOFInValue();    	non-compiled	[CE]  no  suitable  method  found  for  _reportInvalidEOFInValue(int)	103	None	replace
405	[BUG]  [BUGGY]  _reportIntegral(NR_LONG,  _numberBigInt);  [CE]  cannot  find  symbol  [FE]                JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportIntegral(NR_LONG,  _numberBigInt);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportIntegral(NR_LONG,  _numberBigInt);	  _reportIntegral(NR_INT,    _numberBigInt);    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
406	[BUG]  [BUGGY]  _reportIntegral(NR_BIGINT,  _numberBigInt);  [CE]  cannot  find  symbol  [FE]                  JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportIntegral(NR_BIGINT,  _numberBigInt);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportIntegral(NR_BIGINT,  _numberBigInt);	  _reportIntegral(NR_INT,    _numberBigInt);    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
407	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]        JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportError( "msg.invalid.number.long ",  NR_INT);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	add	_reportError( "msg.invalid.number.long ",  NR_INT);	  _reportError();    	compilable	  [FE]  JsonParseException  	13	8	replace
408	[BUG]  [BUGGY]  _reportError( "msg.invalid.number.long ",  NR_INT);  [FE]  JsonParseException  [FE]        JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportError( "msg.invalid.number.long ",  NR_INT);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportError( "msg.invalid.number.long ",  NR_INT);	  _reportError();    	compilable	  [FE]  JsonParseException  	13	8	replace
409	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]          JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportError( "msg.illegal.number.long ",  NR_INT);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	add	_reportError( "msg.illegal.number.long ",  NR_INT);	  _reportError();    	compilable	  [FE]  JsonParseException  	13	8	replace
410	[BUG]  [BUGGY]  _reportError( "msg.illegal.number.long ",  NR_INT);  [FE]  JsonParseException  [FE]          JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportError( "msg.illegal.number.long ",  NR_INT);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportError( "msg.illegal.number.long ",  NR_INT);	  _reportError();    	compilable	  [FE]  JsonParseException  	13	8	replace
411	[BUG]  [BUGGY]  _numberInt  =  NumberInput.parseInt(numStr,  expType);  [CE]  no  suitable  method  found  for  parseInt(String,int)  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _numberInt  =  NumberInput.parseInt(numStr,  expType);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_numberInt  =  NumberInput.parseInt(numStr,  expType);	  _numberInt    =    NumberInput.parseInt(numStr);    	non-compiled	[CE]  no  suitable  method  found  for  parseInt(String,int)	93	None	replace
412	[BUG]  [BUGGY]  _reportIntegral(NR_INTEGER,  numStr);  [CE]  cannot  find  symbol  NR_INTEGER  [FE]            JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportIntegral(NR_INTEGER,  numStr);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportIntegral(NR_INTEGER,  numStr);	  _reportIntegral(NR_LONG,    numStr);    	non-compiled	[CE]  cannot  find  symbol  NR_INTEGER	101	None	replace
413	[BUG]  [BUGGY]  reportIntegral(NR_INT,  numStr);  [CE]  cannot  find  symbol  [FE]              JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  reportIntegral(NR_INT,  numStr);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	reportIntegral(NR_INT,  numStr);	  _reportIntegral(NR_LONG,    numStr);    	non-compiled	[CE]  cannot  find  symbol	101	None	replace
414	[BUG]  [BUGGY]  _reportError( "Numeric  value( "+numStr+ ")not  in  range  [ "+count+ "] ");  [CE]  cannot  find  symbol  count  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportError( "Numeric  value( "+numStr+ ")not  in  range  [ "+count+ "] ");  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportError( "Numeric  value( "+numStr+ ")not  in  range  [ "+count+ "] ");	  _reportError(   "Numeric    value(   "+numStr+   ")not    in    range    [   "+len+   "]   ");    	non-compiled	[CE]  cannot  find  symbol  count	105	None	replace
415	[BUG]  [BUGGY]  _reportInvalidLong(NR_INT,  expType,  _numberNegative);  [CE]  cannot  find  symbol  [FE]            JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalidLong(NR_INT,  expType,  _numberNegative);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportInvalidLong(NR_INT,  expType,  _numberNegative);	  _reportInvalidLong(NR_INT,    expType);    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
416	[BUG]  [BUGGY]  _reportInvalidLong(NR_INT,  expType,  _inputPtr);  [CE]  cannot  find  symbol  [FE]              JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalidLong(NR_INT,  expType,  _inputPtr);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportInvalidLong(NR_INT,  expType,  _inputPtr);	  _reportInvalidLong(NR_INT,    expType);    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
417	[BUG]  [BUGGY]  _reportInvalidLong(NR_INT,  _numTypesValid);  [CE]  cannot  find  symbol  [FE]          JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalidLong(NR_INT,  _numTypesValid);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportInvalidLong(NR_INT,  _numTypesValid);	  _reportInvalidLong(NR_INT,    numStr);    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
418	[BUG]  [BUGGY]  _reportTooLongIntegral(NR_INT,    numStr);    _reportTooLongIntegral(NR_INT,  numStr);  _reportTooLongIntegral(NR_INT,  numStr);  _reportTooLongIntegral(NR_INTEGER,  numStr);  [CE]  cannot  find  symbol  NR_INTEGER  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportTooLongIntegral(NR_INT,    numStr);    _reportTooLongIntegral(NR_INT,  numStr);  _reportTooLongIntegral(NR_INT,  numStr);  _reportTooLongIntegral(NR_INTEGER,  numStr);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportTooLongIntegral(NR_INT,        numStr);        _reportTooLongIntegral(NR_INT,    numStr);    _reportTooLongIntegral(NR_INT,  numStr);  _reportTooLongIntegral(NR_INTEGER,  numStr);	  	non-compiled	[CE]  cannot  find  symbol  NR_INTEGER	8	None	add
419	[BUG]  [BUGGY]  _reportTooLongIntegral(NR_INT,    numStr);    _reportTooLongIntegral(NR_INT,  numStr);  _reportTooLongIntegral(NN_INT,  numStr);  _reportTooLongIntegral(NR_INT,  numStr);  [CE]  cannot  find  symbol  NN_INT  [FE]      JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportTooLongIntegral(NR_INT,    numStr);    _reportTooLongIntegral(NR_INT,  numStr);  _reportTooLongIntegral(NN_INT,  numStr);  _reportTooLongIntegral(NR_INT,  numStr);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportTooLongIntegral(NR_INT,        numStr);        _reportTooLongIntegral(NR_INT,    numStr);    _reportTooLongIntegral(NN_INT,  numStr);  _reportTooLongIntegral(NR_INT,  numStr);	  	non-compiled	[CE]  cannot  find  symbol  NN_INT	8	None	add
420	[BUG]  [BUGGY]  _reportTooLongIntegral(NR_INT,    numStr);    _reportTooLongIntegral(NR_INT,  numStr);  _reportTooLongIntegral(NR_INTEGER,  numStr);  _reportTooLongIntegral(NR_INT,  numStr);  [CE]  cannot  find  symbol  NR_INTEGER  [FE]        JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportTooLongIntegral(NR_INT,    numStr);    _reportTooLongIntegral(NR_INT,  numStr);  _reportTooLongIntegral(NR_INTEGER,  numStr);  _reportTooLongIntegral(NR_INT,  numStr);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportTooLongIntegral(NR_INT,        numStr);        _reportTooLongIntegral(NR_INT,    numStr);    _reportTooLongIntegral(NR_INTEGER,  numStr);  _reportTooLongIntegral(NR_INT,  numStr);	  	non-compiled	[CE]  cannot  find  symbol  NR_INTEGER	8	None	add
421	[BUG]  [BUGGY]  _reportInvalidEOF(buf,  offset,  len);  [CE]  no  suitable  method  found  for  _reportInvalidEOF(char[],int,int)  [FE]            JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalidEOF(buf,  offset,  len);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportInvalidEOF(buf,  offset,  len);	  _reportInvalidEOF(numStr,    expType);    	non-compiled	[CE]  no  suitable  method  found  for  _reportInvalidEOF(char[],int,int)	117	None	replace
422	[BUG]  [BUGGY]  ||(expType  ==  NR_BIGINT)&&  expType!=  NR_INT)  {  _throwInternal();  [CE]  illegal  start  of  expression  [FE]              JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  ||(expType  ==  NR_BIGINT)&&  expType!=  NR_INT)  {  _throwInternal();  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	||(expType  ==  NR_BIGINT)&&  expType!=  NR_INT)  {  _throwInternal();	  _throwInternal();    ||(expType    ==    NR_INT)&&    expType!=    NR_BIGINT)    {    _throwInternal();    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
423	[BUG]  [BUGGY]  ||(expType  ==  NR_INTEGER)&&  expType!=  NR_BIGINT)  {  _throwInternal();  [CE]  illegal  start  of  expression  [FE]                JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  ||(expType  ==  NR_INTEGER)&&  expType!=  NR_BIGINT)  {  _throwInternal();  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	||(expType  ==  NR_INTEGER)&&  expType!=  NR_BIGINT)  {  _throwInternal();	  _throwInternal();    ||(expType    ==    NR_INT)&&    expType!=    NR_BIGINT)    {    _throwInternal();    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
424	[BUG]  [BUGGY]  _reportInvalidEOFInValue(long,  numStr,  expType);  [CE]  '.class'  expected  [FE]              JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalidEOFInValue(long,  numStr,  expType);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportInvalidEOFInValue(long,  numStr,  expType);	  _reportInvalidEOFInValue(buf,    numStr,    expType);    	non-compiled	[CE]  '.class'  expected	38	None	replace
425	[BUG]  [BUGGY]  _parsingContext.setCurrentLong(numStr);  [CE]  cannot  find  symbol  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _parsingContext.setCurrentLong(numStr);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_parsingContext.setCurrentLong(numStr);	  _parsingContext.setCurrentName(numStr);    	non-compiled	[CE]  cannot  find  symbol	97	None	replace
426	[BUG]  [BUGGY]  _reportInvalidEOF(numStr);  JsonParseException  _reportInvalidEOF(numStr);  [CE]  ';'  expected  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalidEOF(numStr);  JsonParseException  _reportInvalidEOF(numStr);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportInvalidEOF(numStr);    JsonParseException  _reportInvalidEOF(numStr);	  	non-compiled	[CE]  ';'  expected	71	None	add
427	[BUG]  [BUGGY]  _reportInvalidEOF(numStr);  JsonReadContext  ctxt  =  getContext();  [CE]  cannot  find  symbol  [FE]      JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalidEOF(numStr);  JsonReadContext  ctxt  =  getContext();  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportInvalidEOF(numStr);    JsonReadContext  ctxt  =  getContext();	  	non-compiled	[CE]  cannot  find  symbol	71	None	add
428	[BUG]  [BUGGY]  _reportInvalidEOF(numStr);  JsonReadContext  ctxt  =  getCurrentContext();  [CE]  cannot  find  symbol  [FE]        JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalidEOF(numStr);  JsonReadContext  ctxt  =  getCurrentContext();  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportInvalidEOF(numStr);    JsonReadContext  ctxt  =  getCurrentContext();	  	non-compiled	[CE]  cannot  find  symbol	71	None	add
429	[BUG]  [BUGGY]  if(_parsingContext!=  null)  {  _throwInternal();  JsonReadContext  ctxt  =  _parsingContext.createChildObjectContext();  }  [CE]  method  createChildObjectContext  in  class  JsonReadContext  cannot  be  applied  to  given  types;  [FE]            JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  if(_parsingContext!=  null)  {  _throwInternal();  JsonReadContext  ctxt  =  _parsingContext.createChildObjectContext();  }  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	if(_parsingContext!=  null)  {  _throwInternal();  JsonReadContext  ctxt  =  _parsingContext.createChildObjectContext();  }	  _throwInternal();    JsonReadContext    ctxt    =    _parsingContext.createChildObjectContext();    	non-compiled	[CE]  method  createChildObjectContext  in  class  JsonReadContext  cannot  be  applied  to  given  types;	66	None	replace
430	[BUG]  [BUGGY]  _reportError(   "Missing  NR_INT  value.   ");  JsonParseException  _reportError( "Missing  NR_INT  value.   ");  [CE]  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportError(   "Missing  NR_INT  value.   ");  JsonParseException  _reportError( "Missing  NR_INT  value.   ");  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportError(   "Missing    NR_INT    value.   ");    JsonParseException  _reportError( "Missing  NR_INT  value.   ");	  	non-compiled	[CE]  	34	None	add
431	[BUG]  [BUGGY]  _numberNegative  =  NumberInput.parseBigInteger(numStr);  [CE]  cannot  find  symbol  [FE]          JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _numberNegative  =  NumberInput.parseBigInteger(numStr);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_numberNegative  =  NumberInput.parseBigInteger(numStr);	  _reportTooLongIntegral(NR_INT,    numStr);    _reportTooLongIntegral(NR_INT,    numStr);    }    	non-compiled	[CE]  cannot  find  symbol	91	None	replace
432	[BUG]  [BUGGY]  _reportTooIntegral(NR_INT,  numStr);  [CE]  cannot  find  symbol  [FE]          JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportTooIntegral(NR_INT,  numStr);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportTooIntegral(NR_INT,  numStr);	  _reportTooLongIntegral(NR_INT,    numStr);    ||(expType    ==    NR_LONG))    {    _reportTooLongIntegral(NR_INT,    numStr);    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
433	[BUG]  [BUGGY]  _numberBigInt  =  Integer.parseInt(numStr);  [CE]  incompatible  types  [FE]        JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _numberBigInt  =  Integer.parseInt(numStr);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_numberBigInt  =  Integer.parseInt(numStr);	          _numberBigInt    =    Long.parseLong(numStr);    	non-compiled	[CE]  incompatible  types	74	None	replace
434	[BUG]  [BUGGY]  _reportError(buf,  numStr);  [CE]  no  suitable  method  found  for  _reportError(char[],String)  [FE]        JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportError(buf,  numStr);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportError(buf,  numStr);	  _reportError(NR_INT,    numStr);    	non-compiled	[CE]  no  suitable  method  found  for  _reportError(char[],String)	1	None	replace
435	[BUG]  [BUGGY]  _reportError(buf,  numStr,  NR_INT);  [CE]  no  suitable  method  found  for  _reportError(char[],String,int)  [FE]          JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportError(buf,  numStr,  NR_INT);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportError(buf,  numStr,  NR_INT);	  _reportError(NR_INT,    numStr);    	non-compiled	[CE]  no  suitable  method  found  for  _reportError(char[],String,int)	1	None	replace
436	[BUG]  [BUGGY]  _reportError(buf,  _inputPtr,  numStr);  [CE]  no  suitable  method  found  for  _reportError(char[],int,String)  [FE]            JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportError(buf,  _inputPtr,  numStr);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportError(buf,  _inputPtr,  numStr);	  _reportError(NR_INT,    numStr);    	non-compiled	[CE]  no  suitable  method  found  for  _reportError(char[],int,String)	1	None	replace
437	[BUG]  [BUGGY]  ||(expType  ==  NR_BIGINT)&&  expType.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberInt  =  Long.parseLong  [CE]  illegal  start  of  expression  [FE]            JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  ||(expType  ==  NR_BIGINT)&&  expType.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberInt  =  Long.parseLong  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	||(expType  ==  NR_BIGINT)&&  expType.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberInt  =  Long.parseLong	  _reportUnsupportedOperation();    ||(expType    ==    NR_INT)&&    expType.inLongRange(buf,    offset,    len,    _numberNegative))    {    _numberInt    =    Long.parseLong(    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
438	[BUG]  [BUGGY]  _reportInvalidEOFInValue(NR_LONG,  numStr,  NR_INT);  [CE]  no  suitable  method  found  for  _reportInvalidEOFInValue(int,String,int)  [FE]            JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalidEOFInValue(NR_LONG,  numStr,  NR_INT);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportInvalidEOFInValue(NR_LONG,  numStr,  NR_INT);	  _reportInvalidEOFInValue(buf,    numStr,    NR_INT);    	non-compiled	[CE]  no  suitable  method  found  for  _reportInvalidEOFInValue(int,String,int)	83	None	replace
439	[BUG]  [BUGGY]  _parseSlowInt(buf,  offset,  len,  _numberNegative);  [CE]  method  _parseSlowInt  in  class  ParserBase  cannot  be  applied  to  given  types;  [FE]              JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _parseSlowInt(buf,  offset,  len,  _numberNegative);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_parseSlowInt(buf,  offset,  len,  _numberNegative);	          _parseSlowInt(buf,    offset,    len);    	non-compiled	[CE]  method  _parseSlowInt  in  class  ParserBase  cannot  be  applied  to  given  types;	32	None	replace
440	[BUG]  [BUGGY]  _parseSlowInt(buf,  offset,  len,  exType);  [CE]  cannot  find  symbol  exType  [FE]                JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _parseSlowInt(buf,  offset,  len,  exType);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_parseSlowInt(buf,  offset,  len,  exType);	          _parseSlowInt(buf,    offset,    len);    	non-compiled	[CE]  cannot  find  symbol  exType	32	None	replace
441	[BUG]  [BUGGY]  _throwInternal();  JsonReadContext  ctxt  =  _parsingContext.createChildIntContext(-1,  -1);  [CE]  cannot  find  symbol  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _throwInternal();  JsonReadContext  ctxt  =  _parsingContext.createChildIntContext(-1,  -1);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_throwInternal();  JsonReadContext  ctxt  =  _parsingContext.createChildIntContext(-1,  -1);	  _throwInternal();    JsonReadContext    ctxt    =    _parsingContext.createChildObjectContext(-1,    -1);    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
442	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _throwInternal();  JsonReadContext  ctxt  =  _parsingContext.createChildArrayContext(-1,  -1);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	add	_throwInternal();  JsonReadContext  ctxt  =  _parsingContext.createChildArrayContext(-1,  -1);	  _throwInternal();    JsonReadContext    ctxt    =    _parsingContext.createChildObjectContext(-1,    -1);    	compilable	  [FE]  JsonParseException  	65	8	replace
443	[BUG]  [BUGGY]  _throwInternal();  JsonReadContext  ctxt  =  _parsingContext.createChildArrayContext(-1,  -1);  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _throwInternal();  JsonReadContext  ctxt  =  _parsingContext.createChildArrayContext(-1,  -1);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_throwInternal();  JsonReadContext  ctxt  =  _parsingContext.createChildArrayContext(-1,  -1);	  _throwInternal();    JsonReadContext    ctxt    =    _parsingContext.createChildObjectContext(-1,    -1);    	compilable	  [FE]  JsonParseException  	65	8	replace
444	[BUG]  [BUGGY]  _reportInvalidLong(numStr,  expType,  _numberInputRow);  [CE]  cannot  find  symbol  _numberInputRow  [FE]                JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalidLong(numStr,  expType,  _numberInputRow);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportInvalidLong(numStr,  expType,  _numberInputRow);	  _reportInvalidLong(buf,    _numberInputRow,    expType);    	non-compiled	[CE]  cannot  find  symbol  _numberInputRow	46	None	replace
445	[BUG]  [BUGGY]  _reportInvalidLong(buf,  offset,  numStr);  [CE]  cannot  find  symbol  [FE]                JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalidLong(buf,  offset,  numStr);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportInvalidLong(buf,  offset,  numStr);	  _reportInvalidLong(len,    numStr);    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
446	[BUG]  [BUGGY]  _reportInvalidLong(buf,  len,  numStr);  [CE]  cannot  find  symbol  [FE]                  JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalidLong(buf,  len,  numStr);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportInvalidLong(buf,  len,  numStr);	  _reportInvalidLong(len,    numStr);    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
447	[BUG]  [BUGGY]  _numberInput  =  NumberInput.parseInt(numStr);  [CE]  cannot  find  symbol  _numberInput  [FE]            JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _numberInput  =  NumberInput.parseInt(numStr);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_numberInput  =  NumberInput.parseInt(numStr);	  _throwInternal();    if(_throwInternal()    >    0)    {    _throwInternal();    }    else    {    _numberInput.inLongRange(buf,    offset,    len);    _numberNegative    =    false;    }    	non-compiled	[CE]  cannot  find  symbol  _numberInput	114	None	replace
448	[BUG]  [BUGGY]  _reportUnsupportedOperation();    JsonReadContext  ctxt  =  _parsingContext.createChildObjectContext(-1,  -1);  _reportUnsupportedOperation();  JsonReadContext  ctxt  =  _parsingContext.createChildObjectContext(-1,  -1);  }  [CE]  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportUnsupportedOperation();    JsonReadContext  ctxt  =  _parsingContext.createChildObjectContext(-1,  -1);  _reportUnsupportedOperation();  JsonReadContext  ctxt  =  _parsingContext.createChildObjectContext(-1,  -1);  }  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportUnsupportedOperation();        JsonReadContext    ctxt    =    _parsingContext.createChildObjectContext(-1,    -1);    _reportUnsupportedOperation();  JsonReadContext  ctxt  =  _parsingContext.createChildObjectContext(-1,  -1);  }	  	non-compiled	[CE]  	61	None	add
449	[BUG]  [BUGGY]  nal();  JsonReadContext  ctxt  =  _parsingContext.getCurrentContext();  [CE]  cannot  find  symbol  [FE]              JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  nal();  JsonReadContext  ctxt  =  _parsingContext.getCurrentContext();  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	nal();  JsonReadContext  ctxt  =  _parsingContext.getCurrentContext();	  _throwInternal();    JsonReadContext    ctxt    =    _parsingContext.getCurrentContext();    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
450	[BUG]  [BUGGY]  _throwInternal();  JsonReadContext  ctxt  =  context.getCurrentContext();  [CE]  cannot  find  symbol  context  [FE]                JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _throwInternal();  JsonReadContext  ctxt  =  context.getCurrentContext();  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_throwInternal();  JsonReadContext  ctxt  =  context.getCurrentContext();	  _throwInternal();    JsonReadContext    ctxt    =    _parsingContext.getCurrentContext();    	non-compiled	[CE]  cannot  find  symbol  context	67	None	replace
451	[BUG]  [BUGGY]  _reportInvalidEOFInValue();  JsonReadContext  ctxt  =  getCurrentContext();  _reportInvalidEOFInValue();  [CE]  cannot  find  symbol  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalidEOFInValue();  JsonReadContext  ctxt  =  getCurrentContext();  _reportInvalidEOFInValue();  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportInvalidEOFInValue();    JsonReadContext  ctxt  =  getCurrentContext();  _reportInvalidEOFInValue();	  	non-compiled	[CE]  cannot  find  symbol	102	None	add
452	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalidEOFInValue();  JsonReadContext  context  =  _parsingContext.createChildObjectContext(-1,  expType);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	add	_reportInvalidEOFInValue();    JsonReadContext  context  =  _parsingContext.createChildObjectContext(-1,  expType);	  	compilable	  [FE]  JsonParseException  	102	8	add
453	[BUG]  [BUGGY]  _reportInvalidEOFInValue();  JsonReadContext  context  =  _parsingContext.createChildObjectContext(-1,  expType);  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalidEOFInValue();  JsonReadContext  context  =  _parsingContext.createChildObjectContext(-1,  expType);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportInvalidEOFInValue();    JsonReadContext  context  =  _parsingContext.createChildObjectContext(-1,  expType);	  	compilable	  [FE]  JsonParseException  	102	8	add
454	[BUG]  [BUGGY]  _reportInvalidEOFInValue();  JsonReadContext  context  =  _parsingContext.getCurrentContext();  [CE]  cannot  find  symbol  [FE]        JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalidEOFInValue();  JsonReadContext  context  =  _parsingContext.getCurrentContext();  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportInvalidEOFInValue();    JsonReadContext  context  =  _parsingContext.getCurrentContext();	  	non-compiled	[CE]  cannot  find  symbol	102	None	add
455	[BUG]  [BUGGY]  _reportInvalidEOF(numStr,  NR_INT);  [CE]  no  suitable  method  found  for  _reportInvalidEOF(String,int)  [FE]              JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalidEOF(numStr,  NR_INT);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportInvalidEOF(numStr,  NR_INT);	  _reportInvalidLong(numStr,    NR_INT);    	non-compiled	[CE]  no  suitable  method  found  for  _reportInvalidEOF(String,int)	45	None	replace
456	[BUG]  [BUGGY]  _reportInvalidEOFInValue( "Missing  NR_INT  value ");  [CE]  no  suitable  method  found  for  _reportInvalidEOFInValue(String)  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalidEOFInValue( "Missing  NR_INT  value ");  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportInvalidEOFInValue( "Missing  NR_INT  value ");	  _reportError(       "Missing    NR_INT    value       ");    _reportError(   "Missing    NR_INT    value       ");    	non-compiled	[CE]  no  suitable  method  found  for  _reportInvalidEOFInValue(String)	15	None	replace
457	[BUG]  [BUGGY]  _reportInvalidEOFInValue(buf,  offset,  len,  expTypesValid);  [CE]  cannot  find  symbol  expTypesValid  [FE]              JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalidEOFInValue(buf,  offset,  len,  expTypesValid);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportInvalidEOFInValue(buf,  offset,  len,  expTypesValid);	  _reportInvalidEOFInValue(buf,    offset,    len);    	non-compiled	[CE]  cannot  find  symbol  expTypesValid	82	None	replace
458	[BUG]  [BUGGY]  _reportUnsupportedOperation();    JsonReadContext  ctxt  =  _parsingContext.createChildObjectContext(-1,  -1);  _reportUnsupportedOperation();  if(ctxt!=  null)  {  _reportUnsupportedOperation();  JsonReadContext  ctxt  =  _parsingContext.createChildObjectContext(-1,  -1);  _reportUnsupportedOperation();  }  [CE]  variable  ctxt  is  already  defined  in  method  _parseSlowInt(int)  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportUnsupportedOperation();    JsonReadContext  ctxt  =  _parsingContext.createChildObjectContext(-1,  -1);  _reportUnsupportedOperation();  if(ctxt!=  null)  {  _reportUnsupportedOperation();  JsonReadContext  ctxt  =  _parsingContext.createChildObjectContext(-1,  -1);  _reportUnsupportedOperation();  }  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportUnsupportedOperation();        JsonReadContext    ctxt    =    _parsingContext.createChildObjectContext(-1,    -1);    _reportUnsupportedOperation();    if(ctxt!=  null)  {  _reportUnsupportedOperation();  JsonReadContext  ctxt  =  _parsingContext.createChildObjectContext(-1,  -1);  _reportUnsupportedOperation();  }	  	non-compiled	[CE]  variable  ctxt  is  already  defined  in  method  _parseSlowInt(int)	58	None	add
459	[BUG]  [BUGGY]  _reportUnsupportedOperation();    _reportUnsupportedOperation();  _throwUnsupportedOperation();  _reportUnsupportedOperation();  [CE]  cannot  find  symbol  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportUnsupportedOperation();    _reportUnsupportedOperation();  _throwUnsupportedOperation();  _reportUnsupportedOperation();  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportUnsupportedOperation();        _reportUnsupportedOperation();    _throwUnsupportedOperation();  _reportUnsupportedOperation();	  	non-compiled	[CE]  cannot  find  symbol	23	None	add
460	[BUG]  [BUGGY]  _reportUnsupportedOperation();    _reportUnsupportedOperation();  _throwUnquotedSpace();  _reportUnsupportedOperation();  [CE]  method  _throwUnquotedSpace  in  class  ParserBase  cannot  be  applied  to  given  types;  [FE]      JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportUnsupportedOperation();    _reportUnsupportedOperation();  _throwUnquotedSpace();  _reportUnsupportedOperation();  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportUnsupportedOperation();        _reportUnsupportedOperation();    _throwUnquotedSpace();  _reportUnsupportedOperation();	  	non-compiled	[CE]  method  _throwUnquotedSpace  in  class  ParserBase  cannot  be  applied  to  given  types;	23	None	add
461	[BUG]  [BUGGY]  _reportUnsupportedOperation();    _reportUnsupportedOperation();  JsonReadContext  ctxt  =  getCurrentContext();  [CE]  cannot  find  symbol  [FE]        JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportUnsupportedOperation();    _reportUnsupportedOperation();  JsonReadContext  ctxt  =  getCurrentContext();  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportUnsupportedOperation();        _reportUnsupportedOperation();    JsonReadContext  ctxt  =  getCurrentContext();	  	non-compiled	[CE]  cannot  find  symbol	23	None	add
462	[BUG]  [BUGGY]  _reportUnexpectedNumberInput(NR_LONG,  numStr);  [CE]  cannot  find  symbol  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportUnexpectedNumberInput(NR_LONG,  numStr);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportUnexpectedNumberInput(NR_LONG,  numStr);	  _reportTooLongIntegral(NR_INT,    numStr);    _reportTooLongIntegral(NR_INT,    numStr);    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
463	[BUG]  [BUGGY]  _reportInvalidEOFInValue(buf,  _numStr,  NR_INT);  [CE]  cannot  find  symbol  _numStr  [FE]              JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalidEOFInValue(buf,  _numStr,  NR_INT);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportInvalidEOFInValue(buf,  _numStr,  NR_INT);	  _reportInvalidEOFInValue(numStr,    NR_INT);    	non-compiled	[CE]  cannot  find  symbol  _numStr	17	None	replace
464	[BUG]  [BUGGY]  _reportError(   "Missing  NR_INT  value:   "  +  numStr);  _reportError( "Missing  NR_INT  value:   "  +  numStr);  }  [CE]  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportError(   "Missing  NR_INT  value:   "  +  numStr);  _reportError( "Missing  NR_INT  value:   "  +  numStr);  }  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportError(   "Missing    NR_INT    value:   "    +    numStr);    _reportError( "Missing  NR_INT  value:   "  +  numStr);  }	  	non-compiled	[CE]  	36	None	add
465	[BUG]  [BUGGY]  _parsingContext  =  JsonReadContext.createRootContext(null,  -1);  [CE]  no  suitable  method  found  for  createRootContext(<null>,int)  [FE]              JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _parsingContext  =  JsonReadContext.createRootContext(null,  -1);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_parsingContext  =  JsonReadContext.createRootContext(null,  -1);	          _parsingContext    =    JsonReadContext.createRootContext(-1,    -1);    	non-compiled	[CE]  no  suitable  method  found  for  createRootContext(<null>,int)	77	None	replace
466	[BUG]  [BUGGY]  _parsingContext  =  JsonReadContext.createRootContext(null,  null);  [CE]  no  suitable  method  found  for  createRootContext(<null>,<null>)  [FE]          JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _parsingContext  =  JsonReadContext.createRootContext(null,  null);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_parsingContext  =  JsonReadContext.createRootContext(null,  null);	          _parsingContext    =    JsonReadContext.createRootContext();    	non-compiled	[CE]  no  suitable  method  found  for  createRootContext(<null>,<null>)	75	None	replace
467	[BUG]  [BUGGY]  _parsingContext  =  JsonReadContext.createRootContext(nex);  [CE]  cannot  find  symbol  nex  [FE]            JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _parsingContext  =  JsonReadContext.createRootContext(nex);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_parsingContext  =  JsonReadContext.createRootContext(nex);	          _parsingContext    =    JsonReadContext.createRootContext();    	non-compiled	[CE]  cannot  find  symbol  nex	75	None	replace
468	[BUG]  [BUGGY]  _reportInvalidEOFInValue(buf,  offset,  len,  expType,  fractLength);  [CE]  cannot  find  symbol  fractLength  [FE]                  JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalidEOFInValue(buf,  offset,  len,  expType,  fractLength);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportInvalidEOFInValue(buf,  offset,  len,  expType,  fractLength);	  _reportInvalidEOFInValue(buf,    offset,    len,    expType);    	non-compiled	[CE]  cannot  find  symbol  fractLength	40	None	replace
469	[BUG]  [BUGGY]  _reportTooLongIntegral(NumberInput.inLongRange(buf,  offset,  len),  numStr);  [CE]  no  suitable  method  found  for  inLongRange(char[],int,int)  [FE]          JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportTooLongIntegral(NumberInput.inLongRange(buf,  offset,  len),  numStr);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportTooLongIntegral(NumberInput.inLongRange(buf,  offset,  len),  numStr);	  _reportTooLongIntegral(NR_INT,    numStr);    _reportTooLongIntegral(NN_INT,    numStr);    	non-compiled	[CE]  no  suitable  method  found  for  inLongRange(char[],int,int)	88	None	replace
470	[BUG]  [BUGGY]  _reportTooLongIntegral(NumberInput.parseLong(numStr),  expType);  [CE]  method  _reportTooLongIntegral  in  class  ParserBase  cannot  be  applied  to  given  types;  [FE]              JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportTooLongIntegral(NumberInput.parseLong(numStr),  expType);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportTooLongIntegral(NumberInput.parseLong(numStr),  expType);	  _reportTooLongIntegral(NR_INT,    numStr,    expType);    	non-compiled	[CE]  method  _reportTooLongIntegral  in  class  ParserBase  cannot  be  applied  to  given  types;	4	None	replace
471	[BUG]  [BUGGY]  _parseSlowInt(null,  expType);  [CE]  method  _parseSlowInt  in  class  ParserBase  cannot  be  applied  to  given  types;  [FE]        JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _parseSlowInt(null,  expType);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_parseSlowInt(null,  expType);	  _parseSlowInt();    	non-compiled	[CE]  method  _parseSlowInt  in  class  ParserBase  cannot  be  applied  to  given  types;	85	None	replace
472	[BUG]  [BUGGY]  if(_parsingContext!=  null)  {  _reportUnsupportedOperation();  JsonReadContext  ctxt  =  getCurrentContext();  _parsingContext  =  _parsingContext.createChildObjectContext(buf,  offset,  len,  expType);  }  [CE]  cannot  find  symbol  [FE]            JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  if(_parsingContext!=  null)  {  _reportUnsupportedOperation();  JsonReadContext  ctxt  =  getCurrentContext();  _parsingContext  =  _parsingContext.createChildObjectContext(buf,  offset,  len,  expType);  }  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	if(_parsingContext!=  null)  {  _reportUnsupportedOperation();  JsonReadContext  ctxt  =  getCurrentContext();  _parsingContext  =  _parsingContext.createChildObjectContext(buf,  offset,  len,  expType);  }	  _reportUnsupportedOperation();    JsonReadContext    ctxt    =    getCurrentContext();    _parsingContext    =    _parsingContext.createChildObjectContext(buf,    offset,    len,    expType);    	non-compiled	[CE]  cannot  find  symbol	110	None	replace
473	[BUG]  [BUGGY]  if(ctxt!=  null)  {  _reportUnsupportedOperation();  JsonReadContext  ctxt  =  getCurrentContext();  _parsingContext  =  _parsingContext.createChildObjectContext(buf,  offset,  len,  expType);  }  [CE]  cannot  find  symbol  ctxt  [FE]              JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  if(ctxt!=  null)  {  _reportUnsupportedOperation();  JsonReadContext  ctxt  =  getCurrentContext();  _parsingContext  =  _parsingContext.createChildObjectContext(buf,  offset,  len,  expType);  }  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	if(ctxt!=  null)  {  _reportUnsupportedOperation();  JsonReadContext  ctxt  =  getCurrentContext();  _parsingContext  =  _parsingContext.createChildObjectContext(buf,  offset,  len,  expType);  }	  _reportUnsupportedOperation();    JsonReadContext    ctxt    =    getCurrentContext();    _parsingContext    =    _parsingContext.createChildObjectContext(buf,    offset,    len,    expType);    	non-compiled	[CE]  cannot  find  symbol  ctxt	110	None	replace
474	[BUG]  [BUGGY]  if(_parsingContext!=  null)  {  _reportUnsupportedOperation();  JsonReadContext  ctxt  =  getCurrentContext();  _parsingContext  =  _parsingContext.createChildObjectContext(buf,  offset,  len,  expType  [CE]  ')'  expected  [FE]                JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  if(_parsingContext!=  null)  {  _reportUnsupportedOperation();  JsonReadContext  ctxt  =  getCurrentContext();  _parsingContext  =  _parsingContext.createChildObjectContext(buf,  offset,  len,  expType  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	if(_parsingContext!=  null)  {  _reportUnsupportedOperation();  JsonReadContext  ctxt  =  getCurrentContext();  _parsingContext  =  _parsingContext.createChildObjectContext(buf,  offset,  len,  expType	  _reportUnsupportedOperation();    JsonReadContext    ctxt    =    getCurrentContext();    _parsingContext    =    _parsingContext.createChildObjectContext(buf,    offset,    len,    expType);    	non-compiled	[CE]  ')'  expected	110	None	replace
475	[BUG]  [BUGGY]  ||(expType  ==  NR_INT)&&  expType.equals(Long.parseLong(numStr));  [CE]  illegal  start  of  expression  [FE]          JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  ||(expType  ==  NR_INT)&&  expType.equals(Long.parseLong(numStr));  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	||(expType  ==  NR_INT)&&  expType.equals(Long.parseLong(numStr));	  _throwInternal();    ||(expType    ==    NR_INT)&&    expType.equals(NR_BIGINT))    {    _numberInt    =    Long.parseLong(numStr);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
476	[BUG]  [BUGGY]  _reportError(     "Missing    NR_INT    value     ");    _reportError(   "Missing  NR_INT  value     ");  _reportWarning( "Missing  NR_INT  value   ");  _reportError( "Missing  NR_INT  value   ");  [CE]  cannot  find  symbol  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportError(     "Missing    NR_INT    value     ");    _reportError(   "Missing  NR_INT  value     ");  _reportWarning( "Missing  NR_INT  value   ");  _reportError( "Missing  NR_INT  value   ");  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportError(       "Missing        NR_INT        value       ");        _reportError(   "Missing    NR_INT    value       ");    _reportWarning( "Missing  NR_INT  value   ");  _reportError( "Missing  NR_INT  value   ");	  	non-compiled	[CE]  cannot  find  symbol	14	None	add
477	[BUG]  [BUGGY]  _reportError(buf,  _numberLong,  numStr);  [CE]  no  suitable  method  found  for  _reportError(char[],long,String)  [FE]        JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportError(buf,  _numberLong,  numStr);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportError(buf,  _numberLong,  numStr);	  _reportError(NR_INT,    numStr);    	non-compiled	[CE]  no  suitable  method  found  for  _reportError(char[],long,String)	1	None	replace
478	[BUG]  [BUGGY]  reportIntegral(NR_INT,  _numberNegative,  expType);  [CE]  cannot  find  symbol  [FE]            JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  reportIntegral(NR_INT,  _numberNegative,  expType);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	reportIntegral(NR_INT,  _numberNegative,  expType);	  _reportIntegral(NR_INT,    _numberNegative);    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
479	[BUG]  [BUGGY]  _reportError(NR_INT,  _numberNegative);  [CE]  no  suitable  method  found  for  _reportError(int,boolean)  [FE]              JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportError(NR_INT,  _numberNegative);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportError(NR_INT,  _numberNegative);	  _reportIntegral(NR_INT,    _numberNegative);    	non-compiled	[CE]  no  suitable  method  found  for  _reportError(int,boolean)	68	None	replace
480	[BUG]  [BUGGY]  reportIntegral(NR_INT,  expType);  [CE]  cannot  find  symbol  [FE]                JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  reportIntegral(NR_INT,  expType);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	reportIntegral(NR_INT,  expType);	  _reportIntegral(NR_INT,    _numberNegative);    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
481	[BUG]  [BUGGY]  _reportInvalidEOF();  JsonReadContext  ctxt  =  getCurrentContext();  _parsingContext  =  _parsingContext.createChildObjectContext(-1,  -1);  [CE]  cannot  find  symbol  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalidEOF();  JsonReadContext  ctxt  =  getCurrentContext();  _parsingContext  =  _parsingContext.createChildObjectContext(-1,  -1);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportInvalidEOF();    JsonReadContext  ctxt  =  getCurrentContext();  _parsingContext  =  _parsingContext.createChildObjectContext(-1,  -1);	  	non-compiled	[CE]  cannot  find  symbol	55	None	add
482	[BUG]  [BUGGY]  _reportInvalidEOF();  JsonReadContext  ctxt  =  getCurrentContext();  _reportInvalidEOF();  [CE]  cannot  find  symbol  [FE]      JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalidEOF();  JsonReadContext  ctxt  =  getCurrentContext();  _reportInvalidEOF();  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportInvalidEOF();    JsonReadContext  ctxt  =  getCurrentContext();  _reportInvalidEOF();	  	non-compiled	[CE]  cannot  find  symbol	55	None	add
483	[BUG]  [BUGGY]  _reportInvalidEOF();  JsonReadContext  ctxt  =  getCurrentContext();  _parsingContext  =  _parsingContext.createChildObjectContext(-1,  expType);  [CE]  cannot  find  symbol  [FE]        JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalidEOF();  JsonReadContext  ctxt  =  getCurrentContext();  _parsingContext  =  _parsingContext.createChildObjectContext(-1,  expType);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportInvalidEOF();    JsonReadContext  ctxt  =  getCurrentContext();  _parsingContext  =  _parsingContext.createChildObjectContext(-1,  expType);	  	non-compiled	[CE]  cannot  find  symbol	55	None	add
484	[BUG]  [BUGGY]  _reportInvalidEOF();  JsonReadContext  ctxt  =  getCurrentContext();  [CE]  cannot  find  symbol  [FE]          JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalidEOF();  JsonReadContext  ctxt  =  getCurrentContext();  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportInvalidEOF();    JsonReadContext  ctxt  =  getCurrentContext();	  	non-compiled	[CE]  cannot  find  symbol	55	None	add
485	[BUG]  [BUGGY]  _reportInvalidEOFInValue(buf,  _offset,  expType,  NR_INT);  [CE]  cannot  find  symbol  _offset  [FE]                JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalidEOFInValue(buf,  _offset,  expType,  NR_INT);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportInvalidEOFInValue(buf,  _offset,  expType,  NR_INT);	  _reportInvalidEOFInValue(numStr,    expType,    NR_INT);    	non-compiled	[CE]  cannot  find  symbol  _offset	39	None	replace
486	[BUG]  [BUGGY]  _reportInvalidEOFInValue(buf,  _numStr,  expType,  NR_INT);  [CE]  cannot  find  symbol  _numStr  [FE]                  JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalidEOFInValue(buf,  _numStr,  expType,  NR_INT);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportInvalidEOFInValue(buf,  _numStr,  expType,  NR_INT);	  _reportInvalidEOFInValue(numStr,    expType,    NR_INT);    	non-compiled	[CE]  cannot  find  symbol  _numStr	39	None	replace
487	[BUG]  [BUGGY]  _reportInvalidEOFInValue(buf,  expType,  NR_INT);  [CE]  no  suitable  method  found  for  _reportInvalidEOFInValue(char[],int,int)  [FE]                    JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalidEOFInValue(buf,  expType,  NR_INT);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportInvalidEOFInValue(buf,  expType,  NR_INT);	  _reportInvalidEOFInValue(numStr,    expType,    NR_INT);    	non-compiled	[CE]  no  suitable  method  found  for  _reportInvalidEOFInValue(char[],int,int)	39	None	replace
488	[BUG]  [BUGGY]  _reportInvalidEOFInValue(NR_INT,  numStr,  expType,  fractLength);  [CE]  cannot  find  symbol  fractLength  [FE]            JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalidEOFInValue(NR_INT,  numStr,  expType,  fractLength);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportInvalidEOFInValue(NR_INT,  numStr,  expType,  fractLength);	  _reportInvalidEOFInValue(NR_INT,    numStr,    expType);    	non-compiled	[CE]  cannot  find  symbol  fractLength	16	None	replace
489	[BUG]  [BUGGY]  _parsingContext  =  _parsingContext.createChildInstanceContext(-1,  -1);  [CE]  cannot  find  symbol  [FE]        JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _parsingContext  =  _parsingContext.createChildInstanceContext(-1,  -1);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_parsingContext  =  _parsingContext.createChildInstanceContext(-1,  -1);	  _reportUnsupportedOperation();    JsonParseException    p    =    _parsingContext.createChildObjectContext(-1,    -1);    _reportUnsupportedOperation();    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
490	[BUG]  [BUGGY]  _reportInvalidEOF(buf,  _numStr,  expType);  [CE]  cannot  find  symbol  _numStr  [FE]            JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalidEOF(buf,  _numStr,  expType);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportInvalidEOF(buf,  _numStr,  expType);	  _reportInvalidEOF(numStr,    expType);    	non-compiled	[CE]  cannot  find  symbol  _numStr	117	None	replace
491	[BUG]  [BUGGY]  _reportInvalidEOF(buf,  _inputPtr,  expType);  [CE]  no  suitable  method  found  for  _reportInvalidEOF(char[],int,int)  [FE]              JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalidEOF(buf,  _inputPtr,  expType);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportInvalidEOF(buf,  _inputPtr,  expType);	  _reportInvalidEOF(numStr,    expType);    	non-compiled	[CE]  no  suitable  method  found  for  _reportInvalidEOF(char[],int,int)	117	None	replace
492	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _parsingContext.setCurrentName(numStr);  if(_parsingContext!=  null)  {  _parsingContext.setCurrentName(numStr);  }  else  {  _parsingContext.setCurrentName(numStr);  }  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	add	_parsingContext.setCurrentName(numStr);    if(_parsingContext!=  null)  {  _parsingContext.setCurrentName(numStr);  }  else  {  _parsingContext.setCurrentName(numStr);  }	  	compilable	  [FE]  JsonParseException  	96	8	add
493	[BUG]  [BUGGY]  _parsingContext.setCurrentName(numStr);  if(_parsingContext!=  null)  {  _parsingContext.setCurrentName(numStr);  }  else  {  _parsingContext.setCurrentName(numStr);  }  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _parsingContext.setCurrentName(numStr);  if(_parsingContext!=  null)  {  _parsingContext.setCurrentName(numStr);  }  else  {  _parsingContext.setCurrentName(numStr);  }  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_parsingContext.setCurrentName(numStr);    if(_parsingContext!=  null)  {  _parsingContext.setCurrentName(numStr);  }  else  {  _parsingContext.setCurrentName(numStr);  }	  	compilable	  [FE]  JsonParseException  	96	8	add
494	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _parsingContext.setCurrentName(numStr);  if(_parsingContext!=  null)  {  _parsingContext.setCurrentName(numStr);  }  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	add	_parsingContext.setCurrentName(numStr);    if(_parsingContext!=  null)  {  _parsingContext.setCurrentName(numStr);  }	  	compilable	  [FE]  JsonParseException  	96	8	add
495	[BUG]  [BUGGY]  _parsingContext.setCurrentName(numStr);  if(_parsingContext!=  null)  {  _parsingContext.setCurrentName(numStr);  }  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _parsingContext.setCurrentName(numStr);  if(_parsingContext!=  null)  {  _parsingContext.setCurrentName(numStr);  }  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_parsingContext.setCurrentName(numStr);    if(_parsingContext!=  null)  {  _parsingContext.setCurrentName(numStr);  }	  	compilable	  [FE]  JsonParseException  	96	8	add
496	[BUG]  [BUGGY]  _parsingContext.setCurrentName(numStr);  if(_parsingContext!=  null)  {  _parsingContext.setCurrentName(numStr);  }  else  {  _parsingContext.setCurrentName(  nameStr);  }  [CE]  cannot  find  symbol  nameStr  [FE]        JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _parsingContext.setCurrentName(numStr);  if(_parsingContext!=  null)  {  _parsingContext.setCurrentName(numStr);  }  else  {  _parsingContext.setCurrentName(  nameStr);  }  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_parsingContext.setCurrentName(numStr);    if(_parsingContext!=  null)  {  _parsingContext.setCurrentName(numStr);  }  else  {  _parsingContext.setCurrentName(  nameStr);  }	  	non-compiled	[CE]  cannot  find  symbol  nameStr	96	None	add
497	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]          JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _parsingContext.setCurrentName(numStr);  if(_parsingContext!=  null)  {  _parsingContext.setCurrentName(numStr);  }  else  {  _parsingContext.setCurrentName(null);  }  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	add	_parsingContext.setCurrentName(numStr);    if(_parsingContext!=  null)  {  _parsingContext.setCurrentName(numStr);  }  else  {  _parsingContext.setCurrentName(null);  }	  	compilable	  [FE]  JsonParseException  	96	8	add
498	[BUG]  [BUGGY]  _parsingContext.setCurrentName(numStr);  if(_parsingContext!=  null)  {  _parsingContext.setCurrentName(numStr);  }  else  {  _parsingContext.setCurrentName(null);  }  [FE]  JsonParseException  [FE]          JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _parsingContext.setCurrentName(numStr);  if(_parsingContext!=  null)  {  _parsingContext.setCurrentName(numStr);  }  else  {  _parsingContext.setCurrentName(null);  }  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_parsingContext.setCurrentName(numStr);    if(_parsingContext!=  null)  {  _parsingContext.setCurrentName(numStr);  }  else  {  _parsingContext.setCurrentName(null);  }	  	compilable	  [FE]  JsonParseException  	96	8	add
499	[BUG]  [BUGGY]  _reportInvalidEOFInValue(buf,  offset,  len,  numStr);  [CE]  no  suitable  method  found  for  _reportInvalidEOFInValue(char[],int,int,String)  [FE]                JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalidEOFInValue(buf,  offset,  len,  numStr);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportInvalidEOFInValue(buf,  offset,  len,  numStr);	  _reportInvalidEOFInValue(buf,    _numberNegative,    numStr);    	non-compiled	[CE]  no  suitable  method  found  for  _reportInvalidEOFInValue(char[],int,int,String)	18	None	replace
500	[BUG]  [BUGGY]  _numberInt  =  Long.parseLong(numStr);  _num  [CE]  not  a  statement  [FE]                JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _numberInt  =  Long.parseLong(numStr);  _num  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_numberInt  =  Long.parseLong(numStr);  _num	  _throwInternal();    ||(expType    ==    NR_INT)&&    expType.equals(NR_BIGINT))    {    _numberInt    =    Long.parseLong(numStr);    _num    	non-compiled	[CE]  not  a  statement	52	None	replace
501	[BUG]  [BUGGY]  _throwInternal();    JsonReadContext  ctxt  =  _parsingContext.createChildObjectContext(-1,  -1);  if(ctxt!=  null)  {  _throwInternal();  JsonReadContext  ctxt  =  _parsingContext.createChildObjectContext(-1,  -1);  }  [CE]  variable  ctxt  is  already  defined  in  method  _parseSlowInt(int)  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _throwInternal();    JsonReadContext  ctxt  =  _parsingContext.createChildObjectContext(-1,  -1);  if(ctxt!=  null)  {  _throwInternal();  JsonReadContext  ctxt  =  _parsingContext.createChildObjectContext(-1,  -1);  }  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_throwInternal();        JsonReadContext    ctxt    =    _parsingContext.createChildObjectContext(-1,    -1);    if(ctxt!=  null)  {  _throwInternal();  JsonReadContext  ctxt  =  _parsingContext.createChildObjectContext(-1,  -1);  }	  	non-compiled	[CE]  variable  ctxt  is  already  defined  in  method  _parseSlowInt(int)	64	None	add
502	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportError( "Missing  NR_INT  value.  Expected  to  be  in  the  range. ");  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	add	_reportError( "Missing  NR_INT  value.  Expected  to  be  in  the  range. ");	  _reportError(   "Missing    NR_INT    value.   ");    	compilable	  [FE]  JsonParseException  	35	8	replace
503	[BUG]  [BUGGY]  _reportError( "Missing  NR_INT  value.  Expected  to  be  in  the  range. ");  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportError( "Missing  NR_INT  value.  Expected  to  be  in  the  range. ");  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportError( "Missing  NR_INT  value.  Expected  to  be  in  the  range. ");	  _reportError(   "Missing    NR_INT    value.   ");    	compilable	  [FE]  JsonParseException  	35	8	replace
504	[BUG]  [BUGGY]  _reportInvalidEOFInValue(buf,  _numStr);  [CE]  cannot  find  symbol  _numStr  [FE]              JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalidEOFInValue(buf,  _numStr);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportInvalidEOFInValue(buf,  _numStr);	  _reportInvalidEOFInValue(numStr);    	non-compiled	[CE]  cannot  find  symbol  _numStr	118	None	replace
505	[BUG]  [BUGGY]  _numberNegative  =  Long.parseLong(numStr);  break;  [CE]  incompatible  types  [FE]                JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _numberNegative  =  Long.parseLong(numStr);  break;  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_numberNegative  =  Long.parseLong(numStr);  break;	          _numberNegative    =    Long.parseLong(numStr);    return;    	non-compiled	[CE]  incompatible  types	33	None	replace
506	[BUG]  [BUGGY]  _numberInt  =  NumberInput.parseInt(numStr);  _numberInt  =  Node.parseInt(numStr);  [CE]  cannot  find  symbol  Node  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _numberInt  =  NumberInput.parseInt(numStr);  _numberInt  =  Node.parseInt(numStr);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_numberInt    =    NumberInput.parseInt(numStr);    _numberInt  =  Node.parseInt(numStr);	  	non-compiled	[CE]  cannot  find  symbol  Node	92	None	add
507	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportError( "Can  not  instantiate  value  of  type "+numStr);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	add	_reportError( "Can  not  instantiate  value  of  type "+numStr);	  _reportInvalidEOFInValue();    	compilable	  [FE]  JsonParseException  	103	8	replace
508	[BUG]  [BUGGY]  _reportError( "Can  not  instantiate  value  of  type "+numStr);  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportError( "Can  not  instantiate  value  of  type "+numStr);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportError( "Can  not  instantiate  value  of  type "+numStr);	  _reportInvalidEOFInValue();    	compilable	  [FE]  JsonParseException  	103	8	replace
509	[BUG]  [BUGGY]  _reportError(   "Missing  NR_INT  value.   ");  JsonReadContext  ctxt  =  getCurrentContext();  _reportError( "Missing  NR_INT  value.   ");  [CE]  cannot  find  symbol  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportError(   "Missing  NR_INT  value.   ");  JsonReadContext  ctxt  =  getCurrentContext();  _reportError( "Missing  NR_INT  value.   ");  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportError(   "Missing    NR_INT    value.   ");    JsonReadContext  ctxt  =  getCurrentContext();  _reportError( "Missing  NR_INT  value.   ");	  	non-compiled	[CE]  cannot  find  symbol	34	None	add
510	[BUG]  [BUGGY]  _reportError(   "Missing  NR_INT  value.   ");  JsonReadContext  ctxt  =  getCurrentContext();  _parsingContext  =  ctxt.getParent();  [CE]  cannot  find  symbol  [FE]      JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportError(   "Missing  NR_INT  value.   ");  JsonReadContext  ctxt  =  getCurrentContext();  _parsingContext  =  ctxt.getParent();  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportError(   "Missing    NR_INT    value.   ");    JsonReadContext  ctxt  =  getCurrentContext();  _parsingContext  =  ctxt.getParent();	  	non-compiled	[CE]  cannot  find  symbol	34	None	add
511	[BUG]  [BUGGY]  _reportTooLongIntegral(NR_INT,    numStr);    _reportTooLongIntegral(NR_INT,  numStr);  _reportTooIntegral(NR_INT,  numStr);  _reportTooLongIntegral(NR_INT,  numStr);  [CE]  cannot  find  symbol  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportTooLongIntegral(NR_INT,    numStr);    _reportTooLongIntegral(NR_INT,  numStr);  _reportTooIntegral(NR_INT,  numStr);  _reportTooLongIntegral(NR_INT,  numStr);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportTooLongIntegral(NR_INT,        numStr);        _reportTooLongIntegral(NR_INT,    numStr);    _reportTooIntegral(NR_INT,  numStr);  _reportTooLongIntegral(NR_INT,  numStr);	  	non-compiled	[CE]  cannot  find  symbol	8	None	add
512	[BUG]  [BUGGY]  _reportTooLongIntegral(NR_INT,    numStr);    _reportTooLongIntegral(NR_INT,  numStr);  _addToLongIntegral(NR_INT,  numStr);  _reportTooLongIntegral(NR_INT,  numStr);  [CE]  cannot  find  symbol  [FE]      JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportTooLongIntegral(NR_INT,    numStr);    _reportTooLongIntegral(NR_INT,  numStr);  _addToLongIntegral(NR_INT,  numStr);  _reportTooLongIntegral(NR_INT,  numStr);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportTooLongIntegral(NR_INT,        numStr);        _reportTooLongIntegral(NR_INT,    numStr);    _addToLongIntegral(NR_INT,  numStr);  _reportTooLongIntegral(NR_INT,  numStr);	  	non-compiled	[CE]  cannot  find  symbol	8	None	add
513	[BUG]  [BUGGY]  _reportTooLongIntegral(NR_INT,    numStr);    _reportTooLongIntegral(NR_INT,  numStr);  _reportTooLongIntegral(NR_INT,  numStr);  _reportTooLongIntegral(NR_INT,  numStr);  }  [CE]  [FE]        JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportTooLongIntegral(NR_INT,    numStr);    _reportTooLongIntegral(NR_INT,  numStr);  _reportTooLongIntegral(NR_INT,  numStr);  _reportTooLongIntegral(NR_INT,  numStr);  }  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportTooLongIntegral(NR_INT,        numStr);        _reportTooLongIntegral(NR_INT,    numStr);    _reportTooLongIntegral(NR_INT,  numStr);  _reportTooLongIntegral(NR_INT,  numStr);  }	  	non-compiled	[CE]  	8	None	add
514	[BUG]  [BUGGY]  _throwUnquotedSpace();  [CE]  method  _throwUnquotedSpace  in  class  ParserBase  cannot  be  applied  to  given  types;  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _throwUnquotedSpace();  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_throwUnquotedSpace();	  _reportInvalidEOF();    	non-compiled	[CE]  method  _throwUnquotedSpace  in  class  ParserBase  cannot  be  applied  to  given  types;	56	None	replace
515	[BUG]  [BUGGY]  _reportInvalidEOFInValue(NR_INT,  expType);  [CE]  no  suitable  method  found  for  _reportInvalidEOFInValue(int,int)  [FE]              JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalidEOFInValue(NR_INT,  expType);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportInvalidEOFInValue(NR_INT,  expType);	  _reportInvalidLong(NR_INT);    	non-compiled	[CE]  no  suitable  method  found  for  _reportInvalidEOFInValue(int,int)	5	None	replace
516	[BUG]  [BUGGY]  _reportInvalidNumber(numStr,  len);  [CE]  cannot  find  symbol  [FE]                JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalidNumber(numStr,  len);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportInvalidNumber(numStr,  len);	  _reportInvalidLong(len,    numStr);    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
517	[BUG]  [BUGGY]  _reportInvalidEOF(numStr,  len);  [CE]  no  suitable  method  found  for  _reportInvalidEOF(String,int)  [FE]                  JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalidEOF(numStr,  len);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportInvalidEOF(numStr,  len);	  _reportInvalidLong(len,    numStr);    	non-compiled	[CE]  no  suitable  method  found  for  _reportInvalidEOF(String,int)	6	None	replace
518	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]        JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportError( "Missing  NR_INT  value ", "Missing  NR_INT  value ");  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	add	_reportError( "Missing  NR_INT  value ", "Missing  NR_INT  value ");	  _reportError(   "Missing    NR_INT    value   ",    nex);    	compilable	  [FE]  JsonParseException  	107	8	replace
519	[BUG]  [BUGGY]  _reportError( "Missing  NR_INT  value ", "Missing  NR_INT  value ");  [FE]  JsonParseException  [FE]        JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportError( "Missing  NR_INT  value ", "Missing  NR_INT  value ");  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportError( "Missing  NR_INT  value ", "Missing  NR_INT  value ");	  _reportError(   "Missing    NR_INT    value   ",    nex);    	compilable	  [FE]  JsonParseException  	107	8	replace
520	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]          JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportError( "Missing  NR_INT  value ", "expected  a  value ");  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	add	_reportError( "Missing  NR_INT  value ", "expected  a  value ");	  _reportError(   "Missing    NR_INT    value   ",    nex);    	compilable	  [FE]  JsonParseException  	107	8	replace
521	[BUG]  [BUGGY]  _reportError( "Missing  NR_INT  value ", "expected  a  value ");  [FE]  JsonParseException  [FE]          JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportError( "Missing  NR_INT  value ", "expected  a  value ");  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportError( "Missing  NR_INT  value ", "expected  a  value ");	  _reportError(   "Missing    NR_INT    value   ",    nex);    	compilable	  [FE]  JsonParseException  	107	8	replace
522	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]            JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportError( "Missing  NR_INT  value ", "Missing  NR_INT  value. ");  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	add	_reportError( "Missing  NR_INT  value ", "Missing  NR_INT  value. ");	  _reportError(   "Missing    NR_INT    value   ",    nex);    	compilable	  [FE]  JsonParseException  	107	8	replace
523	[BUG]  [BUGGY]  _reportError( "Missing  NR_INT  value ", "Missing  NR_INT  value. ");  [FE]  JsonParseException  [FE]            JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportError( "Missing  NR_INT  value ", "Missing  NR_INT  value. ");  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportError( "Missing  NR_INT  value ", "Missing  NR_INT  value. ");	  _reportError(   "Missing    NR_INT    value   ",    nex);    	compilable	  [FE]  JsonParseException  	107	8	replace
524	[BUG]  [BUGGY]  _parsingContext  =  _parsingContext.getCurrentContext();  [CE]  cannot  find  symbol  [FE]            JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _parsingContext  =  _parsingContext.getCurrentContext();  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_parsingContext  =  _parsingContext.getCurrentContext();	  _reportUnsupportedOperation();    JsonReadContext    ctxt    =    _parsingContext.getCurrentContext();    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
525	[BUG]  [BUGGY]  _reportError( "Missing  NR_INT  value ");  _parsingContext  =  ctxt.getParent();  [CE]  cannot  find  symbol  ctxt  [FE]          JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportError( "Missing  NR_INT  value ");  _parsingContext  =  ctxt.getParent();  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportError( "Missing  NR_INT  value ");  _parsingContext  =  ctxt.getParent();	  _reportError(       "Missing    NR_INT    value       ");    JsonReadContext    ctxt    =    getCurrentContext();    _parsingContext    =    ctxt.getParent();    	non-compiled	[CE]  cannot  find  symbol  ctxt	99	None	replace
526	[BUG]  [BUGGY]  ||(expType  ==  NR_INT)&&  expType.inLongRange(buf,  offset,  len,  _numberNegative))  {  _reportUnsupportedOperation();  }  [CE]  illegal  start  of  expression  [FE]                JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  ||(expType  ==  NR_INT)&&  expType.inLongRange(buf,  offset,  len,  _numberNegative))  {  _reportUnsupportedOperation();  }  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	||(expType  ==  NR_INT)&&  expType.inLongRange(buf,  offset,  len,  _numberNegative))  {  _reportUnsupportedOperation();  }	  _reportUnsupportedOperation();    ||(expType    ==    NR_INT)&&    expType.inLongRange(buf,    offset,    len,    _numberNegative))    {    _reportUnsupportedOperation();    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
527	[BUG]  [BUGGY]  _reportInvalidEOF(numStr);  JsonReadContext  ctxt  =  getCurrentContext();  _reportInvalidEOF(numStr);  [CE]  cannot  find  symbol  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalidEOF(numStr);  JsonReadContext  ctxt  =  getCurrentContext();  _reportInvalidEOF(numStr);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportInvalidEOF(numStr);    JsonReadContext  ctxt  =  getCurrentContext();  _reportInvalidEOF(numStr);	  	non-compiled	[CE]  cannot  find  symbol	71	None	add
528	[BUG]  [BUGGY]  _reportInvalidEOF(numStr);  JsonReadContext  ctxt  =  getCurrentContext();  _parsingContext.setCurrentName(numStr);  [CE]  cannot  find  symbol  [FE]      JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalidEOF(numStr);  JsonReadContext  ctxt  =  getCurrentContext();  _parsingContext.setCurrentName(numStr);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportInvalidEOF(numStr);    JsonReadContext  ctxt  =  getCurrentContext();  _parsingContext.setCurrentName(numStr);	  	non-compiled	[CE]  cannot  find  symbol	71	None	add
529	[BUG]  [BUGGY]  _reportInvalidEOF(numStr);  JsonReadContext  ctxt  =  getCurrentContext();  _parsingContext.setCurrentName(null);  [CE]  cannot  find  symbol  [FE]        JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalidEOF(numStr);  JsonReadContext  ctxt  =  getCurrentContext();  _parsingContext.setCurrentName(null);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportInvalidEOF(numStr);    JsonReadContext  ctxt  =  getCurrentContext();  _parsingContext.setCurrentName(null);	  	non-compiled	[CE]  cannot  find  symbol	71	None	add
530	[BUG]  [BUGGY]  ||(expType  ==  NR_INT)&&  expType.longLongRange(buf,  offset,  len,  _numberNegative))  {  _numberInt  =  Long.parseLong  [CE]  illegal  start  of  expression  [FE]              JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  ||(expType  ==  NR_INT)&&  expType.longLongRange(buf,  offset,  len,  _numberNegative))  {  _numberInt  =  Long.parseLong  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	||(expType  ==  NR_INT)&&  expType.longLongRange(buf,  offset,  len,  _numberNegative))  {  _numberInt  =  Long.parseLong	  _reportUnsupportedOperation();    ||(expType    ==    NR_INT)&&    expType.inLongRange(buf,    offset,    len,    _numberNegative))    {    _numberInt    =    Long.parseLong    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
531	[BUG]  [BUGGY]  if(ctxt!=  null)  {  _reportUnsupportedOperation();  JsonReadContext  ctxt  =  getCurrentContext();  _parsingContext  =  _parsingContext.createChildObjectContext(buf,  offset,  len);  }  [CE]  cannot  find  symbol  ctxt  [FE]              JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  if(ctxt!=  null)  {  _reportUnsupportedOperation();  JsonReadContext  ctxt  =  getCurrentContext();  _parsingContext  =  _parsingContext.createChildObjectContext(buf,  offset,  len);  }  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	if(ctxt!=  null)  {  _reportUnsupportedOperation();  JsonReadContext  ctxt  =  getCurrentContext();  _parsingContext  =  _parsingContext.createChildObjectContext(buf,  offset,  len);  }	  _reportUnsupportedOperation();    JsonReadContext    ctxt    =    getCurrentContext();    _parsingContext    =    _parsingContext.createChildObjectContext(buf,    offset,    len);    	non-compiled	[CE]  cannot  find  symbol  ctxt	111	None	replace
532	[BUG]  [BUGGY]  if(_parsingContext!=  null)  {  _reportUnsupportedOperation();  JsonReadContext  ctxt  =  getCurrentContext();  _parsingContext  =  _parsingContext.createChildObjectContext(buf,  offset,  len);  }  [CE]  cannot  find  symbol  [FE]                JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  if(_parsingContext!=  null)  {  _reportUnsupportedOperation();  JsonReadContext  ctxt  =  getCurrentContext();  _parsingContext  =  _parsingContext.createChildObjectContext(buf,  offset,  len);  }  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	if(_parsingContext!=  null)  {  _reportUnsupportedOperation();  JsonReadContext  ctxt  =  getCurrentContext();  _parsingContext  =  _parsingContext.createChildObjectContext(buf,  offset,  len);  }	  _reportUnsupportedOperation();    JsonReadContext    ctxt    =    getCurrentContext();    _parsingContext    =    _parsingContext.createChildObjectContext(buf,    offset,    len);    	non-compiled	[CE]  cannot  find  symbol	111	None	replace
533	[BUG]  [BUGGY]  if(ctxt!=  null)  {  _reportUnsupportedOperation();  JsonReadContext  ctxt  =  getCurrentContext();  _parsingContext  =  _parsingContext.createChildObjectContext(buf,  offset,  len);  [CE]  'catch'  without  'try'  [FE]                  JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  if(ctxt!=  null)  {  _reportUnsupportedOperation();  JsonReadContext  ctxt  =  getCurrentContext();  _parsingContext  =  _parsingContext.createChildObjectContext(buf,  offset,  len);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	if(ctxt!=  null)  {  _reportUnsupportedOperation();  JsonReadContext  ctxt  =  getCurrentContext();  _parsingContext  =  _parsingContext.createChildObjectContext(buf,  offset,  len);	  _reportUnsupportedOperation();    JsonReadContext    ctxt    =    getCurrentContext();    _parsingContext    =    _parsingContext.createChildObjectContext(buf,    offset,    len);    	non-compiled	[CE]  'catch'  without  'try'	111	None	replace
534	[BUG]  [BUGGY]  _reportTooLongIntegral(NumberInput.inLongRange(buf,  offset,  len),  NR_INT);  [CE]  no  suitable  method  found  for  inLongRange(char[],int,int)  [FE]            JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportTooLongIntegral(NumberInput.inLongRange(buf,  offset,  len),  NR_INT);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportTooLongIntegral(NumberInput.inLongRange(buf,  offset,  len),  NR_INT);	  _reportTooLongIntegral(NR_INT,    0);    	non-compiled	[CE]  no  suitable  method  found  for  inLongRange(char[],int,int)	3	None	replace
535	[BUG]  [BUGGY]  _numberInt  =  NumberInput.parseInt(numStr);  _numberInputTotal  =  NumberInput.parseInt(numStr);  [CE]  cannot  find  symbol  _numberInputTotal  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _numberInt  =  NumberInput.parseInt(numStr);  _numberInputTotal  =  NumberInput.parseInt(numStr);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_numberInt  =  NumberInput.parseInt(numStr);  _numberInputTotal  =  NumberInput.parseInt(numStr);	  _throwInternal();    _throwInternal();    	non-compiled	[CE]  cannot  find  symbol  _numberInputTotal	48	None	replace
536	[BUG]  [BUGGY]  _numberInt  =  NumberInput.parseInt(numStr);  _numberNegative  =  NumberInput.parseInt(numStr);  [CE]  incompatible  types  [FE]      JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _numberInt  =  NumberInput.parseInt(numStr);  _numberNegative  =  NumberInput.parseInt(numStr);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_numberInt  =  NumberInput.parseInt(numStr);  _numberNegative  =  NumberInput.parseInt(numStr);	  _throwInternal();    _throwInternal();    	non-compiled	[CE]  incompatible  types	48	None	replace
537	[BUG]  [BUGGY]  _reportIntegral(NR_INT,  numStr,  expType,  fractLength);  [CE]  cannot  find  symbol  fractLength  [FE]            JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportIntegral(NR_INT,  numStr,  expType,  fractLength);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportIntegral(NR_INT,  numStr,  expType,  fractLength);	  _reportIntegral(NR_INT,    numStr,    expType);    	non-compiled	[CE]  cannot  find  symbol  fractLength	41	None	replace
538	[BUG]  [BUGGY]  _reportIntegral(NR_INT,  _numStr,  expType);  [CE]  cannot  find  symbol  _numStr  [FE]              JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportIntegral(NR_INT,  _numStr,  expType);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportIntegral(NR_INT,  _numStr,  expType);	  _reportIntegral(NR_INT,    numStr,    expType);    	non-compiled	[CE]  cannot  find  symbol  _numStr	41	None	replace
539	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportError( "msg.invalid.internal.number ",  _numberNegative);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	add	_reportError( "msg.invalid.internal.number ",  _numberNegative);	  _reportError(   "msg.invalid.internal.number   ");    	compilable	  [FE]  JsonParseException  	22	8	replace
540	[BUG]  [BUGGY]  _reportError( "msg.invalid.internal.number ",  _numberNegative);  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportError( "msg.invalid.internal.number ",  _numberNegative);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportError( "msg.invalid.internal.number ",  _numberNegative);	  _reportError(   "msg.invalid.internal.number   ");    	compilable	  [FE]  JsonParseException  	22	8	replace
541	[BUG]  [BUGGY]  _throwInternal();    _throwInternal();  _parseInt();  _throwInternal();  [CE]  cannot  find  symbol  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _throwInternal();    _throwInternal();  _parseInt();  _throwInternal();  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_throwInternal();        _throwInternal();    _parseInt();  _throwInternal();	  	non-compiled	[CE]  cannot  find  symbol	47	None	add
542	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _throwInternal();    _throwInternal();  _parsingContext.setCurrentName(null);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	add	_throwInternal();        _throwInternal();    _parsingContext.setCurrentName(null);	  	compilable	  [FE]  JsonParseException  	47	8	add
543	[BUG]  [BUGGY]  _throwInternal();    _throwInternal();  _parsingContext.setCurrentName(null);  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _throwInternal();    _throwInternal();  _parsingContext.setCurrentName(null);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_throwInternal();        _throwInternal();    _parsingContext.setCurrentName(null);	  	compilable	  [FE]  JsonParseException  	47	8	add
544	[BUG]  [BUGGY]  _throwInternal();    _throwInternal();  _parseInt(buf,  offset,  len);  [CE]  cannot  find  symbol  [FE]        JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _throwInternal();    _throwInternal();  _parseInt(buf,  offset,  len);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_throwInternal();        _throwInternal();    _parseInt(buf,  offset,  len);	  	non-compiled	[CE]  cannot  find  symbol	47	None	add
545	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]          JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _throwInternal();    _throwInternal();  _parsingContext.setCurrentName(numStr);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	add	_throwInternal();        _throwInternal();    _parsingContext.setCurrentName(numStr);	  	compilable	  [FE]  JsonParseException  	47	8	add
546	[BUG]  [BUGGY]  _throwInternal();    _throwInternal();  _parsingContext.setCurrentName(numStr);  [FE]  JsonParseException  [FE]          JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _throwInternal();    _throwInternal();  _parsingContext.setCurrentName(numStr);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_throwInternal();        _throwInternal();    _parsingContext.setCurrentName(numStr);	  	compilable	  [FE]  JsonParseException  	47	8	add
547	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]        JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportError( "Numeric  value( "+numStr+ ")not  in  range  [ "+expType+ ", "+len+ "] ");  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	add	_reportError( "Numeric  value( "+numStr+ ")not  in  range  [ "+expType+ ", "+len+ "] ");	  _reportError();    	compilable	  [FE]  JsonParseException  	13	8	replace
548	[BUG]  [BUGGY]  _reportError( "Numeric  value( "+numStr+ ")not  in  range  [ "+expType+ ", "+len+ "] ");  [FE]  JsonParseException  [FE]        JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportError( "Numeric  value( "+numStr+ ")not  in  range  [ "+expType+ ", "+len+ "] ");  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportError( "Numeric  value( "+numStr+ ")not  in  range  [ "+expType+ ", "+len+ "] ");	  _reportError();    	compilable	  [FE]  JsonParseException  	13	8	replace
549	[BUG]  [BUGGY]  _reportInvalidEOFInValue(buf,  off,  numStr,  expType);  [CE]  cannot  find  symbol  off  [FE]              JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalidEOFInValue(buf,  off,  numStr,  expType);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportInvalidEOFInValue(buf,  off,  numStr,  expType);	  _reportInvalidEOFInValue(buf,    numStr,    expType);    	non-compiled	[CE]  cannot  find  symbol  off	38	None	replace
550	[BUG]  [BUGGY]  _reportInvalidEOFInValue(numStr,  expType,  len);  [CE]  no  suitable  method  found  for  _reportInvalidEOFInValue(String,int,int)  [FE]                JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalidEOFInValue(numStr,  expType,  len);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportInvalidEOFInValue(numStr,  expType,  len);	  _reportInvalidEOFInValue(buf,    numStr,    expType);    	non-compiled	[CE]  no  suitable  method  found  for  _reportInvalidEOFInValue(String,int,int)	38	None	replace
551	[BUG]  [BUGGY]  _reportIntegral(NR_LONG,  expType);  [CE]  cannot  find  symbol  [FE]            JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportIntegral(NR_LONG,  expType);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportIntegral(NR_LONG,  expType);	  _reportIntegral(NR_LONG,    numStr);    	non-compiled	[CE]  cannot  find  symbol	101	None	replace
552	[BUG]  [BUGGY]  reportIntegral(NR_LONG,  expType);  [CE]  cannot  find  symbol  [FE]              JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  reportIntegral(NR_LONG,  expType);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	reportIntegral(NR_LONG,  expType);	  _reportIntegral(NR_LONG,    numStr);    	non-compiled	[CE]  cannot  find  symbol	101	None	replace
553	[BUG]  [BUGGY]  _numberInt  =  NumberInput.parseInt(intLength);  [CE]  cannot  find  symbol  intLength  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _numberInt  =  NumberInput.parseInt(intLength);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_numberInt  =  NumberInput.parseInt(intLength);	  _numberInt    =    NumberInput.parseInt(numStr);    	non-compiled	[CE]  cannot  find  symbol  intLength	93	None	replace
554	[BUG]  [BUGGY]  _numberInt  =  NumberInput.parseInt(intValue);  [CE]  cannot  find  symbol  intValue  [FE]      JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _numberInt  =  NumberInput.parseInt(intValue);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_numberInt  =  NumberInput.parseInt(intValue);	  _numberInt    =    NumberInput.parseInt(numStr);    	non-compiled	[CE]  cannot  find  symbol  intValue	93	None	replace
555	[BUG]  [BUGGY]  _reportIntegral(NR_INT,  1);  [CE]  cannot  find  symbol  [FE]                JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportIntegral(NR_INT,  1);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportIntegral(NR_INT,  1);	  _reportIntegral(NR_INT,    0);    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
556	[BUG]  [BUGGY]  _reportInvalidLong(numStr,  expType,  NR_LONG);  [CE]  cannot  find  symbol  [FE]            JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalidLong(numStr,  expType,  NR_LONG);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportInvalidLong(numStr,  expType,  NR_LONG);	  _reportInvalidLong(numStr,    expType,    NR_INT);    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
557	[BUG]  [BUGGY]  _reportInvalidLong(buf,  expType,  NR_INT);  [CE]  cannot  find  symbol  [FE]              JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalidLong(buf,  expType,  NR_INT);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportInvalidLong(buf,  expType,  NR_INT);	  _reportInvalidLong(numStr,    expType,    NR_INT);    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
558	[BUG]  [BUGGY]  ||(expType  ==  NR_INT)&&  expType!=  NR_BIGINT)  {  _throwInternal();  }  [CE]  illegal  start  of  expression  [FE]              JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  ||(expType  ==  NR_INT)&&  expType!=  NR_BIGINT)  {  _throwInternal();  }  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	||(expType  ==  NR_INT)&&  expType!=  NR_BIGINT)  {  _throwInternal();  }	  _throwInternal();    ||(expType    ==    NR_INT)&&    expType!=    NR_BIGINT)    {    _throwInternal();    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
559	[BUG]  [BUGGY]  ||(expType  ==  NR_INTEGER)&&  expType!=  NR_BIGINT)  {  _numberInt  =  Long.parseLong(numStr);  [CE]  illegal  start  of  expression  [FE]            JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  ||(expType  ==  NR_INTEGER)&&  expType!=  NR_BIGINT)  {  _numberInt  =  Long.parseLong(numStr);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	||(expType  ==  NR_INTEGER)&&  expType!=  NR_BIGINT)  {  _numberInt  =  Long.parseLong(numStr);	  _throwInternal();    ||(expType    ==    NR_INT)&&    expType!=    NR_BIGINT)    {    _numberInt    =    Long.parseLong(numStr);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
560	[BUG]  [BUGGY]  if(ctxt!=  null)  {  _reportUnsupportedOperation();  JsonReadContext  ctxt  =  getCurrentContext();  _parsingContext  =  _parsingContext.createChildObjectContext(-1,  -1);  }  [CE]  cannot  find  symbol  ctxt  [FE]        JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  if(ctxt!=  null)  {  _reportUnsupportedOperation();  JsonReadContext  ctxt  =  getCurrentContext();  _parsingContext  =  _parsingContext.createChildObjectContext(-1,  -1);  }  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	if(ctxt!=  null)  {  _reportUnsupportedOperation();  JsonReadContext  ctxt  =  getCurrentContext();  _parsingContext  =  _parsingContext.createChildObjectContext(-1,  -1);  }	  _reportUnsupportedOperation();    JsonReadContext    ctxt    =    getCurrentContext();    _parsingContext    =    _parsingContext.createChildObjectContext(-1,    -1);    	non-compiled	[CE]  cannot  find  symbol  ctxt	108	None	replace
561	[BUG]  [BUGGY]  if(ctxt!=  null)  {  _reportUnsupportedOperation();  JsonReadContext  ctxt  =  getCurrentContext();  _parsingContext  =  _parsingContext.createChildObjectContext(-1,  -1);  }  else  {  [CE]  'catch'  without  'try'  [FE]          JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  if(ctxt!=  null)  {  _reportUnsupportedOperation();  JsonReadContext  ctxt  =  getCurrentContext();  _parsingContext  =  _parsingContext.createChildObjectContext(-1,  -1);  }  else  {  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	if(ctxt!=  null)  {  _reportUnsupportedOperation();  JsonReadContext  ctxt  =  getCurrentContext();  _parsingContext  =  _parsingContext.createChildObjectContext(-1,  -1);  }  else  {	  _reportUnsupportedOperation();    JsonReadContext    ctxt    =    getCurrentContext();    _parsingContext    =    _parsingContext.createChildObjectContext(-1,    -1);    	non-compiled	[CE]  'catch'  without  'try'	108	None	replace
562	[BUG]  [BUGGY]  if(ctxt!=  null)  {  _reportUnsupportedOperation();  JsonReadContext  ctxt  =  getCurrentContext();  _parsingContext  =  _parsingContext.createChildObjectContext(-1,  -1);  [CE]  'catch'  without  'try'  [FE]            JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  if(ctxt!=  null)  {  _reportUnsupportedOperation();  JsonReadContext  ctxt  =  getCurrentContext();  _parsingContext  =  _parsingContext.createChildObjectContext(-1,  -1);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	if(ctxt!=  null)  {  _reportUnsupportedOperation();  JsonReadContext  ctxt  =  getCurrentContext();  _parsingContext  =  _parsingContext.createChildObjectContext(-1,  -1);	  _reportUnsupportedOperation();    JsonReadContext    ctxt    =    getCurrentContext();    _parsingContext    =    _parsingContext.createChildObjectContext(-1,    -1);    	non-compiled	[CE]  'catch'  without  'try'	108	None	replace
563	[BUG]  [BUGGY]  _numberBigInt  =  NumberInput.parseLong(numStr);  [CE]  incompatible  types  [FE]        JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _numberBigInt  =  NumberInput.parseLong(numStr);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_numberBigInt  =  NumberInput.parseLong(numStr);	          _numberBigInt    =    Long.parseLong(numStr);    	non-compiled	[CE]  incompatible  types	74	None	replace
564	[BUG]  [BUGGY]  nex  =  _parsingContext.getCurrentToken();  _throwInternal();  [CE]  cannot  find  symbol  nex  [FE]        JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  nex  =  _parsingContext.getCurrentToken();  _throwInternal();  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	nex  =  _parsingContext.getCurrentToken();  _throwInternal();	  _throwInternal();    JsonParseException    p    =    _parsingContext.getCurrentToken();    _throwInternal();    	non-compiled	[CE]  cannot  find  symbol  nex	63	None	replace
565	[BUG]  [BUGGY]  _parsingContext  =  _parsingContext.getCurrentToken();  [CE]  cannot  find  symbol  [FE]          JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _parsingContext  =  _parsingContext.getCurrentToken();  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_parsingContext  =  _parsingContext.getCurrentToken();	  _throwInternal();    JsonParseException    p    =    _parsingContext.getCurrentToken();    _throwInternal();    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
566	[BUG]  [BUGGY]  if(_parsingContext.hasErrors())  {  _throwInternal();  }  [CE]  cannot  find  symbol  [FE]            JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  if(_parsingContext.hasErrors())  {  _throwInternal();  }  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	if(_parsingContext.hasErrors())  {  _throwInternal();  }	  _throwInternal();    JsonParseException    p    =    _parsingContext.getCurrentToken();    _throwInternal();    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
567	[BUG]  [BUGGY]  _reportInvalidLong(null,  expType,  fractLength);  [CE]  cannot  find  symbol  fractLength  [FE]                JsonParseException      [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  _reportInvalidLong(null,  expType,  fractLength);  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	_reportInvalidLong(null,  expType,  fractLength);	  _reportInvalidLong(null,    expType);    	non-compiled	[CE]  cannot  find  symbol  fractLength	80	None	replace
568	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(   "   ");  _throw  new  IllegalArgumentException( "   ");  [CE]  not  a  statement  [FE]    JsonParseException    [CONTEXT]      if  (NumberInput.inLongRange(buf,  offset,  len,  _numberNegative))  {  _numberLong  =  Long.parseLong(numStr);  _numTypesValid  =  NR_LONG;  }  else  {  if  ((expType  ==  NR_INT)  ||  (expType  ==  NR_LONG))  {      [BUGGY]  throw  new  IllegalArgumentException(   "   ");  _throw  new  IllegalArgumentException( "   ");  [BUGGY]      }  if  ((expType  ==  NR_DOUBLE)  ||  (expType  ==  NR_FLOAT))  {  _numberDouble  =  NumberInput.parseDouble(numStr);  _numTypesValid  =  NR_DOUBLE;  }  else  {  _numberBigInt  =  new  BigInteger(numStr);  _numTypesValid  =  NR_BIGINT;  }  }  [CLASS]  ParserBase  [METHOD]  _parseSlowInt  [RETURN_TYPE]  void  int  expType  [VARIABLES]  double  _numberDouble  d  value  NumberFormatException  nex  ByteArrayBuilder  _byteArrayBuilder  builder  String  numStr  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.6123724356957946	849	849	8	replace	throw    new    IllegalArgumentException(   "   ");    _throw  new  IllegalArgumentException( "   ");	  	non-compiled	[CE]  not  a  statement	19	None	add
