bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    JsonParseException    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	add	}    else    if((    _numTypesValid    &    NR_BIGDECIMAL)    ==    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {	  	compilable	  [FE]  AssertionFailedError  	30	8	add
2	[BUG]  [BUGGY]  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {  [FE]  AssertionFailedError  [FE]    JsonParseException    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	}    else    if((    _numTypesValid    &    NR_BIGDECIMAL)    ==    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {	  	compilable	  [FE]  AssertionFailedError  	30	8	add
3	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      JsonParseException    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	add	}    else    if((    _numTypesValid    &    NR_BIGDECIMAL)    ==    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {	  	compilable	  [FE]  AssertionFailedError  	30	8	add
4	[BUG]  [BUGGY]  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {  [FE]  AssertionFailedError  [FE]      JsonParseException    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	}    else    if((    _numTypesValid    &    NR_BIGDECIMAL)    ==    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {	  	compilable	  [FE]  AssertionFailedError  	30	8	add
5	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        JsonParseException    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  >=  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	add	}    else    if((    _numTypesValid    &    NR_BIGDECIMAL)    ==    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  >=  0)  {	  	compilable	  [FE]  AssertionFailedError  	30	8	add
6	[BUG]  [BUGGY]  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  >=  0)  {  [FE]  AssertionFailedError  [FE]        JsonParseException    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  >=  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	}    else    if((    _numTypesValid    &    NR_BIGDECIMAL)    ==    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  >=  0)  {	  	compilable	  [FE]  AssertionFailedError  	30	8	add
7	[BUG]  [BUGGY]  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {  [CE]  'else'  without  'if'  [FE]          JsonParseException    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	}    else    if((    _numTypesValid    &    NR_BIGDECIMAL)    ==    0)    {    else  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {	  	non-compiled	[CE]  'else'  without  'if'	30	None	add
8	[BUG]  [BUGGY]  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {  }  else  if((  _numtypesValid  &  NR_BIGDECIMAL)  ==  0)  {  [CE]  cannot  find  symbol  _numtypesValid  [FE]            JsonParseException    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {  }  else  if((  _numtypesValid  &  NR_BIGDECIMAL)  ==  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	}    else    if((    _numTypesValid    &    NR_BIGDECIMAL)    ==    0)    {    }  else  if((  _numtypesValid  &  NR_BIGDECIMAL)  ==  0)  {	  	non-compiled	[CE]  cannot  find  symbol  _numtypesValid	30	None	add
9	[BUG]  [BUGGY]  _parsingContext  =  parent.getParent();  [CE]  cannot  find  symbol  parent  [FE]        RuntimeException      [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  _parsingContext  =  parent.getParent();  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	_parsingContext  =  parent.getParent();	  _parsingContext    =    ctxt.getParent();    	non-compiled	[CE]  cannot  find  symbol  parent	1	None	replace
10	[BUG]  [BUGGY]  _parsingContext  =  JsonReadContext.getParent();  [CE]  non-static  method  getParent()  cannot  be  referenced  from  a  static  context  [FE]          RuntimeException      [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  _parsingContext  =  JsonReadContext.getParent();  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	_parsingContext  =  JsonReadContext.getParent();	  _parsingContext    =    ctxt.getParent();    	non-compiled	[CE]  non-static  method  getParent()  cannot  be  referenced  from  a  static  context	1	None	replace
11	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]              RuntimeException      [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0  ||(_numTypesValid  &  NR_BIGDECIMAL)!=  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	add	}  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0  ||(_numTypesValid  &  NR_BIGDECIMAL)!=  0)  {	  }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0)    {    }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)    >>    0)    {    	compilable	  [FE]  RuntimeException  	11	8	replace
12	[BUG]  [BUGGY]  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0  ||(_numTypesValid  &  NR_BIGDECIMAL)!=  0)  {  [FE]  RuntimeException  [FE]              RuntimeException      [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0  ||(_numTypesValid  &  NR_BIGDECIMAL)!=  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	}  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0  ||(_numTypesValid  &  NR_BIGDECIMAL)!=  0)  {	  }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0)    {    }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)    >>    0)    {    	compilable	  [FE]  RuntimeException  	11	8	replace
13	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	add	}        else        if((        _numTypesValid        &        NR_BIGDECIMAL)!=        0)        {        }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {	  	compilable	  [FE]  JsonParseException  	5	8	add
14	[BUG]  [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	}        else        if((        _numTypesValid        &        NR_BIGDECIMAL)!=        0)        {        }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {	  	compilable	  [FE]  JsonParseException  	5	8	add
15	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      JsonParseException    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	add	}        else        if((        _numTypesValid        &        NR_BIGDECIMAL)!=        0)        {        }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {	  	compilable	  [FE]  AssertionFailedError  	5	8	add
16	[BUG]  [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  [FE]  AssertionFailedError  [FE]      JsonParseException    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	}        else        if((        _numTypesValid        &        NR_BIGDECIMAL)!=        0)        {        }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {	  	compilable	  [FE]  AssertionFailedError  	5	8	add
17	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]        JsonParseException    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {  }  else  if((  _numTypesValid  &  NR_INT)!=  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	add	}        else        if((        _numTypesValid        &        NR_BIGDECIMAL)!=        0)        {        }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0)    {    }  else  if((  _numTypesValid  &  NR_INT)!=  0)  {	  	compilable	  [FE]  JsonParseException  	5	8	add
18	[BUG]  [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {  }  else  if((  _numTypesValid  &  NR_INT)!=  0)  {  [FE]  JsonParseException  [FE]        JsonParseException    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {  }  else  if((  _numTypesValid  &  NR_INT)!=  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	}        else        if((        _numTypesValid        &        NR_BIGDECIMAL)!=        0)        {        }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0)    {    }  else  if((  _numTypesValid  &  NR_INT)!=  0)  {	  	compilable	  [FE]  JsonParseException  	5	8	add
19	[BUG]  [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {  }  else  if((  _numTypesValid  &  NR_OBJECTLIT)!=  0)  {  [CE]  cannot  find  symbol  NR_OBJECTLIT  [FE]          JsonParseException    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {  }  else  if((  _numTypesValid  &  NR_OBJECTLIT)!=  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	}        else        if((        _numTypesValid        &        NR_BIGDECIMAL)!=        0)        {        }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0)    {    }  else  if((  _numTypesValid  &  NR_OBJECTLIT)!=  0)  {	  	non-compiled	[CE]  cannot  find  symbol  NR_OBJECTLIT	5	None	add
20	[BUG]  [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {  }  else  if((  _numTypesValid  &  NR_FIELD)!=  0)  {  [CE]  cannot  find  symbol  NR_FIELD  [FE]            JsonParseException    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {  }  else  if((  _numTypesValid  &  NR_FIELD)!=  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	}        else        if((        _numTypesValid        &        NR_BIGDECIMAL)!=        0)        {        }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0)    {    }  else  if((  _numTypesValid  &  NR_FIELD)!=  0)  {	  	non-compiled	[CE]  cannot  find  symbol  NR_FIELD	5	None	add
21	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	add	}        else        if((        _numTypesValid        &        NR_BIGDECIMAL)!=        0)        {        }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)    ==    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {	  	compilable	  [FE]  AssertionFailedError  	7	8	add
22	[BUG]  [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	}        else        if((        _numTypesValid        &        NR_BIGDECIMAL)!=        0)        {        }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)    ==    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {	  	compilable	  [FE]  AssertionFailedError  	7	8	add
23	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	add	}        else        if((        _numTypesValid        &        NR_BIGDECIMAL)!=        0)        {        }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)    ==    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {	  	compilable	  [FE]  AssertionFailedError  	7	8	add
24	[BUG]  [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	}        else        if((        _numTypesValid        &        NR_BIGDECIMAL)!=        0)        {        }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)    ==    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {	  	compilable	  [FE]  AssertionFailedError  	7	8	add
25	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {  }  else  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	add	}        else        if((        _numTypesValid        &        NR_BIGDECIMAL)!=        0)        {        }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)    ==    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {	  	compilable	  [FE]  AssertionFailedError  	7	8	add
26	[BUG]  [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {  }  else  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {  }  else  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	}        else        if((        _numTypesValid        &        NR_BIGDECIMAL)!=        0)        {        }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)    ==    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {	  	compilable	  [FE]  AssertionFailedError  	7	8	add
27	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {  }  else  if((  _numTypesValid  &  NR_INT)!=  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	add	}        else        if((        _numTypesValid        &        NR_BIGDECIMAL)!=        0)        {        }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)    ==    0)    {    }  else  if((  _numTypesValid  &  NR_INT)!=  0)  {	  	compilable	  [FE]  AssertionFailedError  	7	8	add
28	[BUG]  [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {  }  else  if((  _numTypesValid  &  NR_INT)!=  0)  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {  }  else  if((  _numTypesValid  &  NR_INT)!=  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	}        else        if((        _numTypesValid        &        NR_BIGDECIMAL)!=        0)        {        }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)    ==    0)    {    }  else  if((  _numTypesValid  &  NR_INT)!=  0)  {	  	compilable	  [FE]  AssertionFailedError  	7	8	add
29	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  >=  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	add	}        else        if((        _numTypesValid        &        NR_BIGDECIMAL)!=        0)        {        }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)    ==    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  >=  0)  {	  	compilable	  [FE]  AssertionFailedError  	7	8	add
30	[BUG]  [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  >=  0)  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  >=  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	}        else        if((        _numTypesValid        &        NR_BIGDECIMAL)!=        0)        {        }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)    ==    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  >=  0)  {	  	compilable	  [FE]  AssertionFailedError  	7	8	add
31	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGINT)    ==    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	add	}        else        if((        _numTypesValid        &        NR_BIGINT)        ==        0)        {        }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)    ==    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {	  	compilable	  [FE]  AssertionFailedError  	27	8	add
32	[BUG]  [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGINT)    ==    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGINT)    ==    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	}        else        if((        _numTypesValid        &        NR_BIGINT)        ==        0)        {        }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)    ==    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {	  	compilable	  [FE]  AssertionFailedError  	27	8	add
33	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGINT)    ==    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {  }  else  if((  _numTypesValid  &  NR_BIGINT)  ==  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	add	}        else        if((        _numTypesValid        &        NR_BIGINT)        ==        0)        {        }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)    ==    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)  ==  0)  {	  	compilable	  [FE]  AssertionFailedError  	27	8	add
34	[BUG]  [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGINT)    ==    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {  }  else  if((  _numTypesValid  &  NR_BIGINT)  ==  0)  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGINT)    ==    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {  }  else  if((  _numTypesValid  &  NR_BIGINT)  ==  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	}        else        if((        _numTypesValid        &        NR_BIGINT)        ==        0)        {        }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)    ==    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)  ==  0)  {	  	compilable	  [FE]  AssertionFailedError  	27	8	add
35	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGINT)    ==    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	add	}        else        if((        _numTypesValid        &        NR_BIGINT)        ==        0)        {        }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)    ==    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {	  	compilable	  [FE]  AssertionFailedError  	27	8	add
36	[BUG]  [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGINT)    ==    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGINT)    ==    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	}        else        if((        _numTypesValid        &        NR_BIGINT)        ==        0)        {        }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)    ==    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {	  	compilable	  [FE]  AssertionFailedError  	27	8	add
37	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGINT)    ==    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {  }  else  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	add	}        else        if((        _numTypesValid        &        NR_BIGINT)        ==        0)        {        }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)    ==    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {	  	compilable	  [FE]  AssertionFailedError  	27	8	add
38	[BUG]  [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGINT)    ==    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {  }  else  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGINT)    ==    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {  }  else  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	}        else        if((        _numTypesValid        &        NR_BIGINT)        ==        0)        {        }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)    ==    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {	  	compilable	  [FE]  AssertionFailedError  	27	8	add
39	[BUG]  [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGINT)    ==    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {  }  else  if((  _numTypesValid  &  NR_GDECIMAL)  ==  0)  {  [CE]  cannot  find  symbol  NR_GDECIMAL  [FE]            AssertionFailedError    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGINT)    ==    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {  }  else  if((  _numTypesValid  &  NR_GDECIMAL)  ==  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	}        else        if((        _numTypesValid        &        NR_BIGINT)        ==        0)        {        }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)    ==    0)    {    }  else  if((  _numTypesValid  &  NR_GDECIMAL)  ==  0)  {	  	non-compiled	[CE]  cannot  find  symbol  NR_GDECIMAL	27	None	add
40	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  >=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	add	}        else        if((        _numTypesValid        &        NR_BIGDECIMAL)!=        0)        {        }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {	  	compilable	  [FE]  AssertionFailedError  	9	8	add
41	[BUG]  [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  >=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  >=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	}        else        if((        _numTypesValid        &        NR_BIGDECIMAL)!=        0)        {        }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {	  	compilable	  [FE]  AssertionFailedError  	9	8	add
42	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  >=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	add	}        else        if((        _numTypesValid        &        NR_BIGDECIMAL)!=        0)        {        }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {	  	compilable	  [FE]  AssertionFailedError  	9	8	add
43	[BUG]  [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  >=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  >=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	}        else        if((        _numTypesValid        &        NR_BIGDECIMAL)!=        0)        {        }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {	  	compilable	  [FE]  AssertionFailedError  	9	8	add
44	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  >=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  >=  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	add	}        else        if((        _numTypesValid        &        NR_BIGDECIMAL)!=        0)        {        }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  >=  0)  {	  	compilable	  [FE]  AssertionFailedError  	9	8	add
45	[BUG]  [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  >=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  >=  0)  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  >=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  >=  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	}        else        if((        _numTypesValid        &        NR_BIGDECIMAL)!=        0)        {        }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  >=  0)  {	  	compilable	  [FE]  AssertionFailedError  	9	8	add
46	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  >=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	add	}        else        if((        _numTypesValid        &        NR_BIGDECIMAL)!=        0)        {        }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {	  	compilable	  [FE]  AssertionFailedError  	9	8	add
47	[BUG]  [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  >=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  >=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	}        else        if((        _numTypesValid        &        NR_BIGDECIMAL)!=        0)        {        }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {	  	compilable	  [FE]  AssertionFailedError  	9	8	add
48	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  >=  0)  {  }  else  if((  _numTypesValid  &  NR_INT)!=  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	add	}        else        if((        _numTypesValid        &        NR_BIGDECIMAL)!=        0)        {        }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_INT)!=  0)  {	  	compilable	  [FE]  AssertionFailedError  	9	8	add
49	[BUG]  [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  >=  0)  {  }  else  if((  _numTypesValid  &  NR_INT)!=  0)  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  >=  0)  {  }  else  if((  _numTypesValid  &  NR_INT)!=  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	}        else        if((        _numTypesValid        &        NR_BIGDECIMAL)!=        0)        {        }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_INT)!=  0)  {	  	compilable	  [FE]  AssertionFailedError  	9	8	add
50	[BUG]  [BUGGY]  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  if(BI_MIN_LONG.compareTo(_numberBigInt)>  0  ||  BI_MAX_LONG.compareTo(_numberBig  [CE]  ')'  expected  [FE]          RuntimeException      [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  if(BI_MIN_LONG.compareTo(_numberBigInt)>  0  ||  BI_MAX_LONG.compareTo(_numberBig  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  if(BI_MIN_LONG.compareTo(_numberBigInt)>  0  ||  BI_MAX_LONG.compareTo(_numberBig	          if((    _numTypesValid    &    NR_BIGINT)!=    0)    {    if(BI_MIN_LONG.compareTo(_numberBigInt)>    0    ||    BI_MAX_LONG.compareTo(_numberBigInt)    <    	non-compiled	[CE]  ')'  expected	50	None	replace
51	[BUG]  [BUGGY]  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  if(BI_MIN_LONG.compareTo(_numberBigInt)>  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0  [CE]  ')'  expected  [FE]            RuntimeException      [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  if(BI_MIN_LONG.compareTo(_numberBigInt)>  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  if(BI_MIN_LONG.compareTo(_numberBigInt)>  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0	          if((    _numTypesValid    &    NR_BIGINT)!=    0)    {    if(BI_MIN_LONG.compareTo(_numberBigInt)>    0    ||    BI_MAX_LONG.compareTo(_numberBigInt)    <    	non-compiled	[CE]  ')'  expected	50	None	replace
52	[BUG]  [BUGGY]  }  else  if((  _numTypesValid  &  NR_BIT)  ==  0)  {  [CE]  cannot  find  symbol  NR_BIT  [FE]        RuntimeException      [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }  else  if((  _numTypesValid  &  NR_BIT)  ==  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	}  else  if((  _numTypesValid  &  NR_BIT)  ==  0)  {	  }    else    if((    _numTypesValid    &    NR_BIGINT)    ==    0)    {    }    else    if((    _numTypesValid    &    NR_BIT)    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol  NR_BIT	46	None	replace
53	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    JsonParseException    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  >=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  >=  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	add	}    else    if((    _numTypesValid    &    NR_BIGDECIMAL)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  >=  0)  {	  	compilable	  [FE]  AssertionFailedError  	32	8	add
54	[BUG]  [BUGGY]  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  >=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  >=  0)  {  [FE]  AssertionFailedError  [FE]    JsonParseException    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  >=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  >=  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	}    else    if((    _numTypesValid    &    NR_BIGDECIMAL)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  >=  0)  {	  	compilable	  [FE]  AssertionFailedError  	32	8	add
55	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      JsonParseException    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  >=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	add	}    else    if((    _numTypesValid    &    NR_BIGDECIMAL)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {	  	compilable	  [FE]  AssertionFailedError  	32	8	add
56	[BUG]  [BUGGY]  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  >=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {  [FE]  AssertionFailedError  [FE]      JsonParseException    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  >=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	}    else    if((    _numTypesValid    &    NR_BIGDECIMAL)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {	  	compilable	  [FE]  AssertionFailedError  	32	8	add
57	[BUG]  [BUGGY]  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  >=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  >>  0)  {  [CE]  incompatible  types  [FE]        JsonParseException    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  >=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  >>  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	}    else    if((    _numTypesValid    &    NR_BIGDECIMAL)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  >>  0)  {	  	non-compiled	[CE]  incompatible  types	32	None	add
58	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          JsonParseException    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  >=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	add	}    else    if((    _numTypesValid    &    NR_BIGDECIMAL)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {	  	compilable	  [FE]  AssertionFailedError  	32	8	add
59	[BUG]  [BUGGY]  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  >=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {  [FE]  AssertionFailedError  [FE]          JsonParseException    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  >=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	}    else    if((    _numTypesValid    &    NR_BIGDECIMAL)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {	  	compilable	  [FE]  AssertionFailedError  	32	8	add
60	[BUG]  [BUGGY]  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  >=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  [Delete]  0)  {  [CE]  ')'  expected  [FE]            JsonParseException    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  >=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  [Delete]  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	}    else    if((    _numTypesValid    &    NR_BIGDECIMAL)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  [Delete]  0)  {	  	non-compiled	[CE]  ')'  expected	32	None	add
61	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    JsonParseException    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0  ||(_numTypesValid  &  NR_BIGINT)!=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0  ||(_numTypesValid  &  NR_BIGINT)!=  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	add	}    else    if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0    ||(_numTypesValid    &    NR_BIGINT)!=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0  ||(_numTypesValid  &  NR_BIGINT)!=  0)  {	  	compilable	  [FE]  AssertionFailedError  	34	8	add
62	[BUG]  [BUGGY]  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0  ||(_numTypesValid  &  NR_BIGINT)!=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0  ||(_numTypesValid  &  NR_BIGINT)!=  0)  {  [FE]  AssertionFailedError  [FE]    JsonParseException    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0  ||(_numTypesValid  &  NR_BIGINT)!=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0  ||(_numTypesValid  &  NR_BIGINT)!=  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	}    else    if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0    ||(_numTypesValid    &    NR_BIGINT)!=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0  ||(_numTypesValid  &  NR_BIGINT)!=  0)  {	  	compilable	  [FE]  AssertionFailedError  	34	8	add
63	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      JsonParseException    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0  ||(_numTypesValid  &  NR_BIGINT)!=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0  ||(_numTypesValid  &  NR_BIGINT)  >=  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	add	}    else    if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0    ||(_numTypesValid    &    NR_BIGINT)!=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0  ||(_numTypesValid  &  NR_BIGINT)  >=  0)  {	  	compilable	  [FE]  AssertionFailedError  	34	8	add
64	[BUG]  [BUGGY]  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0  ||(_numTypesValid  &  NR_BIGINT)!=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0  ||(_numTypesValid  &  NR_BIGINT)  >=  0)  {  [FE]  AssertionFailedError  [FE]      JsonParseException    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0  ||(_numTypesValid  &  NR_BIGINT)!=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0  ||(_numTypesValid  &  NR_BIGINT)  >=  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	}    else    if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0    ||(_numTypesValid    &    NR_BIGINT)!=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0  ||(_numTypesValid  &  NR_BIGINT)  >=  0)  {	  	compilable	  [FE]  AssertionFailedError  	34	8	add
65	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        JsonParseException    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0  ||(_numTypesValid  &  NR_BIGINT)!=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0  ||(_numTypesValid  &  NR_BIGINT)  ==  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	add	}    else    if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0    ||(_numTypesValid    &    NR_BIGINT)!=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0  ||(_numTypesValid  &  NR_BIGINT)  ==  0)  {	  	compilable	  [FE]  AssertionFailedError  	34	8	add
66	[BUG]  [BUGGY]  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0  ||(_numTypesValid  &  NR_BIGINT)!=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0  ||(_numTypesValid  &  NR_BIGINT)  ==  0)  {  [FE]  AssertionFailedError  [FE]        JsonParseException    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0  ||(_numTypesValid  &  NR_BIGINT)!=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0  ||(_numTypesValid  &  NR_BIGINT)  ==  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	}    else    if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0    ||(_numTypesValid    &    NR_BIGINT)!=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0  ||(_numTypesValid  &  NR_BIGINT)  ==  0)  {	  	compilable	  [FE]  AssertionFailedError  	34	8	add
67	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          JsonParseException    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0  ||(_numTypesValid  &  NR_BIGINT)!=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  >=  0  ||(_numTypesValid  &  NR_BIGINT)!=  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	add	}    else    if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0    ||(_numTypesValid    &    NR_BIGINT)!=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  >=  0  ||(_numTypesValid  &  NR_BIGINT)!=  0)  {	  	compilable	  [FE]  AssertionFailedError  	34	8	add
68	[BUG]  [BUGGY]  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0  ||(_numTypesValid  &  NR_BIGINT)!=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  >=  0  ||(_numTypesValid  &  NR_BIGINT)!=  0)  {  [FE]  AssertionFailedError  [FE]          JsonParseException    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0  ||(_numTypesValid  &  NR_BIGINT)!=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  >=  0  ||(_numTypesValid  &  NR_BIGINT)!=  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	}    else    if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0    ||(_numTypesValid    &    NR_BIGINT)!=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  >=  0  ||(_numTypesValid  &  NR_BIGINT)!=  0)  {	  	compilable	  [FE]  AssertionFailedError  	34	8	add
69	[BUG]  [BUGGY]  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0  ||(_numTypesValid  &  NR_BIGINT)!=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0  ||(_numTypesValid  &  NR_BIGINT)  >>  0)  {  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]            JsonParseException    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0  ||(_numTypesValid  &  NR_BIGINT)!=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0  ||(_numTypesValid  &  NR_BIGINT)  >>  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	}    else    if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0    ||(_numTypesValid    &    NR_BIGINT)!=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0  ||(_numTypesValid  &  NR_BIGINT)  >>  0)  {	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	34	None	add
70	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGINT)    ==    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	add	}        else        if((        _numTypesValid        &        NR_BIGINT)        ==        0)        {        }    else    if((    _numTypesValid    &    NR_BIGINT)!=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {	  	compilable	  [FE]  AssertionFailedError  	23	8	add
71	[BUG]  [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGINT)    ==    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGINT)    ==    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	}        else        if((        _numTypesValid        &        NR_BIGINT)        ==        0)        {        }    else    if((    _numTypesValid    &    NR_BIGINT)!=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {	  	compilable	  [FE]  AssertionFailedError  	23	8	add
72	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGINT)    ==    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGINT)  ==  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	add	}        else        if((        _numTypesValid        &        NR_BIGINT)        ==        0)        {        }    else    if((    _numTypesValid    &    NR_BIGINT)!=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)  ==  0)  {	  	compilable	  [FE]  AssertionFailedError  	23	8	add
73	[BUG]  [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGINT)    ==    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGINT)  ==  0)  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGINT)    ==    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGINT)  ==  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	}        else        if((        _numTypesValid        &        NR_BIGINT)        ==        0)        {        }    else    if((    _numTypesValid    &    NR_BIGINT)!=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)  ==  0)  {	  	compilable	  [FE]  AssertionFailedError  	23	8	add
74	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGINT)    ==    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	add	}        else        if((        _numTypesValid        &        NR_BIGINT)        ==        0)        {        }    else    if((    _numTypesValid    &    NR_BIGINT)!=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {	  	compilable	  [FE]  AssertionFailedError  	23	8	add
75	[BUG]  [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGINT)    ==    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGINT)    ==    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	}        else        if((        _numTypesValid        &        NR_BIGINT)        ==        0)        {        }    else    if((    _numTypesValid    &    NR_BIGINT)!=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {	  	compilable	  [FE]  AssertionFailedError  	23	8	add
76	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGINT)    ==    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGINT)  >=  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	add	}        else        if((        _numTypesValid        &        NR_BIGINT)        ==        0)        {        }    else    if((    _numTypesValid    &    NR_BIGINT)!=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)  >=  0)  {	  	compilable	  [FE]  AssertionFailedError  	23	8	add
77	[BUG]  [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGINT)    ==    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGINT)  >=  0)  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGINT)    ==    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGINT)  >=  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	}        else        if((        _numTypesValid        &        NR_BIGINT)        ==        0)        {        }    else    if((    _numTypesValid    &    NR_BIGINT)!=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)  >=  0)  {	  	compilable	  [FE]  AssertionFailedError  	23	8	add
78	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGINT)    ==    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	add	}        else        if((        _numTypesValid        &        NR_BIGINT)        ==        0)        {        }    else    if((    _numTypesValid    &    NR_BIGINT)!=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {	  	compilable	  [FE]  AssertionFailedError  	23	8	add
79	[BUG]  [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGINT)    ==    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGINT)    ==    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	}        else        if((        _numTypesValid        &        NR_BIGINT)        ==        0)        {        }    else    if((    _numTypesValid    &    NR_BIGINT)!=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {	  	compilable	  [FE]  AssertionFailedError  	23	8	add
80	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]          _parsingContext  =  _parsingContext.createChildObjectContext(-1,  -1);  _parsingContext  =  _parsingContext.createChildObjectContext(-1,  -1);  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	add	                _parsingContext    =    _parsingContext.createChildObjectContext(-1,    -1);    _parsingContext  =  _parsingContext.createChildObjectContext(-1,  -1);	  	compilable	  [FE]  JsonParseException  	38	10	add
81	[BUG]  [BUGGY]          _parsingContext  =  _parsingContext.createChildObjectContext(-1,  -1);  _parsingContext  =  _parsingContext.createChildObjectContext(-1,  -1);  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]          _parsingContext  =  _parsingContext.createChildObjectContext(-1,  -1);  _parsingContext  =  _parsingContext.createChildObjectContext(-1,  -1);  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	                _parsingContext    =    _parsingContext.createChildObjectContext(-1,    -1);    _parsingContext  =  _parsingContext.createChildObjectContext(-1,  -1);	  	compilable	  [FE]  JsonParseException  	38	10	add
82	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]          _parsingContext  =  _parsingContext.createChildObjectContext(-1,  -1);  _parsingContext  =  _parsingContext.createChildObjectContext(-2,  -1);  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	add	                _parsingContext    =    _parsingContext.createChildObjectContext(-1,    -1);    _parsingContext  =  _parsingContext.createChildObjectContext(-2,  -1);	  	compilable	  [FE]  JsonParseException  	38	10	add
83	[BUG]  [BUGGY]          _parsingContext  =  _parsingContext.createChildObjectContext(-1,  -1);  _parsingContext  =  _parsingContext.createChildObjectContext(-2,  -1);  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]          _parsingContext  =  _parsingContext.createChildObjectContext(-1,  -1);  _parsingContext  =  _parsingContext.createChildObjectContext(-2,  -1);  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	                _parsingContext    =    _parsingContext.createChildObjectContext(-1,    -1);    _parsingContext  =  _parsingContext.createChildObjectContext(-2,  -1);	  	compilable	  [FE]  JsonParseException  	38	10	add
84	[BUG]  [BUGGY]  if((  _numTypesValid  &  NR_LONG)!=  0)  {  if(BI_MIN_LONG.compareTo(_numberBigInt)>  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0  [CE]  ')'  expected  [FE]            RuntimeException      [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  if((  _numTypesValid  &  NR_LONG)!=  0)  {  if(BI_MIN_LONG.compareTo(_numberBigInt)>  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	if((  _numTypesValid  &  NR_LONG)!=  0)  {  if(BI_MIN_LONG.compareTo(_numberBigInt)>  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0	          if((    _numTypesValid    &    NR_LONG)!=    0)    {    if(BI_MIN_LONG.compareTo(_numberBigInt)>    0    ||    BI_MAX_LONG.compareTo(_numberBigInt)    <    	non-compiled	[CE]  ')'  expected	51	None	replace
85	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGINT)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGINT)  >=  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	add	}        else        if((        _numTypesValid        &        NR_BIGINT)        >=        0)        {        }    else    if((    _numTypesValid    &    NR_BIGINT)!=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)  >=  0)  {	  	compilable	  [FE]  AssertionFailedError  	15	8	add
86	[BUG]  [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGINT)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGINT)  >=  0)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGINT)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGINT)  >=  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	}        else        if((        _numTypesValid        &        NR_BIGINT)        >=        0)        {        }    else    if((    _numTypesValid    &    NR_BIGINT)!=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)  >=  0)  {	  	compilable	  [FE]  AssertionFailedError  	15	8	add
87	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGINT)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	add	}        else        if((        _numTypesValid        &        NR_BIGINT)        >=        0)        {        }    else    if((    _numTypesValid    &    NR_BIGINT)!=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {	  	compilable	  [FE]  AssertionFailedError  	15	8	add
88	[BUG]  [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGINT)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGINT)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	}        else        if((        _numTypesValid        &        NR_BIGINT)        >=        0)        {        }    else    if((    _numTypesValid    &    NR_BIGINT)!=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {	  	compilable	  [FE]  AssertionFailedError  	15	8	add
89	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGINT)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGINT)  ==  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	add	}        else        if((        _numTypesValid        &        NR_BIGINT)        >=        0)        {        }    else    if((    _numTypesValid    &    NR_BIGINT)!=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)  ==  0)  {	  	compilable	  [FE]  AssertionFailedError  	15	8	add
90	[BUG]  [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGINT)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGINT)  ==  0)  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGINT)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGINT)  ==  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	}        else        if((        _numTypesValid        &        NR_BIGINT)        >=        0)        {        }    else    if((    _numTypesValid    &    NR_BIGINT)!=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)  ==  0)  {	  	compilable	  [FE]  AssertionFailedError  	15	8	add
91	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGINT)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	add	}        else        if((        _numTypesValid        &        NR_BIGINT)        >=        0)        {        }    else    if((    _numTypesValid    &    NR_BIGINT)!=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {	  	compilable	  [FE]  AssertionFailedError  	15	8	add
92	[BUG]  [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGINT)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGINT)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	}        else        if((        _numTypesValid        &        NR_BIGINT)        >=        0)        {        }    else    if((    _numTypesValid    &    NR_BIGINT)!=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {	  	compilable	  [FE]  AssertionFailedError  	15	8	add
93	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGINT)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGINT)>  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	add	}        else        if((        _numTypesValid        &        NR_BIGINT)        >=        0)        {        }    else    if((    _numTypesValid    &    NR_BIGINT)!=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)>  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {	  	compilable	  [FE]  AssertionFailedError  	15	8	add
94	[BUG]  [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGINT)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGINT)>  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGINT)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGINT)>  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	}        else        if((        _numTypesValid        &        NR_BIGINT)        >=        0)        {        }    else    if((    _numTypesValid    &    NR_BIGINT)!=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)>  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {	  	compilable	  [FE]  AssertionFailedError  	15	8	add
95	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0  ||(_numTypesValid  &  NR_BIGINT)!=  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	add	}  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0  ||(_numTypesValid  &  NR_BIGINT)!=  0)  {	  }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)    ==    0)    {    	compilable	  [FE]  JsonParseException  	31	8	replace
96	[BUG]  [BUGGY]  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0  ||(_numTypesValid  &  NR_BIGINT)!=  0)  {  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0  ||(_numTypesValid  &  NR_BIGINT)!=  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	}  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0  ||(_numTypesValid  &  NR_BIGINT)!=  0)  {	  }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)    ==    0)    {    	compilable	  [FE]  JsonParseException  	31	8	replace
97	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    JsonParseException    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  _parsingContext  =(JsonReadContext)_parsingContext.getParent();  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	add	_parsingContext  =(JsonReadContext)_parsingContext.getParent();	          _parsingContext    =    _parsingContext.getParent();    	compilable	  [FE]  RuntimeException  	41	14	replace
98	[BUG]  [BUGGY]  _parsingContext  =(JsonReadContext)_parsingContext.getParent();  [FE]  RuntimeException  [FE]    JsonParseException    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  _parsingContext  =(JsonReadContext)_parsingContext.getParent();  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	_parsingContext  =(JsonReadContext)_parsingContext.getParent();	          _parsingContext    =    _parsingContext.getParent();    	compilable	  [FE]  RuntimeException  	41	14	replace
99	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGINT)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  >=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	add	}        else        if((        _numTypesValid        &        NR_BIGINT)        >=        0)        {        }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {	  	compilable	  [FE]  AssertionFailedError  	44	8	add
100	[BUG]  [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGINT)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  >=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGINT)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  >=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	}        else        if((        _numTypesValid        &        NR_BIGINT)        >=        0)        {        }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {	  	compilable	  [FE]  AssertionFailedError  	44	8	add
101	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGINT)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  >=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  >=  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	add	}        else        if((        _numTypesValid        &        NR_BIGINT)        >=        0)        {        }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  >=  0)  {	  	compilable	  [FE]  AssertionFailedError  	44	8	add
102	[BUG]  [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGINT)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  >=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  >=  0)  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGINT)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  >=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  >=  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	}        else        if((        _numTypesValid        &        NR_BIGINT)        >=        0)        {        }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  >=  0)  {	  	compilable	  [FE]  AssertionFailedError  	44	8	add
103	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGINT)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  >=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGINT)  >=  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	add	}        else        if((        _numTypesValid        &        NR_BIGINT)        >=        0)        {        }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)  >=  0)  {	  	compilable	  [FE]  AssertionFailedError  	44	8	add
104	[BUG]  [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGINT)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  >=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGINT)  >=  0)  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGINT)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  >=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGINT)  >=  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	}        else        if((        _numTypesValid        &        NR_BIGINT)        >=        0)        {        }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)  >=  0)  {	  	compilable	  [FE]  AssertionFailedError  	44	8	add
105	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGINT)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  >=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	add	}        else        if((        _numTypesValid        &        NR_BIGINT)        >=        0)        {        }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {	  	compilable	  [FE]  AssertionFailedError  	44	8	add
106	[BUG]  [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGINT)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  >=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGINT)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  >=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	}        else        if((        _numTypesValid        &        NR_BIGINT)        >=        0)        {        }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {	  	compilable	  [FE]  AssertionFailedError  	44	8	add
107	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGINT)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  >=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	add	}        else        if((        _numTypesValid        &        NR_BIGINT)        >=        0)        {        }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {	  	compilable	  [FE]  AssertionFailedError  	44	8	add
108	[BUG]  [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGINT)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  >=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGINT)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  >=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	}        else        if((        _numTypesValid        &        NR_BIGINT)        >=        0)        {        }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {	  	compilable	  [FE]  AssertionFailedError  	44	8	add
109	[BUG]  [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(null);  [CE]  method  createChildObjectContext  in  class  JsonReadContext  cannot  be  applied  to  given  types;  [FE]        RuntimeException      [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(null);  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	_parsingContext  =  _parsingContext.createChildObjectContext(null);	          _parsingContext    =    _parsingContext.createChildObjectContext();    	non-compiled	[CE]  method  createChildObjectContext  in  class  JsonReadContext  cannot  be  applied  to  given  types;	37	None	replace
110	[BUG]  [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(JsonReadContext.class);  [CE]  method  createChildObjectContext  in  class  JsonReadContext  cannot  be  applied  to  given  types;  [FE]          RuntimeException      [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(JsonReadContext.class);  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	_parsingContext  =  _parsingContext.createChildObjectContext(JsonReadContext.class);	          _parsingContext    =    _parsingContext.createChildObjectContext();    	non-compiled	[CE]  method  createChildObjectContext  in  class  JsonReadContext  cannot  be  applied  to  given  types;	37	None	replace
111	[BUG]  [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(NR_INT);  [CE]  method  createChildObjectContext  in  class  JsonReadContext  cannot  be  applied  to  given  types;  [FE]            RuntimeException      [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(NR_INT);  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	_parsingContext  =  _parsingContext.createChildObjectContext(NR_INT);	          _parsingContext    =    _parsingContext.createChildObjectContext();    	non-compiled	[CE]  method  createChildObjectContext  in  class  JsonReadContext  cannot  be  applied  to  given  types;	37	None	replace
112	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    JsonParseException    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0  &&(_numTypesValid  &  NR_BIGINT)!=  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	add	}  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0  &&(_numTypesValid  &  NR_BIGINT)!=  0)  {	  }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0    ||(_numTypesValid    &    NR_BIGINT)!=    0)    {    	compilable	  [FE]  RuntimeException  	35	8	replace
113	[BUG]  [BUGGY]  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0  &&(_numTypesValid  &  NR_BIGINT)!=  0)  {  [FE]  RuntimeException  [FE]    JsonParseException    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0  &&(_numTypesValid  &  NR_BIGINT)!=  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	}  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0  &&(_numTypesValid  &  NR_BIGINT)!=  0)  {	  }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0    ||(_numTypesValid    &    NR_BIGINT)!=    0)    {    	compilable	  [FE]  RuntimeException  	35	8	replace
114	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]      JsonParseException    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0  ||(_numTypesValid  &  NR_BIGINT)  ==  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	add	}  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0  ||(_numTypesValid  &  NR_BIGINT)  ==  0)  {	  }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0    ||(_numTypesValid    &    NR_BIGINT)!=    0)    {    	compilable	  [FE]  RuntimeException  	35	8	replace
115	[BUG]  [BUGGY]  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0  ||(_numTypesValid  &  NR_BIGINT)  ==  0)  {  [FE]  RuntimeException  [FE]      JsonParseException    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0  ||(_numTypesValid  &  NR_BIGINT)  ==  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	}  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0  ||(_numTypesValid  &  NR_BIGINT)  ==  0)  {	  }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0    ||(_numTypesValid    &    NR_BIGINT)!=    0)    {    	compilable	  [FE]  RuntimeException  	35	8	replace
116	[BUG]  [BUGGY]  ||(_numTypesValid  >>  NR_LONG))  {  _numberLong  =  (long)_numberInt.longValue();  [CE]  illegal  start  of  expression  [FE]        RuntimeException      [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  ||(_numTypesValid  >>  NR_LONG))  {  _numberLong  =  (long)_numberInt.longValue();  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	||(_numTypesValid  >>  NR_LONG))  {  _numberLong  =  (long)_numberInt.longValue();	          ||(_numTypesValid    &    NR_INT)!=    0)    {    _numberLong    =    (long)_numberInt.longValue();    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
117	[BUG]  [BUGGY]  ||(_numTypesValid  >=  NR_LONG))  {  _numberLong  =  (long)_numberInt.longValue();  [CE]  illegal  start  of  expression  [FE]          RuntimeException      [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  ||(_numTypesValid  >=  NR_LONG))  {  _numberLong  =  (long)_numberInt.longValue();  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	||(_numTypesValid  >=  NR_LONG))  {  _numberLong  =  (long)_numberInt.longValue();	          ||(_numTypesValid    &    NR_INT)!=    0)    {    _numberLong    =    (long)_numberInt.longValue();    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
118	[BUG]  [BUGGY]  ||(_numTypesValid  >>  NR_INT))  {  _numberLong  =  (long)_numberInt.longValue();  [CE]  illegal  start  of  expression  [FE]            RuntimeException      [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  ||(_numTypesValid  >>  NR_INT))  {  _numberLong  =  (long)_numberInt.longValue();  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	||(_numTypesValid  >>  NR_INT))  {  _numberLong  =  (long)_numberInt.longValue();	          ||(_numTypesValid    &    NR_INT)!=    0)    {    _numberLong    =    (long)_numberInt.longValue();    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
119	[BUG]  [BUGGY]  ||(_numTypesValid!=  NR_LONG))  {  _numberLong  =  (long)_numberInt.longValue();  [CE]  illegal  start  of  expression  [FE]              RuntimeException      [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  ||(_numTypesValid!=  NR_LONG))  {  _numberLong  =  (long)_numberInt.longValue();  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	||(_numTypesValid!=  NR_LONG))  {  _numberLong  =  (long)_numberInt.longValue();	          ||(_numTypesValid    &    NR_INT)!=    0)    {    _numberLong    =    (long)_numberInt.longValue();    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
120	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    JsonParseException    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(-1,  1);  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	add	_parsingContext  =  _parsingContext.createChildObjectContext(-1,  1);	          _parsingContext    =    _parsingContext.createChildObjectContext(-1,    -1);    	compilable	  [FE]  RuntimeException  	39	14	replace
121	[BUG]  [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(-1,  1);  [FE]  RuntimeException  [FE]    JsonParseException    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(-1,  1);  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	_parsingContext  =  _parsingContext.createChildObjectContext(-1,  1);	          _parsingContext    =    _parsingContext.createChildObjectContext(-1,    -1);    	compilable	  [FE]  RuntimeException  	39	14	replace
122	[BUG]  [BUGGY]  _parsingContext  =  ctxt.createChildObjectContext(-1,  -1);  [CE]  cannot  find  symbol  ctxt  [FE]      JsonParseException    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  _parsingContext  =  ctxt.createChildObjectContext(-1,  -1);  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	_parsingContext  =  ctxt.createChildObjectContext(-1,  -1);	          _parsingContext    =    _parsingContext.createChildObjectContext(-1,    -1);    	non-compiled	[CE]  cannot  find  symbol  ctxt	39	None	replace
123	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]        JsonParseException    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(0,  0);  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	add	_parsingContext  =  _parsingContext.createChildObjectContext(0,  0);	          _parsingContext    =    _parsingContext.createChildObjectContext(-1,    -1);    	compilable	  [FE]  RuntimeException  	39	14	replace
124	[BUG]  [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(0,  0);  [FE]  RuntimeException  [FE]        JsonParseException    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(0,  0);  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	_parsingContext  =  _parsingContext.createChildObjectContext(0,  0);	          _parsingContext    =    _parsingContext.createChildObjectContext(-1,    -1);    	compilable	  [FE]  RuntimeException  	39	14	replace
125	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGINT)    ==    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)  >=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	add	}        else        if((        _numTypesValid        &        NR_BIGINT)        ==        0)        {        }    else    if((    _numTypesValid    &    NR_BIGINT)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {	  	compilable	  [FE]  AssertionFailedError  	25	8	add
126	[BUG]  [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGINT)    ==    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)  >=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGINT)    ==    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)  >=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	}        else        if((        _numTypesValid        &        NR_BIGINT)        ==        0)        {        }    else    if((    _numTypesValid    &    NR_BIGINT)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {	  	compilable	  [FE]  AssertionFailedError  	25	8	add
127	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGINT)    ==    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)  >=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGINT)  ==  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	add	}        else        if((        _numTypesValid        &        NR_BIGINT)        ==        0)        {        }    else    if((    _numTypesValid    &    NR_BIGINT)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)  ==  0)  {	  	compilable	  [FE]  AssertionFailedError  	25	8	add
128	[BUG]  [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGINT)    ==    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)  >=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGINT)  ==  0)  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGINT)    ==    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)  >=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGINT)  ==  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	}        else        if((        _numTypesValid        &        NR_BIGINT)        ==        0)        {        }    else    if((    _numTypesValid    &    NR_BIGINT)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)  ==  0)  {	  	compilable	  [FE]  AssertionFailedError  	25	8	add
129	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGINT)    ==    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)  >=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGINT)  >=  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	add	}        else        if((        _numTypesValid        &        NR_BIGINT)        ==        0)        {        }    else    if((    _numTypesValid    &    NR_BIGINT)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)  >=  0)  {	  	compilable	  [FE]  AssertionFailedError  	25	8	add
130	[BUG]  [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGINT)    ==    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)  >=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGINT)  >=  0)  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGINT)    ==    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)  >=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGINT)  >=  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	}        else        if((        _numTypesValid        &        NR_BIGINT)        ==        0)        {        }    else    if((    _numTypesValid    &    NR_BIGINT)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)  >=  0)  {	  	compilable	  [FE]  AssertionFailedError  	25	8	add
131	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGINT)    ==    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)  >=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	add	}        else        if((        _numTypesValid        &        NR_BIGINT)        ==        0)        {        }    else    if((    _numTypesValid    &    NR_BIGINT)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {	  	compilable	  [FE]  AssertionFailedError  	25	8	add
132	[BUG]  [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGINT)    ==    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)  >=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGINT)    ==    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)  >=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	}        else        if((        _numTypesValid        &        NR_BIGINT)        ==        0)        {        }    else    if((    _numTypesValid    &    NR_BIGINT)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {	  	compilable	  [FE]  AssertionFailedError  	25	8	add
133	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGINT)    ==    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)  >=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	add	}        else        if((        _numTypesValid        &        NR_BIGINT)        ==        0)        {        }    else    if((    _numTypesValid    &    NR_BIGINT)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {	  	compilable	  [FE]  AssertionFailedError  	25	8	add
134	[BUG]  [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGINT)    ==    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)  >=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGINT)    ==    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)  >=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	}        else        if((        _numTypesValid        &        NR_BIGINT)        ==        0)        {        }    else    if((    _numTypesValid    &    NR_BIGINT)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {	  	compilable	  [FE]  AssertionFailedError  	25	8	add
135	[BUG]  [BUGGY]  if((  _numTypesValid  &  NR_INT)!=  0)  {  if(BI_MIN_LONG.compareTo(_numberBigInt)>  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0  [CE]  ')'  expected  [FE]        RuntimeException      [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  if((  _numTypesValid  &  NR_INT)!=  0)  {  if(BI_MIN_LONG.compareTo(_numberBigInt)>  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	if((  _numTypesValid  &  NR_INT)!=  0)  {  if(BI_MIN_LONG.compareTo(_numberBigInt)>  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0	          if((    _numTypesValid    &    NR_INT)!=    0)    {    if(BI_MIN_LONG.compareTo(_numberBigInt)>    0    ||    BI_MAX_LONG.compareTo(_numberBigInt)    <    	non-compiled	[CE]  ')'  expected	49	None	replace
136	[BUG]  [BUGGY]  if((  _numTypesValid  &  NR_INT)!=  0)  {  if(BI_MIN_LONG.compareTo(_numberBigInt)>  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  [CE]  illegal  start  of  expression  [FE]          RuntimeException      [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  if((  _numTypesValid  &  NR_INT)!=  0)  {  if(BI_MIN_LONG.compareTo(_numberBigInt)>  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	if((  _numTypesValid  &  NR_INT)!=  0)  {  if(BI_MIN_LONG.compareTo(_numberBigInt)>  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {	          if((    _numTypesValid    &    NR_INT)!=    0)    {    if(BI_MIN_LONG.compareTo(_numberBigInt)>    0    ||    BI_MAX_LONG.compareTo(_numberBigInt)    <    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
137	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGINT)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)  >=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGINT)  >=  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	add	}        else        if((        _numTypesValid        &        NR_BIGINT)        >=        0)        {        }    else    if((    _numTypesValid    &    NR_BIGINT)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)  >=  0)  {	  	compilable	  [FE]  AssertionFailedError  	13	8	add
138	[BUG]  [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGINT)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)  >=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGINT)  >=  0)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGINT)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)  >=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGINT)  >=  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	}        else        if((        _numTypesValid        &        NR_BIGINT)        >=        0)        {        }    else    if((    _numTypesValid    &    NR_BIGINT)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)  >=  0)  {	  	compilable	  [FE]  AssertionFailedError  	13	8	add
139	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGINT)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)  >=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	add	}        else        if((        _numTypesValid        &        NR_BIGINT)        >=        0)        {        }    else    if((    _numTypesValid    &    NR_BIGINT)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {	  	compilable	  [FE]  AssertionFailedError  	13	8	add
140	[BUG]  [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGINT)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)  >=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGINT)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)  >=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	}        else        if((        _numTypesValid        &        NR_BIGINT)        >=        0)        {        }    else    if((    _numTypesValid    &    NR_BIGINT)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {	  	compilable	  [FE]  AssertionFailedError  	13	8	add
141	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGINT)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)  >=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGINT)>  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	add	}        else        if((        _numTypesValid        &        NR_BIGINT)        >=        0)        {        }    else    if((    _numTypesValid    &    NR_BIGINT)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)>  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {	  	compilable	  [FE]  AssertionFailedError  	13	8	add
142	[BUG]  [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGINT)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)  >=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGINT)>  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGINT)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)  >=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGINT)>  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	}        else        if((        _numTypesValid        &        NR_BIGINT)        >=        0)        {        }    else    if((    _numTypesValid    &    NR_BIGINT)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)>  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {	  	compilable	  [FE]  AssertionFailedError  	13	8	add
143	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGINT)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)  >=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGINT)  ==  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	add	}        else        if((        _numTypesValid        &        NR_BIGINT)        >=        0)        {        }    else    if((    _numTypesValid    &    NR_BIGINT)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)  ==  0)  {	  	compilable	  [FE]  AssertionFailedError  	13	8	add
144	[BUG]  [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGINT)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)  >=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGINT)  ==  0)  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGINT)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)  >=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGINT)  ==  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	}        else        if((        _numTypesValid        &        NR_BIGINT)        >=        0)        {        }    else    if((    _numTypesValid    &    NR_BIGINT)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)  ==  0)  {	  	compilable	  [FE]  AssertionFailedError  	13	8	add
145	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGINT)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)  >=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	add	}        else        if((        _numTypesValid        &        NR_BIGINT)        >=        0)        {        }    else    if((    _numTypesValid    &    NR_BIGINT)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {	  	compilable	  [FE]  AssertionFailedError  	13	8	add
146	[BUG]  [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGINT)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)  >=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGINT)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)  >=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	}        else        if((        _numTypesValid        &        NR_BIGINT)        >=        0)        {        }    else    if((    _numTypesValid    &    NR_BIGINT)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {	  	compilable	  [FE]  AssertionFailedError  	13	8	add
147	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]        RuntimeException      [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }  else  if((  _numTypesValid  &  NR_INT)!=  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	add	}  else  if((  _numTypesValid  &  NR_INT)!=  0)  {	  }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0)    {    else    if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0)    {    	compilable	  [FE]  RuntimeException  	43	8	replace
148	[BUG]  [BUGGY]  }  else  if((  _numTypesValid  &  NR_INT)!=  0)  {  [FE]  RuntimeException  [FE]        RuntimeException      [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }  else  if((  _numTypesValid  &  NR_INT)!=  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	}  else  if((  _numTypesValid  &  NR_INT)!=  0)  {	  }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0)    {    else    if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0)    {    	compilable	  [FE]  RuntimeException  	43	8	replace
149	[BUG]  [BUGGY]  ||(_numTypesValid  &  NR_LONG)!=  0)  {  _numberLong  =  _numberInt.longValue();  [CE]  illegal  start  of  expression  [FE]          RuntimeException      [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  ||(_numTypesValid  &  NR_LONG)!=  0)  {  _numberLong  =  _numberInt.longValue();  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	||(_numTypesValid  &  NR_LONG)!=  0)  {  _numberLong  =  _numberInt.longValue();	  ||(_numTypesValid    &    NR_INT)!=    0)    {    _numberLong    =    _numberInt.longValue();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
150	[BUG]  [BUGGY]  ||(_numTypesValid  >>  NR_LONG))  {  _numberLong  =  _numberInt.longValue();  [CE]  illegal  start  of  expression  [FE]            RuntimeException      [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  ||(_numTypesValid  >>  NR_LONG))  {  _numberLong  =  _numberInt.longValue();  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	||(_numTypesValid  >>  NR_LONG))  {  _numberLong  =  _numberInt.longValue();	  ||(_numTypesValid    &    NR_INT)!=    0)    {    _numberLong    =    _numberInt.longValue();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
151	[BUG]  [BUGGY]  ||(_numTypesValid  >>  NR_INT))  {  _numberLong  =  _numberInt.longValue();  [CE]  illegal  start  of  expression  [FE]              RuntimeException      [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  ||(_numTypesValid  >>  NR_INT))  {  _numberLong  =  _numberInt.longValue();  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	||(_numTypesValid  >>  NR_INT))  {  _numberLong  =  _numberInt.longValue();	  ||(_numTypesValid    &    NR_INT)!=    0)    {    _numberLong    =    _numberInt.longValue();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
152	[BUG]  [BUGGY]  ||(_numTypesValid  >>  NR_LONG))  {  _numberLong  =  Long.parseLong(_numberInt);  [CE]  illegal  start  of  expression  [FE]            RuntimeException      [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  ||(_numTypesValid  >>  NR_LONG))  {  _numberLong  =  Long.parseLong(_numberInt);  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	||(_numTypesValid  >>  NR_LONG))  {  _numberLong  =  Long.parseLong(_numberInt);	  ||(_numTypesValid    &    NR_INT)!=    0)    {    _numberLong    =    Long.parseLong(_numberInt);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
153	[BUG]  [BUGGY]  ||(_numTypesValid  >>  NR_INT))  {  _numberLong  =  Long.parseLong(_numberInt);  [CE]  illegal  start  of  expression  [FE]              RuntimeException      [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  ||(_numTypesValid  >>  NR_INT))  {  _numberLong  =  Long.parseLong(_numberInt);  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	||(_numTypesValid  >>  NR_INT))  {  _numberLong  =  Long.parseLong(_numberInt);	  ||(_numTypesValid    &    NR_INT)!=    0)    {    _numberLong    =    Long.parseLong(_numberInt);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
154	[BUG]  [BUGGY]  ||(_numTypesValid  >=  NR_LONG))  {  _numberLong  =  Long.parseLong(_numberInt);  [CE]  illegal  start  of  expression  [FE]                RuntimeException      [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  ||(_numTypesValid  >=  NR_LONG))  {  _numberLong  =  Long.parseLong(_numberInt);  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	||(_numTypesValid  >=  NR_LONG))  {  _numberLong  =  Long.parseLong(_numberInt);	  ||(_numTypesValid    &    NR_INT)!=    0)    {    _numberLong    =    Long.parseLong(_numberInt);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
155	[BUG]  [BUGGY]  ||(_numTypesValid!=  NR_LONG))  {  _numberLong  =  Long.parseLong(_numberInt);  [CE]  illegal  start  of  expression  [FE]                  RuntimeException      [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  ||(_numTypesValid!=  NR_LONG))  {  _numberLong  =  Long.parseLong(_numberInt);  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	||(_numTypesValid!=  NR_LONG))  {  _numberLong  =  Long.parseLong(_numberInt);	  ||(_numTypesValid    &    NR_INT)!=    0)    {    _numberLong    =    Long.parseLong(_numberInt);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
156	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]          _parsingContext  =  _parsingContext.getParent();  _parsingContext  =  _parsingContext.getParent();  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	add	                _parsingContext    =    _parsingContext.getParent();    _parsingContext  =  _parsingContext.getParent();	  	compilable	  [FE]  JsonParseException  	40	14	add
157	[BUG]  [BUGGY]          _parsingContext  =  _parsingContext.getParent();  _parsingContext  =  _parsingContext.getParent();  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]          _parsingContext  =  _parsingContext.getParent();  _parsingContext  =  _parsingContext.getParent();  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	                _parsingContext    =    _parsingContext.getParent();    _parsingContext  =  _parsingContext.getParent();	  	compilable	  [FE]  JsonParseException  	40	14	add
158	[BUG]  [BUGGY]          _parsingContext  =  _parsingContext.getParent();  _parsingContext  =  _parsingContext.getNext();  [CE]  cannot  find  symbol  [FE]      JsonParseException    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]          _parsingContext  =  _parsingContext.getParent();  _parsingContext  =  _parsingContext.getNext();  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	                _parsingContext    =    _parsingContext.getParent();    _parsingContext  =  _parsingContext.getNext();	  	non-compiled	[CE]  cannot  find  symbol	40	None	add
159	[BUG]  [BUGGY]          _parsingContext  =  _parsingContext.getParent();  _paramsingContext  =  _parsingContext.getParent();  [CE]  cannot  find  symbol  _paramsingContext  [FE]        JsonParseException    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]          _parsingContext  =  _parsingContext.getParent();  _paramsingContext  =  _parsingContext.getParent();  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	                _parsingContext    =    _parsingContext.getParent();    _paramsingContext  =  _parsingContext.getParent();	  	non-compiled	[CE]  cannot  find  symbol  _paramsingContext	40	None	add
160	[BUG]  [BUGGY]  ||(_numTypesValid  &  NR_LONG)!=  0)  {  _numberLong  =  _numberBigInt.longValue();  [CE]  illegal  start  of  expression  [FE]              RuntimeException      [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  ||(_numTypesValid  &  NR_LONG)!=  0)  {  _numberLong  =  _numberBigInt.longValue();  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	||(_numTypesValid  &  NR_LONG)!=  0)  {  _numberLong  =  _numberBigInt.longValue();	  ||(_numTypesValid    &    NR_INT)!=    0)    {    _numberLong    =    _numberBigInt.longValue();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
161	[BUG]  [BUGGY]  ||(_numTypesValid  >>  NR_LONG))  {  _numberLong  =  _numberBigInt.longValue();  [CE]  illegal  start  of  expression  [FE]                RuntimeException      [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  ||(_numTypesValid  >>  NR_LONG))  {  _numberLong  =  _numberBigInt.longValue();  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	||(_numTypesValid  >>  NR_LONG))  {  _numberLong  =  _numberBigInt.longValue();	  ||(_numTypesValid    &    NR_INT)!=    0)    {    _numberLong    =    _numberBigInt.longValue();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
162	[BUG]  [BUGGY]  ||(_numTypesValid  >>  NR_INT))  {  _numberLong  =  _numberBigInt.longValue();  [CE]  illegal  start  of  expression  [FE]                  RuntimeException      [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  ||(_numTypesValid  >>  NR_INT))  {  _numberLong  =  _numberBigInt.longValue();  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	||(_numTypesValid  >>  NR_INT))  {  _numberLong  =  _numberBigInt.longValue();	  ||(_numTypesValid    &    NR_INT)!=    0)    {    _numberLong    =    _numberBigInt.longValue();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
163	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGINT)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)  ==  0)  {  }  else  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	add	}        else        if((        _numTypesValid        &        NR_BIGINT)        >=        0)        {        }    else    if((    _numTypesValid    &    NR_BIGINT)    ==    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {	  	compilable	  [FE]  AssertionFailedError  	18	8	add
164	[BUG]  [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGINT)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)  ==  0)  {  }  else  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGINT)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)  ==  0)  {  }  else  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	}        else        if((        _numTypesValid        &        NR_BIGINT)        >=        0)        {        }    else    if((    _numTypesValid    &    NR_BIGINT)    ==    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {	  	compilable	  [FE]  AssertionFailedError  	18	8	add
165	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGINT)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)  ==  0)  {  }  else  if((  _numTypesValid  &  NR_BIGINT)  >=  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	add	}        else        if((        _numTypesValid        &        NR_BIGINT)        >=        0)        {        }    else    if((    _numTypesValid    &    NR_BIGINT)    ==    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)  >=  0)  {	  	compilable	  [FE]  AssertionFailedError  	18	8	add
166	[BUG]  [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGINT)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)  ==  0)  {  }  else  if((  _numTypesValid  &  NR_BIGINT)  >=  0)  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGINT)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)  ==  0)  {  }  else  if((  _numTypesValid  &  NR_BIGINT)  >=  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	}        else        if((        _numTypesValid        &        NR_BIGINT)        >=        0)        {        }    else    if((    _numTypesValid    &    NR_BIGINT)    ==    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)  >=  0)  {	  	compilable	  [FE]  AssertionFailedError  	18	8	add
167	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGINT)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)  ==  0)  {  }  else  if((  _numTypesValid  &  NR_BIGINT)  ==  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	add	}        else        if((        _numTypesValid        &        NR_BIGINT)        >=        0)        {        }    else    if((    _numTypesValid    &    NR_BIGINT)    ==    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)  ==  0)  {	  	compilable	  [FE]  AssertionFailedError  	18	8	add
168	[BUG]  [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGINT)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)  ==  0)  {  }  else  if((  _numTypesValid  &  NR_BIGINT)  ==  0)  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGINT)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)  ==  0)  {  }  else  if((  _numTypesValid  &  NR_BIGINT)  ==  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	}        else        if((        _numTypesValid        &        NR_BIGINT)        >=        0)        {        }    else    if((    _numTypesValid    &    NR_BIGINT)    ==    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)  ==  0)  {	  	compilable	  [FE]  AssertionFailedError  	18	8	add
169	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGINT)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)  ==  0)  {  }  else  if((  _numTypesValid  &  NR_BIGINT)>  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	add	}        else        if((        _numTypesValid        &        NR_BIGINT)        >=        0)        {        }    else    if((    _numTypesValid    &    NR_BIGINT)    ==    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)>  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {	  	compilable	  [FE]  AssertionFailedError  	18	8	add
170	[BUG]  [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGINT)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)  ==  0)  {  }  else  if((  _numTypesValid  &  NR_BIGINT)>  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGINT)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)  ==  0)  {  }  else  if((  _numTypesValid  &  NR_BIGINT)>  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	}        else        if((        _numTypesValid        &        NR_BIGINT)        >=        0)        {        }    else    if((    _numTypesValid    &    NR_BIGINT)    ==    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)>  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {	  	compilable	  [FE]  AssertionFailedError  	18	8	add
171	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGINT)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)  ==  0)  {  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	add	}        else        if((        _numTypesValid        &        NR_BIGINT)        >=        0)        {        }    else    if((    _numTypesValid    &    NR_BIGINT)    ==    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {	  	compilable	  [FE]  AssertionFailedError  	18	8	add
172	[BUG]  [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGINT)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)  ==  0)  {  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGINT)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)  ==  0)  {  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	}        else        if((        _numTypesValid        &        NR_BIGINT)        >=        0)        {        }    else    if((    _numTypesValid    &    NR_BIGINT)    ==    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {	  	compilable	  [FE]  AssertionFailedError  	18	8	add
173	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGINT)    ==    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)  ==  0)  {  }  else  if((  _numTypesValid  &  NR_BIGINT)  ==  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	add	}        else        if((        _numTypesValid        &        NR_BIGINT)        ==        0)        {        }    else    if((    _numTypesValid    &    NR_BIGINT)    ==    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)  ==  0)  {	  	compilable	  [FE]  JsonParseException  	21	8	add
174	[BUG]  [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGINT)    ==    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)  ==  0)  {  }  else  if((  _numTypesValid  &  NR_BIGINT)  ==  0)  {  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGINT)    ==    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)  ==  0)  {  }  else  if((  _numTypesValid  &  NR_BIGINT)  ==  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	}        else        if((        _numTypesValid        &        NR_BIGINT)        ==        0)        {        }    else    if((    _numTypesValid    &    NR_BIGINT)    ==    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)  ==  0)  {	  	compilable	  [FE]  JsonParseException  	21	8	add
175	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      JsonParseException    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGINT)    ==    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)  ==  0)  {  }  else  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	add	}        else        if((        _numTypesValid        &        NR_BIGINT)        ==        0)        {        }    else    if((    _numTypesValid    &    NR_BIGINT)    ==    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {	  	compilable	  [FE]  AssertionFailedError  	21	8	add
176	[BUG]  [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGINT)    ==    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)  ==  0)  {  }  else  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  [FE]  AssertionFailedError  [FE]      JsonParseException    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGINT)    ==    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)  ==  0)  {  }  else  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	}        else        if((        _numTypesValid        &        NR_BIGINT)        ==        0)        {        }    else    if((    _numTypesValid    &    NR_BIGINT)    ==    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {	  	compilable	  [FE]  AssertionFailedError  	21	8	add
177	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        JsonParseException    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGINT)    ==    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)  ==  0)  {  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	add	}        else        if((        _numTypesValid        &        NR_BIGINT)        ==        0)        {        }    else    if((    _numTypesValid    &    NR_BIGINT)    ==    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {	  	compilable	  [FE]  AssertionFailedError  	21	8	add
178	[BUG]  [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGINT)    ==    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)  ==  0)  {  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {  [FE]  AssertionFailedError  [FE]        JsonParseException    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGINT)    ==    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)  ==  0)  {  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	}        else        if((        _numTypesValid        &        NR_BIGINT)        ==        0)        {        }    else    if((    _numTypesValid    &    NR_BIGINT)    ==    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {	  	compilable	  [FE]  AssertionFailedError  	21	8	add
179	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          JsonParseException    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGINT)    ==    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)  ==  0)  {  }  else  if((  _numTypesValid  &  NR_BIGINT)  >=  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	add	}        else        if((        _numTypesValid        &        NR_BIGINT)        ==        0)        {        }    else    if((    _numTypesValid    &    NR_BIGINT)    ==    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)  >=  0)  {	  	compilable	  [FE]  AssertionFailedError  	21	8	add
180	[BUG]  [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGINT)    ==    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)  ==  0)  {  }  else  if((  _numTypesValid  &  NR_BIGINT)  >=  0)  {  [FE]  AssertionFailedError  [FE]          JsonParseException    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGINT)    ==    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)  ==  0)  {  }  else  if((  _numTypesValid  &  NR_BIGINT)  >=  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	}        else        if((        _numTypesValid        &        NR_BIGINT)        ==        0)        {        }    else    if((    _numTypesValid    &    NR_BIGINT)    ==    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)  >=  0)  {	  	compilable	  [FE]  AssertionFailedError  	21	8	add
181	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]            JsonParseException    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGINT)    ==    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)  ==  0)  {  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	add	}        else        if((        _numTypesValid        &        NR_BIGINT)        ==        0)        {        }    else    if((    _numTypesValid    &    NR_BIGINT)    ==    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {	  	compilable	  [FE]  JsonParseException  	21	8	add
182	[BUG]  [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGINT)    ==    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)  ==  0)  {  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {  [FE]  JsonParseException  [FE]            JsonParseException    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGINT)    ==    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)  ==  0)  {  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	}        else        if((        _numTypesValid        &        NR_BIGINT)        ==        0)        {        }    else    if((    _numTypesValid    &    NR_BIGINT)    ==    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {	  	compilable	  [FE]  JsonParseException  	21	8	add
183	[BUG]  [BUGGY]  _parsingContext  =  ctxt.createParser(-1,  -1);  [CE]  cannot  find  symbol  ctxt  [FE]              RuntimeException      [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  _parsingContext  =  ctxt.createParser(-1,  -1);  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	_parsingContext  =  ctxt.createParser(-1,  -1);	          _parsingContext    =    _parsingContext.createParser(-1,    -1);    	non-compiled	[CE]  cannot  find  symbol  ctxt	42	None	replace
184	[BUG]  [BUGGY]  _parsingContext  =  parent.createParser(-1,  -1);  [CE]  cannot  find  symbol  parent  [FE]                RuntimeException      [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  _parsingContext  =  parent.createParser(-1,  -1);  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	_parsingContext  =  parent.createParser(-1,  -1);	          _parsingContext    =    _parsingContext.createParser(-1,    -1);    	non-compiled	[CE]  cannot  find  symbol  parent	42	None	replace
185	[BUG]  [BUGGY]  _parsingContext  =  context.createParser(-1,  -1);  [CE]  cannot  find  symbol  context  [FE]                  RuntimeException      [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  _parsingContext  =  context.createParser(-1,  -1);  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	_parsingContext  =  context.createParser(-1,  -1);	          _parsingContext    =    _parsingContext.createParser(-1,    -1);    	non-compiled	[CE]  cannot  find  symbol  context	42	None	replace
186	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]          _parsingContext  =  _parsingContext.createChildObjectContext(-1,  -1);  _parsingContext  =  _parsingContext.createChildArrayContext(-1,  -1);  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	add	                _parsingContext    =    _parsingContext.createChildObjectContext(-1,    -1);    _parsingContext  =  _parsingContext.createChildArrayContext(-1,  -1);	  	compilable	  [FE]  JsonParseException  	38	9	add
187	[BUG]  [BUGGY]          _parsingContext  =  _parsingContext.createChildObjectContext(-1,  -1);  _parsingContext  =  _parsingContext.createChildArrayContext(-1,  -1);  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]          _parsingContext  =  _parsingContext.createChildObjectContext(-1,  -1);  _parsingContext  =  _parsingContext.createChildArrayContext(-1,  -1);  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	                _parsingContext    =    _parsingContext.createChildObjectContext(-1,    -1);    _parsingContext  =  _parsingContext.createChildArrayContext(-1,  -1);	  	compilable	  [FE]  JsonParseException  	38	9	add
188	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {  if(BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	add	}        else        if((        _numTypesValid        &        NR_BIGDECIMAL)!=        0)        {        }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0)    {    if(BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }	  	compilable	  [FE]  JsonParseException  	5	8	add
189	[BUG]  [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {  if(BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {  if(BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	}        else        if((        _numTypesValid        &        NR_BIGDECIMAL)!=        0)        {        }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0)    {    if(BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }	  	compilable	  [FE]  JsonParseException  	5	8	add
190	[BUG]  [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {  if(BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  [CE]  illegal  start  of  expression  [FE]      JsonParseException    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {  if(BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	}        else        if((        _numTypesValid        &        NR_BIGDECIMAL)!=        0)        {        }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0)    {    if(BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
191	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    JsonParseException    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  >=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  <  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	add	}    else    if((    _numTypesValid    &    NR_BIGDECIMAL)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  <  0)  {	  	compilable	  [FE]  AssertionFailedError  	32	8	add
192	[BUG]  [BUGGY]  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  >=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  <  0)  {  [FE]  AssertionFailedError  [FE]    JsonParseException    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  >=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  <  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	}    else    if((    _numTypesValid    &    NR_BIGDECIMAL)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  <  0)  {	  	compilable	  [FE]  AssertionFailedError  	32	8	add
193	[BUG]  [BUGGY]  }  else  if((  _numTypesValid  &  NR_BIBIGDECIMAL)!=  0)  {  [CE]  cannot  find  symbol  NR_BIBIGDECIMAL  [FE]    JsonParseException    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }  else  if((  _numTypesValid  &  NR_BIBIGDECIMAL)!=  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	}  else  if((  _numTypesValid  &  NR_BIBIGDECIMAL)!=  0)  {	  }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0)    {    }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0)    {    	non-compiled	[CE]  cannot  find  symbol  NR_BIBIGDECIMAL	6	None	replace
194	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGINT)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)  ==  0)  {  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	add	}        else        if((        _numTypesValid        &        NR_BIGINT)        >=        0)        {        }    else    if((    _numTypesValid    &    NR_BIGINT)    ==    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {	  	compilable	  [FE]  AssertionFailedError  	18	8	add
195	[BUG]  [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGINT)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)  ==  0)  {  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGINT)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)  ==  0)  {  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	}        else        if((        _numTypesValid        &        NR_BIGINT)        >=        0)        {        }    else    if((    _numTypesValid    &    NR_BIGINT)    ==    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {	  	compilable	  [FE]  AssertionFailedError  	18	8	add
196	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    AssertionFailedError    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  >=  0)  {  if(BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	add	}        else        if((        _numTypesValid        &        NR_BIGDECIMAL)!=        0)        {        }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)    >=    0)    {    if(BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }	  	compilable	  [FE]  JsonParseException  	9	8	add
197	[BUG]  [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  >=  0)  {  if(BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  [FE]  JsonParseException  [FE]    AssertionFailedError    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  >=  0)  {  if(BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	}        else        if((        _numTypesValid        &        NR_BIGDECIMAL)!=        0)        {        }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)    >=    0)    {    if(BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }	  	compilable	  [FE]  JsonParseException  	9	8	add
198	[BUG]  [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  >=  0)  {  if(BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  >=  0)  {  if(BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	}        else        if((        _numTypesValid        &        NR_BIGDECIMAL)!=        0)        {        }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)    >=    0)    {    if(BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
199	[BUG]  [BUGGY]  }  else  if((  _numTypesValid  &  NR_BIBIGDECIMAL)  ==  0)  {  [CE]  cannot  find  symbol  NR_BIBIGDECIMAL  [FE]    AssertionFailedError    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }  else  if((  _numTypesValid  &  NR_BIBIGDECIMAL)  ==  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	}  else  if((  _numTypesValid  &  NR_BIBIGDECIMAL)  ==  0)  {	  }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0)    {    }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)    >=    0)    {    	non-compiled	[CE]  cannot  find  symbol  NR_BIBIGDECIMAL	10	None	replace
200	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    JsonParseException    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  _parsingContext  =  _parsingContext.createChildArrayContext(-1,  -1);  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	add	_parsingContext  =  _parsingContext.createChildArrayContext(-1,  -1);	          _parsingContext    =    _parsingContext.createChildObjectContext(-1,    -1);    	compilable	  [FE]  RuntimeException  	39	14	replace
201	[BUG]  [BUGGY]  _parsingContext  =  _parsingContext.createChildArrayContext(-1,  -1);  [FE]  RuntimeException  [FE]    JsonParseException    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  _parsingContext  =  _parsingContext.createChildArrayContext(-1,  -1);  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	_parsingContext  =  _parsingContext.createChildArrayContext(-1,  -1);	          _parsingContext    =    _parsingContext.createChildObjectContext(-1,    -1);    	compilable	  [FE]  RuntimeException  	39	14	replace
202	[BUG]  [BUGGY]  _parsingContext  =  _parsingContext.createChildIntContext(-1,  -1);  [CE]  cannot  find  symbol  [FE]      JsonParseException    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  _parsingContext  =  _parsingContext.createChildIntContext(-1,  -1);  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	_parsingContext  =  _parsingContext.createChildIntContext(-1,  -1);	          _parsingContext    =    _parsingContext.createChildObjectContext(-1,    -1);    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
203	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    AssertionFailedError    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {  if(BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	add	}        else        if((        _numTypesValid        &        NR_BIGDECIMAL)!=        0)        {        }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)    ==    0)    {    if(BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }	  	compilable	  [FE]  JsonParseException  	7	8	add
204	[BUG]  [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {  if(BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  [FE]  JsonParseException  [FE]    AssertionFailedError    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {  if(BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	}        else        if((        _numTypesValid        &        NR_BIGDECIMAL)!=        0)        {        }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)    ==    0)    {    if(BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }	  	compilable	  [FE]  JsonParseException  	7	8	add
205	[BUG]  [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {  if(BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {  if(BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	}        else        if((        _numTypesValid        &        NR_BIGDECIMAL)!=        0)        {        }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)    ==    0)    {    if(BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
206	[BUG]  [BUGGY]          _parsingContext  =  _parsingContext.getParent();  (_parsingContext  =  _parsingContext.getParent();  [CE]  ')'  expected  [FE]    JsonParseException    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]          _parsingContext  =  _parsingContext.getParent();  (_parsingContext  =  _parsingContext.getParent();  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	                _parsingContext    =    _parsingContext.getParent();    (_parsingContext  =  _parsingContext.getParent();	  	non-compiled	[CE]  ')'  expected	40	None	add
207	[BUG]  [BUGGY]  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  if(BI_MIN_LONG.compareTo(_numberBigInt)>  0  ||  BI_MAX_LONG.compareTo(_numberBigIn  [CE]  ')'  expected  [FE]        RuntimeException      [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  if(BI_MIN_LONG.compareTo(_numberBigInt)>  0  ||  BI_MAX_LONG.compareTo(_numberBigIn  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  if(BI_MIN_LONG.compareTo(_numberBigInt)>  0  ||  BI_MAX_LONG.compareTo(_numberBigIn	          if((    _numTypesValid    &    NR_INT)!=    0)    {    if(BI_MIN_LONG.compareTo(_numberBigInt)>    0    ||    BI_MAX_LONG.compareTo(_numberBigInt)    <    	non-compiled	[CE]  ')'  expected	49	None	replace
208	[BUG]  [BUGGY]  ||(_numTypesValid  &  NR_BIGINT)!=  0)  {  _numberLong  =  _numberBigInt.longValue();  [CE]  illegal  start  of  expression  [FE]              RuntimeException      [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  ||(_numTypesValid  &  NR_BIGINT)!=  0)  {  _numberLong  =  _numberBigInt.longValue();  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	||(_numTypesValid  &  NR_BIGINT)!=  0)  {  _numberLong  =  _numberBigInt.longValue();	  ||(_numTypesValid    &    NR_INT)!=    0)    {    _numberLong    =    _numberBigInt.longValue();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
209	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]                RuntimeException      [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  _numberLong  =  _numberBigInt.longValue();  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	add	_numberLong  =  _numberBigInt.longValue();	  ||(_numTypesValid    &    NR_INT)!=    0)    {    _numberLong    =    _numberBigInt.longValue();    	compilable	  [FE]  RuntimeException  	4	14	replace
210	[BUG]  [BUGGY]  _numberLong  =  _numberBigInt.longValue();  [FE]  RuntimeException  [FE]                RuntimeException      [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  _numberLong  =  _numberBigInt.longValue();  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	_numberLong  =  _numberBigInt.longValue();	  ||(_numTypesValid    &    NR_INT)!=    0)    {    _numberLong    =    _numberBigInt.longValue();    	compilable	  [FE]  RuntimeException  	4	14	replace
211	[BUG]  [BUGGY]  ||(_numTypesValid  &  NR_BIGDECIMAL)!=  0)  {  _numberLong  =  _numberBigInt.longValue();  [CE]  illegal  start  of  expression  [FE]                  RuntimeException      [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  ||(_numTypesValid  &  NR_BIGDECIMAL)!=  0)  {  _numberLong  =  _numberBigInt.longValue();  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	||(_numTypesValid  &  NR_BIGDECIMAL)!=  0)  {  _numberLong  =  _numberBigInt.longValue();	  ||(_numTypesValid    &    NR_INT)!=    0)    {    _numberLong    =    _numberBigInt.longValue();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
212	[BUG]  [BUGGY]  ||(_numTypesValid  &  NR_BIGINT)!=  0)  {  _numberLong  =  Long.parseLong(_numberInt);  [CE]  illegal  start  of  expression  [FE]            RuntimeException      [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  ||(_numTypesValid  &  NR_BIGINT)!=  0)  {  _numberLong  =  Long.parseLong(_numberInt);  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	||(_numTypesValid  &  NR_BIGINT)!=  0)  {  _numberLong  =  Long.parseLong(_numberInt);	  ||(_numTypesValid    &    NR_INT)!=    0)    {    _numberLong    =    Long.parseLong(_numberInt);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
213	[BUG]  [BUGGY]  ||(_numTypesValid  &  NR_LONG)!=  0)  {  _numberLong  =  Long.parseLong(_numberInt);  [CE]  illegal  start  of  expression  [FE]              RuntimeException      [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  ||(_numTypesValid  &  NR_LONG)!=  0)  {  _numberLong  =  Long.parseLong(_numberInt);  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	||(_numTypesValid  &  NR_LONG)!=  0)  {  _numberLong  =  Long.parseLong(_numberInt);	  ||(_numTypesValid    &    NR_INT)!=    0)    {    _numberLong    =    Long.parseLong(_numberInt);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
214	[BUG]  [BUGGY]  ||(_numTypesValid  &  NR_BIGDECIMAL)!=  0)  {  _numberLong  =  Long.parseLong(_numberInt);  [CE]  illegal  start  of  expression  [FE]                RuntimeException      [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  ||(_numTypesValid  &  NR_BIGDECIMAL)!=  0)  {  _numberLong  =  Long.parseLong(_numberInt);  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	||(_numTypesValid  &  NR_BIGDECIMAL)!=  0)  {  _numberLong  =  Long.parseLong(_numberInt);	  ||(_numTypesValid    &    NR_INT)!=    0)    {    _numberLong    =    Long.parseLong(_numberInt);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
215	[BUG]  [BUGGY]  ||(_numTypesValid  &  NR_LBRACKET)!=  0)  {  _numberLong  =  Long.parseLong(_numberInt);  [CE]  illegal  start  of  expression  [FE]                  RuntimeException      [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  ||(_numTypesValid  &  NR_LBRACKET)!=  0)  {  _numberLong  =  Long.parseLong(_numberInt);  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	||(_numTypesValid  &  NR_LBRACKET)!=  0)  {  _numberLong  =  Long.parseLong(_numberInt);	  ||(_numTypesValid    &    NR_INT)!=    0)    {    _numberLong    =    Long.parseLong(_numberInt);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
216	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    JsonParseException    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0  ||(_numTypesValid  &  NR_BIGINT)!=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGINT)!=  0  ||(_numTypesValid  &  NR_BIGDECIMAL)!=  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	add	}    else    if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0    ||(_numTypesValid    &    NR_BIGINT)!=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)!=  0  ||(_numTypesValid  &  NR_BIGDECIMAL)!=  0)  {	  	compilable	  [FE]  AssertionFailedError  	34	8	add
217	[BUG]  [BUGGY]  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0  ||(_numTypesValid  &  NR_BIGINT)!=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGINT)!=  0  ||(_numTypesValid  &  NR_BIGDECIMAL)!=  0)  {  [FE]  AssertionFailedError  [FE]    JsonParseException    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0  ||(_numTypesValid  &  NR_BIGINT)!=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGINT)!=  0  ||(_numTypesValid  &  NR_BIGDECIMAL)!=  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	}    else    if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0    ||(_numTypesValid    &    NR_BIGINT)!=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)!=  0  ||(_numTypesValid  &  NR_BIGDECIMAL)!=  0)  {	  	compilable	  [FE]  AssertionFailedError  	34	8	add
218	[BUG]  [BUGGY]  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0  ||(_numTypesValid  &  NR_BIGINT)!=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0  ||(_numtypesValid  &  NR_BIGINT)!=  0)  {  [CE]  cannot  find  symbol  _numtypesValid  [FE]      JsonParseException    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0  ||(_numTypesValid  &  NR_BIGINT)!=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0  ||(_numtypesValid  &  NR_BIGINT)!=  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	}    else    if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0    ||(_numTypesValid    &    NR_BIGINT)!=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0  ||(_numtypesValid  &  NR_BIGINT)!=  0)  {	  	non-compiled	[CE]  cannot  find  symbol  _numtypesValid	34	None	add
219	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGINT)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)  >=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGINT)  <  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	add	}        else        if((        _numTypesValid        &        NR_BIGINT)        >=        0)        {        }    else    if((    _numTypesValid    &    NR_BIGINT)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)  <  0)  {	  	compilable	  [FE]  AssertionFailedError  	13	8	add
220	[BUG]  [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGINT)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)  >=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGINT)  <  0)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGINT)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)  >=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGINT)  <  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	}        else        if((        _numTypesValid        &        NR_BIGINT)        >=        0)        {        }    else    if((    _numTypesValid    &    NR_BIGINT)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)  <  0)  {	  	compilable	  [FE]  AssertionFailedError  	13	8	add
221	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGINT)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  >=  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	add	}        else        if((        _numTypesValid        &        NR_BIGINT)        >=        0)        {        }    else    if((    _numTypesValid    &    NR_BIGINT)!=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  >=  0)  {	  	compilable	  [FE]  AssertionFailedError  	15	8	add
222	[BUG]  [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGINT)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  >=  0)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGINT)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  >=  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	}        else        if((        _numTypesValid        &        NR_BIGINT)        >=        0)        {        }    else    if((    _numTypesValid    &    NR_BIGINT)!=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  >=  0)  {	  	compilable	  [FE]  AssertionFailedError  	15	8	add
223	[BUG]  [BUGGY]  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  if(BI_MIN_LONG.compareTo(_numberBigInt)>  0  ||  BI_MAX_LONG.compareTo(_numberBigInt  [CE]  ')'  expected  [FE]          RuntimeException      [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  if(BI_MIN_LONG.compareTo(_numberBigInt)>  0  ||  BI_MAX_LONG.compareTo(_numberBigInt  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  if(BI_MIN_LONG.compareTo(_numberBigInt)>  0  ||  BI_MAX_LONG.compareTo(_numberBigInt	          if((    _numTypesValid    &    NR_BIGINT)!=    0)    {    if(BI_MIN_LONG.compareTo(_numberBigInt)>    0    ||    BI_MAX_LONG.compareTo(_numberBigInt)    <    	non-compiled	[CE]  ')'  expected	50	None	replace
224	[BUG]  [BUGGY]  _parsingContext  =  JsonReadContext.createParser(-1,  -1);  [CE]  cannot  find  symbol  [FE]              RuntimeException      [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  _parsingContext  =  JsonReadContext.createParser(-1,  -1);  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	_parsingContext  =  JsonReadContext.createParser(-1,  -1);	          _parsingContext    =    _parsingContext.createParser(-1,    -1);    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
225	[BUG]  [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(-1);  [CE]  method  createChildObjectContext  in  class  JsonReadContext  cannot  be  applied  to  given  types;  [FE]        RuntimeException      [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(-1);  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	_parsingContext  =  _parsingContext.createChildObjectContext(-1);	          _parsingContext    =    _parsingContext.createChildObjectContext();    	non-compiled	[CE]  method  createChildObjectContext  in  class  JsonReadContext  cannot  be  applied  to  given  types;	37	None	replace
226	[BUG]  [BUGGY]  ||(_numTypesValid  &  NR_BIGINT)!=  0)  {  _numberLong  =  _numberInt.longValue();  [CE]  illegal  start  of  expression  [FE]          RuntimeException      [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  ||(_numTypesValid  &  NR_BIGINT)!=  0)  {  _numberLong  =  _numberInt.longValue();  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	||(_numTypesValid  &  NR_BIGINT)!=  0)  {  _numberLong  =  _numberInt.longValue();	  ||(_numTypesValid    &    NR_INT)!=    0)    {    _numberLong    =    _numberInt.longValue();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
227	[BUG]  [BUGGY]  ||(_numTypesValid  &  NR_BIGDECIMAL)!=  0)  {  _numberLong  =  _numberInt.longValue();  [CE]  illegal  start  of  expression  [FE]            RuntimeException      [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  ||(_numTypesValid  &  NR_BIGDECIMAL)!=  0)  {  _numberLong  =  _numberInt.longValue();  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	||(_numTypesValid  &  NR_BIGDECIMAL)!=  0)  {  _numberLong  =  _numberInt.longValue();	  ||(_numTypesValid    &    NR_INT)!=    0)    {    _numberLong    =    _numberInt.longValue();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
228	[BUG]  [BUGGY]  _numberLong  =  _numberInt.longValue();  [CE]  int  cannot  be  dereferenced  [FE]              RuntimeException      [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  _numberLong  =  _numberInt.longValue();  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	_numberLong  =  _numberInt.longValue();	  ||(_numTypesValid    &    NR_INT)!=    0)    {    _numberLong    =    _numberInt.longValue();    	non-compiled	[CE]  int  cannot  be  dereferenced	2	None	replace
229	[BUG]  [BUGGY]  _parsingContext  =  JsonReadContext.createRootContext(-1,  -1);  [CE]  no  suitable  method  found  for  createRootContext(int,int)  [FE]    JsonParseException    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  _parsingContext  =  JsonReadContext.createRootContext(-1,  -1);  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	_parsingContext  =  JsonReadContext.createRootContext(-1,  -1);	          _parsingContext    =    _parsingContext.getParent();    	non-compiled	[CE]  no  suitable  method  found  for  createRootContext(int,int)	41	None	replace
230	[BUG]  [BUGGY]  ||(_numTypesValid  &  NR_BIGINT)!=  0)  {  _numberLong  =  (long)_numberInt.longValue();  [CE]  illegal  start  of  expression  [FE]        RuntimeException      [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  ||(_numTypesValid  &  NR_BIGINT)!=  0)  {  _numberLong  =  (long)_numberInt.longValue();  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	||(_numTypesValid  &  NR_BIGINT)!=  0)  {  _numberLong  =  (long)_numberInt.longValue();	          ||(_numTypesValid    &    NR_INT)!=    0)    {    _numberLong    =    (long)_numberInt.longValue();    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
231	[BUG]  [BUGGY]  ||(_numTypesValid  &  NR_BIGDECIMAL)!=  0)  {  _numberLong  =  (long)_numberInt.longValue();  [CE]  illegal  start  of  expression  [FE]          RuntimeException      [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  ||(_numTypesValid  &  NR_BIGDECIMAL)!=  0)  {  _numberLong  =  (long)_numberInt.longValue();  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	||(_numTypesValid  &  NR_BIGDECIMAL)!=  0)  {  _numberLong  =  (long)_numberInt.longValue();	          ||(_numTypesValid    &    NR_INT)!=    0)    {    _numberLong    =    (long)_numberInt.longValue();    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
232	[BUG]  [BUGGY]  ||(_numTypesValid  &  NR_LONG)!=  0)  {  _numberLong  =  (long)_numberInt.longValue();  [CE]  illegal  start  of  expression  [FE]            RuntimeException      [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  ||(_numTypesValid  &  NR_LONG)!=  0)  {  _numberLong  =  (long)_numberInt.longValue();  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	||(_numTypesValid  &  NR_LONG)!=  0)  {  _numberLong  =  (long)_numberInt.longValue();	          ||(_numTypesValid    &    NR_INT)!=    0)    {    _numberLong    =    (long)_numberInt.longValue();    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
233	[BUG]  [BUGGY]  _numberLong  =  (long)_numberInt.longValue();  [CE]  int  cannot  be  dereferenced  [FE]              RuntimeException      [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  _numberLong  =  (long)_numberInt.longValue();  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	_numberLong  =  (long)_numberInt.longValue();	          ||(_numTypesValid    &    NR_INT)!=    0)    {    _numberLong    =    (long)_numberInt.longValue();    	non-compiled	[CE]  int  cannot  be  dereferenced	36	None	replace
234	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    AssertionFailedError    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGINT)    ==    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {  if(BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	add	}        else        if((        _numTypesValid        &        NR_BIGINT)        ==        0)        {        }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)    ==    0)    {    if(BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }	  	compilable	  [FE]  JsonParseException  	27	8	add
235	[BUG]  [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGINT)    ==    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {  if(BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  [FE]  JsonParseException  [FE]    AssertionFailedError    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGINT)    ==    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {  if(BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	}        else        if((        _numTypesValid        &        NR_BIGINT)        ==        0)        {        }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)    ==    0)    {    if(BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }	  	compilable	  [FE]  JsonParseException  	27	8	add
236	[BUG]  [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGINT)    ==    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {  if(BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGINT)    ==    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {  if(BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	}        else        if((        _numTypesValid        &        NR_BIGINT)        ==        0)        {        }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)    ==    0)    {    if(BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	27	None	add
237	[BUG]  [BUGGY]  ||(_numTypesValid  &  NR_LBRACKET)!=  0)  {  _numberLong  =  _numberInt.longValue();  [CE]  illegal  start  of  expression  [FE]          RuntimeException      [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  ||(_numTypesValid  &  NR_LBRACKET)!=  0)  {  _numberLong  =  _numberInt.longValue();  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	||(_numTypesValid  &  NR_LBRACKET)!=  0)  {  _numberLong  =  _numberInt.longValue();	  ||(_numTypesValid    &    NR_INT)!=    0)    {    _numberLong    =    _numberInt.longValue();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
238	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    JsonParseException    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {  }  else  if((  _numTypesValid  &  NR_BIGINT)  ==  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	add	}    else    if((    _numTypesValid    &    NR_BIGDECIMAL)    ==    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)  ==  0)  {	  	compilable	  [FE]  AssertionFailedError  	30	8	add
239	[BUG]  [BUGGY]  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {  }  else  if((  _numTypesValid  &  NR_BIGINT)  ==  0)  {  [FE]  AssertionFailedError  [FE]    JsonParseException    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {  }  else  if((  _numTypesValid  &  NR_BIGINT)  ==  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	}    else    if((    _numTypesValid    &    NR_BIGDECIMAL)    ==    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)  ==  0)  {	  	compilable	  [FE]  AssertionFailedError  	30	8	add
240	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    AssertionFailedError    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }  else  if((  _numTypesValid  &  NR_BIGINT)  <  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	add	}  else  if((  _numTypesValid  &  NR_BIGINT)  <  0)  {	  }    else    if((    _numTypesValid    &    NR_BIGINT)    >=    0)    {    }    else    if((    _numTypesValid    &    NR_BIGINT)    >=    0)    {    	compilable	  [FE]  RuntimeException  	14	8	replace
241	[BUG]  [BUGGY]  }  else  if((  _numTypesValid  &  NR_BIGINT)  <  0)  {  [FE]  RuntimeException  [FE]    AssertionFailedError    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }  else  if((  _numTypesValid  &  NR_BIGINT)  <  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	}  else  if((  _numTypesValid  &  NR_BIGINT)  <  0)  {	  }    else    if((    _numTypesValid    &    NR_BIGINT)    >=    0)    {    }    else    if((    _numTypesValid    &    NR_BIGINT)    >=    0)    {    	compilable	  [FE]  RuntimeException  	14	8	replace
242	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGINT)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)  >=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  >=  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	add	}        else        if((        _numTypesValid        &        NR_BIGINT)        >=        0)        {        }    else    if((    _numTypesValid    &    NR_BIGINT)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  >=  0)  {	  	compilable	  [FE]  AssertionFailedError  	13	8	add
243	[BUG]  [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGINT)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)  >=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  >=  0)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGINT)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)  >=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  >=  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	}        else        if((        _numTypesValid        &        NR_BIGINT)        >=        0)        {        }    else    if((    _numTypesValid    &    NR_BIGINT)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  >=  0)  {	  	compilable	  [FE]  AssertionFailedError  	13	8	add
244	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]          _parsingContext  =  _parsingContext.createChildObjectContext(-1,  -1);  _parsingContext  =  _parsingContext.createChildObjectContext(-3,  -1);  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	add	                _parsingContext    =    _parsingContext.createChildObjectContext(-1,    -1);    _parsingContext  =  _parsingContext.createChildObjectContext(-3,  -1);	  	compilable	  [FE]  JsonParseException  	38	10	add
245	[BUG]  [BUGGY]          _parsingContext  =  _parsingContext.createChildObjectContext(-1,  -1);  _parsingContext  =  _parsingContext.createChildObjectContext(-3,  -1);  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]          _parsingContext  =  _parsingContext.createChildObjectContext(-1,  -1);  _parsingContext  =  _parsingContext.createChildObjectContext(-3,  -1);  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	                _parsingContext    =    _parsingContext.createChildObjectContext(-1,    -1);    _parsingContext  =  _parsingContext.createChildObjectContext(-3,  -1);	  	compilable	  [FE]  JsonParseException  	38	10	add
246	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGINT)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)  ==  0)  {  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  >=  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	add	}        else        if((        _numTypesValid        &        NR_BIGINT)        >=        0)        {        }    else    if((    _numTypesValid    &    NR_BIGINT)    ==    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  >=  0)  {	  	compilable	  [FE]  AssertionFailedError  	18	8	add
247	[BUG]  [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGINT)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)  ==  0)  {  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  >=  0)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGINT)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)  ==  0)  {  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  >=  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	}        else        if((        _numTypesValid        &        NR_BIGINT)        >=        0)        {        }    else    if((    _numTypesValid    &    NR_BIGINT)    ==    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  >=  0)  {	  	compilable	  [FE]  AssertionFailedError  	18	8	add
248	[BUG]  [BUGGY]  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {  if(BI_MIN_LONG.compareTo(_numberBigInt)>  0  ||  BI_MAX_LONG.compareTo(_number  [CE]  ')'  expected  [FE]        RuntimeException      [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {  if(BI_MIN_LONG.compareTo(_numberBigInt)>  0  ||  BI_MAX_LONG.compareTo(_number  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {  if(BI_MIN_LONG.compareTo(_numberBigInt)>  0  ||  BI_MAX_LONG.compareTo(_number	          if((    _numTypesValid    &    NR_INT)!=    0)    {    if(BI_MIN_LONG.compareTo(_numberBigInt)>    0    ||    BI_MAX_LONG.compareTo(_numberBigInt)    <    	non-compiled	[CE]  ')'  expected	49	None	replace
249	[BUG]  [BUGGY]  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {  if(BI_MIN_LONG.compareTo(_numberBigInt)>  0  ||  BI_MAX_LONG.compareTo(_numberBig  [CE]  ')'  expected  [FE]          RuntimeException      [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {  if(BI_MIN_LONG.compareTo(_numberBigInt)>  0  ||  BI_MAX_LONG.compareTo(_numberBig  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {  if(BI_MIN_LONG.compareTo(_numberBigInt)>  0  ||  BI_MAX_LONG.compareTo(_numberBig	          if((    _numTypesValid    &    NR_INT)!=    0)    {    if(BI_MIN_LONG.compareTo(_numberBigInt)>    0    ||    BI_MAX_LONG.compareTo(_numberBigInt)    <    	non-compiled	[CE]  ')'  expected	49	None	replace
250	[BUG]  [BUGGY]  [Delete]  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {  [CE]  illegal  start  of  expression  [FE]        RuntimeException      [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  [Delete]  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	[Delete]  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {	  }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0)    {    else    if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
251	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGINT)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  >=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  <  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	add	}        else        if((        _numTypesValid        &        NR_BIGINT)        >=        0)        {        }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  <  0)  {	  	compilable	  [FE]  AssertionFailedError  	44	8	add
252	[BUG]  [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGINT)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  >=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  <  0)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGINT)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  >=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  <  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	}        else        if((        _numTypesValid        &        NR_BIGINT)        >=        0)        {        }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  <  0)  {	  	compilable	  [FE]  AssertionFailedError  	44	8	add
253	[BUG]  [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGINT)    ==    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {  }  else  if((  _numTypesValid  &  NR_BRIDGE)  ==  0)  {  [CE]  cannot  find  symbol  NR_BRIDGE  [FE]    AssertionFailedError    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGINT)    ==    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {  }  else  if((  _numTypesValid  &  NR_BRIDGE)  ==  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	}        else        if((        _numTypesValid        &        NR_BIGINT)        ==        0)        {        }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)    ==    0)    {    }  else  if((  _numTypesValid  &  NR_BRIDGE)  ==  0)  {	  	non-compiled	[CE]  cannot  find  symbol  NR_BRIDGE	27	None	add
254	[BUG]  [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {  }  else  if((  _numTypesValid  &  NR_BRIDGE)!=  0)  {  [CE]  cannot  find  symbol  NR_BRIDGE  [FE]    AssertionFailedError    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {  }  else  if((  _numTypesValid  &  NR_BRIDGE)!=  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	}        else        if((        _numTypesValid        &        NR_BIGDECIMAL)!=        0)        {        }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)    ==    0)    {    }  else  if((  _numTypesValid  &  NR_BRIDGE)!=  0)  {	  	non-compiled	[CE]  cannot  find  symbol  NR_BRIDGE	7	None	add
255	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGINT)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGINT)  <  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	add	}        else        if((        _numTypesValid        &        NR_BIGINT)        >=        0)        {        }    else    if((    _numTypesValid    &    NR_BIGINT)!=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)  <  0)  {	  	compilable	  [FE]  AssertionFailedError  	15	8	add
256	[BUG]  [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGINT)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGINT)  <  0)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGINT)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGINT)  <  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	}        else        if((        _numTypesValid        &        NR_BIGINT)        >=        0)        {        }    else    if((    _numTypesValid    &    NR_BIGINT)!=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)  <  0)  {	  	compilable	  [FE]  AssertionFailedError  	15	8	add
257	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]          _parsingContext  =  _parsingContext.getParent();  if(_parsingContext!=  null)  {  _parsingContext  =  _parsingContext.getParent();  }  else  if((  _numTypesValid  &  NR_INT)!=  0)  {  reportOverflowLong();  }  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	add	                _parsingContext    =    _parsingContext.getParent();    if(_parsingContext!=  null)  {  _parsingContext  =  _parsingContext.getParent();  }  else  if((  _numTypesValid  &  NR_INT)!=  0)  {  reportOverflowLong();  }	  	compilable	  [FE]  JsonParseException  	40	14	add
258	[BUG]  [BUGGY]          _parsingContext  =  _parsingContext.getParent();  if(_parsingContext!=  null)  {  _parsingContext  =  _parsingContext.getParent();  }  else  if((  _numTypesValid  &  NR_INT)!=  0)  {  reportOverflowLong();  }  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]          _parsingContext  =  _parsingContext.getParent();  if(_parsingContext!=  null)  {  _parsingContext  =  _parsingContext.getParent();  }  else  if((  _numTypesValid  &  NR_INT)!=  0)  {  reportOverflowLong();  }  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	                _parsingContext    =    _parsingContext.getParent();    if(_parsingContext!=  null)  {  _parsingContext  =  _parsingContext.getParent();  }  else  if((  _numTypesValid  &  NR_INT)!=  0)  {  reportOverflowLong();  }	  	compilable	  [FE]  JsonParseException  	40	14	add
259	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]          _parsingContext  =  _parsingContext.getParent();  if(_parsingContext!=  null)  {  _parsingContext  =  _parsingContext.getParent();  }  else  {  _parsingContext  =  _parsingContext.getParent();  }  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	add	                _parsingContext    =    _parsingContext.getParent();    if(_parsingContext!=  null)  {  _parsingContext  =  _parsingContext.getParent();  }  else  {  _parsingContext  =  _parsingContext.getParent();  }	  	compilable	  [FE]  JsonParseException  	40	14	add
260	[BUG]  [BUGGY]          _parsingContext  =  _parsingContext.getParent();  if(_parsingContext!=  null)  {  _parsingContext  =  _parsingContext.getParent();  }  else  {  _parsingContext  =  _parsingContext.getParent();  }  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]          _parsingContext  =  _parsingContext.getParent();  if(_parsingContext!=  null)  {  _parsingContext  =  _parsingContext.getParent();  }  else  {  _parsingContext  =  _parsingContext.getParent();  }  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	                _parsingContext    =    _parsingContext.getParent();    if(_parsingContext!=  null)  {  _parsingContext  =  _parsingContext.getParent();  }  else  {  _parsingContext  =  _parsingContext.getParent();  }	  	compilable	  [FE]  JsonParseException  	40	14	add
261	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]        JsonParseException    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]          _parsingContext  =  _parsingContext.getParent();  if(_parsingContext!=  null)  {  _parsingContext  =  _parsingContext.getParent();  }  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	add	                _parsingContext    =    _parsingContext.getParent();    if(_parsingContext!=  null)  {  _parsingContext  =  _parsingContext.getParent();  }	  	compilable	  [FE]  JsonParseException  	40	10	add
262	[BUG]  [BUGGY]          _parsingContext  =  _parsingContext.getParent();  if(_parsingContext!=  null)  {  _parsingContext  =  _parsingContext.getParent();  }  [FE]  JsonParseException  [FE]        JsonParseException    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]          _parsingContext  =  _parsingContext.getParent();  if(_parsingContext!=  null)  {  _parsingContext  =  _parsingContext.getParent();  }  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	                _parsingContext    =    _parsingContext.getParent();    if(_parsingContext!=  null)  {  _parsingContext  =  _parsingContext.getParent();  }	  	compilable	  [FE]  JsonParseException  	40	10	add
263	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]          JsonParseException    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]          _parsingContext  =  _parsingContext.getParent();  if(_parsingContext!=  null)  {  _parsingContext  =  _parsingContext.getParent();  }  else  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  reportOverflowLong();  }  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	add	                _parsingContext    =    _parsingContext.getParent();    if(_parsingContext!=  null)  {  _parsingContext  =  _parsingContext.getParent();  }  else  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  reportOverflowLong();  }	  	compilable	  [FE]  JsonParseException  	40	10	add
264	[BUG]  [BUGGY]          _parsingContext  =  _parsingContext.getParent();  if(_parsingContext!=  null)  {  _parsingContext  =  _parsingContext.getParent();  }  else  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  reportOverflowLong();  }  [FE]  JsonParseException  [FE]          JsonParseException    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]          _parsingContext  =  _parsingContext.getParent();  if(_parsingContext!=  null)  {  _parsingContext  =  _parsingContext.getParent();  }  else  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  reportOverflowLong();  }  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	                _parsingContext    =    _parsingContext.getParent();    if(_parsingContext!=  null)  {  _parsingContext  =  _parsingContext.getParent();  }  else  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  reportOverflowLong();  }	  	compilable	  [FE]  JsonParseException  	40	10	add
265	[BUG]  [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(null,  null);  [CE]  method  createChildObjectContext  in  class  JsonReadContext  cannot  be  applied  to  given  types;  [FE]        RuntimeException      [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(null,  null);  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	_parsingContext  =  _parsingContext.createChildObjectContext(null,  null);	          _parsingContext    =    _parsingContext.createChildObjectContext();    	non-compiled	[CE]  method  createChildObjectContext  in  class  JsonReadContext  cannot  be  applied  to  given  types;	37	None	replace
266	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  >=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	add	}        else        if((        _numTypesValid        &        NR_BIGDECIMAL)!=        0)        {        }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {	  	compilable	  [FE]  AssertionFailedError  	9	8	add
267	[BUG]  [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  >=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  >=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	}        else        if((        _numTypesValid        &        NR_BIGDECIMAL)!=        0)        {        }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {	  	compilable	  [FE]  AssertionFailedError  	9	8	add
268	[BUG]  [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  >=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0  ||  BI_MAX_LONG.compareTo(_numberBigDecimal)  <  0)  {  [CE]  method  compareTo  in  class  BigInteger  cannot  be  applied  to  given  types;  [FE]      AssertionFailedError    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  >=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0  ||  BI_MAX_LONG.compareTo(_numberBigDecimal)  <  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	}        else        if((        _numTypesValid        &        NR_BIGDECIMAL)!=        0)        {        }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0  ||  BI_MAX_LONG.compareTo(_numberBigDecimal)  <  0)  {	  	non-compiled	[CE]  method  compareTo  in  class  BigInteger  cannot  be  applied  to  given  types;	9	None	add
269	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    JsonParseException    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  >=  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	add	}        else        if((        _numTypesValid        &        NR_BIGDECIMAL)!=        0)        {        }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  >=  0)  {	  	compilable	  [FE]  AssertionFailedError  	5	8	add
270	[BUG]  [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  >=  0)  {  [FE]  AssertionFailedError  [FE]    JsonParseException    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  >=  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	}        else        if((        _numTypesValid        &        NR_BIGDECIMAL)!=        0)        {        }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  >=  0)  {	  	compilable	  [FE]  AssertionFailedError  	5	8	add
271	[BUG]  [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {  }  else  if((  _numTypesValid  &  NR_BAD_INT)!=  0)  {  [CE]  cannot  find  symbol  NR_BAD_INT  [FE]      JsonParseException    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {  }  else  if((  _numTypesValid  &  NR_BAD_INT)!=  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	}        else        if((        _numTypesValid        &        NR_BIGDECIMAL)!=        0)        {        }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0)    {    }  else  if((  _numTypesValid  &  NR_BAD_INT)!=  0)  {	  	non-compiled	[CE]  cannot  find  symbol  NR_BAD_INT	5	None	add
272	[BUG]  [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {  }  else  if((  _numTypesValid  &  NR_BRIDGE)!=  0)  {  [CE]  cannot  find  symbol  NR_BRIDGE  [FE]        JsonParseException    [CONTEXT]      {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;      [BUGGY]  }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {  }  else  if((  _numTypesValid  &  NR_BRIDGE)!=  0)  {  [BUGGY]      if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	}        else        if((        _numTypesValid        &        NR_BIGDECIMAL)!=        0)        {        }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0)    {    }  else  if((  _numTypesValid  &  NR_BRIDGE)!=  0)  {	  	non-compiled	[CE]  cannot  find  symbol  NR_BRIDGE	5	None	add
