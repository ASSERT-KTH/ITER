bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  _parsingContext  =  ctxt.getParent();  [CE]  cannot  find  symbol  ctxt  [FE]    RuntimeException    [CONTEXT]    {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;    [BUGGY]  _parsingContext  =  ctxt.getParent();  [BUGGY]    if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	_parsingContext  =  ctxt.getParent();	      	non-compiled	[CE]  cannot  find  symbol  ctxt	8	None	replace
2	[BUG]  [BUGGY]  ||(_numTypesValid  &  NR_INT)!=  0)  {  _numberLong  =  _numberInt.longValue();  [CE]  illegal  start  of  expression  [FE]      RuntimeException    [CONTEXT]    {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;    [BUGGY]  ||(_numTypesValid  &  NR_INT)!=  0)  {  _numberLong  =  _numberInt.longValue();  [BUGGY]    if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	||(_numTypesValid  &  NR_INT)!=  0)  {  _numberLong  =  _numberInt.longValue();	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
3	[BUG]  [BUGGY]  ||(_numTypesValid  &  NR_INT)!=  0)  {  _numberLong  =  Long.parseLong(_numberInt);  [CE]  illegal  start  of  expression  [FE]        RuntimeException    [CONTEXT]    {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;    [BUGGY]  ||(_numTypesValid  &  NR_INT)!=  0)  {  _numberLong  =  Long.parseLong(_numberInt);  [BUGGY]    if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	||(_numTypesValid  &  NR_INT)!=  0)  {  _numberLong  =  Long.parseLong(_numberInt);	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
4	[BUG]  [BUGGY]  ||(_numTypesValid  &  NR_INT)!=  0)  {  _numberLong  =  _numberBigInt.longValue();  [CE]  illegal  start  of  expression  [FE]          RuntimeException    [CONTEXT]    {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;    [BUGGY]  ||(_numTypesValid  &  NR_INT)!=  0)  {  _numberLong  =  _numberBigInt.longValue();  [BUGGY]    if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	||(_numTypesValid  &  NR_INT)!=  0)  {  _numberLong  =  _numberBigInt.longValue();	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
5	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    RuntimeException    [CONTEXT]    {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;    [BUGGY]  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {  [BUGGY]    if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	add	}    else    if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {	  	compilable	  [FE]  JsonParseException  	3	8	add
6	[BUG]  [BUGGY]  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {  [FE]  JsonParseException  [FE]    RuntimeException    [CONTEXT]    {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;    [BUGGY]  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {  [BUGGY]    if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	}    else    if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {	  	compilable	  [FE]  JsonParseException  	3	8	add
7	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      RuntimeException    [CONTEXT]    {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;    [BUGGY]  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {  [BUGGY]    if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	add	}    else    if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {	  	compilable	  [FE]  AssertionFailedError  	3	8	add
8	[BUG]  [BUGGY]  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {  [FE]  AssertionFailedError  [FE]      RuntimeException    [CONTEXT]    {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;    [BUGGY]  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {  [BUGGY]    if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	}    else    if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {	  	compilable	  [FE]  AssertionFailedError  	3	8	add
9	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        RuntimeException    [CONTEXT]    {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;    [BUGGY]  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  >=  0)  {  [BUGGY]    if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	add	}    else    if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  >=  0)  {	  	compilable	  [FE]  AssertionFailedError  	3	8	add
10	[BUG]  [BUGGY]  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  >=  0)  {  [FE]  AssertionFailedError  [FE]        RuntimeException    [CONTEXT]    {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;    [BUGGY]  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  >=  0)  {  [BUGGY]    if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	}    else    if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  >=  0)  {	  	compilable	  [FE]  AssertionFailedError  	3	8	add
11	[BUG]  [BUGGY]  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  >>  0)  {  [CE]  incompatible  types  [FE]          RuntimeException    [CONTEXT]    {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;    [BUGGY]  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  >>  0)  {  [BUGGY]    if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	}    else    if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  >>  0)  {	  	non-compiled	[CE]  incompatible  types	3	None	add
12	[BUG]  [BUGGY]  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  [Delete]  0)  {  [CE]  ')'  expected  [FE]            RuntimeException    [CONTEXT]    {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;    [BUGGY]  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  [Delete]  0)  {  [BUGGY]    if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	}    else    if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  [Delete]  0)  {	  	non-compiled	[CE]  ')'  expected	3	None	add
13	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    JsonParseException    [CONTEXT]    {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;    [BUGGY]  }  else  if((  _numTypesValid  &  NR_BIGINT)  >=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGINT)  >=  0)  {  [BUGGY]    if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	add	}    else    if((    _numTypesValid    &    NR_BIGINT)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)  >=  0)  {	  	compilable	  [FE]  AssertionFailedError  	5	8	add
14	[BUG]  [BUGGY]  }  else  if((  _numTypesValid  &  NR_BIGINT)  >=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGINT)  >=  0)  {  [FE]  AssertionFailedError  [FE]    JsonParseException    [CONTEXT]    {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;    [BUGGY]  }  else  if((  _numTypesValid  &  NR_BIGINT)  >=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGINT)  >=  0)  {  [BUGGY]    if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	}    else    if((    _numTypesValid    &    NR_BIGINT)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)  >=  0)  {	  	compilable	  [FE]  AssertionFailedError  	5	8	add
15	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      JsonParseException    [CONTEXT]    {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;    [BUGGY]  }  else  if((  _numTypesValid  &  NR_BIGINT)  >=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  [BUGGY]    if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	add	}    else    if((    _numTypesValid    &    NR_BIGINT)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {	  	compilable	  [FE]  AssertionFailedError  	5	8	add
16	[BUG]  [BUGGY]  }  else  if((  _numTypesValid  &  NR_BIGINT)  >=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  [FE]  AssertionFailedError  [FE]      JsonParseException    [CONTEXT]    {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;    [BUGGY]  }  else  if((  _numTypesValid  &  NR_BIGINT)  >=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  [BUGGY]    if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	}    else    if((    _numTypesValid    &    NR_BIGINT)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {	  	compilable	  [FE]  AssertionFailedError  	5	8	add
17	[BUG]  [BUGGY]  }  else  if((  _numTypesValid  &  NR_BIGINT)  >=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGINT)  >>  0)  {  [CE]  incompatible  types  [FE]        JsonParseException    [CONTEXT]    {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;    [BUGGY]  }  else  if((  _numTypesValid  &  NR_BIGINT)  >=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGINT)  >>  0)  {  [BUGGY]    if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	}    else    if((    _numTypesValid    &    NR_BIGINT)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)  >>  0)  {	  	non-compiled	[CE]  incompatible  types	5	None	add
18	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          JsonParseException    [CONTEXT]    {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;    [BUGGY]  }  else  if((  _numTypesValid  &  NR_BIGINT)  >=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGINT)  ==  0)  {  [BUGGY]    if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	add	}    else    if((    _numTypesValid    &    NR_BIGINT)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)  ==  0)  {	  	compilable	  [FE]  AssertionFailedError  	5	8	add
19	[BUG]  [BUGGY]  }  else  if((  _numTypesValid  &  NR_BIGINT)  >=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGINT)  ==  0)  {  [FE]  AssertionFailedError  [FE]          JsonParseException    [CONTEXT]    {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;    [BUGGY]  }  else  if((  _numTypesValid  &  NR_BIGINT)  >=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGINT)  ==  0)  {  [BUGGY]    if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	}    else    if((    _numTypesValid    &    NR_BIGINT)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)  ==  0)  {	  	compilable	  [FE]  AssertionFailedError  	5	8	add
20	[BUG]  [BUGGY]  }  else  if((  _numTypesValid  &  NR_BIGINT)  >=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGINT)  [Delete]  0)  {  [CE]  ')'  expected  [FE]            JsonParseException    [CONTEXT]    {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;    [BUGGY]  }  else  if((  _numTypesValid  &  NR_BIGINT)  >=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGINT)  [Delete]  0)  {  [BUGGY]    if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	}    else    if((    _numTypesValid    &    NR_BIGINT)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)  [Delete]  0)  {	  	non-compiled	[CE]  ')'  expected	5	None	add
21	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    RuntimeException    [CONTEXT]    {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;    [BUGGY]  }  else  if((  _numTypesValid  &  NR_BIGINT)  ==  0)  {  }  else  if((  _numTypesValid  &  NR_BIGINT)  ==  0)  {  [BUGGY]    if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	add	}    else    if((    _numTypesValid    &    NR_BIGINT)    ==    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)  ==  0)  {	  	compilable	  [FE]  JsonParseException  	1	8	add
22	[BUG]  [BUGGY]  }  else  if((  _numTypesValid  &  NR_BIGINT)  ==  0)  {  }  else  if((  _numTypesValid  &  NR_BIGINT)  ==  0)  {  [FE]  JsonParseException  [FE]    RuntimeException    [CONTEXT]    {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;    [BUGGY]  }  else  if((  _numTypesValid  &  NR_BIGINT)  ==  0)  {  }  else  if((  _numTypesValid  &  NR_BIGINT)  ==  0)  {  [BUGGY]    if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	}    else    if((    _numTypesValid    &    NR_BIGINT)    ==    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)  ==  0)  {	  	compilable	  [FE]  JsonParseException  	1	8	add
23	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      RuntimeException    [CONTEXT]    {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;    [BUGGY]  }  else  if((  _numTypesValid  &  NR_BIGINT)  ==  0)  {  }  else  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  [BUGGY]    if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	add	}    else    if((    _numTypesValid    &    NR_BIGINT)    ==    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {	  	compilable	  [FE]  AssertionFailedError  	1	8	add
24	[BUG]  [BUGGY]  }  else  if((  _numTypesValid  &  NR_BIGINT)  ==  0)  {  }  else  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  [FE]  AssertionFailedError  [FE]      RuntimeException    [CONTEXT]    {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;    [BUGGY]  }  else  if((  _numTypesValid  &  NR_BIGINT)  ==  0)  {  }  else  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  [BUGGY]    if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	}    else    if((    _numTypesValid    &    NR_BIGINT)    ==    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)!=  0)  {	  	compilable	  [FE]  AssertionFailedError  	1	8	add
25	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        RuntimeException    [CONTEXT]    {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;    [BUGGY]  }  else  if((  _numTypesValid  &  NR_BIGINT)  ==  0)  {  }  else  if((  _numTypesValid  &  NR_BIGINT)  >=  0)  {  [BUGGY]    if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	add	}    else    if((    _numTypesValid    &    NR_BIGINT)    ==    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)  >=  0)  {	  	compilable	  [FE]  AssertionFailedError  	1	8	add
26	[BUG]  [BUGGY]  }  else  if((  _numTypesValid  &  NR_BIGINT)  ==  0)  {  }  else  if((  _numTypesValid  &  NR_BIGINT)  >=  0)  {  [FE]  AssertionFailedError  [FE]        RuntimeException    [CONTEXT]    {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;    [BUGGY]  }  else  if((  _numTypesValid  &  NR_BIGINT)  ==  0)  {  }  else  if((  _numTypesValid  &  NR_BIGINT)  >=  0)  {  [BUGGY]    if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	}    else    if((    _numTypesValid    &    NR_BIGINT)    ==    0)    {    }  else  if((  _numTypesValid  &  NR_BIGINT)  >=  0)  {	  	compilable	  [FE]  AssertionFailedError  	1	8	add
27	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          RuntimeException    [CONTEXT]    {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;    [BUGGY]  }  else  if((  _numTypesValid  &  NR_BIGINT)  ==  0)  {  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {  [BUGGY]    if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	add	}    else    if((    _numTypesValid    &    NR_BIGINT)    ==    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {	  	compilable	  [FE]  AssertionFailedError  	1	8	add
28	[BUG]  [BUGGY]  }  else  if((  _numTypesValid  &  NR_BIGINT)  ==  0)  {  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {  [FE]  AssertionFailedError  [FE]          RuntimeException    [CONTEXT]    {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;    [BUGGY]  }  else  if((  _numTypesValid  &  NR_BIGINT)  ==  0)  {  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {  [BUGGY]    if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	}    else    if((    _numTypesValid    &    NR_BIGINT)    ==    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {	  	compilable	  [FE]  AssertionFailedError  	1	8	add
29	[BUG]  [BUGGY]  }  else  if((  _numTypesValid  &  NR_BIGINT)  ==  0)  {  }  else  if((  _numTypesValid  &  NR_LBIGINT)  ==  0)  {  [CE]  cannot  find  symbol  NR_LBIGINT  [FE]            RuntimeException    [CONTEXT]    {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;    [BUGGY]  }  else  if((  _numTypesValid  &  NR_BIGINT)  ==  0)  {  }  else  if((  _numTypesValid  &  NR_LBIGINT)  ==  0)  {  [BUGGY]    if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	}    else    if((    _numTypesValid    &    NR_BIGINT)    ==    0)    {    }  else  if((  _numTypesValid  &  NR_LBIGINT)  ==  0)  {	  	non-compiled	[CE]  cannot  find  symbol  NR_LBIGINT	1	None	add
30	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    RuntimeException    [CONTEXT]    {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;    [BUGGY]  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {  [BUGGY]    if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	add	}  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {	  }    else    if((    _numTypesValid    &    NR_BIGINT)    ==    0)    {    	compilable	  [FE]  JsonParseException  	2	8	replace
31	[BUG]  [BUGGY]  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {  [FE]  JsonParseException  [FE]    RuntimeException    [CONTEXT]    {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;    [BUGGY]  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {  [BUGGY]    if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	}  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  ==  0)  {	  }    else    if((    _numTypesValid    &    NR_BIGINT)    ==    0)    {    	compilable	  [FE]  JsonParseException  	2	8	replace
32	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    RuntimeException    [CONTEXT]    {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;    [BUGGY]  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  >=  0)  {  [BUGGY]    if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	add	}  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  >=  0)  {	  }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0)    {    	compilable	  [FE]  JsonParseException  	4	8	replace
33	[BUG]  [BUGGY]  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  >=  0)  {  [FE]  JsonParseException  [FE]    RuntimeException    [CONTEXT]    {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;    [BUGGY]  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  >=  0)  {  [BUGGY]    if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	}  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  >=  0)  {	  }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0)    {    	compilable	  [FE]  JsonParseException  	4	8	replace
34	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]      RuntimeException    [CONTEXT]    {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;    [BUGGY]  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0  ||(_numTypesValid  &  NR_BIGINT)!=  0)  {  [BUGGY]    if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	add	}  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0  ||(_numTypesValid  &  NR_BIGINT)!=  0)  {	  }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0)    {    	compilable	  [FE]  JsonParseException  	4	8	replace
35	[BUG]  [BUGGY]  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0  ||(_numTypesValid  &  NR_BIGINT)!=  0)  {  [FE]  JsonParseException  [FE]      RuntimeException    [CONTEXT]    {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;    [BUGGY]  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0  ||(_numTypesValid  &  NR_BIGINT)!=  0)  {  [BUGGY]    if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	}  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0  ||(_numTypesValid  &  NR_BIGINT)!=  0)  {	  }    else    if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0)    {    	compilable	  [FE]  JsonParseException  	4	8	replace
36	[BUG]  [BUGGY]      ||(_numTypesValid  &  NR_INT)!=  0)  {  _numberLong  =  (long)_numberInt.longValue();  [CE]  illegal  start  of  expression  [FE]    RuntimeException    [CONTEXT]    {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;    [BUGGY]      ||(_numTypesValid  &  NR_INT)!=  0)  {  _numberLong  =  (long)_numberInt.longValue();  [BUGGY]    if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	        ||(_numTypesValid  &  NR_INT)!=  0)  {  _numberLong  =  (long)_numberInt.longValue();	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
37	[BUG]  [BUGGY]      _parsingContext  =  _parsingContext.createChildObjectContext();  [CE]  method  createChildObjectContext  in  class  JsonReadContext  cannot  be  applied  to  given  types;  [FE]    RuntimeException    [CONTEXT]    {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;    [BUGGY]      _parsingContext  =  _parsingContext.createChildObjectContext();  [BUGGY]    if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	        _parsingContext  =  _parsingContext.createChildObjectContext();	  	non-compiled	[CE]  method  createChildObjectContext  in  class  JsonReadContext  cannot  be  applied  to  given  types;	7	None	add
38	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]      RuntimeException    [CONTEXT]    {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;    [BUGGY]      _parsingContext  =  _parsingContext.createChildObjectContext(-1,  -1);  [BUGGY]    if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	add	        _parsingContext  =  _parsingContext.createChildObjectContext(-1,  -1);	  	compilable	  [FE]  JsonParseException  	7	10	add
39	[BUG]  [BUGGY]      _parsingContext  =  _parsingContext.createChildObjectContext(-1,  -1);  [FE]  JsonParseException  [FE]      RuntimeException    [CONTEXT]    {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;    [BUGGY]      _parsingContext  =  _parsingContext.createChildObjectContext(-1,  -1);  [BUGGY]    if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	        _parsingContext  =  _parsingContext.createChildObjectContext(-1,  -1);	  	compilable	  [FE]  JsonParseException  	7	10	add
40	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]        RuntimeException    [CONTEXT]    {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;    [BUGGY]      _parsingContext  =  _parsingContext.getParent();  [BUGGY]    if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	add	        _parsingContext  =  _parsingContext.getParent();	  	compilable	  [FE]  JsonParseException  	7	10	add
41	[BUG]  [BUGGY]      _parsingContext  =  _parsingContext.getParent();  [FE]  JsonParseException  [FE]        RuntimeException    [CONTEXT]    {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;    [BUGGY]      _parsingContext  =  _parsingContext.getParent();  [BUGGY]    if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	        _parsingContext  =  _parsingContext.getParent();	  	compilable	  [FE]  JsonParseException  	7	10	add
42	[BUG]  [BUGGY]      _parsingContext  =  _parsingContext.createParser(-1,  -1);  [CE]  cannot  find  symbol  [FE]          RuntimeException    [CONTEXT]    {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;    [BUGGY]      _parsingContext  =  _parsingContext.createParser(-1,  -1);  [BUGGY]    if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	        _parsingContext  =  _parsingContext.createParser(-1,  -1);	  	non-compiled	[CE]  cannot  find  symbol	7	None	add
43	[BUG]  [BUGGY]  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {  [CE]  'else'  without  'if'  [FE]    RuntimeException    [CONTEXT]    {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;    [BUGGY]  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {  else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {  [BUGGY]    if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	}    else    if((    _numTypesValid    &    NR_BIGDECIMAL)!=    0)    {    else  if((  _numTypesValid  &  NR_BIGDECIMAL)!=  0)  {	  	non-compiled	[CE]  'else'  without  'if'	3	None	add
44	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    JsonParseException    [CONTEXT]    {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;    [BUGGY]  }  else  if((  _numTypesValid  &  NR_BIGINT)  >=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  >=  0)  {  [BUGGY]    if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	add	}    else    if((    _numTypesValid    &    NR_BIGINT)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  >=  0)  {	  	compilable	  [FE]  AssertionFailedError  	5	8	add
45	[BUG]  [BUGGY]  }  else  if((  _numTypesValid  &  NR_BIGINT)  >=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  >=  0)  {  [FE]  AssertionFailedError  [FE]    JsonParseException    [CONTEXT]    {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;    [BUGGY]  }  else  if((  _numTypesValid  &  NR_BIGINT)  >=  0)  {  }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  >=  0)  {  [BUGGY]    if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	}    else    if((    _numTypesValid    &    NR_BIGINT)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_BIGDECIMAL)  >=  0)  {	  	compilable	  [FE]  AssertionFailedError  	5	8	add
46	[BUG]  [BUGGY]  }  else  if((  _numTypesValid  &  NR_BIGINT)  ==  0)  {  }  else  if((  _numTypesValid  &  NR_BIT)  ==  0)  {  [CE]  cannot  find  symbol  NR_BIT  [FE]    RuntimeException    [CONTEXT]    {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;    [BUGGY]  }  else  if((  _numTypesValid  &  NR_BIGINT)  ==  0)  {  }  else  if((  _numTypesValid  &  NR_BIT)  ==  0)  {  [BUGGY]    if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	}    else    if((    _numTypesValid    &    NR_BIGINT)    ==    0)    {    }  else  if((  _numTypesValid  &  NR_BIT)  ==  0)  {	  	non-compiled	[CE]  cannot  find  symbol  NR_BIT	1	None	add
47	[BUG]  [BUGGY]  }  else  if((  _numTypesValid  &  NR_BIGINT)  ==  0)  {  }  else  if((  _numTypesValid  &  NR_RBIGINT)  ==  0)  {  [CE]  cannot  find  symbol  NR_RBIGINT  [FE]    RuntimeException    [CONTEXT]    {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;    [BUGGY]  }  else  if((  _numTypesValid  &  NR_BIGINT)  ==  0)  {  }  else  if((  _numTypesValid  &  NR_RBIGINT)  ==  0)  {  [BUGGY]    if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	}    else    if((    _numTypesValid    &    NR_BIGINT)    ==    0)    {    }  else  if((  _numTypesValid  &  NR_RBIGINT)  ==  0)  {	  	non-compiled	[CE]  cannot  find  symbol  NR_RBIGINT	1	None	add
48	[BUG]  [BUGGY]  }  else  if((  _numTypesValid  &  NR_BIGINT)  ==  0)  {  }  else  if((  _numTypesValid  &  NR_BRIGINT)  ==  0)  {  [CE]  cannot  find  symbol  NR_BRIGINT  [FE]      RuntimeException    [CONTEXT]    {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;    [BUGGY]  }  else  if((  _numTypesValid  &  NR_BIGINT)  ==  0)  {  }  else  if((  _numTypesValid  &  NR_BRIGINT)  ==  0)  {  [BUGGY]    if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	}    else    if((    _numTypesValid    &    NR_BIGINT)    ==    0)    {    }  else  if((  _numTypesValid  &  NR_BRIGINT)  ==  0)  {	  	non-compiled	[CE]  cannot  find  symbol  NR_BRIGINT	1	None	add
49	[BUG]  [BUGGY]      if((  _numTypesValid  &  NR_INT)!=  0)  {  if(BI_MIN_LONG.compareTo(_numberBigInt)>  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  [CE]  illegal  start  of  expression  [FE]    RuntimeException    [CONTEXT]    {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;    [BUGGY]      if((  _numTypesValid  &  NR_INT)!=  0)  {  if(BI_MIN_LONG.compareTo(_numberBigInt)>  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  [BUGGY]    if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	        if((  _numTypesValid  &  NR_INT)!=  0)  {  if(BI_MIN_LONG.compareTo(_numberBigInt)>  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
50	[BUG]  [BUGGY]      if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  if(BI_MIN_LONG.compareTo(_numberBigInt)>  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  [CE]  illegal  start  of  expression  [FE]      RuntimeException    [CONTEXT]    {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;    [BUGGY]      if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  if(BI_MIN_LONG.compareTo(_numberBigInt)>  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  [BUGGY]    if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	        if((  _numTypesValid  &  NR_BIGINT)!=  0)  {  if(BI_MIN_LONG.compareTo(_numberBigInt)>  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
51	[BUG]  [BUGGY]      if((  _numTypesValid  &  NR_LONG)!=  0)  {  if(BI_MIN_LONG.compareTo(_numberBigInt)>  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  [CE]  illegal  start  of  expression  [FE]        RuntimeException    [CONTEXT]    {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;    [BUGGY]      if((  _numTypesValid  &  NR_LONG)!=  0)  {  if(BI_MIN_LONG.compareTo(_numberBigInt)>  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  [BUGGY]    if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	        if((  _numTypesValid  &  NR_LONG)!=  0)  {  if(BI_MIN_LONG.compareTo(_numberBigInt)>  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
52	[BUG]  [BUGGY]  }  else  if((  _numTypesValid  &  NR_BIGINT)  >=  0)  {  }  else  if((  _numTypesValid  &  NR_RBIGINT)  >=  0)  {  [CE]  cannot  find  symbol  NR_RBIGINT  [FE]    JsonParseException    [CONTEXT]    {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  _numberLong  =  (long)  _numberInt;    [BUGGY]  }  else  if((  _numTypesValid  &  NR_BIGINT)  >=  0)  {  }  else  if((  _numTypesValid  &  NR_RBIGINT)  >=  0)  {  [BUGGY]    if  (BI_MIN_LONG.compareTo(_numberBigInt)  >  0  ||  BI_MAX_LONG.compareTo(_numberBigInt)  <  0)  {  reportOverflowLong();  }  _numberLong  =  _numberBigInt.longValue();  }  else  if  ((_numTypesValid  &  NR_DOUBLE)  !=  0)  {  if  (_numberDouble  <  MIN_LONG_D  ||  _numberDouble  >  MAX_LONG_D)  {  reportOverflowLong();  }  [CLASS]  ParserBase  [METHOD]  convertNumberToLong  [RETURN_TYPE]  void  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  expType  f  features  fractLen  i  intLen  len  mask  newFeatureFlags  newMask  newState  offset  oldState  result  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  l  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	918	918	8	replace	}    else    if((    _numTypesValid    &    NR_BIGINT)    >=    0)    {    }  else  if((  _numTypesValid  &  NR_RBIGINT)  >=  0)  {	  	non-compiled	[CE]  cannot  find  symbol  NR_RBIGINT	5	None	add
