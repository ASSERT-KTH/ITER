bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  [CE]  ';'  expected  [FE]    JsonParseException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if(_currToken!=    JsonToken.VALUE_NUMBER_INT)    {    if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {	  	non-compiled	[CE]  ';'  expected	33	None	add
2	[BUG]  [BUGGY]  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  [CE]  ';'  expected  [FE]      JsonParseException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if(_currToken!=    JsonToken.VALUE_NUMBER_INT)    {    if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {	  	non-compiled	[CE]  ';'  expected	33	None	add
3	[BUG]  [BUGGY]  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  if(_currToken  >=  JsonToken.VALUE_NUMBER_INT)  {  [CE]  ';'  expected  [FE]        JsonParseException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  if(_currToken  >=  JsonToken.VALUE_NUMBER_INT)  {  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if(_currToken!=    JsonToken.VALUE_NUMBER_INT)    {    if(_currToken  >=  JsonToken.VALUE_NUMBER_INT)  {	  	non-compiled	[CE]  ';'  expected	33	None	add
4	[BUG]  [BUGGY]  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  if(_currToken  >>  JsonToken.VALUE_NUMBER_INT)  {  [CE]  ';'  expected  [FE]          JsonParseException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  if(_currToken  >>  JsonToken.VALUE_NUMBER_INT)  {  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if(_currToken!=    JsonToken.VALUE_NUMBER_INT)    {    if(_currToken  >>  JsonToken.VALUE_NUMBER_INT)  {	  	non-compiled	[CE]  ';'  expected	33	None	add
5	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if((  _numTypesValid  &  NR_LONG)!=  0)  {  return  _numberLong;  }  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if((  _numTypesValid  &  NR_LONG)!=  0)  {  return  _numberLong;  }  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if((  _numTypesValid  &  NR_LONG)!=  0)  {  return  _numberLong;  }  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if((  _numTypesValid  &  NR_LONG)!=  0)  {  return  _numberLong;  }  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if((    _numTypesValid    &    NR_LONG)!=    0)    {    return    _numberLong;    }    if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if((  _numTypesValid  &  NR_LONG)!=  0)  {  return  _numberLong;  }	  	non-compiled	[CE]  ';'  expected	50	None	add
6	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if((  _numTypesValid  &  NR_LONG)!=  0)  {  return  _numberLong;  }  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if((  _numTypesValid  &  NR_LONG)!=  0)  {  return  _numberInt;  }  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if((  _numTypesValid  &  NR_LONG)!=  0)  {  return  _numberLong;  }  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if((  _numTypesValid  &  NR_LONG)!=  0)  {  return  _numberInt;  }  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if((    _numTypesValid    &    NR_LONG)!=    0)    {    return    _numberLong;    }    if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if((  _numTypesValid  &  NR_LONG)!=  0)  {  return  _numberInt;  }	  	non-compiled	[CE]  ';'  expected	50	None	add
7	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if((  _numTypesValid  &  NR_LONG)!=  0)  {  return  _numberLong;  }  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  if((  _numTypesValid  &  NR_LONG)!=  0)  {  return  _numberLong;  }  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if((  _numTypesValid  &  NR_LONG)!=  0)  {  return  _numberLong;  }  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  if((  _numTypesValid  &  NR_LONG)!=  0)  {  return  _numberLong;  }  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if((    _numTypesValid    &    NR_LONG)!=    0)    {    return    _numberLong;    }    if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  if((  _numTypesValid  &  NR_LONG)!=  0)  {  return  _numberLong;  }	  	non-compiled	[CE]  ';'  expected	50	None	add
8	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if((  _numTypesValid  &  NR_LONG)!=  0)  {  return  _numberLong;  }  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if((  _numTypesValid  &  NR_LONG)  >=  0)  {  return  _numberLong;  }  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if((  _numTypesValid  &  NR_LONG)!=  0)  {  return  _numberLong;  }  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if((  _numTypesValid  &  NR_LONG)  >=  0)  {  return  _numberLong;  }  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if((    _numTypesValid    &    NR_LONG)!=    0)    {    return    _numberLong;    }    if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if((  _numTypesValid  &  NR_LONG)  >=  0)  {  return  _numberLong;  }	  	non-compiled	[CE]  ';'  expected	50	None	add
9	[BUG]  [BUGGY]  If(_numTypesValid  ==  NR_LONG)  {  [CE]  ';'  expected  [FE]              JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  If(_numTypesValid  ==  NR_LONG)  {  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	If(_numTypesValid  ==  NR_LONG)  {	  if(_numTypesValid    ==    NR_LONG)    {    If(_numTypesValid    ==    NR_LONG)    {    	non-compiled	[CE]  ';'  expected	8	None	replace
10	[BUG]  [BUGGY]  ||(_numTypesValid  ==  NR_LONG))  {  [CE]  illegal  start  of  expression  [FE]                JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  ||(_numTypesValid  ==  NR_LONG))  {  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	||(_numTypesValid  ==  NR_LONG))  {	  if(_numTypesValid    ==    NR_LONG)    {    If(_numTypesValid    ==    NR_LONG)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
11	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_LONG)  {  [CE]  cannot  find  symbol  START_LONG  [FE]    AssertionFailedError    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_LONG)  {  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_LONG)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.START_OBJECT)    {    	non-compiled	[CE]  cannot  find  symbol  START_LONG	45	None	replace
12	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_LONG  ||  _currToken  ==  JsonToken.START_OBJECT)  {  [CE]  cannot  find  symbol  VALUE_LONG  [FE]      AssertionFailedError    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_LONG  ||  _currToken  ==  JsonToken.START_OBJECT)  {  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if(_currToken  ==  JsonToken.VALUE_LONG  ||  _currToken  ==  JsonToken.START_OBJECT)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.START_OBJECT)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_LONG	45	None	replace
13	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [CE]  ';'  expected  [FE]    JsonParseException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    if(_currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {	  	non-compiled	[CE]  ';'  expected	53	None	add
14	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_FLOAT)  {  [CE]  ';'  expected  [FE]      JsonParseException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    if(_currToken!=  JsonToken.VALUE_NUMBER_FLOAT)  {	  	non-compiled	[CE]  ';'  expected	53	None	add
15	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  if(_currToken  >=  JsonToken.VALUE_NUMBER_FLOAT)  {  [CE]  ';'  expected  [FE]        JsonParseException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  if(_currToken  >=  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    if(_currToken  >=  JsonToken.VALUE_NUMBER_FLOAT)  {	  	non-compiled	[CE]  ';'  expected	53	None	add
16	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  If(_currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [CE]  ';'  expected  [FE]          JsonParseException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  If(_currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    If(_currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {	  	non-compiled	[CE]  ';'  expected	53	None	add
17	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_LONG  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [CE]  cannot  find  symbol  VALUE_LONG  [FE]    AssertionFailedError    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_LONG  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if(_currToken  ==  JsonToken.VALUE_LONG  ||  _currToken  ==  JsonToken.FIELD_NAME)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_LONG	47	None	replace
18	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_LONG  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [CE]  cannot  find  symbol  VALUE_LONG  [FE]      AssertionFailedError    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_LONG  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if(_currToken  ==  JsonToken.VALUE_LONG  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_LONG	47	None	replace
19	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.FIELD_NAME)  {  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	add	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.FIELD_NAME)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    	compilable	  [FE]  AssertionFailedError  	47	8	replace
20	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.FIELD_NAME)  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.FIELD_NAME)  {  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.FIELD_NAME)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    	compilable	  [FE]  AssertionFailedError  	47	8	replace
21	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_numTypesValid  >=  NR_LONG)  {  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	add	if(_numTypesValid  >=  NR_LONG)  {	  if(_numTypesValid!=    NR_LONG)    {    if(_numTypesValid!=    NR_LONG)    {    	compilable	  [FE]  AssertionFailedError  	23	8	replace
22	[BUG]  [BUGGY]  if(_numTypesValid  >=  NR_LONG)  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_numTypesValid  >=  NR_LONG)  {  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if(_numTypesValid  >=  NR_LONG)  {	  if(_numTypesValid!=    NR_LONG)    {    if(_numTypesValid!=    NR_LONG)    {    	compilable	  [FE]  AssertionFailedError  	23	8	replace
23	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]          AssertionFailedError      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN)  {  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	add	if(_numTypesValid  ==  NR_UNKNOWN)  {	  if(_numTypesValid!=    NR_LONG)    {    if(_numTypesValid!=    NR_LONG)    {    	compilable	  [FE]  JsonParseException  	23	8	replace
24	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN)  {  [FE]  JsonParseException  [FE]          AssertionFailedError      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN)  {  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if(_numTypesValid  ==  NR_UNKNOWN)  {	  if(_numTypesValid!=    NR_LONG)    {    if(_numTypesValid!=    NR_LONG)    {    	compilable	  [FE]  JsonParseException  	23	8	replace
25	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_numTypesValid  ==  NR_LONG)  {  return  _numberLong;  }  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_numTypesValid  ==  NR_LONG)  {  return  _numberLong;  }  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_numTypesValid  ==  NR_LONG)  {  return  _numberLong;  }  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_numTypesValid  ==  NR_LONG)  {  return  _numberLong;  }  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_numTypesValid    ==    NR_LONG)    {    return    _numberLong;    }    if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_numTypesValid  ==  NR_LONG)  {  return  _numberLong;  }	  	non-compiled	[CE]  ';'  expected	28	None	add
26	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_numTypesValid  ==  NR_LONG)  {  return  _numberLong;  }  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_numTypesValid  ==  NR_LONG)  {  return  _numberInt;  }  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_numTypesValid  ==  NR_LONG)  {  return  _numberLong;  }  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_numTypesValid  ==  NR_LONG)  {  return  _numberInt;  }  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_numTypesValid    ==    NR_LONG)    {    return    _numberLong;    }    if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_numTypesValid  ==  NR_LONG)  {  return  _numberInt;  }	  	non-compiled	[CE]  ';'  expected	28	None	add
27	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_numTypesValid  ==  NR_LONG)  {  return  _numberLong;  }  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  if(_numTypesValid  ==  NR_LONG)  {  return  _numberLong;  }  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_numTypesValid  ==  NR_LONG)  {  return  _numberLong;  }  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  if(_numTypesValid  ==  NR_LONG)  {  return  _numberLong;  }  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_numTypesValid    ==    NR_LONG)    {    return    _numberLong;    }    if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  if(_numTypesValid  ==  NR_LONG)  {  return  _numberLong;  }	  	non-compiled	[CE]  ';'  expected	28	None	add
28	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_numTypesValid  ==  NR_LONG)  {  return  _numberLong;  }  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_numTypesValid!=  NR_LONG)  {  return  _numberLong;  }  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_numTypesValid  ==  NR_LONG)  {  return  _numberLong;  }  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_numTypesValid!=  NR_LONG)  {  return  _numberLong;  }  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_numTypesValid    ==    NR_LONG)    {    return    _numberLong;    }    if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_numTypesValid!=  NR_LONG)  {  return  _numberLong;  }	  	non-compiled	[CE]  ';'  expected	28	None	add
29	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {	  	non-compiled	[CE]  ';'  expected	36	None	add
30	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.VALUE_NUMBER_FLOAT)  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.VALUE_NUMBER_FLOAT)  {	  	non-compiled	[CE]  ';'  expected	36	None	add
31	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {	  	non-compiled	[CE]  ';'  expected	36	None	add
32	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  If(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  If(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    If(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {	  	non-compiled	[CE]  ';'  expected	36	None	add
33	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    AssertionFailedError    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_numTypesValid  ==  NR_LONG)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  return  _numberLong;  }  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	add	if(_numTypesValid  ==  NR_LONG)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  return  _numberLong;  }	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_numTypesValid    ==    NR_LONG)    {    return    _numberLong;    }    	compilable	  [FE]  JsonParseException  	29	8	replace
34	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_LONG)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  return  _numberLong;  }  [FE]  JsonParseException  [FE]    AssertionFailedError    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_numTypesValid  ==  NR_LONG)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  return  _numberLong;  }  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if(_numTypesValid  ==  NR_LONG)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  return  _numberLong;  }	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_numTypesValid    ==    NR_LONG)    {    return    _numberLong;    }    	compilable	  [FE]  JsonParseException  	29	8	replace
35	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]      AssertionFailedError    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_numTypesValid  ==  NR_LONG)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  return  _numberInt;  }  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	add	if(_numTypesValid  ==  NR_LONG)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  return  _numberInt;  }	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_numTypesValid    ==    NR_LONG)    {    return    _numberLong;    }    	compilable	  [FE]  JsonParseException  	29	8	replace
36	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_LONG)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  return  _numberInt;  }  [FE]  JsonParseException  [FE]      AssertionFailedError    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_numTypesValid  ==  NR_LONG)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  return  _numberInt;  }  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if(_numTypesValid  ==  NR_LONG)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  return  _numberInt;  }	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_numTypesValid    ==    NR_LONG)    {    return    _numberLong;    }    	compilable	  [FE]  JsonParseException  	29	8	replace
37	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if((  _numTypesValid  &  NR_LONG)!=  0)  {  return  _numberInt;  }  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	add	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if((  _numTypesValid  &  NR_LONG)!=  0)  {  return  _numberInt;  }	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if((    _numTypesValid    &    NR_LONG)!=    0)    {    return    _numberLong;    }    	compilable	  [FE]  AssertionFailedError  	51	8	replace
38	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if((  _numTypesValid  &  NR_LONG)!=  0)  {  return  _numberInt;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if((  _numTypesValid  &  NR_LONG)!=  0)  {  return  _numberInt;  }  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if((  _numTypesValid  &  NR_LONG)!=  0)  {  return  _numberInt;  }	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if((    _numTypesValid    &    NR_LONG)!=    0)    {    return    _numberLong;    }    	compilable	  [FE]  AssertionFailedError  	51	8	replace
39	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  if((  _numTypesValid  &  NR_LONG)!=  0)  {  return  _numberInt;  }  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	add	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  if((  _numTypesValid  &  NR_LONG)!=  0)  {  return  _numberInt;  }	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if((    _numTypesValid    &    NR_LONG)!=    0)    {    return    _numberLong;    }    	compilable	  [FE]  AssertionFailedError  	51	8	replace
40	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  if((  _numTypesValid  &  NR_LONG)!=  0)  {  return  _numberInt;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  if((  _numTypesValid  &  NR_LONG)!=  0)  {  return  _numberInt;  }  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  if((  _numTypesValid  &  NR_LONG)!=  0)  {  return  _numberInt;  }	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if((    _numTypesValid    &    NR_LONG)!=    0)    {    return    _numberLong;    }    	compilable	  [FE]  AssertionFailedError  	51	8	replace
41	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  if((  _numTypesValid  &  NR_LONG)!=  0)  {  return  _numberLong;  }  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	add	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  if((  _numTypesValid  &  NR_LONG)!=  0)  {  return  _numberLong;  }	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if((    _numTypesValid    &    NR_LONG)!=    0)    {    return    _numberLong;    }    	compilable	  [FE]  AssertionFailedError  	51	8	replace
42	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  if((  _numTypesValid  &  NR_LONG)!=  0)  {  return  _numberLong;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  if((  _numTypesValid  &  NR_LONG)!=  0)  {  return  _numberLong;  }  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  if((  _numTypesValid  &  NR_LONG)!=  0)  {  return  _numberLong;  }	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if((    _numTypesValid    &    NR_LONG)!=    0)    {    return    _numberLong;    }    	compilable	  [FE]  AssertionFailedError  	51	8	replace
43	[BUG]  [BUGGY]  if((  _numTypesValid  &  NR_LONG)!=  0  ||(_numTypesValid  &  NR_UNKNOWN)!=  0)  {  if((  _numTypesValid  &  NR_LONG)!=  0  ||(_numTypesValid  &  NR_UNKNOWN)!=  0)  {  [CE]  ';'  expected  [FE]    JsonParseException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if((  _numTypesValid  &  NR_LONG)!=  0  ||(_numTypesValid  &  NR_UNKNOWN)!=  0)  {  if((  _numTypesValid  &  NR_LONG)!=  0  ||(_numTypesValid  &  NR_UNKNOWN)!=  0)  {  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if((    _numTypesValid    &    NR_LONG)!=    0    ||(_numTypesValid    &    NR_UNKNOWN)!=    0)    {    if((  _numTypesValid  &  NR_LONG)!=  0  ||(_numTypesValid  &  NR_UNKNOWN)!=  0)  {	  	non-compiled	[CE]  ';'  expected	9	None	add
44	[BUG]  [BUGGY]  if((  _numTypesValid  &  NR_LONG)!=  0  ||(_numTypesValid  &  NR_UNKNOWN)!=  0)  {  if((  _numTypesValid  &  NR_LONG)!=  0  ||(_numTypesValid  &  NR_UNKNOWN)  ==  0)  {  [CE]  ';'  expected  [FE]      JsonParseException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if((  _numTypesValid  &  NR_LONG)!=  0  ||(_numTypesValid  &  NR_UNKNOWN)!=  0)  {  if((  _numTypesValid  &  NR_LONG)!=  0  ||(_numTypesValid  &  NR_UNKNOWN)  ==  0)  {  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if((    _numTypesValid    &    NR_LONG)!=    0    ||(_numTypesValid    &    NR_UNKNOWN)!=    0)    {    if((  _numTypesValid  &  NR_LONG)!=  0  ||(_numTypesValid  &  NR_UNKNOWN)  ==  0)  {	  	non-compiled	[CE]  ';'  expected	9	None	add
45	[BUG]  [BUGGY]  if((  _numTypesValid  &  NR_LONG)!=  0  ||(_numTypesValid  &  NR_UNKNOWN)!=  0)  {  if((  _numTypesValid  &  NR_LONG)  >=  0  ||(_numTypesValid  &  NR_UNKNOWN)!=  0)  {  [CE]  ';'  expected  [FE]        JsonParseException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if((  _numTypesValid  &  NR_LONG)!=  0  ||(_numTypesValid  &  NR_UNKNOWN)!=  0)  {  if((  _numTypesValid  &  NR_LONG)  >=  0  ||(_numTypesValid  &  NR_UNKNOWN)!=  0)  {  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if((    _numTypesValid    &    NR_LONG)!=    0    ||(_numTypesValid    &    NR_UNKNOWN)!=    0)    {    if((  _numTypesValid  &  NR_LONG)  >=  0  ||(_numTypesValid  &  NR_UNKNOWN)!=  0)  {	  	non-compiled	[CE]  ';'  expected	9	None	add
46	[BUG]  [BUGGY]  if((  _numTypesValid  &  NR_LONG)!=  0  ||(_numTypesValid  &  NR_UNKNOWN)!=  0)  {  if((  _numTypesValid  &  NR_LONG)!=  0  ||(_numTypesValid  &  NR_UNKNOWN)  >=  0)  {  [CE]  ';'  expected  [FE]          JsonParseException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if((  _numTypesValid  &  NR_LONG)!=  0  ||(_numTypesValid  &  NR_UNKNOWN)!=  0)  {  if((  _numTypesValid  &  NR_LONG)!=  0  ||(_numTypesValid  &  NR_UNKNOWN)  >=  0)  {  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if((    _numTypesValid    &    NR_LONG)!=    0    ||(_numTypesValid    &    NR_UNKNOWN)!=    0)    {    if((  _numTypesValid  &  NR_LONG)!=  0  ||(_numTypesValid  &  NR_UNKNOWN)  >=  0)  {	  	non-compiled	[CE]  ';'  expected	9	None	add
47	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _numTypesValid  ==  NR_LONG)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _numTypesValid  ==  NR_LONG)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _numTypesValid  ==  NR_LONG)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _numTypesValid  ==  NR_LONG)  {  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _numTypesValid    ==    NR_LONG)    {    if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _numTypesValid  ==  NR_LONG)  {	  	non-compiled	[CE]  ';'  expected	39	None	add
48	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _numTypesValid  ==  NR_LONG)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _numTypesValid  ==  NR_LONG)  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _numTypesValid  ==  NR_LONG)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _numTypesValid  ==  NR_LONG)  {  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _numTypesValid    ==    NR_LONG)    {    if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _numTypesValid  ==  NR_LONG)  {	  	non-compiled	[CE]  ';'  expected	39	None	add
49	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _numTypesValid  ==  NR_LONG)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _numTypesValid!=  NR_LONG)  {  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _numTypesValid  ==  NR_LONG)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _numTypesValid!=  NR_LONG)  {  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _numTypesValid    ==    NR_LONG)    {    if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _numTypesValid!=  NR_LONG)  {	  	non-compiled	[CE]  ';'  expected	39	None	add
50	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _numTypesValid  ==  NR_LONG)  {  If(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _numTypesValid  ==  NR_LONG)  {  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _numTypesValid  ==  NR_LONG)  {  If(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _numTypesValid  ==  NR_LONG)  {  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _numTypesValid    ==    NR_LONG)    {    If(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _numTypesValid  ==  NR_LONG)  {	  	non-compiled	[CE]  ';'  expected	39	None	add
51	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_LONG  ||  _numTypesValid  ==  NR_LONG)  {  if(_numTypesValid  ==  NR_LONG  ||  _numTypesValid  ==  NR_LONG)  {  [CE]  ';'  expected  [FE]    JsonParseException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_numTypesValid  ==  NR_LONG  ||  _numTypesValid  ==  NR_LONG)  {  if(_numTypesValid  ==  NR_LONG  ||  _numTypesValid  ==  NR_LONG)  {  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if(_numTypesValid    ==    NR_LONG    ||    _numTypesValid    ==    NR_LONG)    {    if(_numTypesValid  ==  NR_LONG  ||  _numTypesValid  ==  NR_LONG)  {	  	non-compiled	[CE]  ';'  expected	19	None	add
52	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_LONG  ||  _numTypesValid  ==  NR_LONG)  {  if(_numTypesValid  ==  NR_LONG  ||  _numTypesValid!=  NR_LONG)  {  [CE]  ';'  expected  [FE]      JsonParseException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_numTypesValid  ==  NR_LONG  ||  _numTypesValid  ==  NR_LONG)  {  if(_numTypesValid  ==  NR_LONG  ||  _numTypesValid!=  NR_LONG)  {  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if(_numTypesValid    ==    NR_LONG    ||    _numTypesValid    ==    NR_LONG)    {    if(_numTypesValid  ==  NR_LONG  ||  _numTypesValid!=  NR_LONG)  {	  	non-compiled	[CE]  ';'  expected	19	None	add
53	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_LONG  ||  _numTypesValid  ==  NR_LONG)  {  if(_numTypesValid!=  NR_LONG  ||  _numTypesValid  ==  NR_LONG)  {  [CE]  ';'  expected  [FE]        JsonParseException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_numTypesValid  ==  NR_LONG  ||  _numTypesValid  ==  NR_LONG)  {  if(_numTypesValid!=  NR_LONG  ||  _numTypesValid  ==  NR_LONG)  {  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if(_numTypesValid    ==    NR_LONG    ||    _numTypesValid    ==    NR_LONG)    {    if(_numTypesValid!=  NR_LONG  ||  _numTypesValid  ==  NR_LONG)  {	  	non-compiled	[CE]  ';'  expected	19	None	add
54	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_LONG  ||  _numTypesValid  ==  NR_LONG)  {  if(_numTypesValid  ==  NR_LONG  ||  _numTypesValid  >=  NR_LONG)  {  [CE]  ';'  expected  [FE]          JsonParseException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_numTypesValid  ==  NR_LONG  ||  _numTypesValid  ==  NR_LONG)  {  if(_numTypesValid  ==  NR_LONG  ||  _numTypesValid  >=  NR_LONG)  {  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if(_numTypesValid    ==    NR_LONG    ||    _numTypesValid    ==    NR_LONG)    {    if(_numTypesValid  ==  NR_LONG  ||  _numTypesValid  >=  NR_LONG)  {	  	non-compiled	[CE]  ';'  expected	19	None	add
55	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]          JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_numTypesValid  ==  0)  {  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	add	if(_numTypesValid  ==  0)  {	  if(_numTypesValid    ==    NR_LONG)    {    if(_numTypesValid!=    NR_LONG)    {    	compilable	  [FE]  JsonParseException  	6	8	replace
56	[BUG]  [BUGGY]  if(_numTypesValid  ==  0)  {  [FE]  JsonParseException  [FE]          JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_numTypesValid  ==  0)  {  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if(_numTypesValid  ==  0)  {	  if(_numTypesValid    ==    NR_LONG)    {    if(_numTypesValid!=    NR_LONG)    {    	compilable	  [FE]  JsonParseException  	6	8	replace
57	[BUG]  [BUGGY]  if(_numTypesValid  ==  JsonToken.VALUE_NUMBER_INT  ||  _numTypesValid  ==  NR_LONG)  {  [CE]  incomparable  types:  int  and  JsonToken  [FE]    AssertionFailedError    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_numTypesValid  ==  JsonToken.VALUE_NUMBER_INT  ||  _numTypesValid  ==  NR_LONG)  {  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if(_numTypesValid  ==  JsonToken.VALUE_NUMBER_INT  ||  _numTypesValid  ==  NR_LONG)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _numTypesValid    ==    NR_LONG)    {    	non-compiled	[CE]  incomparable  types:  int  and  JsonToken	40	None	replace
58	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _numTypesValid!=  NR_LONG)  {  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	add	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _numTypesValid!=  NR_LONG)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _numTypesValid    ==    NR_LONG)    {    	compilable	  [FE]  AssertionFailedError  	40	8	replace
59	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _numTypesValid!=  NR_LONG)  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _numTypesValid!=  NR_LONG)  {  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _numTypesValid!=  NR_LONG)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _numTypesValid    ==    NR_LONG)    {    	compilable	  [FE]  AssertionFailedError  	40	8	replace
60	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_LONG  ||  _numTypesValid  ==  NR_LONG)  {  [CE]  cannot  find  symbol  VALUE_LONG  [FE]        AssertionFailedError    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_LONG  ||  _numTypesValid  ==  NR_LONG)  {  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if(_currToken  ==  JsonToken.VALUE_LONG  ||  _numTypesValid  ==  NR_LONG)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _numTypesValid    ==    NR_LONG)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_LONG	40	None	replace
61	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    AssertionFailedError    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_numTypesValid  ==  NR_LONG  ||  _numTypesValid!=  NR_BIGINT)  {  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	add	if(_numTypesValid  ==  NR_LONG  ||  _numTypesValid!=  NR_BIGINT)  {	  if(_numTypesValid    ==    NR_LONG    ||    _numTypesValid    ==    NR_BIGINT)    {    	compilable	  [FE]  JsonParseException  	22	8	replace
62	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_LONG  ||  _numTypesValid!=  NR_BIGINT)  {  [FE]  JsonParseException  [FE]    AssertionFailedError    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_numTypesValid  ==  NR_LONG  ||  _numTypesValid!=  NR_BIGINT)  {  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if(_numTypesValid  ==  NR_LONG  ||  _numTypesValid!=  NR_BIGINT)  {	  if(_numTypesValid    ==    NR_LONG    ||    _numTypesValid    ==    NR_BIGINT)    {    	compilable	  [FE]  JsonParseException  	22	8	replace
63	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_numTypesValid  ==  0  ||  _numTypesValid  ==  NR_BIGINT)  {  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	add	if(_numTypesValid  ==  0  ||  _numTypesValid  ==  NR_BIGINT)  {	  if(_numTypesValid    ==    NR_LONG    ||    _numTypesValid    ==    NR_BIGINT)    {    	compilable	  [FE]  AssertionFailedError  	22	8	replace
64	[BUG]  [BUGGY]  if(_numTypesValid  ==  0  ||  _numTypesValid  ==  NR_BIGINT)  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_numTypesValid  ==  0  ||  _numTypesValid  ==  NR_BIGINT)  {  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if(_numTypesValid  ==  0  ||  _numTypesValid  ==  NR_BIGINT)  {	  if(_numTypesValid    ==    NR_LONG    ||    _numTypesValid    ==    NR_BIGINT)    {    	compilable	  [FE]  AssertionFailedError  	22	8	replace
65	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]        AssertionFailedError    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_numTypesValid  ==  0  ||  _numTypesValid  ==  NR_LONG)  {  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	add	if(_numTypesValid  ==  0  ||  _numTypesValid  ==  NR_LONG)  {	  if(_numTypesValid    ==    NR_LONG    ||    _numTypesValid    ==    NR_BIGINT)    {    	compilable	  [FE]  JsonParseException  	22	8	replace
66	[BUG]  [BUGGY]  if(_numTypesValid  ==  0  ||  _numTypesValid  ==  NR_LONG)  {  [FE]  JsonParseException  [FE]        AssertionFailedError    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_numTypesValid  ==  0  ||  _numTypesValid  ==  NR_LONG)  {  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if(_numTypesValid  ==  0  ||  _numTypesValid  ==  NR_LONG)  {	  if(_numTypesValid    ==    NR_LONG    ||    _numTypesValid    ==    NR_BIGINT)    {    	compilable	  [FE]  JsonParseException  	22	8	replace
67	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_LONG  ||  _numTypesValid  ==  NR_NUMBER_LONG)  {  [CE]  cannot  find  symbol  NR_NUMBER_LONG  [FE]    JsonParseException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_numTypesValid  ==  NR_LONG  ||  _numTypesValid  ==  NR_NUMBER_LONG)  {  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if(_numTypesValid  ==  NR_LONG  ||  _numTypesValid  ==  NR_NUMBER_LONG)  {	  if(_numTypesValid    ==    NR_LONG    ||    _numTypesValid    ==    NR_LONG)    {    	non-compiled	[CE]  cannot  find  symbol  NR_NUMBER_LONG	20	None	replace
68	[BUG]  [BUGGY]  if((  _numTypesValid  &  NR_LONG)  >=  0)  {  if((  _numTypesValid  &  NR_LONG)  >=  0)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if((  _numTypesValid  &  NR_LONG)  >=  0)  {  if((  _numTypesValid  &  NR_LONG)  >=  0)  {  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if((    _numTypesValid    &    NR_LONG)    >=    0)    {    if((  _numTypesValid  &  NR_LONG)  >=  0)  {	  	non-compiled	[CE]  ';'  expected	55	None	add
69	[BUG]  [BUGGY]  if((  _numTypesValid  &  NR_LONG)  >=  0)  {  if((  _numTypesValid  &  NR_LONG)!=  0)  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if((  _numTypesValid  &  NR_LONG)  >=  0)  {  if((  _numTypesValid  &  NR_LONG)!=  0)  {  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if((    _numTypesValid    &    NR_LONG)    >=    0)    {    if((  _numTypesValid  &  NR_LONG)!=  0)  {	  	non-compiled	[CE]  ';'  expected	55	None	add
70	[BUG]  [BUGGY]  if((  _numTypesValid  &  NR_LONG)  >=  0)  {  if((  _numTypesValid  &  NR_LONG)  >>  0)  {  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if((  _numTypesValid  &  NR_LONG)  >=  0)  {  if((  _numTypesValid  &  NR_LONG)  >>  0)  {  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if((    _numTypesValid    &    NR_LONG)    >=    0)    {    if((  _numTypesValid  &  NR_LONG)  >>  0)  {	  	non-compiled	[CE]  ';'  expected	55	None	add
71	[BUG]  [BUGGY]  if((  _numTypesValid  &  NR_LONG)  >=  0)  {  if((  _numTypesValid  &  NR_LONG)  ==  0)  {  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if((  _numTypesValid  &  NR_LONG)  >=  0)  {  if((  _numTypesValid  &  NR_LONG)  ==  0)  {  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if((    _numTypesValid    &    NR_LONG)    >=    0)    {    if((  _numTypesValid  &  NR_LONG)  ==  0)  {	  	non-compiled	[CE]  ';'  expected	55	None	add
72	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {	  	non-compiled	[CE]  ';'  expected	46	None	add
73	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.FIELD_NAME)  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.FIELD_NAME)  {  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.FIELD_NAME)  {	  	non-compiled	[CE]  ';'  expected	46	None	add
74	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {	  	non-compiled	[CE]  ';'  expected	46	None	add
75	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  If(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  If(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    If(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {	  	non-compiled	[CE]  ';'  expected	46	None	add
76	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if((  _numTypesValid  &  NR_LONG)!=  0  ||(_numTypesValid  &  NR_LONG)  ==  0)  {  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	add	if((  _numTypesValid  &  NR_LONG)!=  0  ||(_numTypesValid  &  NR_LONG)  ==  0)  {	  if((    _numTypesValid    &    NR_LONG)    ==    0)    {    if((    _numTypesValid    &    NR_LONG)    ==    0)    {    	compilable	  [FE]  AssertionFailedError  	1	8	replace
77	[BUG]  [BUGGY]  if((  _numTypesValid  &  NR_LONG)!=  0  ||(_numTypesValid  &  NR_LONG)  ==  0)  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if((  _numTypesValid  &  NR_LONG)!=  0  ||(_numTypesValid  &  NR_LONG)  ==  0)  {  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if((  _numTypesValid  &  NR_LONG)!=  0  ||(_numTypesValid  &  NR_LONG)  ==  0)  {	  if((    _numTypesValid    &    NR_LONG)    ==    0)    {    if((    _numTypesValid    &    NR_LONG)    ==    0)    {    	compilable	  [FE]  AssertionFailedError  	1	8	replace
78	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_numTypesValid  ==  0  ||  _numTypesValid  ==  0)  {  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	add	if(_numTypesValid  ==  0  ||  _numTypesValid  ==  0)  {	  if(_numTypesValid    ==    NR_LONG    ||    _numTypesValid    ==    NR_UNKNOWN)    {    	compilable	  [FE]  JsonParseException  	18	8	replace
79	[BUG]  [BUGGY]  if(_numTypesValid  ==  0  ||  _numTypesValid  ==  0)  {  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_numTypesValid  ==  0  ||  _numTypesValid  ==  0)  {  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if(_numTypesValid  ==  0  ||  _numTypesValid  ==  0)  {	  if(_numTypesValid    ==    NR_LONG    ||    _numTypesValid    ==    NR_UNKNOWN)    {    	compilable	  [FE]  JsonParseException  	18	8	replace
80	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	add	if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {	  if(_currToken!=    JsonToken.VALUE_NUMBER_INT)    {    	compilable	  [FE]  JsonParseException  	34	8	replace
81	[BUG]  [BUGGY]  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {	  if(_currToken!=    JsonToken.VALUE_NUMBER_INT)    {    	compilable	  [FE]  JsonParseException  	34	8	replace
82	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      JsonParseException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	add	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.VALUE_NUMBER_FLOAT)  {	  if(_currToken!=    JsonToken.VALUE_NUMBER_INT)    {    	compilable	  [FE]  AssertionFailedError  	34	8	replace
83	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.VALUE_NUMBER_FLOAT)  {  [FE]  AssertionFailedError  [FE]      JsonParseException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.VALUE_NUMBER_FLOAT)  {	  if(_currToken!=    JsonToken.VALUE_NUMBER_INT)    {    	compilable	  [FE]  AssertionFailedError  	34	8	replace
84	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _parseNumericValue(NR_LONG)!=  0)  {  return  _numberInt;  }  [CE]  illegal  start  of  type  [FE]                  JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _parseNumericValue(NR_LONG)!=  0)  {  return  _numberInt;  }  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _parseNumericValue(NR_LONG)!=  0)  {  return  _numberInt;  }	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_parseNumericValue(NR_LONG)!=    0)    {    return    _numberLong;    }    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
85	[BUG]  [BUGGY]  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  if(_parseNumericValue(NR_LONG)!=  0)  {  return  _numberInt;  }  [CE]  'void'  type  not  allowed  here  [FE]                    JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  if(_parseNumericValue(NR_LONG)!=  0)  {  return  _numberInt;  }  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  if(_parseNumericValue(NR_LONG)!=  0)  {  return  _numberInt;  }	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_parseNumericValue(NR_LONG)!=    0)    {    return    _numberLong;    }    	non-compiled	[CE]  'void'  type  not  allowed  here	42	None	replace
86	[BUG]  [BUGGY]  if((  _numTypesValid  &  NR_LONG)  ==  0  ||(_numTypesValid  &  NR_UNKNOWN)!=  0)  {  if((  _numTypesValid  &  NR_LONG)  ==  0  ||(_numTypesValid  &  NR_UNKNOWN)!=  0)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if((  _numTypesValid  &  NR_LONG)  ==  0  ||(_numTypesValid  &  NR_UNKNOWN)!=  0)  {  if((  _numTypesValid  &  NR_LONG)  ==  0  ||(_numTypesValid  &  NR_UNKNOWN)!=  0)  {  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if((    _numTypesValid    &    NR_LONG)    ==    0    ||(_numTypesValid    &    NR_UNKNOWN)!=    0)    {    if((  _numTypesValid  &  NR_LONG)  ==  0  ||(_numTypesValid  &  NR_UNKNOWN)!=  0)  {	  	non-compiled	[CE]  ';'  expected	11	None	add
87	[BUG]  [BUGGY]  if((  _numTypesValid  &  NR_LONG)  ==  0  ||(_numTypesValid  &  NR_UNKNOWN)!=  0)  {  if((  _numTypesValid  &  NR_LONG)!=  0  ||(_numTypesValid  &  NR_UNKNOWN)!=  0)  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if((  _numTypesValid  &  NR_LONG)  ==  0  ||(_numTypesValid  &  NR_UNKNOWN)!=  0)  {  if((  _numTypesValid  &  NR_LONG)!=  0  ||(_numTypesValid  &  NR_UNKNOWN)!=  0)  {  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if((    _numTypesValid    &    NR_LONG)    ==    0    ||(_numTypesValid    &    NR_UNKNOWN)!=    0)    {    if((  _numTypesValid  &  NR_LONG)!=  0  ||(_numTypesValid  &  NR_UNKNOWN)!=  0)  {	  	non-compiled	[CE]  ';'  expected	11	None	add
88	[BUG]  [BUGGY]  if((  _numTypesValid  &  NR_LONG)  ==  0  ||(_numTypesValid  &  NR_UNKNOWN)!=  0)  {  if((  _numTypesValid  &  NR_LONG)  ==  0  ||(_numTypesValid  &  NR_UNKNOWN)  >=  0)  {  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if((  _numTypesValid  &  NR_LONG)  ==  0  ||(_numTypesValid  &  NR_UNKNOWN)!=  0)  {  if((  _numTypesValid  &  NR_LONG)  ==  0  ||(_numTypesValid  &  NR_UNKNOWN)  >=  0)  {  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if((    _numTypesValid    &    NR_LONG)    ==    0    ||(_numTypesValid    &    NR_UNKNOWN)!=    0)    {    if((  _numTypesValid  &  NR_LONG)  ==  0  ||(_numTypesValid  &  NR_UNKNOWN)  >=  0)  {	  	non-compiled	[CE]  ';'  expected	11	None	add
89	[BUG]  [BUGGY]  if((  _numTypesValid  &  NR_LONG)  ==  0  ||(_numTypesValid  &  NR_UNKNOWN)!=  0)  {  if((  _numTypesValid  &  NR_LONG)  ==  0  ||(_numTypesValid  &  NR_UNKNOWN)  >>  0)  {  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if((  _numTypesValid  &  NR_LONG)  ==  0  ||(_numTypesValid  &  NR_UNKNOWN)!=  0)  {  if((  _numTypesValid  &  NR_LONG)  ==  0  ||(_numTypesValid  &  NR_UNKNOWN)  >>  0)  {  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if((    _numTypesValid    &    NR_LONG)    ==    0    ||(_numTypesValid    &    NR_UNKNOWN)!=    0)    {    if((  _numTypesValid  &  NR_LONG)  ==  0  ||(_numTypesValid  &  NR_UNKNOWN)  >>  0)  {	  	non-compiled	[CE]  ';'  expected	11	None	add
90	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_LONG  ||  _numTypesValid  ==  NR_BIGINT)  {  if(_numTypesValid  ==  NR_LONG  ||  _numTypesValid  ==  NR_BIGINT)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_numTypesValid  ==  NR_LONG  ||  _numTypesValid  ==  NR_BIGINT)  {  if(_numTypesValid  ==  NR_LONG  ||  _numTypesValid  ==  NR_BIGINT)  {  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if(_numTypesValid    ==    NR_LONG    ||    _numTypesValid    ==    NR_BIGINT)    {    if(_numTypesValid  ==  NR_LONG  ||  _numTypesValid  ==  NR_BIGINT)  {	  	non-compiled	[CE]  ';'  expected	21	None	add
91	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_LONG  ||  _numTypesValid  ==  NR_BIGINT)  {  if(_numTypesValid  ==  NR_LONG  ||  _numTypesValid!=  NR_BIGINT)  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_numTypesValid  ==  NR_LONG  ||  _numTypesValid  ==  NR_BIGINT)  {  if(_numTypesValid  ==  NR_LONG  ||  _numTypesValid!=  NR_BIGINT)  {  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if(_numTypesValid    ==    NR_LONG    ||    _numTypesValid    ==    NR_BIGINT)    {    if(_numTypesValid  ==  NR_LONG  ||  _numTypesValid!=  NR_BIGINT)  {	  	non-compiled	[CE]  ';'  expected	21	None	add
92	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_LONG  ||  _numTypesValid  ==  NR_BIGINT)  {  if(_numTypesValid!=  NR_LONG  ||  _numTypesValid  ==  NR_BIGINT)  {  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_numTypesValid  ==  NR_LONG  ||  _numTypesValid  ==  NR_BIGINT)  {  if(_numTypesValid!=  NR_LONG  ||  _numTypesValid  ==  NR_BIGINT)  {  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if(_numTypesValid    ==    NR_LONG    ||    _numTypesValid    ==    NR_BIGINT)    {    if(_numTypesValid!=  NR_LONG  ||  _numTypesValid  ==  NR_BIGINT)  {	  	non-compiled	[CE]  ';'  expected	21	None	add
93	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_LONG  ||  _numTypesValid  ==  NR_BIGINT)  {  if(_numTypesValid  ==  NR_LONG  ||  _numTypesValid  >=  NR_BIGINT)  {  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_numTypesValid  ==  NR_LONG  ||  _numTypesValid  ==  NR_BIGINT)  {  if(_numTypesValid  ==  NR_LONG  ||  _numTypesValid  >=  NR_BIGINT)  {  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if(_numTypesValid    ==    NR_LONG    ||    _numTypesValid    ==    NR_BIGINT)    {    if(_numTypesValid  ==  NR_LONG  ||  _numTypesValid  >=  NR_BIGINT)  {	  	non-compiled	[CE]  ';'  expected	21	None	add
94	[BUG]  [BUGGY]  ||(_currToken  ==  JsonToken.VALUE_NUMBER_INT))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  ||(_currToken  ==  JsonToken.VALUE_NUMBER_INT))  {  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	||(_currToken  ==  JsonToken.VALUE_NUMBER_INT))  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    If(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
95	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_LONG  ||  _numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  NR_LONG  ||  _numTypesValid  ==  NR_UNKNOWN)  {  [CE]  ';'  expected  [FE]    JsonParseException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_numTypesValid  ==  NR_LONG  ||  _numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  NR_LONG  ||  _numTypesValid  ==  NR_UNKNOWN)  {  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if(_numTypesValid    ==    NR_LONG    ||    _numTypesValid    ==    NR_UNKNOWN)    {    if(_numTypesValid  ==  NR_LONG  ||  _numTypesValid  ==  NR_UNKNOWN)  {	  	non-compiled	[CE]  ';'  expected	17	None	add
96	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_LONG  ||  _numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  NR_LONG  ||  _numTypesValid!=  NR_UNKNOWN)  {  [CE]  ';'  expected  [FE]      JsonParseException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_numTypesValid  ==  NR_LONG  ||  _numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  NR_LONG  ||  _numTypesValid!=  NR_UNKNOWN)  {  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if(_numTypesValid    ==    NR_LONG    ||    _numTypesValid    ==    NR_UNKNOWN)    {    if(_numTypesValid  ==  NR_LONG  ||  _numTypesValid!=  NR_UNKNOWN)  {	  	non-compiled	[CE]  ';'  expected	17	None	add
97	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_LONG  ||  _numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid!=  NR_LONG  ||  _numTypesValid  ==  NR_UNKNOWN)  {  [CE]  ';'  expected  [FE]        JsonParseException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_numTypesValid  ==  NR_LONG  ||  _numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid!=  NR_LONG  ||  _numTypesValid  ==  NR_UNKNOWN)  {  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if(_numTypesValid    ==    NR_LONG    ||    _numTypesValid    ==    NR_UNKNOWN)    {    if(_numTypesValid!=  NR_LONG  ||  _numTypesValid  ==  NR_UNKNOWN)  {	  	non-compiled	[CE]  ';'  expected	17	None	add
98	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_LONG  ||  _numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  NR_LONG  ||  _numTypesValid  >=  NR_UNKNOWN)  {  [CE]  ';'  expected  [FE]          JsonParseException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_numTypesValid  ==  NR_LONG  ||  _numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  NR_LONG  ||  _numTypesValid  >=  NR_UNKNOWN)  {  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if(_numTypesValid    ==    NR_LONG    ||    _numTypesValid    ==    NR_UNKNOWN)    {    if(_numTypesValid  ==  NR_LONG  ||  _numTypesValid  >=  NR_UNKNOWN)  {	  	non-compiled	[CE]  ';'  expected	17	None	add
99	[BUG]  [BUGGY]  ||(_numTypesValid  &  NR_LONG)!=  0)  {  return  _numberInt;  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  ||(_numTypesValid  &  NR_LONG)!=  0)  {  return  _numberInt;  }  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	||(_numTypesValid  &  NR_LONG)!=  0)  {  return  _numberInt;  }	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_numTypesValid    ==    NR_LONG)    {    return    _numberInt;    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
100	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _numTypesValid  ==  NR_LONG)  {  return  _numberInt;  }  [CE]  illegal  start  of  type  [FE]      AssertionFailedError    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _numTypesValid  ==  NR_LONG)  {  return  _numberInt;  }  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _numTypesValid  ==  NR_LONG)  {  return  _numberInt;  }	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_numTypesValid    ==    NR_LONG)    {    return    _numberInt;    }    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
101	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_LONG)  {  return  _numberInt;  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_numTypesValid  ==  NR_LONG)  {  return  _numberInt;  }  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if(_numTypesValid  ==  NR_LONG)  {  return  _numberInt;  }	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_numTypesValid    ==    NR_LONG)    {    return    _numberInt;    }    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
102	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if((  _numTypesValid  &  NR_LONG)!=  0  ||(_numTypesValid  &  NR_UNKNOWN)  ==  0)  {  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	add	if((  _numTypesValid  &  NR_LONG)!=  0  ||(_numTypesValid  &  NR_UNKNOWN)  ==  0)  {	  if((    _numTypesValid    &    NR_LONG)    ==    0    ||(_numTypesValid    &    NR_UNKNOWN)!=    0)    {    	compilable	  [FE]  AssertionFailedError  	12	8	replace
103	[BUG]  [BUGGY]  if((  _numTypesValid  &  NR_LONG)!=  0  ||(_numTypesValid  &  NR_UNKNOWN)  ==  0)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if((  _numTypesValid  &  NR_LONG)!=  0  ||(_numTypesValid  &  NR_UNKNOWN)  ==  0)  {  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if((  _numTypesValid  &  NR_LONG)!=  0  ||(_numTypesValid  &  NR_UNKNOWN)  ==  0)  {	  if((    _numTypesValid    &    NR_LONG)    ==    0    ||(_numTypesValid    &    NR_UNKNOWN)!=    0)    {    	compilable	  [FE]  AssertionFailedError  	12	8	replace
104	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]      AssertionFailedError    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if((  _numTypesValid  &  NR_LONG)!=  0  &&(_numTypesValid  &  NR_UNKNOWN)!=  0)  {  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	add	if((  _numTypesValid  &  NR_LONG)!=  0  &&(_numTypesValid  &  NR_UNKNOWN)!=  0)  {	  if((    _numTypesValid    &    NR_LONG)    ==    0    ||(_numTypesValid    &    NR_UNKNOWN)!=    0)    {    	compilable	  [FE]  JsonParseException  	12	8	replace
105	[BUG]  [BUGGY]  if((  _numTypesValid  &  NR_LONG)!=  0  &&(_numTypesValid  &  NR_UNKNOWN)!=  0)  {  [FE]  JsonParseException  [FE]      AssertionFailedError    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if((  _numTypesValid  &  NR_LONG)!=  0  &&(_numTypesValid  &  NR_UNKNOWN)!=  0)  {  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if((  _numTypesValid  &  NR_LONG)!=  0  &&(_numTypesValid  &  NR_UNKNOWN)!=  0)  {	  if((    _numTypesValid    &    NR_LONG)    ==    0    ||(_numTypesValid    &    NR_UNKNOWN)!=    0)    {    	compilable	  [FE]  JsonParseException  	12	8	replace
106	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_LONG  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  [CE]  cannot  find  symbol  VALUE_LONG  [FE]    AssertionFailedError    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_LONG  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if(_currToken  ==  JsonToken.VALUE_LONG  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_LONG	37	None	replace
107	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_LONG  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  [CE]  cannot  find  symbol  VALUE_NUMBER_LONG  [FE]      AssertionFailedError    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_LONG  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if(_currToken  ==  JsonToken.VALUE_NUMBER_LONG  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_LONG	37	None	replace
108	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_LONG)  {  if(_parseNumericValue(NR_LONG)!=  0)  {  return  _numberInt;  }  [CE]  'void'  type  not  allowed  here  [FE]                    JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_numTypesValid  ==  NR_LONG)  {  if(_parseNumericValue(NR_LONG)!=  0)  {  return  _numberInt;  }  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if(_numTypesValid  ==  NR_LONG)  {  if(_parseNumericValue(NR_LONG)!=  0)  {  return  _numberInt;  }	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_parseNumericValue(NR_LONG)!=    0)    {    return    _numberInt;    }    	non-compiled	[CE]  'void'  type  not  allowed  here	43	None	replace
109	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if((  _numTypesValid  &  NR_LONG)!=  0  ||(_numTypesValid  &  NR_INT)!=  0)  {  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	add	if((  _numTypesValid  &  NR_LONG)!=  0  ||(_numTypesValid  &  NR_INT)!=  0)  {	  if((    _numTypesValid    &    NR_LONG)!=    0    ||(_numTypesValid    &    NR_UNKNOWN)!=    0)    {    	compilable	  [FE]  JsonParseException  	10	8	replace
110	[BUG]  [BUGGY]  if((  _numTypesValid  &  NR_LONG)!=  0  ||(_numTypesValid  &  NR_INT)!=  0)  {  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if((  _numTypesValid  &  NR_LONG)!=  0  ||(_numTypesValid  &  NR_INT)!=  0)  {  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if((  _numTypesValid  &  NR_LONG)!=  0  ||(_numTypesValid  &  NR_INT)!=  0)  {	  if((    _numTypesValid    &    NR_LONG)!=    0    ||(_numTypesValid    &    NR_UNKNOWN)!=    0)    {    	compilable	  [FE]  JsonParseException  	10	8	replace
111	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]            JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_numTypesValid  <  NR_LONG)  {  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	add	if(_numTypesValid  <  NR_LONG)  {	  if(_numTypesValid    ==    NR_LONG)    {    if(_numTypesValid    >=    NR_LONG)    {    	compilable	  [FE]  JsonParseException  	7	8	replace
112	[BUG]  [BUGGY]  if(_numTypesValid  <  NR_LONG)  {  [FE]  JsonParseException  [FE]            JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_numTypesValid  <  NR_LONG)  {  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if(_numTypesValid  <  NR_LONG)  {	  if(_numTypesValid    ==    NR_LONG)    {    if(_numTypesValid    >=    NR_LONG)    {    	compilable	  [FE]  JsonParseException  	7	8	replace
113	[BUG]  [BUGGY]  If((  _numTypesValid  &  NR_LONG)!=  0)  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  If((  _numTypesValid  &  NR_LONG)!=  0)  {  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	If((  _numTypesValid  &  NR_LONG)!=  0)  {	  if((    _numTypesValid    &    NR_LONG)    ==    0)    {    If((    _numTypesValid    &    NR_LONG)    ==    0)    {    	non-compiled	[CE]  ';'  expected	4	None	replace
114	[BUG]  [BUGGY]  If((  _numTypesValid  &  NR_LONG)  ==  0)  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  If((  _numTypesValid  &  NR_LONG)  ==  0)  {  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	If((  _numTypesValid  &  NR_LONG)  ==  0)  {	  if((    _numTypesValid    &    NR_LONG)    ==    0)    {    If((    _numTypesValid    &    NR_LONG)    ==    0)    {    	non-compiled	[CE]  ';'  expected	4	None	replace
115	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.END_OBJECT)    {    if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_OBJECT)  {	  	non-compiled	[CE]  ';'  expected	48	None	add
116	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.END_OBJECT)  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.END_OBJECT)  {  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.END_OBJECT)    {    if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.END_OBJECT)  {	  	non-compiled	[CE]  ';'  expected	48	None	add
117	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.END_OBJECT)    {    if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_OBJECT)  {	  	non-compiled	[CE]  ';'  expected	48	None	add
118	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  If(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  If(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.END_OBJECT)    {    If(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_OBJECT)  {	  	non-compiled	[CE]  ';'  expected	48	None	add
119	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_LONG)  {  [CE]  cannot  find  symbol  END_LONG  [FE]    AssertionFailedError    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_LONG)  {  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_LONG)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.END_OBJECT)    {    	non-compiled	[CE]  cannot  find  symbol  END_LONG	49	None	replace
120	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_LONG  ||  _currToken  ==  JsonToken.END_OBJECT)  {  [CE]  cannot  find  symbol  VALUE_LONG  [FE]      AssertionFailedError    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_LONG  ||  _currToken  ==  JsonToken.END_OBJECT)  {  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if(_currToken  ==  JsonToken.VALUE_LONG  ||  _currToken  ==  JsonToken.END_OBJECT)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.END_OBJECT)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_LONG	49	None	replace
121	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.VALUE_NUMBER_LONG)  {  [CE]  cannot  find  symbol  VALUE_NUMBER_LONG  [FE]              AssertionFailedError      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.VALUE_NUMBER_LONG)  {  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.VALUE_NUMBER_LONG)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.VALUE_NUMBER_LONG)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_LONG	41	None	replace
122	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_numTypesValid  ==  NR_LONG)  {  return  _numberInt;  }  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_numTypesValid  ==  NR_LONG)  {  return  _numberInt;  }  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_numTypesValid  ==  NR_LONG)  {  return  _numberInt;  }  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_numTypesValid  ==  NR_LONG)  {  return  _numberInt;  }  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_numTypesValid    ==    NR_LONG)    {    return    _numberInt;    }    if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_numTypesValid  ==  NR_LONG)  {  return  _numberInt;  }	  	non-compiled	[CE]  ';'  expected	30	None	add
123	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_numTypesValid  ==  NR_LONG)  {  return  _numberInt;  }  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  if(_numTypesValid  ==  NR_LONG)  {  return  _numberInt;  }  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_numTypesValid  ==  NR_LONG)  {  return  _numberInt;  }  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  if(_numTypesValid  ==  NR_LONG)  {  return  _numberInt;  }  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_numTypesValid    ==    NR_LONG)    {    return    _numberInt;    }    if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  if(_numTypesValid  ==  NR_LONG)  {  return  _numberInt;  }	  	non-compiled	[CE]  ';'  expected	30	None	add
124	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_numTypesValid  ==  NR_LONG)  {  return  _numberInt;  }  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_numTypesValid!=  NR_LONG)  {  return  _numberInt;  }  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_numTypesValid  ==  NR_LONG)  {  return  _numberInt;  }  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_numTypesValid!=  NR_LONG)  {  return  _numberInt;  }  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_numTypesValid    ==    NR_LONG)    {    return    _numberInt;    }    if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_numTypesValid!=  NR_LONG)  {  return  _numberInt;  }	  	non-compiled	[CE]  ';'  expected	30	None	add
125	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_numTypesValid  ==  NR_LONG)  {  return  _numberInt;  }  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_numTypesValid  >=  NR_LONG)  {  return  _numberInt;  }  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_numTypesValid  ==  NR_LONG)  {  return  _numberInt;  }  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_numTypesValid  >=  NR_LONG)  {  return  _numberInt;  }  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_numTypesValid    ==    NR_LONG)    {    return    _numberInt;    }    if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_numTypesValid  >=  NR_LONG)  {  return  _numberInt;  }	  	non-compiled	[CE]  ';'  expected	30	None	add
126	[BUG]  [BUGGY]  _parseNumericValue(NR_LONG,  value);  [CE]  illegal  start  of  type  [FE]                  JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  _parseNumericValue(NR_LONG,  value);  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	_parseNumericValue(NR_LONG,  value);	  _parseNumericValue(NR_LONG);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
127	[BUG]  [BUGGY]  _parseNumericValue(NR_NUMBER_INT);  [CE]  illegal  start  of  type  [FE]                    JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  _parseNumericValue(NR_NUMBER_INT);  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	_parseNumericValue(NR_NUMBER_INT);	  _parseNumericValue(NR_LONG);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
128	[BUG]  [BUGGY]  _parseNumberValue(NR_LONG);  [CE]  illegal  start  of  type  [FE]                      JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  _parseNumberValue(NR_LONG);  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	_parseNumberValue(NR_LONG);	  _parseNumericValue(NR_LONG);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
129	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_OBJECT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_OBJECT)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_OBJECT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_OBJECT)  {  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.START_OBJECT)    {    if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_OBJECT)  {	  	non-compiled	[CE]  ';'  expected	44	None	add
130	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_OBJECT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.START_OBJECT)  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_OBJECT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.START_OBJECT)  {  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.START_OBJECT)    {    if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.START_OBJECT)  {	  	non-compiled	[CE]  ';'  expected	44	None	add
131	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_OBJECT)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_OBJECT)  {  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_OBJECT)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_OBJECT)  {  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.START_OBJECT)    {    if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_OBJECT)  {	  	non-compiled	[CE]  ';'  expected	44	None	add
132	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_OBJECT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_OBJECT)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.START_OBJECT)    {    if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_OBJECT)  {	  	non-compiled	[CE]  ';'  expected	44	None	add
133	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  return  _currToken;  }  [CE]  illegal  start  of  type  [FE]                        JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  return  _currToken;  }  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  return  _currToken;  }	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    return    _currToken;    }    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
134	[BUG]  [BUGGY]  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  return  _currToken;  }  [CE]  illegal  start  of  type  [FE]                          JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  return  _currToken;  }  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  return  _currToken;  }	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    return    _currToken;    }    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
135	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  return  _currToken;  }  [CE]  illegal  start  of  type  [FE]                            JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  return  _currToken;  }  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  return  _currToken;  }	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    return    _currToken;    }    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
136	[BUG]  [BUGGY]  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  return  _currToken;  }  [CE]  illegal  start  of  expression  [FE]                              JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  return  _currToken;  }  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  return  _currToken;  }	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    return    _currToken;    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
137	[BUG]  [BUGGY]  if(_numTypesValid  ==  JsonToken.VALUE_NUMBER_INT)  {  if((  _numTypesValid  &  NR_LONG)!=  0)  {  return  _numberInt;  }  [CE]  incomparable  types:  int  and  JsonToken  [FE]                    JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_numTypesValid  ==  JsonToken.VALUE_NUMBER_INT)  {  if((  _numTypesValid  &  NR_LONG)!=  0)  {  return  _numberInt;  }  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if(_numTypesValid  ==  JsonToken.VALUE_NUMBER_INT)  {  if((  _numTypesValid  &  NR_LONG)!=  0)  {  return  _numberInt;  }	  if(_numTypesValid    ==    JsonToken.VALUE_NUMBER_INT)    {    if((    _numTypesValid    &    NR_LONG)!=    0)    {    return    _numberLong;    }    	non-compiled	[CE]  incomparable  types:  int  and  JsonToken	52	None	replace
138	[BUG]  [BUGGY]  if(_numTypesValid  ==  JsonToken.VALUE_NUMBER_INT  ||  _numTypesValid  ==  NR_LONG)  {  if(_numTypesValid  ==  NR_LONG)  {  return  _numberInt;  }  [CE]  incomparable  types:  int  and  JsonToken  [FE]                      JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_numTypesValid  ==  JsonToken.VALUE_NUMBER_INT  ||  _numTypesValid  ==  NR_LONG)  {  if(_numTypesValid  ==  NR_LONG)  {  return  _numberInt;  }  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if(_numTypesValid  ==  JsonToken.VALUE_NUMBER_INT  ||  _numTypesValid  ==  NR_LONG)  {  if(_numTypesValid  ==  NR_LONG)  {  return  _numberInt;  }	  if(_numTypesValid    ==    JsonToken.VALUE_NUMBER_INT)    {    if((    _numTypesValid    &    NR_LONG)!=    0)    {    return    _numberLong;    }    	non-compiled	[CE]  incomparable  types:  int  and  JsonToken	52	None	replace
139	[BUG]  [BUGGY]  if(_numTypesValid!=  JsonToken.VALUE_NUMBER_INT)  {  if((  _numTypesValid  &  NR_LONG)!=  0)  {  return  _numberInt;  }  [CE]  incomparable  types:  int  and  JsonToken  [FE]                        JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_numTypesValid!=  JsonToken.VALUE_NUMBER_INT)  {  if((  _numTypesValid  &  NR_LONG)!=  0)  {  return  _numberInt;  }  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if(_numTypesValid!=  JsonToken.VALUE_NUMBER_INT)  {  if((  _numTypesValid  &  NR_LONG)!=  0)  {  return  _numberInt;  }	  if(_numTypesValid    ==    JsonToken.VALUE_NUMBER_INT)    {    if((    _numTypesValid    &    NR_LONG)!=    0)    {    return    _numberLong;    }    	non-compiled	[CE]  incomparable  types:  int  and  JsonToken	52	None	replace
140	[BUG]  [BUGGY]  if(_numTypesValid  ==  MIN_LONG  ||  _numTypesValid  ==  MIN_LONG)  {  [CE]  cannot  find  symbol  MIN_LONG  [FE]    JsonParseException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_numTypesValid  ==  MIN_LONG  ||  _numTypesValid  ==  MIN_LONG)  {  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if(_numTypesValid  ==  MIN_LONG  ||  _numTypesValid  ==  MIN_LONG)  {	  if(_numTypesValid    ==    NR_LONG    ||    _numTypesValid    ==    NR_UNKNOWN)    {    	non-compiled	[CE]  cannot  find  symbol  MIN_LONG	18	None	replace
141	[BUG]  [BUGGY]  if(_numTypesValid  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_LONG)  {  [CE]  incomparable  types:  int  and  JsonToken  [FE]    AssertionFailedError    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_numTypesValid  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_LONG)  {  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if(_numTypesValid  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_LONG)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _numTypesValid    ==    NR_LONG)    {    	non-compiled	[CE]  incomparable  types:  int  and  JsonToken	40	None	replace
142	[BUG]  [BUGGY]  if(_numTypesValid  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [CE]  incomparable  types:  int  and  JsonToken  [FE]      AssertionFailedError    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_numTypesValid  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if(_numTypesValid  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _numTypesValid    ==    NR_LONG)    {    	non-compiled	[CE]  incomparable  types:  int  and  JsonToken	40	None	replace
143	[BUG]  [BUGGY]  if(_numTypesValid  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_OBJECT)  {  [CE]  incomparable  types:  int  and  JsonToken  [FE]        AssertionFailedError    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_numTypesValid  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_OBJECT)  {  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if(_numTypesValid  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_OBJECT)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _numTypesValid    ==    NR_LONG)    {    	non-compiled	[CE]  incomparable  types:  int  and  JsonToken	40	None	replace
144	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_L)  {  [CE]  cannot  find  symbol  VALUE_NUMBER_L  [FE]          AssertionFailedError      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_L)  {  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if(_currToken  ==  JsonToken.VALUE_NUMBER_L)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_currToken!=    JsonToken.VALUE_NUMBER_INT)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_L	14	None	replace
145	[BUG]  [BUGGY]  _parseNumericValue(NR_INT);  [CE]  illegal  start  of  type  [FE]                  JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  _parseNumericValue(NR_INT);  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	_parseNumericValue(NR_INT);	  _parseNumericValue(NR_LONG);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
146	[BUG]  [BUGGY]  if(_numTypesValid  ==  JsonToken.VALUE_NUMBER_INT)  {  if((  _numTypesValid  &  NR_INT)!=  0)  {  return  _numberInt;  }  [CE]  incomparable  types:  int  and  JsonToken  [FE]                    JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_numTypesValid  ==  JsonToken.VALUE_NUMBER_INT)  {  if((  _numTypesValid  &  NR_INT)!=  0)  {  return  _numberInt;  }  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if(_numTypesValid  ==  JsonToken.VALUE_NUMBER_INT)  {  if((  _numTypesValid  &  NR_INT)!=  0)  {  return  _numberInt;  }	  if(_numTypesValid    ==    JsonToken.VALUE_NUMBER_INT)    {    if((    _numTypesValid    &    NR_LONG)!=    0)    {    return    _numberLong;    }    	non-compiled	[CE]  incomparable  types:  int  and  JsonToken	52	None	replace
147	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	add	if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    	compilable	  [FE]  AssertionFailedError  	47	8	replace
148	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    	compilable	  [FE]  AssertionFailedError  	47	8	replace
149	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_LONG  ||  _numTypesValid  ==  NR_LONG)  {  If(_numTypesValid  ==  NR_LONG  ||  _numTypesValid  ==  NR_LONG)  {  [CE]  ';'  expected  [FE]    JsonParseException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_numTypesValid  ==  NR_LONG  ||  _numTypesValid  ==  NR_LONG)  {  If(_numTypesValid  ==  NR_LONG  ||  _numTypesValid  ==  NR_LONG)  {  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if(_numTypesValid    ==    NR_LONG    ||    _numTypesValid    ==    NR_LONG)    {    If(_numTypesValid  ==  NR_LONG  ||  _numTypesValid  ==  NR_LONG)  {	  	non-compiled	[CE]  ';'  expected	19	None	add
150	[BUG]  [BUGGY]  if(_numTypesValid  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_currToken  ==  NR_LONG)  {  return  _numberInt;  }  [CE]  incomparable  types:  int  and  JsonToken  [FE]    AssertionFailedError    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_numTypesValid  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_currToken  ==  NR_LONG)  {  return  _numberInt;  }  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if(_numTypesValid  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_currToken  ==  NR_LONG)  {  return  _numberInt;  }	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_numTypesValid    ==    NR_LONG)    {    return    _numberInt;    }    	non-compiled	[CE]  incomparable  types:  int  and  JsonToken	31	None	replace
151	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_numTypesValid  ==  NR_LONG)  {  return  _numberLong;  }  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_numTypesValid  ==  NR_LONG)  {  return  _number  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_numTypesValid  ==  NR_LONG)  {  return  _numberLong;  }  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_numTypesValid  ==  NR_LONG)  {  return  _number  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_numTypesValid    ==    NR_LONG)    {    return    _numberLong;    }    if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_numTypesValid  ==  NR_LONG)  {  return  _number	  	non-compiled	[CE]  ';'  expected	28	None	add
152	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    JsonParseException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if((  _numTypesValid  &  NR_LONG)!=  0  ||(_numTypesValid  &  NR_BIGINT)!=  0)  {  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	add	if((  _numTypesValid  &  NR_LONG)!=  0  ||(_numTypesValid  &  NR_BIGINT)!=  0)  {	  if((    _numTypesValid    &    NR_LONG)!=    0    ||(_numTypesValid    &    NR_UNKNOWN)!=    0)    {    	compilable	  [FE]  AssertionFailedError  	10	8	replace
153	[BUG]  [BUGGY]  if((  _numTypesValid  &  NR_LONG)!=  0  ||(_numTypesValid  &  NR_BIGINT)!=  0)  {  [FE]  AssertionFailedError  [FE]    JsonParseException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if((  _numTypesValid  &  NR_LONG)!=  0  ||(_numTypesValid  &  NR_BIGINT)!=  0)  {  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if((  _numTypesValid  &  NR_LONG)!=  0  ||(_numTypesValid  &  NR_BIGINT)!=  0)  {	  if((    _numTypesValid    &    NR_LONG)!=    0    ||(_numTypesValid    &    NR_UNKNOWN)!=    0)    {    	compilable	  [FE]  AssertionFailedError  	10	8	replace
154	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_ARRAY)  {  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	add	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_ARRAY)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.END_OBJECT)    {    	compilable	  [FE]  AssertionFailedError  	49	8	replace
155	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_ARRAY)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_ARRAY)  {  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.END_ARRAY)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.END_OBJECT)    {    	compilable	  [FE]  AssertionFailedError  	49	8	replace
156	[BUG]  [BUGGY]  if((  _numTypesValid  &  NR_LONG)!=  0  ||(_numTypesValid  &  NR_UNKNOWN)!=  0)  {  if((  _numTypesValid  &  NR_LONG)  >>  0  ||(_numTypesValid  &  NR_UNKNOWN)!=  0)  {  [CE]  ';'  expected  [FE]    JsonParseException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if((  _numTypesValid  &  NR_LONG)!=  0  ||(_numTypesValid  &  NR_UNKNOWN)!=  0)  {  if((  _numTypesValid  &  NR_LONG)  >>  0  ||(_numTypesValid  &  NR_UNKNOWN)!=  0)  {  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if((    _numTypesValid    &    NR_LONG)!=    0    ||(_numTypesValid    &    NR_UNKNOWN)!=    0)    {    if((  _numTypesValid  &  NR_LONG)  >>  0  ||(_numTypesValid  &  NR_UNKNOWN)!=  0)  {	  	non-compiled	[CE]  ';'  expected	9	None	add
157	[BUG]  [BUGGY]  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    If(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
158	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _parseNumericValue(NR_LONG)!=  0)  {  return  _numberLong;  }  [CE]  illegal  start  of  type  [FE]                  JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _parseNumericValue(NR_LONG)!=  0)  {  return  _numberLong;  }  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _parseNumericValue(NR_LONG)!=  0)  {  return  _numberLong;  }	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_parseNumericValue(NR_LONG)!=    0)    {    return    _numberLong;    }    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
159	[BUG]  [BUGGY]  if(_numTypesValid  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_parseNumericValue(NR_LONG)!=  0)  {  return  _numberInt;  }  [CE]  incomparable  types:  int  and  JsonToken  [FE]                    JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_numTypesValid  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_parseNumericValue(NR_LONG)!=  0)  {  return  _numberInt;  }  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if(_numTypesValid  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_parseNumericValue(NR_LONG)!=  0)  {  return  _numberInt;  }	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_parseNumericValue(NR_LONG)!=    0)    {    return    _numberLong;    }    	non-compiled	[CE]  incomparable  types:  int  and  JsonToken	42	None	replace
160	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_LONG  ||  _numTypesValid  ==  NR_LBIGINT)  {  [CE]  cannot  find  symbol  NR_LBIGINT  [FE]    JsonParseException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_numTypesValid  ==  NR_LONG  ||  _numTypesValid  ==  NR_LBIGINT)  {  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if(_numTypesValid  ==  NR_LONG  ||  _numTypesValid  ==  NR_LBIGINT)  {	  if(_numTypesValid    ==    NR_LONG    ||    _numTypesValid    ==    NR_LONG)    {    	non-compiled	[CE]  cannot  find  symbol  NR_LBIGINT	20	None	replace
161	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_LONG  ||  _numTypesValid  ==  NR_BIGINT)  {  If(_numTypesValid  ==  NR_LONG  ||  _numTypesValid  ==  NR_BIGINT)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_numTypesValid  ==  NR_LONG  ||  _numTypesValid  ==  NR_BIGINT)  {  If(_numTypesValid  ==  NR_LONG  ||  _numTypesValid  ==  NR_BIGINT)  {  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if(_numTypesValid    ==    NR_LONG    ||    _numTypesValid    ==    NR_BIGINT)    {    If(_numTypesValid  ==  NR_LONG  ||  _numTypesValid  ==  NR_BIGINT)  {	  	non-compiled	[CE]  ';'  expected	21	None	add
162	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _numTypesValid  ==  NR_LONG)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _numtypesValid  ==  NR_LONG)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _numTypesValid  ==  NR_LONG)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _numtypesValid  ==  NR_LONG)  {  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _numTypesValid    ==    NR_LONG)    {    if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _numtypesValid  ==  NR_LONG)  {	  	non-compiled	[CE]  ';'  expected	39	None	add
163	[BUG]  [BUGGY]  if(_parseNumericValue(NR_LONG)!=  0)  {  return  _numberInt;  }  [CE]  illegal  start  of  type  [FE]                    JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_parseNumericValue(NR_LONG)!=  0)  {  return  _numberInt;  }  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if(_parseNumericValue(NR_LONG)!=  0)  {  return  _numberInt;  }	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_parseNumericValue(NR_LONG)!=    0)    {    return    _numberInt;    }    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
164	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	add	if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.START_OBJECT)    {    	compilable	  [FE]  AssertionFailedError  	45	8	replace
165	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.START_OBJECT)    {    	compilable	  [FE]  AssertionFailedError  	45	8	replace
166	[BUG]  [BUGGY]  if((  _numTypesValid  &  NR_LONG)  >=  0)  {  If((  _numTypesValid  &  NR_LONG)  >=  0)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if((  _numTypesValid  &  NR_LONG)  >=  0)  {  If((  _numTypesValid  &  NR_LONG)  >=  0)  {  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if((    _numTypesValid    &    NR_LONG)    >=    0)    {    If((  _numTypesValid  &  NR_LONG)  >=  0)  {	  	non-compiled	[CE]  ';'  expected	55	None	add
167	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _numTypesValid  ==  NR_LONG)  {  return  _numberLong;  }  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _numTypesValid  ==  NR_LONG)  {  return  _numberLong;  }  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _numTypesValid  ==  NR_LONG)  {  return  _numberLong;  }	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_numTypesValid    ==    NR_LONG)    {    return    _numberLong;    }    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
168	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_LONG  ||  _numTypesValid  ==  NR_UNKNOWN)  {  If(_numTypesValid  ==  NR_LONG  ||  _numTypesValid  ==  NR_UNKNOWN)  {  [CE]  ';'  expected  [FE]    JsonParseException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_numTypesValid  ==  NR_LONG  ||  _numTypesValid  ==  NR_UNKNOWN)  {  If(_numTypesValid  ==  NR_LONG  ||  _numTypesValid  ==  NR_UNKNOWN)  {  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if(_numTypesValid    ==    NR_LONG    ||    _numTypesValid    ==    NR_UNKNOWN)    {    If(_numTypesValid  ==  NR_LONG  ||  _numTypesValid  ==  NR_UNKNOWN)  {	  	non-compiled	[CE]  ';'  expected	17	None	add
169	[BUG]  [BUGGY]  if(_currToken!=  JsonToken.VALUE_NUMBER_LONG)  {  [CE]  cannot  find  symbol  VALUE_NUMBER_LONG  [FE]    JsonParseException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_currToken!=  JsonToken.VALUE_NUMBER_LONG)  {  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if(_currToken!=  JsonToken.VALUE_NUMBER_LONG)  {	  if(_currToken!=    JsonToken.VALUE_NUMBER_INT)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_LONG	34	None	replace
170	[BUG]  [BUGGY]  _currToken  =  JsonToken.VALUE_NUMBER_INT;  [CE]  illegal  start  of  type  [FE]                        JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  _currToken  =  JsonToken.VALUE_NUMBER_INT;  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	_currToken  =  JsonToken.VALUE_NUMBER_INT;	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    return    _currToken;    }    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
171	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_NUMBER_INT)  {  [CE]  cannot  find  symbol  VALUE_NUMBER_NUMBER_INT  [FE]          AssertionFailedError      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_NUMBER_INT)  {  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if(_currToken  ==  JsonToken.VALUE_NUMBER_NUMBER_INT)  {	  if(_currToken    ==    JsonToken.VALUE_LONG)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_NUMBER_INT	38	None	replace
172	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_LENGTH)  {  [CE]  cannot  find  symbol  VALUE_NUMBER_LENGTH  [FE]            AssertionFailedError      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_LENGTH)  {  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if(_currToken  ==  JsonToken.VALUE_NUMBER_LENGTH)  {	  if(_currToken    ==    JsonToken.VALUE_LONG)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_LENGTH	38	None	replace
173	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_numTypesValid  ==  NR_LONG  ||  _numTypesValid  >=  NR_BIGINT)  {  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	add	if(_numTypesValid  ==  NR_LONG  ||  _numTypesValid  >=  NR_BIGINT)  {	  if(_numTypesValid    ==    NR_LONG    ||    _numTypesValid    ==    NR_BIGINT)    {    	compilable	  [FE]  AssertionFailedError  	22	8	replace
174	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_LONG  ||  _numTypesValid  >=  NR_BIGINT)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_numTypesValid  ==  NR_LONG  ||  _numTypesValid  >=  NR_BIGINT)  {  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if(_numTypesValid  ==  NR_LONG  ||  _numTypesValid  >=  NR_BIGINT)  {	  if(_numTypesValid    ==    NR_LONG    ||    _numTypesValid    ==    NR_BIGINT)    {    	compilable	  [FE]  AssertionFailedError  	22	8	replace
175	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_LONG)  {  return  _currInt;  }  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_numTypesValid  ==  NR_LONG)  {  return  _currInt;  }  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if(_numTypesValid  ==  NR_LONG)  {  return  _currInt;  }	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_numTypesValid    ==    NR_LONG)    {    return    _numberInt;    }    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
176	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_LONG)  {  return  _currToken;  }  [CE]  illegal  start  of  type  [FE]      AssertionFailedError    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_numTypesValid  ==  NR_LONG)  {  return  _currToken;  }  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if(_numTypesValid  ==  NR_LONG)  {  return  _currToken;  }	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_numTypesValid    ==    NR_LONG)    {    return    _numberInt;    }    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
177	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    AssertionFailedError    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if((  _numTypesValid  &  NR_LONG)!=  0)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  return  _numberLong;  }  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	add	if((  _numTypesValid  &  NR_LONG)!=  0)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  return  _numberLong;  }	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_numTypesValid    ==    NR_LONG)    {    return    _numberLong;    }    	compilable	  [FE]  JsonParseException  	29	8	replace
178	[BUG]  [BUGGY]  if((  _numTypesValid  &  NR_LONG)!=  0)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  return  _numberLong;  }  [FE]  JsonParseException  [FE]    AssertionFailedError    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if((  _numTypesValid  &  NR_LONG)!=  0)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  return  _numberLong;  }  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if((  _numTypesValid  &  NR_LONG)!=  0)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  return  _numberLong;  }	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_numTypesValid    ==    NR_LONG)    {    return    _numberLong;    }    	compilable	  [FE]  JsonParseException  	29	8	replace
179	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  _parseNumericValue(NR_LONG);  }  [CE]  illegal  start  of  type  [FE]                  JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  _parseNumericValue(NR_LONG);  }  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  _parseNumericValue(NR_LONG);  }	  _parseNumericValue(NR_LONG);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
180	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  _parseNumericValue(NR_LONG);  }  else  {  _parseNumericValue(NR_LONG);  }  [CE]  illegal  start  of  type  [FE]                    JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  _parseNumericValue(NR_LONG);  }  else  {  _parseNumericValue(NR_LONG);  }  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  _parseNumericValue(NR_LONG);  }  else  {  _parseNumericValue(NR_LONG);  }	  _parseNumericValue(NR_LONG);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
181	[BUG]  [BUGGY]  if(_numTypesValid  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_parseNumericValue(NR_LONG)!=  0)  {  return  _numberLong;  }  [CE]  incomparable  types:  int  and  JsonToken  [FE]                  JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_numTypesValid  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_parseNumericValue(NR_LONG)!=  0)  {  return  _numberLong;  }  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if(_numTypesValid  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_parseNumericValue(NR_LONG)!=  0)  {  return  _numberLong;  }	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_parseNumericValue(NR_LONG)!=    0)    {    return    _numberLong;    }    	non-compiled	[CE]  incomparable  types:  int  and  JsonToken	42	None	replace
182	[BUG]  [BUGGY]  if(_numTypesValid  ==  MIN_LONG  ||  _numTypesValid  ==  NR_BIGINT)  {  [CE]  cannot  find  symbol  MIN_LONG  [FE]    AssertionFailedError    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_numTypesValid  ==  MIN_LONG  ||  _numTypesValid  ==  NR_BIGINT)  {  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if(_numTypesValid  ==  MIN_LONG  ||  _numTypesValid  ==  NR_BIGINT)  {	  if(_numTypesValid    ==    NR_LONG    ||    _numTypesValid    ==    NR_BIGINT)    {    	non-compiled	[CE]  cannot  find  symbol  MIN_LONG	22	None	replace
183	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  return  _numberLong;  }  [CE]  illegal  start  of  type  [FE]                        JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  return  _numberLong;  }  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  return  _numberLong;  }	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    return    _currToken;    }    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
184	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  return  _numberInt;  }  [CE]  illegal  start  of  type  [FE]                          JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  return  _numberInt;  }  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  return  _numberInt;  }	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    return    _currToken;    }    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
185	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  return  _numberLong;  }  [CE]  illegal  start  of  type  [FE]                            JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  return  _numberLong;  }  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  return  _numberLong;  }	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    return    _currToken;    }    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
186	[BUG]  [BUGGY]  if((  _numTypesValid  &  NR_LONG)!=  0)  {  return  _numberLong;  }  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if((  _numTypesValid  &  NR_LONG)!=  0)  {  return  _numberLong;  }  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if((  _numTypesValid  &  NR_LONG)!=  0)  {  return  _numberLong;  }	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if((    _numTypesValid    &    NR_LONG)!=    0)    {    return    _numberLong;    }    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
187	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _numTypesValid  ==  NR_LONG)  {  if((  _numTypesValid  &  NR_LONG)!=  0)  {  return  _numberLong;  }  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	add	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _numTypesValid  ==  NR_LONG)  {  if((  _numTypesValid  &  NR_LONG)!=  0)  {  return  _numberLong;  }	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if((    _numTypesValid    &    NR_LONG)!=    0)    {    return    _numberLong;    }    	compilable	  [FE]  AssertionFailedError  	51	8	replace
188	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _numTypesValid  ==  NR_LONG)  {  if((  _numTypesValid  &  NR_LONG)!=  0)  {  return  _numberLong;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _numTypesValid  ==  NR_LONG)  {  if((  _numTypesValid  &  NR_LONG)!=  0)  {  return  _numberLong;  }  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _numTypesValid  ==  NR_LONG)  {  if((  _numTypesValid  &  NR_LONG)!=  0)  {  return  _numberLong;  }	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if((    _numTypesValid    &    NR_LONG)!=    0)    {    return    _numberLong;    }    	compilable	  [FE]  AssertionFailedError  	51	8	replace
189	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _numTypesValid  ==  NR_LONG)  {  if((  _numTypesValid  &  NR_LONG)!=  0)  {  return  _numberInt;  }  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	add	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _numTypesValid  ==  NR_LONG)  {  if((  _numTypesValid  &  NR_LONG)!=  0)  {  return  _numberInt;  }	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if((    _numTypesValid    &    NR_LONG)!=    0)    {    return    _numberLong;    }    	compilable	  [FE]  AssertionFailedError  	51	8	replace
190	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _numTypesValid  ==  NR_LONG)  {  if((  _numTypesValid  &  NR_LONG)!=  0)  {  return  _numberInt;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _numTypesValid  ==  NR_LONG)  {  if((  _numTypesValid  &  NR_LONG)!=  0)  {  return  _numberInt;  }  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _numTypesValid  ==  NR_LONG)  {  if((  _numTypesValid  &  NR_LONG)!=  0)  {  return  _numberInt;  }	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if((    _numTypesValid    &    NR_LONG)!=    0)    {    return    _numberLong;    }    	compilable	  [FE]  AssertionFailedError  	51	8	replace
191	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_numTypesValid  ==  NR_LONG)  {  return  _numberInt;  }  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_numtypesValid  ==  NR_LONG)  {  return  _numberInt;  }  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_numTypesValid  ==  NR_LONG)  {  return  _numberInt;  }  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_numtypesValid  ==  NR_LONG)  {  return  _numberInt;  }  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_numTypesValid    ==    NR_LONG)    {    return    _numberInt;    }    if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if(_numtypesValid  ==  NR_LONG)  {  return  _numberInt;  }	  	non-compiled	[CE]  ';'  expected	30	None	add
192	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_LONG  ||  _numTypesValid  ==  NR_LONG)  {  if(_numTypesValid  ==  NR_LONG  ||  _numtypesValid  ==  NR_LONG)  {  [CE]  ';'  expected  [FE]    JsonParseException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_numTypesValid  ==  NR_LONG  ||  _numTypesValid  ==  NR_LONG)  {  if(_numTypesValid  ==  NR_LONG  ||  _numtypesValid  ==  NR_LONG)  {  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if(_numTypesValid    ==    NR_LONG    ||    _numTypesValid    ==    NR_LONG)    {    if(_numTypesValid  ==  NR_LONG  ||  _numtypesValid  ==  NR_LONG)  {	  	non-compiled	[CE]  ';'  expected	19	None	add
193	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_BIGINT)  {  [CE]  cannot  find  symbol  VALUE_NUMBER_BIGINT  [FE]              AssertionFailedError      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_BIGINT)  {  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_BIGINT)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.VALUE_NUMBER_LONG)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_BIGINT	41	None	replace
194	[BUG]  [BUGGY]  if(_numTypesValid  ==  JsonToken.VALUE_LONG  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  [CE]  cannot  find  symbol  VALUE_LONG  [FE]    AssertionFailedError    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_numTypesValid  ==  JsonToken.VALUE_LONG  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if(_numTypesValid  ==  JsonToken.VALUE_LONG  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _numTypesValid    ==    NR_LONG)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_LONG	40	None	replace
195	[BUG]  [BUGGY]  if(_numTypesValid  ==  JsonToken.VALUE_LONG)  {  [CE]  cannot  find  symbol  VALUE_LONG  [FE]        AssertionFailedError      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_numTypesValid  ==  JsonToken.VALUE_LONG)  {  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if(_numTypesValid  ==  JsonToken.VALUE_LONG)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    	non-compiled	[CE]  cannot  find  symbol  VALUE_LONG	13	None	replace
196	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if((  _numTypesValid  &  NR_LONG)!=  0)  {  return  _numberLong;  }  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if((  _numtypesValid  &  NR_LONG)!=  0)  {  return  _numberLong;  }  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if((  _numTypesValid  &  NR_LONG)!=  0)  {  return  _numberLong;  }  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if((  _numtypesValid  &  NR_LONG)!=  0)  {  return  _numberLong;  }  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if((    _numTypesValid    &    NR_LONG)!=    0)    {    return    _numberLong;    }    if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if((  _numtypesValid  &  NR_LONG)!=  0)  {  return  _numberLong;  }	  	non-compiled	[CE]  ';'  expected	50	None	add
197	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]                    JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  if((  _numTypesValid  &  NR_LONG)!=  0)  {  return  _numberInt;  }  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	add	if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  if((  _numTypesValid  &  NR_LONG)!=  0)  {  return  _numberInt;  }	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_parseNumericValue(NR_LONG)!=    0)    {    return    _numberInt;    }    	compilable	  [FE]  JsonParseException  	43	8	replace
198	[BUG]  [BUGGY]  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  if((  _numTypesValid  &  NR_LONG)!=  0)  {  return  _numberInt;  }  [FE]  JsonParseException  [FE]                    JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  if((  _numTypesValid  &  NR_LONG)!=  0)  {  return  _numberInt;  }  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if(_currToken!=  JsonToken.VALUE_NUMBER_INT)  {  if((  _numTypesValid  &  NR_LONG)!=  0)  {  return  _numberInt;  }	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT)    {    if(_parseNumericValue(NR_LONG)!=    0)    {    return    _numberInt;    }    	compilable	  [FE]  JsonParseException  	43	8	replace
199	[BUG]  [BUGGY]  if(_numTypesValid  ==  JsonToken.VALUE_NUMBER_INT  ||  _numTypesValid  ==  NR_LONG)  {  if((  _numTypesValid  &  NR_LONG)!=  0)  {  return  _numberLong;  }  [CE]  incomparable  types:  int  and  JsonToken  [FE]                    JsonParseException      [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_numTypesValid  ==  JsonToken.VALUE_NUMBER_INT  ||  _numTypesValid  ==  NR_LONG)  {  if((  _numTypesValid  &  NR_LONG)!=  0)  {  return  _numberLong;  }  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if(_numTypesValid  ==  JsonToken.VALUE_NUMBER_INT  ||  _numTypesValid  ==  NR_LONG)  {  if((  _numTypesValid  &  NR_LONG)!=  0)  {  return  _numberLong;  }	  if(_numTypesValid    ==    JsonToken.VALUE_NUMBER_INT)    {    if((    _numTypesValid    &    NR_LONG)!=    0)    {    return    _numberLong;    }    	non-compiled	[CE]  incomparable  types:  int  and  JsonToken	52	None	replace
200	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_LONG  ||  _numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  NR_LONG  ||  _numtypesValid  ==  NR_UNKNOWN)  {  [CE]  ';'  expected  [FE]    JsonParseException    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_numTypesValid  ==  NR_LONG  ||  _numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  NR_LONG  ||  _numtypesValid  ==  NR_UNKNOWN)  {  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if(_numTypesValid    ==    NR_LONG    ||    _numTypesValid    ==    NR_UNKNOWN)    {    if(_numTypesValid  ==  NR_LONG  ||  _numtypesValid  ==  NR_UNKNOWN)  {	  	non-compiled	[CE]  ';'  expected	17	None	add
201	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_LONG  ||  _numTypesValid  ==  NR_BIGINT)  {  if(_numTypesValid  ==  NR_LONG  ||  _numtypesValid  ==  NR_BIGINT)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  _parseNumericValue(NR_UNKNOWN);  //  will  also  check  event  type  }  if  (_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  if  ((_numTypesValid  &  NR_INT)  !=  0)  {  return  _numberInt;  }      [BUGGY]  if(_numTypesValid  ==  NR_LONG  ||  _numTypesValid  ==  NR_BIGINT)  {  if(_numTypesValid  ==  NR_LONG  ||  _numtypesValid  ==  NR_BIGINT)  {  [BUGGY]      return  _numberLong;  }  if  ((_numTypesValid  &  NR_BIGINT)  !=  0)  {  return  _numberBigInt;  }  return  _numberBigDecimal;  }    [CLASS]  ParserBase  [METHOD]  getNumberValue  [RETURN_TYPE]  Number  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.5	591	591	8	replace	if(_numTypesValid    ==    NR_LONG    ||    _numTypesValid    ==    NR_BIGINT)    {    if(_numTypesValid  ==  NR_LONG  ||  _numtypesValid  ==  NR_BIGINT)  {	  	non-compiled	[CE]  ';'  expected	21	None	add
