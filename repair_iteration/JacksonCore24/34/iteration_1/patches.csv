bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(_numTypesValid  ==  0)  {  if(_numTypesValid  ==  0)  {  convertNumberToInt();  }  [CE]  ';'  expected  [FE]          JsonParseException    [CONTEXT]    public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }    [BUGGY]  if(_numTypesValid  ==  0)  {  if(_numTypesValid  ==  0)  {  convertNumberToInt();  }  [BUGGY]    convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_numTypesValid  ==  0)  {  if(_numTypesValid  ==  0)  {  convertNumberToInt();  }	  if(_numTypesValid    ==    NR_UNKNOWN)    {    if(_numTypesValid    ==    NR_INT)    {    convertNumberToInt();    //    let's    make    it    so,    if    possible    }    	non-compiled	[CE]  ';'  expected	2	None	replace
2	[BUG]  [BUGGY]  if(_numTypesValid  ==  0)  {  if(_numTypesValid  ==  0)  {  convertNumberToInt();  //  let's  make  it  so,  if  possible  }  [CE]  ';'  expected  [FE]            JsonParseException    [CONTEXT]    public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }    [BUGGY]  if(_numTypesValid  ==  0)  {  if(_numTypesValid  ==  0)  {  convertNumberToInt();  //  let's  make  it  so,  if  possible  }  [BUGGY]    convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_numTypesValid  ==  0)  {  if(_numTypesValid  ==  0)  {  convertNumberToInt();  //  let's  make  it  so,  if  possible  }	  if(_numTypesValid    ==    NR_UNKNOWN)    {    if(_numTypesValid    ==    NR_INT)    {    convertNumberToInt();    //    let's    make    it    so,    if    possible    }    	non-compiled	[CE]  ';'  expected	2	None	replace
3	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_INT)  {  if(_numTypesValid  ==  NR_INT)  {  convertNumberToInt();  }  [CE]  ';'  expected  [FE]              JsonParseException    [CONTEXT]    public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }    [BUGGY]  if(_numTypesValid  ==  NR_INT)  {  if(_numTypesValid  ==  NR_INT)  {  convertNumberToInt();  }  [BUGGY]    convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_numTypesValid  ==  NR_INT)  {  if(_numTypesValid  ==  NR_INT)  {  convertNumberToInt();  }	  if(_numTypesValid    ==    NR_UNKNOWN)    {    if(_numTypesValid    ==    NR_INT)    {    convertNumberToInt();    //    let's    make    it    so,    if    possible    }    	non-compiled	[CE]  ';'  expected	2	None	replace
4	[BUG]  [BUGGY]  if(_numTypesValid  ==  0)  {  if(_numTypesValid  ==  NR_INT)  {  convertNumberToInt();  }  [CE]  ';'  expected  [FE]                JsonParseException    [CONTEXT]    public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }    [BUGGY]  if(_numTypesValid  ==  0)  {  if(_numTypesValid  ==  NR_INT)  {  convertNumberToInt();  }  [BUGGY]    convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_numTypesValid  ==  0)  {  if(_numTypesValid  ==  NR_INT)  {  convertNumberToInt();  }	  if(_numTypesValid    ==    NR_UNKNOWN)    {    if(_numTypesValid    ==    NR_INT)    {    convertNumberToInt();    //    let's    make    it    so,    if    possible    }    	non-compiled	[CE]  ';'  expected	2	None	replace
5	[BUG]  [BUGGY]  if(_numTypesValid  ==  0)  {  if(_numTypesValid  ==  0)  {  return  _parseIntValue();  }  [CE]  ';'  expected  [FE]          JsonParseException    [CONTEXT]    public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }    [BUGGY]  if(_numTypesValid  ==  0)  {  if(_numTypesValid  ==  0)  {  return  _parseIntValue();  }  [BUGGY]    convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_numTypesValid  ==  0)  {  if(_numTypesValid  ==  0)  {  return  _parseIntValue();  }	  if(_numTypesValid    ==    NR_UNKNOWN)    {    if(_numTypesValid    ==    NR_INT)    {    //    wasn't    an    int    natively?    convertNumberToInt();    //    let's    make    it    so,    if    possible    }    	non-compiled	[CE]  ';'  expected	8	None	replace
6	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_INT)  {  if(_numTypesValid  ==  NR_INT)  {  //  wasn't  an  int  natively?  convertNumberToInt();  //  let's  make  it  so,  if  possible  }  [CE]  ';'  expected  [FE]            JsonParseException    [CONTEXT]    public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }    [BUGGY]  if(_numTypesValid  ==  NR_INT)  {  if(_numTypesValid  ==  NR_INT)  {  //  wasn't  an  int  natively?  convertNumberToInt();  //  let's  make  it  so,  if  possible  }  [BUGGY]    convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_numTypesValid  ==  NR_INT)  {  if(_numTypesValid  ==  NR_INT)  {  //  wasn't  an  int  natively?  convertNumberToInt();  //  let's  make  it  so,  if  possible  }	  if(_numTypesValid    ==    NR_UNKNOWN)    {    if(_numTypesValid    ==    NR_INT)    {    //    wasn't    an    int    natively?    convertNumberToInt();    //    let's    make    it    so,    if    possible    }    	non-compiled	[CE]  ';'  expected	8	None	replace
7	[BUG]  [BUGGY]  if(_numTypesValid  ==  0)  {  if(_numTypesValid  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]              JsonParseException    [CONTEXT]    public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }    [BUGGY]  if(_numTypesValid  ==  0)  {  if(_numTypesValid  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_numTypesValid  ==  0)  {  if(_numTypesValid  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(_numTypesValid    ==    NR_UNKNOWN)    {    if(_numTypesValid    ==    NR_INT)    {    //    wasn't    an    int    natively?    convertNumberToInt();    //    let's    make    it    so,    if    possible    }    	non-compiled	[CE]  ';'  expected	8	None	replace
8	[BUG]  [BUGGY]  ||(_numTypesValid  ==  NR_INT)&&(_numTypesValid  ==  NR_INT))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]        JsonParseException    [CONTEXT]    public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }    [BUGGY]  ||(_numTypesValid  ==  NR_INT)&&(_numTypesValid  ==  NR_INT))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	||(_numTypesValid  ==  NR_INT)&&(_numTypesValid  ==  NR_INT))  {  throw  new  IllegalArgumentException( " ");  }	  if(_numTypesValid    ==    NR_UNKNOWN)    {    if(_numTypesValid    ==    NR_INT)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
9	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_INT)  {  if(_numTypesValid  ==  NR_INT)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]          JsonParseException    [CONTEXT]    public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }    [BUGGY]  if(_numTypesValid  ==  NR_INT)  {  if(_numTypesValid  ==  NR_INT)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_numTypesValid  ==  NR_INT)  {  if(_numTypesValid  ==  NR_INT)  {  throw  new  IllegalArgumentException( " ");  }	  if(_numTypesValid    ==    NR_UNKNOWN)    {    if(_numTypesValid    ==    NR_INT)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	1	None	replace
10	[BUG]  [BUGGY]  ||  _numTypesValid  ==  NR_INT)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]            JsonParseException    [CONTEXT]    public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }    [BUGGY]  ||  _numTypesValid  ==  NR_INT)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	||  _numTypesValid  ==  NR_INT)  {  throw  new  IllegalArgumentException( " ");  }	  if(_numTypesValid    ==    NR_UNKNOWN)    {    if(_numTypesValid    ==    NR_INT)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
11	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_INT)  {  if(_numTypesValid  ==  NR_UNKNOWN)  {  return  _parseIntValue();  }  [CE]  ';'  expected  [FE]        JsonParseException    [CONTEXT]    public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }    [BUGGY]  if(_numTypesValid  ==  NR_INT)  {  if(_numTypesValid  ==  NR_UNKNOWN)  {  return  _parseIntValue();  }  [BUGGY]    convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_numTypesValid  ==  NR_INT)  {  if(_numTypesValid  ==  NR_UNKNOWN)  {  return  _parseIntValue();  }	  if(_numTypesValid    ==    NR_UNKNOWN)    {    if(_numTypesValid    ==    NR_UNKNOWN)    {    return    _parseIntValue();    }    	non-compiled	[CE]  ';'  expected	10	None	replace
12	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_INT)  {  if(_numTypesValid  ==  NR_INT)  {  return  _parseIntValue();  }  [CE]  ';'  expected  [FE]          JsonParseException    [CONTEXT]    public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }    [BUGGY]  if(_numTypesValid  ==  NR_INT)  {  if(_numTypesValid  ==  NR_INT)  {  return  _parseIntValue();  }  [BUGGY]    convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_numTypesValid  ==  NR_INT)  {  if(_numTypesValid  ==  NR_INT)  {  return  _parseIntValue();  }	  if(_numTypesValid    ==    NR_UNKNOWN)    {    if(_numTypesValid    ==    NR_UNKNOWN)    {    return    _parseIntValue();    }    	non-compiled	[CE]  ';'  expected	10	None	replace
13	[BUG]  [BUGGY]  ||(_numTypesValid  ==  NR_INT)&&(_numTypesValid  ==  NR_INT))  {  return  _parseIntValue();  }  [CE]  illegal  start  of  expression  [FE]            JsonParseException    [CONTEXT]    public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }    [BUGGY]  ||(_numTypesValid  ==  NR_INT)&&(_numTypesValid  ==  NR_INT))  {  return  _parseIntValue();  }  [BUGGY]    convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	||(_numTypesValid  ==  NR_INT)&&(_numTypesValid  ==  NR_INT))  {  return  _parseIntValue();  }	  if(_numTypesValid    ==    NR_UNKNOWN)    {    if(_numTypesValid    ==    NR_UNKNOWN)    {    return    _parseIntValue();    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
14	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_INT)  {  [CE]  ';'  expected  [FE]        JsonParseException    [CONTEXT]    public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }    [BUGGY]  if(_numTypesValid  ==  NR_INT)  {  [BUGGY]    convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_numTypesValid  ==  NR_INT)  {	  if(_numTypesValid    ==    NR_UNKNOWN)    {    	non-compiled	[CE]  ';'  expected	7	None	replace
15	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_INT  ||  _numTypesValid  ==  NR_UNKNOWN)  {  [CE]  ';'  expected  [FE]          JsonParseException    [CONTEXT]    public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }    [BUGGY]  if(_numTypesValid  ==  NR_INT  ||  _numTypesValid  ==  NR_UNKNOWN)  {  [BUGGY]    convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_numTypesValid  ==  NR_INT  ||  _numTypesValid  ==  NR_UNKNOWN)  {	  if(_numTypesValid    ==    NR_UNKNOWN)    {    	non-compiled	[CE]  ';'  expected	7	None	replace
16	[BUG]  [BUGGY]  if(_numTypesValid  ==  0)  {  [CE]  ';'  expected  [FE]            JsonParseException    [CONTEXT]    public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }    [BUGGY]  if(_numTypesValid  ==  0)  {  [BUGGY]    convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_numTypesValid  ==  0)  {	  if(_numTypesValid    ==    NR_UNKNOWN)    {    	non-compiled	[CE]  ';'  expected	7	None	replace
17	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_INT)  {  if(_numTypesValid  ==  NR_BIGINT  ||  _numTypesValid  ==  NR_BIGINT)  {  return  _parseIntValue();  }  [CE]  ';'  expected  [FE]    JsonParseException    [CONTEXT]    public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }    [BUGGY]  if(_numTypesValid  ==  NR_INT)  {  if(_numTypesValid  ==  NR_BIGINT  ||  _numTypesValid  ==  NR_BIGINT)  {  return  _parseIntValue();  }  [BUGGY]    convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_numTypesValid  ==  NR_INT)  {  if(_numTypesValid  ==  NR_BIGINT  ||  _numTypesValid  ==  NR_BIGINT)  {  return  _parseIntValue();  }	      	non-compiled	[CE]  ';'  expected	6	None	replace
18	[BUG]  [BUGGY]  _parsingContext  =  ctxt.getParent();  [CE]  cannot  find  symbol  ctxt  [FE]      JsonParseException    [CONTEXT]    public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }    [BUGGY]  _parsingContext  =  ctxt.getParent();  [BUGGY]    convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	_parsingContext  =  ctxt.getParent();	      	non-compiled	[CE]  cannot  find  symbol  ctxt	6	None	replace
19	[BUG]  [BUGGY]  if(_numTypesValid  <  =  NR_INT)  {  [CE]  illegal  start  of  expression  [FE]            JsonParseException    [CONTEXT]    public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }    [BUGGY]  if(_numTypesValid  <  =  NR_INT)  {  [BUGGY]    convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_numTypesValid  <  =  NR_INT)  {	  if(_numTypesValid    ==    NR_UNKNOWN)    {    if(_numTypesValid    ==    NR_INT)    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
20	[BUG]  [BUGGY]  if(_numTypesValid!=  0)  {  [CE]  ';'  expected  [FE]              JsonParseException    [CONTEXT]    public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }    [BUGGY]  if(_numTypesValid!=  0)  {  [BUGGY]    convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_numTypesValid!=  0)  {	  if(_numTypesValid    ==    NR_UNKNOWN)    {    if(_numTypesValid    ==    NR_INT)    {    	non-compiled	[CE]  ';'  expected	9	None	replace
21	[BUG]  [BUGGY]  if(_numTypesValid  <  =  NR_INT)  {  if(_numTypesValid  ==  NR_INT)  {  convertNumberToInt();  }  [CE]  illegal  start  of  expression  [FE]              JsonParseException    [CONTEXT]    public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }    [BUGGY]  if(_numTypesValid  <  =  NR_INT)  {  if(_numTypesValid  ==  NR_INT)  {  convertNumberToInt();  }  [BUGGY]    convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_numTypesValid  <  =  NR_INT)  {  if(_numTypesValid  ==  NR_INT)  {  convertNumberToInt();  }	  if(_numTypesValid    ==    NR_UNKNOWN)    {    if(_numTypesValid    ==    NR_INT)    {    convertNumberToInt();    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
22	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_INT)  {  if(_numTypesValid  ==  NR_UNKNOWN)  {  convertNumberToInt();  //  let's  make  it  so,  if  possible  }  [CE]  ';'  expected  [FE]          JsonParseException    [CONTEXT]    public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }    [BUGGY]  if(_numTypesValid  ==  NR_INT)  {  if(_numTypesValid  ==  NR_UNKNOWN)  {  convertNumberToInt();  //  let's  make  it  so,  if  possible  }  [BUGGY]    convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_numTypesValid  ==  NR_INT)  {  if(_numTypesValid  ==  NR_UNKNOWN)  {  convertNumberToInt();  //  let's  make  it  so,  if  possible  }	  if(_numTypesValid    ==    0)    {    //    wasn't    an    int    natively?    convertNumberToInt();    //    let's    make    it    so,    if    possible    }    	non-compiled	[CE]  ';'  expected	11	None	replace
23	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  NR_UNKNOWN)  {  convertNumberToInt();  //  let's  make  it  so,  if  possible  }  [CE]  ';'  expected  [FE]            JsonParseException    [CONTEXT]    public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }    [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  NR_UNKNOWN)  {  convertNumberToInt();  //  let's  make  it  so,  if  possible  }  [BUGGY]    convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  NR_UNKNOWN)  {  convertNumberToInt();  //  let's  make  it  so,  if  possible  }	  if(_numTypesValid    ==    0)    {    //    wasn't    an    int    natively?    convertNumberToInt();    //    let's    make    it    so,    if    possible    }    	non-compiled	[CE]  ';'  expected	11	None	replace
24	[BUG]  [BUGGY]  if(_numTypesValid  ==  0)  {  if(_numTypesValid  ==  NR_INT)  {  return  _parseIntValue();  }  [CE]  ';'  expected  [FE]            JsonParseException    [CONTEXT]    public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }    [BUGGY]  if(_numTypesValid  ==  0)  {  if(_numTypesValid  ==  NR_INT)  {  return  _parseIntValue();  }  [BUGGY]    convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_numTypesValid  ==  0)  {  if(_numTypesValid  ==  NR_INT)  {  return  _parseIntValue();  }	  if(_numTypesValid    ==    NR_UNKNOWN)    {    if(_numTypesValid    ==    NR_INT)    {    return    _parseIntValue();    }    	non-compiled	[CE]  ';'  expected	3	None	replace
25	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN  ||  _numTypesValid  ==  NR_INT)  {  [CE]  ';'  expected  [FE]        JsonParseException    [CONTEXT]    public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }    [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN  ||  _numTypesValid  ==  NR_INT)  {  [BUGGY]    convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_numTypesValid  ==  NR_UNKNOWN  ||  _numTypesValid  ==  NR_INT)  {	  if(_numTypesValid    ==    NR_UNKNOWN)    {    	non-compiled	[CE]  ';'  expected	7	None	replace
26	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]            JsonParseException    [CONTEXT]    public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }    [BUGGY]  if(_numTypesValid  ==  NR_INT)  {  return  _parseIntValue();  }  [BUGGY]    convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	add	if(_numTypesValid  ==  NR_INT)  {  return  _parseIntValue();  }	  if(_numTypesValid    ==    NR_UNKNOWN)    {    if(_numTypesValid    ==    NR_INT)    {    return    _parseIntValue();    }    	compilable	  [FE]  JsonParseException  	3	8	replace
27	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_INT)  {  return  _parseIntValue();  }  [FE]  JsonParseException  [FE]            JsonParseException    [CONTEXT]    public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }    [BUGGY]  if(_numTypesValid  ==  NR_INT)  {  return  _parseIntValue();  }  [BUGGY]    convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_numTypesValid  ==  NR_INT)  {  return  _parseIntValue();  }	  if(_numTypesValid    ==    NR_UNKNOWN)    {    if(_numTypesValid    ==    NR_INT)    {    return    _parseIntValue();    }    	compilable	  [FE]  JsonParseException  	3	8	replace
28	[BUG]  [BUGGY]  if(_numTypesValid  ==  INT)  {  if(_numTypesValid  ==  INT)  {  return  _parseIntValue();  }  [CE]  ';'  expected  [FE]              JsonParseException    [CONTEXT]    public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }    [BUGGY]  if(_numTypesValid  ==  INT)  {  if(_numTypesValid  ==  INT)  {  return  _parseIntValue();  }  [BUGGY]    convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_numTypesValid  ==  INT)  {  if(_numTypesValid  ==  INT)  {  return  _parseIntValue();  }	  if(_numTypesValid    ==    NR_UNKNOWN)    {    if(_numTypesValid    ==    NR_INT)    {    return    _parseIntValue();    }    	non-compiled	[CE]  ';'  expected	3	None	replace
29	[BUG]  [BUGGY]  if(_numTypesValid  ==  -1)  {  if(_numTypesValid  ==  -1)  {  return  _parseIntValue();  }  [CE]  ';'  expected  [FE]                JsonParseException    [CONTEXT]    public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }    [BUGGY]  if(_numTypesValid  ==  -1)  {  if(_numTypesValid  ==  -1)  {  return  _parseIntValue();  }  [BUGGY]    convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_numTypesValid  ==  -1)  {  if(_numTypesValid  ==  -1)  {  return  _parseIntValue();  }	  if(_numTypesValid    ==    NR_UNKNOWN)    {    if(_numTypesValid    ==    NR_INT)    {    return    _parseIntValue();    }    	non-compiled	[CE]  ';'  expected	3	None	replace
30	[BUG]  [BUGGY]  if(_numTypesValid  ==  -1)  {  [CE]  ';'  expected  [FE]            JsonParseException    [CONTEXT]    public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }    [BUGGY]  if(_numTypesValid  ==  -1)  {  [BUGGY]    convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_numTypesValid  ==  -1)  {	  if(_numTypesValid    ==    NR_UNKNOWN)    {    if(_numTypesValid    ==    NR_INT)    {    	non-compiled	[CE]  ';'  expected	9	None	replace
31	[BUG]  [BUGGY]  if(_numTypesValid  ==  0)  {  if(_numTypesValid  ==  0)  {  convertNumberToInt();  return  _parseIntValue();  }  [CE]  ';'  expected  [FE]          JsonParseException    [CONTEXT]    public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }    [BUGGY]  if(_numTypesValid  ==  0)  {  if(_numTypesValid  ==  0)  {  convertNumberToInt();  return  _parseIntValue();  }  [BUGGY]    convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_numTypesValid  ==  0)  {  if(_numTypesValid  ==  0)  {  convertNumberToInt();  return  _parseIntValue();  }	  if(_numTypesValid    ==    NR_UNKNOWN)    {    if(_numTypesValid    ==    NR_INT)    {    convertNumberToInt();    //    let's    make    it    so,    if    possible    }    	non-compiled	[CE]  ';'  expected	2	None	replace
32	[BUG]  [BUGGY]  if(_numTypesValid  ==  INT)  {  if(_numTypesValid  ==  INT)  {  convertNumberToInt();  }  [CE]  ';'  expected  [FE]            JsonParseException    [CONTEXT]    public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }    [BUGGY]  if(_numTypesValid  ==  INT)  {  if(_numTypesValid  ==  INT)  {  convertNumberToInt();  }  [BUGGY]    convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_numTypesValid  ==  INT)  {  if(_numTypesValid  ==  INT)  {  convertNumberToInt();  }	  if(_numTypesValid    ==    NR_UNKNOWN)    {    if(_numTypesValid    ==    NR_INT)    {    convertNumberToInt();    //    let's    make    it    so,    if    possible    }    	non-compiled	[CE]  ';'  expected	2	None	replace
33	[BUG]  [BUGGY]  if(_numTypesValid  ==  0)  {  if(_numTypesValid  ==  0)  {  //  wasn't  an  int  natively?  convertNumberToInt();  //  let's  make  it  so,  if  possible  }  [CE]  ';'  expected  [FE]          JsonParseException    [CONTEXT]    public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }    [BUGGY]  if(_numTypesValid  ==  0)  {  if(_numTypesValid  ==  0)  {  //  wasn't  an  int  natively?  convertNumberToInt();  //  let's  make  it  so,  if  possible  }  [BUGGY]    convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_numTypesValid  ==  0)  {  if(_numTypesValid  ==  0)  {  //  wasn't  an  int  natively?  convertNumberToInt();  //  let's  make  it  so,  if  possible  }	  if(_numTypesValid    ==    NR_UNKNOWN)    {    if(_numTypesValid    ==    NR_INT)    {    //    wasn't    an    int    natively?    convertNumberToInt();    //    let's    make    it    so,    if    possible    }    	non-compiled	[CE]  ';'  expected	8	None	replace
34	[BUG]  [BUGGY]  if(_numTypesValid  ==  INT)  {  if(_numTypesValid  ==  INT)  {  //  wasn't  an  int  natively?  convertNumberToInt();  //  let's  make  it  so,  if  possible  }  [CE]  ';'  expected  [FE]            JsonParseException    [CONTEXT]    public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }    [BUGGY]  if(_numTypesValid  ==  INT)  {  if(_numTypesValid  ==  INT)  {  //  wasn't  an  int  natively?  convertNumberToInt();  //  let's  make  it  so,  if  possible  }  [BUGGY]    convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_numTypesValid  ==  INT)  {  if(_numTypesValid  ==  INT)  {  //  wasn't  an  int  natively?  convertNumberToInt();  //  let's  make  it  so,  if  possible  }	  if(_numTypesValid    ==    NR_UNKNOWN)    {    if(_numTypesValid    ==    NR_INT)    {    //    wasn't    an    int    natively?    convertNumberToInt();    //    let's    make    it    so,    if    possible    }    	non-compiled	[CE]  ';'  expected	8	None	replace
35	[BUG]  [BUGGY]      _parsingContext  =  _parsingContext.createChildObjectContext();  [CE]  method  createChildObjectContext  in  class  JsonReadContext  cannot  be  applied  to  given  types;  [FE]    JsonParseException    [CONTEXT]    public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }    [BUGGY]      _parsingContext  =  _parsingContext.createChildObjectContext();  [BUGGY]    convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	        _parsingContext  =  _parsingContext.createChildObjectContext();	  	non-compiled	[CE]  method  createChildObjectContext  in  class  JsonReadContext  cannot  be  applied  to  given  types;	5	None	add
36	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]    public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }    [BUGGY]      _parsingContext  =  _parsingContext.createChildObjectContext(-1,  -1);  [BUGGY]    convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	add	        _parsingContext  =  _parsingContext.createChildObjectContext(-1,  -1);	  	compilable	  [FE]  JsonParseException  	5	9	add
37	[BUG]  [BUGGY]      _parsingContext  =  _parsingContext.createChildObjectContext(-1,  -1);  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]    public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }    [BUGGY]      _parsingContext  =  _parsingContext.createChildObjectContext(-1,  -1);  [BUGGY]    convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	        _parsingContext  =  _parsingContext.createChildObjectContext(-1,  -1);	  	compilable	  [FE]  JsonParseException  	5	9	add
38	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]        JsonParseException    [CONTEXT]    public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }    [BUGGY]      _parsingContext  =  _parsingContext.getParent();  [BUGGY]    convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	add	        _parsingContext  =  _parsingContext.getParent();	  	compilable	  [FE]  JsonParseException  	5	9	add
39	[BUG]  [BUGGY]      _parsingContext  =  _parsingContext.getParent();  [FE]  JsonParseException  [FE]        JsonParseException    [CONTEXT]    public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }    [BUGGY]      _parsingContext  =  _parsingContext.getParent();  [BUGGY]    convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	        _parsingContext  =  _parsingContext.getParent();	  	compilable	  [FE]  JsonParseException  	5	9	add
40	[BUG]  [BUGGY]      JsonToken  t  =  _parsingContext.getCurrentToken();  [CE]  cannot  find  symbol  [FE]          JsonParseException    [CONTEXT]    public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }    [BUGGY]      JsonToken  t  =  _parsingContext.getCurrentToken();  [BUGGY]    convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	        JsonToken  t  =  _parsingContext.getCurrentToken();	  	non-compiled	[CE]  cannot  find  symbol	5	None	add
41	[BUG]  [BUGGY]      _parsingContext  =  _parsingContext.createChildObjectContext(-1);  [CE]  method  createChildObjectContext  in  class  JsonReadContext  cannot  be  applied  to  given  types;  [FE]            JsonParseException    [CONTEXT]    public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }    [BUGGY]      _parsingContext  =  _parsingContext.createChildObjectContext(-1);  [BUGGY]    convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	        _parsingContext  =  _parsingContext.createChildObjectContext(-1);	  	non-compiled	[CE]  method  createChildObjectContext  in  class  JsonReadContext  cannot  be  applied  to  given  types;	5	None	add
42	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN)  {  //  wasn't  an  int  natively?  convertNumberToInt();  //  let's  make  it  so,  if  possible  }  [CE]  ';'  expected  [FE]          JsonParseException    [CONTEXT]    public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }    [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN)  {  //  wasn't  an  int  natively?  convertNumberToInt();  //  let's  make  it  so,  if  possible  }  [BUGGY]    convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_numTypesValid  ==  NR_UNKNOWN)  {  //  wasn't  an  int  natively?  convertNumberToInt();  //  let's  make  it  so,  if  possible  }	  if(_numTypesValid    ==    0)    {    //    wasn't    an    int    natively?    convertNumberToInt();    //    let's    make    it    so,    if    possible    }    	non-compiled	[CE]  ';'  expected	11	None	replace
43	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_INT)  {  //  wasn't  an  int  natively?  convertNumberToInt();  //  let's  make  it  so,  if  possible  }  [CE]  ';'  expected  [FE]            JsonParseException    [CONTEXT]    public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }    [BUGGY]  if(_numTypesValid  ==  NR_INT)  {  //  wasn't  an  int  natively?  convertNumberToInt();  //  let's  make  it  so,  if  possible  }  [BUGGY]    convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_numTypesValid  ==  NR_INT)  {  //  wasn't  an  int  natively?  convertNumberToInt();  //  let's  make  it  so,  if  possible  }	  if(_numTypesValid    ==    0)    {    //    wasn't    an    int    natively?    convertNumberToInt();    //    let's    make    it    so,    if    possible    }    	non-compiled	[CE]  ';'  expected	11	None	replace
44	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN)  {  //  hadn't  an  int  natively?  convertNumberToInt();  //  let's  make  it  so,  if  possible  }  [CE]  ';'  expected  [FE]              JsonParseException    [CONTEXT]    public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }    [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN)  {  //  hadn't  an  int  natively?  convertNumberToInt();  //  let's  make  it  so,  if  possible  }  [BUGGY]    convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_numTypesValid  ==  NR_UNKNOWN)  {  //  hadn't  an  int  natively?  convertNumberToInt();  //  let's  make  it  so,  if  possible  }	  if(_numTypesValid    ==    0)    {    //    wasn't    an    int    natively?    convertNumberToInt();    //    let's    make    it    so,    if    possible    }    	non-compiled	[CE]  ';'  expected	11	None	replace
45	[BUG]  [BUGGY]  if(_numTypesValid  ==  INT)  {  if(_numTypesValid  ==  INT)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]        JsonParseException    [CONTEXT]    public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }    [BUGGY]  if(_numTypesValid  ==  INT)  {  if(_numTypesValid  ==  INT)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_numTypesValid  ==  INT)  {  if(_numTypesValid  ==  INT)  {  throw  new  IllegalArgumentException( " ");  }	  if(_numTypesValid    ==    NR_UNKNOWN)    {    if(_numTypesValid    ==    NR_INT)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	1	None	replace
46	[BUG]  [BUGGY]  if(_numTypesValid  ==  -1)  {  if(_numTypesValid  ==  -1)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]          JsonParseException    [CONTEXT]    public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }    [BUGGY]  if(_numTypesValid  ==  -1)  {  if(_numTypesValid  ==  -1)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_numTypesValid  ==  -1)  {  if(_numTypesValid  ==  -1)  {  throw  new  IllegalArgumentException( " ");  }	  if(_numTypesValid    ==    NR_UNKNOWN)    {    if(_numTypesValid    ==    NR_INT)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	1	None	replace
47	[BUG]  [BUGGY]  if(_numTypesValid!=  0)  {  if(_numTypesValid  ==  0)  {  convertNumberToInt();  }  [CE]  ';'  expected  [FE]              JsonParseException    [CONTEXT]    public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }    [BUGGY]  if(_numTypesValid!=  0)  {  if(_numTypesValid  ==  0)  {  convertNumberToInt();  }  [BUGGY]    convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_numTypesValid!=  0)  {  if(_numTypesValid  ==  0)  {  convertNumberToInt();  }	  if(_numTypesValid    ==    NR_UNKNOWN)    {    if(_numTypesValid    ==    NR_INT)    {    convertNumberToInt();    }    	non-compiled	[CE]  ';'  expected	4	None	replace
48	[BUG]  [BUGGY]  if(_numTypesValid  <  0)  {  if(_numTypesValid  ==  0)  {  convertNumberToInt();  }  [CE]  ';'  expected  [FE]                JsonParseException    [CONTEXT]    public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }    [BUGGY]  if(_numTypesValid  <  0)  {  if(_numTypesValid  ==  0)  {  convertNumberToInt();  }  [BUGGY]    convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_numTypesValid  <  0)  {  if(_numTypesValid  ==  0)  {  convertNumberToInt();  }	  if(_numTypesValid    ==    NR_UNKNOWN)    {    if(_numTypesValid    ==    NR_INT)    {    convertNumberToInt();    }    	non-compiled	[CE]  ';'  expected	4	None	replace
49	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]                  JsonParseException    [CONTEXT]    public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }    [BUGGY]  if(_numTypesValid  ==  NR_INT)  {  convertNumberToInt();  }  [BUGGY]    convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	add	if(_numTypesValid  ==  NR_INT)  {  convertNumberToInt();  }	  if(_numTypesValid    ==    NR_UNKNOWN)    {    if(_numTypesValid    ==    NR_INT)    {    convertNumberToInt();    }    	compilable	  [FE]  JsonParseException  	4	8	replace
50	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_INT)  {  convertNumberToInt();  }  [FE]  JsonParseException  [FE]                  JsonParseException    [CONTEXT]    public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }    [BUGGY]  if(_numTypesValid  ==  NR_INT)  {  convertNumberToInt();  }  [BUGGY]    convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_numTypesValid  ==  NR_INT)  {  convertNumberToInt();  }	  if(_numTypesValid    ==    NR_UNKNOWN)    {    if(_numTypesValid    ==    NR_INT)    {    convertNumberToInt();    }    	compilable	  [FE]  JsonParseException  	4	8	replace
51	[BUG]  [BUGGY]      int[]  values  =  _parsingContext.getValues();  [CE]  cannot  find  symbol  [FE]    JsonParseException    [CONTEXT]    public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }    [BUGGY]      int[]  values  =  _parsingContext.getValues();  [BUGGY]    convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	        int[]  values  =  _parsingContext.getValues();	  	non-compiled	[CE]  cannot  find  symbol	5	None	add
52	[BUG]  [BUGGY]      if(_numTypesValid  ==  NR_INT)  {  if(_numTypesValid  ==  NR_BIGINT)  {  return  _parseIntValue();  }  [CE]  ';'  expected  [FE]      JsonParseException    [CONTEXT]    public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }    [BUGGY]      if(_numTypesValid  ==  NR_INT)  {  if(_numTypesValid  ==  NR_BIGINT)  {  return  _parseIntValue();  }  [BUGGY]    convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	        if(_numTypesValid  ==  NR_INT)  {  if(_numTypesValid  ==  NR_BIGINT)  {  return  _parseIntValue();  }	  	non-compiled	[CE]  ';'  expected	5	None	add
53	[BUG]  [BUGGY]  if((  _numTypesValid  &  NR_INT)  ==  0)  {  if(_numTypesValid  ==  NR_INT)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]        JsonParseException    [CONTEXT]    public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }    [BUGGY]  if((  _numTypesValid  &  NR_INT)  ==  0)  {  if(_numTypesValid  ==  NR_INT)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if((  _numTypesValid  &  NR_INT)  ==  0)  {  if(_numTypesValid  ==  NR_INT)  {  throw  new  IllegalArgumentException( " ");  }	  if(_numTypesValid    ==    NR_UNKNOWN)    {    if(_numTypesValid    ==    NR_INT)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	1	None	replace
54	[BUG]  [BUGGY]  ||(_numTypesValid  >>  NR_INT)&&(_numTypesValid  ==  NR_INT))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]          JsonParseException    [CONTEXT]    public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }    [BUGGY]  ||(_numTypesValid  >>  NR_INT)&&(_numTypesValid  ==  NR_INT))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	||(_numTypesValid  >>  NR_INT)&&(_numTypesValid  ==  NR_INT))  {  throw  new  IllegalArgumentException( " ");  }	  if(_numTypesValid    ==    NR_UNKNOWN)    {    if(_numTypesValid    ==    NR_INT)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
55	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]            JsonParseException    [CONTEXT]    public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }    [BUGGY]  if(_numTypesValid  ==  NR_INT)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	add	if(_numTypesValid  ==  NR_INT)  {  throw  new  IllegalArgumentException( " ");  }	  if(_numTypesValid    ==    NR_UNKNOWN)    {    if(_numTypesValid    ==    NR_INT)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  JsonParseException  	1	8	replace
56	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_INT)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  JsonParseException  [FE]            JsonParseException    [CONTEXT]    public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }    [BUGGY]  if(_numTypesValid  ==  NR_INT)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_numTypesValid  ==  NR_INT)  {  throw  new  IllegalArgumentException( " ");  }	  if(_numTypesValid    ==    NR_UNKNOWN)    {    if(_numTypesValid    ==    NR_INT)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  JsonParseException  	1	8	replace
57	[BUG]  [BUGGY]  if((  _numTypesValid  &  NR_INT)  ==  0)  {  if(_numTypesValid  ==  NR_INT)  {  return  _parseIntValue();  }  [CE]  ';'  expected  [FE]        JsonParseException    [CONTEXT]    public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }    [BUGGY]  if((  _numTypesValid  &  NR_INT)  ==  0)  {  if(_numTypesValid  ==  NR_INT)  {  return  _parseIntValue();  }  [BUGGY]    convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if((  _numTypesValid  &  NR_INT)  ==  0)  {  if(_numTypesValid  ==  NR_INT)  {  return  _parseIntValue();  }	  if(_numTypesValid    ==    NR_UNKNOWN)    {    if(_numTypesValid    ==    NR_UNKNOWN)    {    return    _parseIntValue();    }    	non-compiled	[CE]  ';'  expected	10	None	replace
58	[BUG]  [BUGGY]  if((  _numTypesValid  &  NR_INT)  ==  0)  {  [CE]  ';'  expected  [FE]            JsonParseException    [CONTEXT]    public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }    [BUGGY]  if((  _numTypesValid  &  NR_INT)  ==  0)  {  [BUGGY]    convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if((  _numTypesValid  &  NR_INT)  ==  0)  {	  if(_numTypesValid    ==    NR_UNKNOWN)    {    if(_numTypesValid    ==    NR_INT)    {    	non-compiled	[CE]  ';'  expected	9	None	replace
59	[BUG]  [BUGGY]  if((  _numTypesValid  &  NR_INT)!=  0)  {  [CE]  ';'  expected  [FE]              JsonParseException    [CONTEXT]    public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }    [BUGGY]  if((  _numTypesValid  &  NR_INT)!=  0)  {  [BUGGY]    convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if((  _numTypesValid  &  NR_INT)!=  0)  {	  if(_numTypesValid    ==    NR_UNKNOWN)    {    if(_numTypesValid    ==    NR_INT)    {    	non-compiled	[CE]  ';'  expected	9	None	replace
60	[BUG]  [BUGGY]  if((  _numTypesValid  &  INT)  ==  0)  {  [CE]  ';'  expected  [FE]                JsonParseException    [CONTEXT]    public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }    [BUGGY]  if((  _numTypesValid  &  INT)  ==  0)  {  [BUGGY]    convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if((  _numTypesValid  &  INT)  ==  0)  {	  if(_numTypesValid    ==    NR_UNKNOWN)    {    if(_numTypesValid    ==    NR_INT)    {    	non-compiled	[CE]  ';'  expected	9	None	replace
61	[BUG]  [BUGGY]  if(_numTypesValid  ==  INT)  {  return  _parseIntValue();  }  [CE]  cannot  find  symbol  INT  [FE]            JsonParseException    [CONTEXT]    public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }    [BUGGY]  if(_numTypesValid  ==  INT)  {  return  _parseIntValue();  }  [BUGGY]    convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_numTypesValid  ==  INT)  {  return  _parseIntValue();  }	  if(_numTypesValid    ==    NR_UNKNOWN)    {    if(_numTypesValid    ==    NR_INT)    {    return    _parseIntValue();    }    	non-compiled	[CE]  cannot  find  symbol  INT	3	None	replace
62	[BUG]  [BUGGY]  if((  _numTypesValid  &  NR_INT)  ==  0)  {  if(_numTypesValid  ==  NR_INT)  {  convertNumberToInt();  }  [CE]  ';'  expected  [FE]              JsonParseException    [CONTEXT]    public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }    [BUGGY]  if((  _numTypesValid  &  NR_INT)  ==  0)  {  if(_numTypesValid  ==  NR_INT)  {  convertNumberToInt();  }  [BUGGY]    convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if((  _numTypesValid  &  NR_INT)  ==  0)  {  if(_numTypesValid  ==  NR_INT)  {  convertNumberToInt();  }	  if(_numTypesValid    ==    NR_UNKNOWN)    {    if(_numTypesValid    ==    NR_INT)    {    convertNumberToInt();    }    	non-compiled	[CE]  ';'  expected	4	None	replace
63	[BUG]  [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  if(_numTypesValid  ==  NR_INT)  {  convertNumberToInt();  }  [CE]  ';'  expected  [FE]                JsonParseException    [CONTEXT]    public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }    [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  if(_numTypesValid  ==  NR_INT)  {  convertNumberToInt();  }  [BUGGY]    convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_inputPtr  >=  _inputEnd)  {  if(_numTypesValid  ==  NR_INT)  {  convertNumberToInt();  }	  if(_numTypesValid    ==    NR_UNKNOWN)    {    if(_numTypesValid    ==    NR_INT)    {    convertNumberToInt();    }    	non-compiled	[CE]  ';'  expected	4	None	replace
64	[BUG]  [BUGGY]  if((  _numTypesValid  &  NR_INT)  ==  0)  {  if(_numTypesValid  ==  NR_INT)  {  //  wasn't  an  int  natively?  convertNumberToInt();  //  let's  make  it  so,  if  possible  }  [CE]  ';'  expected  [FE]          JsonParseException    [CONTEXT]    public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }    [BUGGY]  if((  _numTypesValid  &  NR_INT)  ==  0)  {  if(_numTypesValid  ==  NR_INT)  {  //  wasn't  an  int  natively?  convertNumberToInt();  //  let's  make  it  so,  if  possible  }  [BUGGY]    convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if((  _numTypesValid  &  NR_INT)  ==  0)  {  if(_numTypesValid  ==  NR_INT)  {  //  wasn't  an  int  natively?  convertNumberToInt();  //  let's  make  it  so,  if  possible  }	  if(_numTypesValid    ==    NR_UNKNOWN)    {    if(_numTypesValid    ==    NR_INT)    {    //    wasn't    an    int    natively?    convertNumberToInt();    //    let's    make    it    so,    if    possible    }    	non-compiled	[CE]  ';'  expected	8	None	replace
65	[BUG]  [BUGGY]  if((  _numTypesValid  &  NR_INT)  ==  0)  {  if(_numTypesValid  ==  NR_INT)  {  //  wasn't  an  int  natively?  convertNumberToInt();  //  let's  make  it  so,  if  possible  [CE]  ';'  expected  [FE]            JsonParseException    [CONTEXT]    public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }    [BUGGY]  if((  _numTypesValid  &  NR_INT)  ==  0)  {  if(_numTypesValid  ==  NR_INT)  {  //  wasn't  an  int  natively?  convertNumberToInt();  //  let's  make  it  so,  if  possible  [BUGGY]    convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if((  _numTypesValid  &  NR_INT)  ==  0)  {  if(_numTypesValid  ==  NR_INT)  {  //  wasn't  an  int  natively?  convertNumberToInt();  //  let's  make  it  so,  if  possible	  if(_numTypesValid    ==    NR_UNKNOWN)    {    if(_numTypesValid    ==    NR_INT)    {    //    wasn't    an    int    natively?    convertNumberToInt();    //    let's    make    it    so,    if    possible    }    	non-compiled	[CE]  ';'  expected	8	None	replace
