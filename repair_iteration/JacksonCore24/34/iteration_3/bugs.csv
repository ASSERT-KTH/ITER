bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(ctxt);  [CE]  cannot  find  symbol  ctxt  [FE]        JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(ctxt);  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	_parsingContext  =  _parsingContext.createChildObjectContext(ctxt);	          _parsingContext    =    _parsingContext.createChildObjectContext();    	non-compiled	[CE]  cannot  find  symbol  ctxt	35	None	replace
2	[BUG]  [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(null);  [CE]  method  createChildObjectContext  in  class  JsonReadContext  cannot  be  applied  to  given  types;  [FE]          JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(null);  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	_parsingContext  =  _parsingContext.createChildObjectContext(null);	          _parsingContext    =    _parsingContext.createChildObjectContext();    	non-compiled	[CE]  method  createChildObjectContext  in  class  JsonReadContext  cannot  be  applied  to  given  types;	35	None	replace
3	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_NUMBER_INT)  {  [CE]  ';'  expected  [FE]                JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if(_numTypesValid  ==  NR_NUMBER_INT)  {  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_numTypesValid  ==  NR_NUMBER_INT)  {	  if(_numTypesValid    ==    0)    {    	non-compiled	[CE]  ';'  expected	16	None	replace
4	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  NR_UNKNOWN)  {  convertNumberToInt();  }  [CE]  ';'  expected  [FE]                  JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  NR_UNKNOWN)  {  convertNumberToInt();  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  NR_UNKNOWN)  {  convertNumberToInt();  }	  if(_numTypesValid!=    0)    {    if(_numTypesValid    ==    0)    {    convertNumberToInt();    }    	non-compiled	[CE]  ';'  expected	47	None	replace
5	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_INT)  {  if(_numTypesValid  ==  NR_UNKNOWN)  {  convertNumberToInt();  }  [CE]  ';'  expected  [FE]                    JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if(_numTypesValid  ==  NR_INT)  {  if(_numTypesValid  ==  NR_UNKNOWN)  {  convertNumberToInt();  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_numTypesValid  ==  NR_INT)  {  if(_numTypesValid  ==  NR_UNKNOWN)  {  convertNumberToInt();  }	  if(_numTypesValid!=    0)    {    if(_numTypesValid    ==    0)    {    convertNumberToInt();    }    	non-compiled	[CE]  ';'  expected	47	None	replace
6	[BUG]  [BUGGY]  JsonToken  t  =  context.getCurrentToken();  [CE]  cannot  find  symbol  context  [FE]              JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  JsonToken  t  =  context.getCurrentToken();  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	JsonToken  t  =  context.getCurrentToken();	          JsonToken    t    =    _parsingContext.getCurrentToken();    	non-compiled	[CE]  cannot  find  symbol  context	40	None	replace
7	[BUG]  [BUGGY]  JsonToken  t  =  _parsingContext.getJsonTokenType(NR_INT);  [CE]  cannot  find  symbol  [FE]                JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  JsonToken  t  =  _parsingContext.getJsonTokenType(NR_INT);  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	JsonToken  t  =  _parsingContext.getJsonTokenType(NR_INT);	          JsonToken    t    =    _parsingContext.getCurrentToken();    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
8	[BUG]  [BUGGY]  JsonToken  t  =  ctxt.getCurrentToken();  [CE]  cannot  find  symbol  ctxt  [FE]                  JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  JsonToken  t  =  ctxt.getCurrentToken();  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	JsonToken  t  =  ctxt.getCurrentToken();	          JsonToken    t    =    _parsingContext.getCurrentToken();    	non-compiled	[CE]  cannot  find  symbol  ctxt	40	None	replace
9	[BUG]  [BUGGY]  ||(_numTypesValid  ==  NR_INT)&&(_numTypesValid  ==  NR_UNKNOWN))  {  convertNumberToInt();  [CE]  illegal  start  of  expression  [FE]                  JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  ||(_numTypesValid  ==  NR_INT)&&(_numTypesValid  ==  NR_UNKNOWN))  {  convertNumberToInt();  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	||(_numTypesValid  ==  NR_INT)&&(_numTypesValid  ==  NR_UNKNOWN))  {  convertNumberToInt();	  if(_numTypesValid    <    =    NR_INT)    {    if(_numTypesValid    ==    NR_INT)    {    convertNumberToInt();    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
10	[BUG]  [BUGGY]  if(_numTypesValid  <  NR_INT)  {  if(_numTypesValid  ==  NR_INT)  {  convertNumberToInt();  }  [CE]  ';'  expected  [FE]                    JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if(_numTypesValid  <  NR_INT)  {  if(_numTypesValid  ==  NR_INT)  {  convertNumberToInt();  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_numTypesValid  <  NR_INT)  {  if(_numTypesValid  ==  NR_INT)  {  convertNumberToInt();  }	  if(_numTypesValid    <    =    NR_INT)    {    if(_numTypesValid    ==    NR_INT)    {    convertNumberToInt();    }    	non-compiled	[CE]  ';'  expected	21	None	replace
11	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]          _parsingContext  =  _parsingContext.createChildObjectContext(-1,  -1);  _parsingContext  =  _parsingContext.createChildObjectContext(-1,  -1);  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	add	                _parsingContext    =    _parsingContext.createChildObjectContext(-1,    -1);    _parsingContext  =  _parsingContext.createChildObjectContext(-1,  -1);	  	compilable	  [FE]  JsonParseException  	36	9	add
12	[BUG]  [BUGGY]          _parsingContext  =  _parsingContext.createChildObjectContext(-1,  -1);  _parsingContext  =  _parsingContext.createChildObjectContext(-1,  -1);  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]          _parsingContext  =  _parsingContext.createChildObjectContext(-1,  -1);  _parsingContext  =  _parsingContext.createChildObjectContext(-1,  -1);  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	                _parsingContext    =    _parsingContext.createChildObjectContext(-1,    -1);    _parsingContext  =  _parsingContext.createChildObjectContext(-1,  -1);	  	compilable	  [FE]  JsonParseException  	36	9	add
13	[BUG]  [BUGGY]          _parsingContext  =  _parsingContext.createChildObjectContext(-1,  -1);  JsonParseException  _parsingContext  =  _parsingContext.createChildObjectContext(-1,  -1);  [CE]  cannot  find  symbol  [FE]      JsonParseException    [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]          _parsingContext  =  _parsingContext.createChildObjectContext(-1,  -1);  JsonParseException  _parsingContext  =  _parsingContext.createChildObjectContext(-1,  -1);  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	                _parsingContext    =    _parsingContext.createChildObjectContext(-1,    -1);    JsonParseException  _parsingContext  =  _parsingContext.createChildObjectContext(-1,  -1);	  	non-compiled	[CE]  cannot  find  symbol	36	None	add
14	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]        JsonParseException    [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]          _parsingContext  =  _parsingContext.createChildObjectContext(-1,  -1);  _parsingContext  =  _parsingContext.createChildObjectContext(-2,  -1);  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	add	                _parsingContext    =    _parsingContext.createChildObjectContext(-1,    -1);    _parsingContext  =  _parsingContext.createChildObjectContext(-2,  -1);	  	compilable	  [FE]  JsonParseException  	36	9	add
15	[BUG]  [BUGGY]          _parsingContext  =  _parsingContext.createChildObjectContext(-1,  -1);  _parsingContext  =  _parsingContext.createChildObjectContext(-2,  -1);  [FE]  JsonParseException  [FE]        JsonParseException    [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]          _parsingContext  =  _parsingContext.createChildObjectContext(-1,  -1);  _parsingContext  =  _parsingContext.createChildObjectContext(-2,  -1);  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	                _parsingContext    =    _parsingContext.createChildObjectContext(-1,    -1);    _parsingContext  =  _parsingContext.createChildObjectContext(-2,  -1);	  	compilable	  [FE]  JsonParseException  	36	9	add
16	[BUG]  [BUGGY]  if(_numTypesValid  ==  0)  {  if(_numTypesValid  ==  NR_BIGINT)  {  return  _parseIntValue();  }  [CE]  ';'  expected  [FE]          JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if(_numTypesValid  ==  0)  {  if(_numTypesValid  ==  NR_BIGINT)  {  return  _parseIntValue();  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_numTypesValid  ==  0)  {  if(_numTypesValid  ==  NR_BIGINT)  {  return  _parseIntValue();  }	          if(_numTypesValid    ==    NR_INT)    {    if(_numTypesValid    ==    NR_BIGINT)    {    return    _parseIntValue();    }    	non-compiled	[CE]  ';'  expected	52	None	replace
17	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  NR_BIGINT)  {  return  _parseIntValue();  }  [CE]  ';'  expected  [FE]            JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  NR_BIGINT)  {  return  _parseIntValue();  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  NR_BIGINT)  {  return  _parseIntValue();  }	          if(_numTypesValid    ==    NR_INT)    {    if(_numTypesValid    ==    NR_BIGINT)    {    return    _parseIntValue();    }    	non-compiled	[CE]  ';'  expected	52	None	replace
18	[BUG]  [BUGGY]  ||(_numTypesValid  ==  NR_UNKNOWN)&&(_numTypesValid  ==  NR_BIGINT))  {  return  _parseIntValue();  }  [CE]  illegal  start  of  expression  [FE]              JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  ||(_numTypesValid  ==  NR_UNKNOWN)&&(_numTypesValid  ==  NR_BIGINT))  {  return  _parseIntValue();  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	||(_numTypesValid  ==  NR_UNKNOWN)&&(_numTypesValid  ==  NR_BIGINT))  {  return  _parseIntValue();  }	          if(_numTypesValid    ==    NR_INT)    {    if(_numTypesValid    ==    NR_BIGINT)    {    return    _parseIntValue();    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
19	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  NR_UNKNOWN)  {  //  wasn't  an  int  natively?  convertNumberToInt();  //  let's  make  it  so,  if  possible  }  [CE]  ';'  expected  [FE]              JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  NR_UNKNOWN)  {  //  wasn't  an  int  natively?  convertNumberToInt();  //  let's  make  it  so,  if  possible  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  NR_UNKNOWN)  {  //  wasn't  an  int  natively?  convertNumberToInt();  //  let's  make  it  so,  if  possible  }	  if(_numTypesValid    ==    0)    {    if(_numTypesValid    ==    0)    {    //    wasn't    an    int    natively?    convertNumberToInt();    //    let's    make    it    so,    if    possible    }    	non-compiled	[CE]  ';'  expected	33	None	replace
20	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  NR_UNKNOWN)  {  //  wasn't  an  int  natively?  convertNumberToInt();  //  let's  make  it  so,  if  [CE]  ';'  expected  [FE]                JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  NR_UNKNOWN)  {  //  wasn't  an  int  natively?  convertNumberToInt();  //  let's  make  it  so,  if  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  NR_UNKNOWN)  {  //  wasn't  an  int  natively?  convertNumberToInt();  //  let's  make  it  so,  if	  if(_numTypesValid    ==    0)    {    if(_numTypesValid    ==    0)    {    //    wasn't    an    int    natively?    convertNumberToInt();    //    let's    make    it    so,    if    possible    }    	non-compiled	[CE]  ';'  expected	33	None	replace
21	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  NR_INT)  {  //  wasn't  an  int  natively?  convertNumberToInt();  //  let's  make  it  so,  if  [CE]  ';'  expected  [FE]                  JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  NR_INT)  {  //  wasn't  an  int  natively?  convertNumberToInt();  //  let's  make  it  so,  if  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  NR_INT)  {  //  wasn't  an  int  natively?  convertNumberToInt();  //  let's  make  it  so,  if	  if(_numTypesValid    ==    0)    {    if(_numTypesValid    ==    0)    {    //    wasn't    an    int    natively?    convertNumberToInt();    //    let's    make    it    so,    if    possible    }    	non-compiled	[CE]  ';'  expected	33	None	replace
22	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]                JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN)  {  return  _parseIntValue();  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	add	if(_numTypesValid  ==  NR_UNKNOWN)  {  return  _parseIntValue();  }	  if(_numTypesValid    ==    INT)    {    return    _parseIntValue();    }    	compilable	  [FE]  JsonParseException  	61	8	replace
23	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN)  {  return  _parseIntValue();  }  [FE]  JsonParseException  [FE]                JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN)  {  return  _parseIntValue();  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_numTypesValid  ==  NR_UNKNOWN)  {  return  _parseIntValue();  }	  if(_numTypesValid    ==    INT)    {    return    _parseIntValue();    }    	compilable	  [FE]  JsonParseException  	61	8	replace
24	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_NUMBER)  {  return  _parseIntValue();  }  [CE]  cannot  find  symbol  NR_NUMBER  [FE]                  JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if(_numTypesValid  ==  NR_NUMBER)  {  return  _parseIntValue();  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_numTypesValid  ==  NR_NUMBER)  {  return  _parseIntValue();  }	  if(_numTypesValid    ==    INT)    {    return    _parseIntValue();    }    	non-compiled	[CE]  cannot  find  symbol  NR_NUMBER	61	None	replace
25	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]                    JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if(_numTypesValid  ==  NR_LONG)  {  return  _parseIntValue();  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	add	if(_numTypesValid  ==  NR_LONG)  {  return  _parseIntValue();  }	  if(_numTypesValid    ==    INT)    {    return    _parseIntValue();    }    	compilable	  [FE]  JsonParseException  	61	8	replace
26	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_LONG)  {  return  _parseIntValue();  }  [FE]  JsonParseException  [FE]                    JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if(_numTypesValid  ==  NR_LONG)  {  return  _parseIntValue();  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_numTypesValid  ==  NR_LONG)  {  return  _parseIntValue();  }	  if(_numTypesValid    ==    INT)    {    return    _parseIntValue();    }    	compilable	  [FE]  JsonParseException  	61	8	replace
27	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  NR_INT)  {  convertNumberToInt();  return  _parseIntValue();  }  [CE]  ';'  expected  [FE]              JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  NR_INT)  {  convertNumberToInt();  return  _parseIntValue();  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  NR_INT)  {  convertNumberToInt();  return  _parseIntValue();  }	  if(_numTypesValid    ==    0)    {    if(_numTypesValid    ==    0)    {    convertNumberToInt();    return    _parseIntValue();    }    	non-compiled	[CE]  ';'  expected	31	None	replace
28	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_INT)  {  if(_numTypesValid  ==  NR_UNKNOWN)  {  convertNumberToInt();  return  _parseIntValue();  }  [CE]  ';'  expected  [FE]                JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if(_numTypesValid  ==  NR_INT)  {  if(_numTypesValid  ==  NR_UNKNOWN)  {  convertNumberToInt();  return  _parseIntValue();  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_numTypesValid  ==  NR_INT)  {  if(_numTypesValid  ==  NR_UNKNOWN)  {  convertNumberToInt();  return  _parseIntValue();  }	  if(_numTypesValid    ==    0)    {    if(_numTypesValid    ==    0)    {    convertNumberToInt();    return    _parseIntValue();    }    	non-compiled	[CE]  ';'  expected	31	None	replace
29	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  NR_UNKNOWN)  {  convertNumberToInt();  return  _parseIntValue();  }  [CE]  ';'  expected  [FE]                  JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  NR_UNKNOWN)  {  convertNumberToInt();  return  _parseIntValue();  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  NR_UNKNOWN)  {  convertNumberToInt();  return  _parseIntValue();  }	  if(_numTypesValid    ==    0)    {    if(_numTypesValid    ==    0)    {    convertNumberToInt();    return    _parseIntValue();    }    	non-compiled	[CE]  ';'  expected	31	None	replace
30	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_INT)  {  if(_numTypesValid  ==  NR_INT)  {  convertNumberToInt();  return  _parseIntValue();  }  [CE]  ';'  expected  [FE]                    JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if(_numTypesValid  ==  NR_INT)  {  if(_numTypesValid  ==  NR_INT)  {  convertNumberToInt();  return  _parseIntValue();  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_numTypesValid  ==  NR_INT)  {  if(_numTypesValid  ==  NR_INT)  {  convertNumberToInt();  return  _parseIntValue();  }	  if(_numTypesValid    ==    0)    {    if(_numTypesValid    ==    0)    {    convertNumberToInt();    return    _parseIntValue();    }    	non-compiled	[CE]  ';'  expected	31	None	replace
31	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN)  {  convertNumberToInt();  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	add	if(_numTypesValid  ==  NR_UNKNOWN)  {  convertNumberToInt();  }	  if(_numTypesValid    ==    NR_INT)    {    convertNumberToInt();    }    	compilable	  [FE]  JsonParseException  	50	8	replace
32	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN)  {  convertNumberToInt();  }  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN)  {  convertNumberToInt();  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_numTypesValid  ==  NR_UNKNOWN)  {  convertNumberToInt();  }	  if(_numTypesValid    ==    NR_INT)    {    convertNumberToInt();    }    	compilable	  [FE]  JsonParseException  	50	8	replace
33	[BUG]  [BUGGY]  ||(_numTypesValid  ==  NR_INT)&&(_numTypesValid  ==  NR_UNKNOWN))  {  convertNumberToInt();  }  [CE]  illegal  start  of  expression  [FE]      JsonParseException    [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  ||(_numTypesValid  ==  NR_INT)&&(_numTypesValid  ==  NR_UNKNOWN))  {  convertNumberToInt();  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	||(_numTypesValid  ==  NR_INT)&&(_numTypesValid  ==  NR_UNKNOWN))  {  convertNumberToInt();  }	  if(_numTypesValid    ==    NR_INT)    {    convertNumberToInt();    }    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
34	[BUG]  [BUGGY]  ||(_numTypesValid  ==  NR_INT)&&(_numTypesValid!=  NR_UNKNOWN))  {  convertNumberToInt();  }  [CE]  illegal  start  of  expression  [FE]        JsonParseException    [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  ||(_numTypesValid  ==  NR_INT)&&(_numTypesValid!=  NR_UNKNOWN))  {  convertNumberToInt();  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	||(_numTypesValid  ==  NR_INT)&&(_numTypesValid!=  NR_UNKNOWN))  {  convertNumberToInt();  }	  if(_numTypesValid    ==    NR_INT)    {    convertNumberToInt();    }    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
35	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  NR_UNKNOWN)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]              JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  NR_UNKNOWN)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  NR_UNKNOWN)  {  throw  new  IllegalArgumentException( " ");  }	  if(_numTypesValid    ==    -1)    {    if(_numTypesValid    ==    -1)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	46	None	replace
36	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  INT)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]            JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  INT)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  INT)  {  throw  new  IllegalArgumentException( " ");  }	  if(_numTypesValid    ==    INT)    {    if(_numTypesValid    ==    INT)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	45	None	replace
37	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_INT)  {  if(_numTypesValid  ==  NR_UNKNOWN)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]              JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if(_numTypesValid  ==  NR_INT)  {  if(_numTypesValid  ==  NR_UNKNOWN)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_numTypesValid  ==  NR_INT)  {  if(_numTypesValid  ==  NR_UNKNOWN)  {  throw  new  IllegalArgumentException( " ");  }	  if(_numTypesValid    ==    INT)    {    if(_numTypesValid    ==    INT)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	45	None	replace
38	[BUG]  [BUGGY]  ||(_numTypesValid  ==  NR_INT)&&(_numTypesValid  ==  NR_UNKNOWN))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  ||(_numTypesValid  ==  NR_INT)&&(_numTypesValid  ==  NR_UNKNOWN))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	||(_numTypesValid  ==  NR_INT)&&(_numTypesValid  ==  NR_UNKNOWN))  {  throw  new  IllegalArgumentException( " ");  }	  if(_numTypesValid    ==    INT)    {    if(_numTypesValid    ==    INT)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
39	[BUG]  [BUGGY]  ||(_numTypesValid  ==  NR_UNKNOWN)&&(_numTypesValid  ==  NR_INT))  {  return  _parseIntValue();  }  [CE]  illegal  start  of  expression  [FE]              JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  ||(_numTypesValid  ==  NR_UNKNOWN)&&(_numTypesValid  ==  NR_INT))  {  return  _parseIntValue();  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	||(_numTypesValid  ==  NR_UNKNOWN)&&(_numTypesValid  ==  NR_INT))  {  return  _parseIntValue();  }	  if(_numTypesValid    ==    NR_INT)    {    if(_numTypesValid    ==    NR_INT)    {    return    _parseIntValue();    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
40	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  INT)  {  //  wasn't  an  int  natively?  convertNumberToInt();  //  let's  make  it  so,  if  possible  }  [CE]  ';'  expected  [FE]                JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  INT)  {  //  wasn't  an  int  natively?  convertNumberToInt();  //  let's  make  it  so,  if  possible  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  INT)  {  //  wasn't  an  int  natively?  convertNumberToInt();  //  let's  make  it  so,  if  possible  }	  if(_numTypesValid    ==    INT)    {    if(_numTypesValid    ==    INT)    {    //    wasn't    an    int    natively?    convertNumberToInt();    //    let's    make    it    so,    if    possible    }    	non-compiled	[CE]  ';'  expected	34	None	replace
41	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_INT)  {  if(_numTypesValid  ==  NR_UNKNOWN)  {  //  wasn't  an  int  natively?  convertNumberToInt();  //  let's  make  it  so,  if  possible  }  [CE]  ';'  expected  [FE]                  JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if(_numTypesValid  ==  NR_INT)  {  if(_numTypesValid  ==  NR_UNKNOWN)  {  //  wasn't  an  int  natively?  convertNumberToInt();  //  let's  make  it  so,  if  possible  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_numTypesValid  ==  NR_INT)  {  if(_numTypesValid  ==  NR_UNKNOWN)  {  //  wasn't  an  int  natively?  convertNumberToInt();  //  let's  make  it  so,  if  possible  }	  if(_numTypesValid    ==    INT)    {    if(_numTypesValid    ==    INT)    {    //    wasn't    an    int    natively?    convertNumberToInt();    //    let's    make    it    so,    if    possible    }    	non-compiled	[CE]  ';'  expected	34	None	replace
42	[BUG]  [BUGGY]  if((  _numTypesValid  &  NR_INT)  ==  0)  {  if(_numTypesValid  ==  NR_UNKNOWN)  {  return  _parseIntValue();  }  [CE]  ';'  expected  [FE]                JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if((  _numTypesValid  &  NR_INT)  ==  0)  {  if(_numTypesValid  ==  NR_UNKNOWN)  {  return  _parseIntValue();  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if((  _numTypesValid  &  NR_INT)  ==  0)  {  if(_numTypesValid  ==  NR_UNKNOWN)  {  return  _parseIntValue();  }	  if((    _numTypesValid    &    NR_INT)    ==    0)    {    if(_numTypesValid    ==    NR_INT)    {    //    wasn't    an    int    natively?    convertNumberToInt();    //    let's    make    it    so,    if    possible    	non-compiled	[CE]  ';'  expected	65	None	replace
43	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  NR_UNKNOWN)  {  return  _numberInt;  }  [CE]  ';'  expected  [FE]                  JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  NR_UNKNOWN)  {  return  _numberInt;  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  NR_UNKNOWN)  {  return  _numberInt;  }	  if((    _numTypesValid    &    NR_INT)    ==    0)    {    if(_numTypesValid    ==    NR_INT)    {    //    wasn't    an    int    natively?    convertNumberToInt();    //    let's    make    it    so,    if    possible    	non-compiled	[CE]  ';'  expected	65	None	replace
44	[BUG]  [BUGGY]  ||(_numTypesValid  ==  NR_UNKNOWN)&&(_numTypesValid  ==  NR_INT))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]            JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  ||(_numTypesValid  ==  NR_UNKNOWN)&&(_numTypesValid  ==  NR_INT))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	||(_numTypesValid  ==  NR_UNKNOWN)&&(_numTypesValid  ==  NR_INT))  {  throw  new  IllegalArgumentException( " ");  }	  ||(_numTypesValid    ==    NR_INT)&&(_numTypesValid    ==    NR_INT))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
45	[BUG]  [BUGGY]  ||(_numTypesValid  ==  NR_INT)&&(_numTypesValid  ==  NR_DOUBLE))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]              JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  ||(_numTypesValid  ==  NR_INT)&&(_numTypesValid  ==  NR_DOUBLE))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	||(_numTypesValid  ==  NR_INT)&&(_numTypesValid  ==  NR_DOUBLE))  {  throw  new  IllegalArgumentException( " ");  }	  ||(_numTypesValid    ==    NR_INT)&&(_numTypesValid    ==    NR_INT))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
46	[BUG]  [BUGGY]  ||(_numTypesValid  ==  NR_LONG)&&(_numTypesValid  ==  NR_INT))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  ||(_numTypesValid  ==  NR_LONG)&&(_numTypesValid  ==  NR_INT))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	||(_numTypesValid  ==  NR_LONG)&&(_numTypesValid  ==  NR_INT))  {  throw  new  IllegalArgumentException( " ");  }	  ||(_numTypesValid    ==    NR_INT)&&(_numTypesValid    ==    NR_INT))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
47	[BUG]  [BUGGY]  if(_numTypesValid  <  NR_INT)  {  [CE]  ';'  expected  [FE]                JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if(_numTypesValid  <  NR_INT)  {  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_numTypesValid  <  NR_INT)  {	  if(_numTypesValid    <    =    NR_INT)    {    	non-compiled	[CE]  ';'  expected	19	None	replace
48	[BUG]  [BUGGY]  if(_numTypesValid!=  NR_INT)  {  [CE]  ';'  expected  [FE]                  JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if(_numTypesValid!=  NR_INT)  {  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_numTypesValid!=  NR_INT)  {	  if(_numTypesValid    <    =    NR_INT)    {    	non-compiled	[CE]  ';'  expected	19	None	replace
49	[BUG]  [BUGGY]  if(_numTypesValid  <  =  NR_INT  ||  _numTypesValid  >  NR_UNKNOWN)  {  [CE]  illegal  start  of  expression  [FE]                    JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if(_numTypesValid  <  =  NR_INT  ||  _numTypesValid  >  NR_UNKNOWN)  {  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_numTypesValid  <  =  NR_INT  ||  _numTypesValid  >  NR_UNKNOWN)  {	  if(_numTypesValid    <    =    NR_INT)    {    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
50	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  INT)  {  return  _parseIntValue();  }  [CE]  ';'  expected  [FE]                  JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  INT)  {  return  _parseIntValue();  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  INT)  {  return  _parseIntValue();  }	  if(_numTypesValid    ==    INT)    {    if(_numTypesValid    ==    INT)    {    return    _parseIntValue();    }    	non-compiled	[CE]  ';'  expected	28	None	replace
51	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_LONG)  {  if(_numTypesValid  ==  INT)  {  return  _parseIntValue();  }  [CE]  ';'  expected  [FE]                    JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if(_numTypesValid  ==  NR_LONG)  {  if(_numTypesValid  ==  INT)  {  return  _parseIntValue();  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_numTypesValid  ==  NR_LONG)  {  if(_numTypesValid  ==  INT)  {  return  _parseIntValue();  }	  if(_numTypesValid    ==    INT)    {    if(_numTypesValid    ==    INT)    {    return    _parseIntValue();    }    	non-compiled	[CE]  ';'  expected	28	None	replace
52	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_NUMBER)  {  if(_numTypesValid  ==  NR_UNKNOWN)  {  return  _parseIntValue();  }  [CE]  ';'  expected  [FE]                      JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if(_numTypesValid  ==  NR_NUMBER)  {  if(_numTypesValid  ==  NR_UNKNOWN)  {  return  _parseIntValue();  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_numTypesValid  ==  NR_NUMBER)  {  if(_numTypesValid  ==  NR_UNKNOWN)  {  return  _parseIntValue();  }	  if(_numTypesValid    ==    INT)    {    if(_numTypesValid    ==    INT)    {    return    _parseIntValue();    }    	non-compiled	[CE]  ';'  expected	28	None	replace
53	[BUG]  [BUGGY]  ||(_numTypesValid  ==  NR_UNKNOWN))  {  if(_numTypesValid  ==  NR_INT)  {  convertNumberToInt();  }  [CE]  illegal  start  of  expression  [FE]                  JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  ||(_numTypesValid  ==  NR_UNKNOWN))  {  if(_numTypesValid  ==  NR_INT)  {  convertNumberToInt();  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	||(_numTypesValid  ==  NR_UNKNOWN))  {  if(_numTypesValid  ==  NR_INT)  {  convertNumberToInt();  }	  if((    _numTypesValid    &    NR_INT)    ==    0)    {    if(_numTypesValid    ==    NR_INT)    {    convertNumberToInt();    }    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
54	[BUG]  [BUGGY]  ||(_numTypesValid  ==  NR_INT))  {  if(_numTypesValid  ==  NR_UNKNOWN)  {  convertNumberToInt();  }  [CE]  illegal  start  of  expression  [FE]                    JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  ||(_numTypesValid  ==  NR_INT))  {  if(_numTypesValid  ==  NR_UNKNOWN)  {  convertNumberToInt();  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	||(_numTypesValid  ==  NR_INT))  {  if(_numTypesValid  ==  NR_UNKNOWN)  {  convertNumberToInt();  }	  if((    _numTypesValid    &    NR_INT)    ==    0)    {    if(_numTypesValid    ==    NR_INT)    {    convertNumberToInt();    }    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
55	[BUG]  [BUGGY]  ||(_numTypesValid  ==  NR_UNKNOWN)&&(_numTypesValid  ==  NR_INT))  {  convertNumberToInt();  [CE]  illegal  start  of  expression  [FE]                      JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  ||(_numTypesValid  ==  NR_UNKNOWN)&&(_numTypesValid  ==  NR_INT))  {  convertNumberToInt();  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	||(_numTypesValid  ==  NR_UNKNOWN)&&(_numTypesValid  ==  NR_INT))  {  convertNumberToInt();	  if((    _numTypesValid    &    NR_INT)    ==    0)    {    if(_numTypesValid    ==    NR_INT)    {    convertNumberToInt();    }    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
56	[BUG]  [BUGGY]  _parsingContext  =  parent.getParent();  [CE]  cannot  find  symbol  parent  [FE]          JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  _parsingContext  =  parent.getParent();  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	_parsingContext  =  parent.getParent();	  _parsingContext    =    ctxt.getParent();    	non-compiled	[CE]  cannot  find  symbol  parent	18	None	replace
57	[BUG]  [BUGGY]  _parsingContext  =  _ioContext.getParent();  [CE]  cannot  find  symbol  [FE]            JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  _parsingContext  =  _ioContext.getParent();  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	_parsingContext  =  _ioContext.getParent();	  _parsingContext    =    ctxt.getParent();    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
58	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if(_numTypesValid  ==  NR_INT)  {  convertNumberToInt();  }  if(_numTypesValid  ==  NR_INT)  {  convertNumberToInt();  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	add	if(_numTypesValid    ==    NR_INT)    {    convertNumberToInt();    }    if(_numTypesValid  ==  NR_INT)  {  convertNumberToInt();  }	  	compilable	  [FE]  JsonParseException  	49	8	add
59	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_INT)  {  convertNumberToInt();  }  if(_numTypesValid  ==  NR_INT)  {  convertNumberToInt();  }  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if(_numTypesValid  ==  NR_INT)  {  convertNumberToInt();  }  if(_numTypesValid  ==  NR_INT)  {  convertNumberToInt();  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_numTypesValid    ==    NR_INT)    {    convertNumberToInt();    }    if(_numTypesValid  ==  NR_INT)  {  convertNumberToInt();  }	  	compilable	  [FE]  JsonParseException  	49	8	add
60	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if(_numTypesValid  ==  NR_INT)  {  convertNumberToInt();  }  if(_numTypesValid!=  NR_INT)  {  convertNumberToInt();  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	add	if(_numTypesValid    ==    NR_INT)    {    convertNumberToInt();    }    if(_numTypesValid!=  NR_INT)  {  convertNumberToInt();  }	  	compilable	  [FE]  JsonParseException  	49	8	add
61	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_INT)  {  convertNumberToInt();  }  if(_numTypesValid!=  NR_INT)  {  convertNumberToInt();  }  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if(_numTypesValid  ==  NR_INT)  {  convertNumberToInt();  }  if(_numTypesValid!=  NR_INT)  {  convertNumberToInt();  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_numTypesValid    ==    NR_INT)    {    convertNumberToInt();    }    if(_numTypesValid!=  NR_INT)  {  convertNumberToInt();  }	  	compilable	  [FE]  JsonParseException  	49	8	add
62	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]        JsonParseException    [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if(_numTypesValid  ==  NR_INT)  {  convertNumberToInt();  }  if(_numTypesValid  >=  NR_INT)  {  convertNumberToInt();  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	add	if(_numTypesValid    ==    NR_INT)    {    convertNumberToInt();    }    if(_numTypesValid  >=  NR_INT)  {  convertNumberToInt();  }	  	compilable	  [FE]  JsonParseException  	49	8	add
63	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_INT)  {  convertNumberToInt();  }  if(_numTypesValid  >=  NR_INT)  {  convertNumberToInt();  }  [FE]  JsonParseException  [FE]        JsonParseException    [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if(_numTypesValid  ==  NR_INT)  {  convertNumberToInt();  }  if(_numTypesValid  >=  NR_INT)  {  convertNumberToInt();  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_numTypesValid    ==    NR_INT)    {    convertNumberToInt();    }    if(_numTypesValid  >=  NR_INT)  {  convertNumberToInt();  }	  	compilable	  [FE]  JsonParseException  	49	8	add
64	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_INT)  {  convertNumberToInt();  }  If(_numTypesValid  ==  NR_INT)  {  convertNumberToInt();  }  [CE]  ';'  expected  [FE]          JsonParseException    [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if(_numTypesValid  ==  NR_INT)  {  convertNumberToInt();  }  If(_numTypesValid  ==  NR_INT)  {  convertNumberToInt();  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_numTypesValid    ==    NR_INT)    {    convertNumberToInt();    }    If(_numTypesValid  ==  NR_INT)  {  convertNumberToInt();  }	  	non-compiled	[CE]  ';'  expected	49	None	add
65	[BUG]  [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(-1,  _numberIntLength);  [CE]  cannot  find  symbol  _numberIntLength  [FE]                JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(-1,  _numberIntLength);  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	_parsingContext  =  _parsingContext.createChildObjectContext(-1,  _numberIntLength);	          _parsingContext    =    _parsingContext.createChildObjectContext(-1);    	non-compiled	[CE]  cannot  find  symbol  _numberIntLength	41	None	replace
66	[BUG]  [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(-1,  _numberNegative);  [CE]  method  createChildObjectContext  in  class  JsonReadContext  cannot  be  applied  to  given  types;  [FE]                  JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(-1,  _numberNegative);  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	_parsingContext  =  _parsingContext.createChildObjectContext(-1,  _numberNegative);	          _parsingContext    =    _parsingContext.createChildObjectContext(-1);    	non-compiled	[CE]  method  createChildObjectContext  in  class  JsonReadContext  cannot  be  applied  to  given  types;	41	None	replace
67	[BUG]  [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(-1,  _numberLength);  [CE]  cannot  find  symbol  _numberLength  [FE]                    JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(-1,  _numberLength);  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	_parsingContext  =  _parsingContext.createChildObjectContext(-1,  _numberLength);	          _parsingContext    =    _parsingContext.createChildObjectContext(-1);    	non-compiled	[CE]  cannot  find  symbol  _numberLength	41	None	replace
68	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]                      JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(-1,  _numberInt);  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	add	_parsingContext  =  _parsingContext.createChildObjectContext(-1,  _numberInt);	          _parsingContext    =    _parsingContext.createChildObjectContext(-1);    	compilable	  [FE]  JsonParseException  	41	8	replace
69	[BUG]  [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(-1,  _numberInt);  [FE]  JsonParseException  [FE]                      JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(-1,  _numberInt);  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	_parsingContext  =  _parsingContext.createChildObjectContext(-1,  _numberInt);	          _parsingContext    =    _parsingContext.createChildObjectContext(-1);    	compilable	  [FE]  JsonParseException  	41	8	replace
70	[BUG]  [BUGGY]  if((  _numTypesValid  &  NR_INT)  ==  0  ||(_numTypesValid  &  NR_INT)  ==  0)  {  [CE]  ';'  expected  [FE]                JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if((  _numTypesValid  &  NR_INT)  ==  0  ||(_numTypesValid  &  NR_INT)  ==  0)  {  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if((  _numTypesValid  &  NR_INT)  ==  0  ||(_numTypesValid  &  NR_INT)  ==  0)  {	  if((    _numTypesValid    &    NR_INT)    ==    0)    {    	non-compiled	[CE]  ';'  expected	58	None	replace
71	[BUG]  [BUGGY]  ||(_numTypesValid  ==  NR_UNKNOWN))  {  if(_numTypesValid  ==  NR_INT)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]            JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  ||(_numTypesValid  ==  NR_UNKNOWN))  {  if(_numTypesValid  ==  NR_INT)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	||(_numTypesValid  ==  NR_UNKNOWN))  {  if(_numTypesValid  ==  NR_INT)  {  throw  new  IllegalArgumentException( " ");  }	  if((    _numTypesValid    &    NR_INT)    ==    0)    {    if(_numTypesValid    ==    NR_INT)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
72	[BUG]  [BUGGY]  ||(_numTypesValid  ==  NR_UNKNOWN))  {  if(_numTypesValid  ==  NR_UNKNOWN)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]              JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  ||(_numTypesValid  ==  NR_UNKNOWN))  {  if(_numTypesValid  ==  NR_UNKNOWN)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	||(_numTypesValid  ==  NR_UNKNOWN))  {  if(_numTypesValid  ==  NR_UNKNOWN)  {  throw  new  IllegalArgumentException( " ");  }	  if((    _numTypesValid    &    NR_INT)    ==    0)    {    if(_numTypesValid    ==    NR_INT)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
73	[BUG]  [BUGGY]  ||(_numTypesValid  ==  NR_UNKNOWN))  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  ||(_numTypesValid  ==  NR_UNKNOWN))  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	||(_numTypesValid  ==  NR_UNKNOWN))  {  throw  new  IllegalArgumentException( " ");	  if((    _numTypesValid    &    NR_INT)    ==    0)    {    if(_numTypesValid    ==    NR_INT)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
74	[BUG]  [BUGGY]  ||(_numTypesValid  ==  0))  {  if(_numTypesValid  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  ||(_numTypesValid  ==  0))  {  if(_numTypesValid  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	||(_numTypesValid  ==  0))  {  if(_numTypesValid  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	  if((    _numTypesValid    &    NR_INT)    ==    0)    {    if(_numTypesValid    ==    NR_INT)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
75	[BUG]  [BUGGY]  ||(_numTypesValid  ==  NR_UNKNOWN))  {  return  _parseIntValue();  [CE]  illegal  start  of  expression  [FE]            JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  ||(_numTypesValid  ==  NR_UNKNOWN))  {  return  _parseIntValue();  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	||(_numTypesValid  ==  NR_UNKNOWN))  {  return  _parseIntValue();	  if((    _numTypesValid    &    NR_INT)    ==    0)    {    if(_numTypesValid    ==    NR_INT)    {    return    _parseIntValue();    }    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
76	[BUG]  [BUGGY]  ||(_numTypesValid  ==  NR_UNKNOWN))  {  if(_numTypesValid  ==  NR_INT)  {  return  _parseIntValue();  }  [CE]  illegal  start  of  expression  [FE]              JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  ||(_numTypesValid  ==  NR_UNKNOWN))  {  if(_numTypesValid  ==  NR_INT)  {  return  _parseIntValue();  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	||(_numTypesValid  ==  NR_UNKNOWN))  {  if(_numTypesValid  ==  NR_INT)  {  return  _parseIntValue();  }	  if((    _numTypesValid    &    NR_INT)    ==    0)    {    if(_numTypesValid    ==    NR_INT)    {    return    _parseIntValue();    }    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
77	[BUG]  [BUGGY]  ||(_numTypesValid  ==  NR_UNKNOWN)&&(_numTypesValid  ==  NR_UNKNOWN))  {  return  _parseIntValue();  [CE]  illegal  start  of  expression  [FE]                JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  ||(_numTypesValid  ==  NR_UNKNOWN)&&(_numTypesValid  ==  NR_UNKNOWN))  {  return  _parseIntValue();  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	||(_numTypesValid  ==  NR_UNKNOWN)&&(_numTypesValid  ==  NR_UNKNOWN))  {  return  _parseIntValue();	  if((    _numTypesValid    &    NR_INT)    ==    0)    {    if(_numTypesValid    ==    NR_INT)    {    return    _parseIntValue();    }    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
78	[BUG]  [BUGGY]  if(_numTypesValid  ==  0)  {  if(_numTypesValid  ==  NR_INT)  {  //  wasn't  an  int  natively?  convertNumberToInt();  //  let's  make  it  so,  if  possible  }  [CE]  ';'  expected  [FE]                JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if(_numTypesValid  ==  0)  {  if(_numTypesValid  ==  NR_INT)  {  //  wasn't  an  int  natively?  convertNumberToInt();  //  let's  make  it  so,  if  possible  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_numTypesValid  ==  0)  {  if(_numTypesValid  ==  NR_INT)  {  //  wasn't  an  int  natively?  convertNumberToInt();  //  let's  make  it  so,  if  possible  }	  if(_numTypesValid    ==    NR_INT)    {    if(_numTypesValid    ==    NR_INT)    {    //    wasn't    an    int    natively?    convertNumberToInt();    //    let's    make    it    so,    if    possible    }    	non-compiled	[CE]  ';'  expected	6	None	replace
79	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  NR_INT)  {  //  weren't  an  int  natively?  convertNumberToInt();  //  let's  make  it  so,  if  possible  }  [CE]  ';'  expected  [FE]                  JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  NR_INT)  {  //  weren't  an  int  natively?  convertNumberToInt();  //  let's  make  it  so,  if  possible  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  NR_INT)  {  //  weren't  an  int  natively?  convertNumberToInt();  //  let's  make  it  so,  if  possible  }	  if(_numTypesValid    ==    NR_INT)    {    if(_numTypesValid    ==    NR_INT)    {    //    wasn't    an    int    natively?    convertNumberToInt();    //    let's    make    it    so,    if    possible    }    	non-compiled	[CE]  ';'  expected	6	None	replace
80	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  INT)  {  convertNumberToInt();  }  [CE]  ';'  expected  [FE]                JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  INT)  {  convertNumberToInt();  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  INT)  {  convertNumberToInt();  }	  if(_numTypesValid    ==    INT)    {    if(_numTypesValid    ==    INT)    {    convertNumberToInt();    }    	non-compiled	[CE]  ';'  expected	32	None	replace
81	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_LONG)  {  if(_numTypesValid  ==  INT)  {  convertNumberToInt();  }  [CE]  ';'  expected  [FE]                  JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if(_numTypesValid  ==  NR_LONG)  {  if(_numTypesValid  ==  INT)  {  convertNumberToInt();  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_numTypesValid  ==  NR_LONG)  {  if(_numTypesValid  ==  INT)  {  convertNumberToInt();  }	  if(_numTypesValid    ==    INT)    {    if(_numTypesValid    ==    INT)    {    convertNumberToInt();    }    	non-compiled	[CE]  ';'  expected	32	None	replace
82	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  NR_INT  ||  _numTypesValid  ==  NR_BIGINT)  {  return  _parseIntValue();  }  [CE]  ';'  expected  [FE]        JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  NR_INT  ||  _numTypesValid  ==  NR_BIGINT)  {  return  _parseIntValue();  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  NR_INT  ||  _numTypesValid  ==  NR_BIGINT)  {  return  _parseIntValue();  }	  if(_numTypesValid    ==    NR_INT)    {    if(_numTypesValid    ==    NR_BIGINT    ||    _numTypesValid    ==    NR_BIGINT)    {    return    _parseIntValue();    }    	non-compiled	[CE]  ';'  expected	17	None	replace
83	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  NR_BIGINT  ||  _numTypesValid  ==  NR_BIGINT)  {  return  _parseIntValue();  }  [CE]  ';'  expected  [FE]          JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  NR_BIGINT  ||  _numTypesValid  ==  NR_BIGINT)  {  return  _parseIntValue();  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  NR_BIGINT  ||  _numTypesValid  ==  NR_BIGINT)  {  return  _parseIntValue();  }	  if(_numTypesValid    ==    NR_INT)    {    if(_numTypesValid    ==    NR_BIGINT    ||    _numTypesValid    ==    NR_BIGINT)    {    return    _parseIntValue();    }    	non-compiled	[CE]  ';'  expected	17	None	replace
84	[BUG]  [BUGGY]  if(_numTypesValid  ==  0)  {  if(_numTypesValid  ==  NR_BIGINT  ||  _numTypesValid  ==  NR_BIGINT)  {  return  _parseIntValue();  }  [CE]  ';'  expected  [FE]            JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if(_numTypesValid  ==  0)  {  if(_numTypesValid  ==  NR_BIGINT  ||  _numTypesValid  ==  NR_BIGINT)  {  return  _parseIntValue();  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_numTypesValid  ==  0)  {  if(_numTypesValid  ==  NR_BIGINT  ||  _numTypesValid  ==  NR_BIGINT)  {  return  _parseIntValue();  }	  if(_numTypesValid    ==    NR_INT)    {    if(_numTypesValid    ==    NR_BIGINT    ||    _numTypesValid    ==    NR_BIGINT)    {    return    _parseIntValue();    }    	non-compiled	[CE]  ';'  expected	17	None	replace
85	[BUG]  [BUGGY]  ||(_numTypesValid  ==  NR_INT)&&(_numTypesValid  ==  NR_UNKNOWN))  {  return  _parseIntValue();  }  [CE]  illegal  start  of  expression  [FE]                JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  ||(_numTypesValid  ==  NR_INT)&&(_numTypesValid  ==  NR_UNKNOWN))  {  return  _parseIntValue();  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	||(_numTypesValid  ==  NR_INT)&&(_numTypesValid  ==  NR_UNKNOWN))  {  return  _parseIntValue();  }	  if(_numTypesValid    ==    0)    {    if(_numTypesValid    ==    NR_INT)    {    return    _parseIntValue();    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
86	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if(_numTypesValid  ==  NR_INT)  {  return  _parseIntValue();  }  if(_numTypesValid  ==  NR_INT)  {  return  _parseIntValue();  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	add	if(_numTypesValid    ==    NR_INT)    {    return    _parseIntValue();    }    if(_numTypesValid  ==  NR_INT)  {  return  _parseIntValue();  }	  	compilable	  [FE]  JsonParseException  	26	8	add
87	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_INT)  {  return  _parseIntValue();  }  if(_numTypesValid  ==  NR_INT)  {  return  _parseIntValue();  }  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if(_numTypesValid  ==  NR_INT)  {  return  _parseIntValue();  }  if(_numTypesValid  ==  NR_INT)  {  return  _parseIntValue();  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_numTypesValid    ==    NR_INT)    {    return    _parseIntValue();    }    if(_numTypesValid  ==  NR_INT)  {  return  _parseIntValue();  }	  	compilable	  [FE]  JsonParseException  	26	8	add
88	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if(_numTypesValid  ==  NR_INT)  {  return  _parseIntValue();  }  if(_numTypesValid!=  NR_INT)  {  return  _parseIntValue();  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	add	if(_numTypesValid    ==    NR_INT)    {    return    _parseIntValue();    }    if(_numTypesValid!=  NR_INT)  {  return  _parseIntValue();  }	  	compilable	  [FE]  JsonParseException  	26	8	add
89	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_INT)  {  return  _parseIntValue();  }  if(_numTypesValid!=  NR_INT)  {  return  _parseIntValue();  }  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if(_numTypesValid  ==  NR_INT)  {  return  _parseIntValue();  }  if(_numTypesValid!=  NR_INT)  {  return  _parseIntValue();  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_numTypesValid    ==    NR_INT)    {    return    _parseIntValue();    }    if(_numTypesValid!=  NR_INT)  {  return  _parseIntValue();  }	  	compilable	  [FE]  JsonParseException  	26	8	add
90	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]        JsonParseException    [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if(_numTypesValid  ==  NR_INT)  {  return  _parseIntValue();  }  if(_numTypesValid  >=  NR_INT)  {  return  _parseIntValue();  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	add	if(_numTypesValid    ==    NR_INT)    {    return    _parseIntValue();    }    if(_numTypesValid  >=  NR_INT)  {  return  _parseIntValue();  }	  	compilable	  [FE]  JsonParseException  	26	8	add
91	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_INT)  {  return  _parseIntValue();  }  if(_numTypesValid  >=  NR_INT)  {  return  _parseIntValue();  }  [FE]  JsonParseException  [FE]        JsonParseException    [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if(_numTypesValid  ==  NR_INT)  {  return  _parseIntValue();  }  if(_numTypesValid  >=  NR_INT)  {  return  _parseIntValue();  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_numTypesValid    ==    NR_INT)    {    return    _parseIntValue();    }    if(_numTypesValid  >=  NR_INT)  {  return  _parseIntValue();  }	  	compilable	  [FE]  JsonParseException  	26	8	add
92	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_INT)  {  return  _parseIntValue();  }  If(_numTypesValid  ==  NR_INT)  {  return  _parseIntValue();  }  [CE]  ';'  expected  [FE]          JsonParseException    [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if(_numTypesValid  ==  NR_INT)  {  return  _parseIntValue();  }  If(_numTypesValid  ==  NR_INT)  {  return  _parseIntValue();  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_numTypesValid    ==    NR_INT)    {    return    _parseIntValue();    }    If(_numTypesValid  ==  NR_INT)  {  return  _parseIntValue();  }	  	non-compiled	[CE]  ';'  expected	26	None	add
93	[BUG]  [BUGGY]  if(_numTypesValid  ==  0  ||  _numTypesValid  ==  0)  {  [CE]  ';'  expected  [FE]              JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if(_numTypesValid  ==  0  ||  _numTypesValid  ==  0)  {  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_numTypesValid  ==  0  ||  _numTypesValid  ==  0)  {	  if(_numTypesValid    ==    NR_INT    ||    _numTypesValid    ==    NR_UNKNOWN)    {    	non-compiled	[CE]  ';'  expected	15	None	replace
94	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_INT  ||  _numTypesValid  ==  NR_BIGINT)  {  [CE]  ';'  expected  [FE]                JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if(_numTypesValid  ==  NR_INT  ||  _numTypesValid  ==  NR_BIGINT)  {  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_numTypesValid  ==  NR_INT  ||  _numTypesValid  ==  NR_BIGINT)  {	  if(_numTypesValid    ==    NR_INT    ||    _numTypesValid    ==    NR_UNKNOWN)    {    	non-compiled	[CE]  ';'  expected	15	None	replace
95	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_INT)  {  if(_numTypesValid  ==  NR_INT)  {  convertNumberToInt();  //  let's  make  it  so,  if  possible  }  [CE]  ';'  expected  [FE]                JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if(_numTypesValid  ==  NR_INT)  {  if(_numTypesValid  ==  NR_INT)  {  convertNumberToInt();  //  let's  make  it  so,  if  possible  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_numTypesValid  ==  NR_INT)  {  if(_numTypesValid  ==  NR_INT)  {  convertNumberToInt();  //  let's  make  it  so,  if  possible  }	  if(_numTypesValid    ==    NR_UNKNOWN)    {    if(_numTypesValid    ==    NR_UNKNOWN)    {    convertNumberToInt();    //    let's    make    it    so,    if    possible    }    	non-compiled	[CE]  ';'  expected	23	None	replace
96	[BUG]  [BUGGY]  if(_numTypesValid  ==  0)  {  if(_numTypesValid  ==  NR_UNKNOWN)  {  return  _parseIntValue();  }  [CE]  ';'  expected  [FE]            JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if(_numTypesValid  ==  0)  {  if(_numTypesValid  ==  NR_UNKNOWN)  {  return  _parseIntValue();  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_numTypesValid  ==  0)  {  if(_numTypesValid  ==  NR_UNKNOWN)  {  return  _parseIntValue();  }	  if(_numTypesValid    ==    NR_INT)    {    if(_numTypesValid    ==    NR_UNKNOWN)    {    return    _parseIntValue();    }    	non-compiled	[CE]  ';'  expected	11	None	replace
97	[BUG]  [BUGGY]  int[]  values  =  ctxt.getValues();  [CE]  cannot  find  symbol  ctxt  [FE]        JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  int[]  values  =  ctxt.getValues();  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	int[]  values  =  ctxt.getValues();	          int[]    values    =    _parsingContext.getValues();    	non-compiled	[CE]  cannot  find  symbol  ctxt	51	None	replace
98	[BUG]  [BUGGY]  int[]  values  =  context.getValues();  [CE]  cannot  find  symbol  context  [FE]          JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  int[]  values  =  context.getValues();  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	int[]  values  =  context.getValues();	          int[]    values    =    _parsingContext.getValues();    	non-compiled	[CE]  cannot  find  symbol  context	51	None	replace
99	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if(_numTypesValid  ==  NR_INT)  {  throw  new  IllegalArgumentException(   "   ");  }  if(_numTypesValid  ==  NR_INT)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	add	if(_numTypesValid    ==    NR_INT)    {    throw    new    IllegalArgumentException(   "   ");    }    if(_numTypesValid  ==  NR_INT)  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  JsonParseException  	55	8	add
100	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_INT)  {  throw  new  IllegalArgumentException(   "   ");  }  if(_numTypesValid  ==  NR_INT)  {  throw  new  IllegalArgumentException( "   ");  }  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if(_numTypesValid  ==  NR_INT)  {  throw  new  IllegalArgumentException(   "   ");  }  if(_numTypesValid  ==  NR_INT)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_numTypesValid    ==    NR_INT)    {    throw    new    IllegalArgumentException(   "   ");    }    if(_numTypesValid  ==  NR_INT)  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  JsonParseException  	55	8	add
101	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_INT)  {  throw  new  IllegalArgumentException(   "   ");  }  if(_numTypesValid  ==  NR_INT)  throw  new  IllegalArgumentException( "   ");  }  [CE]  illegal  start  of  type  [FE]      JsonParseException    [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if(_numTypesValid  ==  NR_INT)  {  throw  new  IllegalArgumentException(   "   ");  }  if(_numTypesValid  ==  NR_INT)  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_numTypesValid    ==    NR_INT)    {    throw    new    IllegalArgumentException(   "   ");    }    if(_numTypesValid  ==  NR_INT)  throw  new  IllegalArgumentException( "   ");  }	  	non-compiled	[CE]  illegal  start  of  type	55	None	add
102	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]        JsonParseException    [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if(_numTypesValid  ==  NR_INT)  {  throw  new  IllegalArgumentException(   "   ");  }  if(_numTypesValid!=  NR_INT)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	add	if(_numTypesValid    ==    NR_INT)    {    throw    new    IllegalArgumentException(   "   ");    }    if(_numTypesValid!=  NR_INT)  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  JsonParseException  	55	10	add
103	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_INT)  {  throw  new  IllegalArgumentException(   "   ");  }  if(_numTypesValid!=  NR_INT)  {  throw  new  IllegalArgumentException( "   ");  }  [FE]  JsonParseException  [FE]        JsonParseException    [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if(_numTypesValid  ==  NR_INT)  {  throw  new  IllegalArgumentException(   "   ");  }  if(_numTypesValid!=  NR_INT)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_numTypesValid    ==    NR_INT)    {    throw    new    IllegalArgumentException(   "   ");    }    if(_numTypesValid!=  NR_INT)  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  JsonParseException  	55	10	add
104	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_INT  ||  _numTypesValid  ==  NR_LONG)  {  [CE]  ';'  expected  [FE]            JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if(_numTypesValid  ==  NR_INT  ||  _numTypesValid  ==  NR_LONG)  {  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_numTypesValid  ==  NR_INT  ||  _numTypesValid  ==  NR_LONG)  {	  if(_numTypesValid    ==    NR_INT)    {    	non-compiled	[CE]  ';'  expected	14	None	replace
105	[BUG]  [BUGGY]  ||(_numTypesValid  ==  NR_INT)&&(_numTypesValid  ==  NR_DOUBLE))  {  return  _parseIntValue();  }  [CE]  illegal  start  of  expression  [FE]                JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  ||(_numTypesValid  ==  NR_INT)&&(_numTypesValid  ==  NR_DOUBLE))  {  return  _parseIntValue();  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	||(_numTypesValid  ==  NR_INT)&&(_numTypesValid  ==  NR_DOUBLE))  {  return  _parseIntValue();  }	  ||(_numTypesValid    ==    NR_INT)&&(_numTypesValid    ==    NR_INT))    {    return    _parseIntValue();    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
106	[BUG]  [BUGGY]  ||(_numTypesValid  ==  NR_LONG)&&(_numTypesValid  ==  NR_INT))  {  return  _parseIntValue();  }  [CE]  illegal  start  of  expression  [FE]                  JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  ||(_numTypesValid  ==  NR_LONG)&&(_numTypesValid  ==  NR_INT))  {  return  _parseIntValue();  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	||(_numTypesValid  ==  NR_LONG)&&(_numTypesValid  ==  NR_INT))  {  return  _parseIntValue();  }	  ||(_numTypesValid    ==    NR_INT)&&(_numTypesValid    ==    NR_INT))    {    return    _parseIntValue();    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
107	[BUG]  [BUGGY]  ||(_numTypesValid  ==  NR_DOUBLE)&&(_numTypesValid  ==  NR_INT))  {  return  _parseIntValue();  }  [CE]  illegal  start  of  expression  [FE]                    JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  ||(_numTypesValid  ==  NR_DOUBLE)&&(_numTypesValid  ==  NR_INT))  {  return  _parseIntValue();  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	||(_numTypesValid  ==  NR_DOUBLE)&&(_numTypesValid  ==  NR_INT))  {  return  _parseIntValue();  }	  ||(_numTypesValid    ==    NR_INT)&&(_numTypesValid    ==    NR_INT))    {    return    _parseIntValue();    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
108	[BUG]  [BUGGY]  ||(_numTypesValid  ==  NR_INT)&&(_numTypesValid!=  NR_UNKNOWN))  {  return  _parseIntValue();  }  [CE]  illegal  start  of  expression  [FE]    JsonParseException    [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  ||(_numTypesValid  ==  NR_INT)&&(_numTypesValid!=  NR_UNKNOWN))  {  return  _parseIntValue();  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	||(_numTypesValid  ==  NR_INT)&&(_numTypesValid!=  NR_UNKNOWN))  {  return  _parseIntValue();  }	  if(_numTypesValid    ==    NR_INT)    {    return    _parseIntValue();    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
109	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_INT)  {  if(_inputPtr  >=  _inputEnd)  {  convertNumberToInt();  }  [CE]  ';'  expected  [FE]                    JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if(_numTypesValid  ==  NR_INT)  {  if(_inputPtr  >=  _inputEnd)  {  convertNumberToInt();  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_numTypesValid  ==  NR_INT)  {  if(_inputPtr  >=  _inputEnd)  {  convertNumberToInt();  }	  if(_inputPtr    >=    _inputEnd)    {    if(_numTypesValid    ==    NR_INT)    {    convertNumberToInt();    }    	non-compiled	[CE]  ';'  expected	63	None	replace
110	[BUG]  [BUGGY]  if(_numTypesValid  >=  NR_INT)  {  if(_inputPtr  >=  _inputEnd)  {  convertNumberToInt();  }  [CE]  ';'  expected  [FE]                      JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if(_numTypesValid  >=  NR_INT)  {  if(_inputPtr  >=  _inputEnd)  {  convertNumberToInt();  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_numTypesValid  >=  NR_INT)  {  if(_inputPtr  >=  _inputEnd)  {  convertNumberToInt();  }	  if(_inputPtr    >=    _inputEnd)    {    if(_numTypesValid    ==    NR_INT)    {    convertNumberToInt();    }    	non-compiled	[CE]  ';'  expected	63	None	replace
111	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN)  {  if(_inputPtr  >=  _inputEnd)  {  convertNumberToInt();  }  [CE]  ';'  expected  [FE]                        JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN)  {  if(_inputPtr  >=  _inputEnd)  {  convertNumberToInt();  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_numTypesValid  ==  NR_UNKNOWN)  {  if(_inputPtr  >=  _inputEnd)  {  convertNumberToInt();  }	  if(_inputPtr    >=    _inputEnd)    {    if(_numTypesValid    ==    NR_INT)    {    convertNumberToInt();    }    	non-compiled	[CE]  ';'  expected	63	None	replace
112	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_NUMBER_INT  ||  _numTypesValid  ==  NR_UNKNOWN)  {  [CE]  ';'  expected  [FE]            JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if(_numTypesValid  ==  NR_NUMBER_INT  ||  _numTypesValid  ==  NR_UNKNOWN)  {  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_numTypesValid  ==  NR_NUMBER_INT  ||  _numTypesValid  ==  NR_UNKNOWN)  {	  if(_numTypesValid    ==    NR_UNKNOWN    ||    _numTypesValid    ==    NR_INT)    {    	non-compiled	[CE]  ';'  expected	25	None	replace
113	[BUG]  [BUGGY]  ||  _numTypesValid  ==  NR_UNKNOWN)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  ||  _numTypesValid  ==  NR_UNKNOWN)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	||  _numTypesValid  ==  NR_UNKNOWN)  {  throw  new  IllegalArgumentException( " ");  }	  ||    _numTypesValid    ==    NR_INT)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
114	[BUG]  [BUGGY]  ||  _numTypesValid  ==  NR_LONG)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  ||  _numTypesValid  ==  NR_LONG)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	||  _numTypesValid  ==  NR_LONG)  {  throw  new  IllegalArgumentException( " ");  }	  ||    _numTypesValid    ==    NR_INT)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
115	[BUG]  [BUGGY]  ||  _numTypesValid  ==  NR_BIGINT)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  ||  _numTypesValid  ==  NR_BIGINT)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	||  _numTypesValid  ==  NR_BIGINT)  {  throw  new  IllegalArgumentException( " ");  }	  ||    _numTypesValid    ==    NR_INT)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
116	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(-1,  1);  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	add	_parsingContext  =  _parsingContext.createChildObjectContext(-1,  1);	          _parsingContext    =    _parsingContext.createChildObjectContext(-1,    -1);    	compilable	  [FE]  JsonParseException  	37	8	replace
117	[BUG]  [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(-1,  1);  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(-1,  1);  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	_parsingContext  =  _parsingContext.createChildObjectContext(-1,  1);	          _parsingContext    =    _parsingContext.createChildObjectContext(-1,    -1);    	compilable	  [FE]  JsonParseException  	37	8	replace
118	[BUG]  [BUGGY]  _parsingContext  =  _parsingContext.createChildIntContext(-1,  -1);  [CE]  cannot  find  symbol  [FE]      JsonParseException    [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  _parsingContext  =  _parsingContext.createChildIntContext(-1,  -1);  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	_parsingContext  =  _parsingContext.createChildIntContext(-1,  -1);	          _parsingContext    =    _parsingContext.createChildObjectContext(-1,    -1);    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
119	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]        JsonParseException    [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  _parsingContext  =  _parsingContext.createChildArrayContext(-1,  -1);  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	add	_parsingContext  =  _parsingContext.createChildArrayContext(-1,  -1);	          _parsingContext    =    _parsingContext.createChildObjectContext(-1,    -1);    	compilable	  [FE]  JsonParseException  	37	8	replace
120	[BUG]  [BUGGY]  _parsingContext  =  _parsingContext.createChildArrayContext(-1,  -1);  [FE]  JsonParseException  [FE]        JsonParseException    [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  _parsingContext  =  _parsingContext.createChildArrayContext(-1,  -1);  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	_parsingContext  =  _parsingContext.createChildArrayContext(-1,  -1);	          _parsingContext    =    _parsingContext.createChildObjectContext(-1,    -1);    	compilable	  [FE]  JsonParseException  	37	8	replace
121	[BUG]  [BUGGY]  if(_numTypesValid  ==  0)  {  if(_numTypesValid  ==  NR_UNKNOWN)  {  convertNumberToInt();  }  [CE]  ';'  expected  [FE]              JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if(_numTypesValid  ==  0)  {  if(_numTypesValid  ==  NR_UNKNOWN)  {  convertNumberToInt();  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_numTypesValid  ==  0)  {  if(_numTypesValid  ==  NR_UNKNOWN)  {  convertNumberToInt();  }	  if(_numTypesValid    ==    NR_INT)    {    if(_numTypesValid    ==    NR_UNKNOWN)    {    convertNumberToInt();    //    let's    make    it    so,    if    possible    }    	non-compiled	[CE]  ';'  expected	22	None	replace
122	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]          _parsingContext  =  _parsingContext.getParent();  _parsingContext  =  _parsingContext.getParent();  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	add	                _parsingContext    =    _parsingContext.getParent();    _parsingContext  =  _parsingContext.getParent();	  	compilable	  [FE]  JsonParseException  	38	10	add
123	[BUG]  [BUGGY]          _parsingContext  =  _parsingContext.getParent();  _parsingContext  =  _parsingContext.getParent();  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]          _parsingContext  =  _parsingContext.getParent();  _parsingContext  =  _parsingContext.getParent();  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	                _parsingContext    =    _parsingContext.getParent();    _parsingContext  =  _parsingContext.getParent();	  	compilable	  [FE]  JsonParseException  	38	10	add
124	[BUG]  [BUGGY]          _parsingContext  =  _parsingContext.getParent();  JsonParseException  _parsingContext  =  _parsingContext.getParent();  [CE]  cannot  find  symbol  [FE]      JsonParseException    [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]          _parsingContext  =  _parsingContext.getParent();  JsonParseException  _parsingContext  =  _parsingContext.getParent();  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	                _parsingContext    =    _parsingContext.getParent();    JsonParseException  _parsingContext  =  _parsingContext.getParent();	  	non-compiled	[CE]  cannot  find  symbol	38	None	add
125	[BUG]  [BUGGY]          _parsingContext  =  _parsingContext.getParent();  _parsingContext  =  _parsingContext.getNext();  [CE]  cannot  find  symbol  [FE]        JsonParseException    [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]          _parsingContext  =  _parsingContext.getParent();  _parsingContext  =  _parsingContext.getNext();  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	                _parsingContext    =    _parsingContext.getParent();    _parsingContext  =  _parsingContext.getNext();	  	non-compiled	[CE]  cannot  find  symbol	38	None	add
126	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  0)  {  convertNumberToInt();  }  [CE]  ';'  expected  [FE]                    JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  0)  {  convertNumberToInt();  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  0)  {  convertNumberToInt();  }	  if(_numTypesValid    <    0)    {    if(_numTypesValid    ==    0)    {    convertNumberToInt();    }    	non-compiled	[CE]  ';'  expected	48	None	replace
127	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_INT)  {  if(_numTypesValid  ==  0)  {  convertNumberToInt();  }  [CE]  ';'  expected  [FE]                      JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if(_numTypesValid  ==  NR_INT)  {  if(_numTypesValid  ==  0)  {  convertNumberToInt();  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_numTypesValid  ==  NR_INT)  {  if(_numTypesValid  ==  0)  {  convertNumberToInt();  }	  if(_numTypesValid    <    0)    {    if(_numTypesValid    ==    0)    {    convertNumberToInt();    }    	non-compiled	[CE]  ';'  expected	48	None	replace
128	[BUG]  [BUGGY]  ||(_numTypesValid  ==  NR_INT))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]    JsonParseException    [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  ||(_numTypesValid  ==  NR_INT))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	||(_numTypesValid  ==  NR_INT))  {  throw  new  IllegalArgumentException( " ");  }	  if(_numTypesValid    ==    NR_INT)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
129	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_INT  ||  _numTypesValid  ==  NR_INT)  {  [CE]  ';'  expected  [FE]                JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if(_numTypesValid  ==  NR_INT  ||  _numTypesValid  ==  NR_INT)  {  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_numTypesValid  ==  NR_INT  ||  _numTypesValid  ==  NR_INT)  {	  if(_numTypesValid    ==    -1)    {    	non-compiled	[CE]  ';'  expected	30	None	replace
130	[BUG]  [BUGGY]  if((  _numTypesValid  &  NR_INT)  >=  0)  {  [CE]  ';'  expected  [FE]                  JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if((  _numTypesValid  &  NR_INT)  >=  0)  {  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if((  _numTypesValid  &  NR_INT)  >=  0)  {	  if((    _numTypesValid    &    NR_INT)!=    0)    {    	non-compiled	[CE]  ';'  expected	59	None	replace
131	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_INT)  {  //  hadn't  an  int  natively?  convertNumberToInt();  //  let's  make  it  so,  if  possible  }  [CE]  ';'  expected  [FE]                  JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if(_numTypesValid  ==  NR_INT)  {  //  hadn't  an  int  natively?  convertNumberToInt();  //  let's  make  it  so,  if  possible  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_numTypesValid  ==  NR_INT)  {  //  hadn't  an  int  natively?  convertNumberToInt();  //  let's  make  it  so,  if  possible  }	  if(_numTypesValid    ==    NR_UNKNOWN)    {    //    hadn't    an    int    natively?    convertNumberToInt();    //    let's    make    it    so,    if    possible    }    	non-compiled	[CE]  ';'  expected	44	None	replace
132	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_INT)  {  if(_numTypesValid  ==  NR_UNKNOWN)  {  //  hadn't  an  int  natively?  convertNumberToInt();  //  let's  make  it  so,  if  possible  }  [CE]  ';'  expected  [FE]                    JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if(_numTypesValid  ==  NR_INT)  {  if(_numTypesValid  ==  NR_UNKNOWN)  {  //  hadn't  an  int  natively?  convertNumberToInt();  //  let's  make  it  so,  if  possible  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_numTypesValid  ==  NR_INT)  {  if(_numTypesValid  ==  NR_UNKNOWN)  {  //  hadn't  an  int  natively?  convertNumberToInt();  //  let's  make  it  so,  if  possible  }	  if(_numTypesValid    ==    NR_UNKNOWN)    {    //    hadn't    an    int    natively?    convertNumberToInt();    //    let's    make    it    so,    if    possible    }    	non-compiled	[CE]  ';'  expected	44	None	replace
133	[BUG]  [BUGGY]  if(_numTypesValid  ==  0)  {  //  hadn't  an  int  natively?  convertNumberToInt();  //  let's  make  it  so,  if  possible  }  [CE]  ';'  expected  [FE]                      JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if(_numTypesValid  ==  0)  {  //  hadn't  an  int  natively?  convertNumberToInt();  //  let's  make  it  so,  if  possible  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_numTypesValid  ==  0)  {  //  hadn't  an  int  natively?  convertNumberToInt();  //  let's  make  it  so,  if  possible  }	  if(_numTypesValid    ==    NR_UNKNOWN)    {    //    hadn't    an    int    natively?    convertNumberToInt();    //    let's    make    it    so,    if    possible    }    	non-compiled	[CE]  ';'  expected	44	None	replace
134	[BUG]  [BUGGY]  ||(_numTypesValid  >>  NR_UNKNOWN))  {  if(_numTypesValid  ==  NR_INT)  {  convertNumberToInt();  }  [CE]  illegal  start  of  expression  [FE]                  JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  ||(_numTypesValid  >>  NR_UNKNOWN))  {  if(_numTypesValid  ==  NR_INT)  {  convertNumberToInt();  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	||(_numTypesValid  >>  NR_UNKNOWN))  {  if(_numTypesValid  ==  NR_INT)  {  convertNumberToInt();  }	  if((    _numTypesValid    &    NR_INT)    ==    0)    {    if(_numTypesValid    ==    NR_INT)    {    convertNumberToInt();    }    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
135	[BUG]  [BUGGY]  ||(_numTypesValid  >=  NR_UNKNOWN))  {  if(_numTypesValid  ==  NR_INT)  {  convertNumberToInt();  }  [CE]  illegal  start  of  expression  [FE]                    JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  ||(_numTypesValid  >=  NR_UNKNOWN))  {  if(_numTypesValid  ==  NR_INT)  {  convertNumberToInt();  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	||(_numTypesValid  >=  NR_UNKNOWN))  {  if(_numTypesValid  ==  NR_INT)  {  convertNumberToInt();  }	  if((    _numTypesValid    &    NR_INT)    ==    0)    {    if(_numTypesValid    ==    NR_INT)    {    convertNumberToInt();    }    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
136	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  NR_INT)  {  //  hadn't  an  int  natively?  convertNumberToInt();  //  let's  make  it  so,  if  possible  }  [CE]  ';'  expected  [FE]              JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  NR_INT)  {  //  hadn't  an  int  natively?  convertNumberToInt();  //  let's  make  it  so,  if  possible  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  NR_INT)  {  //  hadn't  an  int  natively?  convertNumberToInt();  //  let's  make  it  so,  if  possible  }	  if(_numTypesValid    ==    0)    {    if(_numTypesValid    ==    0)    {    //    wasn't    an    int    natively?    convertNumberToInt();    //    let's    make    it    so,    if    possible    }    	non-compiled	[CE]  ';'  expected	33	None	replace
137	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  NR_INT)  {  //  wasn't  an  int  natively?  convertNumberToInt();  //  let's  make  it  so  [CE]  ';'  expected  [FE]                JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  NR_INT)  {  //  wasn't  an  int  natively?  convertNumberToInt();  //  let's  make  it  so  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  NR_INT)  {  //  wasn't  an  int  natively?  convertNumberToInt();  //  let's  make  it  so	  if(_numTypesValid    ==    0)    {    if(_numTypesValid    ==    0)    {    //    wasn't    an    int    natively?    convertNumberToInt();    //    let's    make    it    so,    if    possible    }    	non-compiled	[CE]  ';'  expected	33	None	replace
138	[BUG]  [BUGGY]  if((  _numTypesValid  &  NR_INT)  ==  0)  {  if(_numTypesValid  ==  NR_INT)  {  //  let's  make  it  so,  if  possible  [CE]  ';'  expected  [FE]                JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if((  _numTypesValid  &  NR_INT)  ==  0)  {  if(_numTypesValid  ==  NR_INT)  {  //  let's  make  it  so,  if  possible  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if((  _numTypesValid  &  NR_INT)  ==  0)  {  if(_numTypesValid  ==  NR_INT)  {  //  let's  make  it  so,  if  possible	  if((    _numTypesValid    &    NR_INT)    ==    0)    {    if(_numTypesValid    ==    NR_INT)    {    //    wasn't    an    int    natively?    convertNumberToInt();    //    let's    make    it    so,    if    possible    	non-compiled	[CE]  ';'  expected	65	None	replace
139	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  NR_INT)  {  //  wasn't  an  int  natively?  convertNumberToInt();  [CE]  ';'  expected  [FE]                  JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  NR_INT)  {  //  wasn't  an  int  natively?  convertNumberToInt();  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  NR_INT)  {  //  wasn't  an  int  natively?  convertNumberToInt();	  if((    _numTypesValid    &    NR_INT)    ==    0)    {    if(_numTypesValid    ==    NR_INT)    {    //    wasn't    an    int    natively?    convertNumberToInt();    //    let's    make    it    so,    if    possible    	non-compiled	[CE]  ';'  expected	65	None	replace
140	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  NR_INT)  {  //  wasn't  an  int  natively?  convertNumberToInt();  //  let's  make  it  so,  if  possible  [CE]  ';'  expected  [FE]                    JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  NR_INT)  {  //  wasn't  an  int  natively?  convertNumberToInt();  //  let's  make  it  so,  if  possible  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  NR_INT)  {  //  wasn't  an  int  natively?  convertNumberToInt();  //  let's  make  it  so,  if  possible	  if((    _numTypesValid    &    NR_INT)    ==    0)    {    if(_numTypesValid    ==    NR_INT)    {    //    wasn't    an    int    natively?    convertNumberToInt();    //    let's    make    it    so,    if    possible    	non-compiled	[CE]  ';'  expected	65	None	replace
141	[BUG]  [BUGGY]  if((  _numTypesValid  &  NR_INT)  ==  0)  {  if(_numTypesValid  ==  NR_INT)  {  //  wasn't  an  int  natively?  convertNumberToInt();  [CE]  ';'  expected  [FE]                      JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if((  _numTypesValid  &  NR_INT)  ==  0)  {  if(_numTypesValid  ==  NR_INT)  {  //  wasn't  an  int  natively?  convertNumberToInt();  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if((  _numTypesValid  &  NR_INT)  ==  0)  {  if(_numTypesValid  ==  NR_INT)  {  //  wasn't  an  int  natively?  convertNumberToInt();	  if((    _numTypesValid    &    NR_INT)    ==    0)    {    if(_numTypesValid    ==    NR_INT)    {    //    wasn't    an    int    natively?    convertNumberToInt();    //    let's    make    it    so,    if    possible    	non-compiled	[CE]  ';'  expected	65	None	replace
142	[BUG]  [BUGGY]  ||(_numTypesValid  >>  NR_UNKNOWN))  {  if(_numTypesValid  ==  NR_INT)  {  return  _parseIntValue();  }  [CE]  illegal  start  of  expression  [FE]            JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  ||(_numTypesValid  >>  NR_UNKNOWN))  {  if(_numTypesValid  ==  NR_INT)  {  return  _parseIntValue();  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	||(_numTypesValid  >>  NR_UNKNOWN))  {  if(_numTypesValid  ==  NR_INT)  {  return  _parseIntValue();  }	  if((    _numTypesValid    &    NR_INT)    ==    0)    {    if(_numTypesValid    ==    NR_INT)    {    return    _parseIntValue();    }    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
143	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_LONG)  {  if(_numTypesValid  ==  NR_LONG)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]              JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if(_numTypesValid  ==  NR_LONG)  {  if(_numTypesValid  ==  NR_LONG)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_numTypesValid  ==  NR_LONG)  {  if(_numTypesValid  ==  NR_LONG)  {  throw  new  IllegalArgumentException( " ");  }	  if(_numTypesValid    ==    -1)    {    if(_numTypesValid    ==    -1)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	46	None	replace
144	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_LONG)  {  [CE]  ';'  expected  [FE]                JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if(_numTypesValid  ==  NR_LONG)  {  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_numTypesValid  ==  NR_LONG)  {	  if(_numTypesValid    ==    -1)    {    	non-compiled	[CE]  ';'  expected	30	None	replace
145	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_INT)  {  throw  new  IllegalArgumentException(   "   ");  }  if(_numTypesValid  ==  NR_INT)  {  throw  new  IllegalArgumentException( " ".);  }  [CE]  <identifier>  expected  [FE]    JsonParseException    [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if(_numTypesValid  ==  NR_INT)  {  throw  new  IllegalArgumentException(   "   ");  }  if(_numTypesValid  ==  NR_INT)  {  throw  new  IllegalArgumentException( " ".);  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_numTypesValid    ==    NR_INT)    {    throw    new    IllegalArgumentException(   "   ");    }    if(_numTypesValid  ==  NR_INT)  {  throw  new  IllegalArgumentException( " ".);  }	  	non-compiled	[CE]  <identifier>  expected	55	None	add
146	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_LONG)  {  if(_numTypesValid  ==  NR_LONG)  {  convertNumberToInt();  }  [CE]  ';'  expected  [FE]                  JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if(_numTypesValid  ==  NR_LONG)  {  if(_numTypesValid  ==  NR_LONG)  {  convertNumberToInt();  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_numTypesValid  ==  NR_LONG)  {  if(_numTypesValid  ==  NR_LONG)  {  convertNumberToInt();  }	  if(_numTypesValid!=    0)    {    if(_numTypesValid    ==    0)    {    convertNumberToInt();    }    	non-compiled	[CE]  ';'  expected	47	None	replace
147	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_LONG)  {  if(_numTypesValid  ==  NR_UNKNOWN)  {  convertNumberToInt();  }  [CE]  ';'  expected  [FE]                    JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if(_numTypesValid  ==  NR_LONG)  {  if(_numTypesValid  ==  NR_UNKNOWN)  {  convertNumberToInt();  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_numTypesValid  ==  NR_LONG)  {  if(_numTypesValid  ==  NR_UNKNOWN)  {  convertNumberToInt();  }	  if(_numTypesValid!=    0)    {    if(_numTypesValid    ==    0)    {    convertNumberToInt();    }    	non-compiled	[CE]  ';'  expected	47	None	replace
148	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_LONG)  {  if(_numTypesValid  ==  NR_INT)  {  convertNumberToInt();  }  [CE]  ';'  expected  [FE]                    JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if(_numTypesValid  ==  NR_LONG)  {  if(_numTypesValid  ==  NR_INT)  {  convertNumberToInt();  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_numTypesValid  ==  NR_LONG)  {  if(_numTypesValid  ==  NR_INT)  {  convertNumberToInt();  }	  if(_numTypesValid    ==    0)    {    if(_numTypesValid    ==    NR_INT)    {    convertNumberToInt();    }    	non-compiled	[CE]  ';'  expected	4	None	replace
149	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_LONG)  {  if(_numTypesValid  ==  NR_LONG)  {  return  _parseIntValue();  }  [CE]  ';'  expected  [FE]                    JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if(_numTypesValid  ==  NR_LONG)  {  if(_numTypesValid  ==  NR_LONG)  {  return  _parseIntValue();  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_numTypesValid  ==  NR_LONG)  {  if(_numTypesValid  ==  NR_LONG)  {  return  _parseIntValue();  }	  if(_numTypesValid    ==    -1)    {    if(_numTypesValid    ==    -1)    {    return    _parseIntValue();    }    	non-compiled	[CE]  ';'  expected	29	None	replace
150	[BUG]  [BUGGY]  if(NR_INT  ==  0)  {  if(_numTypesValid  ==  NR_INT)  {  return  _parseIntValue();  }  [CE]  ';'  expected  [FE]                      JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if(NR_INT  ==  0)  {  if(_numTypesValid  ==  NR_INT)  {  return  _parseIntValue();  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(NR_INT  ==  0)  {  if(_numTypesValid  ==  NR_INT)  {  return  _parseIntValue();  }	  if(_numTypesValid    ==    -1)    {    if(_numTypesValid    ==    -1)    {    return    _parseIntValue();    }    	non-compiled	[CE]  ';'  expected	29	None	replace
151	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  _parseIntValue();  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	add	_parseIntValue();	  if(_numTypesValid    ==    NR_INT)    {    convertNumberToInt();    }    	compilable	  [FE]  JsonParseException  	50	8	replace
152	[BUG]  [BUGGY]  _parseIntValue();  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  _parseIntValue();  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	_parseIntValue();	  if(_numTypesValid    ==    NR_INT)    {    convertNumberToInt();    }    	compilable	  [FE]  JsonParseException  	50	8	replace
153	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_INT)  {  convertUnknownValue();  }  [CE]  cannot  find  symbol  [FE]      JsonParseException    [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if(_numTypesValid  ==  NR_INT)  {  convertUnknownValue();  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_numTypesValid  ==  NR_INT)  {  convertUnknownValue();  }	  if(_numTypesValid    ==    NR_INT)    {    convertNumberToInt();    }    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
154	[BUG]  [BUGGY]  JsonToken  t  =  _parsingContext.createChildObjectContext(-1,  -1);  [CE]  incompatible  types  [FE]              JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  JsonToken  t  =  _parsingContext.createChildObjectContext(-1,  -1);  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	JsonToken  t  =  _parsingContext.createChildObjectContext(-1,  -1);	          JsonToken    t    =    _parsingContext.getCurrentToken();    	non-compiled	[CE]  incompatible  types	40	None	replace
155	[BUG]  [BUGGY]  JsonToken  t  =  _parsingContext.createChildObjectContext(ctxt);  [CE]  cannot  find  symbol  ctxt  [FE]                JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  JsonToken  t  =  _parsingContext.createChildObjectContext(ctxt);  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	JsonToken  t  =  _parsingContext.createChildObjectContext(ctxt);	          JsonToken    t    =    _parsingContext.getCurrentToken();    	non-compiled	[CE]  cannot  find  symbol  ctxt	40	None	replace
156	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_LONG)  {  if(_numTypesValid  ==  NR_UNKNOWN)  {  convertNumberToInt();  return  _parseIntValue();  }  [CE]  ';'  expected  [FE]              JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if(_numTypesValid  ==  NR_LONG)  {  if(_numTypesValid  ==  NR_UNKNOWN)  {  convertNumberToInt();  return  _parseIntValue();  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_numTypesValid  ==  NR_LONG)  {  if(_numTypesValid  ==  NR_UNKNOWN)  {  convertNumberToInt();  return  _parseIntValue();  }	  if(_numTypesValid    ==    0)    {    if(_numTypesValid    ==    0)    {    convertNumberToInt();    return    _parseIntValue();    }    	non-compiled	[CE]  ';'  expected	31	None	replace
157	[BUG]  [BUGGY]  ||(_numTypesValid  ==  NR_NUMBER)&&(_numTypesValid  ==  NR_INT))  {  return  _parseIntValue();  }  [CE]  illegal  start  of  expression  [FE]                JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  ||(_numTypesValid  ==  NR_NUMBER)&&(_numTypesValid  ==  NR_INT))  {  return  _parseIntValue();  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	||(_numTypesValid  ==  NR_NUMBER)&&(_numTypesValid  ==  NR_INT))  {  return  _parseIntValue();  }	  ||(_numTypesValid    ==    NR_INT)&&(_numTypesValid    ==    NR_INT))    {    return    _parseIntValue();    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
158	[BUG]  [BUGGY]  if((  _numTypesValid  &  NR_INT)  ==  0)  {  if(_numTypesValid  ==  NR_INT)  {  //  wasn't  an  int  natively?  convertNumberToInt();  //  let's  make  it  so  [CE]  ';'  expected  [FE]              JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if((  _numTypesValid  &  NR_INT)  ==  0)  {  if(_numTypesValid  ==  NR_INT)  {  //  wasn't  an  int  natively?  convertNumberToInt();  //  let's  make  it  so  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if((  _numTypesValid  &  NR_INT)  ==  0)  {  if(_numTypesValid  ==  NR_INT)  {  //  wasn't  an  int  natively?  convertNumberToInt();  //  let's  make  it  so	  if((    _numTypesValid    &    NR_INT)    ==    0)    {    if(_numTypesValid    ==    NR_INT)    {    //    wasn't    an    int    natively?    convertNumberToInt();    //    let's    make    it    so,    if    possible    }    	non-compiled	[CE]  ';'  expected	64	None	replace
159	[BUG]  [BUGGY]  if(_currInputRow  >=  _inputEnd)  {  if(_numTypesValid  ==  NR_INT)  {  convertNumberToInt();  }  [CE]  ';'  expected  [FE]                    JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if(_currInputRow  >=  _inputEnd)  {  if(_numTypesValid  ==  NR_INT)  {  convertNumberToInt();  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_currInputRow  >=  _inputEnd)  {  if(_numTypesValid  ==  NR_INT)  {  convertNumberToInt();  }	  if(_inputPtr    >=    _inputEnd)    {    if(_numTypesValid    ==    NR_INT)    {    convertNumberToInt();    }    	non-compiled	[CE]  ';'  expected	63	None	replace
160	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]                JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(-1,  _numTypesValid);  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	add	_parsingContext  =  _parsingContext.createChildObjectContext(-1,  _numTypesValid);	          _parsingContext    =    _parsingContext.createChildObjectContext(-1);    	compilable	  [FE]  JsonParseException  	41	8	replace
161	[BUG]  [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(-1,  _numTypesValid);  [FE]  JsonParseException  [FE]                JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(-1,  _numTypesValid);  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	_parsingContext  =  _parsingContext.createChildObjectContext(-1,  _numTypesValid);	          _parsingContext    =    _parsingContext.createChildObjectContext(-1);    	compilable	  [FE]  JsonParseException  	41	8	replace
162	[BUG]  [BUGGY]  if(_numTypesValid  ==  INT  ||  _numTypesValid  ==  NR_UNKNOWN)  {  [CE]  ';'  expected  [FE]            JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if(_numTypesValid  ==  INT  ||  _numTypesValid  ==  NR_UNKNOWN)  {  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_numTypesValid  ==  INT  ||  _numTypesValid  ==  NR_UNKNOWN)  {	  if(_numTypesValid    ==    NR_UNKNOWN    ||    _numTypesValid    ==    NR_INT)    {    	non-compiled	[CE]  ';'  expected	25	None	replace
163	[BUG]  [BUGGY]  ||(_numTypesValid  >=  NR_UNKNOWN)&&(_numTypesValid  ==  NR_INT))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]              JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  ||(_numTypesValid  >=  NR_UNKNOWN)&&(_numTypesValid  ==  NR_INT))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	||(_numTypesValid  >=  NR_UNKNOWN)&&(_numTypesValid  ==  NR_INT))  {  throw  new  IllegalArgumentException( " ");  }	  ||(_numTypesValid    >>    NR_INT)&&(_numTypesValid    ==    NR_INT))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
164	[BUG]  [BUGGY]  if(_numTypesValid  ==  INT)  {  if(_numTypesValid  ==  NR_BIGINT)  {  return  _parseIntValue();  }  [CE]  ';'  expected  [FE]          JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if(_numTypesValid  ==  INT)  {  if(_numTypesValid  ==  NR_BIGINT)  {  return  _parseIntValue();  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_numTypesValid  ==  INT)  {  if(_numTypesValid  ==  NR_BIGINT)  {  return  _parseIntValue();  }	          if(_numTypesValid    ==    NR_INT)    {    if(_numTypesValid    ==    NR_BIGINT)    {    return    _parseIntValue();    }    	non-compiled	[CE]  ';'  expected	52	None	replace
165	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if(_numTypesValid  ==  NR_INT)  {  return  _parseIntValue();  }  if(_numTypesValid  ==  NR_INT)  {  return  getIntValue();  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	add	if(_numTypesValid    ==    NR_INT)    {    return    _parseIntValue();    }    if(_numTypesValid  ==  NR_INT)  {  return  getIntValue();  }	  	compilable	  [FE]  JsonParseException  	26	8	add
166	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_INT)  {  return  _parseIntValue();  }  if(_numTypesValid  ==  NR_INT)  {  return  getIntValue();  }  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if(_numTypesValid  ==  NR_INT)  {  return  _parseIntValue();  }  if(_numTypesValid  ==  NR_INT)  {  return  getIntValue();  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_numTypesValid    ==    NR_INT)    {    return    _parseIntValue();    }    if(_numTypesValid  ==  NR_INT)  {  return  getIntValue();  }	  	compilable	  [FE]  JsonParseException  	26	8	add
167	[BUG]  [BUGGY]          _parsingContext  =  _parsingContext.createChildObjectContext(-1,  -1);  JsonReadContext  _parsingContext  =  _parsingContext.createChildObjectContext(-1,  -1);  [CE]  variable  _parsingContext  might  not  have  been  initialized  [FE]    JsonParseException    [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]          _parsingContext  =  _parsingContext.createChildObjectContext(-1,  -1);  JsonReadContext  _parsingContext  =  _parsingContext.createChildObjectContext(-1,  -1);  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	                _parsingContext    =    _parsingContext.createChildObjectContext(-1,    -1);    JsonReadContext  _parsingContext  =  _parsingContext.createChildObjectContext(-1,  -1);	  	non-compiled	[CE]  variable  _parsingContext  might  not  have  been  initialized	36	None	add
168	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]          _parsingContext  =  _parsingContext.createChildObjectContext(-1,  -1);  JsonReadContext  ctxt  =  _parsingContext.createChildObjectContext(-1,  -1);  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	add	                _parsingContext    =    _parsingContext.createChildObjectContext(-1,    -1);    JsonReadContext  ctxt  =  _parsingContext.createChildObjectContext(-1,  -1);	  	compilable	  [FE]  JsonParseException  	36	9	add
169	[BUG]  [BUGGY]          _parsingContext  =  _parsingContext.createChildObjectContext(-1,  -1);  JsonReadContext  ctxt  =  _parsingContext.createChildObjectContext(-1,  -1);  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]          _parsingContext  =  _parsingContext.createChildObjectContext(-1,  -1);  JsonReadContext  ctxt  =  _parsingContext.createChildObjectContext(-1,  -1);  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	                _parsingContext    =    _parsingContext.createChildObjectContext(-1,    -1);    JsonReadContext  ctxt  =  _parsingContext.createChildObjectContext(-1,  -1);	  	compilable	  [FE]  JsonParseException  	36	9	add
170	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]        JsonParseException    [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]          _parsingContext  =  _parsingContext.createChildObjectContext(-1,  -1);  _parsingContext  =  _parsingContext.createChildArrayContext(-1,  -1);  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	add	                _parsingContext    =    _parsingContext.createChildObjectContext(-1,    -1);    _parsingContext  =  _parsingContext.createChildArrayContext(-1,  -1);	  	compilable	  [FE]  JsonParseException  	36	9	add
171	[BUG]  [BUGGY]          _parsingContext  =  _parsingContext.createChildObjectContext(-1,  -1);  _parsingContext  =  _parsingContext.createChildArrayContext(-1,  -1);  [FE]  JsonParseException  [FE]        JsonParseException    [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]          _parsingContext  =  _parsingContext.createChildObjectContext(-1,  -1);  _parsingContext  =  _parsingContext.createChildArrayContext(-1,  -1);  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	                _parsingContext    =    _parsingContext.createChildObjectContext(-1,    -1);    _parsingContext  =  _parsingContext.createChildArrayContext(-1,  -1);	  	compilable	  [FE]  JsonParseException  	36	9	add
172	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_INT  ||  _numTypesValid!=  NR_UNKNOWN)  {  [CE]  ';'  expected  [FE]              JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if(_numTypesValid  ==  NR_INT  ||  _numTypesValid!=  NR_UNKNOWN)  {  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_numTypesValid  ==  NR_INT  ||  _numTypesValid!=  NR_UNKNOWN)  {	  if(_numTypesValid    ==    NR_INT    ||    _numTypesValid    ==    NR_UNKNOWN)    {    	non-compiled	[CE]  ';'  expected	15	None	replace
173	[BUG]  [BUGGY]  int[]  values  =  _ioContext.getValues();  [CE]  cannot  find  symbol  [FE]        JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  int[]  values  =  _ioContext.getValues();  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	int[]  values  =  _ioContext.getValues();	          int[]    values    =    _parsingContext.getValues();    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
174	[BUG]  [BUGGY]  int[]  values  =  _currentContext.getValues();  [CE]  cannot  find  symbol  _currentContext  [FE]          JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  int[]  values  =  _currentContext.getValues();  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	int[]  values  =  _currentContext.getValues();	          int[]    values    =    _parsingContext.getValues();    	non-compiled	[CE]  cannot  find  symbol  _currentContext	51	None	replace
175	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(0,  0);  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	add	_parsingContext  =  _parsingContext.createChildObjectContext(0,  0);	          _parsingContext    =    _parsingContext.createChildObjectContext(-1,    -1);    	compilable	  [FE]  JsonParseException  	37	8	replace
176	[BUG]  [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(0,  0);  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(0,  0);  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	_parsingContext  =  _parsingContext.createChildObjectContext(0,  0);	          _parsingContext    =    _parsingContext.createChildObjectContext(-1,    -1);    	compilable	  [FE]  JsonParseException  	37	8	replace
177	[BUG]  [BUGGY]  if(_numTypesValid  ==  INT)  {  if(_numTypesValid  ==  INT  ||  _numTypesValid  ==  INT)  {  return  _parseIntValue();  }  [CE]  ';'  expected  [FE]        JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if(_numTypesValid  ==  INT)  {  if(_numTypesValid  ==  INT  ||  _numTypesValid  ==  INT)  {  return  _parseIntValue();  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_numTypesValid  ==  INT)  {  if(_numTypesValid  ==  INT  ||  _numTypesValid  ==  INT)  {  return  _parseIntValue();  }	  if(_numTypesValid    ==    NR_INT)    {    if(_numTypesValid    ==    NR_BIGINT    ||    _numTypesValid    ==    NR_BIGINT)    {    return    _parseIntValue();    }    	non-compiled	[CE]  ';'  expected	17	None	replace
178	[BUG]  [BUGGY]  if(_numTypesValid  ==  0)  {  if(_numTypesValid  ==  0  ||  _numTypesValid  ==  0)  {  return  _parseIntValue();  }  [CE]  ';'  expected  [FE]          JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if(_numTypesValid  ==  0)  {  if(_numTypesValid  ==  0  ||  _numTypesValid  ==  0)  {  return  _parseIntValue();  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_numTypesValid  ==  0)  {  if(_numTypesValid  ==  0  ||  _numTypesValid  ==  0)  {  return  _parseIntValue();  }	  if(_numTypesValid    ==    NR_INT)    {    if(_numTypesValid    ==    NR_BIGINT    ||    _numTypesValid    ==    NR_BIGINT)    {    return    _parseIntValue();    }    	non-compiled	[CE]  ';'  expected	17	None	replace
179	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  NR_INT  ||  _numTypesValid  ==  NR_INT)  {  return  _parseIntValue();  }  [CE]  ';'  expected  [FE]            JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  NR_INT  ||  _numTypesValid  ==  NR_INT)  {  return  _parseIntValue();  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  NR_INT  ||  _numTypesValid  ==  NR_INT)  {  return  _parseIntValue();  }	  if(_numTypesValid    ==    NR_INT)    {    if(_numTypesValid    ==    NR_BIGINT    ||    _numTypesValid    ==    NR_BIGINT)    {    return    _parseIntValue();    }    	non-compiled	[CE]  ';'  expected	17	None	replace
180	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]          _parsingContext  =  _parsingContext.getParent();  JsonReadContext  ctxt  =  _parsingContext.getParent();  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	add	                _parsingContext    =    _parsingContext.getParent();    JsonReadContext  ctxt  =  _parsingContext.getParent();	  	compilable	  [FE]  JsonParseException  	38	10	add
181	[BUG]  [BUGGY]          _parsingContext  =  _parsingContext.getParent();  JsonReadContext  ctxt  =  _parsingContext.getParent();  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]          _parsingContext  =  _parsingContext.getParent();  JsonReadContext  ctxt  =  _parsingContext.getParent();  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	                _parsingContext    =    _parsingContext.getParent();    JsonReadContext  ctxt  =  _parsingContext.getParent();	  	compilable	  [FE]  JsonParseException  	38	10	add
182	[BUG]  [BUGGY]          _parsingContext  =  _parsingContext.getParent();  JsonReadContext  _parsingContext  =  _parsingContext.getParent();  [CE]  variable  _parsingContext  might  not  have  been  initialized  [FE]      JsonParseException    [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]          _parsingContext  =  _parsingContext.getParent();  JsonReadContext  _parsingContext  =  _parsingContext.getParent();  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	                _parsingContext    =    _parsingContext.getParent();    JsonReadContext  _parsingContext  =  _parsingContext.getParent();	  	non-compiled	[CE]  variable  _parsingContext  might  not  have  been  initialized	38	None	add
183	[BUG]  [BUGGY]          _parsingContext  =  _parsingContext.getParent();  ((  JsonReadContext)_parsingContext).setCurrentName(_nameCopied);  [CE]  method  setCurrentName  in  class  JsonReadContext  cannot  be  applied  to  given  types;  [FE]        JsonParseException    [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]          _parsingContext  =  _parsingContext.getParent();  ((  JsonReadContext)_parsingContext).setCurrentName(_nameCopied);  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	                _parsingContext    =    _parsingContext.getParent();    ((  JsonReadContext)_parsingContext).setCurrentName(_nameCopied);	  	non-compiled	[CE]  method  setCurrentName  in  class  JsonReadContext  cannot  be  applied  to  given  types;	38	None	add
184	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_NUMBER)  {  [CE]  ';'  expected  [FE]                JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if(_numTypesValid  ==  NR_NUMBER)  {  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_numTypesValid  ==  NR_NUMBER)  {	  if(_numTypesValid    ==    0)    {    	non-compiled	[CE]  ';'  expected	16	None	replace
185	[BUG]  [BUGGY]  ||(_numTypesValid  >>  NR_UNKNOWN))  {  if(_numTypesValid  ==  NR_INT)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]            JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  ||(_numTypesValid  >>  NR_UNKNOWN))  {  if(_numTypesValid  ==  NR_INT)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	||(_numTypesValid  >>  NR_UNKNOWN))  {  if(_numTypesValid  ==  NR_INT)  {  throw  new  IllegalArgumentException( " ");  }	  if((    _numTypesValid    &    NR_INT)    ==    0)    {    if(_numTypesValid    ==    NR_INT)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
186	[BUG]  [BUGGY]  ||(_numTypesValid  >=  NR_UNKNOWN))  {  if(_numTypesValid  ==  NR_INT)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]              JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  ||(_numTypesValid  >=  NR_UNKNOWN))  {  if(_numTypesValid  ==  NR_INT)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	||(_numTypesValid  >=  NR_UNKNOWN))  {  if(_numTypesValid  ==  NR_INT)  {  throw  new  IllegalArgumentException( " ");  }	  if((    _numTypesValid    &    NR_INT)    ==    0)    {    if(_numTypesValid    ==    NR_INT)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
187	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	add	if(_numTypesValid  ==  NR_UNKNOWN)  {  throw  new  IllegalArgumentException( " ");  }	  if(_numTypesValid    ==    NR_INT)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  JsonParseException  	56	8	replace
188	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_numTypesValid  ==  NR_UNKNOWN)  {  throw  new  IllegalArgumentException( " ");  }	  if(_numTypesValid    ==    NR_INT)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  JsonParseException  	56	8	replace
189	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if(_numTypesValid  ==  NR_INT  ||  _numTypesValid  ==  NR_UNKNOWN)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	add	if(_numTypesValid  ==  NR_INT  ||  _numTypesValid  ==  NR_UNKNOWN)  {  throw  new  IllegalArgumentException( " ");  }	  if(_numTypesValid    ==    NR_INT)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  JsonParseException  	56	8	replace
190	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_INT  ||  _numTypesValid  ==  NR_UNKNOWN)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if(_numTypesValid  ==  NR_INT  ||  _numTypesValid  ==  NR_UNKNOWN)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_numTypesValid  ==  NR_INT  ||  _numTypesValid  ==  NR_UNKNOWN)  {  throw  new  IllegalArgumentException( " ");  }	  if(_numTypesValid    ==    NR_INT)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  JsonParseException  	56	8	replace
191	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_INTEGER)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  NR_INTEGER  [FE]        JsonParseException    [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if(_numTypesValid  ==  NR_INTEGER)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_numTypesValid  ==  NR_INTEGER)  {  throw  new  IllegalArgumentException( " ");  }	  if(_numTypesValid    ==    NR_INT)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  NR_INTEGER	56	None	replace
192	[BUG]  [BUGGY]  if(_numTypesValid!=  NR_UNKNOWN)  {  if(_numTypesValid  ==  NR_INT)  {  return  _parseIntValue();  }  [CE]  ';'  expected  [FE]                JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if(_numTypesValid!=  NR_UNKNOWN)  {  if(_numTypesValid  ==  NR_INT)  {  return  _parseIntValue();  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_numTypesValid!=  NR_UNKNOWN)  {  if(_numTypesValid  ==  NR_INT)  {  return  _parseIntValue();  }	  if(_numTypesValid    ==    0)    {    if(_numTypesValid    ==    NR_INT)    {    return    _parseIntValue();    }    	non-compiled	[CE]  ';'  expected	24	None	replace
193	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_INT)  {  convertNumberToInt();  }  if(_numTypesValid  ==  NR_INT)  {  transformNumberToInt();  }  [CE]  cannot  find  symbol  [FE]    JsonParseException    [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if(_numTypesValid  ==  NR_INT)  {  convertNumberToInt();  }  if(_numTypesValid  ==  NR_INT)  {  transformNumberToInt();  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_numTypesValid    ==    NR_INT)    {    convertNumberToInt();    }    if(_numTypesValid  ==  NR_INT)  {  transformNumberToInt();  }	  	non-compiled	[CE]  cannot  find  symbol	49	None	add
194	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_INT)  {  convertNumberToInt();  }  if(_numTypesValid  ==  NR_INT)  {  getNumberToInt();  }  [CE]  cannot  find  symbol  [FE]      JsonParseException    [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if(_numTypesValid  ==  NR_INT)  {  convertNumberToInt();  }  if(_numTypesValid  ==  NR_INT)  {  getNumberToInt();  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_numTypesValid    ==    NR_INT)    {    convertNumberToInt();    }    if(_numTypesValid  ==  NR_INT)  {  getNumberToInt();  }	  	non-compiled	[CE]  cannot  find  symbol	49	None	add
195	[BUG]  [BUGGY]  ||(_numTypesValid  ==  0)&&(_numTypesValid  ==  0))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]            JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  ||(_numTypesValid  ==  0)&&(_numTypesValid  ==  0))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	||(_numTypesValid  ==  0)&&(_numTypesValid  ==  0))  {  throw  new  IllegalArgumentException( " ");  }	  ||(_numTypesValid    ==    NR_INT)&&(_numTypesValid    ==    NR_INT))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
196	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_INTEGER)  {  return  _parseIntValue();  }  [CE]  cannot  find  symbol  NR_INTEGER  [FE]    JsonParseException    [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if(_numTypesValid  ==  NR_INTEGER)  {  return  _parseIntValue();  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_numTypesValid  ==  NR_INTEGER)  {  return  _parseIntValue();  }	  if(_numTypesValid    ==    NR_INT)    {    return    _parseIntValue();    }    	non-compiled	[CE]  cannot  find  symbol  NR_INTEGER	27	None	replace
197	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_INT)  {  return  _parseUnsignedIntValue();  }  [CE]  cannot  find  symbol  [FE]      JsonParseException    [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if(_numTypesValid  ==  NR_INT)  {  return  _parseUnsignedIntValue();  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_numTypesValid  ==  NR_INT)  {  return  _parseUnsignedIntValue();  }	  if(_numTypesValid    ==    NR_INT)    {    return    _parseIntValue();    }    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
198	[BUG]  [BUGGY]  ||(_numTypesValid  ==  0)&&(_numTypesValid  ==  0))  {  return  _parseIntValue();  }  [CE]  illegal  start  of  expression  [FE]                JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  ||(_numTypesValid  ==  0)&&(_numTypesValid  ==  0))  {  return  _parseIntValue();  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	||(_numTypesValid  ==  0)&&(_numTypesValid  ==  0))  {  return  _parseIntValue();  }	  ||(_numTypesValid    ==    NR_INT)&&(_numTypesValid    ==    NR_INT))    {    return    _parseIntValue();    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
199	[BUG]  [BUGGY]  ||(_numTypesValid  ==  NR_INT)&&(_inputPtr  >=  _inputEnd))  {  return  _parseIntValue();  }  [CE]  illegal  start  of  expression  [FE]                  JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  ||(_numTypesValid  ==  NR_INT)&&(_inputPtr  >=  _inputEnd))  {  return  _parseIntValue();  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	||(_numTypesValid  ==  NR_INT)&&(_inputPtr  >=  _inputEnd))  {  return  _parseIntValue();  }	  ||(_numTypesValid    ==    NR_INT)&&(_numTypesValid    ==    NR_INT))    {    return    _parseIntValue();    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
200	[BUG]  [BUGGY]  if((  _numTypesValid  &  NR_INT)  ==  0)  {  if(_numTypesValid  ==  -1)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]              JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if((  _numTypesValid  &  NR_INT)  ==  0)  {  if(_numTypesValid  ==  -1)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if((  _numTypesValid  &  NR_INT)  ==  0)  {  if(_numTypesValid  ==  -1)  {  throw  new  IllegalArgumentException( " ");  }	  if(_numTypesValid    ==    -1)    {    if(_numTypesValid    ==    -1)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	46	None	replace
201	[BUG]  [BUGGY]  if((  _numTypesValid  &  NR_INT)  ==  0)  {  if(_numTypesValid  ==  INT)  {  convertNumberToInt();  }  [CE]  ';'  expected  [FE]                JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if((  _numTypesValid  &  NR_INT)  ==  0)  {  if(_numTypesValid  ==  INT)  {  convertNumberToInt();  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if((  _numTypesValid  &  NR_INT)  ==  0)  {  if(_numTypesValid  ==  INT)  {  convertNumberToInt();  }	  if(_numTypesValid    ==    INT)    {    if(_numTypesValid    ==    INT)    {    convertNumberToInt();    }    	non-compiled	[CE]  ';'  expected	32	None	replace
202	[BUG]  [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  if(_numTypesValid  ==  NR_INT)  {  convertInt();  }  [CE]  ';'  expected  [FE]                    JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  if(_numTypesValid  ==  NR_INT)  {  convertInt();  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_inputPtr  >=  _inputEnd)  {  if(_numTypesValid  ==  NR_INT)  {  convertInt();  }	  if(_inputPtr    >=    _inputEnd)    {    if(_numTypesValid    ==    NR_INT)    {    convertNumberToInt();    }    	non-compiled	[CE]  ';'  expected	63	None	replace
203	[BUG]  [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  if(_numTypesValid  ==  NR_INT)  {  return  _parseIntValue();  }  [CE]  ';'  expected  [FE]                      JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  if(_numTypesValid  ==  NR_INT)  {  return  _parseIntValue();  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_inputPtr  >=  _inputEnd)  {  if(_numTypesValid  ==  NR_INT)  {  return  _parseIntValue();  }	  if(_inputPtr    >=    _inputEnd)    {    if(_numTypesValid    ==    NR_INT)    {    convertNumberToInt();    }    	non-compiled	[CE]  ';'  expected	63	None	replace
204	[BUG]  [BUGGY]  if(_numTypesValid  ==  0)  {  if(_numTypesValid  ==  0)  {  return  _parsingContext.getIntValue();  }  [CE]  ';'  expected  [FE]                JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if(_numTypesValid  ==  0)  {  if(_numTypesValid  ==  0)  {  return  _parsingContext.getIntValue();  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_numTypesValid  ==  0)  {  if(_numTypesValid  ==  0)  {  return  _parsingContext.getIntValue();  }	  if(_numTypesValid    ==    NR_INT)    {    if(_numTypesValid    ==    NR_INT)    {    //    wasn't    an    int    natively?    convertNumberToInt();    //    let's    make    it    so,    if    possible    }    	non-compiled	[CE]  ';'  expected	6	None	replace
205	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if(_numTypesValid  ==  NR_INT)  {  throw  new  IllegalArgumentException(   "   ");  }  if(_numTypesValid  ==  NR_INT)  {  throw  new  IllegalArgumentException( ".   ");  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	add	if(_numTypesValid    ==    NR_INT)    {    throw    new    IllegalArgumentException(   "   ");    }    if(_numTypesValid  ==  NR_INT)  {  throw  new  IllegalArgumentException( ".   ");  }	  	compilable	  [FE]  JsonParseException  	55	8	add
206	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_INT)  {  throw  new  IllegalArgumentException(   "   ");  }  if(_numTypesValid  ==  NR_INT)  {  throw  new  IllegalArgumentException( ".   ");  }  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if(_numTypesValid  ==  NR_INT)  {  throw  new  IllegalArgumentException(   "   ");  }  if(_numTypesValid  ==  NR_INT)  {  throw  new  IllegalArgumentException( ".   ");  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_numTypesValid    ==    NR_INT)    {    throw    new    IllegalArgumentException(   "   ");    }    if(_numTypesValid  ==  NR_INT)  {  throw  new  IllegalArgumentException( ".   ");  }	  	compilable	  [FE]  JsonParseException  	55	8	add
207	[BUG]  [BUGGY]  if((  _numTypesValid  &  NR_INT)  ==  0)  {  if(_numTypesValid  ==  NR_BIGINT)  {  return  _parseIntValue();  }  [CE]  ';'  expected  [FE]          JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if((  _numTypesValid  &  NR_INT)  ==  0)  {  if(_numTypesValid  ==  NR_BIGINT)  {  return  _parseIntValue();  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if((  _numTypesValid  &  NR_INT)  ==  0)  {  if(_numTypesValid  ==  NR_BIGINT)  {  return  _parseIntValue();  }	          if(_numTypesValid    ==    NR_INT)    {    if(_numTypesValid    ==    NR_BIGINT)    {    return    _parseIntValue();    }    	non-compiled	[CE]  ';'  expected	52	None	replace
208	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]                JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if(_numTypesValid  ==  NR_BIGINT)  {  return  _parseIntValue();  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	add	if(_numTypesValid  ==  NR_BIGINT)  {  return  _parseIntValue();  }	  if(_numTypesValid    ==    INT)    {    return    _parseIntValue();    }    	compilable	  [FE]  JsonParseException  	61	8	replace
209	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_BIGINT)  {  return  _parseIntValue();  }  [FE]  JsonParseException  [FE]                JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if(_numTypesValid  ==  NR_BIGINT)  {  return  _parseIntValue();  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_numTypesValid  ==  NR_BIGINT)  {  return  _parseIntValue();  }	  if(_numTypesValid    ==    INT)    {    return    _parseIntValue();    }    	compilable	  [FE]  JsonParseException  	61	8	replace
210	[BUG]  [BUGGY]  if((  _numTypesValid  &  NR_INT)  ==  0)  {  if(_numTypesValid  ==  NR_UNKNOWN)  {  //  let's  make  it  so,  if  possible  }  [CE]  ';'  expected  [FE]              JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if((  _numTypesValid  &  NR_INT)  ==  0)  {  if(_numTypesValid  ==  NR_UNKNOWN)  {  //  let's  make  it  so,  if  possible  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if((  _numTypesValid  &  NR_INT)  ==  0)  {  if(_numTypesValid  ==  NR_UNKNOWN)  {  //  let's  make  it  so,  if  possible  }	  if((    _numTypesValid    &    NR_INT)    ==    0)    {    if(_numTypesValid    ==    NR_INT)    {    //    wasn't    an    int    natively?    convertNumberToInt();    //    let's    make    it    so,    if    possible    }    	non-compiled	[CE]  ';'  expected	64	None	replace
211	[BUG]  [BUGGY]  if((  _numTypesValid  &  NR_INT)  ==  0)  {  if(_numTypesValid  ==  NR_UNKNOWN)  {  //  let's  make  it  so,  if  possible  [CE]  ';'  expected  [FE]                JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if((  _numTypesValid  &  NR_INT)  ==  0)  {  if(_numTypesValid  ==  NR_UNKNOWN)  {  //  let's  make  it  so,  if  possible  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if((  _numTypesValid  &  NR_INT)  ==  0)  {  if(_numTypesValid  ==  NR_UNKNOWN)  {  //  let's  make  it  so,  if  possible	  if((    _numTypesValid    &    NR_INT)    ==    0)    {    if(_numTypesValid    ==    NR_INT)    {    //    wasn't    an    int    natively?    convertNumberToInt();    //    let's    make    it    so,    if    possible    	non-compiled	[CE]  ';'  expected	65	None	replace
212	[BUG]  [BUGGY]  if((  _numTypesValid  &  NR_INT)  ==  0)  {  if(_numTypesValid  ==  NR_INT)  {  //  wasn't  an  int  natively?  convertNumberToInt();  //  let's  make  it  so,  if  [CE]  ';'  expected  [FE]                  JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if((  _numTypesValid  &  NR_INT)  ==  0)  {  if(_numTypesValid  ==  NR_INT)  {  //  wasn't  an  int  natively?  convertNumberToInt();  //  let's  make  it  so,  if  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if((  _numTypesValid  &  NR_INT)  ==  0)  {  if(_numTypesValid  ==  NR_INT)  {  //  wasn't  an  int  natively?  convertNumberToInt();  //  let's  make  it  so,  if	  if((    _numTypesValid    &    NR_INT)    ==    0)    {    if(_numTypesValid    ==    NR_INT)    {    //    wasn't    an    int    natively?    convertNumberToInt();    //    let's    make    it    so,    if    possible    	non-compiled	[CE]  ';'  expected	65	None	replace
213	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]                JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if((  _numTypesValid  &  NR_INT)  ==  0)  {  return  _parseIntValue();  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	add	if((  _numTypesValid  &  NR_INT)  ==  0)  {  return  _parseIntValue();  }	  if(_numTypesValid    ==    0)    {    if(_numTypesValid    ==    NR_INT)    {    return    _parseIntValue();    }    	compilable	  [FE]  JsonParseException  	24	8	replace
214	[BUG]  [BUGGY]  if((  _numTypesValid  &  NR_INT)  ==  0)  {  return  _parseIntValue();  }  [FE]  JsonParseException  [FE]                JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if((  _numTypesValid  &  NR_INT)  ==  0)  {  return  _parseIntValue();  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if((  _numTypesValid  &  NR_INT)  ==  0)  {  return  _parseIntValue();  }	  if(_numTypesValid    ==    0)    {    if(_numTypesValid    ==    NR_INT)    {    return    _parseIntValue();    }    	compilable	  [FE]  JsonParseException  	24	8	replace
215	[BUG]  [BUGGY]  if((  _numTypesValid  &  NR_INT)  ==  0)  {  if(_numTypesValid  ==  0)  {  convertNumberToInt();  }  [CE]  ';'  expected  [FE]                    JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if((  _numTypesValid  &  NR_INT)  ==  0)  {  if(_numTypesValid  ==  0)  {  convertNumberToInt();  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if((  _numTypesValid  &  NR_INT)  ==  0)  {  if(_numTypesValid  ==  0)  {  convertNumberToInt();  }	  if(_numTypesValid    <    0)    {    if(_numTypesValid    ==    0)    {    convertNumberToInt();    }    	non-compiled	[CE]  ';'  expected	48	None	replace
216	[BUG]  [BUGGY]  if((  _numTypesValid  &  NR_INT)  ==  0)  {  if(_numTypesValid  ==  NR_BIGINT  ||  _numTypesValid  ==  NR_BIGINT)  {  return  _parseIntValue();  }  [CE]  ';'  expected  [FE]        JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if((  _numTypesValid  &  NR_INT)  ==  0)  {  if(_numTypesValid  ==  NR_BIGINT  ||  _numTypesValid  ==  NR_BIGINT)  {  return  _parseIntValue();  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if((  _numTypesValid  &  NR_INT)  ==  0)  {  if(_numTypesValid  ==  NR_BIGINT  ||  _numTypesValid  ==  NR_BIGINT)  {  return  _parseIntValue();  }	  if(_numTypesValid    ==    NR_INT)    {    if(_numTypesValid    ==    NR_BIGINT    ||    _numTypesValid    ==    NR_BIGINT)    {    return    _parseIntValue();    }    	non-compiled	[CE]  ';'  expected	17	None	replace
217	[BUG]  [BUGGY]  if((  _numTypesValid  &  NR_INT)!=  0)  {  if(_numTypesValid  ==  NR_INT)  {  return  _parseIntValue();  }  [CE]  ';'  expected  [FE]            JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if((  _numTypesValid  &  NR_INT)!=  0)  {  if(_numTypesValid  ==  NR_INT)  {  return  _parseIntValue();  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if((  _numTypesValid  &  NR_INT)!=  0)  {  if(_numTypesValid  ==  NR_INT)  {  return  _parseIntValue();  }	  if((    _numTypesValid    &    NR_INT)    ==    0)    {    if(_numTypesValid    ==    NR_INT)    {    return    _parseIntValue();    }    	non-compiled	[CE]  ';'  expected	57	None	replace
218	[BUG]  [BUGGY]  if((  _numTypesValid  &  NR_INT)!=  0)  {  if(_numTypesValid  ==  NR_UNKNOWN)  {  return  _parseIntValue();  }  [CE]  ';'  expected  [FE]              JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if((  _numTypesValid  &  NR_INT)!=  0)  {  if(_numTypesValid  ==  NR_UNKNOWN)  {  return  _parseIntValue();  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if((  _numTypesValid  &  NR_INT)!=  0)  {  if(_numTypesValid  ==  NR_UNKNOWN)  {  return  _parseIntValue();  }	  if((    _numTypesValid    &    NR_INT)    ==    0)    {    if(_numTypesValid    ==    NR_INT)    {    return    _parseIntValue();    }    	non-compiled	[CE]  ';'  expected	57	None	replace
219	[BUG]  [BUGGY]  if((  _numTypesValid  &  NR_INT)!=  0)  {  if(_numTypesValid  ==  NR_INT)  {  convertNumberToInt();  }  [CE]  ';'  expected  [FE]                  JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if((  _numTypesValid  &  NR_INT)!=  0)  {  if(_numTypesValid  ==  NR_INT)  {  convertNumberToInt();  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if((  _numTypesValid  &  NR_INT)!=  0)  {  if(_numTypesValid  ==  NR_INT)  {  convertNumberToInt();  }	  if((    _numTypesValid    &    NR_INT)    ==    0)    {    if(_numTypesValid    ==    NR_INT)    {    convertNumberToInt();    }    	non-compiled	[CE]  ';'  expected	62	None	replace
220	[BUG]  [BUGGY]  if((  _numTypesValid  &  NR_INT)  ==  0)  {  if(_numTypesValid  ==  NR_UNKNOWN)  {  convertNumberToInt();  }  [CE]  ';'  expected  [FE]                    JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if((  _numTypesValid  &  NR_INT)  ==  0)  {  if(_numTypesValid  ==  NR_UNKNOWN)  {  convertNumberToInt();  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if((  _numTypesValid  &  NR_INT)  ==  0)  {  if(_numTypesValid  ==  NR_UNKNOWN)  {  convertNumberToInt();  }	  if((    _numTypesValid    &    NR_INT)    ==    0)    {    if(_numTypesValid    ==    NR_INT)    {    convertNumberToInt();    }    	non-compiled	[CE]  ';'  expected	62	None	replace
221	[BUG]  [BUGGY]  if((  _numTypesValid  &  INT)  ==  0)  {  if(_numTypesValid  ==  INT)  {  convertNumberToInt();  }  [CE]  ';'  expected  [FE]                      JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if((  _numTypesValid  &  INT)  ==  0)  {  if(_numTypesValid  ==  INT)  {  convertNumberToInt();  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if((  _numTypesValid  &  INT)  ==  0)  {  if(_numTypesValid  ==  INT)  {  convertNumberToInt();  }	  if((    _numTypesValid    &    NR_INT)    ==    0)    {    if(_numTypesValid    ==    NR_INT)    {    convertNumberToInt();    }    	non-compiled	[CE]  ';'  expected	62	None	replace
222	[BUG]  [BUGGY]  ||(_numTypesValid  &  NR_INT)  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  ||(_numTypesValid  &  NR_INT)  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	||(_numTypesValid  &  NR_INT)  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(_numTypesValid    ==    0)    {    if(_numTypesValid    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
223	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]                JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(-1,  0);  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	add	_parsingContext  =  _parsingContext.createChildObjectContext(-1,  0);	          _parsingContext    =    _parsingContext.createChildObjectContext(-1);    	compilable	  [FE]  JsonParseException  	41	8	replace
224	[BUG]  [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(-1,  0);  [FE]  JsonParseException  [FE]                JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(-1,  0);  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	_parsingContext  =  _parsingContext.createChildObjectContext(-1,  0);	          _parsingContext    =    _parsingContext.createChildObjectContext(-1);    	compilable	  [FE]  JsonParseException  	41	8	replace
225	[BUG]  [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(-1,  -_numberNegative);  [CE]  bad  operand  type  boolean  for  unary  operator  '-'  [FE]                  JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(-1,  -_numberNegative);  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	_parsingContext  =  _parsingContext.createChildObjectContext(-1,  -_numberNegative);	          _parsingContext    =    _parsingContext.createChildObjectContext(-1);    	non-compiled	[CE]  bad  operand  type  boolean  for  unary  operator  '-'	41	None	replace
226	[BUG]  [BUGGY]  if((  _numTypesValid  &  NR_INT)  ==  0)  {  if(_numTypesValid  ==  INT)  {  return  _parseIntValue();  }  [CE]  ';'  expected  [FE]                  JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if((  _numTypesValid  &  NR_INT)  ==  0)  {  if(_numTypesValid  ==  INT)  {  return  _parseIntValue();  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if((  _numTypesValid  &  NR_INT)  ==  0)  {  if(_numTypesValid  ==  INT)  {  return  _parseIntValue();  }	  if(_numTypesValid    ==    INT)    {    if(_numTypesValid    ==    INT)    {    return    _parseIntValue();    }    	non-compiled	[CE]  ';'  expected	28	None	replace
227	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_INT)  {  if(_numTypesValid  ==  INT)  {  return  _parseIntValue();  }  [CE]  ';'  expected  [FE]                    JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if(_numTypesValid  ==  NR_INT)  {  if(_numTypesValid  ==  INT)  {  return  _parseIntValue();  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_numTypesValid  ==  NR_INT)  {  if(_numTypesValid  ==  INT)  {  return  _parseIntValue();  }	  if(_numTypesValid    ==    INT)    {    if(_numTypesValid    ==    INT)    {    return    _parseIntValue();    }    	non-compiled	[CE]  ';'  expected	28	None	replace
228	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if(_numTypesValid  ==  NR_INT  ||  _numTypesValid  ==  NR_UNKNOWN)  {  convertNumberToInt();  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	add	if(_numTypesValid  ==  NR_INT  ||  _numTypesValid  ==  NR_UNKNOWN)  {  convertNumberToInt();  }	  if(_numTypesValid    ==    NR_INT)    {    convertNumberToInt();    }    	compilable	  [FE]  JsonParseException  	50	8	replace
229	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_INT  ||  _numTypesValid  ==  NR_UNKNOWN)  {  convertNumberToInt();  }  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if(_numTypesValid  ==  NR_INT  ||  _numTypesValid  ==  NR_UNKNOWN)  {  convertNumberToInt();  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_numTypesValid  ==  NR_INT  ||  _numTypesValid  ==  NR_UNKNOWN)  {  convertNumberToInt();  }	  if(_numTypesValid    ==    NR_INT)    {    convertNumberToInt();    }    	compilable	  [FE]  JsonParseException  	50	8	replace
230	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_INT)  {  convertInt();  }  [CE]  cannot  find  symbol  [FE]      JsonParseException    [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if(_numTypesValid  ==  NR_INT)  {  convertInt();  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_numTypesValid  ==  NR_INT)  {  convertInt();  }	  if(_numTypesValid    ==    NR_INT)    {    convertNumberToInt();    }    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
231	[BUG]  [BUGGY]  int[]  values  =  _parsingContext.getValuesInYear();  [CE]  cannot  find  symbol  [FE]        JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  int[]  values  =  _parsingContext.getValuesInYear();  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	int[]  values  =  _parsingContext.getValuesInYear();	          int[]    values    =    _parsingContext.getValues();    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
232	[BUG]  [BUGGY]  if((  _numTypesValid  &  NR_INT)  ==  0)  {  if(_numTypesValid  ==  -1)  {  return  _parseIntValue();  }  [CE]  ';'  expected  [FE]                    JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if((  _numTypesValid  &  NR_INT)  ==  0)  {  if(_numTypesValid  ==  -1)  {  return  _parseIntValue();  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if((  _numTypesValid  &  NR_INT)  ==  0)  {  if(_numTypesValid  ==  -1)  {  return  _parseIntValue();  }	  if(_numTypesValid    ==    -1)    {    if(_numTypesValid    ==    -1)    {    return    _parseIntValue();    }    	non-compiled	[CE]  ';'  expected	29	None	replace
233	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_INT)  {  if(_numTypesValid  ==  -1)  {  return  _parseIntValue();  }  [CE]  ';'  expected  [FE]                      JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if(_numTypesValid  ==  NR_INT)  {  if(_numTypesValid  ==  -1)  {  return  _parseIntValue();  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_numTypesValid  ==  NR_INT)  {  if(_numTypesValid  ==  -1)  {  return  _parseIntValue();  }	  if(_numTypesValid    ==    -1)    {    if(_numTypesValid    ==    -1)    {    return    _parseIntValue();    }    	non-compiled	[CE]  ';'  expected	29	None	replace
234	[BUG]  [BUGGY]  ||(_numTypesValid  ==  NR_UNKNOWN))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]            JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  ||(_numTypesValid  ==  NR_UNKNOWN))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	||(_numTypesValid  ==  NR_UNKNOWN))  {  throw  new  IllegalArgumentException( " ");  }	  if((    _numTypesValid    &    NR_INT)    ==    0)    {    if(_numTypesValid    ==    NR_INT)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
235	[BUG]  [BUGGY]  ||(_numTypesValid  ==  NR_UNKNOWN)&&(_numTypesValid  ==  NR_INCONCLUSIVE))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]              JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  ||(_numTypesValid  ==  NR_UNKNOWN)&&(_numTypesValid  ==  NR_INCONCLUSIVE))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	||(_numTypesValid  ==  NR_UNKNOWN)&&(_numTypesValid  ==  NR_INCONCLUSIVE))  {  throw  new  IllegalArgumentException( " ");  }	  if((    _numTypesValid    &    NR_INT)    ==    0)    {    if(_numTypesValid    ==    NR_INT)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
236	[BUG]  [BUGGY]  if(_numTypesValid  <  =  NR_UNKNOWN)  {  if(_numTypesValid  ==  NR_INT)  {  convertNumberToInt();  }  [CE]  illegal  start  of  expression  [FE]                  JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if(_numTypesValid  <  =  NR_UNKNOWN)  {  if(_numTypesValid  ==  NR_INT)  {  convertNumberToInt();  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_numTypesValid  <  =  NR_UNKNOWN)  {  if(_numTypesValid  ==  NR_INT)  {  convertNumberToInt();  }	  if(_numTypesValid    <    =    NR_INT)    {    if(_numTypesValid    ==    NR_INT)    {    convertNumberToInt();    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
237	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if(_numTypesValid  ==  NR_INT  ||  _numTypesValid  ==  NR_UNKNOWN)  {  return  _parseIntValue();  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	add	if(_numTypesValid  ==  NR_INT  ||  _numTypesValid  ==  NR_UNKNOWN)  {  return  _parseIntValue();  }	  if(_numTypesValid    ==    NR_INT)    {    return    _parseIntValue();    }    	compilable	  [FE]  JsonParseException  	27	8	replace
238	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_INT  ||  _numTypesValid  ==  NR_UNKNOWN)  {  return  _parseIntValue();  }  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if(_numTypesValid  ==  NR_INT  ||  _numTypesValid  ==  NR_UNKNOWN)  {  return  _parseIntValue();  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_numTypesValid  ==  NR_INT  ||  _numTypesValid  ==  NR_UNKNOWN)  {  return  _parseIntValue();  }	  if(_numTypesValid    ==    NR_INT)    {    return    _parseIntValue();    }    	compilable	  [FE]  JsonParseException  	27	8	replace
239	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if(_numTypesValid  ==  NR_INT)  {  return  0;  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	add	if(_numTypesValid  ==  NR_INT)  {  return  0;  }	  if(_numTypesValid    ==    NR_INT)    {    return    _parseIntValue();    }    	compilable	  [FE]  JsonParseException  	27	8	replace
240	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_INT)  {  return  0;  }  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if(_numTypesValid  ==  NR_INT)  {  return  0;  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_numTypesValid  ==  NR_INT)  {  return  0;  }	  if(_numTypesValid    ==    NR_INT)    {    return    _parseIntValue();    }    	compilable	  [FE]  JsonParseException  	27	8	replace
241	[BUG]  [BUGGY]  if((  _numTypesValid  &  NR_INT)  ==  0)  {  if(_numTypesValid  ==  INT)  {  //  wasn't  an  int  natively?  convertNumberToInt();  //  let's  make  it  so,  if  possible  }  [CE]  ';'  expected  [FE]                JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if((  _numTypesValid  &  NR_INT)  ==  0)  {  if(_numTypesValid  ==  INT)  {  //  wasn't  an  int  natively?  convertNumberToInt();  //  let's  make  it  so,  if  possible  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if((  _numTypesValid  &  NR_INT)  ==  0)  {  if(_numTypesValid  ==  INT)  {  //  wasn't  an  int  natively?  convertNumberToInt();  //  let's  make  it  so,  if  possible  }	  if(_numTypesValid    ==    INT)    {    if(_numTypesValid    ==    INT)    {    //    wasn't    an    int    natively?    convertNumberToInt();    //    let's    make    it    so,    if    possible    }    	non-compiled	[CE]  ';'  expected	34	None	replace
242	[BUG]  [BUGGY]          _parsingContext  =  _parsingContext.createChildObjectContext(-1,  -1);  int  _parsingContext  =  _parsingContext.createChildObjectContext(-1,  -1);  [CE]  int  cannot  be  dereferenced  [FE]    JsonParseException    [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]          _parsingContext  =  _parsingContext.createChildObjectContext(-1,  -1);  int  _parsingContext  =  _parsingContext.createChildObjectContext(-1,  -1);  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	                _parsingContext    =    _parsingContext.createChildObjectContext(-1,    -1);    int  _parsingContext  =  _parsingContext.createChildObjectContext(-1,  -1);	  	non-compiled	[CE]  int  cannot  be  dereferenced	36	None	add
243	[BUG]  [BUGGY]          _parsingContext  =  _parsingContext.createChildObjectContext(-1,  -1);  JsonToken  m  =  _parsingContext.createChildObjectContext(-1,  -1);  [CE]  incompatible  types  [FE]      JsonParseException    [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]          _parsingContext  =  _parsingContext.createChildObjectContext(-1,  -1);  JsonToken  m  =  _parsingContext.createChildObjectContext(-1,  -1);  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	                _parsingContext    =    _parsingContext.createChildObjectContext(-1,    -1);    JsonToken  m  =  _parsingContext.createChildObjectContext(-1,  -1);	  	non-compiled	[CE]  incompatible  types	36	None	add
244	[BUG]  [BUGGY]  if((  _numTypesValid  &  NR_INT)  ==  0)  {  if(_numTypesValid  ==  0)  {  convertNumberToInt();  return  _parseIntValue();  }  [CE]  ';'  expected  [FE]              JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if((  _numTypesValid  &  NR_INT)  ==  0)  {  if(_numTypesValid  ==  0)  {  convertNumberToInt();  return  _parseIntValue();  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if((  _numTypesValid  &  NR_INT)  ==  0)  {  if(_numTypesValid  ==  0)  {  convertNumberToInt();  return  _parseIntValue();  }	  if(_numTypesValid    ==    0)    {    if(_numTypesValid    ==    0)    {    convertNumberToInt();    return    _parseIntValue();    }    	non-compiled	[CE]  ';'  expected	31	None	replace
245	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_INT)  {  if(_numTypesValid  ==  0)  {  convertNumberToInt();  return  _parseIntValue();  }  [CE]  ';'  expected  [FE]                JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if(_numTypesValid  ==  NR_INT)  {  if(_numTypesValid  ==  0)  {  convertNumberToInt();  return  _parseIntValue();  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_numTypesValid  ==  NR_INT)  {  if(_numTypesValid  ==  0)  {  convertNumberToInt();  return  _parseIntValue();  }	  if(_numTypesValid    ==    0)    {    if(_numTypesValid    ==    0)    {    convertNumberToInt();    return    _parseIntValue();    }    	non-compiled	[CE]  ';'  expected	31	None	replace
246	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  0)  {  convertNumberToInt();  return  _parseIntValue();  }  [CE]  ';'  expected  [FE]                  JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  0)  {  convertNumberToInt();  return  _parseIntValue();  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  0)  {  convertNumberToInt();  return  _parseIntValue();  }	  if(_numTypesValid    ==    0)    {    if(_numTypesValid    ==    0)    {    convertNumberToInt();    return    _parseIntValue();    }    	non-compiled	[CE]  ';'  expected	31	None	replace
247	[BUG]  [BUGGY]          _parsingContext  =  _parsingContext.getParent();  int  _parsingContext  =  _parsingContext.getParent();  [CE]  int  cannot  be  dereferenced  [FE]    JsonParseException    [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]          _parsingContext  =  _parsingContext.getParent();  int  _parsingContext  =  _parsingContext.getParent();  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	                _parsingContext    =    _parsingContext.getParent();    int  _parsingContext  =  _parsingContext.getParent();	  	non-compiled	[CE]  int  cannot  be  dereferenced	38	None	add
248	[BUG]  [BUGGY]          _parsingContext  =  _parsingContext.getParent();  ((  JsonReadContext)_parsingContext).setLength(0);  [CE]  cannot  find  symbol  [FE]      JsonParseException    [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]          _parsingContext  =  _parsingContext.getParent();  ((  JsonReadContext)_parsingContext).setLength(0);  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	                _parsingContext    =    _parsingContext.getParent();    ((  JsonReadContext)_parsingContext).setLength(0);	  	non-compiled	[CE]  cannot  find  symbol	38	None	add
249	[BUG]  [BUGGY]  if((  _numTypesValid  &  NR_INT)  ==  0)  {  if(_numTypesValid  ==  0)  {  return  _parseIntValue();  }  [CE]  ';'  expected  [FE]              JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if((  _numTypesValid  &  NR_INT)  ==  0)  {  if(_numTypesValid  ==  0)  {  return  _parseIntValue();  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if((  _numTypesValid  &  NR_INT)  ==  0)  {  if(_numTypesValid  ==  0)  {  return  _parseIntValue();  }	  if(_numTypesValid    ==    0)    {    if(_numTypesValid    ==    0)    {    return    _parseIntValue();    }    	non-compiled	[CE]  ';'  expected	5	None	replace
250	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  0)  {  return  _parseIntValue();  }  [CE]  ';'  expected  [FE]                JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  0)  {  return  _parseIntValue();  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_numTypesValid  ==  NR_UNKNOWN)  {  if(_numTypesValid  ==  0)  {  return  _parseIntValue();  }	  if(_numTypesValid    ==    0)    {    if(_numTypesValid    ==    0)    {    return    _parseIntValue();    }    	non-compiled	[CE]  ';'  expected	5	None	replace
251	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_INT)  {  if(_numTypesValid  ==  0)  {  return  _parseIntValue();  }  [CE]  ';'  expected  [FE]                  JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if(_numTypesValid  ==  NR_INT)  {  if(_numTypesValid  ==  0)  {  return  _parseIntValue();  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_numTypesValid  ==  NR_INT)  {  if(_numTypesValid  ==  0)  {  return  _parseIntValue();  }	  if(_numTypesValid    ==    0)    {    if(_numTypesValid    ==    0)    {    return    _parseIntValue();    }    	non-compiled	[CE]  ';'  expected	5	None	replace
252	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN)  {  //  let's  make  it  so,  if  possible  }  [CE]  ';'  expected  [FE]                JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if(_numTypesValid  ==  NR_UNKNOWN)  {  //  let's  make  it  so,  if  possible  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_numTypesValid  ==  NR_UNKNOWN)  {  //  let's  make  it  so,  if  possible  }	  if(_numTypesValid    ==    NR_INT)    {    //    wasn't    an    int    natively?    convertNumberToInt();    //    let's    make    it    so,    if    possible    }    	non-compiled	[CE]  ';'  expected	43	None	replace
253	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]                    JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if((  _numTypesValid  &  NR_INT)  ==  0)  {  convertNumberToInt();  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	add	if((  _numTypesValid  &  NR_INT)  ==  0)  {  convertNumberToInt();  }	  if(_numTypesValid    ==    0)    {    if(_numTypesValid    ==    NR_INT)    {    convertNumberToInt();    }    	compilable	  [FE]  JsonParseException  	4	8	replace
254	[BUG]  [BUGGY]  if((  _numTypesValid  &  NR_INT)  ==  0)  {  convertNumberToInt();  }  [FE]  JsonParseException  [FE]                    JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if((  _numTypesValid  &  NR_INT)  ==  0)  {  convertNumberToInt();  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if((  _numTypesValid  &  NR_INT)  ==  0)  {  convertNumberToInt();  }	  if(_numTypesValid    ==    0)    {    if(_numTypesValid    ==    NR_INT)    {    convertNumberToInt();    }    	compilable	  [FE]  JsonParseException  	4	8	replace
255	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_INT  ||  _numTypesValid  ==  NR_NUMBER)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  NR_NUMBER  [FE]    JsonParseException    [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if(_numTypesValid  ==  NR_INT  ||  _numTypesValid  ==  NR_NUMBER)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_numTypesValid  ==  NR_INT  ||  _numTypesValid  ==  NR_NUMBER)  {  throw  new  IllegalArgumentException( " ");  }	  if(_numTypesValid    ==    NR_INT)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  NR_NUMBER	56	None	replace
256	[BUG]  [BUGGY]  if((  _numTypesValid  &  NR_INT)  ==  0)  {  if(_numTypesValid  ==  INT)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]            JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if((  _numTypesValid  &  NR_INT)  ==  0)  {  if(_numTypesValid  ==  INT)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if((  _numTypesValid  &  NR_INT)  ==  0)  {  if(_numTypesValid  ==  INT)  {  throw  new  IllegalArgumentException( " ");  }	  if(_numTypesValid    ==    INT)    {    if(_numTypesValid    ==    INT)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	45	None	replace
257	[BUG]  [BUGGY]  if(_numTypesValid  ==  NR_NUMBER)  {  if(_numTypesValid  ==  NR_INT)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]              JsonParseException      [CONTEXT]      public  int  getIntValue()  throws  IOException  {  if  ((_numTypesValid  &  NR_INT)  ==  0)  {  if  (_numTypesValid  ==  NR_UNKNOWN)  {  //  not  parsed  at  all  return  _parseIntValue();  }      [BUGGY]  if(_numTypesValid  ==  NR_NUMBER)  {  if(_numTypesValid  ==  NR_INT)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      convertNumberToInt();  //  let's  make  it  so,  if  possible  }  }  return  _numberInt;  }  [CLASS]  ParserBase  [METHOD]  getIntValue  [RETURN_TYPE]  int  [VARIABLES]  double  _numberDouble  d  value  ByteArrayBuilder  _byteArrayBuilder  builder  int  _currInputRow  _currInputRowStart  _expLength  _fractLength  _inputEnd  _inputPtr  _intLength  _numTypesValid  _numberInt  _tokenInputCol  _tokenInputRow  changed  changedFeatures  changes  col  expLen  f  features  fractLen  intLen  mask  newFeatureFlags  newMask  newState  oldState  values  long  _currInputProcessed  _numberLong  _tokenInputTotal  BigDecimal  _numberBigDecimal  char[]  _nameCopyBuffer  buf  JsonReadContext  _parsingContext  ctxt  parent  byte[]  _binaryValue  boolean  _closed  _nameCopied  _numberNegative  negative  TextBuffer  _textBuffer  IOContext  _ioContext  ctxt  BigInteger  _numberBigInt  JsonToken  _nextToken  	projects/JacksonCore24/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java	0.4743416490252569	648	650	8	replace	if(_numTypesValid  ==  NR_NUMBER)  {  if(_numTypesValid  ==  NR_INT)  {  throw  new  IllegalArgumentException( " ");  }	  if(_numTypesValid    ==    INT)    {    if(_numTypesValid    ==    INT)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	45	None	replace
