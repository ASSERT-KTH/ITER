bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(value.getType()  ==  Token.FUNCTION)  {  throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "  parent: "  +  value.getString());  }  [CE]  illegal  start  of  expression  [FE]            IllegalStateException    [CONTEXT]    default:    if  (isAssignmentOp(value)  ||  isSimpleOperator(value)  ||  isImmutableValue(value))  {  return  true;  }    [BUGGY]  if(value.getType()  ==  Token.FUNCTION)  {  throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "  parent: "  +  value.getString());  }  [BUGGY]     "Unexpected  expression  node   "  +  value  +     "\n  parent:   "  +  value.getParent());  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  value  String  JSC_PROPERTY_NAME_FN  childValue  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  rawJsString  res  s  sourceName  value  Map  vars  int  c  charno  end  endPos  index  len  lineno  memberIndex  nextSkipSlot  nextSlot  operator  prototypeIdx  start  startPos  total  type  Predicate  locals  	projects/Closure80/src/com/google/javascript/jscomp/NodeUtil.java	0.7071067811865475	2923	2925	2	replace	if(value.getType()  ==  Token.FUNCTION)  {  throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "  parent: "  +  value.getString());  }	  throw    new    IllegalStateException(   "Unexpected    expression    node   "    +    value    +   "n    parent:   "    +    value.getString());    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
2	[BUG]  [BUGGY]  if(value.getType()  ==  Token.NAME)  {  throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "  parent: "  +  value.getString());  }  [CE]  illegal  start  of  expression  [FE]              IllegalStateException    [CONTEXT]    default:    if  (isAssignmentOp(value)  ||  isSimpleOperator(value)  ||  isImmutableValue(value))  {  return  true;  }    [BUGGY]  if(value.getType()  ==  Token.NAME)  {  throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "  parent: "  +  value.getString());  }  [BUGGY]     "Unexpected  expression  node   "  +  value  +     "\n  parent:   "  +  value.getParent());  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  value  String  JSC_PROPERTY_NAME_FN  childValue  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  rawJsString  res  s  sourceName  value  Map  vars  int  c  charno  end  endPos  index  len  lineno  memberIndex  nextSkipSlot  nextSlot  operator  prototypeIdx  start  startPos  total  type  Predicate  locals  	projects/Closure80/src/com/google/javascript/jscomp/NodeUtil.java	0.7071067811865475	2923	2925	2	replace	if(value.getType()  ==  Token.NAME)  {  throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "  parent: "  +  value.getString());  }	  throw    new    IllegalStateException(   "Unexpected    expression    node   "    +    value    +   "n    parent:   "    +    value.getString());    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
3	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "  parent: "  +  value.getString());  [CE]  illegal  start  of  expression  [FE]                IllegalStateException    [CONTEXT]    default:    if  (isAssignmentOp(value)  ||  isSimpleOperator(value)  ||  isImmutableValue(value))  {  return  true;  }    [BUGGY]  Throwables.throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "  parent: "  +  value.getString());  [BUGGY]     "Unexpected  expression  node   "  +  value  +     "\n  parent:   "  +  value.getParent());  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  value  String  JSC_PROPERTY_NAME_FN  childValue  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  rawJsString  res  s  sourceName  value  Map  vars  int  c  charno  end  endPos  index  len  lineno  memberIndex  nextSkipSlot  nextSlot  operator  prototypeIdx  start  startPos  total  type  Predicate  locals  	projects/Closure80/src/com/google/javascript/jscomp/NodeUtil.java	0.7071067811865475	2923	2925	2	replace	Throwables.throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "  parent: "  +  value.getString());	  throw    new    IllegalStateException(   "Unexpected    expression    node   "    +    value    +   "n    parent:   "    +    value.getString());    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
4	[BUG]  [BUGGY]  parent  ==  null  &&  value.getType()  ==  Token.FUNCTION)  {  throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "n  parent: "  +  value.getParent());  }  [CE]  illegal  start  of  expression  [FE]          IllegalStateException    [CONTEXT]    default:    if  (isAssignmentOp(value)  ||  isSimpleOperator(value)  ||  isImmutableValue(value))  {  return  true;  }    [BUGGY]  parent  ==  null  &&  value.getType()  ==  Token.FUNCTION)  {  throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "n  parent: "  +  value.getParent());  }  [BUGGY]     "Unexpected  expression  node   "  +  value  +     "\n  parent:   "  +  value.getParent());  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  value  String  JSC_PROPERTY_NAME_FN  childValue  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  rawJsString  res  s  sourceName  value  Map  vars  int  c  charno  end  endPos  index  len  lineno  memberIndex  nextSkipSlot  nextSlot  operator  prototypeIdx  start  startPos  total  type  Predicate  locals  	projects/Closure80/src/com/google/javascript/jscomp/NodeUtil.java	0.7071067811865475	2923	2925	2	replace	parent  ==  null  &&  value.getType()  ==  Token.FUNCTION)  {  throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "n  parent: "  +  value.getParent());  }	  if(value.getType()    ==    Token.FUNCTION)    {    throw    new    IllegalStateException(   "Unexpected    expression    node   "    +    value    +   "n    parent:   "    +    value.getParent());    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
5	[BUG]  [BUGGY]  parent!=  null  &&  value.getType()  ==  Token.FUNCTION)  {  throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "n  parent: "  +  value.getParent());  }  [CE]  illegal  start  of  expression  [FE]            IllegalStateException    [CONTEXT]    default:    if  (isAssignmentOp(value)  ||  isSimpleOperator(value)  ||  isImmutableValue(value))  {  return  true;  }    [BUGGY]  parent!=  null  &&  value.getType()  ==  Token.FUNCTION)  {  throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "n  parent: "  +  value.getParent());  }  [BUGGY]     "Unexpected  expression  node   "  +  value  +     "\n  parent:   "  +  value.getParent());  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  value  String  JSC_PROPERTY_NAME_FN  childValue  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  rawJsString  res  s  sourceName  value  Map  vars  int  c  charno  end  endPos  index  len  lineno  memberIndex  nextSkipSlot  nextSlot  operator  prototypeIdx  start  startPos  total  type  Predicate  locals  	projects/Closure80/src/com/google/javascript/jscomp/NodeUtil.java	0.7071067811865475	2923	2925	2	replace	parent!=  null  &&  value.getType()  ==  Token.FUNCTION)  {  throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "n  parent: "  +  value.getParent());  }	  if(value.getType()    ==    Token.FUNCTION)    {    throw    new    IllegalStateException(   "Unexpected    expression    node   "    +    value    +   "n    parent:   "    +    value.getParent());    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
6	[BUG]  [BUGGY]  parent  ==  null  ||  value.getType()  ==  Token.FUNCTION)  {  throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "n  parent: "  +  value.getParent());  }  [CE]  illegal  start  of  expression  [FE]              IllegalStateException    [CONTEXT]    default:    if  (isAssignmentOp(value)  ||  isSimpleOperator(value)  ||  isImmutableValue(value))  {  return  true;  }    [BUGGY]  parent  ==  null  ||  value.getType()  ==  Token.FUNCTION)  {  throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "n  parent: "  +  value.getParent());  }  [BUGGY]     "Unexpected  expression  node   "  +  value  +     "\n  parent:   "  +  value.getParent());  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  value  String  JSC_PROPERTY_NAME_FN  childValue  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  rawJsString  res  s  sourceName  value  Map  vars  int  c  charno  end  endPos  index  len  lineno  memberIndex  nextSkipSlot  nextSlot  operator  prototypeIdx  start  startPos  total  type  Predicate  locals  	projects/Closure80/src/com/google/javascript/jscomp/NodeUtil.java	0.7071067811865475	2923	2925	2	replace	parent  ==  null  ||  value.getType()  ==  Token.FUNCTION)  {  throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "n  parent: "  +  value.getParent());  }	  if(value.getType()    ==    Token.FUNCTION)    {    throw    new    IllegalStateException(   "Unexpected    expression    node   "    +    value    +   "n    parent:   "    +    value.getParent());    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
7	[BUG]  [BUGGY]  parent  ==  null  &&  value.getType()  ==  Token.FUNCTION)  {  throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "  parent: "  +  value.getParent());  }  [CE]  illegal  start  of  expression  [FE]                IllegalStateException    [CONTEXT]    default:    if  (isAssignmentOp(value)  ||  isSimpleOperator(value)  ||  isImmutableValue(value))  {  return  true;  }    [BUGGY]  parent  ==  null  &&  value.getType()  ==  Token.FUNCTION)  {  throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "  parent: "  +  value.getParent());  }  [BUGGY]     "Unexpected  expression  node   "  +  value  +     "\n  parent:   "  +  value.getParent());  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  value  String  JSC_PROPERTY_NAME_FN  childValue  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  rawJsString  res  s  sourceName  value  Map  vars  int  c  charno  end  endPos  index  len  lineno  memberIndex  nextSkipSlot  nextSlot  operator  prototypeIdx  start  startPos  total  type  Predicate  locals  	projects/Closure80/src/com/google/javascript/jscomp/NodeUtil.java	0.7071067811865475	2923	2925	2	replace	parent  ==  null  &&  value.getType()  ==  Token.FUNCTION)  {  throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "  parent: "  +  value.getParent());  }	  if(value.getType()    ==    Token.FUNCTION)    {    throw    new    IllegalStateException(   "Unexpected    expression    node   "    +    value    +   "n    parent:   "    +    value.getParent());    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
8	[BUG]  [BUGGY]  parent  ==  null?  value.getType()  :  Token.FUNCTION)  {  throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "n  parent: "  +  value.getParent());  }  [CE]  illegal  start  of  expression  [FE]                  IllegalStateException    [CONTEXT]    default:    if  (isAssignmentOp(value)  ||  isSimpleOperator(value)  ||  isImmutableValue(value))  {  return  true;  }    [BUGGY]  parent  ==  null?  value.getType()  :  Token.FUNCTION)  {  throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "n  parent: "  +  value.getParent());  }  [BUGGY]     "Unexpected  expression  node   "  +  value  +     "\n  parent:   "  +  value.getParent());  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  value  String  JSC_PROPERTY_NAME_FN  childValue  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  rawJsString  res  s  sourceName  value  Map  vars  int  c  charno  end  endPos  index  len  lineno  memberIndex  nextSkipSlot  nextSlot  operator  prototypeIdx  start  startPos  total  type  Predicate  locals  	projects/Closure80/src/com/google/javascript/jscomp/NodeUtil.java	0.7071067811865475	2923	2925	2	replace	parent  ==  null?  value.getType()  :  Token.FUNCTION)  {  throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "n  parent: "  +  value.getParent());  }	  if(value.getType()    ==    Token.FUNCTION)    {    throw    new    IllegalStateException(   "Unexpected    expression    node   "    +    value    +   "n    parent:   "    +    value.getParent());    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
9	[BUG]  [BUGGY]  parent!=  null  &&  value.getType()  ==  Token.FUNCTION)  {  throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "  parent: "  +  value.getParent());  }  [CE]  illegal  start  of  expression  [FE]                    IllegalStateException    [CONTEXT]    default:    if  (isAssignmentOp(value)  ||  isSimpleOperator(value)  ||  isImmutableValue(value))  {  return  true;  }    [BUGGY]  parent!=  null  &&  value.getType()  ==  Token.FUNCTION)  {  throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "  parent: "  +  value.getParent());  }  [BUGGY]     "Unexpected  expression  node   "  +  value  +     "\n  parent:   "  +  value.getParent());  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  value  String  JSC_PROPERTY_NAME_FN  childValue  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  rawJsString  res  s  sourceName  value  Map  vars  int  c  charno  end  endPos  index  len  lineno  memberIndex  nextSkipSlot  nextSlot  operator  prototypeIdx  start  startPos  total  type  Predicate  locals  	projects/Closure80/src/com/google/javascript/jscomp/NodeUtil.java	0.7071067811865475	2923	2925	2	replace	parent!=  null  &&  value.getType()  ==  Token.FUNCTION)  {  throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "  parent: "  +  value.getParent());  }	  if(value.getType()    ==    Token.FUNCTION)    {    throw    new    IllegalStateException(   "Unexpected    expression    node   "    +    value    +   "n    parent:   "    +    value.getParent());    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
10	[BUG]  [BUGGY]  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "  parent: "  +  value.getString());  [CE]  illegal  start  of  expression  [FE]                IllegalStateException    [CONTEXT]    default:    if  (isAssignmentOp(value)  ||  isSimpleOperator(value)  ||  isImmutableValue(value))  {  return  true;  }    [BUGGY]  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "  parent: "  +  value.getString());  [BUGGY]     "Unexpected  expression  node   "  +  value  +     "\n  parent:   "  +  value.getParent());  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  value  String  JSC_PROPERTY_NAME_FN  childValue  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  rawJsString  res  s  sourceName  value  Map  vars  int  c  charno  end  endPos  index  len  lineno  memberIndex  nextSkipSlot  nextSlot  operator  prototypeIdx  start  startPos  total  type  Predicate  locals  	projects/Closure80/src/com/google/javascript/jscomp/NodeUtil.java	0.7071067811865475	2923	2925	2	replace	new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "  parent: "  +  value.getString());	  new    IllegalStateException(   "Unexpected    expression    node   "    +    value    +   "n    parent:   "    +    value.getString());    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
11	[BUG]  [BUGGY]  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + ",  parent: "  +  value.getString());  [CE]  illegal  start  of  expression  [FE]                  IllegalStateException    [CONTEXT]    default:    if  (isAssignmentOp(value)  ||  isSimpleOperator(value)  ||  isImmutableValue(value))  {  return  true;  }    [BUGGY]  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + ",  parent: "  +  value.getString());  [BUGGY]     "Unexpected  expression  node   "  +  value  +     "\n  parent:   "  +  value.getParent());  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  value  String  JSC_PROPERTY_NAME_FN  childValue  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  rawJsString  res  s  sourceName  value  Map  vars  int  c  charno  end  endPos  index  len  lineno  memberIndex  nextSkipSlot  nextSlot  operator  prototypeIdx  start  startPos  total  type  Predicate  locals  	projects/Closure80/src/com/google/javascript/jscomp/NodeUtil.java	0.7071067811865475	2923	2925	2	replace	new  IllegalStateException( "Unexpected  expression  node   "  +  value  + ",  parent: "  +  value.getString());	  new    IllegalStateException(   "Unexpected    expression    node   "    +    value    +   "n    parent:   "    +    value.getString());    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
12	[BUG]  [BUGGY]  new  IllegalStateException( "Unexpected  expression  node: "  +  value  + "  parent: "  +  value.getString());  [CE]  illegal  start  of  expression  [FE]                    IllegalStateException    [CONTEXT]    default:    if  (isAssignmentOp(value)  ||  isSimpleOperator(value)  ||  isImmutableValue(value))  {  return  true;  }    [BUGGY]  new  IllegalStateException( "Unexpected  expression  node: "  +  value  + "  parent: "  +  value.getString());  [BUGGY]     "Unexpected  expression  node   "  +  value  +     "\n  parent:   "  +  value.getParent());  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  value  String  JSC_PROPERTY_NAME_FN  childValue  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  rawJsString  res  s  sourceName  value  Map  vars  int  c  charno  end  endPos  index  len  lineno  memberIndex  nextSkipSlot  nextSlot  operator  prototypeIdx  start  startPos  total  type  Predicate  locals  	projects/Closure80/src/com/google/javascript/jscomp/NodeUtil.java	0.7071067811865475	2923	2925	2	replace	new  IllegalStateException( "Unexpected  expression  node: "  +  value  + "  parent: "  +  value.getString());	  new    IllegalStateException(   "Unexpected    expression    node   "    +    value    +   "n    parent:   "    +    value.getString());    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
13	[BUG]  [BUGGY]  new  IllegalStateException( "Unexpected  expression  node  ' "  +  value  + "'  parent:  ' "  +  value.getString());  [CE]  illegal  start  of  expression  [FE]                      IllegalStateException    [CONTEXT]    default:    if  (isAssignmentOp(value)  ||  isSimpleOperator(value)  ||  isImmutableValue(value))  {  return  true;  }    [BUGGY]  new  IllegalStateException( "Unexpected  expression  node  ' "  +  value  + "'  parent:  ' "  +  value.getString());  [BUGGY]     "Unexpected  expression  node   "  +  value  +     "\n  parent:   "  +  value.getParent());  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  value  String  JSC_PROPERTY_NAME_FN  childValue  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  rawJsString  res  s  sourceName  value  Map  vars  int  c  charno  end  endPos  index  len  lineno  memberIndex  nextSkipSlot  nextSlot  operator  prototypeIdx  start  startPos  total  type  Predicate  locals  	projects/Closure80/src/com/google/javascript/jscomp/NodeUtil.java	0.7071067811865475	2923	2925	2	replace	new  IllegalStateException( "Unexpected  expression  node  ' "  +  value  + "'  parent:  ' "  +  value.getString());	  new    IllegalStateException(   "Unexpected    expression    node   "    +    value    +   "n    parent:   "    +    value.getString());    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
14	[BUG]  [BUGGY]  Node  value  =  value.getNext();  [CE]  illegal  start  of  expression  [FE]                      IllegalStateException    [CONTEXT]    default:    if  (isAssignmentOp(value)  ||  isSimpleOperator(value)  ||  isImmutableValue(value))  {  return  true;  }    [BUGGY]  Node  value  =  value.getNext();  [BUGGY]     "Unexpected  expression  node   "  +  value  +     "\n  parent:   "  +  value.getParent());  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  value  String  JSC_PROPERTY_NAME_FN  childValue  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  rawJsString  res  s  sourceName  value  Map  vars  int  c  charno  end  endPos  index  len  lineno  memberIndex  nextSkipSlot  nextSlot  operator  prototypeIdx  start  startPos  total  type  Predicate  locals  	projects/Closure80/src/com/google/javascript/jscomp/NodeUtil.java	0.7071067811865475	2923	2925	2	replace	Node  value  =  value.getNext();	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
15	[BUG]  [BUGGY]  Preconditions.checkState(value.getType()  ==  Token.NAME);  [CE]  illegal  start  of  expression  [FE]                        IllegalStateException    [CONTEXT]    default:    if  (isAssignmentOp(value)  ||  isSimpleOperator(value)  ||  isImmutableValue(value))  {  return  true;  }    [BUGGY]  Preconditions.checkState(value.getType()  ==  Token.NAME);  [BUGGY]     "Unexpected  expression  node   "  +  value  +     "\n  parent:   "  +  value.getParent());  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  value  String  JSC_PROPERTY_NAME_FN  childValue  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  rawJsString  res  s  sourceName  value  Map  vars  int  c  charno  end  endPos  index  len  lineno  memberIndex  nextSkipSlot  nextSlot  operator  prototypeIdx  start  startPos  total  type  Predicate  locals  	projects/Closure80/src/com/google/javascript/jscomp/NodeUtil.java	0.7071067811865475	2923	2925	2	replace	Preconditions.checkState(value.getType()  ==  Token.NAME);	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
16	[BUG]  [BUGGY]  Preconditions.checkState(value.getType()  ==  Token.EXPR_RESULT);  [CE]  illegal  start  of  expression  [FE]                          IllegalStateException    [CONTEXT]    default:    if  (isAssignmentOp(value)  ||  isSimpleOperator(value)  ||  isImmutableValue(value))  {  return  true;  }    [BUGGY]  Preconditions.checkState(value.getType()  ==  Token.EXPR_RESULT);  [BUGGY]     "Unexpected  expression  node   "  +  value  +     "\n  parent:   "  +  value.getParent());  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  value  String  JSC_PROPERTY_NAME_FN  childValue  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  rawJsString  res  s  sourceName  value  Map  vars  int  c  charno  end  endPos  index  len  lineno  memberIndex  nextSkipSlot  nextSlot  operator  prototypeIdx  start  startPos  total  type  Predicate  locals  	projects/Closure80/src/com/google/javascript/jscomp/NodeUtil.java	0.7071067811865475	2923	2925	2	replace	Preconditions.checkState(value.getType()  ==  Token.EXPR_RESULT);	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
17	[BUG]  [BUGGY]  Preconditions.checkState(value.getType()  ==  Token.FUNCTION);  [CE]  illegal  start  of  expression  [FE]                            IllegalStateException    [CONTEXT]    default:    if  (isAssignmentOp(value)  ||  isSimpleOperator(value)  ||  isImmutableValue(value))  {  return  true;  }    [BUGGY]  Preconditions.checkState(value.getType()  ==  Token.FUNCTION);  [BUGGY]     "Unexpected  expression  node   "  +  value  +     "\n  parent:   "  +  value.getParent());  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  value  String  JSC_PROPERTY_NAME_FN  childValue  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  rawJsString  res  s  sourceName  value  Map  vars  int  c  charno  end  endPos  index  len  lineno  memberIndex  nextSkipSlot  nextSlot  operator  prototypeIdx  start  startPos  total  type  Predicate  locals  	projects/Closure80/src/com/google/javascript/jscomp/NodeUtil.java	0.7071067811865475	2923	2925	2	replace	Preconditions.checkState(value.getType()  ==  Token.FUNCTION);	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
18	[BUG]  [BUGGY]  Node  value  =  value.getFirstChild();  [CE]  illegal  start  of  expression  [FE]                              IllegalStateException    [CONTEXT]    default:    if  (isAssignmentOp(value)  ||  isSimpleOperator(value)  ||  isImmutableValue(value))  {  return  true;  }    [BUGGY]  Node  value  =  value.getFirstChild();  [BUGGY]     "Unexpected  expression  node   "  +  value  +     "\n  parent:   "  +  value.getParent());  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  value  String  JSC_PROPERTY_NAME_FN  childValue  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  rawJsString  res  s  sourceName  value  Map  vars  int  c  charno  end  endPos  index  len  lineno  memberIndex  nextSkipSlot  nextSlot  operator  prototypeIdx  start  startPos  total  type  Predicate  locals  	projects/Closure80/src/com/google/javascript/jscomp/NodeUtil.java	0.7071067811865475	2923	2925	2	replace	Node  value  =  value.getFirstChild();	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
19	[BUG]  [BUGGY]  Preconditions.checkState(value.getType()  ==  Token.GETPROP);  [CE]  illegal  start  of  expression  [FE]                                IllegalStateException    [CONTEXT]    default:    if  (isAssignmentOp(value)  ||  isSimpleOperator(value)  ||  isImmutableValue(value))  {  return  true;  }    [BUGGY]  Preconditions.checkState(value.getType()  ==  Token.GETPROP);  [BUGGY]     "Unexpected  expression  node   "  +  value  +     "\n  parent:   "  +  value.getParent());  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  value  String  JSC_PROPERTY_NAME_FN  childValue  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  rawJsString  res  s  sourceName  value  Map  vars  int  c  charno  end  endPos  index  len  lineno  memberIndex  nextSkipSlot  nextSlot  operator  prototypeIdx  start  startPos  total  type  Predicate  locals  	projects/Closure80/src/com/google/javascript/jscomp/NodeUtil.java	0.7071067811865475	2923	2925	2	replace	Preconditions.checkState(value.getType()  ==  Token.GETPROP);	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
20	[BUG]  [BUGGY]  Node  value  =  locals.getFirstChild();  [CE]  illegal  start  of  expression  [FE]                                  IllegalStateException    [CONTEXT]    default:    if  (isAssignmentOp(value)  ||  isSimpleOperator(value)  ||  isImmutableValue(value))  {  return  true;  }    [BUGGY]  Node  value  =  locals.getFirstChild();  [BUGGY]     "Unexpected  expression  node   "  +  value  +     "\n  parent:   "  +  value.getParent());  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  value  String  JSC_PROPERTY_NAME_FN  childValue  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  rawJsString  res  s  sourceName  value  Map  vars  int  c  charno  end  endPos  index  len  lineno  memberIndex  nextSkipSlot  nextSlot  operator  prototypeIdx  start  startPos  total  type  Predicate  locals  	projects/Closure80/src/com/google/javascript/jscomp/NodeUtil.java	0.7071067811865475	2923	2925	2	replace	Node  value  =  locals.getFirstChild();	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
21	[BUG]  [BUGGY]  parent  ==  null)  {  throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "n  parent: "  +  value.getParent());  }  [CE]  illegal  start  of  expression  [FE]        IllegalStateException    [CONTEXT]    default:    if  (isAssignmentOp(value)  ||  isSimpleOperator(value)  ||  isImmutableValue(value))  {  return  true;  }    [BUGGY]  parent  ==  null)  {  throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "n  parent: "  +  value.getParent());  }  [BUGGY]     "Unexpected  expression  node   "  +  value  +     "\n  parent:   "  +  value.getParent());  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  value  String  JSC_PROPERTY_NAME_FN  childValue  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  rawJsString  res  s  sourceName  value  Map  vars  int  c  charno  end  endPos  index  len  lineno  memberIndex  nextSkipSlot  nextSlot  operator  prototypeIdx  start  startPos  total  type  Predicate  locals  	projects/Closure80/src/com/google/javascript/jscomp/NodeUtil.java	0.7071067811865475	2923	2925	2	replace	parent  ==  null)  {  throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "n  parent: "  +  value.getParent());  }	  if(value!=    null)    {    throw    new    IllegalStateException(   "Unexpected    expression    node   "    +    value    +   "n    parent:   "    +    value.getParent());    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
22	[BUG]  [BUGGY]  parent!=  null)  {  throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "n  parent: "  +  value.getParent());  }  [CE]  illegal  start  of  expression  [FE]          IllegalStateException    [CONTEXT]    default:    if  (isAssignmentOp(value)  ||  isSimpleOperator(value)  ||  isImmutableValue(value))  {  return  true;  }    [BUGGY]  parent!=  null)  {  throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "n  parent: "  +  value.getParent());  }  [BUGGY]     "Unexpected  expression  node   "  +  value  +     "\n  parent:   "  +  value.getParent());  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  value  String  JSC_PROPERTY_NAME_FN  childValue  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  rawJsString  res  s  sourceName  value  Map  vars  int  c  charno  end  endPos  index  len  lineno  memberIndex  nextSkipSlot  nextSlot  operator  prototypeIdx  start  startPos  total  type  Predicate  locals  	projects/Closure80/src/com/google/javascript/jscomp/NodeUtil.java	0.7071067811865475	2923	2925	2	replace	parent!=  null)  {  throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "n  parent: "  +  value.getParent());  }	  if(value!=    null)    {    throw    new    IllegalStateException(   "Unexpected    expression    node   "    +    value    +   "n    parent:   "    +    value.getParent());    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
23	[BUG]  [BUGGY]  While(value!=  null  &&  value.getType()  ==  Token.FUNCTION)  {  throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "n  parent: "  +  value.getParent());  }  [CE]  illegal  start  of  expression  [FE]            IllegalStateException    [CONTEXT]    default:    if  (isAssignmentOp(value)  ||  isSimpleOperator(value)  ||  isImmutableValue(value))  {  return  true;  }    [BUGGY]  While(value!=  null  &&  value.getType()  ==  Token.FUNCTION)  {  throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "n  parent: "  +  value.getParent());  }  [BUGGY]     "Unexpected  expression  node   "  +  value  +     "\n  parent:   "  +  value.getParent());  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  value  String  JSC_PROPERTY_NAME_FN  childValue  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  rawJsString  res  s  sourceName  value  Map  vars  int  c  charno  end  endPos  index  len  lineno  memberIndex  nextSkipSlot  nextSlot  operator  prototypeIdx  start  startPos  total  type  Predicate  locals  	projects/Closure80/src/com/google/javascript/jscomp/NodeUtil.java	0.7071067811865475	2923	2925	2	replace	While(value!=  null  &&  value.getType()  ==  Token.FUNCTION)  {  throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "n  parent: "  +  value.getParent());  }	  if(value!=    null)    {    throw    new    IllegalStateException(   "Unexpected    expression    node   "    +    value    +   "n    parent:   "    +    value.getParent());    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
24	[BUG]  [BUGGY]  parent  ==  null)  {  throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "  parent: "  +  value.getParent());  }  [CE]  illegal  start  of  expression  [FE]              IllegalStateException    [CONTEXT]    default:    if  (isAssignmentOp(value)  ||  isSimpleOperator(value)  ||  isImmutableValue(value))  {  return  true;  }    [BUGGY]  parent  ==  null)  {  throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "  parent: "  +  value.getParent());  }  [BUGGY]     "Unexpected  expression  node   "  +  value  +     "\n  parent:   "  +  value.getParent());  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  value  String  JSC_PROPERTY_NAME_FN  childValue  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  rawJsString  res  s  sourceName  value  Map  vars  int  c  charno  end  endPos  index  len  lineno  memberIndex  nextSkipSlot  nextSlot  operator  prototypeIdx  start  startPos  total  type  Predicate  locals  	projects/Closure80/src/com/google/javascript/jscomp/NodeUtil.java	0.7071067811865475	2923	2925	2	replace	parent  ==  null)  {  throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "  parent: "  +  value.getParent());  }	  if(value!=    null)    {    throw    new    IllegalStateException(   "Unexpected    expression    node   "    +    value    +   "n    parent:   "    +    value.getParent());    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
25	[BUG]  [BUGGY]  parent  ==  null  &&  value.getType()  ==  Token.NAME)  {  throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "n  parent: "  +  value.getParent());  }  [CE]  illegal  start  of  expression  [FE]              IllegalStateException    [CONTEXT]    default:    if  (isAssignmentOp(value)  ||  isSimpleOperator(value)  ||  isImmutableValue(value))  {  return  true;  }    [BUGGY]  parent  ==  null  &&  value.getType()  ==  Token.NAME)  {  throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "n  parent: "  +  value.getParent());  }  [BUGGY]     "Unexpected  expression  node   "  +  value  +     "\n  parent:   "  +  value.getParent());  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  value  String  JSC_PROPERTY_NAME_FN  childValue  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  rawJsString  res  s  sourceName  value  Map  vars  int  c  charno  end  endPos  index  len  lineno  memberIndex  nextSkipSlot  nextSlot  operator  prototypeIdx  start  startPos  total  type  Predicate  locals  	projects/Closure80/src/com/google/javascript/jscomp/NodeUtil.java	0.7071067811865475	2923	2925	2	replace	parent  ==  null  &&  value.getType()  ==  Token.NAME)  {  throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "n  parent: "  +  value.getParent());  }	  if(value.getType()    ==    Token.NAME)    {    throw    new    IllegalStateException(   "Unexpected    expression    node   "    +    value    +   "n    parent:   "    +    value.getParent());    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
26	[BUG]  [BUGGY]  parent!=  null  &&  value.getType()  ==  Token.NAME)  {  throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "n  parent: "  +  value.getParent());  }  [CE]  illegal  start  of  expression  [FE]                IllegalStateException    [CONTEXT]    default:    if  (isAssignmentOp(value)  ||  isSimpleOperator(value)  ||  isImmutableValue(value))  {  return  true;  }    [BUGGY]  parent!=  null  &&  value.getType()  ==  Token.NAME)  {  throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "n  parent: "  +  value.getParent());  }  [BUGGY]     "Unexpected  expression  node   "  +  value  +     "\n  parent:   "  +  value.getParent());  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  value  String  JSC_PROPERTY_NAME_FN  childValue  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  rawJsString  res  s  sourceName  value  Map  vars  int  c  charno  end  endPos  index  len  lineno  memberIndex  nextSkipSlot  nextSlot  operator  prototypeIdx  start  startPos  total  type  Predicate  locals  	projects/Closure80/src/com/google/javascript/jscomp/NodeUtil.java	0.7071067811865475	2923	2925	2	replace	parent!=  null  &&  value.getType()  ==  Token.NAME)  {  throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "n  parent: "  +  value.getParent());  }	  if(value.getType()    ==    Token.NAME)    {    throw    new    IllegalStateException(   "Unexpected    expression    node   "    +    value    +   "n    parent:   "    +    value.getParent());    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
27	[BUG]  [BUGGY]  parent  ==  null  ||  value.getType()  ==  Token.NAME)  {  throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "n  parent: "  +  value.getParent());  }  [CE]  illegal  start  of  expression  [FE]                  IllegalStateException    [CONTEXT]    default:    if  (isAssignmentOp(value)  ||  isSimpleOperator(value)  ||  isImmutableValue(value))  {  return  true;  }    [BUGGY]  parent  ==  null  ||  value.getType()  ==  Token.NAME)  {  throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "n  parent: "  +  value.getParent());  }  [BUGGY]     "Unexpected  expression  node   "  +  value  +     "\n  parent:   "  +  value.getParent());  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  value  String  JSC_PROPERTY_NAME_FN  childValue  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  rawJsString  res  s  sourceName  value  Map  vars  int  c  charno  end  endPos  index  len  lineno  memberIndex  nextSkipSlot  nextSlot  operator  prototypeIdx  start  startPos  total  type  Predicate  locals  	projects/Closure80/src/com/google/javascript/jscomp/NodeUtil.java	0.7071067811865475	2923	2925	2	replace	parent  ==  null  ||  value.getType()  ==  Token.NAME)  {  throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "n  parent: "  +  value.getParent());  }	  if(value.getType()    ==    Token.NAME)    {    throw    new    IllegalStateException(   "Unexpected    expression    node   "    +    value    +   "n    parent:   "    +    value.getParent());    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
28	[BUG]  [BUGGY]  parent  ==  null?  value.getType()  :  Token.NAME)  {  throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "n  parent: "  +  value.getParent());  }  [CE]  illegal  start  of  expression  [FE]                    IllegalStateException    [CONTEXT]    default:    if  (isAssignmentOp(value)  ||  isSimpleOperator(value)  ||  isImmutableValue(value))  {  return  true;  }    [BUGGY]  parent  ==  null?  value.getType()  :  Token.NAME)  {  throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "n  parent: "  +  value.getParent());  }  [BUGGY]     "Unexpected  expression  node   "  +  value  +     "\n  parent:   "  +  value.getParent());  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  value  String  JSC_PROPERTY_NAME_FN  childValue  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  rawJsString  res  s  sourceName  value  Map  vars  int  c  charno  end  endPos  index  len  lineno  memberIndex  nextSkipSlot  nextSlot  operator  prototypeIdx  start  startPos  total  type  Predicate  locals  	projects/Closure80/src/com/google/javascript/jscomp/NodeUtil.java	0.7071067811865475	2923	2925	2	replace	parent  ==  null?  value.getType()  :  Token.NAME)  {  throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "n  parent: "  +  value.getParent());  }	  if(value.getType()    ==    Token.NAME)    {    throw    new    IllegalStateException(   "Unexpected    expression    node   "    +    value    +   "n    parent:   "    +    value.getParent());    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
29	[BUG]  [BUGGY]  parent  ==  null  &&  value.getType()  ==  Token.NAME)  {  throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "  parent: "  +  value.getParent());  }  [CE]  illegal  start  of  expression  [FE]                      IllegalStateException    [CONTEXT]    default:    if  (isAssignmentOp(value)  ||  isSimpleOperator(value)  ||  isImmutableValue(value))  {  return  true;  }    [BUGGY]  parent  ==  null  &&  value.getType()  ==  Token.NAME)  {  throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "  parent: "  +  value.getParent());  }  [BUGGY]     "Unexpected  expression  node   "  +  value  +     "\n  parent:   "  +  value.getParent());  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  value  String  JSC_PROPERTY_NAME_FN  childValue  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  rawJsString  res  s  sourceName  value  Map  vars  int  c  charno  end  endPos  index  len  lineno  memberIndex  nextSkipSlot  nextSlot  operator  prototypeIdx  start  startPos  total  type  Predicate  locals  	projects/Closure80/src/com/google/javascript/jscomp/NodeUtil.java	0.7071067811865475	2923	2925	2	replace	parent  ==  null  &&  value.getType()  ==  Token.NAME)  {  throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "  parent: "  +  value.getParent());  }	  if(value.getType()    ==    Token.NAME)    {    throw    new    IllegalStateException(   "Unexpected    expression    node   "    +    value    +   "n    parent:   "    +    value.getParent());    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
30	[BUG]  [BUGGY]  parent!=  null  &&  value.getType()  ==  Token.NAME)  {  throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "  parent: "  +  value.getParent());  }  [CE]  illegal  start  of  expression  [FE]                        IllegalStateException    [CONTEXT]    default:    if  (isAssignmentOp(value)  ||  isSimpleOperator(value)  ||  isImmutableValue(value))  {  return  true;  }    [BUGGY]  parent!=  null  &&  value.getType()  ==  Token.NAME)  {  throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "  parent: "  +  value.getParent());  }  [BUGGY]     "Unexpected  expression  node   "  +  value  +     "\n  parent:   "  +  value.getParent());  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  value  String  JSC_PROPERTY_NAME_FN  childValue  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  rawJsString  res  s  sourceName  value  Map  vars  int  c  charno  end  endPos  index  len  lineno  memberIndex  nextSkipSlot  nextSlot  operator  prototypeIdx  start  startPos  total  type  Predicate  locals  	projects/Closure80/src/com/google/javascript/jscomp/NodeUtil.java	0.7071067811865475	2923	2925	2	replace	parent!=  null  &&  value.getType()  ==  Token.NAME)  {  throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "  parent: "  +  value.getParent());  }	  if(value.getType()    ==    Token.NAME)    {    throw    new    IllegalStateException(   "Unexpected    expression    node   "    +    value    +   "n    parent:   "    +    value.getParent());    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
31	[BUG]  [BUGGY]  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + ",  parent: "  +  value.getParent());  [CE]  illegal  start  of  expression  [FE]              IllegalStateException    [CONTEXT]    default:    if  (isAssignmentOp(value)  ||  isSimpleOperator(value)  ||  isImmutableValue(value))  {  return  true;  }    [BUGGY]  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + ",  parent: "  +  value.getParent());  [BUGGY]     "Unexpected  expression  node   "  +  value  +     "\n  parent:   "  +  value.getParent());  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  value  String  JSC_PROPERTY_NAME_FN  childValue  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  rawJsString  res  s  sourceName  value  Map  vars  int  c  charno  end  endPos  index  len  lineno  memberIndex  nextSkipSlot  nextSlot  operator  prototypeIdx  start  startPos  total  type  Predicate  locals  	projects/Closure80/src/com/google/javascript/jscomp/NodeUtil.java	0.7071067811865475	2923	2925	2	replace	new  IllegalStateException( "Unexpected  expression  node   "  +  value  + ",  parent: "  +  value.getParent());	  new    IllegalStateException(   "Unexpected    expression    node   "    +    value    +   "n    parent:   "    +    value.getParent());    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
32	[BUG]  [BUGGY]  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "n  parent: "  +  value.getNext());  [CE]  illegal  start  of  expression  [FE]                IllegalStateException    [CONTEXT]    default:    if  (isAssignmentOp(value)  ||  isSimpleOperator(value)  ||  isImmutableValue(value))  {  return  true;  }    [BUGGY]  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "n  parent: "  +  value.getNext());  [BUGGY]     "Unexpected  expression  node   "  +  value  +     "\n  parent:   "  +  value.getParent());  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  value  String  JSC_PROPERTY_NAME_FN  childValue  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  rawJsString  res  s  sourceName  value  Map  vars  int  c  charno  end  endPos  index  len  lineno  memberIndex  nextSkipSlot  nextSlot  operator  prototypeIdx  start  startPos  total  type  Predicate  locals  	projects/Closure80/src/com/google/javascript/jscomp/NodeUtil.java	0.7071067811865475	2923	2925	2	replace	new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "n  parent: "  +  value.getNext());	  new    IllegalStateException(   "Unexpected    expression    node   "    +    value    +   "n    parent:   "    +    value.getParent());    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
33	[BUG]  [BUGGY]  new  IllegalStateException( "Unexpected  expression  node: "  +  value  + "  parent: "  +  value.getParent());  [CE]  illegal  start  of  expression  [FE]                  IllegalStateException    [CONTEXT]    default:    if  (isAssignmentOp(value)  ||  isSimpleOperator(value)  ||  isImmutableValue(value))  {  return  true;  }    [BUGGY]  new  IllegalStateException( "Unexpected  expression  node: "  +  value  + "  parent: "  +  value.getParent());  [BUGGY]     "Unexpected  expression  node   "  +  value  +     "\n  parent:   "  +  value.getParent());  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  value  String  JSC_PROPERTY_NAME_FN  childValue  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  rawJsString  res  s  sourceName  value  Map  vars  int  c  charno  end  endPos  index  len  lineno  memberIndex  nextSkipSlot  nextSlot  operator  prototypeIdx  start  startPos  total  type  Predicate  locals  	projects/Closure80/src/com/google/javascript/jscomp/NodeUtil.java	0.7071067811865475	2923	2925	2	replace	new  IllegalStateException( "Unexpected  expression  node: "  +  value  + "  parent: "  +  value.getParent());	  new    IllegalStateException(   "Unexpected    expression    node   "    +    value    +   "n    parent:   "    +    value.getParent());    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
34	[BUG]  [BUGGY]  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "  parent: "  +  value.getParent());  [CE]  illegal  start  of  expression  [FE]                    IllegalStateException    [CONTEXT]    default:    if  (isAssignmentOp(value)  ||  isSimpleOperator(value)  ||  isImmutableValue(value))  {  return  true;  }    [BUGGY]  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "  parent: "  +  value.getParent());  [BUGGY]     "Unexpected  expression  node   "  +  value  +     "\n  parent:   "  +  value.getParent());  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  value  String  JSC_PROPERTY_NAME_FN  childValue  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  rawJsString  res  s  sourceName  value  Map  vars  int  c  charno  end  endPos  index  len  lineno  memberIndex  nextSkipSlot  nextSlot  operator  prototypeIdx  start  startPos  total  type  Predicate  locals  	projects/Closure80/src/com/google/javascript/jscomp/NodeUtil.java	0.7071067811865475	2923	2925	2	replace	new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "  parent: "  +  value.getParent());	  new    IllegalStateException(   "Unexpected    expression    node   "    +    value    +   "n    parent:   "    +    value.getParent());    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
35	[BUG]  [BUGGY]  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "n  parent: "  +  value.getName());  [CE]  illegal  start  of  expression  [FE]                      IllegalStateException    [CONTEXT]    default:    if  (isAssignmentOp(value)  ||  isSimpleOperator(value)  ||  isImmutableValue(value))  {  return  true;  }    [BUGGY]  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "n  parent: "  +  value.getName());  [BUGGY]     "Unexpected  expression  node   "  +  value  +     "\n  parent:   "  +  value.getParent());  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  value  String  JSC_PROPERTY_NAME_FN  childValue  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  rawJsString  res  s  sourceName  value  Map  vars  int  c  charno  end  endPos  index  len  lineno  memberIndex  nextSkipSlot  nextSlot  operator  prototypeIdx  start  startPos  total  type  Predicate  locals  	projects/Closure80/src/com/google/javascript/jscomp/NodeUtil.java	0.7071067811865475	2923	2925	2	replace	new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "n  parent: "  +  value.getName());	  new    IllegalStateException(   "Unexpected    expression    node   "    +    value    +   "n    parent:   "    +    value.getParent());    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
36	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "  parent: "  +  value.getLastChild());  [CE]  illegal  start  of  expression  [FE]                  IllegalStateException    [CONTEXT]    default:    if  (isAssignmentOp(value)  ||  isSimpleOperator(value)  ||  isImmutableValue(value))  {  return  true;  }    [BUGGY]  throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "  parent: "  +  value.getLastChild());  [BUGGY]     "Unexpected  expression  node   "  +  value  +     "\n  parent:   "  +  value.getParent());  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  value  String  JSC_PROPERTY_NAME_FN  childValue  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  rawJsString  res  s  sourceName  value  Map  vars  int  c  charno  end  endPos  index  len  lineno  memberIndex  nextSkipSlot  nextSlot  operator  prototypeIdx  start  startPos  total  type  Predicate  locals  	projects/Closure80/src/com/google/javascript/jscomp/NodeUtil.java	0.7071067811865475	2923	2925	2	replace	throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "  parent: "  +  value.getLastChild());	  throw    new    IllegalStateException(   "Unexpected    expression    node   "    +    value    +   "n    parent:   "    +    value.getLastChild());    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
37	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "  parent: "  +  value.getLastChild());  [CE]  illegal  start  of  expression  [FE]                    IllegalStateException    [CONTEXT]    default:    if  (isAssignmentOp(value)  ||  isSimpleOperator(value)  ||  isImmutableValue(value))  {  return  true;  }    [BUGGY]  Throwables.throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "  parent: "  +  value.getLastChild());  [BUGGY]     "Unexpected  expression  node   "  +  value  +     "\n  parent:   "  +  value.getParent());  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  value  String  JSC_PROPERTY_NAME_FN  childValue  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  rawJsString  res  s  sourceName  value  Map  vars  int  c  charno  end  endPos  index  len  lineno  memberIndex  nextSkipSlot  nextSlot  operator  prototypeIdx  start  startPos  total  type  Predicate  locals  	projects/Closure80/src/com/google/javascript/jscomp/NodeUtil.java	0.7071067811865475	2923	2925	2	replace	Throwables.throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "  parent: "  +  value.getLastChild());	  throw    new    IllegalStateException(   "Unexpected    expression    node   "    +    value    +   "n    parent:   "    +    value.getLastChild());    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
38	[BUG]  [BUGGY]  if(value.getType()  ==  Token.FUNCTION)  {  throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "  parent: "  +  value.getLastChild());  }  [CE]  illegal  start  of  expression  [FE]                      IllegalStateException    [CONTEXT]    default:    if  (isAssignmentOp(value)  ||  isSimpleOperator(value)  ||  isImmutableValue(value))  {  return  true;  }    [BUGGY]  if(value.getType()  ==  Token.FUNCTION)  {  throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "  parent: "  +  value.getLastChild());  }  [BUGGY]     "Unexpected  expression  node   "  +  value  +     "\n  parent:   "  +  value.getParent());  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  value  String  JSC_PROPERTY_NAME_FN  childValue  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  rawJsString  res  s  sourceName  value  Map  vars  int  c  charno  end  endPos  index  len  lineno  memberIndex  nextSkipSlot  nextSlot  operator  prototypeIdx  start  startPos  total  type  Predicate  locals  	projects/Closure80/src/com/google/javascript/jscomp/NodeUtil.java	0.7071067811865475	2923	2925	2	replace	if(value.getType()  ==  Token.FUNCTION)  {  throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "  parent: "  +  value.getLastChild());  }	  throw    new    IllegalStateException(   "Unexpected    expression    node   "    +    value    +   "n    parent:   "    +    value.getLastChild());    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
39	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + ",  parent: "  +  value.getLastChild());  [CE]  illegal  start  of  expression  [FE]                        IllegalStateException    [CONTEXT]    default:    if  (isAssignmentOp(value)  ||  isSimpleOperator(value)  ||  isImmutableValue(value))  {  return  true;  }    [BUGGY]  throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + ",  parent: "  +  value.getLastChild());  [BUGGY]     "Unexpected  expression  node   "  +  value  +     "\n  parent:   "  +  value.getParent());  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  value  String  JSC_PROPERTY_NAME_FN  childValue  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  rawJsString  res  s  sourceName  value  Map  vars  int  c  charno  end  endPos  index  len  lineno  memberIndex  nextSkipSlot  nextSlot  operator  prototypeIdx  start  startPos  total  type  Predicate  locals  	projects/Closure80/src/com/google/javascript/jscomp/NodeUtil.java	0.7071067811865475	2923	2925	2	replace	throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + ",  parent: "  +  value.getLastChild());	  throw    new    IllegalStateException(   "Unexpected    expression    node   "    +    value    +   "n    parent:   "    +    value.getLastChild());    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
40	[BUG]  [BUGGY]  if(value.getType()  ==  Token.FUNCTION)  {  throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "  parent: "  +  value.getParent());  }  [CE]  illegal  start  of  expression  [FE]            IllegalStateException    [CONTEXT]    default:    if  (isAssignmentOp(value)  ||  isSimpleOperator(value)  ||  isImmutableValue(value))  {  return  true;  }    [BUGGY]  if(value.getType()  ==  Token.FUNCTION)  {  throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "  parent: "  +  value.getParent());  }  [BUGGY]     "Unexpected  expression  node   "  +  value  +     "\n  parent:   "  +  value.getParent());  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  value  String  JSC_PROPERTY_NAME_FN  childValue  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  rawJsString  res  s  sourceName  value  Map  vars  int  c  charno  end  endPos  index  len  lineno  memberIndex  nextSkipSlot  nextSlot  operator  prototypeIdx  start  startPos  total  type  Predicate  locals  	projects/Closure80/src/com/google/javascript/jscomp/NodeUtil.java	0.7071067811865475	2923	2925	2	replace	if(value.getType()  ==  Token.FUNCTION)  {  throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "  parent: "  +  value.getParent());  }	  throw    new    IllegalStateException(   "Unexpected    expression    node   "    +    value    +   "n    parent:   "    +    value.getParent());    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
41	[BUG]  [BUGGY]  if(value.getType()  ==  Token.NAME)  {  throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "  parent: "  +  value.getParent());  }  [CE]  illegal  start  of  expression  [FE]              IllegalStateException    [CONTEXT]    default:    if  (isAssignmentOp(value)  ||  isSimpleOperator(value)  ||  isImmutableValue(value))  {  return  true;  }    [BUGGY]  if(value.getType()  ==  Token.NAME)  {  throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "  parent: "  +  value.getParent());  }  [BUGGY]     "Unexpected  expression  node   "  +  value  +     "\n  parent:   "  +  value.getParent());  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  value  String  JSC_PROPERTY_NAME_FN  childValue  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  rawJsString  res  s  sourceName  value  Map  vars  int  c  charno  end  endPos  index  len  lineno  memberIndex  nextSkipSlot  nextSlot  operator  prototypeIdx  start  startPos  total  type  Predicate  locals  	projects/Closure80/src/com/google/javascript/jscomp/NodeUtil.java	0.7071067811865475	2923	2925	2	replace	if(value.getType()  ==  Token.NAME)  {  throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "  parent: "  +  value.getParent());  }	  throw    new    IllegalStateException(   "Unexpected    expression    node   "    +    value    +   "n    parent:   "    +    value.getParent());    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
42	[BUG]  [BUGGY]  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "  parent: "  +  value.getLastChild());  [CE]  illegal  start  of  expression  [FE]                    IllegalStateException    [CONTEXT]    default:    if  (isAssignmentOp(value)  ||  isSimpleOperator(value)  ||  isImmutableValue(value))  {  return  true;  }    [BUGGY]  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "  parent: "  +  value.getLastChild());  [BUGGY]     "Unexpected  expression  node   "  +  value  +     "\n  parent:   "  +  value.getParent());  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  value  String  JSC_PROPERTY_NAME_FN  childValue  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  rawJsString  res  s  sourceName  value  Map  vars  int  c  charno  end  endPos  index  len  lineno  memberIndex  nextSkipSlot  nextSlot  operator  prototypeIdx  start  startPos  total  type  Predicate  locals  	projects/Closure80/src/com/google/javascript/jscomp/NodeUtil.java	0.7071067811865475	2923	2925	2	replace	new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "  parent: "  +  value.getLastChild());	  new    IllegalStateException(   "Unexpected    expression    node   "    +    value    +   "n    parent:   "    +    value.getLastChild());    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
43	[BUG]  [BUGGY]  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + ",  parent: "  +  value.getLastChild());  [CE]  illegal  start  of  expression  [FE]                      IllegalStateException    [CONTEXT]    default:    if  (isAssignmentOp(value)  ||  isSimpleOperator(value)  ||  isImmutableValue(value))  {  return  true;  }    [BUGGY]  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + ",  parent: "  +  value.getLastChild());  [BUGGY]     "Unexpected  expression  node   "  +  value  +     "\n  parent:   "  +  value.getParent());  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  value  String  JSC_PROPERTY_NAME_FN  childValue  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  rawJsString  res  s  sourceName  value  Map  vars  int  c  charno  end  endPos  index  len  lineno  memberIndex  nextSkipSlot  nextSlot  operator  prototypeIdx  start  startPos  total  type  Predicate  locals  	projects/Closure80/src/com/google/javascript/jscomp/NodeUtil.java	0.7071067811865475	2923	2925	2	replace	new  IllegalStateException( "Unexpected  expression  node   "  +  value  + ",  parent: "  +  value.getLastChild());	  new    IllegalStateException(   "Unexpected    expression    node   "    +    value    +   "n    parent:   "    +    value.getLastChild());    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
44	[BUG]  [BUGGY]  new  IllegalStateException( "Unexpected  expression  node: "  +  value  + "  parent: "  +  value.getLastChild());  [CE]  illegal  start  of  expression  [FE]                        IllegalStateException    [CONTEXT]    default:    if  (isAssignmentOp(value)  ||  isSimpleOperator(value)  ||  isImmutableValue(value))  {  return  true;  }    [BUGGY]  new  IllegalStateException( "Unexpected  expression  node: "  +  value  + "  parent: "  +  value.getLastChild());  [BUGGY]     "Unexpected  expression  node   "  +  value  +     "\n  parent:   "  +  value.getParent());  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  value  String  JSC_PROPERTY_NAME_FN  childValue  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  rawJsString  res  s  sourceName  value  Map  vars  int  c  charno  end  endPos  index  len  lineno  memberIndex  nextSkipSlot  nextSlot  operator  prototypeIdx  start  startPos  total  type  Predicate  locals  	projects/Closure80/src/com/google/javascript/jscomp/NodeUtil.java	0.7071067811865475	2923	2925	2	replace	new  IllegalStateException( "Unexpected  expression  node: "  +  value  + "  parent: "  +  value.getLastChild());	  new    IllegalStateException(   "Unexpected    expression    node   "    +    value    +   "n    parent:   "    +    value.getLastChild());    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
45	[BUG]  [BUGGY]  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "  parent: "  +  value.getFirstChild());  [CE]  illegal  start  of  expression  [FE]                          IllegalStateException    [CONTEXT]    default:    if  (isAssignmentOp(value)  ||  isSimpleOperator(value)  ||  isImmutableValue(value))  {  return  true;  }    [BUGGY]  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "  parent: "  +  value.getFirstChild());  [BUGGY]     "Unexpected  expression  node   "  +  value  +     "\n  parent:   "  +  value.getParent());  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  value  String  JSC_PROPERTY_NAME_FN  childValue  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  rawJsString  res  s  sourceName  value  Map  vars  int  c  charno  end  endPos  index  len  lineno  memberIndex  nextSkipSlot  nextSlot  operator  prototypeIdx  start  startPos  total  type  Predicate  locals  	projects/Closure80/src/com/google/javascript/jscomp/NodeUtil.java	0.7071067811865475	2923	2925	2	replace	new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "  parent: "  +  value.getFirstChild());	  new    IllegalStateException(   "Unexpected    expression    node   "    +    value    +   "n    parent:   "    +    value.getLastChild());    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
46	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "  parent: "  +  value.getParent());  [CE]  illegal  start  of  expression  [FE]          IllegalStateException    [CONTEXT]    default:    if  (isAssignmentOp(value)  ||  isSimpleOperator(value)  ||  isImmutableValue(value))  {  return  true;  }    [BUGGY]  Throwables.throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "  parent: "  +  value.getParent());  [BUGGY]     "Unexpected  expression  node   "  +  value  +     "\n  parent:   "  +  value.getParent());  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  value  String  JSC_PROPERTY_NAME_FN  childValue  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  rawJsString  res  s  sourceName  value  Map  vars  int  c  charno  end  endPos  index  len  lineno  memberIndex  nextSkipSlot  nextSlot  operator  prototypeIdx  start  startPos  total  type  Predicate  locals  	projects/Closure80/src/com/google/javascript/jscomp/NodeUtil.java	0.7071067811865475	2923	2925	2	replace	Throwables.throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "  parent: "  +  value.getParent());	  throw    new    IllegalStateException(   "Unexpected    expression    node   "    +    value    +   "    parent:   "    +    value.getParent());    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
47	[BUG]  [BUGGY]  Throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "n  parent: "  +  value.getNext());  [CE]  illegal  start  of  expression  [FE]        IllegalStateException    [CONTEXT]    default:    if  (isAssignmentOp(value)  ||  isSimpleOperator(value)  ||  isImmutableValue(value))  {  return  true;  }    [BUGGY]  Throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "n  parent: "  +  value.getNext());  [BUGGY]     "Unexpected  expression  node   "  +  value  +     "\n  parent:   "  +  value.getParent());  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  value  String  JSC_PROPERTY_NAME_FN  childValue  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  rawJsString  res  s  sourceName  value  Map  vars  int  c  charno  end  endPos  index  len  lineno  memberIndex  nextSkipSlot  nextSlot  operator  prototypeIdx  start  startPos  total  type  Predicate  locals  	projects/Closure80/src/com/google/javascript/jscomp/NodeUtil.java	0.7071067811865475	2923	2925	2	replace	Throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "n  parent: "  +  value.getNext());	  Throw    new    IllegalStateException(   "Unexpected    expression    node   "    +    value    +   "n    parent:   "    +    value.getParent());    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
48	[BUG]  [BUGGY]  Throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + ",  parent: "  +  value.getParent());  [CE]  illegal  start  of  expression  [FE]          IllegalStateException    [CONTEXT]    default:    if  (isAssignmentOp(value)  ||  isSimpleOperator(value)  ||  isImmutableValue(value))  {  return  true;  }    [BUGGY]  Throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + ",  parent: "  +  value.getParent());  [BUGGY]     "Unexpected  expression  node   "  +  value  +     "\n  parent:   "  +  value.getParent());  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  value  String  JSC_PROPERTY_NAME_FN  childValue  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  rawJsString  res  s  sourceName  value  Map  vars  int  c  charno  end  endPos  index  len  lineno  memberIndex  nextSkipSlot  nextSlot  operator  prototypeIdx  start  startPos  total  type  Predicate  locals  	projects/Closure80/src/com/google/javascript/jscomp/NodeUtil.java	0.7071067811865475	2923	2925	2	replace	Throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + ",  parent: "  +  value.getParent());	  Throw    new    IllegalStateException(   "Unexpected    expression    node   "    +    value    +   "n    parent:   "    +    value.getParent());    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
49	[BUG]  [BUGGY]  Throw  new  IllegalStateException( "Unexpected  expression  node: "  +  value  + "  parent: "  +  value.getParent());  [CE]  illegal  start  of  expression  [FE]            IllegalStateException    [CONTEXT]    default:    if  (isAssignmentOp(value)  ||  isSimpleOperator(value)  ||  isImmutableValue(value))  {  return  true;  }    [BUGGY]  Throw  new  IllegalStateException( "Unexpected  expression  node: "  +  value  + "  parent: "  +  value.getParent());  [BUGGY]     "Unexpected  expression  node   "  +  value  +     "\n  parent:   "  +  value.getParent());  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  value  String  JSC_PROPERTY_NAME_FN  childValue  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  rawJsString  res  s  sourceName  value  Map  vars  int  c  charno  end  endPos  index  len  lineno  memberIndex  nextSkipSlot  nextSlot  operator  prototypeIdx  start  startPos  total  type  Predicate  locals  	projects/Closure80/src/com/google/javascript/jscomp/NodeUtil.java	0.7071067811865475	2923	2925	2	replace	Throw  new  IllegalStateException( "Unexpected  expression  node: "  +  value  + "  parent: "  +  value.getParent());	  Throw    new    IllegalStateException(   "Unexpected    expression    node   "    +    value    +   "n    parent:   "    +    value.getParent());    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
50	[BUG]  [BUGGY]  Throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "  parent: "  +  value.getParent());  [CE]  illegal  start  of  expression  [FE]              IllegalStateException    [CONTEXT]    default:    if  (isAssignmentOp(value)  ||  isSimpleOperator(value)  ||  isImmutableValue(value))  {  return  true;  }    [BUGGY]  Throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "  parent: "  +  value.getParent());  [BUGGY]     "Unexpected  expression  node   "  +  value  +     "\n  parent:   "  +  value.getParent());  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  value  String  JSC_PROPERTY_NAME_FN  childValue  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  rawJsString  res  s  sourceName  value  Map  vars  int  c  charno  end  endPos  index  len  lineno  memberIndex  nextSkipSlot  nextSlot  operator  prototypeIdx  start  startPos  total  type  Predicate  locals  	projects/Closure80/src/com/google/javascript/jscomp/NodeUtil.java	0.7071067811865475	2923	2925	2	replace	Throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "  parent: "  +  value.getParent());	  Throw    new    IllegalStateException(   "Unexpected    expression    node   "    +    value    +   "n    parent:   "    +    value.getParent());    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
51	[BUG]  [BUGGY]  Throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "n  parent: "  +  value.getLastChild());  [CE]  illegal  start  of  expression  [FE]                IllegalStateException    [CONTEXT]    default:    if  (isAssignmentOp(value)  ||  isSimpleOperator(value)  ||  isImmutableValue(value))  {  return  true;  }    [BUGGY]  Throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "n  parent: "  +  value.getLastChild());  [BUGGY]     "Unexpected  expression  node   "  +  value  +     "\n  parent:   "  +  value.getParent());  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  value  String  JSC_PROPERTY_NAME_FN  childValue  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  rawJsString  res  s  sourceName  value  Map  vars  int  c  charno  end  endPos  index  len  lineno  memberIndex  nextSkipSlot  nextSlot  operator  prototypeIdx  start  startPos  total  type  Predicate  locals  	projects/Closure80/src/com/google/javascript/jscomp/NodeUtil.java	0.7071067811865475	2923	2925	2	replace	Throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "n  parent: "  +  value.getLastChild());	  Throw    new    IllegalStateException(   "Unexpected    expression    node   "    +    value    +   "n    parent:   "    +    value.getParent());    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
52	[BUG]  [BUGGY]  if(value.getType()  ==  Token.FUNCTION)  {  throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "  parent: "  +  value.getNext());  }  [CE]  illegal  start  of  expression  [FE]                IllegalStateException    [CONTEXT]    default:    if  (isAssignmentOp(value)  ||  isSimpleOperator(value)  ||  isImmutableValue(value))  {  return  true;  }    [BUGGY]  if(value.getType()  ==  Token.FUNCTION)  {  throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "  parent: "  +  value.getNext());  }  [BUGGY]     "Unexpected  expression  node   "  +  value  +     "\n  parent:   "  +  value.getParent());  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  value  String  JSC_PROPERTY_NAME_FN  childValue  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  rawJsString  res  s  sourceName  value  Map  vars  int  c  charno  end  endPos  index  len  lineno  memberIndex  nextSkipSlot  nextSlot  operator  prototypeIdx  start  startPos  total  type  Predicate  locals  	projects/Closure80/src/com/google/javascript/jscomp/NodeUtil.java	0.7071067811865475	2923	2925	2	replace	if(value.getType()  ==  Token.FUNCTION)  {  throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "  parent: "  +  value.getNext());  }	  throw    new    IllegalStateException(   "Unexpected    expression    node   "    +    value    +   "n    parent:   "    +    value.getNext());    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
53	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "  parent: "  +  value.getNext());  [CE]  illegal  start  of  expression  [FE]                  IllegalStateException    [CONTEXT]    default:    if  (isAssignmentOp(value)  ||  isSimpleOperator(value)  ||  isImmutableValue(value))  {  return  true;  }    [BUGGY]  Throwables.throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "  parent: "  +  value.getNext());  [BUGGY]     "Unexpected  expression  node   "  +  value  +     "\n  parent:   "  +  value.getParent());  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  value  String  JSC_PROPERTY_NAME_FN  childValue  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  rawJsString  res  s  sourceName  value  Map  vars  int  c  charno  end  endPos  index  len  lineno  memberIndex  nextSkipSlot  nextSlot  operator  prototypeIdx  start  startPos  total  type  Predicate  locals  	projects/Closure80/src/com/google/javascript/jscomp/NodeUtil.java	0.7071067811865475	2923	2925	2	replace	Throwables.throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "  parent: "  +  value.getNext());	  throw    new    IllegalStateException(   "Unexpected    expression    node   "    +    value    +   "n    parent:   "    +    value.getNext());    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
54	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "  parent: "  +  value.getNext());  [CE]  illegal  start  of  expression  [FE]                    IllegalStateException    [CONTEXT]    default:    if  (isAssignmentOp(value)  ||  isSimpleOperator(value)  ||  isImmutableValue(value))  {  return  true;  }    [BUGGY]  throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "  parent: "  +  value.getNext());  [BUGGY]     "Unexpected  expression  node   "  +  value  +     "\n  parent:   "  +  value.getParent());  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  value  String  JSC_PROPERTY_NAME_FN  childValue  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  rawJsString  res  s  sourceName  value  Map  vars  int  c  charno  end  endPos  index  len  lineno  memberIndex  nextSkipSlot  nextSlot  operator  prototypeIdx  start  startPos  total  type  Predicate  locals  	projects/Closure80/src/com/google/javascript/jscomp/NodeUtil.java	0.7071067811865475	2923	2925	2	replace	throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "  parent: "  +  value.getNext());	  throw    new    IllegalStateException(   "Unexpected    expression    node   "    +    value    +   "n    parent:   "    +    value.getNext());    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
55	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + ",  parent: "  +  value.getParent());  [CE]  illegal  start  of  expression  [FE]        IllegalStateException    [CONTEXT]    default:    if  (isAssignmentOp(value)  ||  isSimpleOperator(value)  ||  isImmutableValue(value))  {  return  true;  }    [BUGGY]  Throwables.throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + ",  parent: "  +  value.getParent());  [BUGGY]     "Unexpected  expression  node   "  +  value  +     "\n  parent:   "  +  value.getParent());  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  value  String  JSC_PROPERTY_NAME_FN  childValue  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  rawJsString  res  s  sourceName  value  Map  vars  int  c  charno  end  endPos  index  len  lineno  memberIndex  nextSkipSlot  nextSlot  operator  prototypeIdx  start  startPos  total  type  Predicate  locals  	projects/Closure80/src/com/google/javascript/jscomp/NodeUtil.java	0.7071067811865475	2923	2925	2	replace	Throwables.throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + ",  parent: "  +  value.getParent());	  Throwables.throw    new    IllegalStateException(   "Unexpected    expression    node   "    +    value    +   "n    parent:   "    +    value.getParent());    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
56	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "n  parent: "  +  value.getNext());  [CE]  illegal  start  of  expression  [FE]          IllegalStateException    [CONTEXT]    default:    if  (isAssignmentOp(value)  ||  isSimpleOperator(value)  ||  isImmutableValue(value))  {  return  true;  }    [BUGGY]  Throwables.throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "n  parent: "  +  value.getNext());  [BUGGY]     "Unexpected  expression  node   "  +  value  +     "\n  parent:   "  +  value.getParent());  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  value  String  JSC_PROPERTY_NAME_FN  childValue  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  rawJsString  res  s  sourceName  value  Map  vars  int  c  charno  end  endPos  index  len  lineno  memberIndex  nextSkipSlot  nextSlot  operator  prototypeIdx  start  startPos  total  type  Predicate  locals  	projects/Closure80/src/com/google/javascript/jscomp/NodeUtil.java	0.7071067811865475	2923	2925	2	replace	Throwables.throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "n  parent: "  +  value.getNext());	  Throwables.throw    new    IllegalStateException(   "Unexpected    expression    node   "    +    value    +   "n    parent:   "    +    value.getParent());    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
57	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( "Unexpected  expression  node: "  +  value  + "  parent: "  +  value.getParent());  [CE]  illegal  start  of  expression  [FE]            IllegalStateException    [CONTEXT]    default:    if  (isAssignmentOp(value)  ||  isSimpleOperator(value)  ||  isImmutableValue(value))  {  return  true;  }    [BUGGY]  Throwables.throw  new  IllegalStateException( "Unexpected  expression  node: "  +  value  + "  parent: "  +  value.getParent());  [BUGGY]     "Unexpected  expression  node   "  +  value  +     "\n  parent:   "  +  value.getParent());  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  value  String  JSC_PROPERTY_NAME_FN  childValue  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  rawJsString  res  s  sourceName  value  Map  vars  int  c  charno  end  endPos  index  len  lineno  memberIndex  nextSkipSlot  nextSlot  operator  prototypeIdx  start  startPos  total  type  Predicate  locals  	projects/Closure80/src/com/google/javascript/jscomp/NodeUtil.java	0.7071067811865475	2923	2925	2	replace	Throwables.throw  new  IllegalStateException( "Unexpected  expression  node: "  +  value  + "  parent: "  +  value.getParent());	  Throwables.throw    new    IllegalStateException(   "Unexpected    expression    node   "    +    value    +   "n    parent:   "    +    value.getParent());    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
58	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "n  parent: "  +  value.getType());  [CE]  illegal  start  of  expression  [FE]              IllegalStateException    [CONTEXT]    default:    if  (isAssignmentOp(value)  ||  isSimpleOperator(value)  ||  isImmutableValue(value))  {  return  true;  }    [BUGGY]  Throwables.throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "n  parent: "  +  value.getType());  [BUGGY]     "Unexpected  expression  node   "  +  value  +     "\n  parent:   "  +  value.getParent());  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  value  String  JSC_PROPERTY_NAME_FN  childValue  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  rawJsString  res  s  sourceName  value  Map  vars  int  c  charno  end  endPos  index  len  lineno  memberIndex  nextSkipSlot  nextSlot  operator  prototypeIdx  start  startPos  total  type  Predicate  locals  	projects/Closure80/src/com/google/javascript/jscomp/NodeUtil.java	0.7071067811865475	2923	2925	2	replace	Throwables.throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "n  parent: "  +  value.getType());	  Throwables.throw    new    IllegalStateException(   "Unexpected    expression    node   "    +    value    +   "n    parent:   "    +    value.getParent());    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
59	[BUG]  [BUGGY]  safeGet(value)  {  throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "n  parent: "  +  value.getParent());  }  [CE]  illegal  start  of  expression  [FE]          IllegalStateException    [CONTEXT]    default:    if  (isAssignmentOp(value)  ||  isSimpleOperator(value)  ||  isImmutableValue(value))  {  return  true;  }    [BUGGY]  safeGet(value)  {  throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "n  parent: "  +  value.getParent());  }  [BUGGY]     "Unexpected  expression  node   "  +  value  +     "\n  parent:   "  +  value.getParent());  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  value  String  JSC_PROPERTY_NAME_FN  childValue  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  rawJsString  res  s  sourceName  value  Map  vars  int  c  charno  end  endPos  index  len  lineno  memberIndex  nextSkipSlot  nextSlot  operator  prototypeIdx  start  startPos  total  type  Predicate  locals  	projects/Closure80/src/com/google/javascript/jscomp/NodeUtil.java	0.7071067811865475	2923	2925	2	replace	safeGet(value)  {  throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "n  parent: "  +  value.getParent());  }	  if(value    ==    null)    {    throw    new    IllegalStateException(   "Unexpected    expression    node   "    +    value    +   "n    parent:   "    +    value.getParent());    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
60	[BUG]  [BUGGY]  if(value!=  null)  {  throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "  parent: "  +  value.getParent());  }  [CE]  illegal  start  of  expression  [FE]          IllegalStateException    [CONTEXT]    default:    if  (isAssignmentOp(value)  ||  isSimpleOperator(value)  ||  isImmutableValue(value))  {  return  true;  }    [BUGGY]  if(value!=  null)  {  throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "  parent: "  +  value.getParent());  }  [BUGGY]     "Unexpected  expression  node   "  +  value  +     "\n  parent:   "  +  value.getParent());  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  value  String  JSC_PROPERTY_NAME_FN  childValue  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  rawJsString  res  s  sourceName  value  Map  vars  int  c  charno  end  endPos  index  len  lineno  memberIndex  nextSkipSlot  nextSlot  operator  prototypeIdx  start  startPos  total  type  Predicate  locals  	projects/Closure80/src/com/google/javascript/jscomp/NodeUtil.java	0.7071067811865475	2923	2925	2	replace	if(value!=  null)  {  throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "  parent: "  +  value.getParent());  }	  throw    new    IllegalStateException(   "Unexpected    expression    node   "    +    value    +   "    parent:   "    +    value.getParent());    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
61	[BUG]  [BUGGY]  if(value  ==  null)  {  throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "  parent: "  +  value.getParent());  }  [CE]  illegal  start  of  expression  [FE]            IllegalStateException    [CONTEXT]    default:    if  (isAssignmentOp(value)  ||  isSimpleOperator(value)  ||  isImmutableValue(value))  {  return  true;  }    [BUGGY]  if(value  ==  null)  {  throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "  parent: "  +  value.getParent());  }  [BUGGY]     "Unexpected  expression  node   "  +  value  +     "\n  parent:   "  +  value.getParent());  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  value  String  JSC_PROPERTY_NAME_FN  childValue  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  rawJsString  res  s  sourceName  value  Map  vars  int  c  charno  end  endPos  index  len  lineno  memberIndex  nextSkipSlot  nextSlot  operator  prototypeIdx  start  startPos  total  type  Predicate  locals  	projects/Closure80/src/com/google/javascript/jscomp/NodeUtil.java	0.7071067811865475	2923	2925	2	replace	if(value  ==  null)  {  throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "  parent: "  +  value.getParent());  }	  throw    new    IllegalStateException(   "Unexpected    expression    node   "    +    value    +   "    parent:   "    +    value.getParent());    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
62	[BUG]  [BUGGY]  if(value.getType()  ==  Token.NAME)  {  throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "  parent: "  +  value.getNext());  }  [CE]  illegal  start  of  expression  [FE]                IllegalStateException    [CONTEXT]    default:    if  (isAssignmentOp(value)  ||  isSimpleOperator(value)  ||  isImmutableValue(value))  {  return  true;  }    [BUGGY]  if(value.getType()  ==  Token.NAME)  {  throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "  parent: "  +  value.getNext());  }  [BUGGY]     "Unexpected  expression  node   "  +  value  +     "\n  parent:   "  +  value.getParent());  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  value  String  JSC_PROPERTY_NAME_FN  childValue  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  rawJsString  res  s  sourceName  value  Map  vars  int  c  charno  end  endPos  index  len  lineno  memberIndex  nextSkipSlot  nextSlot  operator  prototypeIdx  start  startPos  total  type  Predicate  locals  	projects/Closure80/src/com/google/javascript/jscomp/NodeUtil.java	0.7071067811865475	2923	2925	2	replace	if(value.getType()  ==  Token.NAME)  {  throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "  parent: "  +  value.getNext());  }	  throw    new    IllegalStateException(   "Unexpected    expression    node   "    +    value    +   "n    parent:   "    +    value.getNext());    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
63	[BUG]  [BUGGY]  if(value!=  null)  {  throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "  parent: "  +  value.getNext());  }  [CE]  illegal  start  of  expression  [FE]                  IllegalStateException    [CONTEXT]    default:    if  (isAssignmentOp(value)  ||  isSimpleOperator(value)  ||  isImmutableValue(value))  {  return  true;  }    [BUGGY]  if(value!=  null)  {  throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "  parent: "  +  value.getNext());  }  [BUGGY]     "Unexpected  expression  node   "  +  value  +     "\n  parent:   "  +  value.getParent());  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  value  String  JSC_PROPERTY_NAME_FN  childValue  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  rawJsString  res  s  sourceName  value  Map  vars  int  c  charno  end  endPos  index  len  lineno  memberIndex  nextSkipSlot  nextSlot  operator  prototypeIdx  start  startPos  total  type  Predicate  locals  	projects/Closure80/src/com/google/javascript/jscomp/NodeUtil.java	0.7071067811865475	2923	2925	2	replace	if(value!=  null)  {  throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "  parent: "  +  value.getNext());  }	  throw    new    IllegalStateException(   "Unexpected    expression    node   "    +    value    +   "n    parent:   "    +    value.getNext());    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
64	[BUG]  [BUGGY]  parent  ==  null  &&  value!=  null)  {  throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "n  parent: "  +  value.getParent());  }  [CE]  illegal  start  of  expression  [FE]        IllegalStateException    [CONTEXT]    default:    if  (isAssignmentOp(value)  ||  isSimpleOperator(value)  ||  isImmutableValue(value))  {  return  true;  }    [BUGGY]  parent  ==  null  &&  value!=  null)  {  throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "n  parent: "  +  value.getParent());  }  [BUGGY]     "Unexpected  expression  node   "  +  value  +     "\n  parent:   "  +  value.getParent());  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  value  String  JSC_PROPERTY_NAME_FN  childValue  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  rawJsString  res  s  sourceName  value  Map  vars  int  c  charno  end  endPos  index  len  lineno  memberIndex  nextSkipSlot  nextSlot  operator  prototypeIdx  start  startPos  total  type  Predicate  locals  	projects/Closure80/src/com/google/javascript/jscomp/NodeUtil.java	0.7071067811865475	2923	2925	2	replace	parent  ==  null  &&  value!=  null)  {  throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "n  parent: "  +  value.getParent());  }	  if(value!=    null)    {    throw    new    IllegalStateException(   "Unexpected    expression    node   "    +    value    +   "n    parent:   "    +    value.getParent());    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
65	[BUG]  [BUGGY]  new  IllegalStateException(value  + "Unexpected  expression  node   "  +  value  + "n  parent: "  +  value.getParent());  [CE]  illegal  start  of  expression  [FE]              IllegalStateException    [CONTEXT]    default:    if  (isAssignmentOp(value)  ||  isSimpleOperator(value)  ||  isImmutableValue(value))  {  return  true;  }    [BUGGY]  new  IllegalStateException(value  + "Unexpected  expression  node   "  +  value  + "n  parent: "  +  value.getParent());  [BUGGY]     "Unexpected  expression  node   "  +  value  +     "\n  parent:   "  +  value.getParent());  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  value  String  JSC_PROPERTY_NAME_FN  childValue  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  rawJsString  res  s  sourceName  value  Map  vars  int  c  charno  end  endPos  index  len  lineno  memberIndex  nextSkipSlot  nextSlot  operator  prototypeIdx  start  startPos  total  type  Predicate  locals  	projects/Closure80/src/com/google/javascript/jscomp/NodeUtil.java	0.7071067811865475	2923	2925	2	replace	new  IllegalStateException(value  + "Unexpected  expression  node   "  +  value  + "n  parent: "  +  value.getParent());	  new    IllegalStateException(   "Unexpected    expression    node   "    +    value    +   "n    parent:   "    +    value.getParent());    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
66	[BUG]  [BUGGY]  new  IllegalStateException( "Unexpected  expression  node  ' "  +  value  + "'  parent:   "  +  value.getString());  [CE]  illegal  start  of  expression  [FE]                IllegalStateException    [CONTEXT]    default:    if  (isAssignmentOp(value)  ||  isSimpleOperator(value)  ||  isImmutableValue(value))  {  return  true;  }    [BUGGY]  new  IllegalStateException( "Unexpected  expression  node  ' "  +  value  + "'  parent:   "  +  value.getString());  [BUGGY]     "Unexpected  expression  node   "  +  value  +     "\n  parent:   "  +  value.getParent());  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  value  String  JSC_PROPERTY_NAME_FN  childValue  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  rawJsString  res  s  sourceName  value  Map  vars  int  c  charno  end  endPos  index  len  lineno  memberIndex  nextSkipSlot  nextSlot  operator  prototypeIdx  start  startPos  total  type  Predicate  locals  	projects/Closure80/src/com/google/javascript/jscomp/NodeUtil.java	0.7071067811865475	2923	2925	2	replace	new  IllegalStateException( "Unexpected  expression  node  ' "  +  value  + "'  parent:   "  +  value.getString());	  new    IllegalStateException(   "Unexpected    expression    node   "    +    value    +   "n    parent:   "    +    value.getString());    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
67	[BUG]  [BUGGY]  new  IllegalStateException(value  + "Unexpected  expression  node   "  +  value  + "  parent:   "  +  value.getString());  [CE]  illegal  start  of  expression  [FE]                  IllegalStateException    [CONTEXT]    default:    if  (isAssignmentOp(value)  ||  isSimpleOperator(value)  ||  isImmutableValue(value))  {  return  true;  }    [BUGGY]  new  IllegalStateException(value  + "Unexpected  expression  node   "  +  value  + "  parent:   "  +  value.getString());  [BUGGY]     "Unexpected  expression  node   "  +  value  +     "\n  parent:   "  +  value.getParent());  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  value  String  JSC_PROPERTY_NAME_FN  childValue  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  rawJsString  res  s  sourceName  value  Map  vars  int  c  charno  end  endPos  index  len  lineno  memberIndex  nextSkipSlot  nextSlot  operator  prototypeIdx  start  startPos  total  type  Predicate  locals  	projects/Closure80/src/com/google/javascript/jscomp/NodeUtil.java	0.7071067811865475	2923	2925	2	replace	new  IllegalStateException(value  + "Unexpected  expression  node   "  +  value  + "  parent:   "  +  value.getString());	  new    IllegalStateException(   "Unexpected    expression    node   "    +    value    +   "n    parent:   "    +    value.getString());    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
68	[BUG]  [BUGGY]  if(value!=  null)  {  throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "  parent: "  +  value.getLastChild());  }  [CE]  illegal  start  of  expression  [FE]                  IllegalStateException    [CONTEXT]    default:    if  (isAssignmentOp(value)  ||  isSimpleOperator(value)  ||  isImmutableValue(value))  {  return  true;  }    [BUGGY]  if(value!=  null)  {  throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "  parent: "  +  value.getLastChild());  }  [BUGGY]     "Unexpected  expression  node   "  +  value  +     "\n  parent:   "  +  value.getParent());  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  value  String  JSC_PROPERTY_NAME_FN  childValue  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  rawJsString  res  s  sourceName  value  Map  vars  int  c  charno  end  endPos  index  len  lineno  memberIndex  nextSkipSlot  nextSlot  operator  prototypeIdx  start  startPos  total  type  Predicate  locals  	projects/Closure80/src/com/google/javascript/jscomp/NodeUtil.java	0.7071067811865475	2923	2925	2	replace	if(value!=  null)  {  throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "  parent: "  +  value.getLastChild());  }	  throw    new    IllegalStateException(   "Unexpected    expression    node   "    +    value    +   "n    parent:   "    +    value.getLastChild());    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
69	[BUG]  [BUGGY]  if(value.getType()  ==  Token.NAME)  {  throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "  parent: "  +  value.getLastChild());  }  [CE]  illegal  start  of  expression  [FE]                    IllegalStateException    [CONTEXT]    default:    if  (isAssignmentOp(value)  ||  isSimpleOperator(value)  ||  isImmutableValue(value))  {  return  true;  }    [BUGGY]  if(value.getType()  ==  Token.NAME)  {  throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "  parent: "  +  value.getLastChild());  }  [BUGGY]     "Unexpected  expression  node   "  +  value  +     "\n  parent:   "  +  value.getParent());  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  value  String  JSC_PROPERTY_NAME_FN  childValue  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  rawJsString  res  s  sourceName  value  Map  vars  int  c  charno  end  endPos  index  len  lineno  memberIndex  nextSkipSlot  nextSlot  operator  prototypeIdx  start  startPos  total  type  Predicate  locals  	projects/Closure80/src/com/google/javascript/jscomp/NodeUtil.java	0.7071067811865475	2923	2925	2	replace	if(value.getType()  ==  Token.NAME)  {  throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "  parent: "  +  value.getLastChild());  }	  throw    new    IllegalStateException(   "Unexpected    expression    node   "    +    value    +   "n    parent:   "    +    value.getLastChild());    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
70	[BUG]  [BUGGY]  if(value!=  null)  {  throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "  parent: "  +  value.getString());  }  [CE]  illegal  start  of  expression  [FE]            IllegalStateException    [CONTEXT]    default:    if  (isAssignmentOp(value)  ||  isSimpleOperator(value)  ||  isImmutableValue(value))  {  return  true;  }    [BUGGY]  if(value!=  null)  {  throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "  parent: "  +  value.getString());  }  [BUGGY]     "Unexpected  expression  node   "  +  value  +     "\n  parent:   "  +  value.getParent());  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  value  String  JSC_PROPERTY_NAME_FN  childValue  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  rawJsString  res  s  sourceName  value  Map  vars  int  c  charno  end  endPos  index  len  lineno  memberIndex  nextSkipSlot  nextSlot  operator  prototypeIdx  start  startPos  total  type  Predicate  locals  	projects/Closure80/src/com/google/javascript/jscomp/NodeUtil.java	0.7071067811865475	2923	2925	2	replace	if(value!=  null)  {  throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "  parent: "  +  value.getString());  }	  throw    new    IllegalStateException(   "Unexpected    expression    node   "    +    value    +   "n    parent:   "    +    value.getString());    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
71	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "  parent: "  +  value.getString());  [CE]  illegal  start  of  expression  [FE]              IllegalStateException    [CONTEXT]    default:    if  (isAssignmentOp(value)  ||  isSimpleOperator(value)  ||  isImmutableValue(value))  {  return  true;  }    [BUGGY]  throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "  parent: "  +  value.getString());  [BUGGY]     "Unexpected  expression  node   "  +  value  +     "\n  parent:   "  +  value.getParent());  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  value  String  JSC_PROPERTY_NAME_FN  childValue  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  rawJsString  res  s  sourceName  value  Map  vars  int  c  charno  end  endPos  index  len  lineno  memberIndex  nextSkipSlot  nextSlot  operator  prototypeIdx  start  startPos  total  type  Predicate  locals  	projects/Closure80/src/com/google/javascript/jscomp/NodeUtil.java	0.7071067811865475	2923	2925	2	replace	throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "  parent: "  +  value.getString());	  throw    new    IllegalStateException(   "Unexpected    expression    node   "    +    value    +   "n    parent:   "    +    value.getString());    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
72	[BUG]  [BUGGY]  Preconditions.checkArgument(value.getType()  ==  Token.NAME);  [CE]  illegal  start  of  expression  [FE]                      IllegalStateException    [CONTEXT]    default:    if  (isAssignmentOp(value)  ||  isSimpleOperator(value)  ||  isImmutableValue(value))  {  return  true;  }    [BUGGY]  Preconditions.checkArgument(value.getType()  ==  Token.NAME);  [BUGGY]     "Unexpected  expression  node   "  +  value  +     "\n  parent:   "  +  value.getParent());  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  value  String  JSC_PROPERTY_NAME_FN  childValue  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  rawJsString  res  s  sourceName  value  Map  vars  int  c  charno  end  endPos  index  len  lineno  memberIndex  nextSkipSlot  nextSlot  operator  prototypeIdx  start  startPos  total  type  Predicate  locals  	projects/Closure80/src/com/google/javascript/jscomp/NodeUtil.java	0.7071067811865475	2923	2925	2	replace	Preconditions.checkArgument(value.getType()  ==  Token.NAME);	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
73	[BUG]  [BUGGY]  Preconditions.checkArgument(value.getType()  ==  Token.FUNCTION);  [CE]  illegal  start  of  expression  [FE]                        IllegalStateException    [CONTEXT]    default:    if  (isAssignmentOp(value)  ||  isSimpleOperator(value)  ||  isImmutableValue(value))  {  return  true;  }    [BUGGY]  Preconditions.checkArgument(value.getType()  ==  Token.FUNCTION);  [BUGGY]     "Unexpected  expression  node   "  +  value  +     "\n  parent:   "  +  value.getParent());  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  value  String  JSC_PROPERTY_NAME_FN  childValue  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  rawJsString  res  s  sourceName  value  Map  vars  int  c  charno  end  endPos  index  len  lineno  memberIndex  nextSkipSlot  nextSlot  operator  prototypeIdx  start  startPos  total  type  Predicate  locals  	projects/Closure80/src/com/google/javascript/jscomp/NodeUtil.java	0.7071067811865475	2923	2925	2	replace	Preconditions.checkArgument(value.getType()  ==  Token.FUNCTION);	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
74	[BUG]  [BUGGY]  Preconditions.checkState(value.getType()  ==  Token.NAME)  {  throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "n  parent: "  +  value.getParent());  }  [CE]  illegal  start  of  expression  [FE]              IllegalStateException    [CONTEXT]    default:    if  (isAssignmentOp(value)  ||  isSimpleOperator(value)  ||  isImmutableValue(value))  {  return  true;  }    [BUGGY]  Preconditions.checkState(value.getType()  ==  Token.NAME)  {  throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "n  parent: "  +  value.getParent());  }  [BUGGY]     "Unexpected  expression  node   "  +  value  +     "\n  parent:   "  +  value.getParent());  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  value  String  JSC_PROPERTY_NAME_FN  childValue  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  rawJsString  res  s  sourceName  value  Map  vars  int  c  charno  end  endPos  index  len  lineno  memberIndex  nextSkipSlot  nextSlot  operator  prototypeIdx  start  startPos  total  type  Predicate  locals  	projects/Closure80/src/com/google/javascript/jscomp/NodeUtil.java	0.7071067811865475	2923	2925	2	replace	Preconditions.checkState(value.getType()  ==  Token.NAME)  {  throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "n  parent: "  +  value.getParent());  }	  if(value.getType()    ==    Token.NAME)    {    throw    new    IllegalStateException(   "Unexpected    expression    node   "    +    value    +   "n    parent:   "    +    value.getParent());    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
75	[BUG]  [BUGGY]  Throw  new  IllegalStateException( "Unexpected  expression  node: "  +  value  + "n  parent: "  +  value.getParent());  [CE]  illegal  start  of  expression  [FE]        IllegalStateException    [CONTEXT]    default:    if  (isAssignmentOp(value)  ||  isSimpleOperator(value)  ||  isImmutableValue(value))  {  return  true;  }    [BUGGY]  Throw  new  IllegalStateException( "Unexpected  expression  node: "  +  value  + "n  parent: "  +  value.getParent());  [BUGGY]     "Unexpected  expression  node   "  +  value  +     "\n  parent:   "  +  value.getParent());  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  value  String  JSC_PROPERTY_NAME_FN  childValue  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  rawJsString  res  s  sourceName  value  Map  vars  int  c  charno  end  endPos  index  len  lineno  memberIndex  nextSkipSlot  nextSlot  operator  prototypeIdx  start  startPos  total  type  Predicate  locals  	projects/Closure80/src/com/google/javascript/jscomp/NodeUtil.java	0.7071067811865475	2923	2925	2	replace	Throw  new  IllegalStateException( "Unexpected  expression  node: "  +  value  + "n  parent: "  +  value.getParent());	  Throw    new    IllegalStateException(   "Unexpected    expression    node   "    +    value    +   "n    parent:   "    +    value.getParent());    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
76	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + ",  parent: "  +  value.getParent());  [CE]  illegal  start  of  expression  [FE]            IllegalStateException    [CONTEXT]    default:    if  (isAssignmentOp(value)  ||  isSimpleOperator(value)  ||  isImmutableValue(value))  {  return  true;  }    [BUGGY]  throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + ",  parent: "  +  value.getParent());  [BUGGY]     "Unexpected  expression  node   "  +  value  +     "\n  parent:   "  +  value.getParent());  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  value  String  JSC_PROPERTY_NAME_FN  childValue  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  rawJsString  res  s  sourceName  value  Map  vars  int  c  charno  end  endPos  index  len  lineno  memberIndex  nextSkipSlot  nextSlot  operator  prototypeIdx  start  startPos  total  type  Predicate  locals  	projects/Closure80/src/com/google/javascript/jscomp/NodeUtil.java	0.7071067811865475	2923	2925	2	replace	throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + ",  parent: "  +  value.getParent());	  throw    new    IllegalStateException(   "Unexpected    expression    node   "    +    value    +   "n    parent:   "    +    value.getParent());    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
77	[BUG]  [BUGGY]  parent  ==  null  ||  value!=  null)  {  throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "n  parent: "  +  value.getParent());  }  [CE]  illegal  start  of  expression  [FE]        IllegalStateException    [CONTEXT]    default:    if  (isAssignmentOp(value)  ||  isSimpleOperator(value)  ||  isImmutableValue(value))  {  return  true;  }    [BUGGY]  parent  ==  null  ||  value!=  null)  {  throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "n  parent: "  +  value.getParent());  }  [BUGGY]     "Unexpected  expression  node   "  +  value  +     "\n  parent:   "  +  value.getParent());  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  value  String  JSC_PROPERTY_NAME_FN  childValue  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  rawJsString  res  s  sourceName  value  Map  vars  int  c  charno  end  endPos  index  len  lineno  memberIndex  nextSkipSlot  nextSlot  operator  prototypeIdx  start  startPos  total  type  Predicate  locals  	projects/Closure80/src/com/google/javascript/jscomp/NodeUtil.java	0.7071067811865475	2923	2925	2	replace	parent  ==  null  ||  value!=  null)  {  throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "n  parent: "  +  value.getParent());  }	  if(value!=    null)    {    throw    new    IllegalStateException(   "Unexpected    expression    node   "    +    value    +   "n    parent:   "    +    value.getParent());    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
78	[BUG]  [BUGGY]  aughtException( "Unexpected  expression  node   "  +  value  + "n  parent: "  +  value.getParent());  [CE]  illegal  start  of  expression  [FE]          IllegalStateException    [CONTEXT]    default:    if  (isAssignmentOp(value)  ||  isSimpleOperator(value)  ||  isImmutableValue(value))  {  return  true;  }    [BUGGY]  aughtException( "Unexpected  expression  node   "  +  value  + "n  parent: "  +  value.getParent());  [BUGGY]     "Unexpected  expression  node   "  +  value  +     "\n  parent:   "  +  value.getParent());  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  value  String  JSC_PROPERTY_NAME_FN  childValue  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  rawJsString  res  s  sourceName  value  Map  vars  int  c  charno  end  endPos  index  len  lineno  memberIndex  nextSkipSlot  nextSlot  operator  prototypeIdx  start  startPos  total  type  Predicate  locals  	projects/Closure80/src/com/google/javascript/jscomp/NodeUtil.java	0.7071067811865475	2923	2925	2	replace	aughtException( "Unexpected  expression  node   "  +  value  + "n  parent: "  +  value.getParent());	  if(value!=    null)    {    throw    new    IllegalStateException(   "Unexpected    expression    node   "    +    value    +   "n    parent:   "    +    value.getParent());    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
79	[BUG]  [BUGGY]  new  IllegalStateException( "Unexpected  expression  node:   "  +  value  + "n  parent: "  +  value.getParent());  [CE]  illegal  start  of  expression  [FE]              IllegalStateException    [CONTEXT]    default:    if  (isAssignmentOp(value)  ||  isSimpleOperator(value)  ||  isImmutableValue(value))  {  return  true;  }    [BUGGY]  new  IllegalStateException( "Unexpected  expression  node:   "  +  value  + "n  parent: "  +  value.getParent());  [BUGGY]     "Unexpected  expression  node   "  +  value  +     "\n  parent:   "  +  value.getParent());  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  value  String  JSC_PROPERTY_NAME_FN  childValue  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  rawJsString  res  s  sourceName  value  Map  vars  int  c  charno  end  endPos  index  len  lineno  memberIndex  nextSkipSlot  nextSlot  operator  prototypeIdx  start  startPos  total  type  Predicate  locals  	projects/Closure80/src/com/google/javascript/jscomp/NodeUtil.java	0.7071067811865475	2923	2925	2	replace	new  IllegalStateException( "Unexpected  expression  node:   "  +  value  + "n  parent: "  +  value.getParent());	  new    IllegalStateException(   "Unexpected    expression    node   "    +    value    +   "n    parent:   "    +    value.getParent());    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
80	[BUG]  [BUGGY]  Throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "n  parent: "  +  value.getString());  [CE]  illegal  start  of  expression  [FE]            IllegalStateException    [CONTEXT]    default:    if  (isAssignmentOp(value)  ||  isSimpleOperator(value)  ||  isImmutableValue(value))  {  return  true;  }    [BUGGY]  Throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "n  parent: "  +  value.getString());  [BUGGY]     "Unexpected  expression  node   "  +  value  +     "\n  parent:   "  +  value.getParent());  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  value  String  JSC_PROPERTY_NAME_FN  childValue  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  rawJsString  res  s  sourceName  value  Map  vars  int  c  charno  end  endPos  index  len  lineno  memberIndex  nextSkipSlot  nextSlot  operator  prototypeIdx  start  startPos  total  type  Predicate  locals  	projects/Closure80/src/com/google/javascript/jscomp/NodeUtil.java	0.7071067811865475	2923	2925	2	replace	Throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "n  parent: "  +  value.getString());	  throw    new    IllegalStateException(   "Unexpected    expression    node   "    +    value    +   "n    parent:   "    +    value.getString());    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
81	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "n  parent: "  +  value.getString());  [CE]  illegal  start  of  expression  [FE]              IllegalStateException    [CONTEXT]    default:    if  (isAssignmentOp(value)  ||  isSimpleOperator(value)  ||  isImmutableValue(value))  {  return  true;  }    [BUGGY]  Throwables.throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "n  parent: "  +  value.getString());  [BUGGY]     "Unexpected  expression  node   "  +  value  +     "\n  parent:   "  +  value.getParent());  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  value  String  JSC_PROPERTY_NAME_FN  childValue  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  rawJsString  res  s  sourceName  value  Map  vars  int  c  charno  end  endPos  index  len  lineno  memberIndex  nextSkipSlot  nextSlot  operator  prototypeIdx  start  startPos  total  type  Predicate  locals  	projects/Closure80/src/com/google/javascript/jscomp/NodeUtil.java	0.7071067811865475	2923	2925	2	replace	Throwables.throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "n  parent: "  +  value.getString());	  throw    new    IllegalStateException(   "Unexpected    expression    node   "    +    value    +   "n    parent:   "    +    value.getString());    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
82	[BUG]  [BUGGY]  parent  <  NUMBERIC_RESULT_PREDICATE  &&  value.getType()  ==  Token.NAME)  {  throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "n  parent: "  +  value.getParent());  }  [CE]  illegal  start  of  expression  [FE]              IllegalStateException    [CONTEXT]    default:    if  (isAssignmentOp(value)  ||  isSimpleOperator(value)  ||  isImmutableValue(value))  {  return  true;  }    [BUGGY]  parent  <  NUMBERIC_RESULT_PREDICATE  &&  value.getType()  ==  Token.NAME)  {  throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "n  parent: "  +  value.getParent());  }  [BUGGY]     "Unexpected  expression  node   "  +  value  +     "\n  parent:   "  +  value.getParent());  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  value  String  JSC_PROPERTY_NAME_FN  childValue  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  rawJsString  res  s  sourceName  value  Map  vars  int  c  charno  end  endPos  index  len  lineno  memberIndex  nextSkipSlot  nextSlot  operator  prototypeIdx  start  startPos  total  type  Predicate  locals  	projects/Closure80/src/com/google/javascript/jscomp/NodeUtil.java	0.7071067811865475	2923	2925	2	replace	parent  <  NUMBERIC_RESULT_PREDICATE  &&  value.getType()  ==  Token.NAME)  {  throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "n  parent: "  +  value.getParent());  }	  if(value.getType()    ==    Token.NAME)    {    throw    new    IllegalStateException(   "Unexpected    expression    node   "    +    value    +   "n    parent:   "    +    value.getParent());    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
83	[BUG]  [BUGGY]  parent  <  NUMBERIC_RESULT_PREDICATE  ||  value.getType()  ==  Token.NAME)  {  throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "n  parent: "  +  value.getParent());  }  [CE]  illegal  start  of  expression  [FE]                IllegalStateException    [CONTEXT]    default:    if  (isAssignmentOp(value)  ||  isSimpleOperator(value)  ||  isImmutableValue(value))  {  return  true;  }    [BUGGY]  parent  <  NUMBERIC_RESULT_PREDICATE  ||  value.getType()  ==  Token.NAME)  {  throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "n  parent: "  +  value.getParent());  }  [BUGGY]     "Unexpected  expression  node   "  +  value  +     "\n  parent:   "  +  value.getParent());  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  value  String  JSC_PROPERTY_NAME_FN  childValue  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  rawJsString  res  s  sourceName  value  Map  vars  int  c  charno  end  endPos  index  len  lineno  memberIndex  nextSkipSlot  nextSlot  operator  prototypeIdx  start  startPos  total  type  Predicate  locals  	projects/Closure80/src/com/google/javascript/jscomp/NodeUtil.java	0.7071067811865475	2923	2925	2	replace	parent  <  NUMBERIC_RESULT_PREDICATE  ||  value.getType()  ==  Token.NAME)  {  throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "n  parent: "  +  value.getParent());  }	  if(value.getType()    ==    Token.NAME)    {    throw    new    IllegalStateException(   "Unexpected    expression    node   "    +    value    +   "n    parent:   "    +    value.getParent());    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
84	[BUG]  [BUGGY]  parent  <  NUMBERIC_RESULT_PREDICATE  &&  value.getType()  ==  Token.NAME)  {  throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + ",  parent: "  +  value.getParent());  }  [CE]  illegal  start  of  expression  [FE]                  IllegalStateException    [CONTEXT]    default:    if  (isAssignmentOp(value)  ||  isSimpleOperator(value)  ||  isImmutableValue(value))  {  return  true;  }    [BUGGY]  parent  <  NUMBERIC_RESULT_PREDICATE  &&  value.getType()  ==  Token.NAME)  {  throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + ",  parent: "  +  value.getParent());  }  [BUGGY]     "Unexpected  expression  node   "  +  value  +     "\n  parent:   "  +  value.getParent());  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  value  String  JSC_PROPERTY_NAME_FN  childValue  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  rawJsString  res  s  sourceName  value  Map  vars  int  c  charno  end  endPos  index  len  lineno  memberIndex  nextSkipSlot  nextSlot  operator  prototypeIdx  start  startPos  total  type  Predicate  locals  	projects/Closure80/src/com/google/javascript/jscomp/NodeUtil.java	0.7071067811865475	2923	2925	2	replace	parent  <  NUMBERIC_RESULT_PREDICATE  &&  value.getType()  ==  Token.NAME)  {  throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + ",  parent: "  +  value.getParent());  }	  if(value.getType()    ==    Token.NAME)    {    throw    new    IllegalStateException(   "Unexpected    expression    node   "    +    value    +   "n    parent:   "    +    value.getParent());    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
85	[BUG]  [BUGGY]  parent  <  NUMBERIC_RESULT_PREDICATE  &&  value.getType()  ==  Token.FUNCTION)  {  throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "n  parent: "  +  value.getParent());  }  [CE]  illegal  start  of  expression  [FE]          IllegalStateException    [CONTEXT]    default:    if  (isAssignmentOp(value)  ||  isSimpleOperator(value)  ||  isImmutableValue(value))  {  return  true;  }    [BUGGY]  parent  <  NUMBERIC_RESULT_PREDICATE  &&  value.getType()  ==  Token.FUNCTION)  {  throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "n  parent: "  +  value.getParent());  }  [BUGGY]     "Unexpected  expression  node   "  +  value  +     "\n  parent:   "  +  value.getParent());  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  value  String  JSC_PROPERTY_NAME_FN  childValue  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  rawJsString  res  s  sourceName  value  Map  vars  int  c  charno  end  endPos  index  len  lineno  memberIndex  nextSkipSlot  nextSlot  operator  prototypeIdx  start  startPos  total  type  Predicate  locals  	projects/Closure80/src/com/google/javascript/jscomp/NodeUtil.java	0.7071067811865475	2923	2925	2	replace	parent  <  NUMBERIC_RESULT_PREDICATE  &&  value.getType()  ==  Token.FUNCTION)  {  throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "n  parent: "  +  value.getParent());  }	  if(value.getType()    ==    Token.FUNCTION)    {    throw    new    IllegalStateException(   "Unexpected    expression    node   "    +    value    +   "n    parent:   "    +    value.getParent());    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
86	[BUG]  [BUGGY]  parent  <  NUMBERIC_RESULT_PREDICATE  ||  value.getType()  ==  Token.FUNCTION)  {  throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "n  parent: "  +  value.getParent());  }  [CE]  illegal  start  of  expression  [FE]            IllegalStateException    [CONTEXT]    default:    if  (isAssignmentOp(value)  ||  isSimpleOperator(value)  ||  isImmutableValue(value))  {  return  true;  }    [BUGGY]  parent  <  NUMBERIC_RESULT_PREDICATE  ||  value.getType()  ==  Token.FUNCTION)  {  throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "n  parent: "  +  value.getParent());  }  [BUGGY]     "Unexpected  expression  node   "  +  value  +     "\n  parent:   "  +  value.getParent());  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  value  String  JSC_PROPERTY_NAME_FN  childValue  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  rawJsString  res  s  sourceName  value  Map  vars  int  c  charno  end  endPos  index  len  lineno  memberIndex  nextSkipSlot  nextSlot  operator  prototypeIdx  start  startPos  total  type  Predicate  locals  	projects/Closure80/src/com/google/javascript/jscomp/NodeUtil.java	0.7071067811865475	2923	2925	2	replace	parent  <  NUMBERIC_RESULT_PREDICATE  ||  value.getType()  ==  Token.FUNCTION)  {  throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "n  parent: "  +  value.getParent());  }	  if(value.getType()    ==    Token.FUNCTION)    {    throw    new    IllegalStateException(   "Unexpected    expression    node   "    +    value    +   "n    parent:   "    +    value.getParent());    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
87	[BUG]  [BUGGY]  parent  <  NUMBERIC_RESULT_PREDICATE  &&  value.getType()  ==  Token.FUNCTION)  {  throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + ",  parent: "  +  value.getParent());  }  [CE]  illegal  start  of  expression  [FE]              IllegalStateException    [CONTEXT]    default:    if  (isAssignmentOp(value)  ||  isSimpleOperator(value)  ||  isImmutableValue(value))  {  return  true;  }    [BUGGY]  parent  <  NUMBERIC_RESULT_PREDICATE  &&  value.getType()  ==  Token.FUNCTION)  {  throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + ",  parent: "  +  value.getParent());  }  [BUGGY]     "Unexpected  expression  node   "  +  value  +     "\n  parent:   "  +  value.getParent());  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  value  String  JSC_PROPERTY_NAME_FN  childValue  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  rawJsString  res  s  sourceName  value  Map  vars  int  c  charno  end  endPos  index  len  lineno  memberIndex  nextSkipSlot  nextSlot  operator  prototypeIdx  start  startPos  total  type  Predicate  locals  	projects/Closure80/src/com/google/javascript/jscomp/NodeUtil.java	0.7071067811865475	2923	2925	2	replace	parent  <  NUMBERIC_RESULT_PREDICATE  &&  value.getType()  ==  Token.FUNCTION)  {  throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + ",  parent: "  +  value.getParent());  }	  if(value.getType()    ==    Token.FUNCTION)    {    throw    new    IllegalStateException(   "Unexpected    expression    node   "    +    value    +   "n    parent:   "    +    value.getParent());    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
88	[BUG]  [BUGGY]  parent  <  NUMBERIC_RESULT_PREDICATE?>)  {  throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "n  parent: "  +  value.getParent());  }  [CE]  illegal  start  of  expression  [FE]                IllegalStateException    [CONTEXT]    default:    if  (isAssignmentOp(value)  ||  isSimpleOperator(value)  ||  isImmutableValue(value))  {  return  true;  }    [BUGGY]  parent  <  NUMBERIC_RESULT_PREDICATE?>)  {  throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "n  parent: "  +  value.getParent());  }  [BUGGY]     "Unexpected  expression  node   "  +  value  +     "\n  parent:   "  +  value.getParent());  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  value  String  JSC_PROPERTY_NAME_FN  childValue  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  rawJsString  res  s  sourceName  value  Map  vars  int  c  charno  end  endPos  index  len  lineno  memberIndex  nextSkipSlot  nextSlot  operator  prototypeIdx  start  startPos  total  type  Predicate  locals  	projects/Closure80/src/com/google/javascript/jscomp/NodeUtil.java	0.7071067811865475	2923	2925	2	replace	parent  <  NUMBERIC_RESULT_PREDICATE?>)  {  throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "n  parent: "  +  value.getParent());  }	  if(value.getType()    ==    Token.FUNCTION)    {    throw    new    IllegalStateException(   "Unexpected    expression    node   "    +    value    +   "n    parent:   "    +    value.getParent());    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
89	[BUG]  [BUGGY]  parent  <  NUMBERIC_RESULT_PREDICATE  &&  value  ==  null)  {  throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "n  parent: "  +  value.getParent());  }  [CE]  illegal  start  of  expression  [FE]          IllegalStateException    [CONTEXT]    default:    if  (isAssignmentOp(value)  ||  isSimpleOperator(value)  ||  isImmutableValue(value))  {  return  true;  }    [BUGGY]  parent  <  NUMBERIC_RESULT_PREDICATE  &&  value  ==  null)  {  throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "n  parent: "  +  value.getParent());  }  [BUGGY]     "Unexpected  expression  node   "  +  value  +     "\n  parent:   "  +  value.getParent());  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  value  String  JSC_PROPERTY_NAME_FN  childValue  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  rawJsString  res  s  sourceName  value  Map  vars  int  c  charno  end  endPos  index  len  lineno  memberIndex  nextSkipSlot  nextSlot  operator  prototypeIdx  start  startPos  total  type  Predicate  locals  	projects/Closure80/src/com/google/javascript/jscomp/NodeUtil.java	0.7071067811865475	2923	2925	2	replace	parent  <  NUMBERIC_RESULT_PREDICATE  &&  value  ==  null)  {  throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "n  parent: "  +  value.getParent());  }	  if(value    ==    null)    {    throw    new    IllegalStateException(   "Unexpected    expression    node   "    +    value    +   "n    parent:   "    +    value.getParent());    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
90	[BUG]  [BUGGY]  parent  <  NUMBERIC_RESULT_PREDICATE)  {  throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "n  parent: "  +  value.getParent());  }  [CE]  illegal  start  of  expression  [FE]            IllegalStateException    [CONTEXT]    default:    if  (isAssignmentOp(value)  ||  isSimpleOperator(value)  ||  isImmutableValue(value))  {  return  true;  }    [BUGGY]  parent  <  NUMBERIC_RESULT_PREDICATE)  {  throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "n  parent: "  +  value.getParent());  }  [BUGGY]     "Unexpected  expression  node   "  +  value  +     "\n  parent:   "  +  value.getParent());  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  value  String  JSC_PROPERTY_NAME_FN  childValue  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  rawJsString  res  s  sourceName  value  Map  vars  int  c  charno  end  endPos  index  len  lineno  memberIndex  nextSkipSlot  nextSlot  operator  prototypeIdx  start  startPos  total  type  Predicate  locals  	projects/Closure80/src/com/google/javascript/jscomp/NodeUtil.java	0.7071067811865475	2923	2925	2	replace	parent  <  NUMBERIC_RESULT_PREDICATE)  {  throw  new  IllegalStateException( "Unexpected  expression  node   "  +  value  + "n  parent: "  +  value.getParent());  }	  if(value    ==    null)    {    throw    new    IllegalStateException(   "Unexpected    expression    node   "    +    value    +   "n    parent:   "    +    value.getParent());    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
91	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( "Unexpected  expression  node: "  +  value  + "n  parent: "  +  value.getParent());  [CE]  illegal  start  of  expression  [FE]        IllegalStateException    [CONTEXT]    default:    if  (isAssignmentOp(value)  ||  isSimpleOperator(value)  ||  isImmutableValue(value))  {  return  true;  }    [BUGGY]  Throwables.throw  new  IllegalStateException( "Unexpected  expression  node: "  +  value  + "n  parent: "  +  value.getParent());  [BUGGY]     "Unexpected  expression  node   "  +  value  +     "\n  parent:   "  +  value.getParent());  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  value  String  JSC_PROPERTY_NAME_FN  childValue  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  rawJsString  res  s  sourceName  value  Map  vars  int  c  charno  end  endPos  index  len  lineno  memberIndex  nextSkipSlot  nextSlot  operator  prototypeIdx  start  startPos  total  type  Predicate  locals  	projects/Closure80/src/com/google/javascript/jscomp/NodeUtil.java	0.7071067811865475	2923	2925	2	replace	Throwables.throw  new  IllegalStateException( "Unexpected  expression  node: "  +  value  + "n  parent: "  +  value.getParent());	  Throwables.throw    new    IllegalStateException(   "Unexpected    expression    node   "    +    value    +   "n    parent:   "    +    value.getParent());    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
