bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  isToStringPropertyValue(value)&&  locals.apply(value);  [CE]  illegal  start  of  expression  [FE]          IllegalStateException    [CONTEXT]    }  else  {  return  true;  }  case  Token.THIS:  return  locals.apply(value);  case  Token.NAME:  return  isImmutableValue(value)  ||  locals.apply(value);  case  Token.GETELEM:  case  Token.GETPROP:      [BUGGY]  return  isToStringPropertyValue(value)&&  locals.apply(value);  [BUGGY]    case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:  return  newHasLocalResult(value)  ||  locals.apply(value);  case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  value  String  JSC_PROPERTY_NAME_FN  childValue  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  rawJsString  res  s  sourceName  value  Map  vars  int  c  charno  end  endPos  index  len  lineno  memberIndex  nextSkipSlot  nextSlot  operator  prototypeIdx  start  startPos  total  type  Predicate  locals  	projects/Closure80/src/com/google/javascript/jscomp/NodeUtil.java	0.7071067811865475	2896	2896	2	replace	return  isToStringPropertyValue(value)&&  locals.apply(value);	  return    isToStringPropertyValue(value)||    locals.apply(value);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
2	[BUG]  [BUGGY]  return  isStringPropertyValue(value)||  locals.apply(value);  [CE]  illegal  start  of  expression  [FE]            IllegalStateException    [CONTEXT]    }  else  {  return  true;  }  case  Token.THIS:  return  locals.apply(value);  case  Token.NAME:  return  isImmutableValue(value)  ||  locals.apply(value);  case  Token.GETELEM:  case  Token.GETPROP:      [BUGGY]  return  isStringPropertyValue(value)||  locals.apply(value);  [BUGGY]    case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:  return  newHasLocalResult(value)  ||  locals.apply(value);  case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  value  String  JSC_PROPERTY_NAME_FN  childValue  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  rawJsString  res  s  sourceName  value  Map  vars  int  c  charno  end  endPos  index  len  lineno  memberIndex  nextSkipSlot  nextSlot  operator  prototypeIdx  start  startPos  total  type  Predicate  locals  	projects/Closure80/src/com/google/javascript/jscomp/NodeUtil.java	0.7071067811865475	2896	2896	2	replace	return  isStringPropertyValue(value)||  locals.apply(value);	  return    isToStringPropertyValue(value)||    locals.apply(value);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
3	[BUG]  [BUGGY]  return  isToStringPropertyValue(value)||  locales.apply(value);  [CE]  illegal  start  of  expression  [FE]              IllegalStateException    [CONTEXT]    }  else  {  return  true;  }  case  Token.THIS:  return  locals.apply(value);  case  Token.NAME:  return  isImmutableValue(value)  ||  locals.apply(value);  case  Token.GETELEM:  case  Token.GETPROP:      [BUGGY]  return  isToStringPropertyValue(value)||  locales.apply(value);  [BUGGY]    case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:  return  newHasLocalResult(value)  ||  locals.apply(value);  case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  value  String  JSC_PROPERTY_NAME_FN  childValue  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  rawJsString  res  s  sourceName  value  Map  vars  int  c  charno  end  endPos  index  len  lineno  memberIndex  nextSkipSlot  nextSlot  operator  prototypeIdx  start  startPos  total  type  Predicate  locals  	projects/Closure80/src/com/google/javascript/jscomp/NodeUtil.java	0.7071067811865475	2896	2896	2	replace	return  isToStringPropertyValue(value)||  locales.apply(value);	  return    isToStringPropertyValue(value)||    locals.apply(value);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
4	[BUG]  [BUGGY]  return  isStringValue(value)||  locals.apply(value);  [CE]  illegal  start  of  expression  [FE]            IllegalStateException    [CONTEXT]    }  else  {  return  true;  }  case  Token.THIS:  return  locals.apply(value);  case  Token.NAME:  return  isImmutableValue(value)  ||  locals.apply(value);  case  Token.GETELEM:  case  Token.GETPROP:      [BUGGY]  return  isStringValue(value)||  locals.apply(value);  [BUGGY]    case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:  return  newHasLocalResult(value)  ||  locals.apply(value);  case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  value  String  JSC_PROPERTY_NAME_FN  childValue  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  rawJsString  res  s  sourceName  value  Map  vars  int  c  charno  end  endPos  index  len  lineno  memberIndex  nextSkipSlot  nextSlot  operator  prototypeIdx  start  startPos  total  type  Predicate  locals  	projects/Closure80/src/com/google/javascript/jscomp/NodeUtil.java	0.7071067811865475	2896	2896	2	replace	return  isStringValue(value)||  locals.apply(value);	  return    isToLocalValue(value)||    locals.apply(value);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
5	[BUG]  [BUGGY]  return  isToLocalValue(value)&&  locals.apply(value);  [CE]  illegal  start  of  expression  [FE]              IllegalStateException    [CONTEXT]    }  else  {  return  true;  }  case  Token.THIS:  return  locals.apply(value);  case  Token.NAME:  return  isImmutableValue(value)  ||  locals.apply(value);  case  Token.GETELEM:  case  Token.GETPROP:      [BUGGY]  return  isToLocalValue(value)&&  locals.apply(value);  [BUGGY]    case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:  return  newHasLocalResult(value)  ||  locals.apply(value);  case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  value  String  JSC_PROPERTY_NAME_FN  childValue  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  rawJsString  res  s  sourceName  value  Map  vars  int  c  charno  end  endPos  index  len  lineno  memberIndex  nextSkipSlot  nextSlot  operator  prototypeIdx  start  startPos  total  type  Predicate  locals  	projects/Closure80/src/com/google/javascript/jscomp/NodeUtil.java	0.7071067811865475	2896	2896	2	replace	return  isToLocalValue(value)&&  locals.apply(value);	  return    isToLocalValue(value)||    locals.apply(value);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
6	[BUG]  [BUGGY]  return  isToLocalValue(value)||  isToStringMethodCall(value)||  locals.apply(value);  [CE]  illegal  start  of  type  [FE]                      IllegalStateException    [CONTEXT]    }  else  {  return  true;  }  case  Token.THIS:  return  locals.apply(value);  case  Token.NAME:  return  isImmutableValue(value)  ||  locals.apply(value);  case  Token.GETELEM:  case  Token.GETPROP:      [BUGGY]  return  isToLocalValue(value)||  isToStringMethodCall(value)||  locals.apply(value);  [BUGGY]    case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:  return  newHasLocalResult(value)  ||  locals.apply(value);  case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  value  String  JSC_PROPERTY_NAME_FN  childValue  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  rawJsString  res  s  sourceName  value  Map  vars  int  c  charno  end  endPos  index  len  lineno  memberIndex  nextSkipSlot  nextSlot  operator  prototypeIdx  start  startPos  total  type  Predicate  locals  	projects/Closure80/src/com/google/javascript/jscomp/NodeUtil.java	0.7071067811865475	2896	2896	2	replace	return  isToLocalValue(value)||  isToStringMethodCall(value)||  locals.apply(value);	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
7	[BUG]  [BUGGY]  case  Token.GETPROP:  return  isToStringProp(value)||  locals.apply(value);  [CE]  illegal  start  of  expression  [FE]                        IllegalStateException    [CONTEXT]    }  else  {  return  true;  }  case  Token.THIS:  return  locals.apply(value);  case  Token.NAME:  return  isImmutableValue(value)  ||  locals.apply(value);  case  Token.GETELEM:  case  Token.GETPROP:      [BUGGY]  case  Token.GETPROP:  return  isToStringProp(value)||  locals.apply(value);  [BUGGY]    case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:  return  newHasLocalResult(value)  ||  locals.apply(value);  case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  value  String  JSC_PROPERTY_NAME_FN  childValue  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  rawJsString  res  s  sourceName  value  Map  vars  int  c  charno  end  endPos  index  len  lineno  memberIndex  nextSkipSlot  nextSlot  operator  prototypeIdx  start  startPos  total  type  Predicate  locals  	projects/Closure80/src/com/google/javascript/jscomp/NodeUtil.java	0.7071067811865475	2896	2896	2	replace	case  Token.GETPROP:  return  isToStringProp(value)||  locals.apply(value);	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
8	[BUG]  [BUGGY]  return  isToLocalValue(value)||  isToStringPropertyCall(value)||  locals.apply(value);  [CE]  illegal  start  of  expression  [FE]                          IllegalStateException    [CONTEXT]    }  else  {  return  true;  }  case  Token.THIS:  return  locals.apply(value);  case  Token.NAME:  return  isImmutableValue(value)  ||  locals.apply(value);  case  Token.GETELEM:  case  Token.GETPROP:      [BUGGY]  return  isToLocalValue(value)||  isToStringPropertyCall(value)||  locals.apply(value);  [BUGGY]    case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:  return  newHasLocalResult(value)  ||  locals.apply(value);  case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  value  String  JSC_PROPERTY_NAME_FN  childValue  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  rawJsString  res  s  sourceName  value  Map  vars  int  c  charno  end  endPos  index  len  lineno  memberIndex  nextSkipSlot  nextSlot  operator  prototypeIdx  start  startPos  total  type  Predicate  locals  	projects/Closure80/src/com/google/javascript/jscomp/NodeUtil.java	0.7071067811865475	2896	2896	2	replace	return  isToLocalValue(value)||  isToStringPropertyCall(value)||  locals.apply(value);	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
9	[BUG]  [BUGGY]  return  isToLocalValue(value)||  isToStringMethodProp(value)||  locals.apply(value);  [CE]  illegal  start  of  expression  [FE]                            IllegalStateException    [CONTEXT]    }  else  {  return  true;  }  case  Token.THIS:  return  locals.apply(value);  case  Token.NAME:  return  isImmutableValue(value)  ||  locals.apply(value);  case  Token.GETELEM:  case  Token.GETPROP:      [BUGGY]  return  isToLocalValue(value)||  isToStringMethodProp(value)||  locals.apply(value);  [BUGGY]    case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:  return  newHasLocalResult(value)  ||  locals.apply(value);  case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  value  String  JSC_PROPERTY_NAME_FN  childValue  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  rawJsString  res  s  sourceName  value  Map  vars  int  c  charno  end  endPos  index  len  lineno  memberIndex  nextSkipSlot  nextSlot  operator  prototypeIdx  start  startPos  total  type  Predicate  locals  	projects/Closure80/src/com/google/javascript/jscomp/NodeUtil.java	0.7071067811865475	2896	2896	2	replace	return  isToLocalValue(value)||  isToStringMethodProp(value)||  locals.apply(value);	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
10	[BUG]  [BUGGY]  return  isLocalValue(value)&&  locals.apply(value);  [CE]  illegal  start  of  expression  [FE]              IllegalStateException    [CONTEXT]    }  else  {  return  true;  }  case  Token.THIS:  return  locals.apply(value);  case  Token.NAME:  return  isImmutableValue(value)  ||  locals.apply(value);  case  Token.GETELEM:  case  Token.GETPROP:      [BUGGY]  return  isLocalValue(value)&&  locals.apply(value);  [BUGGY]    case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:  return  newHasLocalResult(value)  ||  locals.apply(value);  case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  value  String  JSC_PROPERTY_NAME_FN  childValue  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  rawJsString  res  s  sourceName  value  Map  vars  int  c  charno  end  endPos  index  len  lineno  memberIndex  nextSkipSlot  nextSlot  operator  prototypeIdx  start  startPos  total  type  Predicate  locals  	projects/Closure80/src/com/google/javascript/jscomp/NodeUtil.java	0.7071067811865475	2896	2896	2	replace	return  isLocalValue(value)&&  locals.apply(value);	  return    isLocalValue(value)||    locals.apply(value);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
11	[BUG]  [BUGGY]  return  isToStringMethodProp(value)&&  locals.apply(value);  [CE]  illegal  start  of  expression  [FE]                IllegalStateException    [CONTEXT]    }  else  {  return  true;  }  case  Token.THIS:  return  locals.apply(value);  case  Token.NAME:  return  isImmutableValue(value)  ||  locals.apply(value);  case  Token.GETELEM:  case  Token.GETPROP:      [BUGGY]  return  isToStringMethodProp(value)&&  locals.apply(value);  [BUGGY]    case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:  return  newHasLocalResult(value)  ||  locals.apply(value);  case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  value  String  JSC_PROPERTY_NAME_FN  childValue  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  rawJsString  res  s  sourceName  value  Map  vars  int  c  charno  end  endPos  index  len  lineno  memberIndex  nextSkipSlot  nextSlot  operator  prototypeIdx  start  startPos  total  type  Predicate  locals  	projects/Closure80/src/com/google/javascript/jscomp/NodeUtil.java	0.7071067811865475	2896	2896	2	replace	return  isToStringMethodProp(value)&&  locals.apply(value);	  return    isToStringMethodProp(value)||    locals.apply(value);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
12	[BUG]  [BUGGY]  return  isStringMethodProp(value)||  locals.apply(value);  [CE]  illegal  start  of  expression  [FE]                  IllegalStateException    [CONTEXT]    }  else  {  return  true;  }  case  Token.THIS:  return  locals.apply(value);  case  Token.NAME:  return  isImmutableValue(value)  ||  locals.apply(value);  case  Token.GETELEM:  case  Token.GETPROP:      [BUGGY]  return  isStringMethodProp(value)||  locals.apply(value);  [BUGGY]    case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:  return  newHasLocalResult(value)  ||  locals.apply(value);  case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  value  String  JSC_PROPERTY_NAME_FN  childValue  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  rawJsString  res  s  sourceName  value  Map  vars  int  c  charno  end  endPos  index  len  lineno  memberIndex  nextSkipSlot  nextSlot  operator  prototypeIdx  start  startPos  total  type  Predicate  locals  	projects/Closure80/src/com/google/javascript/jscomp/NodeUtil.java	0.7071067811865475	2896	2896	2	replace	return  isStringMethodProp(value)||  locals.apply(value);	  return    isToStringMethodProp(value)||    locals.apply(value);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
13	[BUG]  [BUGGY]  return  isToStringMethodProp(value)||  locales.apply(value);  [CE]  illegal  start  of  expression  [FE]                    IllegalStateException    [CONTEXT]    }  else  {  return  true;  }  case  Token.THIS:  return  locals.apply(value);  case  Token.NAME:  return  isImmutableValue(value)  ||  locals.apply(value);  case  Token.GETELEM:  case  Token.GETPROP:      [BUGGY]  return  isToStringMethodProp(value)||  locales.apply(value);  [BUGGY]    case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:  return  newHasLocalResult(value)  ||  locals.apply(value);  case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  value  String  JSC_PROPERTY_NAME_FN  childValue  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  rawJsString  res  s  sourceName  value  Map  vars  int  c  charno  end  endPos  index  len  lineno  memberIndex  nextSkipSlot  nextSlot  operator  prototypeIdx  start  startPos  total  type  Predicate  locals  	projects/Closure80/src/com/google/javascript/jscomp/NodeUtil.java	0.7071067811865475	2896	2896	2	replace	return  isToStringMethodProp(value)||  locales.apply(value);	  return    isToStringMethodProp(value)||    locals.apply(value);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
14	[BUG]  [BUGGY]  return  isToStringPropValue(value)&&  locals.apply(value);  [CE]  illegal  start  of  expression  [FE]            IllegalStateException    [CONTEXT]    }  else  {  return  true;  }  case  Token.THIS:  return  locals.apply(value);  case  Token.NAME:  return  isImmutableValue(value)  ||  locals.apply(value);  case  Token.GETELEM:  case  Token.GETPROP:      [BUGGY]  return  isToStringPropValue(value)&&  locals.apply(value);  [BUGGY]    case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:  return  newHasLocalResult(value)  ||  locals.apply(value);  case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  value  String  JSC_PROPERTY_NAME_FN  childValue  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  rawJsString  res  s  sourceName  value  Map  vars  int  c  charno  end  endPos  index  len  lineno  memberIndex  nextSkipSlot  nextSlot  operator  prototypeIdx  start  startPos  total  type  Predicate  locals  	projects/Closure80/src/com/google/javascript/jscomp/NodeUtil.java	0.7071067811865475	2896	2896	2	replace	return  isToStringPropValue(value)&&  locals.apply(value);	  return    isToStringPropValue(value)||    locals.apply(value);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
15	[BUG]  [BUGGY]  return  isStringPropValue(value)||  locals.apply(value);  [CE]  illegal  start  of  expression  [FE]              IllegalStateException    [CONTEXT]    }  else  {  return  true;  }  case  Token.THIS:  return  locals.apply(value);  case  Token.NAME:  return  isImmutableValue(value)  ||  locals.apply(value);  case  Token.GETELEM:  case  Token.GETPROP:      [BUGGY]  return  isStringPropValue(value)||  locals.apply(value);  [BUGGY]    case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:  return  newHasLocalResult(value)  ||  locals.apply(value);  case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  value  String  JSC_PROPERTY_NAME_FN  childValue  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  rawJsString  res  s  sourceName  value  Map  vars  int  c  charno  end  endPos  index  len  lineno  memberIndex  nextSkipSlot  nextSlot  operator  prototypeIdx  start  startPos  total  type  Predicate  locals  	projects/Closure80/src/com/google/javascript/jscomp/NodeUtil.java	0.7071067811865475	2896	2896	2	replace	return  isStringPropValue(value)||  locals.apply(value);	  return    isToStringPropValue(value)||    locals.apply(value);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
16	[BUG]  [BUGGY]  return  isToStringPropValue(value)||  locales.apply(value);  [CE]  illegal  start  of  expression  [FE]                IllegalStateException    [CONTEXT]    }  else  {  return  true;  }  case  Token.THIS:  return  locals.apply(value);  case  Token.NAME:  return  isImmutableValue(value)  ||  locals.apply(value);  case  Token.GETELEM:  case  Token.GETPROP:      [BUGGY]  return  isToStringPropValue(value)||  locales.apply(value);  [BUGGY]    case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:  return  newHasLocalResult(value)  ||  locals.apply(value);  case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  value  String  JSC_PROPERTY_NAME_FN  childValue  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  rawJsString  res  s  sourceName  value  Map  vars  int  c  charno  end  endPos  index  len  lineno  memberIndex  nextSkipSlot  nextSlot  operator  prototypeIdx  start  startPos  total  type  Predicate  locals  	projects/Closure80/src/com/google/javascript/jscomp/NodeUtil.java	0.7071067811865475	2896	2896	2	replace	return  isToStringPropValue(value)||  locales.apply(value);	  return    isToStringPropValue(value)||    locals.apply(value);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
17	[BUG]  [BUGGY]  return  isToLocalProp(value)&&  locals.apply(value);  [CE]  illegal  start  of  expression  [FE]          IllegalStateException    [CONTEXT]    }  else  {  return  true;  }  case  Token.THIS:  return  locals.apply(value);  case  Token.NAME:  return  isImmutableValue(value)  ||  locals.apply(value);  case  Token.GETELEM:  case  Token.GETPROP:      [BUGGY]  return  isToLocalProp(value)&&  locals.apply(value);  [BUGGY]    case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:  return  newHasLocalResult(value)  ||  locals.apply(value);  case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  value  String  JSC_PROPERTY_NAME_FN  childValue  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  rawJsString  res  s  sourceName  value  Map  vars  int  c  charno  end  endPos  index  len  lineno  memberIndex  nextSkipSlot  nextSlot  operator  prototypeIdx  start  startPos  total  type  Predicate  locals  	projects/Closure80/src/com/google/javascript/jscomp/NodeUtil.java	0.7071067811865475	2896	2896	2	replace	return  isToLocalProp(value)&&  locals.apply(value);	  return    isToLocalProp(value)||    locals.apply(value);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
18	[BUG]  [BUGGY]  return  isLocalProp(value)||  locals.apply(value);  [CE]  illegal  start  of  expression  [FE]            IllegalStateException    [CONTEXT]    }  else  {  return  true;  }  case  Token.THIS:  return  locals.apply(value);  case  Token.NAME:  return  isImmutableValue(value)  ||  locals.apply(value);  case  Token.GETELEM:  case  Token.GETPROP:      [BUGGY]  return  isLocalProp(value)||  locals.apply(value);  [BUGGY]    case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:  return  newHasLocalResult(value)  ||  locals.apply(value);  case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  value  String  JSC_PROPERTY_NAME_FN  childValue  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  rawJsString  res  s  sourceName  value  Map  vars  int  c  charno  end  endPos  index  len  lineno  memberIndex  nextSkipSlot  nextSlot  operator  prototypeIdx  start  startPos  total  type  Predicate  locals  	projects/Closure80/src/com/google/javascript/jscomp/NodeUtil.java	0.7071067811865475	2896	2896	2	replace	return  isLocalProp(value)||  locals.apply(value);	  return    isToLocalProp(value)||    locals.apply(value);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
19	[BUG]  [BUGGY]  return  isStringProp(value)||  locals.apply(value);  [CE]  illegal  start  of  expression  [FE]              IllegalStateException    [CONTEXT]    }  else  {  return  true;  }  case  Token.THIS:  return  locals.apply(value);  case  Token.NAME:  return  isImmutableValue(value)  ||  locals.apply(value);  case  Token.GETELEM:  case  Token.GETPROP:      [BUGGY]  return  isStringProp(value)||  locals.apply(value);  [BUGGY]    case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:  return  newHasLocalResult(value)  ||  locals.apply(value);  case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  value  String  JSC_PROPERTY_NAME_FN  childValue  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  rawJsString  res  s  sourceName  value  Map  vars  int  c  charno  end  endPos  index  len  lineno  memberIndex  nextSkipSlot  nextSlot  operator  prototypeIdx  start  startPos  total  type  Predicate  locals  	projects/Closure80/src/com/google/javascript/jscomp/NodeUtil.java	0.7071067811865475	2896	2896	2	replace	return  isStringProp(value)||  locals.apply(value);	  return    isToLocalProp(value)||    locals.apply(value);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
20	[BUG]  [BUGGY]  return  isToLocalProp(value)||  locales.apply(value);  [CE]  illegal  start  of  expression  [FE]                IllegalStateException    [CONTEXT]    }  else  {  return  true;  }  case  Token.THIS:  return  locals.apply(value);  case  Token.NAME:  return  isImmutableValue(value)  ||  locals.apply(value);  case  Token.GETELEM:  case  Token.GETPROP:      [BUGGY]  return  isToLocalProp(value)||  locales.apply(value);  [BUGGY]    case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:  return  newHasLocalResult(value)  ||  locals.apply(value);  case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  value  String  JSC_PROPERTY_NAME_FN  childValue  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  rawJsString  res  s  sourceName  value  Map  vars  int  c  charno  end  endPos  index  len  lineno  memberIndex  nextSkipSlot  nextSlot  operator  prototypeIdx  start  startPos  total  type  Predicate  locals  	projects/Closure80/src/com/google/javascript/jscomp/NodeUtil.java	0.7071067811865475	2896	2896	2	replace	return  isToLocalProp(value)||  locales.apply(value);	  return    isToLocalProp(value)||    locals.apply(value);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
21	[BUG]  [BUGGY]  return  isToStringProp(value)||  locales.apply(value);  [CE]  illegal  start  of  expression  [FE]        IllegalStateException    [CONTEXT]    }  else  {  return  true;  }  case  Token.THIS:  return  locals.apply(value);  case  Token.NAME:  return  isImmutableValue(value)  ||  locals.apply(value);  case  Token.GETELEM:  case  Token.GETPROP:      [BUGGY]  return  isToStringProp(value)||  locales.apply(value);  [BUGGY]    case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:  return  newHasLocalResult(value)  ||  locals.apply(value);  case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  value  String  JSC_PROPERTY_NAME_FN  childValue  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  rawJsString  res  s  sourceName  value  Map  vars  int  c  charno  end  endPos  index  len  lineno  memberIndex  nextSkipSlot  nextSlot  operator  prototypeIdx  start  startPos  total  type  Predicate  locals  	projects/Closure80/src/com/google/javascript/jscomp/NodeUtil.java	0.7071067811865475	2896	2896	2	replace	return  isToStringProp(value)||  locales.apply(value);	  return    isToStringProp(value)||    locals.apply(value);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
22	[BUG]  [BUGGY]  return  isToStringPROP(value)||  locals.apply(value);  [CE]  illegal  start  of  expression  [FE]          IllegalStateException    [CONTEXT]    }  else  {  return  true;  }  case  Token.THIS:  return  locals.apply(value);  case  Token.NAME:  return  isImmutableValue(value)  ||  locals.apply(value);  case  Token.GETELEM:  case  Token.GETPROP:      [BUGGY]  return  isToStringPROP(value)||  locals.apply(value);  [BUGGY]    case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:  return  newHasLocalResult(value)  ||  locals.apply(value);  case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  value  String  JSC_PROPERTY_NAME_FN  childValue  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  rawJsString  res  s  sourceName  value  Map  vars  int  c  charno  end  endPos  index  len  lineno  memberIndex  nextSkipSlot  nextSlot  operator  prototypeIdx  start  startPos  total  type  Predicate  locals  	projects/Closure80/src/com/google/javascript/jscomp/NodeUtil.java	0.7071067811865475	2896	2896	2	replace	return  isToStringPROP(value)||  locals.apply(value);	  return    isToStringProp(value)||    locals.apply(value);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
23	[BUG]  [BUGGY]  return  isStringProp(value)&&  locals.apply(value);  [CE]  illegal  start  of  expression  [FE]                    IllegalStateException    [CONTEXT]    }  else  {  return  true;  }  case  Token.THIS:  return  locals.apply(value);  case  Token.NAME:  return  isImmutableValue(value)  ||  locals.apply(value);  case  Token.GETELEM:  case  Token.GETPROP:      [BUGGY]  return  isStringProp(value)&&  locals.apply(value);  [BUGGY]    case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:  return  newHasLocalResult(value)  ||  locals.apply(value);  case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  value  String  JSC_PROPERTY_NAME_FN  childValue  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  rawJsString  res  s  sourceName  value  Map  vars  int  c  charno  end  endPos  index  len  lineno  memberIndex  nextSkipSlot  nextSlot  operator  prototypeIdx  start  startPos  total  type  Predicate  locals  	projects/Closure80/src/com/google/javascript/jscomp/NodeUtil.java	0.7071067811865475	2896	2896	2	replace	return  isStringProp(value)&&  locals.apply(value);	  return    isToStringProp(value)&&    locals.apply(value);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
24	[BUG]  [BUGGY]  return  isToLocalResult(value)&&  locals.apply(value);  [CE]  illegal  start  of  expression  [FE]                  IllegalStateException    [CONTEXT]    }  else  {  return  true;  }  case  Token.THIS:  return  locals.apply(value);  case  Token.NAME:  return  isImmutableValue(value)  ||  locals.apply(value);  case  Token.GETELEM:  case  Token.GETPROP:      [BUGGY]  return  isToLocalResult(value)&&  locals.apply(value);  [BUGGY]    case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:  return  newHasLocalResult(value)  ||  locals.apply(value);  case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  value  String  JSC_PROPERTY_NAME_FN  childValue  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  rawJsString  res  s  sourceName  value  Map  vars  int  c  charno  end  endPos  index  len  lineno  memberIndex  nextSkipSlot  nextSlot  operator  prototypeIdx  start  startPos  total  type  Predicate  locals  	projects/Closure80/src/com/google/javascript/jscomp/NodeUtil.java	0.7071067811865475	2896	2896	2	replace	return  isToLocalResult(value)&&  locals.apply(value);	  return    isToLocalResult(value)||    locals.apply(value);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
25	[BUG]  [BUGGY]  return  isLocalResult(value)||  locals.apply(value);  [CE]  illegal  start  of  expression  [FE]                    IllegalStateException    [CONTEXT]    }  else  {  return  true;  }  case  Token.THIS:  return  locals.apply(value);  case  Token.NAME:  return  isImmutableValue(value)  ||  locals.apply(value);  case  Token.GETELEM:  case  Token.GETPROP:      [BUGGY]  return  isLocalResult(value)||  locals.apply(value);  [BUGGY]    case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:  return  newHasLocalResult(value)  ||  locals.apply(value);  case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  value  String  JSC_PROPERTY_NAME_FN  childValue  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  rawJsString  res  s  sourceName  value  Map  vars  int  c  charno  end  endPos  index  len  lineno  memberIndex  nextSkipSlot  nextSlot  operator  prototypeIdx  start  startPos  total  type  Predicate  locals  	projects/Closure80/src/com/google/javascript/jscomp/NodeUtil.java	0.7071067811865475	2896	2896	2	replace	return  isLocalResult(value)||  locals.apply(value);	  return    isToLocalResult(value)||    locals.apply(value);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
26	[BUG]  [BUGGY]  return  isToLocalResult(value)||  isToStringMethodCall(value)||  locals.apply(value);  [CE]  illegal  start  of  expression  [FE]                      IllegalStateException    [CONTEXT]    }  else  {  return  true;  }  case  Token.THIS:  return  locals.apply(value);  case  Token.NAME:  return  isImmutableValue(value)  ||  locals.apply(value);  case  Token.GETELEM:  case  Token.GETPROP:      [BUGGY]  return  isToLocalResult(value)||  isToStringMethodCall(value)||  locals.apply(value);  [BUGGY]    case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:  return  newHasLocalResult(value)  ||  locals.apply(value);  case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  value  String  JSC_PROPERTY_NAME_FN  childValue  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  rawJsString  res  s  sourceName  value  Map  vars  int  c  charno  end  endPos  index  len  lineno  memberIndex  nextSkipSlot  nextSlot  operator  prototypeIdx  start  startPos  total  type  Predicate  locals  	projects/Closure80/src/com/google/javascript/jscomp/NodeUtil.java	0.7071067811865475	2896	2896	2	replace	return  isToLocalResult(value)||  isToStringMethodCall(value)||  locals.apply(value);	  return    isToLocalResult(value)||    locals.apply(value);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
27	[BUG]  [BUGGY]  return  callHasLocalResult(value)||  isToStringPropCall(value)||  locals.apply(value);  [CE]  illegal  start  of  expression  [FE]        IllegalStateException    [CONTEXT]    }  else  {  return  true;  }  case  Token.THIS:  return  locals.apply(value);  case  Token.NAME:  return  isImmutableValue(value)  ||  locals.apply(value);  case  Token.GETELEM:  case  Token.GETPROP:      [BUGGY]  return  callHasLocalResult(value)||  isToStringPropCall(value)||  locals.apply(value);  [BUGGY]    case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:  return  newHasLocalResult(value)  ||  locals.apply(value);  case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  value  String  JSC_PROPERTY_NAME_FN  childValue  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  rawJsString  res  s  sourceName  value  Map  vars  int  c  charno  end  endPos  index  len  lineno  memberIndex  nextSkipSlot  nextSlot  operator  prototypeIdx  start  startPos  total  type  Predicate  locals  	projects/Closure80/src/com/google/javascript/jscomp/NodeUtil.java	0.7071067811865475	2896	2896	2	replace	return  callHasLocalResult(value)||  isToStringPropCall(value)||  locals.apply(value);	  return    isToStringPropCall(value)||    locals.apply(value);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
28	[BUG]  [BUGGY]  return  isToStringPropCall(value)&&  locals.apply(value);  [CE]  illegal  start  of  expression  [FE]          IllegalStateException    [CONTEXT]    }  else  {  return  true;  }  case  Token.THIS:  return  locals.apply(value);  case  Token.NAME:  return  isImmutableValue(value)  ||  locals.apply(value);  case  Token.GETELEM:  case  Token.GETPROP:      [BUGGY]  return  isToStringPropCall(value)&&  locals.apply(value);  [BUGGY]    case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:  return  newHasLocalResult(value)  ||  locals.apply(value);  case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  value  String  JSC_PROPERTY_NAME_FN  childValue  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  rawJsString  res  s  sourceName  value  Map  vars  int  c  charno  end  endPos  index  len  lineno  memberIndex  nextSkipSlot  nextSlot  operator  prototypeIdx  start  startPos  total  type  Predicate  locals  	projects/Closure80/src/com/google/javascript/jscomp/NodeUtil.java	0.7071067811865475	2896	2896	2	replace	return  isToStringPropCall(value)&&  locals.apply(value);	  return    isToStringPropCall(value)||    locals.apply(value);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
29	[BUG]  [BUGGY]  return  isStringPropCall(value)||  locals.apply(value);  [CE]  illegal  start  of  expression  [FE]            IllegalStateException    [CONTEXT]    }  else  {  return  true;  }  case  Token.THIS:  return  locals.apply(value);  case  Token.NAME:  return  isImmutableValue(value)  ||  locals.apply(value);  case  Token.GETELEM:  case  Token.GETPROP:      [BUGGY]  return  isStringPropCall(value)||  locals.apply(value);  [BUGGY]    case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:  return  newHasLocalResult(value)  ||  locals.apply(value);  case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  value  String  JSC_PROPERTY_NAME_FN  childValue  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  rawJsString  res  s  sourceName  value  Map  vars  int  c  charno  end  endPos  index  len  lineno  memberIndex  nextSkipSlot  nextSlot  operator  prototypeIdx  start  startPos  total  type  Predicate  locals  	projects/Closure80/src/com/google/javascript/jscomp/NodeUtil.java	0.7071067811865475	2896	2896	2	replace	return  isStringPropCall(value)||  locals.apply(value);	  return    isToStringPropCall(value)||    locals.apply(value);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
30	[BUG]  [BUGGY]  return  callHasLocalResult(value)||  isToStringMethodCall(value)||  locals.apply(value);  [CE]  illegal  start  of  expression  [FE]          IllegalStateException    [CONTEXT]    }  else  {  return  true;  }  case  Token.THIS:  return  locals.apply(value);  case  Token.NAME:  return  isImmutableValue(value)  ||  locals.apply(value);  case  Token.GETELEM:  case  Token.GETPROP:      [BUGGY]  return  callHasLocalResult(value)||  isToStringMethodCall(value)||  locals.apply(value);  [BUGGY]    case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:  return  newHasLocalResult(value)  ||  locals.apply(value);  case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  value  String  JSC_PROPERTY_NAME_FN  childValue  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  rawJsString  res  s  sourceName  value  Map  vars  int  c  charno  end  endPos  index  len  lineno  memberIndex  nextSkipSlot  nextSlot  operator  prototypeIdx  start  startPos  total  type  Predicate  locals  	projects/Closure80/src/com/google/javascript/jscomp/NodeUtil.java	0.7071067811865475	2896	2896	2	replace	return  callHasLocalResult(value)||  isToStringMethodCall(value)||  locals.apply(value);	  return    isToStringMethodCall(value)||    locals.apply(value);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
31	[BUG]  [BUGGY]  return  isStringMethodCall(value)||  locals.apply(value);  [CE]  illegal  start  of  expression  [FE]            IllegalStateException    [CONTEXT]    }  else  {  return  true;  }  case  Token.THIS:  return  locals.apply(value);  case  Token.NAME:  return  isImmutableValue(value)  ||  locals.apply(value);  case  Token.GETELEM:  case  Token.GETPROP:      [BUGGY]  return  isStringMethodCall(value)||  locals.apply(value);  [BUGGY]    case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:  return  newHasLocalResult(value)  ||  locals.apply(value);  case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  value  String  JSC_PROPERTY_NAME_FN  childValue  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  rawJsString  res  s  sourceName  value  Map  vars  int  c  charno  end  endPos  index  len  lineno  memberIndex  nextSkipSlot  nextSlot  operator  prototypeIdx  start  startPos  total  type  Predicate  locals  	projects/Closure80/src/com/google/javascript/jscomp/NodeUtil.java	0.7071067811865475	2896	2896	2	replace	return  isStringMethodCall(value)||  locals.apply(value);	  return    isToStringMethodCall(value)||    locals.apply(value);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
32	[BUG]  [BUGGY]  return  isPropertyValue(value)&&  locals.apply(value);  [CE]  illegal  start  of  expression  [FE]        IllegalStateException    [CONTEXT]    }  else  {  return  true;  }  case  Token.THIS:  return  locals.apply(value);  case  Token.NAME:  return  isImmutableValue(value)  ||  locals.apply(value);  case  Token.GETELEM:  case  Token.GETPROP:      [BUGGY]  return  isPropertyValue(value)&&  locals.apply(value);  [BUGGY]    case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:  return  newHasLocalResult(value)  ||  locals.apply(value);  case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  value  String  JSC_PROPERTY_NAME_FN  childValue  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  rawJsString  res  s  sourceName  value  Map  vars  int  c  charno  end  endPos  index  len  lineno  memberIndex  nextSkipSlot  nextSlot  operator  prototypeIdx  start  startPos  total  type  Predicate  locals  	projects/Closure80/src/com/google/javascript/jscomp/NodeUtil.java	0.7071067811865475	2896	2896	2	replace	return  isPropertyValue(value)&&  locals.apply(value);	  return    isPropertyValue(value)||    locals.apply(value);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
33	[BUG]  [BUGGY]  return  isLocalPropertyValue(value)||  locals.apply(value);  [CE]  illegal  start  of  expression  [FE]          IllegalStateException    [CONTEXT]    }  else  {  return  true;  }  case  Token.THIS:  return  locals.apply(value);  case  Token.NAME:  return  isImmutableValue(value)  ||  locals.apply(value);  case  Token.GETELEM:  case  Token.GETPROP:      [BUGGY]  return  isLocalPropertyValue(value)||  locals.apply(value);  [BUGGY]    case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:  return  newHasLocalResult(value)  ||  locals.apply(value);  case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  value  String  JSC_PROPERTY_NAME_FN  childValue  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  rawJsString  res  s  sourceName  value  Map  vars  int  c  charno  end  endPos  index  len  lineno  memberIndex  nextSkipSlot  nextSlot  operator  prototypeIdx  start  startPos  total  type  Predicate  locals  	projects/Closure80/src/com/google/javascript/jscomp/NodeUtil.java	0.7071067811865475	2896	2896	2	replace	return  isLocalPropertyValue(value)||  locals.apply(value);	  return    isToStringPropertyValue(value)||    locals.apply(value);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
34	[BUG]  [BUGGY]  return  isToStringDeclaration(value)||  locals.apply(value);  [CE]  illegal  start  of  expression  [FE]                      IllegalStateException    [CONTEXT]    }  else  {  return  true;  }  case  Token.THIS:  return  locals.apply(value);  case  Token.NAME:  return  isImmutableValue(value)  ||  locals.apply(value);  case  Token.GETELEM:  case  Token.GETPROP:      [BUGGY]  return  isToStringDeclaration(value)||  locals.apply(value);  [BUGGY]    case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:  return  newHasLocalResult(value)  ||  locals.apply(value);  case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  value  String  JSC_PROPERTY_NAME_FN  childValue  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  rawJsString  res  s  sourceName  value  Map  vars  int  c  charno  end  endPos  index  len  lineno  memberIndex  nextSkipSlot  nextSlot  operator  prototypeIdx  start  startPos  total  type  Predicate  locals  	projects/Closure80/src/com/google/javascript/jscomp/NodeUtil.java	0.7071067811865475	2896	2896	2	replace	return  isToStringDeclaration(value)||  locals.apply(value);	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
35	[BUG]  [BUGGY]  return  isLocalValue(value)||  isToStringProp(value)||  locals.apply(value);  [CE]  illegal  start  of  expression  [FE]                        IllegalStateException    [CONTEXT]    }  else  {  return  true;  }  case  Token.THIS:  return  locals.apply(value);  case  Token.NAME:  return  isImmutableValue(value)  ||  locals.apply(value);  case  Token.GETELEM:  case  Token.GETPROP:      [BUGGY]  return  isLocalValue(value)||  isToStringProp(value)||  locals.apply(value);  [BUGGY]    case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:  return  newHasLocalResult(value)  ||  locals.apply(value);  case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  value  String  JSC_PROPERTY_NAME_FN  childValue  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  rawJsString  res  s  sourceName  value  Map  vars  int  c  charno  end  endPos  index  len  lineno  memberIndex  nextSkipSlot  nextSlot  operator  prototypeIdx  start  startPos  total  type  Predicate  locals  	projects/Closure80/src/com/google/javascript/jscomp/NodeUtil.java	0.7071067811865475	2896	2896	2	replace	return  isLocalValue(value)||  isToStringProp(value)||  locals.apply(value);	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
36	[BUG]  [BUGGY]  return  isLocalValue(value)||  isToStringPropertyCall(value)||  locals.apply(value);  [CE]  illegal  start  of  expression  [FE]                          IllegalStateException    [CONTEXT]    }  else  {  return  true;  }  case  Token.THIS:  return  locals.apply(value);  case  Token.NAME:  return  isImmutableValue(value)  ||  locals.apply(value);  case  Token.GETELEM:  case  Token.GETPROP:      [BUGGY]  return  isLocalValue(value)||  isToStringPropertyCall(value)||  locals.apply(value);  [BUGGY]    case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:  return  newHasLocalResult(value)  ||  locals.apply(value);  case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  value  String  JSC_PROPERTY_NAME_FN  childValue  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  rawJsString  res  s  sourceName  value  Map  vars  int  c  charno  end  endPos  index  len  lineno  memberIndex  nextSkipSlot  nextSlot  operator  prototypeIdx  start  startPos  total  type  Predicate  locals  	projects/Closure80/src/com/google/javascript/jscomp/NodeUtil.java	0.7071067811865475	2896	2896	2	replace	return  isLocalValue(value)||  isToStringPropertyCall(value)||  locals.apply(value);	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
37	[BUG]  [BUGGY]  return  isToStringProperty(value)||  locals.apply(value);  [CE]  illegal  start  of  expression  [FE]                            IllegalStateException    [CONTEXT]    }  else  {  return  true;  }  case  Token.THIS:  return  locals.apply(value);  case  Token.NAME:  return  isImmutableValue(value)  ||  locals.apply(value);  case  Token.GETELEM:  case  Token.GETPROP:      [BUGGY]  return  isToStringProperty(value)||  locals.apply(value);  [BUGGY]    case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:  return  newHasLocalResult(value)  ||  locals.apply(value);  case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  value  String  JSC_PROPERTY_NAME_FN  childValue  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  rawJsString  res  s  sourceName  value  Map  vars  int  c  charno  end  endPos  index  len  lineno  memberIndex  nextSkipSlot  nextSlot  operator  prototypeIdx  start  startPos  total  type  Predicate  locals  	projects/Closure80/src/com/google/javascript/jscomp/NodeUtil.java	0.7071067811865475	2896	2896	2	replace	return  isToStringProperty(value)||  locals.apply(value);	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
38	[BUG]  [BUGGY]  return  isBooleanValue(value)||  locals.apply(value);  [CE]  illegal  start  of  expression  [FE]            IllegalStateException    [CONTEXT]    }  else  {  return  true;  }  case  Token.THIS:  return  locals.apply(value);  case  Token.NAME:  return  isImmutableValue(value)  ||  locals.apply(value);  case  Token.GETELEM:  case  Token.GETPROP:      [BUGGY]  return  isBooleanValue(value)||  locals.apply(value);  [BUGGY]    case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:  return  newHasLocalResult(value)  ||  locals.apply(value);  case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  value  String  JSC_PROPERTY_NAME_FN  childValue  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  rawJsString  res  s  sourceName  value  Map  vars  int  c  charno  end  endPos  index  len  lineno  memberIndex  nextSkipSlot  nextSlot  operator  prototypeIdx  start  startPos  total  type  Predicate  locals  	projects/Closure80/src/com/google/javascript/jscomp/NodeUtil.java	0.7071067811865475	2896	2896	2	replace	return  isBooleanValue(value)||  locals.apply(value);	  return    isToLocalValue(value)||    locals.apply(value);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
39	[BUG]  [BUGGY]  return  evaluatesToLocalValue(value)||  locals.apply(value);  [CE]  illegal  start  of  expression  [FE]            IllegalStateException    [CONTEXT]    }  else  {  return  true;  }  case  Token.THIS:  return  locals.apply(value);  case  Token.NAME:  return  isImmutableValue(value)  ||  locals.apply(value);  case  Token.GETELEM:  case  Token.GETPROP:      [BUGGY]  return  evaluatesToLocalValue(value)||  locals.apply(value);  [BUGGY]    case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:  return  newHasLocalResult(value)  ||  locals.apply(value);  case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  value  String  JSC_PROPERTY_NAME_FN  childValue  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  rawJsString  res  s  sourceName  value  Map  vars  int  c  charno  end  endPos  index  len  lineno  memberIndex  nextSkipSlot  nextSlot  operator  prototypeIdx  start  startPos  total  type  Predicate  locals  	projects/Closure80/src/com/google/javascript/jscomp/NodeUtil.java	0.7071067811865475	2896	2896	2	replace	return  evaluatesToLocalValue(value)||  locals.apply(value);	  return    isToStringPropValue(value)||    locals.apply(value);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
40	[BUG]  [BUGGY]  return  isToStringPropValue(value)||  locals.get(value);  [CE]  illegal  start  of  expression  [FE]              IllegalStateException    [CONTEXT]    }  else  {  return  true;  }  case  Token.THIS:  return  locals.apply(value);  case  Token.NAME:  return  isImmutableValue(value)  ||  locals.apply(value);  case  Token.GETELEM:  case  Token.GETPROP:      [BUGGY]  return  isToStringPropValue(value)||  locals.get(value);  [BUGGY]    case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:  return  newHasLocalResult(value)  ||  locals.apply(value);  case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  value  String  JSC_PROPERTY_NAME_FN  childValue  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  rawJsString  res  s  sourceName  value  Map  vars  int  c  charno  end  endPos  index  len  lineno  memberIndex  nextSkipSlot  nextSlot  operator  prototypeIdx  start  startPos  total  type  Predicate  locals  	projects/Closure80/src/com/google/javascript/jscomp/NodeUtil.java	0.7071067811865475	2896	2896	2	replace	return  isToStringPropValue(value)||  locals.get(value);	  return    isToStringPropValue(value)||    locals.apply(value);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
41	[BUG]  [BUGGY]  return  isToStringProps(value)||  locals.apply(value);  [CE]  illegal  start  of  expression  [FE]              IllegalStateException    [CONTEXT]    }  else  {  return  true;  }  case  Token.THIS:  return  locals.apply(value);  case  Token.NAME:  return  isImmutableValue(value)  ||  locals.apply(value);  case  Token.GETELEM:  case  Token.GETPROP:      [BUGGY]  return  isToStringProps(value)||  locals.apply(value);  [BUGGY]    case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:  return  newHasLocalResult(value)  ||  locals.apply(value);  case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  value  String  JSC_PROPERTY_NAME_FN  childValue  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  rawJsString  res  s  sourceName  value  Map  vars  int  c  charno  end  endPos  index  len  lineno  memberIndex  nextSkipSlot  nextSlot  operator  prototypeIdx  start  startPos  total  type  Predicate  locals  	projects/Closure80/src/com/google/javascript/jscomp/NodeUtil.java	0.7071067811865475	2896	2896	2	replace	return  isToStringProps(value)||  locals.apply(value);	  return    isImmutableValue(value)||    locals.apply(value);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
42	[BUG]  [BUGGY]  return  isToLocalProp(value)||  locals.get(value);  [CE]  illegal  start  of  expression  [FE]          IllegalStateException    [CONTEXT]    }  else  {  return  true;  }  case  Token.THIS:  return  locals.apply(value);  case  Token.NAME:  return  isImmutableValue(value)  ||  locals.apply(value);  case  Token.GETELEM:  case  Token.GETPROP:      [BUGGY]  return  isToLocalProp(value)||  locals.get(value);  [BUGGY]    case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:  return  newHasLocalResult(value)  ||  locals.apply(value);  case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  value  String  JSC_PROPERTY_NAME_FN  childValue  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  rawJsString  res  s  sourceName  value  Map  vars  int  c  charno  end  endPos  index  len  lineno  memberIndex  nextSkipSlot  nextSlot  operator  prototypeIdx  start  startPos  total  type  Predicate  locals  	projects/Closure80/src/com/google/javascript/jscomp/NodeUtil.java	0.7071067811865475	2896	2896	2	replace	return  isToLocalProp(value)||  locals.get(value);	  return    isToLocalProp(value)||    locals.apply(value);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
43	[BUG]  [BUGGY]  return  isToStringPropertyValue(value)||  locals.get(value);  [CE]  illegal  start  of  expression  [FE]          IllegalStateException    [CONTEXT]    }  else  {  return  true;  }  case  Token.THIS:  return  locals.apply(value);  case  Token.NAME:  return  isImmutableValue(value)  ||  locals.apply(value);  case  Token.GETELEM:  case  Token.GETPROP:      [BUGGY]  return  isToStringPropertyValue(value)||  locals.get(value);  [BUGGY]    case  Token.CALL:  return  callHasLocalResult(value)  ||  isToStringMethodCall(value)  ||  locals.apply(value);  case  Token.NEW:  return  newHasLocalResult(value)  ||  locals.apply(value);  case  Token.FUNCTION:  case  Token.REGEXP:  case  Token.ARRAYLIT:  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  evaluatesToLocalValue  [RETURN_TYPE]  boolean  Node  value  Node>  locals  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  emptySet  knownConstants  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  value  String  JSC_PROPERTY_NAME_FN  childValue  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  rawJsString  res  s  sourceName  value  Map  vars  int  c  charno  end  endPos  index  len  lineno  memberIndex  nextSkipSlot  nextSlot  operator  prototypeIdx  start  startPos  total  type  Predicate  locals  	projects/Closure80/src/com/google/javascript/jscomp/NodeUtil.java	0.7071067811865475	2896	2896	2	replace	return  isToStringPropertyValue(value)||  locals.get(value);	  return    isToStringPropertyValue(value)||    locals.apply(value);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
