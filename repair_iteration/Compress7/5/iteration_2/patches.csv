bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  result.append('n',  end  +  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append('n',  end  +  1);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append('n',  end  +  1);	  result.append('n',    i    +    1);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	61	None	replace
2	[BUG]  [BUGGY]  result.append('n',  buffer[i  +  1]);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append('n',  buffer[i  +  1]);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append('n',  buffer[i  +  1]);	  result.append('n',    i    +    1);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	61	None	replace
3	[BUG]  [BUGGY]  result.append('N',  end  +  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append('N',  end  +  1);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append('N',  end  +  1);	  result.append('n',    i    +    1);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	61	None	replace
4	[BUG]  [BUGGY]  result.append('$',  i  +  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append('$',  i  +  1);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append('$',  i  +  1);	  result.append('n',    i    +    1);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	61	None	replace
5	[BUG]  [BUGGY]  result.append((  char)(buffer[i]  +  offset,  length);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)(buffer[i]  +  offset,  length);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)(buffer[i]  +  offset,  length);	  result.append((    char)(buffer[i]    +    offset);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	78	None	replace
6	[BUG]  [BUGGY]  result.append((  char)(buffer[i]  +  offset,  end);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)(buffer[i]  +  offset,  end);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)(buffer[i]  +  offset,  end);	  result.append((    char)(buffer[i]    +    offset);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	78	None	replace
7	[BUG]  [BUGGY]  result.append((  char)(buffer[i]  *  offset);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)(buffer[i]  *  offset);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)(buffer[i]  *  offset);	  result.append((    char)(buffer[i]    +    offset);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	78	None	replace
8	[BUG]  [BUGGY]  result.append((  char)(buffer[i]  +  offset),  length);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)(buffer[i]  +  offset),  length);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)(buffer[i]  +  offset),  length);	  result.append((    char)(buffer[i]    +    offset);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	78	None	replace
9	[BUG]  [BUGGY]  result.append((  char)(buffer[i]  +  length,  buffer[i]);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)(buffer[i]  +  length,  buffer[i]);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)(buffer[i]  +  length,  buffer[i]);	  result.append((    char)(buffer[i]    +    offset);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	78	None	replace
10	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  result,  0,  buffer[i]);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  System.arraycopy(buffer,  0,  result,  0,  buffer[i]);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	System.arraycopy(buffer,  0,  result,  0,  buffer[i]);	  if(buffer[i]    ==    'n'    ||    buffer[i]    ==    'r')    {    continue;    }    else    {    System.arraycopy(buffer,    0,    result,    0,    buffer[i]);    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	68	None	replace
11	[BUG]  [BUGGY]  if(buffer[i]  ==  '.')  {  if(buffer[i]  ==  'n'  ||  buffer[i]  ==  'r')  {  continue;  }  else  {  System.arraycopy(buffer,  0,  result,  0,  buffer[i]);  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  '.')  {  if(buffer[i]  ==  'n'  ||  buffer[i]  ==  'r')  {  continue;  }  else  {  System.arraycopy(buffer,  0,  result,  0,  buffer[i]);  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  '.')  {  if(buffer[i]  ==  'n'  ||  buffer[i]  ==  'r')  {  continue;  }  else  {  System.arraycopy(buffer,  0,  result,  0,  buffer[i]);  }	  if(buffer[i]    ==    'n'    ||    buffer[i]    ==    'r')    {    continue;    }    else    {    System.arraycopy(buffer,    0,    result,    0,    buffer[i]);    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	68	None	replace
12	[BUG]  [BUGGY]  if(buffer[i]  ==  '.')  {  if(buffer[i]  ==  'n'  ||  buffer[i]  ==  'r')  {  continue;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  '.')  {  if(buffer[i]  ==  'n'  ||  buffer[i]  ==  'r')  {  continue;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  '.')  {  if(buffer[i]  ==  'n'  ||  buffer[i]  ==  'r')  {  continue;  }	  if(buffer[i]    ==    'n'    ||    buffer[i]    ==    'r')    {    continue;    }    else    {    System.arraycopy(buffer,    0,    result,    0,    buffer[i]);    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	68	None	replace
13	[BUG]  [BUGGY]  if(buffer[i]  ==  'n'  ||  buffer[i]!=  'r')  {  continue;  }  else  {  System.arraycopy(buffer,  0,  result,  0,  buffer[i]);  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  'n'  ||  buffer[i]!=  'r')  {  continue;  }  else  {  System.arraycopy(buffer,  0,  result,  0,  buffer[i]);  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  'n'  ||  buffer[i]!=  'r')  {  continue;  }  else  {  System.arraycopy(buffer,  0,  result,  0,  buffer[i]);  }	  if(buffer[i]    ==    'n'    ||    buffer[i]    ==    'r')    {    continue;    }    else    {    System.arraycopy(buffer,    0,    result,    0,    buffer[i]);    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	68	None	replace
14	[BUG]  [BUGGY]  if(buffer[i]  ==  'n'  ||  buffer[i]  ==  'r')  {  System.arraycopy(buffer,  0,  result,  0,  buffer[i]);  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  'n'  ||  buffer[i]  ==  'r')  {  System.arraycopy(buffer,  0,  result,  0,  buffer[i]);  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  'n'  ||  buffer[i]  ==  'r')  {  System.arraycopy(buffer,  0,  result,  0,  buffer[i]);  }	  if(buffer[i]    ==    'n'    ||    buffer[i]    ==    'r')    {    continue;    }    else    {    System.arraycopy(buffer,    0,    result,    0,    buffer[i]);    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	68	None	replace
15	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "ByTE_MASK  is  not  supported. ");  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "ByTE_MASK  is  not  supported. ");  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	throw  new  IllegalArgumentException( "ByTE_MASK  is  not  supported. ");	  throw    new    IllegalArgumentException(   "BYTE_MASK    is    not    supported.   ");    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	95	None	replace
16	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "BYTE_MASK  is  not  supported. ");  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "BYTE_MASK  is  not  supported. ");  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	Throwables.throw  new  IllegalArgumentException( "BYTE_MASK  is  not  supported. ");	  throw    new    IllegalArgumentException(   "BYTE_MASK    is    not    supported.   ");    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	95	None	replace
17	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Byte_MASK  is  not  supported. ");  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "Byte_MASK  is  not  supported. ");  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	throw  new  IllegalArgumentException( "Byte_MASK  is  not  supported. ");	  throw    new    IllegalArgumentException(   "BYTE_MASK    is    not    supported.   ");    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	95	None	replace
18	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "BYTE_MASK  is  not  supported: "  +  i);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "BYTE_MASK  is  not  supported: "  +  i);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	throw  new  IllegalArgumentException( "BYTE_MASK  is  not  supported: "  +  i);	  throw    new    IllegalArgumentException(   "BYTE_MASK    is    not    supported.   ");    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	95	None	replace
19	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "ByTE_MASK  is  not  supported: "  +  i);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "ByTE_MASK  is  not  supported: "  +  i);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	throw  new  IllegalArgumentException( "ByTE_MASK  is  not  supported: "  +  i);	  throw    new    IllegalArgumentException(   "BYTE_MASK    is    not    supported.   ");    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	95	None	replace
20	[BUG]  [BUGGY]  if(buffer[i]  ==  '.'  ||  buffer[i]  ==  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  '.'  ||  buffer[i]  ==  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  '.'  ||  buffer[i]  ==  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a	  if(buffer[i]    ==    '.'    ||    buffer[i]    ==    'a'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	99	None	replace
21	[BUG]  [BUGGY]  if(buffer[i]  ==  '.'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  '.'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  '.'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a	  if(buffer[i]    ==    '.'    ||    buffer[i]    ==    'a'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	99	None	replace
22	[BUG]  [BUGGY]  if(buffer[i]!=  '.'  ||  buffer[i]  ==  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]!=  '.'  ||  buffer[i]  ==  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]!=  '.'  ||  buffer[i]  ==  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a	  if(buffer[i]    ==    '.'    ||    buffer[i]    ==    'a'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	99	None	replace
23	[BUG]  [BUGGY]  if(buffer[i]  ==  '.'  ||  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  '.'  ||  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  '.'  ||  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a	  if(buffer[i]    ==    '.'    ||    buffer[i]    ==    'a'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	99	None	replace
24	[BUG]  [BUGGY]  if(buffer[i]  ==  '.'  ||  buffer[i]  ==  'A'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  '.'  ||  buffer[i]  ==  'A'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  '.'  ||  buffer[i]  ==  'A'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a	  if(buffer[i]    ==    '.'    ||    buffer[i]    ==    'a'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	99	None	replace
25	[BUG]  [BUGGY]  if(buffer[i]  ==  '.'  ||  buffer[i]  ==  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  '  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  '.'  ||  buffer[i]  ==  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  '  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  '.'  ||  buffer[i]  ==  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  '	  if(buffer[i]    ==    '.'    ||    buffer[i]    ==    'a'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	99	None	replace
26	[BUG]  [BUGGY]  if(buffer[i]  ==  '.'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  '.'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  '.'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  	  if(buffer[i]    ==    '.'    ||    buffer[i]    ==    'a'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	99	None	replace
27	[BUG]  [BUGGY]  if(buffer[i]  ==  '0'  &&  buffer[i]  ==  '9')  {  break;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  '0'  &&  buffer[i]  ==  '9')  {  break;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  '0'  &&  buffer[i]  ==  '9')  {  break;  }	  if(buffer[i]    ==    '0'    ||    buffer[i]    ==    '9')    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
28	[BUG]  [BUGGY]  if(buffer[i]  ==  '0'  &&  buffer[i]!=  '9')  {  break;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  '0'  &&  buffer[i]!=  '9')  {  break;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  '0'  &&  buffer[i]!=  '9')  {  break;  }	  if(buffer[i]    ==    '0'    ||    buffer[i]    ==    '9')    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
29	[BUG]  [BUGGY]  if(buffer[i]!=  '0'  &&  buffer[i]  ==  '9')  {  break;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]!=  '0'  &&  buffer[i]  ==  '9')  {  break;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]!=  '0'  &&  buffer[i]  ==  '9')  {  break;  }	  if(buffer[i]    ==    '0'    ||    buffer[i]    ==    '9')    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
30	[BUG]  [BUGGY]  if(buffer[i]!=  '0'  ||  buffer[i]  ==  '9')  {  break;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]!=  '0'  ||  buffer[i]  ==  '9')  {  break;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]!=  '0'  ||  buffer[i]  ==  '9')  {  break;  }	  if(buffer[i]    ==    '0'    ||    buffer[i]    ==    '9')    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
31	[BUG]  [BUGGY]  if(buffer[i]!=  '.'  ||  buffer[i]  ==  ',')  {  break;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]!=  '.'  ||  buffer[i]  ==  ',')  {  break;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]!=  '.'  ||  buffer[i]  ==  ',')  {  break;  }	  if(buffer[i]    ==    '.'    ||    buffer[i]    ==    ',')    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	73	None	replace
32	[BUG]  [BUGGY]  if(buffer[i]  ==  '.'  ||  buffer[i]  ==  ',')  {  continue;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  '.'  ||  buffer[i]  ==  ',')  {  continue;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  '.'  ||  buffer[i]  ==  ',')  {  continue;  }	  if(buffer[i]    ==    '.'    ||    buffer[i]    ==    ',')    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	73	None	replace
33	[BUG]  [BUGGY]  if(buffer[i]  ==  '.'  ||  buffer[i]  ==  ',')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  '.'  ||  buffer[i]  ==  ',')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  '.'  ||  buffer[i]  ==  ',')  {  throw  new  IllegalArgumentException( " ");  }	  if(buffer[i]    ==    '.'    ||    buffer[i]    ==    ',')    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	73	None	replace
34	[BUG]  [BUGGY]  if(buffer[i]  ==  '.'  ||  buffer[i]!=  ',')  {  break;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  '.'  ||  buffer[i]!=  ',')  {  break;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  '.'  ||  buffer[i]!=  ',')  {  break;  }	  if(buffer[i]    ==    '.'    ||    buffer[i]    ==    ',')    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	73	None	replace
35	[BUG]  [BUGGY]  if(buffer[i]  ==  '.'  &&  buffer[i]  ==  ',')  {  break;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  '.'  &&  buffer[i]  ==  ',')  {  break;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  '.'  &&  buffer[i]  ==  ',')  {  break;  }	  if(buffer[i]    ==    '.'    ||    buffer[i]    ==    ',')    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	73	None	replace
36	[BUG]  [BUGGY]  result.append(buffer[i].toString()  +  length);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append(buffer[i].toString()  +  length);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append(buffer[i].toString()  +  length);	  result.append(buffer[i].toString()    +    offset);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	27	None	replace
37	[BUG]  [BUGGY]  result.append(buffer[i].toString()  +  offset,  end);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append(buffer[i].toString()  +  offset,  end);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append(buffer[i].toString()  +  offset,  end);	  result.append(buffer[i].toString()    +    offset);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	27	None	replace
38	[BUG]  [BUGGY]  result.append(buffer[i].toString()  +  offset,  length);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append(buffer[i].toString()  +  offset,  length);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append(buffer[i].toString()  +  offset,  length);	  result.append(buffer[i].toString()    +    offset);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	27	None	replace
39	[BUG]  [BUGGY]  result.append(buffer[i].toString()  +  end);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append(buffer[i].toString()  +  end);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append(buffer[i].toString()  +  end);	  result.append(buffer[i].toString()    +    offset);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	27	None	replace
40	[BUG]  [BUGGY]  result.append(buffer[i].toString(),  offset);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append(buffer[i].toString(),  offset);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append(buffer[i].toString(),  offset);	  result.append(buffer[i].toString()    +    offset);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	27	None	replace
41	[BUG]  [BUGGY]  result.append(buffer[i].toString(),  end  +  offset);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                      ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append(buffer[i].toString(),  end  +  offset);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append(buffer[i].toString(),  end  +  offset);	  result.append(buffer[i].toString()    +    offset);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	27	None	replace
42	[BUG]  [BUGGY]  result.append((  byte)buffer[i],  length);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  byte)buffer[i],  length);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  byte)buffer[i],  length);	  result.append((    byte)buffer[i]);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	90	None	replace
43	[BUG]  [BUGGY]  result.append((  byte)buffer[i],  end);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  byte)buffer[i],  end);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  byte)buffer[i],  end);	  result.append((    byte)buffer[i]);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	90	None	replace
44	[BUG]  [BUGGY]  result.append((  byte)buffer[i]  +  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  byte)buffer[i]  +  1);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  byte)buffer[i]  +  1);	  result.append((    byte)buffer[i]);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	90	None	replace
45	[BUG]  [BUGGY]  result.append((  byte)buffer[i]).toString();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  byte)buffer[i]).toString();  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  byte)buffer[i]).toString();	  result.append((    byte)buffer[i]);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	90	None	replace
46	[BUG]  [BUGGY]  result.append((  byte)buffer[i]  +  length);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  byte)buffer[i]  +  length);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  byte)buffer[i]  +  length);	  result.append((    byte)buffer[i]);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	90	None	replace
47	[BUG]  [BUGGY]  if(buffer[i]  ==  null  ||  buffer[i]!=  null)  {  break;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  null  ||  buffer[i]!=  null)  {  break;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  null  ||  buffer[i]!=  null)  {  break;  }	  if(buffer[i]    ==    null)    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	36	None	replace
48	[BUG]  [BUGGY]  if(buffer[i]  ==  null)  {  continue;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  null)  {  continue;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  null)  {  continue;  }	  if(buffer[i]    ==    null)    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	36	None	replace
49	[BUG]  [BUGGY]  if(buffer[i]  ==  null  ||  buffer[i]  ==  null)  {  break;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  null  ||  buffer[i]  ==  null)  {  break;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  null  ||  buffer[i]  ==  null)  {  break;  }	  if(buffer[i]    ==    null)    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	36	None	replace
50	[BUG]  [BUGGY]  throw  new  IllegalStateException( "ByTE_MASK  is  not  supported. ");  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  throw  new  IllegalStateException( "ByTE_MASK  is  not  supported. ");  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	throw  new  IllegalStateException( "ByTE_MASK  is  not  supported. ");	  throw    new    IllegalStateException(   "BYTE_MASK    is    not    supported.   ");    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	104	None	replace
51	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( "BYTE_MASK  is  not  supported. ");  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  Throwables.throw  new  IllegalStateException( "BYTE_MASK  is  not  supported. ");  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	Throwables.throw  new  IllegalStateException( "BYTE_MASK  is  not  supported. ");	  throw    new    IllegalStateException(   "BYTE_MASK    is    not    supported.   ");    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	104	None	replace
52	[BUG]  [BUGGY]  throw  new  IllegalStateException( "BYTE_MASK  is  not  supported: "  +  i);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  throw  new  IllegalStateException( "BYTE_MASK  is  not  supported: "  +  i);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	throw  new  IllegalStateException( "BYTE_MASK  is  not  supported: "  +  i);	  throw    new    IllegalStateException(   "BYTE_MASK    is    not    supported.   ");    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	104	None	replace
53	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Byte_MASK  is  not  supported. ");  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  throw  new  IllegalStateException( "Byte_MASK  is  not  supported. ");  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	throw  new  IllegalStateException( "Byte_MASK  is  not  supported. ");	  throw    new    IllegalStateException(   "BYTE_MASK    is    not    supported.   ");    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	104	None	replace
54	[BUG]  [BUGGY]  throw  new  IllegalStateException( "BYTE_MASK  is  not  supported.  Expected: "  +  i);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  throw  new  IllegalStateException( "BYTE_MASK  is  not  supported.  Expected: "  +  i);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	throw  new  IllegalStateException( "BYTE_MASK  is  not  supported.  Expected: "  +  i);	  throw    new    IllegalStateException(   "BYTE_MASK    is    not    supported.   ");    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	104	None	replace
55	[BUG]  [BUGGY]  result.append((  byte)(buffer[i]  +  length);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  byte)(buffer[i]  +  length);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  byte)(buffer[i]  +  length);	  result.append((    byte)(buffer[i]);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	79	None	replace
56	[BUG]  [BUGGY]  result.append((  byte)(buffer[i],  end);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  byte)(buffer[i],  end);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  byte)(buffer[i],  end);	  result.append((    byte)(buffer[i]);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	79	None	replace
57	[BUG]  [BUGGY]  result.append((  byte)(buffer[i]  *  BYTE_MASK);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  byte)(buffer[i]  *  BYTE_MASK);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  byte)(buffer[i]  *  BYTE_MASK);	  result.append((    byte)(buffer[i]);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	79	None	replace
58	[BUG]  [BUGGY]  result.append((  byte)(buffer[i],  length);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  byte)(buffer[i],  length);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  byte)(buffer[i],  length);	  result.append((    byte)(buffer[i]);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	79	None	replace
59	[BUG]  [BUGGY]  result.append((  byte)(buffer[i]  +  1]);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  byte)(buffer[i]  +  1]);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  byte)(buffer[i]  +  1]);	  result.append((    byte)(buffer[i]);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	79	None	replace
60	[BUG]  [BUGGY]  result.append((  byte)(buffer[i]  +  1));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  byte)(buffer[i]  +  1));  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  byte)(buffer[i]  +  1));	  result.append((    byte)(buffer[i]);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	79	None	replace
61	[BUG]  [BUGGY]  if(buffer[i]  ==  '0'  &&  buffer[i]  ==  'A'  &&  buffer[i]  <  =  'Z')  {  break;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  '0'  &&  buffer[i]  ==  'A'  &&  buffer[i]  <  =  'Z')  {  break;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  '0'  &&  buffer[i]  ==  'A'  &&  buffer[i]  <  =  'Z')  {  break;  }	  if(buffer[i]    ==    '0'    ||    buffer[i]    ==    'A'    &&    buffer[i]    <    =    'Z')    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
62	[BUG]  [BUGGY]  if(buffer[i]  ==  '0'  &&  buffer[i]  >=  'A'  &&  buffer[i]  <  =  'Z')  {  break;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  '0'  &&  buffer[i]  >=  'A'  &&  buffer[i]  <  =  'Z')  {  break;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  '0'  &&  buffer[i]  >=  'A'  &&  buffer[i]  <  =  'Z')  {  break;  }	  if(buffer[i]    ==    '0'    ||    buffer[i]    ==    'A'    &&    buffer[i]    <    =    'Z')    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
63	[BUG]  [BUGGY]  if(buffer[i]!=  '0'  &&  buffer[i]  ==  'A'  &&  buffer[i]  <  =  'Z')  {  break;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]!=  '0'  &&  buffer[i]  ==  'A'  &&  buffer[i]  <  =  'Z')  {  break;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]!=  '0'  &&  buffer[i]  ==  'A'  &&  buffer[i]  <  =  'Z')  {  break;  }	  if(buffer[i]    ==    '0'    ||    buffer[i]    ==    'A'    &&    buffer[i]    <    =    'Z')    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
64	[BUG]  [BUGGY]  if(buffer[i]!=  '0'  &&  buffer[i]!=  'A'  &&  buffer[i]  <  =  'Z')  {  break;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]!=  '0'  &&  buffer[i]!=  'A'  &&  buffer[i]  <  =  'Z')  {  break;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]!=  '0'  &&  buffer[i]!=  'A'  &&  buffer[i]  <  =  'Z')  {  break;  }	  if(buffer[i]    ==    '0'    ||    buffer[i]    ==    'A'    &&    buffer[i]    <    =    'Z')    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
65	[BUG]  [BUGGY]  result.append((  char)(buffer[i]  +  1),  length);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)(buffer[i]  +  1),  length);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)(buffer[i]  +  1),  length);	  result.append((    char)(buffer[i]    +    1));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	22	None	replace
66	[BUG]  [BUGGY]  result.append((  char)(buffer[i]  +  1)+  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)(buffer[i]  +  1)+  1);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)(buffer[i]  +  1)+  1);	  result.append((    char)(buffer[i]    +    1));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	22	None	replace
67	[BUG]  [BUGGY]  result.append((  char)(buffer[i]  +  1),  end);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)(buffer[i]  +  1),  end);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)(buffer[i]  +  1),  end);	  result.append((    char)(buffer[i]    +    1));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	22	None	replace
68	[BUG]  [BUGGY]  result.append((  char)(buffer[i]  +  1).toCharArray());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)(buffer[i]  +  1).toCharArray());  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)(buffer[i]  +  1).toCharArray());	  result.append((    char)(buffer[i]    +    1));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	22	None	replace
69	[BUG]  [BUGGY]  result.append((  String)(buffer[i]  +  1));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  String)(buffer[i]  +  1));  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  String)(buffer[i]  +  1));	  result.append((    char)(buffer[i]    +    1));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	22	None	replace
70	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ".equals(buffer,  end));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( " ".equals(buffer,  end));  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	throw  new  IllegalArgumentException( " ".equals(buffer,  end));	  throw    new    IllegalArgumentException(   "   ".equals(buffer,    i));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	42	None	replace
71	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " "  + "equals(buffer,  i));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( " "  + "equals(buffer,  i));  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	throw  new  IllegalArgumentException( " "  + "equals(buffer,  i));	  throw    new    IllegalArgumentException(   "   ".equals(buffer,    i));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	42	None	replace
72	[BUG]  [BUGGY]  result.append('[').append(buffer[i]);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append('[').append(buffer[i]);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append('[').append(buffer[i]);	  result.append('[');    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	12	None	replace
73	[BUG]  [BUGGY]  result.append('[').append(buffer[i].toString());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append('[').append(buffer[i].toString());  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append('[').append(buffer[i].toString());	  result.append('[');    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	12	None	replace
74	[BUG]  [BUGGY]  result.append('[',  buffer[i]);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append('[',  buffer[i]);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append('[',  buffer[i]);	  result.append('[');    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	12	None	replace
75	[BUG]  [BUGGY]  result.append('['  +  i);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append('['  +  i);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append('['  +  i);	  result.append('[');    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	12	None	replace
76	[BUG]  [BUGGY]  result.append('[').append(buffer,  i);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append('[').append(buffer,  i);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append('[').append(buffer,  i);	  result.append('[');    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	12	None	replace
77	[BUG]  [BUGGY]  result.append('['  +  buffer[i]);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append('['  +  buffer[i]);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append('['  +  buffer[i]);	  result.append('[');    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	12	None	replace
78	[BUG]  [BUGGY]  StringBuffer  result  =  new  StringBuffer(buffer[i]);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  StringBuffer  result  =  new  StringBuffer(buffer[i]);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	StringBuffer  result  =  new  StringBuffer(buffer[i]);	  throw    new    IllegalStateException(   "   ".equals(buffer[i]));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	46	None	replace
79	[BUG]  [BUGGY]  throw  new  IllegalStateException( " "  +  String.valueOf(buffer[i]));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  throw  new  IllegalStateException( " "  +  String.valueOf(buffer[i]));  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	throw  new  IllegalStateException( " "  +  String.valueOf(buffer[i]));	  throw    new    IllegalStateException(   "   ".equals(buffer[i]));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	46	None	replace
80	[BUG]  [BUGGY]  throw  new  IllegalStateException( " ").append(buffer[i]);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  throw  new  IllegalStateException( " ").append(buffer[i]);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	throw  new  IllegalStateException( " ").append(buffer[i]);	  throw    new    IllegalStateException(   "   ".equals(buffer[i]));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	46	None	replace
81	[BUG]  [BUGGY]  StringBuffer  result  =  new  StringBuffer(buffer[i]).append( ", ");  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  StringBuffer  result  =  new  StringBuffer(buffer[i]).append( ", ");  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	StringBuffer  result  =  new  StringBuffer(buffer[i]).append( ", ");	  throw    new    IllegalStateException(   "   ".equals(buffer[i]));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	46	None	replace
82	[BUG]  [BUGGY]  return  new  String(buffer,  0,  buffer.length);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  return  new  String(buffer,  0,  buffer.length);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	return  new  String(buffer,  0,  buffer.length);	  return    new    String(buffer,    0,    result.length);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	106	None	replace
83	[BUG]  [BUGGY]  return  new  String(buffer,  0,  result.length  -  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  return  new  String(buffer,  0,  result.length  -  1);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	return  new  String(buffer,  0,  result.length  -  1);	  return    new    String(buffer,    0,    result.length);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	106	None	replace
84	[BUG]  [BUGGY]  return  new  String(buffer,  0,  result.length  +  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  return  new  String(buffer,  0,  result.length  +  1);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	return  new  String(buffer,  0,  result.length  +  1);	  return    new    String(buffer,    0,    result.length);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	106	None	replace
85	[BUG]  [BUGGY]  return  new  String(result,  0,  buffer.length);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  return  new  String(result,  0,  buffer.length);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	return  new  String(result,  0,  buffer.length);	  return    new    String(buffer,    0,    result.length);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	106	None	replace
86	[BUG]  [BUGGY]  StringBuffer  result  =  new  StringBuffer(buffer,  0,  result.length);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  StringBuffer  result  =  new  StringBuffer(buffer,  0,  result.length);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	StringBuffer  result  =  new  StringBuffer(buffer,  0,  result.length);	  return    new    String(buffer,    0,    result.length);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	106	None	replace
87	[BUG]  [BUGGY]  return  new  String(buffer,  0,  result.length,  length);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  return  new  String(buffer,  0,  result.length,  length);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	return  new  String(buffer,  0,  result.length,  length);	  return    new    String(buffer,    0,    result.length);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	106	None	replace
88	[BUG]  [BUGGY]  return  new  String(buffer,  0,  result.length  -  offset);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                      ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  return  new  String(buffer,  0,  result.length  -  offset);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	return  new  String(buffer,  0,  result.length  -  offset);	  return    new    String(buffer,    0,    result.length);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	106	None	replace
89	[BUG]  [BUGGY]  result.append((  char)buffer[i].charAt(i  +  1),  length);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)buffer[i].charAt(i  +  1),  length);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)buffer[i].charAt(i  +  1),  length);	  result.append((    char)buffer[i].charAt(i),    length);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	53	None	replace
90	[BUG]  [BUGGY]  result.append((  char)buffer[i].charAt(i),  end);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)buffer[i].charAt(i),  end);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)buffer[i].charAt(i),  end);	  result.append((    char)buffer[i].charAt(i),    length);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	53	None	replace
91	[BUG]  [BUGGY]  result.append((  char)buffer[i].charAt(i),  length  +  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)buffer[i].charAt(i),  length  +  1);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)buffer[i].charAt(i),  length  +  1);	  result.append((    char)buffer[i].charAt(i),    length);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	53	None	replace
92	[BUG]  [BUGGY]  result.append((  char)buffer[i].charAt(i),  offset,  length);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)buffer[i].charAt(i),  offset,  length);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)buffer[i].charAt(i),  offset,  length);	  result.append((    char)buffer[i].charAt(i),    length);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	53	None	replace
93	[BUG]  [BUGGY]  result.append((  char)buffer[i].charAt(i)+  1,  length);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)buffer[i].charAt(i)+  1,  length);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)buffer[i].charAt(i)+  1,  length);	  result.append((    char)buffer[i].charAt(i),    length);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	53	None	replace
94	[BUG]  [BUGGY]  result.append((  char)buffer[i].charAt(i),  length,  buffer[i]);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)buffer[i].charAt(i),  length,  buffer[i]);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)buffer[i].charAt(i),  length,  buffer[i]);	  result.append((    char)buffer[i].charAt(i),    length);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	53	None	replace
95	[BUG]  [BUGGY]  if(buffer[i]  ==  -1  ||  buffer[i]  ==  -1)  {  break;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  -1  ||  buffer[i]  ==  -1)  {  break;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  -1  ||  buffer[i]  ==  -1)  {  break;  }	  if(buffer[i]    ==    -1)    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	85	None	replace
96	[BUG]  [BUGGY]  if(buffer[i]  ==  '0'  ||  buffer[i]  <  =  '9')  {  break;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  '0'  ||  buffer[i]  <  =  '9')  {  break;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  '0'  ||  buffer[i]  <  =  '9')  {  break;  }	  if(buffer[i]    ==    '0'    &&    buffer[i]    <    =    '9')    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	1	None	replace
97	[BUG]  [BUGGY]  if(buffer[i]  >=  '0'  &&  buffer[i]  <  =  '9')  {  break;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  >=  '0'  &&  buffer[i]  <  =  '9')  {  break;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  >=  '0'  &&  buffer[i]  <  =  '9')  {  break;  }	  if(buffer[i]    ==    '0'    &&    buffer[i]    <    =    '9')    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	1	None	replace
98	[BUG]  [BUGGY]  if(buffer[i]  ==  '0'  &&  buffer[i]  <  =  '9'  ||  buffer[i]  >=  'a'  &&  buffer[i]  <  =  'z')  {  break;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  '0'  &&  buffer[i]  <  =  '9'  ||  buffer[i]  >=  'a'  &&  buffer[i]  <  =  'z')  {  break;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  '0'  &&  buffer[i]  <  =  '9'  ||  buffer[i]  >=  'a'  &&  buffer[i]  <  =  'z')  {  break;  }	  if(buffer[i]    ==    '0'    &&    buffer[i]    <    =    '9')    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	1	None	replace
99	[BUG]  [BUGGY]  if(buffer[i]  ==  'E'  ||  buffer[i]  ==  'E')  {  break;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  'E'  ||  buffer[i]  ==  'E')  {  break;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  'E'  ||  buffer[i]  ==  'E')  {  break;  }	  if(buffer[i]    ==    'e'    ||    buffer[i]    ==    'E')    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	76	None	replace
100	[BUG]  [BUGGY]  if(buffer[i]!=  'e'  ||  buffer[i]  ==  'E')  {  break;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]!=  'e'  ||  buffer[i]  ==  'E')  {  break;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]!=  'e'  ||  buffer[i]  ==  'E')  {  break;  }	  if(buffer[i]    ==    'e'    ||    buffer[i]    ==    'E')    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	76	None	replace
101	[BUG]  [BUGGY]  if(buffer[i]  ==  'e'  ||  buffer[i]  ==  'E')  {  continue;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  'e'  ||  buffer[i]  ==  'E')  {  continue;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  'e'  ||  buffer[i]  ==  'E')  {  continue;  }	  if(buffer[i]    ==    'e'    ||    buffer[i]    ==    'E')    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	76	None	replace
102	[BUG]  [BUGGY]  if(buffer[i]  ==  'e'  ||  buffer[i]!=  'E')  {  break;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  'e'  ||  buffer[i]!=  'E')  {  break;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  'e'  ||  buffer[i]!=  'E')  {  break;  }	  if(buffer[i]    ==    'e'    ||    buffer[i]    ==    'E')    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	76	None	replace
103	[BUG]  [BUGGY]  if(buffer[i]  ==  '0'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'f')  {  break;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  '0'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'f')  {  break;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  '0'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'f')  {  break;  }	  if(buffer[i]    ==    '0'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'f')    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	77	None	replace
104	[BUG]  [BUGGY]  if(buffer[i]!=  '0'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'f')  {  break;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]!=  '0'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'f')  {  break;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]!=  '0'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'f')  {  break;  }	  if(buffer[i]    ==    '0'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'f')    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	77	None	replace
105	[BUG]  [BUGGY]  if(buffer[i]  ==  '0'  &&  buffer[i]!=  'A'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'f')  {  break;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  '0'  &&  buffer[i]!=  'A'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'f')  {  break;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  '0'  &&  buffer[i]!=  'A'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'f')  {  break;  }	  if(buffer[i]    ==    '0'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'f')    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	77	None	replace
106	[BUG]  [BUGGY]  if(buffer[i]!=  '0'  &&  buffer[i]!=  'A'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'f')  {  break;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]!=  '0'  &&  buffer[i]!=  'A'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'f')  {  break;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]!=  '0'  &&  buffer[i]!=  'A'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'f')  {  break;  }	  if(buffer[i]    ==    '0'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'f')    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	77	None	replace
107	[BUG]  [BUGGY]  if(buffer[i]  ==  '0'  &&  buffer[i]!=  '0'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'f')  {  break;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  '0'  &&  buffer[i]!=  '0'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'f')  {  break;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  '0'  &&  buffer[i]!=  '0'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'f')  {  break;  }	  if(buffer[i]    ==    '0'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'f')    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	77	None	replace
108	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Failed  to  parse  name: "  +  buffer[i]);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  throw  new  IllegalStateException( "Failed  to  parse  name: "  +  buffer[i]);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	throw  new  IllegalStateException( "Failed  to  parse  name: "  +  buffer[i]);	  throw    new    IllegalStateException(   "   ".getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	49	None	replace
109	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Can  not  parse  name: "  +  buffer[i]);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  throw  new  IllegalStateException( "Can  not  parse  name: "  +  buffer[i]);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	throw  new  IllegalStateException( "Can  not  parse  name: "  +  buffer[i]);	  throw    new    IllegalStateException(   "   ".getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	49	None	replace
110	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Failed  to  parse  ' "  +  buffer[i]  + "'. ");  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  throw  new  IllegalStateException( "Failed  to  parse  ' "  +  buffer[i]  + "'. ");  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	throw  new  IllegalStateException( "Failed  to  parse  ' "  +  buffer[i]  + "'. ");	  throw    new    IllegalStateException(   "   ".getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	49	None	replace
111	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Failed  to  parse  name: "  +  buffer[i].getMessage());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  throw  new  IllegalStateException( "Failed  to  parse  name: "  +  buffer[i].getMessage());  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	throw  new  IllegalStateException( "Failed  to  parse  name: "  +  buffer[i].getMessage());	  throw    new    IllegalStateException(   "   ".getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	49	None	replace
112	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  result,  0,  length  -  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  System.arraycopy(buffer,  0,  result,  0,  length  -  1);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	System.arraycopy(buffer,  0,  result,  0,  length  -  1);	  System.arraycopy(buffer,    0,    result,    0,    length);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	100	None	replace
113	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  result,  0,  length  -  offset);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  System.arraycopy(buffer,  0,  result,  0,  length  -  offset);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	System.arraycopy(buffer,  0,  result,  0,  length  -  offset);	  System.arraycopy(buffer,    0,    result,    0,    length);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	100	None	replace
114	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  result,  0,  end);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  System.arraycopy(buffer,  0,  result,  0,  end);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	System.arraycopy(buffer,  0,  result,  0,  end);	  System.arraycopy(buffer,    0,    result,    0,    length);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	100	None	replace
115	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  result,  0,  length  +  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  System.arraycopy(buffer,  0,  result,  0,  length  +  1);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	System.arraycopy(buffer,  0,  result,  0,  length  +  1);	  System.arraycopy(buffer,    0,    result,    0,    length);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	100	None	replace
116	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  result,  0,  buffer.length);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  System.arraycopy(buffer,  0,  result,  0,  buffer.length);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	System.arraycopy(buffer,  0,  result,  0,  buffer.length);	  System.arraycopy(buffer,    0,    result,    0,    length);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	100	None	replace
117	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  result,  0,  offset);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  System.arraycopy(buffer,  0,  result,  0,  offset);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	System.arraycopy(buffer,  0,  result,  0,  offset);	  System.arraycopy(buffer,    0,    result,    0,    length);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	100	None	replace
118	[BUG]  [BUGGY]  if(buffer[i]  >=  '0'  &&  buffer[i]!=  'A'  &&  buffer[i]  <  =  'Z')  {  break;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  >=  '0'  &&  buffer[i]!=  'A'  &&  buffer[i]  <  =  'Z')  {  break;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  >=  '0'  &&  buffer[i]!=  'A'  &&  buffer[i]  <  =  'Z')  {  break;  }	  if(buffer[i]    ==    '0'    &&    buffer[i]!=    'A'    &&    buffer[i]    <    =    'Z')    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
119	[BUG]  [BUGGY]  if(buffer[i]  ==  '0'  &&  buffer[i]!=  'A'  &&  buffer[i]  >=  'Z')  {  break;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  '0'  &&  buffer[i]!=  'A'  &&  buffer[i]  >=  'Z')  {  break;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  '0'  &&  buffer[i]!=  'A'  &&  buffer[i]  >=  'Z')  {  break;  }	  if(buffer[i]    ==    '0'    &&    buffer[i]!=    'A'    &&    buffer[i]    <    =    'Z')    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
120	[BUG]  [BUGGY]  if(buffer[i]!=  '.'  ||  buffer[i]  ==  '/')  {  break;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]!=  '.'  ||  buffer[i]  ==  '/')  {  break;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]!=  '.'  ||  buffer[i]  ==  '/')  {  break;  }	  if(buffer[i]    ==    '.'    ||    buffer[i]    ==    '/')    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	57	None	replace
121	[BUG]  [BUGGY]  if(buffer[i]  ==  '.'  ||  buffer[i]!=  '/')  {  break;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  '.'  ||  buffer[i]!=  '/')  {  break;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  '.'  ||  buffer[i]!=  '/')  {  break;  }	  if(buffer[i]    ==    '.'    ||    buffer[i]    ==    '/')    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	57	None	replace
122	[BUG]  [BUGGY]  if(buffer[i]  ==  '.'  ||  buffer[i]  ==  '/')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  '.'  ||  buffer[i]  ==  '/')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  '.'  ||  buffer[i]  ==  '/')  {  throw  new  IllegalArgumentException( " ");  }	  if(buffer[i]    ==    '.'    ||    buffer[i]    ==    '/')    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	57	None	replace
123	[BUG]  [BUGGY]  if(buffer[i]  ==  '.'  ||  buffer[i]  ==  '/')  {  continue;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  '.'  ||  buffer[i]  ==  '/')  {  continue;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  '.'  ||  buffer[i]  ==  '/')  {  continue;  }	  if(buffer[i]    ==    '.'    ||    buffer[i]    ==    '/')    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	57	None	replace
124	[BUG]  [BUGGY]  if(buffer[i]  ==  ','  ||  buffer[i]  ==  '/')  {  break;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  ','  ||  buffer[i]  ==  '/')  {  break;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  ','  ||  buffer[i]  ==  '/')  {  break;  }	  if(buffer[i]    ==    '.'    ||    buffer[i]    ==    '/')    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	57	None	replace
125	[BUG]  [BUGGY]  if(buffer[i]  ==  'n'  ||  buffer[i]  ==  'r'  ||  buffer[i]  ==  'n'  ||  buffer[i]!=  't')  {  continue;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  'n'  ||  buffer[i]  ==  'r'  ||  buffer[i]  ==  'n'  ||  buffer[i]!=  't')  {  continue;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  'n'  ||  buffer[i]  ==  'r'  ||  buffer[i]  ==  'n'  ||  buffer[i]!=  't')  {  continue;  }	  if(buffer[i]    ==    'n'    ||    buffer[i]    ==    'r'    ||    buffer[i]    ==    'n'    ||    buffer[i]    ==    't')    {    continue;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	91	None	replace
126	[BUG]  [BUGGY]  if(buffer[i]!=  'n'  ||  buffer[i]  ==  'r'  ||  buffer[i]  ==  'n'  ||  buffer[i]  ==  't')  {  continue;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]!=  'n'  ||  buffer[i]  ==  'r'  ||  buffer[i]  ==  'n'  ||  buffer[i]  ==  't')  {  continue;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]!=  'n'  ||  buffer[i]  ==  'r'  ||  buffer[i]  ==  'n'  ||  buffer[i]  ==  't')  {  continue;  }	  if(buffer[i]    ==    'n'    ||    buffer[i]    ==    'r'    ||    buffer[i]    ==    'n'    ||    buffer[i]    ==    't')    {    continue;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	91	None	replace
127	[BUG]  [BUGGY]  if(buffer[i]  ==  '.'  ||  buffer[i]  ==  'r'  ||  buffer[i]  ==  'n'  ||  buffer[i]  ==  't')  {  continue;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  '.'  ||  buffer[i]  ==  'r'  ||  buffer[i]  ==  'n'  ||  buffer[i]  ==  't')  {  continue;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  '.'  ||  buffer[i]  ==  'r'  ||  buffer[i]  ==  'n'  ||  buffer[i]  ==  't')  {  continue;  }	  if(buffer[i]    ==    'n'    ||    buffer[i]    ==    'r'    ||    buffer[i]    ==    'n'    ||    buffer[i]    ==    't')    {    continue;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	91	None	replace
128	[BUG]  [BUGGY]  if(buffer[i]  ==  '0'  ||  buffer[i]  ==  'r'  ||  buffer[i]  ==  'n'  ||  buffer[i]  ==  't')  {  continue;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  '0'  ||  buffer[i]  ==  'r'  ||  buffer[i]  ==  'n'  ||  buffer[i]  ==  't')  {  continue;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  '0'  ||  buffer[i]  ==  'r'  ||  buffer[i]  ==  'n'  ||  buffer[i]  ==  't')  {  continue;  }	  if(buffer[i]    ==    'n'    ||    buffer[i]    ==    'r'    ||    buffer[i]    ==    'n'    ||    buffer[i]    ==    't')    {    continue;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	91	None	replace
129	[BUG]  [BUGGY]  if(buffer[i]  ==  'N'  ||  buffer[i]  ==  'r'  ||  buffer[i]  ==  'n'  ||  buffer[i]  ==  't')  {  continue;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  'N'  ||  buffer[i]  ==  'r'  ||  buffer[i]  ==  'n'  ||  buffer[i]  ==  't')  {  continue;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  'N'  ||  buffer[i]  ==  'r'  ||  buffer[i]  ==  'n'  ||  buffer[i]  ==  't')  {  continue;  }	  if(buffer[i]    ==    'n'    ||    buffer[i]    ==    'r'    ||    buffer[i]    ==    'n'    ||    buffer[i]    ==    't')    {    continue;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	91	None	replace
130	[BUG]  [BUGGY]  result.append(buffer[i].toCharArray()  +  length);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append(buffer[i].toCharArray()  +  length);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append(buffer[i].toCharArray()  +  length);	  result.append(buffer[i].toCharArray());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	18	None	replace
131	[BUG]  [BUGGY]  result.append(buffer[i].toCharArray()  +  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append(buffer[i].toCharArray()  +  1);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append(buffer[i].toCharArray()  +  1);	  result.append(buffer[i].toCharArray());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	18	None	replace
132	[BUG]  [BUGGY]  result.append(buffer[i].toCharArray(),  end);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append(buffer[i].toCharArray(),  end);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append(buffer[i].toCharArray(),  end);	  result.append(buffer[i].toCharArray());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	18	None	replace
133	[BUG]  [BUGGY]  result.append(buffer[i].toCharArray()  +  offset);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append(buffer[i].toCharArray()  +  offset);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append(buffer[i].toCharArray()  +  offset);	  result.append(buffer[i].toCharArray());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	18	None	replace
134	[BUG]  [BUGGY]  result.append(buffer[i].toCharArray(),  length);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append(buffer[i].toCharArray(),  length);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append(buffer[i].toCharArray(),  length);	  result.append(buffer[i].toCharArray());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	18	None	replace
135	[BUG]  [BUGGY]  if(buffer[i]!=  '.'  ||  buffer[i]  ==  '+')  {  break;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]!=  '.'  ||  buffer[i]  ==  '+')  {  break;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]!=  '.'  ||  buffer[i]  ==  '+')  {  break;  }	  if(buffer[i]    ==    '.'    ||    buffer[i]    ==    '+')    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	60	None	replace
136	[BUG]  [BUGGY]  if(buffer[i]  ==  '.'  ||  buffer[i]  ==  '+')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  '.'  ||  buffer[i]  ==  '+')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  '.'  ||  buffer[i]  ==  '+')  {  throw  new  IllegalArgumentException( " ");  }	  if(buffer[i]    ==    '.'    ||    buffer[i]    ==    '+')    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	60	None	replace
137	[BUG]  [BUGGY]  if(buffer[i]  ==  '.'  ||  buffer[i]  ==  '+')  {  continue;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  '.'  ||  buffer[i]  ==  '+')  {  continue;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  '.'  ||  buffer[i]  ==  '+')  {  continue;  }	  if(buffer[i]    ==    '.'    ||    buffer[i]    ==    '+')    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	60	None	replace
138	[BUG]  [BUGGY]  if(buffer[i]  ==  '.'  ||  buffer[i]!=  '+')  {  break;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  '.'  ||  buffer[i]!=  '+')  {  break;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  '.'  ||  buffer[i]!=  '+')  {  break;  }	  if(buffer[i]    ==    '.'    ||    buffer[i]    ==    '+')    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	60	None	replace
139	[BUG]  [BUGGY]  if(buffer[i]  ==  ','  ||  buffer[i]  ==  '+')  {  break;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  ','  ||  buffer[i]  ==  '+')  {  break;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  ','  ||  buffer[i]  ==  '+')  {  break;  }	  if(buffer[i]    ==    '.'    ||    buffer[i]    ==    '+')    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	60	None	replace
140	[BUG]  [BUGGY]  StringBuffer  result  =  new  StringBuffer(buffer,  i  +  1,  end);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  StringBuffer  result  =  new  StringBuffer(buffer,  i  +  1,  end);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	StringBuffer  result  =  new  StringBuffer(buffer,  i  +  1,  end);	  StringBuffer    result    =    new    StringBuffer(buffer,    i    +    1);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	45	None	replace
141	[BUG]  [BUGGY]  StringBuffer  result  =  new  StringBuffer(buffer,  i  +  1,  length);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  StringBuffer  result  =  new  StringBuffer(buffer,  i  +  1,  length);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	StringBuffer  result  =  new  StringBuffer(buffer,  i  +  1,  length);	  StringBuffer    result    =    new    StringBuffer(buffer,    i    +    1);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	45	None	replace
142	[BUG]  [BUGGY]  StringBuffer  result  =  new  StringBuffer(buffer,  0,  i  +  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  StringBuffer  result  =  new  StringBuffer(buffer,  0,  i  +  1);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	StringBuffer  result  =  new  StringBuffer(buffer,  0,  i  +  1);	  StringBuffer    result    =    new    StringBuffer(buffer,    i    +    1);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	45	None	replace
143	[BUG]  [BUGGY]  StringBuffer  result  =  new  StringBuffer(buffer,  end  +  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  StringBuffer  result  =  new  StringBuffer(buffer,  end  +  1);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	StringBuffer  result  =  new  StringBuffer(buffer,  end  +  1);	  StringBuffer    result    =    new    StringBuffer(buffer,    i    +    1);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	45	None	replace
144	[BUG]  [BUGGY]  StringBuffer  result  =  new  StringBuffer(buffer,  i  +  2);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  StringBuffer  result  =  new  StringBuffer(buffer,  i  +  2);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	StringBuffer  result  =  new  StringBuffer(buffer,  i  +  2);	  StringBuffer    result    =    new    StringBuffer(buffer,    i    +    1);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	45	None	replace
145	[BUG]  [BUGGY]  StringBuffer  result  =  new  StringBuffer(buffer,  i  +  1,  buffer.length);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  StringBuffer  result  =  new  StringBuffer(buffer,  i  +  1,  buffer.length);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	StringBuffer  result  =  new  StringBuffer(buffer,  i  +  1,  buffer.length);	  StringBuffer    result    =    new    StringBuffer(buffer,    i    +    1);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	45	None	replace
146	[BUG]  [BUGGY]  result.append((  char)(buffer[i]  +  length,  end);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)(buffer[i]  +  length,  end);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)(buffer[i]  +  length,  end);	  result.append((    char)(buffer[i]    +    length);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	20	None	replace
147	[BUG]  [BUGGY]  result.append((  char)(buffer[i]  *  length);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)(buffer[i]  *  length);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)(buffer[i]  *  length);	  result.append((    char)(buffer[i]    +    length);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	20	None	replace
148	[BUG]  [BUGGY]  result.append((  char)(buffer[i]  +  end);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)(buffer[i]  +  end);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)(buffer[i]  +  end);	  result.append((    char)(buffer[i]    +    length);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	20	None	replace
149	[BUG]  [BUGGY]  result.append((  char)(buffer[i]  +  length  +  1));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)(buffer[i]  +  length  +  1));  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)(buffer[i]  +  length  +  1));	  result.append((    char)(buffer[i]    +    length);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	20	None	replace
150	[BUG]  [BUGGY]  result.append((  String)(buffer[i]  +  length);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  String)(buffer[i]  +  length);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  String)(buffer[i]  +  length);	  result.append((    char)(buffer[i]    +    length);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	20	None	replace
151	[BUG]  [BUGGY]  if(buffer[i]!=  end)  {  break;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]!=  end)  {  break;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]!=  end)  {  break;  }	  if(buffer[i]!=    0)    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	38	None	replace
152	[BUG]  [BUGGY]  return  result.toString()  + ", "  +  i;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  return  result.toString()  + ", "  +  i;  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	return  result.toString()  + ", "  +  i;	  return    result.toString();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	103	None	replace
153	[BUG]  [BUGGY]  return  result.toString()  + "_ "  +  buffer[i];  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  return  result.toString()  + "_ "  +  buffer[i];  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	return  result.toString()  + "_ "  +  buffer[i];	  return    result.toString();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	103	None	replace
154	[BUG]  [BUGGY]  return  result.toString()  +  i;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  return  result.toString()  +  i;  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	return  result.toString()  +  i;	  return    result.toString();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	103	None	replace
155	[BUG]  [BUGGY]  result.append((  char)buffer[i],  offset,  end);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)buffer[i],  offset,  end);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)buffer[i],  offset,  end);	  result.append((    char)buffer[i],    end);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	34	None	replace
156	[BUG]  [BUGGY]  result.append((  char)buffer[i],  offset);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)buffer[i],  offset);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)buffer[i],  offset);	  result.append((    char)buffer[i],    end);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	34	None	replace
157	[BUG]  [BUGGY]  result.append((  char)buffer[i],  buffer[i]);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)buffer[i],  buffer[i]);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)buffer[i],  buffer[i]);	  result.append((    char)buffer[i],    end);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	34	None	replace
158	[BUG]  [BUGGY]  result.append((  char)buffer[i],  end,  length);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)buffer[i],  end,  length);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)buffer[i],  end,  length);	  result.append((    char)buffer[i],    end);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	34	None	replace
159	[BUG]  [BUGGY]  result.append((  char)buffer[i],  offset  +  length);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)buffer[i],  offset  +  length);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)buffer[i],  offset  +  length);	  result.append((    char)buffer[i],    end);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	34	None	replace
160	[BUG]  [BUGGY]  result.append((  char)(buffer[i]  +  offset,  length));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)(buffer[i]  +  offset,  length));  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)(buffer[i]  +  offset,  length));	  result.append((    char)(buffer[i]    +    length));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	8	None	replace
161	[BUG]  [BUGGY]  result.append((  char)(buffer[i]  +  length,  end));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)(buffer[i]  +  length,  end));  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)(buffer[i]  +  length,  end));	  result.append((    char)(buffer[i]    +    length));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	8	None	replace
162	[BUG]  [BUGGY]  result.append((  char)(buffer[i]  +  offset));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)(buffer[i]  +  offset));  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)(buffer[i]  +  offset));	  result.append((    char)(buffer[i]    +    length));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	8	None	replace
163	[BUG]  [BUGGY]  result.append((  char)(buffer[i]  +  length,  buffer[i]));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)(buffer[i]  +  length,  buffer[i]));  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)(buffer[i]  +  length,  buffer[i]));	  result.append((    char)(buffer[i]    +    length));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	8	None	replace
164	[BUG]  [BUGGY]  result.append((  char)(buffer[i]  +  length,  offset  +  length));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)(buffer[i]  +  length,  offset  +  length));  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)(buffer[i]  +  length,  offset  +  length));	  result.append((    char)(buffer[i]    +    length));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	8	None	replace
165	[BUG]  [BUGGY]  result.append(buffer[i]).append('n');  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append(buffer[i]).append('n');  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append(buffer[i]).append('n');	  result.append(buffer[i]).toString();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	16	None	replace
166	[BUG]  [BUGGY]  result.append(buffer[i]).append('  ');  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append(buffer[i]).append('  ');  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append(buffer[i]).append('  ');	  result.append(buffer[i]).toString();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	16	None	replace
167	[BUG]  [BUGGY]  result.append(buffer[i]).append('_');  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append(buffer[i]).append('_');  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append(buffer[i]).append('_');	  result.append(buffer[i]).toString();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	16	None	replace
168	[BUG]  [BUGGY]  result.append(buffer[i],  end).toString();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append(buffer[i],  end).toString();  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append(buffer[i],  end).toString();	  result.append(buffer[i]).toString();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	16	None	replace
169	[BUG]  [BUGGY]  result.append(buffer[i]).append( ", ");  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append(buffer[i]).append( ", ");  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append(buffer[i]).append( ", ");	  result.append(buffer[i]).toString();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	16	None	replace
170	[BUG]  [BUGGY]  ||  buffer[i]  ==  0)  {  continue;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  ||  buffer[i]  ==  0)  {  continue;  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	||  buffer[i]  ==  0)  {  continue;	  if(buffer[i]    ==    0)    {    continue;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	86	None	replace
171	[BUG]  [BUGGY]  if(buffer[i]!=  null)  {  continue;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]!=  null)  {  continue;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]!=  null)  {  continue;  }	  if(buffer[i]    ==    0)    {    continue;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	86	None	replace
172	[BUG]  [BUGGY]  if(buffer[i]!=  0)  {  continue;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]!=  0)  {  continue;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]!=  0)  {  continue;  }	  if(buffer[i]    ==    0)    {    continue;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	86	None	replace
173	[BUG]  [BUGGY]  while(buffer[i]!=  0)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  while(buffer[i]!=  0)  {  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	while(buffer[i]!=  0)  {	  if(buffer[i]    ==    0)    {    continue;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	86	None	replace
174	[BUG]  [BUGGY]  result.append(buffer,  0,  buffer.length);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append(buffer,  0,  buffer.length);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append(buffer,  0,  buffer.length);	  result.append(buffer,    0,    length);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	102	None	replace
175	[BUG]  [BUGGY]  result.append(buffer,  0,  end);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append(buffer,  0,  end);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append(buffer,  0,  end);	  result.append(buffer,    0,    length);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	102	None	replace
176	[BUG]  [BUGGY]  result.append(buffer,  0,  length,  buffer[i]);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append(buffer,  0,  length,  buffer[i]);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append(buffer,  0,  length,  buffer[i]);	  result.append(buffer,    0,    length);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	102	None	replace
177	[BUG]  [BUGGY]  result.append(buffer,  0,  length  -  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append(buffer,  0,  length  -  1);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append(buffer,  0,  length  -  1);	  result.append(buffer,    0,    length);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	102	None	replace
178	[BUG]  [BUGGY]  result.append(buffer,  0,  offset,  length);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                      ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append(buffer,  0,  offset,  length);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append(buffer,  0,  offset,  length);	  result.append(buffer,    0,    length);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	102	None	replace
179	[BUG]  [BUGGY]  result.append(buffer,  0,  length,  offset);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                        ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append(buffer,  0,  length,  offset);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append(buffer,  0,  length,  offset);	  result.append(buffer,    0,    length);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	102	None	replace
180	[BUG]  [BUGGY]  result.append(buffer,  0,  length  +  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                          ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append(buffer,  0,  length  +  1);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append(buffer,  0,  length  +  1);	  result.append(buffer,    0,    length);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	102	None	replace
181	[BUG]  [BUGGY]  if(buffer[i]!=  '.'  ||  buffer[i]  ==  ':')  {  break;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]!=  '.'  ||  buffer[i]  ==  ':')  {  break;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]!=  '.'  ||  buffer[i]  ==  ':')  {  break;  }	  if(buffer[i]    ==    '.'    ||    buffer[i]    ==    ':')    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	56	None	replace
182	[BUG]  [BUGGY]  if(buffer[i]  ==  '.'  ||  buffer[i]  ==  ':')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  '.'  ||  buffer[i]  ==  ':')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  '.'  ||  buffer[i]  ==  ':')  {  throw  new  IllegalArgumentException( " ");  }	  if(buffer[i]    ==    '.'    ||    buffer[i]    ==    ':')    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	56	None	replace
183	[BUG]  [BUGGY]  if(buffer[i]  ==  '.'  ||  buffer[i]!=  ':')  {  break;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  '.'  ||  buffer[i]!=  ':')  {  break;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  '.'  ||  buffer[i]!=  ':')  {  break;  }	  if(buffer[i]    ==    '.'    ||    buffer[i]    ==    ':')    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	56	None	replace
184	[BUG]  [BUGGY]  if(buffer[i]  ==  '.'  ||  buffer[i]  ==  ':')  {  continue;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  '.'  ||  buffer[i]  ==  ':')  {  continue;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  '.'  ||  buffer[i]  ==  ':')  {  continue;  }	  if(buffer[i]    ==    '.'    ||    buffer[i]    ==    ':')    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	56	None	replace
185	[BUG]  [BUGGY]  if(buffer[i]  ==  ','  ||  buffer[i]  ==  ':')  {  break;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  ','  ||  buffer[i]  ==  ':')  {  break;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  ','  ||  buffer[i]  ==  ':')  {  break;  }	  if(buffer[i]    ==    '.'    ||    buffer[i]    ==    ':')    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	56	None	replace
186	[BUG]  [BUGGY]  result.append((  byte)buffer[i].charAt(i  +  1));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  byte)buffer[i].charAt(i  +  1));  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  byte)buffer[i].charAt(i  +  1));	  result.append((    byte)buffer[i].charAt(i));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	93	None	replace
187	[BUG]  [BUGGY]  result.append((  byte)buffer[i].charAt(i),  length);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  byte)buffer[i].charAt(i),  length);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  byte)buffer[i].charAt(i),  length);	  result.append((    byte)buffer[i].charAt(i));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	93	None	replace
188	[BUG]  [BUGGY]  result.append((  byte)buffer[i].charAt(i++));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  byte)buffer[i].charAt(i++));  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  byte)buffer[i].charAt(i++));	  result.append((    byte)buffer[i].charAt(i));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	93	None	replace
189	[BUG]  [BUGGY]  result.append((  byte)buffer[i].toString());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  byte)buffer[i].toString());  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  byte)buffer[i].toString());	  result.append((    byte)buffer[i].charAt(i));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	93	None	replace
190	[BUG]  [BUGGY]  result.append((  byte)buffer[i].charAt(i)  +  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  byte)buffer[i].charAt(i)  +  1);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  byte)buffer[i].charAt(i)  +  1);	  result.append((    byte)buffer[i].charAt(i));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	93	None	replace
191	[BUG]  [BUGGY]  if(buffer[i]  ==  '0'  &&  buffer[i]!=  'a'  &&  buffer[i]  <  =  'z')  {  break;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  '0'  &&  buffer[i]!=  'a'  &&  buffer[i]  <  =  'z')  {  break;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  '0'  &&  buffer[i]!=  'a'  &&  buffer[i]  <  =  'z')  {  break;  }	  if(buffer[i]    ==    '0'    ||    buffer[i]    ==    'a'    &&    buffer[i]    <    =    'z')    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	88	None	replace
192	[BUG]  [BUGGY]  if(buffer[i]  ==  '0'  &&  buffer[i]  >=  'a'  &&  buffer[i]  <  =  'z')  {  break;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  '0'  &&  buffer[i]  >=  'a'  &&  buffer[i]  <  =  'z')  {  break;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  '0'  &&  buffer[i]  >=  'a'  &&  buffer[i]  <  =  'z')  {  break;  }	  if(buffer[i]    ==    '0'    ||    buffer[i]    ==    'a'    &&    buffer[i]    <    =    'z')    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	88	None	replace
193	[BUG]  [BUGGY]  if(buffer[i]  ==  '0'  &&  buffer[i]  ==  'a'  &&  buffer[i]  <  =  'z')  {  break;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  '0'  &&  buffer[i]  ==  'a'  &&  buffer[i]  <  =  'z')  {  break;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  '0'  &&  buffer[i]  ==  'a'  &&  buffer[i]  <  =  'z')  {  break;  }	  if(buffer[i]    ==    '0'    ||    buffer[i]    ==    'a'    &&    buffer[i]    <    =    'z')    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	88	None	replace
194	[BUG]  [BUGGY]  if(buffer[i]!=  '0'  &&  buffer[i]!=  'a'  &&  buffer[i]  <  =  'z')  {  break;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]!=  '0'  &&  buffer[i]!=  'a'  &&  buffer[i]  <  =  'z')  {  break;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]!=  '0'  &&  buffer[i]!=  'a'  &&  buffer[i]  <  =  'z')  {  break;  }	  if(buffer[i]    ==    '0'    ||    buffer[i]    ==    'a'    &&    buffer[i]    <    =    'z')    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	88	None	replace
195	[BUG]  [BUGGY]  if(buffer[i]!=  '0'  &&  buffer[i]  ==  'a'  &&  buffer[i]  <  =  'z')  {  break;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]!=  '0'  &&  buffer[i]  ==  'a'  &&  buffer[i]  <  =  'z')  {  break;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]!=  '0'  &&  buffer[i]  ==  'a'  &&  buffer[i]  <  =  'z')  {  break;  }	  if(buffer[i]    ==    '0'    ||    buffer[i]    ==    'a'    &&    buffer[i]    <    =    'z')    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	88	None	replace
196	[BUG]  [BUGGY]  result.append((  char)(buffer[i],  offset,  length);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)(buffer[i],  offset,  length);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)(buffer[i],  offset,  length);	  result.append((    char)(buffer[i],    length);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	21	None	replace
197	[BUG]  [BUGGY]  result.append((  char)(buffer[i],  0,  length);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)(buffer[i],  0,  length);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)(buffer[i],  0,  length);	  result.append((    char)(buffer[i],    length);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	21	None	replace
198	[BUG]  [BUGGY]  result.append((  char)(buffer[i],  length  +  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)(buffer[i],  length  +  1);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)(buffer[i],  length  +  1);	  result.append((    char)(buffer[i],    length);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	21	None	replace
199	[BUG]  [BUGGY]  result.append((  char)(buffer[i],  buffer[i]);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)(buffer[i],  buffer[i]);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)(buffer[i],  buffer[i]);	  result.append((    char)(buffer[i],    length);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	21	None	replace
200	[BUG]  [BUGGY]  result.append((  char)(buffer[i],  offset  +  length);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)(buffer[i],  offset  +  length);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)(buffer[i],  offset  +  length);	  result.append((    char)(buffer[i],    length);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	21	None	replace
201	[BUG]  [BUGGY]  result.append((  String)(buffer[i],  length);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  String)(buffer[i],  length);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  String)(buffer[i],  length);	  result.append((    char)(buffer[i],    length);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	21	None	replace
202	[BUG]  [BUGGY]  result.append((  String)buffer[i]  +  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  String)buffer[i]  +  1);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  String)buffer[i]  +  1);	  result.append((    char)buffer[i]    +    1);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	31	None	replace
203	[BUG]  [BUGGY]  result.append((  char)buffer[i]  +  2);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)buffer[i]  +  2);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)buffer[i]  +  2);	  result.append((    char)buffer[i]    +    1);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	31	None	replace
204	[BUG]  [BUGGY]  result.append((  char)buffer[i].getLength()  +  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)buffer[i].getLength()  +  1);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)buffer[i].getLength()  +  1);	  result.append((    char)buffer[i].getLength());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	81	None	replace
205	[BUG]  [BUGGY]  result.append((  String)buffer[i].getLength());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  String)buffer[i].getLength());  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  String)buffer[i].getLength());	  result.append((    char)buffer[i].getLength());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	81	None	replace
206	[BUG]  [BUGGY]  result.append((  char)buffer[i].getCharacterEncoding());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)buffer[i].getCharacterEncoding());  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)buffer[i].getCharacterEncoding());	  result.append((    char)buffer[i].getLength());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	81	None	replace
207	[BUG]  [BUGGY]  result.append((  char)buffer[i].getSize());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)buffer[i].getSize());  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)buffer[i].getSize());	  result.append((    char)buffer[i].getLength());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	81	None	replace
208	[BUG]  [BUGGY]  result.append((  byte)buffer[i].getLength());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  byte)buffer[i].getLength());  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  byte)buffer[i].getLength());	  result.append((    char)buffer[i].getLength());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	81	None	replace
209	[BUG]  [BUGGY]  result.append( "' ",  buffer[i]);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append( "' ",  buffer[i]);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append( "' ",  buffer[i]);	  result.append(   "'   ");    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	13	None	replace
210	[BUG]  [BUGGY]  result.append( ",' ");  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append( ",' ");  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append( ",' ");	  result.append(   "'   ");    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	13	None	replace
211	[BUG]  [BUGGY]  result.append( "' "  +  i);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append( "' "  +  i);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append( "' "  +  i);	  result.append(   "'   ");    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	13	None	replace
212	[BUG]  [BUGGY]  result.append( ".000 ");  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append( ".000 ");  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append( ".000 ");	  result.append(   "'   ");    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	13	None	replace
213	[BUG]  [BUGGY]  result.append('n',  buffer[i]);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append('n',  buffer[i]);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append('n',  buffer[i]);	  result.append('n',    i);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	62	None	replace
214	[BUG]  [BUGGY]  result.append('N',  end);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append('N',  end);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append('N',  end);	  result.append('n',    i);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	62	None	replace
215	[BUG]  [BUGGY]  result.append('$',  i);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append('$',  i);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append('$',  i);	  result.append('n',    i);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	62	None	replace
216	[BUG]  [BUGGY]  result.append('0',  i);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append('0',  i);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append('0',  i);	  result.append('n',    i);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	62	None	replace
217	[BUG]  [BUGGY]  StringBuffer  result  =  new  StringBuffer(buffer,  0,  buffer.length);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  StringBuffer  result  =  new  StringBuffer(buffer,  0,  buffer.length);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	StringBuffer  result  =  new  StringBuffer(buffer,  0,  buffer.length);	  StringBuffer    result    =    new    StringBuffer(buffer,    0,    length);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	84	None	replace
218	[BUG]  [BUGGY]  StringBuffer  result  =  new  StringBuffer(length,  0,  buffer.length);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  StringBuffer  result  =  new  StringBuffer(length,  0,  buffer.length);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	StringBuffer  result  =  new  StringBuffer(length,  0,  buffer.length);	  StringBuffer    result    =    new    StringBuffer(buffer,    0,    length);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	84	None	replace
219	[BUG]  [BUGGY]  StringBuffer  result  =  new  StringBuffer(buffer,  0,  end);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  StringBuffer  result  =  new  StringBuffer(buffer,  0,  end);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	StringBuffer  result  =  new  StringBuffer(buffer,  0,  end);	  StringBuffer    result    =    new    StringBuffer(buffer,    0,    length);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	84	None	replace
220	[BUG]  [BUGGY]  StringBuffer  result  =  new  StringBuffer(buffer,  0,  length  +  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  StringBuffer  result  =  new  StringBuffer(buffer,  0,  length  +  1);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	StringBuffer  result  =  new  StringBuffer(buffer,  0,  length  +  1);	  StringBuffer    result    =    new    StringBuffer(buffer,    0,    length);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	84	None	replace
221	[BUG]  [BUGGY]  StringBuffer  result  =  new  StringBuffer(buffer,  0,  length  -  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  StringBuffer  result  =  new  StringBuffer(buffer,  0,  length  -  1);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	StringBuffer  result  =  new  StringBuffer(buffer,  0,  length  -  1);	  StringBuffer    result    =    new    StringBuffer(buffer,    0,    length);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	84	None	replace
222	[BUG]  [BUGGY]  StringBuffer  result  =  new  StringBuffer(buffer,  0,  length,  buffer.length);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  StringBuffer  result  =  new  StringBuffer(buffer,  0,  length,  buffer.length);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	StringBuffer  result  =  new  StringBuffer(buffer,  0,  length,  buffer.length);	  StringBuffer    result    =    new    StringBuffer(buffer,    0,    length);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	84	None	replace
223	[BUG]  [BUGGY]  StringBuffer  result  =  new  StringBuffer(buffer,  0,  i);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  StringBuffer  result  =  new  StringBuffer(buffer,  0,  i);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	StringBuffer  result  =  new  StringBuffer(buffer,  0,  i);	  StringBuffer    result    =    new    StringBuffer(buffer,    0,    length);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	84	None	replace
224	[BUG]  [BUGGY]  StringBuffer  result  =  new  StringBuffer(buffer,  end);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  StringBuffer  result  =  new  StringBuffer(buffer,  end);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	StringBuffer  result  =  new  StringBuffer(buffer,  end);	  StringBuffer    result    =    new    StringBuffer(buffer,    i);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	43	None	replace
225	[BUG]  [BUGGY]  result.append(buffer[i],  0,  buffer[i].toString());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append(buffer[i],  0,  buffer[i].toString());  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append(buffer[i],  0,  buffer[i].toString());	  result.append(buffer[i],    0,    buffer[i]);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	65	None	replace
226	[BUG]  [BUGGY]  result.append(buffer[i],  0,  buffer[i  +  1]);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append(buffer[i],  0,  buffer[i  +  1]);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append(buffer[i],  0,  buffer[i  +  1]);	  result.append(buffer[i],    0,    buffer[i]);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	65	None	replace
227	[BUG]  [BUGGY]  result.append(buffer[i],  0,  buffer[i]  +  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append(buffer[i],  0,  buffer[i]  +  1);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append(buffer[i],  0,  buffer[i]  +  1);	  result.append(buffer[i],    0,    buffer[i]);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	65	None	replace
228	[BUG]  [BUGGY]  result.append(buffer[i],  0,  buffer[i].toCharArray());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append(buffer[i],  0,  buffer[i].toCharArray());  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append(buffer[i],  0,  buffer[i].toCharArray());	  result.append(buffer[i],    0,    buffer[i]);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	65	None	replace
229	[BUG]  [BUGGY]  result.append(buffer[i],  0,  buffer[i]  +  length);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append(buffer[i],  0,  buffer[i]  +  length);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append(buffer[i],  0,  buffer[i]  +  length);	  result.append(buffer[i],    0,    buffer[i]);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	65	None	replace
230	[BUG]  [BUGGY]  result.append(buffer[i],  0,  buffer[i],  length);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append(buffer[i],  0,  buffer[i],  length);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append(buffer[i],  0,  buffer[i],  length);	  result.append(buffer[i],    0,    buffer[i]);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	65	None	replace
231	[BUG]  [BUGGY]  if(buffer[i]!=  'n'  ||  buffer[i]  ==  'r')  {  continue;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]!=  'n'  ||  buffer[i]  ==  'r')  {  continue;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]!=  'n'  ||  buffer[i]  ==  'r')  {  continue;  }	  if(buffer[i]    ==    'n'    ||    buffer[i]    ==    'r')    {    continue;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	66	None	replace
232	[BUG]  [BUGGY]  if(buffer[i]  ==  'N'  ||  buffer[i]  ==  'r')  {  continue;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  'N'  ||  buffer[i]  ==  'r')  {  continue;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  'N'  ||  buffer[i]  ==  'r')  {  continue;  }	  if(buffer[i]    ==    'n'    ||    buffer[i]    ==    'r')    {    continue;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	66	None	replace
233	[BUG]  [BUGGY]  if(buffer[i]  ==  'n'  ||  buffer[i]!=  'r')  {  continue;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  'n'  ||  buffer[i]!=  'r')  {  continue;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  'n'  ||  buffer[i]!=  'r')  {  continue;  }	  if(buffer[i]    ==    'n'    ||    buffer[i]    ==    'r')    {    continue;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	66	None	replace
234	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Can  not  parse  name: "  +  buffer[i]);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "Can  not  parse  name: "  +  buffer[i]);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	throw  new  IllegalArgumentException( "Can  not  parse  name: "  +  buffer[i]);	  throw    new    IllegalArgumentException(   "   ".getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	44	None	replace
235	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ".getMessage());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ".getMessage());  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	Throwables.throw  new  IllegalArgumentException( " ".getMessage());	  throw    new    IllegalArgumentException(   "   ".getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	44	None	replace
236	[BUG]  [BUGGY]  result.append((  String)buffer[i].getBytes());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  String)buffer[i].getBytes());  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  String)buffer[i].getBytes());	  result.append((    char)buffer[i].getBytes());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	80	None	replace
237	[BUG]  [BUGGY]  result.append((  byte)buffer[i].getBytes());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  byte)buffer[i].getBytes());  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  byte)buffer[i].getBytes());	  result.append((    char)buffer[i].getBytes());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	80	None	replace
238	[BUG]  [BUGGY]  result.append((  char)buffer[i].getBytes(length  +  1));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)buffer[i].getBytes(length  +  1));  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)buffer[i].getBytes(length  +  1));	  result.append((    char)buffer[i].getBytes());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	80	None	replace
239	[BUG]  [BUGGY]  result.append((  char)buffer[i].getBytes(length  +  1]);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)buffer[i].getBytes(length  +  1]);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)buffer[i].getBytes(length  +  1]);	  result.append((    char)buffer[i].getBytes());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	80	None	replace
240	[BUG]  [BUGGY]  result.append((  char)buffer[i].getBytes()  +  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)buffer[i].getBytes()  +  1);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)buffer[i].getBytes()  +  1);	  result.append((    char)buffer[i].getBytes());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	80	None	replace
241	[BUG]  [BUGGY]  result.append(buffer[i].toString()  + ",  null ");  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append(buffer[i].toString()  + ",  null ");  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append(buffer[i].toString()  + ",  null ");	  result.append(buffer[i].toString()    +   ",   ");    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	25	None	replace
242	[BUG]  [BUGGY]  result.append(buffer[i].toString()  + ",  ' ");  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append(buffer[i].toString()  + ",  ' ");  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append(buffer[i].toString()  + ",  ' ");	  result.append(buffer[i].toString()    +   ",   ");    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	25	None	replace
243	[BUG]  [BUGGY]  throw  new  IllegalStateException( " ".equals(buffer,  end));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  throw  new  IllegalStateException( " ".equals(buffer,  end));  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	throw  new  IllegalStateException( " ".equals(buffer,  end));	  throw    new    IllegalStateException(   "   ".equals(buffer,    i));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	48	None	replace
244	[BUG]  [BUGGY]  throw  new  IllegalStateException( " "  + "equals(buffer,  i));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  throw  new  IllegalStateException( " "  + "equals(buffer,  i));  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	throw  new  IllegalStateException( " "  + "equals(buffer,  i));	  throw    new    IllegalStateException(   "   ".equals(buffer,    i));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	48	None	replace
245	[BUG]  [BUGGY]  throw  new  IllegalStateException( " ").append(buffer,  i);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  throw  new  IllegalStateException( " ").append(buffer,  i);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	throw  new  IllegalStateException( " ").append(buffer,  i);	  throw    new    IllegalStateException(   "   ".equals(buffer,    i));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	48	None	replace
246	[BUG]  [BUGGY]  result.append((  String)buffer[i]).toString();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  String)buffer[i]).toString();  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  String)buffer[i]).toString();	  result.append((    String)buffer[i]);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	32	None	replace
247	[BUG]  [BUGGY]  result.append((  String)buffer[i]).toCharArray();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  String)buffer[i]).toCharArray();  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  String)buffer[i]).toCharArray();	  result.append((    String)buffer[i]);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	32	None	replace
248	[BUG]  [BUGGY]  result.append((  String)buffer[i],  length);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  String)buffer[i],  length);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  String)buffer[i],  length);	  result.append((    String)buffer[i]);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	32	None	replace
249	[BUG]  [BUGGY]  result.append(buffer[i].getLength()  +  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append(buffer[i].getLength()  +  1);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append(buffer[i].getLength()  +  1);	  result.append(buffer[i].getLength());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	29	None	replace
250	[BUG]  [BUGGY]  result.append(buffer[i].getCharacterEncoding());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append(buffer[i].getCharacterEncoding());  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append(buffer[i].getCharacterEncoding());	  result.append(buffer[i].getLength());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	29	None	replace
251	[BUG]  [BUGGY]  result.append(buffer[i].getCharacter());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append(buffer[i].getCharacter());  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append(buffer[i].getCharacter());	  result.append(buffer[i].getLength());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	29	None	replace
252	[BUG]  [BUGGY]  result.append(buffer[i].getString());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                      ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append(buffer[i].getString());  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append(buffer[i].getString());	  result.append(buffer[i].getLength());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	29	None	replace
253	[BUG]  [BUGGY]  result.append(buffer[i].getShortName());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                        ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append(buffer[i].getShortName());  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append(buffer[i].getShortName());	  result.append(buffer[i].getLength());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	29	None	replace
254	[BUG]  [BUGGY]  throw  new  IllegalStateException( "ByTE_MASK  should  not  be  null. ");  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  throw  new  IllegalStateException( "ByTE_MASK  should  not  be  null. ");  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	throw  new  IllegalStateException( "ByTE_MASK  should  not  be  null. ");	  throw    new    IllegalStateException(   "BYTE_MASK    should    not    be    null.   ");    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	105	None	replace
255	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( "BYTE_MASK  should  not  be  null. ");  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  Throwables.throw  new  IllegalStateException( "BYTE_MASK  should  not  be  null. ");  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	Throwables.throw  new  IllegalStateException( "BYTE_MASK  should  not  be  null. ");	  throw    new    IllegalStateException(   "BYTE_MASK    should    not    be    null.   ");    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	105	None	replace
256	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Byte_MASK  should  not  be  null. ");  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  throw  new  IllegalStateException( "Byte_MASK  should  not  be  null. ");  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	throw  new  IllegalStateException( "Byte_MASK  should  not  be  null. ");	  throw    new    IllegalStateException(   "BYTE_MASK    should    not    be    null.   ");    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	105	None	replace
257	[BUG]  [BUGGY]  result.append( "BYTE_MASK  should  not  be  null. ");  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append( "BYTE_MASK  should  not  be  null. ");  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append( "BYTE_MASK  should  not  be  null. ");	  throw    new    IllegalStateException(   "BYTE_MASK    should    not    be    null.   ");    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	105	None	replace
258	[BUG]  [BUGGY]  if(buffer[i]!=  'n'  ||  buffer[i]  ==  't')  {  continue;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]!=  'n'  ||  buffer[i]  ==  't')  {  continue;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]!=  'n'  ||  buffer[i]  ==  't')  {  continue;  }	  if(buffer[i]    ==    'n'    ||    buffer[i]    ==    't')    {    continue;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	69	None	replace
259	[BUG]  [BUGGY]  if(buffer[i]  ==  'N'  ||  buffer[i]  ==  't')  {  continue;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  'N'  ||  buffer[i]  ==  't')  {  continue;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  'N'  ||  buffer[i]  ==  't')  {  continue;  }	  if(buffer[i]    ==    'n'    ||    buffer[i]    ==    't')    {    continue;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	69	None	replace
260	[BUG]  [BUGGY]  if(buffer[i]  ==  'n'  ||  buffer[i]!=  't')  {  continue;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  'n'  ||  buffer[i]!=  't')  {  continue;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  'n'  ||  buffer[i]!=  't')  {  continue;  }	  if(buffer[i]    ==    'n'    ||    buffer[i]    ==    't')    {    continue;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	69	None	replace
261	[BUG]  [BUGGY]  if(buffer[i]  ==  '0'  ||  buffer[i]  ==  '9')  {  continue;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  '0'  ||  buffer[i]  ==  '9')  {  continue;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  '0'  ||  buffer[i]  ==  '9')  {  continue;  }	  if(buffer[i]    ==    'n'    ||    buffer[i]    ==    't')    {    continue;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	69	None	replace
262	[BUG]  [BUGGY]  if(buffer[i]!=  '0'  ||  buffer[i]  <  =  '9')  {  break;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]!=  '0'  ||  buffer[i]  <  =  '9')  {  break;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]!=  '0'  ||  buffer[i]  <  =  '9')  {  break;  }	  if(buffer[i]!=    '0'    &&    buffer[i]    <    =    '9')    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
263	[BUG]  [BUGGY]  because(buffer[i]!=  '0'  &&  buffer[i]  <  =  '9')  {  break;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  because(buffer[i]!=  '0'  &&  buffer[i]  <  =  '9')  {  break;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	because(buffer[i]!=  '0'  &&  buffer[i]  <  =  '9')  {  break;  }	  if(buffer[i]!=    '0'    &&    buffer[i]    <    =    '9')    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
264	[BUG]  [BUGGY]  result.append('$').append(buffer[i]);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append('$').append(buffer[i]);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append('$').append(buffer[i]);	  result.append('$');    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	63	None	replace
265	[BUG]  [BUGGY]  result.append('$').append(buffer[i].toString());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append('$').append(buffer[i].toString());  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append('$').append(buffer[i].toString());	  result.append('$');    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	63	None	replace
266	[BUG]  [BUGGY]  result.append('$').append(buffer,  i);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append('$').append(buffer,  i);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append('$').append(buffer,  i);	  result.append('$');    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	63	None	replace
267	[BUG]  [BUGGY]  result.append('$'  +  i);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append('$'  +  i);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append('$'  +  i);	  result.append('$');    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	63	None	replace
268	[BUG]  [BUGGY]  result.append('$',  buffer[i]);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append('$',  buffer[i]);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append('$',  buffer[i]);	  result.append('$');    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	63	None	replace
269	[BUG]  [BUGGY]  result.append('$',  end);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append('$',  end);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append('$',  end);	  result.append('$');    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	63	None	replace
270	[BUG]  [BUGGY]  if(buffer[i]  ==  '0'  &&  buffer[i]  ==  '0')  {  break;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  '0'  &&  buffer[i]  ==  '0')  {  break;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  '0'  &&  buffer[i]  ==  '0')  {  break;  }	  if(buffer[i]    ==    '0'    ||    buffer[i]    ==    '0')    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
271	[BUG]  [BUGGY]  if(buffer[i]  ==  '0'  &&  buffer[i]!=  '0')  {  break;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  '0'  &&  buffer[i]!=  '0')  {  break;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  '0'  &&  buffer[i]!=  '0')  {  break;  }	  if(buffer[i]    ==    '0'    ||    buffer[i]    ==    '0')    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
272	[BUG]  [BUGGY]  if(buffer[i]!=  '0'  &&  buffer[i]  ==  '0')  {  break;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]!=  '0'  &&  buffer[i]  ==  '0')  {  break;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]!=  '0'  &&  buffer[i]  ==  '0')  {  break;  }	  if(buffer[i]    ==    '0'    ||    buffer[i]    ==    '0')    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
273	[BUG]  [BUGGY]  if(buffer[i]!=  '0'  ||  buffer[i]  ==  '0')  {  break;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]!=  '0'  ||  buffer[i]  ==  '0')  {  break;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]!=  '0'  ||  buffer[i]  ==  '0')  {  break;  }	  if(buffer[i]    ==    '0'    ||    buffer[i]    ==    '0')    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
274	[BUG]  [BUGGY]  if(buffer[i].toString().endsWith( ".java "))  {  result.append(buffer[i].toString());  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i].toString().endsWith( ".java "))  {  result.append(buffer[i].toString());  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i].toString().endsWith( ".java "))  {  result.append(buffer[i].toString());  }	  result.append(buffer[i].toString()    +    1);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	97	None	replace
275	[BUG]  [BUGGY]  if(buffer[i].toString().endsWith( ". "))  {  result.append(buffer[i].toString());  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i].toString().endsWith( ". "))  {  result.append(buffer[i].toString());  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i].toString().endsWith( ". "))  {  result.append(buffer[i].toString());  }	  result.append(buffer[i].toString()    +    1);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	97	None	replace
276	[BUG]  [BUGGY]  if(buffer[i].toString().endsWith( ".java "))  {  result.append(buffer[i].toString()  +  1);  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i].toString().endsWith( ".java "))  {  result.append(buffer[i].toString()  +  1);  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i].toString().endsWith( ".java "))  {  result.append(buffer[i].toString()  +  1);  }	  result.append(buffer[i].toString()    +    1);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	97	None	replace
277	[BUG]  [BUGGY]  if(buffer[i].toString().endsWith( ".char "))  {  result.append(buffer[i].toString());  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i].toString().endsWith( ".char "))  {  result.append(buffer[i].toString());  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i].toString().endsWith( ".char "))  {  result.append(buffer[i].toString());  }	  result.append(buffer[i].toString()    +    1);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	97	None	replace
278	[BUG]  [BUGGY]  if(buffer[i].toString().endsWith( ".char "))  {  result.append(buffer[i].toString()  +  1);  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i].toString().endsWith( ".char "))  {  result.append(buffer[i].toString()  +  1);  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i].toString().endsWith( ".char "))  {  result.append(buffer[i].toString()  +  1);  }	  result.append(buffer[i].toString()    +    1);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	97	None	replace
279	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " "  +  String.valueOf(buffer[i]));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( " "  +  String.valueOf(buffer[i]));  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	throw  new  IllegalArgumentException( " "  +  String.valueOf(buffer[i]));	  throw    new    IllegalArgumentException(   "   ".equals(buffer[i]));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	40	None	replace
280	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ").append(buffer[i]);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( " ").append(buffer[i]);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	throw  new  IllegalArgumentException( " ").append(buffer[i]);	  throw    new    IllegalArgumentException(   "   ".equals(buffer[i]));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	40	None	replace
281	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ").printStackTrace(result.toString());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( " ").printStackTrace(result.toString());  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	throw  new  IllegalArgumentException( " ").printStackTrace(result.toString());	  throw    new    IllegalArgumentException(   "   ".equals(buffer[i]));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	40	None	replace
282	[BUG]  [BUGGY]  if(buffer[i]!=  '.'  ||  buffer[i]  ==  '-')  {  break;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]!=  '.'  ||  buffer[i]  ==  '-')  {  break;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]!=  '.'  ||  buffer[i]  ==  '-')  {  break;  }	  if(buffer[i]    ==    '.'    ||    buffer[i]    ==    '-')    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	55	None	replace
283	[BUG]  [BUGGY]  if(buffer[i]  ==  '.'  ||  buffer[i]  ==  '-')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  '.'  ||  buffer[i]  ==  '-')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  '.'  ||  buffer[i]  ==  '-')  {  throw  new  IllegalArgumentException( " ");  }	  if(buffer[i]    ==    '.'    ||    buffer[i]    ==    '-')    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	55	None	replace
284	[BUG]  [BUGGY]  if(buffer[i]  ==  '.'  ||  buffer[i]!=  '-')  {  break;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  '.'  ||  buffer[i]!=  '-')  {  break;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  '.'  ||  buffer[i]!=  '-')  {  break;  }	  if(buffer[i]    ==    '.'    ||    buffer[i]    ==    '-')    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	55	None	replace
285	[BUG]  [BUGGY]  if(buffer[i]  ==  '.'  ||  buffer[i]  ==  '-')  {  continue;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  '.'  ||  buffer[i]  ==  '-')  {  continue;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  '.'  ||  buffer[i]  ==  '-')  {  continue;  }	  if(buffer[i]    ==    '.'    ||    buffer[i]    ==    '-')    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	55	None	replace
286	[BUG]  [BUGGY]  if(buffer[i]  ==  ','  ||  buffer[i]  ==  '-')  {  break;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  ','  ||  buffer[i]  ==  '-')  {  break;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  ','  ||  buffer[i]  ==  '-')  {  break;  }	  if(buffer[i]    ==    '.'    ||    buffer[i]    ==    '-')    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	55	None	replace
287	[BUG]  [BUGGY]  ||  buffer[i]  ==  'r')  {  continue;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  ||  buffer[i]  ==  'r')  {  continue;  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	||  buffer[i]  ==  'r')  {  continue;	  if(buffer[i]    ==    'n'    ||    buffer[i]    ==    'r')    {    continue;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	67	None	replace
288	[BUG]  [BUGGY]  if(buffer[i]  ==  'n'  ||  buffer[i]!=  'r')  {  continue;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  'n'  ||  buffer[i]!=  'r')  {  continue;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  'n'  ||  buffer[i]!=  'r')  {  continue;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(buffer[i]    ==    'n'    ||    buffer[i]    ==    'r')    {    continue;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	67	None	replace
289	[BUG]  [BUGGY]  if(buffer[i]  ==  '.'  ||  buffer[i]  ==  ',')  {  continue;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  '.'  ||  buffer[i]  ==  ',')  {  continue;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  '.'  ||  buffer[i]  ==  ',')  {  continue;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(buffer[i]    ==    'n'    ||    buffer[i]    ==    'r')    {    continue;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	67	None	replace
290	[BUG]  [BUGGY]  result.append('N').append(buffer[i]);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append('N').append(buffer[i]);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append('N').append(buffer[i]);	  result.append('N');    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	9	None	replace
291	[BUG]  [BUGGY]  result.append('N').append(buffer[i].toString());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append('N').append(buffer[i].toString());  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append('N').append(buffer[i].toString());	  result.append('N');    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	9	None	replace
292	[BUG]  [BUGGY]  result.append('N').append(buffer[i].toLowerCase());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append('N').append(buffer[i].toLowerCase());  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append('N').append(buffer[i].toLowerCase());	  result.append('N');    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	9	None	replace
293	[BUG]  [BUGGY]  result.append('N').append(buffer,  i);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append('N').append(buffer,  i);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append('N').append(buffer,  i);	  result.append('N');    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	9	None	replace
294	[BUG]  [BUGGY]  result.append('N'  +  i);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append('N'  +  i);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append('N'  +  i);	  result.append('N');    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	9	None	replace
295	[BUG]  [BUGGY]  result.append((  char)buffer[i]  +  offset,  length);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)buffer[i]  +  offset,  length);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)buffer[i]  +  offset,  length);	  result.append((    char)buffer[i]    +    length);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	35	None	replace
296	[BUG]  [BUGGY]  result.append((  char)buffer[i]  +  length,  buffer[i]);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)buffer[i]  +  length,  buffer[i]);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)buffer[i]  +  length,  buffer[i]);	  result.append((    char)buffer[i]    +    length);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	35	None	replace
297	[BUG]  [BUGGY]  result.append((  char)buffer[i]  +  length,  end);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)buffer[i]  +  length,  end);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)buffer[i]  +  length,  end);	  result.append((    char)buffer[i]    +    length);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	35	None	replace
298	[BUG]  [BUGGY]  result.append((  char)buffer[i]  +  end);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)buffer[i]  +  end);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)buffer[i]  +  end);	  result.append((    char)buffer[i]    +    length);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	35	None	replace
299	[BUG]  [BUGGY]  result.append((  char)(buffer[i]  *  BYTE_MASK));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)(buffer[i]  *  BYTE_MASK));  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)(buffer[i]  *  BYTE_MASK));	  result.append((    char)(buffer[i]    }    );    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	107	None	replace
300	[BUG]  [BUGGY]  result.append((  char)(buffer[i]).toString());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)(buffer[i]).toString());  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)(buffer[i]).toString());	  result.append((    char)(buffer[i]    }    );    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	107	None	replace
301	[BUG]  [BUGGY]  result.append((  String)(buffer[i]  }  );  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  String)(buffer[i]  }  );  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  String)(buffer[i]  }  );	  result.append((    char)(buffer[i]    }    );    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	107	None	replace
302	[BUG]  [BUGGY]  result.append((  char)buffer[i].charAt(i)+  2);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)buffer[i].charAt(i)+  2);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)buffer[i].charAt(i)+  2);	  result.append((    char)buffer[i].charAt(i)    +    1);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	54	None	replace
303	[BUG]  [BUGGY]  result.append((  char)buffer[i].charAt(i)+  1));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)buffer[i].charAt(i)+  1));  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)buffer[i].charAt(i)+  1));	  result.append((    char)buffer[i].charAt(i)    +    1);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	54	None	replace
304	[BUG]  [BUGGY]  result.append((  String)buffer[i].charAt(i)+  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  String)buffer[i].charAt(i)+  1);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  String)buffer[i].charAt(i)+  1);	  result.append((    char)buffer[i].charAt(i)    +    1);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	54	None	replace
305	[BUG]  [BUGGY]  result.append((  char)buffer[i].charAt(i)/  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)buffer[i].charAt(i)/  1);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)buffer[i].charAt(i)/  1);	  result.append((    char)buffer[i].charAt(i)    +    1);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	54	None	replace
306	[BUG]  [BUGGY]  result.append((  char)buffer[i].charAt(i)+  1)+  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)buffer[i].charAt(i)+  1)+  1);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)buffer[i].charAt(i)+  1)+  1);	  result.append((    char)buffer[i].charAt(i)    +    1);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	54	None	replace
307	[BUG]  [BUGGY]  result.append((  String)buffer[i  +  1]);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  String)buffer[i  +  1]);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  String)buffer[i  +  1]);	  result.append((    char)buffer[i    +    1]);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	89	None	replace
308	[BUG]  [BUGGY]  result.append((  char)buffer[i  +  2]);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)buffer[i  +  2]);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)buffer[i  +  2]);	  result.append((    char)buffer[i    +    1]);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	89	None	replace
309	[BUG]  [BUGGY]  result.append((  byte)buffer[i  +  1]);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  byte)buffer[i  +  1]);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  byte)buffer[i  +  1]);	  result.append((    char)buffer[i    +    1]);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	89	None	replace
310	[BUG]  [BUGGY]  result.append((  char)buffer[i  +  1]).toString();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)buffer[i  +  1]).toString();  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)buffer[i  +  1]).toString();	  result.append((    char)buffer[i    +    1]);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	89	None	replace
311	[BUG]  [BUGGY]  result.append((  char)buffer[i  +  1],  length);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)buffer[i  +  1],  length);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)buffer[i  +  1],  length);	  result.append((    char)buffer[i    +    1]);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	89	None	replace
312	[BUG]  [BUGGY]  result.append((  char)buffer[i  +  3]);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)buffer[i  +  3]);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)buffer[i  +  3]);	  result.append((    char)buffer[i    +    1]);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	89	None	replace
313	[BUG]  [BUGGY]  result.append(buffer[i]  +  offset,  end);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append(buffer[i]  +  offset,  end);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append(buffer[i]  +  offset,  end);	  result.append(buffer[i]    +    offset);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	17	None	replace
314	[BUG]  [BUGGY]  result.append(buffer[i]  +  offset,  length);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append(buffer[i]  +  offset,  length);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append(buffer[i]  +  offset,  length);	  result.append(buffer[i]    +    offset);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	17	None	replace
315	[BUG]  [BUGGY]  result.append(buffer[i]  +  length);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append(buffer[i]  +  length);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append(buffer[i]  +  length);	  result.append(buffer[i]    +    offset);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	17	None	replace
316	[BUG]  [BUGGY]  result.append(buffer[i]  +  end);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append(buffer[i]  +  end);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append(buffer[i]  +  end);	  result.append(buffer[i]    +    offset);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	17	None	replace
317	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "ByTE_MASK  should  not  be  null. ");  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "ByTE_MASK  should  not  be  null. ");  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	throw  new  IllegalArgumentException( "ByTE_MASK  should  not  be  null. ");	  throw    new    IllegalArgumentException(   "BYTE_MASK    should    not    be    null.   ");    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	94	None	replace
318	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "BYTE_MASK  should  not  be  null. ");  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "BYTE_MASK  should  not  be  null. ");  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	Throwables.throw  new  IllegalArgumentException( "BYTE_MASK  should  not  be  null. ");	  throw    new    IllegalArgumentException(   "BYTE_MASK    should    not    be    null.   ");    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	94	None	replace
319	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Byte_MASK  should  not  be  null. ");  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "Byte_MASK  should  not  be  null. ");  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	throw  new  IllegalArgumentException( "Byte_MASK  should  not  be  null. ");	  throw    new    IllegalArgumentException(   "BYTE_MASK    should    not    be    null.   ");    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	94	None	replace
320	[BUG]  [BUGGY]  result.append(buffer[i],  offset,  end);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append(buffer[i],  offset,  end);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append(buffer[i],  offset,  end);	  result.append(buffer[i],    end);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	14	None	replace
321	[BUG]  [BUGGY]  result.append(buffer[i],  0,  end);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append(buffer[i],  0,  end);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append(buffer[i],  0,  end);	  result.append(buffer[i],    end);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	14	None	replace
322	[BUG]  [BUGGY]  result.append(buffer[i],  end,  length);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append(buffer[i],  end,  length);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append(buffer[i],  end,  length);	  result.append(buffer[i],    end);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	14	None	replace
323	[BUG]  [BUGGY]  result.append(buffer[i],  offset  +  length);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append(buffer[i],  offset  +  length);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append(buffer[i],  offset  +  length);	  result.append(buffer[i],    end);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	14	None	replace
324	[BUG]  [BUGGY]  result.append(buffer[i],  buffer[i]);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append(buffer[i],  buffer[i]);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append(buffer[i],  buffer[i]);	  result.append(buffer[i],    end);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	14	None	replace
325	[BUG]  [BUGGY]  result.append((  char)buffer[i]  +  offset,  end);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)buffer[i]  +  offset,  end);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)buffer[i]  +  offset,  end);	  result.append((    char)buffer[i]    +    offset);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	70	None	replace
326	[BUG]  [BUGGY]  result.append((  char)buffer[i]  *  offset);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)buffer[i]  *  offset);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)buffer[i]  *  offset);	  result.append((    char)buffer[i]    +    offset);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	70	None	replace
327	[BUG]  [BUGGY]  result.append((  String)buffer[i]  +  offset);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  String)buffer[i]  +  offset);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  String)buffer[i]  +  offset);	  result.append((    char)buffer[i]    +    offset);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	70	None	replace
328	[BUG]  [BUGGY]  result.append((  byte)buffer[i]  +  offset);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  byte)buffer[i]  +  offset);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  byte)buffer[i]  +  offset);	  result.append((    char)buffer[i]    +    offset);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	70	None	replace
329	[BUG]  [BUGGY]  result.append((  char)(buffer[i]  /  BYTE_MASK);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)(buffer[i]  /  BYTE_MASK);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)(buffer[i]  /  BYTE_MASK);	  result.append((    char)(buffer[i]    *    BYTE_MASK);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	24	None	replace
330	[BUG]  [BUGGY]  result.append((  char)(buffer[i]  &  BYTE_MASK);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)(buffer[i]  &  BYTE_MASK);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)(buffer[i]  &  BYTE_MASK);	  result.append((    char)(buffer[i]    *    BYTE_MASK);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	24	None	replace
331	[BUG]  [BUGGY]  result.append((  char)(buffer[i]  *  BYTE_MASK)+  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)(buffer[i]  *  BYTE_MASK)+  1);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)(buffer[i]  *  BYTE_MASK)+  1);	  result.append((    char)(buffer[i]    *    BYTE_MASK);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	24	None	replace
332	[BUG]  [BUGGY]  result.append((  char)(buffer[i]  *  BYTE_MASK  +  length);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)(buffer[i]  *  BYTE_MASK  +  length);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)(buffer[i]  *  BYTE_MASK  +  length);	  result.append((    char)(buffer[i]    *    BYTE_MASK);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	24	None	replace
333	[BUG]  [BUGGY]  result.append((  char)(buffer[i]  +  BYTE_MASK);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)(buffer[i]  +  BYTE_MASK);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)(buffer[i]  +  BYTE_MASK);	  result.append((    char)(buffer[i]    *    BYTE_MASK);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	24	None	replace
334	[BUG]  [BUGGY]  result.append((  String)(buffer[i]  *  BYTE_MASK);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  String)(buffer[i]  *  BYTE_MASK);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  String)(buffer[i]  *  BYTE_MASK);	  result.append((    char)(buffer[i]    *    BYTE_MASK);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	24	None	replace
335	[BUG]  [BUGGY]  if(buffer[i]  ==  '-'  ||  buffer[i]  ==  '+')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  '-'  ||  buffer[i]  ==  '+')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  '-'  ||  buffer[i]  ==  '+')  {  throw  new  IllegalArgumentException( " ");  }	  if(buffer[i]    ==    '-'    ||    buffer[i]    ==    '+')    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	75	None	replace
336	[BUG]  [BUGGY]  if(buffer[i]  ==  '-'  ||  buffer[i]  ==  '+')  {  continue;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  '-'  ||  buffer[i]  ==  '+')  {  continue;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  '-'  ||  buffer[i]  ==  '+')  {  continue;  }	  if(buffer[i]    ==    '-'    ||    buffer[i]    ==    '+')    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	75	None	replace
337	[BUG]  [BUGGY]  if(buffer[i]!=  '-'  ||  buffer[i]  ==  '+')  {  break;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]!=  '-'  ||  buffer[i]  ==  '+')  {  break;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]!=  '-'  ||  buffer[i]  ==  '+')  {  break;  }	  if(buffer[i]    ==    '-'    ||    buffer[i]    ==    '+')    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	75	None	replace
338	[BUG]  [BUGGY]  if(buffer[i]  ==  '-'  ||  buffer[i]!=  '+')  {  break;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  '-'  ||  buffer[i]!=  '+')  {  break;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  '-'  ||  buffer[i]!=  '+')  {  break;  }	  if(buffer[i]    ==    '-'    ||    buffer[i]    ==    '+')    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	75	None	replace
339	[BUG]  [BUGGY]  because(buffer[i]!=  null)  {  break;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  because(buffer[i]!=  null)  {  break;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	because(buffer[i]!=  null)  {  break;  }	  if(buffer[i]!=    null)    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	37	None	replace
340	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  result,  0,  length  -  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  System.arraycopy(buffer,  offset,  result,  0,  length  -  1);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	System.arraycopy(buffer,  offset,  result,  0,  length  -  1);	  System.arraycopy(buffer,    offset,    result,    0,    length);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	101	None	replace
341	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  length);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  length);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	System.arraycopy(buffer,  offset,  buffer,  0,  length);	  System.arraycopy(buffer,    offset,    result,    0,    length);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	101	None	replace
342	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  result,  0,  length  +  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  System.arraycopy(buffer,  offset,  result,  0,  length  +  1);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	System.arraycopy(buffer,  offset,  result,  0,  length  +  1);	  System.arraycopy(buffer,    offset,    result,    0,    length);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	101	None	replace
343	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  result,  0,  end);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  System.arraycopy(buffer,  offset,  result,  0,  end);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	System.arraycopy(buffer,  offset,  result,  0,  end);	  System.arraycopy(buffer,    offset,    result,    0,    length);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	101	None	replace
344	[BUG]  [BUGGY]  System.arraycopy(buffer,  i,  result,  0,  length);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  System.arraycopy(buffer,  i,  result,  0,  length);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	System.arraycopy(buffer,  i,  result,  0,  length);	  System.arraycopy(buffer,    offset,    result,    0,    length);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	101	None	replace
345	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  result,  0,  buffer.length);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                      ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  System.arraycopy(buffer,  offset,  result,  0,  buffer.length);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	System.arraycopy(buffer,  offset,  result,  0,  buffer.length);	  System.arraycopy(buffer,    offset,    result,    0,    length);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	101	None	replace
346	[BUG]  [BUGGY]  if(buffer[i]  ==  '.'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  end)  {  break;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  '.'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  end)  {  break;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  '.'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  end)  {  break;  }	  if(buffer[i]    ==    '.'    ||    buffer[i]    ==    'a'    &&    buffer[i]!=    end)    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	58	None	replace
347	[BUG]  [BUGGY]  if(buffer[i]  ==  '.'  ||  buffer[i]  ==  'a'  &&  buffer[i]  <  =  end)  {  break;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  '.'  ||  buffer[i]  ==  'a'  &&  buffer[i]  <  =  end)  {  break;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  '.'  ||  buffer[i]  ==  'a'  &&  buffer[i]  <  =  end)  {  break;  }	  if(buffer[i]    ==    '.'    ||    buffer[i]    ==    'a'    &&    buffer[i]!=    end)    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	58	None	replace
348	[BUG]  [BUGGY]  if(buffer[i]  ==  '.'  ||  buffer[i]  ==  'a'  &&  buffer[i]  >=  end)  {  break;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  '.'  ||  buffer[i]  ==  'a'  &&  buffer[i]  >=  end)  {  break;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  '.'  ||  buffer[i]  ==  'a'  &&  buffer[i]  >=  end)  {  break;  }	  if(buffer[i]    ==    '.'    ||    buffer[i]    ==    'a'    &&    buffer[i]!=    end)    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	58	None	replace
349	[BUG]  [BUGGY]  if(buffer[i]!=  '.'  ||  buffer[i]  ==  'a'  &&  buffer[i]!=  end)  {  break;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]!=  '.'  ||  buffer[i]  ==  'a'  &&  buffer[i]!=  end)  {  break;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]!=  '.'  ||  buffer[i]  ==  'a'  &&  buffer[i]!=  end)  {  break;  }	  if(buffer[i]    ==    '.'    ||    buffer[i]    ==    'a'    &&    buffer[i]!=    end)    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	58	None	replace
350	[BUG]  [BUGGY]  if(buffer[i]  ==  '.'  ||  buffer[i]  ==  'A'  &&  buffer[i]!=  end)  {  break;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  '.'  ||  buffer[i]  ==  'A'  &&  buffer[i]!=  end)  {  break;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  '.'  ||  buffer[i]  ==  'A'  &&  buffer[i]!=  end)  {  break;  }	  if(buffer[i]    ==    '.'    ||    buffer[i]    ==    'a'    &&    buffer[i]!=    end)    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	58	None	replace
351	[BUG]  [BUGGY]  result.append(buffer[i].getName()  +  offset);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append(buffer[i].getName()  +  offset);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append(buffer[i].getName()  +  offset);	  result.append(buffer[i].getName());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	26	None	replace
352	[BUG]  [BUGGY]  result.append(buffer[i].getName()  +  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append(buffer[i].getName()  +  1);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append(buffer[i].getName()  +  1);	  result.append(buffer[i].getName());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	26	None	replace
353	[BUG]  [BUGGY]  result.append(buffer[i].getQualifiedName());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append(buffer[i].getQualifiedName());  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append(buffer[i].getQualifiedName());	  result.append(buffer[i].getName());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	26	None	replace
354	[BUG]  [BUGGY]  result.append(buffer[i].getName()).toString();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append(buffer[i].getName()).toString();  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append(buffer[i].getName()).toString();	  result.append(buffer[i].getName());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	26	None	replace
355	[BUG]  [BUGGY]  result.append((  char)(buffer[i],  offset);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)(buffer[i],  offset);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)(buffer[i],  offset);	  result.append((    char)(buffer[i],    end);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	19	None	replace
356	[BUG]  [BUGGY]  result.append((  char)(buffer[i],  offset,  end);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)(buffer[i],  offset,  end);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)(buffer[i],  offset,  end);	  result.append((    char)(buffer[i],    end);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	19	None	replace
357	[BUG]  [BUGGY]  result.append((  char)(buffer[i],  end  +  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)(buffer[i],  end  +  1);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)(buffer[i],  end  +  1);	  result.append((    char)(buffer[i],    end);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	19	None	replace
358	[BUG]  [BUGGY]  if(buffer[i]  ==  buffer[i])  {  break;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  buffer[i])  {  break;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  buffer[i])  {  break;  }	  if(buffer[i]    ==    end)    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	39	None	replace
359	[BUG]  [BUGGY]  result.append((  char)buffer[i]).toLowerCase();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)buffer[i]).toLowerCase();  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)buffer[i]).toLowerCase();	  result.append((    char)buffer[i]).toString();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	33	None	replace
360	[BUG]  [BUGGY]  result.append((  char)buffer[i]).toString()  + ", ";  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)buffer[i]).toString()  + ", ";  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)buffer[i]).toString()  + ", ";	  result.append((    char)buffer[i]).toString();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	33	None	replace
361	[BUG]  [BUGGY]  result.append((  char)buffer[i]).toCharArray();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)buffer[i]).toCharArray();  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)buffer[i]).toCharArray();	  result.append((    char)buffer[i]).toString();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	33	None	replace
362	[BUG]  [BUGGY]  result.append((  char)buffer[i]).toString()  +  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)buffer[i]).toString()  +  1;  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)buffer[i]).toString()  +  1;	  result.append((    char)buffer[i]).toString();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	33	None	replace
363	[BUG]  [BUGGY]  result.append((  char)(buffer[i]).toCharArray(length  +  1));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)(buffer[i]).toCharArray(length  +  1));  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)(buffer[i]).toCharArray(length  +  1));	  result.append((    char)(buffer[i]).toCharArray());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
364	[BUG]  [BUGGY]  result.append((  String)(buffer[i]).toCharArray());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  String)(buffer[i]).toCharArray());  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  String)(buffer[i]).toCharArray());	  result.append((    char)(buffer[i]).toCharArray());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
365	[BUG]  [BUGGY]  result.append((  char)(buffer[i]).toCharArray()  +  length);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)(buffer[i]).toCharArray()  +  length);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)(buffer[i]).toCharArray()  +  length);	  result.append((    char)(buffer[i]).toCharArray());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
366	[BUG]  [BUGGY]  result.append((  char)(buffer[i]).toCharArray(length));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)(buffer[i]).toCharArray(length));  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)(buffer[i]).toCharArray(length));	  result.append((    char)(buffer[i]).toCharArray());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
367	[BUG]  [BUGGY]  result.append((  char)(buffer[i]).toCharArray()  +  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)(buffer[i]).toCharArray()  +  1);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)(buffer[i]).toCharArray()  +  1);	  result.append((    char)(buffer[i]).toCharArray());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
368	[BUG]  [BUGGY]  if(buffer[i]  ==  0  ||  buffer[i]!=  '.')  {  break;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  0  ||  buffer[i]!=  '.')  {  break;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  0  ||  buffer[i]!=  '.')  {  break;  }	  if(buffer[i]    ==    0    ||    buffer[i]    ==    '.')    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	108	None	replace
369	[BUG]  [BUGGY]  if(buffer[i]!=  0  ||  buffer[i]  ==  '.')  {  break;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]!=  0  ||  buffer[i]  ==  '.')  {  break;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]!=  0  ||  buffer[i]  ==  '.')  {  break;  }	  if(buffer[i]    ==    0    ||    buffer[i]    ==    '.')    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	108	None	replace
370	[BUG]  [BUGGY]  if(buffer[i]  ==  -1  ||  buffer[i]  ==  '.')  {  break;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  -1  ||  buffer[i]  ==  '.')  {  break;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  -1  ||  buffer[i]  ==  '.')  {  break;  }	  if(buffer[i]    ==    0    ||    buffer[i]    ==    '.')    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	108	None	replace
371	[BUG]  [BUGGY]  result.append((  char)buffer[i],  offset,  length);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)buffer[i],  offset,  length);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)buffer[i],  offset,  length);	  result.append((    char)buffer[i],    length);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	30	None	replace
372	[BUG]  [BUGGY]  result.append((  char)buffer[i],  length,  buffer[i]);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)buffer[i],  length,  buffer[i]);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)buffer[i],  length,  buffer[i]);	  result.append((    char)buffer[i],    length);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	30	None	replace
373	[BUG]  [BUGGY]  result.append((  char)buffer[i],  length  +  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)buffer[i],  length  +  1);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)buffer[i],  length  +  1);	  result.append((    char)buffer[i],    length);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	30	None	replace
374	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " ".equals(buffer[i]));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  Throwables.throw  new  IllegalStateException( " ".equals(buffer[i]));  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	Throwables.throw  new  IllegalStateException( " ".equals(buffer[i]));	  Throwables.throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	47	None	replace
375	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " ".equals(buffer,  i));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  Throwables.throw  new  IllegalStateException( " ".equals(buffer,  i));  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	Throwables.throw  new  IllegalStateException( " ".equals(buffer,  i));	  Throwables.throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	47	None	replace
376	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " ".getMessage());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  Throwables.throw  new  IllegalStateException( " ".getMessage());  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	Throwables.throw  new  IllegalStateException( " ".getMessage());	  Throwables.throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	47	None	replace
377	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " ".equals(result.toString()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  Throwables.throw  new  IllegalStateException( " ".equals(result.toString()));  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	Throwables.throw  new  IllegalStateException( " ".equals(result.toString()));	  Throwables.throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	47	None	replace
378	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " ".equalsIgnoreCase(buffer[i]));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  Throwables.throw  new  IllegalStateException( " ".equalsIgnoreCase(buffer[i]));  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	Throwables.throw  new  IllegalStateException( " ".equalsIgnoreCase(buffer[i]));	  Throwables.throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	47	None	replace
379	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " ".trim());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  Throwables.throw  new  IllegalStateException( " ".trim());  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	Throwables.throw  new  IllegalStateException( " ".trim());	  Throwables.throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	47	None	replace
380	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ".equals(buffer[i]));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ".equals(buffer[i]));  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	Throwables.throw  new  IllegalArgumentException( " ".equals(buffer[i]));	  Throwables.throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	41	None	replace
381	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ".equals(buffer,  i));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ".equals(buffer,  i));  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	Throwables.throw  new  IllegalArgumentException( " ".equals(buffer,  i));	  Throwables.throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	41	None	replace
382	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ",  i);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ",  i);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	Throwables.throw  new  IllegalArgumentException( " ",  i);	  Throwables.throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	41	None	replace
383	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ".trim());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ".trim());  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	Throwables.throw  new  IllegalArgumentException( " ".trim());	  Throwables.throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	41	None	replace
384	[BUG]  [BUGGY]  ||  buffer[i]  ==  'r')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  ||  buffer[i]  ==  'r')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	||  buffer[i]  ==  'r')  {  throw  new  IllegalArgumentException( " ");  }	  if(buffer[i]    ==    'n'    ||    buffer[i]    ==    'r')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	92	None	replace
385	[BUG]  [BUGGY]  result.append('n'  ||  buffer[i]  ==  'r')&&  result.charAt(result.length()  -  1)!=  '0')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append('n'  ||  buffer[i]  ==  'r')&&  result.charAt(result.length()  -  1)!=  '0')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append('n'  ||  buffer[i]  ==  'r')&&  result.charAt(result.length()  -  1)!=  '0')  {  throw  new  IllegalArgumentException( " ");  }	  if(buffer[i]    ==    'n'    ||    buffer[i]    ==    'r')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	92	None	replace
386	[BUG]  [BUGGY]  result.append('n'  ||  buffer[i]  ==  'r')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append('n'  ||  buffer[i]  ==  'r')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append('n'  ||  buffer[i]  ==  'r')  {  throw  new  IllegalArgumentException( " ");  }	  if(buffer[i]    ==    'n'    ||    buffer[i]    ==    'r')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	92	None	replace
387	[BUG]  [BUGGY]  ||  buffer[i]  ==  '.')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  ||  buffer[i]  ==  '.')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	||  buffer[i]  ==  '.')  {  throw  new  IllegalArgumentException( " ");  }	  if(buffer[i]    ==    'n'    ||    buffer[i]    ==    'r')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	92	None	replace
388	[BUG]  [BUGGY]  result.append('n'  ||  buffer[i]  ==  'r')&&  result.charAt(result.length()  -  1)!=  'n')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append('n'  ||  buffer[i]  ==  'r')&&  result.charAt(result.length()  -  1)!=  'n')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append('n'  ||  buffer[i]  ==  'r')&&  result.charAt(result.length()  -  1)!=  'n')  {  throw  new  IllegalArgumentException( " ");  }	  if(buffer[i]    ==    'n'    ||    buffer[i]    ==    'r')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	92	None	replace
389	[BUG]  [BUGGY]  result.append(buffer[i],  offset,  length);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append(buffer[i],  offset,  length);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append(buffer[i],  offset,  length);	  result.append(buffer[i],    offset);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	64	None	replace
390	[BUG]  [BUGGY]  result.append(buffer[i],  end,  offset);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append(buffer[i],  end,  offset);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append(buffer[i],  end,  offset);	  result.append(buffer[i],    offset);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	64	None	replace
391	[BUG]  [BUGGY]  if(buffer[i]  ==  '.'  ||  buffer[i]  ==  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'f')  {  break;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  '.'  ||  buffer[i]  ==  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'f')  {  break;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  '.'  ||  buffer[i]  ==  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'f')  {  break;  }	  if(buffer[i]    ==    '.'    ||    buffer[i]    ==    'a'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'f')    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	72	None	replace
392	[BUG]  [BUGGY]  if(buffer[i]  ==  '.'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'f')  {  break;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  '.'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'f')  {  break;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  '.'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'f')  {  break;  }	  if(buffer[i]    ==    '.'    ||    buffer[i]    ==    'a'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'f')    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	72	None	replace
393	[BUG]  [BUGGY]  if(buffer[i]  ==  '.'  ||  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'f')  {  break;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  '.'  ||  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'f')  {  break;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  '.'  ||  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'f')  {  break;  }	  if(buffer[i]    ==    '.'    ||    buffer[i]    ==    'a'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'f')    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	72	None	replace
394	[BUG]  [BUGGY]  if(buffer[i]!=  '.'  ||  buffer[i]  ==  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'f')  {  break;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]!=  '.'  ||  buffer[i]  ==  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'f')  {  break;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]!=  '.'  ||  buffer[i]  ==  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'f')  {  break;  }	  if(buffer[i]    ==    '.'    ||    buffer[i]    ==    'a'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'f')    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	72	None	replace
395	[BUG]  [BUGGY]  if(buffer[i]  ==  '.'  ||  buffer[i]  ==  'A'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'f')  {  break;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  '.'  ||  buffer[i]  ==  'A'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'f')  {  break;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  '.'  ||  buffer[i]  ==  'A'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'f')  {  break;  }	  if(buffer[i]    ==    '.'    ||    buffer[i]    ==    'a'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'f')    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	72	None	replace
396	[BUG]  [BUGGY]  if(buffer[i]!=  '.'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'f')  {  break;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]!=  '.'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'f')  {  break;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]!=  '.'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'f')  {  break;  }	  if(buffer[i]    ==    '.'    ||    buffer[i]    ==    'a'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'f')    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	72	None	replace
397	[BUG]  [BUGGY]  result.append(buffer[i],  length,  buffer[i]);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append(buffer[i],  length,  buffer[i]);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append(buffer[i],  length,  buffer[i]);	  result.append(buffer[i],    length);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	15	None	replace
398	[BUG]  [BUGGY]  result.append(buffer[i],  length  +  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append(buffer[i],  length  +  1);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append(buffer[i],  length  +  1);	  result.append(buffer[i],    length);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	15	None	replace
399	[BUG]  [BUGGY]  result.append(buffer[i],  length  -  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append(buffer[i],  length  -  1);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append(buffer[i],  length  -  1);	  result.append(buffer[i],    length);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	15	None	replace
400	[BUG]  [BUGGY]  result.append(',');  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append(',');  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append(',');	  result.append('ufffd');    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	82	None	replace
401	[BUG]  [BUGGY]  result.append('-');  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append('-');  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append('-');	  result.append('ufffd');    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	82	None	replace
402	[BUG]  [BUGGY]  result.append(':');  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append(':');  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append(':');	  result.append('ufffd');    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	82	None	replace
403	[BUG]  [BUGGY]  result.append('F');  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append('F');  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append('F');	  result.append('ufffd');    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	82	None	replace
404	[BUG]  [BUGGY]  result.append('f');  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append('f');  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append('f');	  result.append('ufffd');    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	82	None	replace
405	[BUG]  [BUGGY]  result.append('+');  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append('+');  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append('+');	  result.append('ufffd');    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	82	None	replace
406	[BUG]  [BUGGY]  result.append( ",n ");  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append( ",n ");  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append( ",n ");	  result.append(   ",   ");    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	10	None	replace
407	[BUG]  [BUGGY]  result.append((  char)buffer[i].charAt(i  +  1),  end);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)buffer[i].charAt(i  +  1),  end);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)buffer[i].charAt(i  +  1),  end);	  result.append((    char)buffer[i].charAt(i    +    1));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	50	None	replace
408	[BUG]  [BUGGY]  result.append((  char)buffer[i].charAt(i  +  1)+  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)buffer[i].charAt(i  +  1)+  1);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)buffer[i].charAt(i  +  1)+  1);	  result.append((    char)buffer[i].charAt(i    +    1));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	50	None	replace
409	[BUG]  [BUGGY]  result.append((  String)buffer[i].charAt(i  +  1));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  String)buffer[i].charAt(i  +  1));  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  String)buffer[i].charAt(i  +  1));	  result.append((    char)buffer[i].charAt(i    +    1));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	50	None	replace
410	[BUG]  [BUGGY]  result.append((  char)buffer[i].charAt(i  +  1),  buffer[i]);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)buffer[i].charAt(i  +  1),  buffer[i]);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)buffer[i].charAt(i  +  1),  buffer[i]);	  result.append((    char)buffer[i].charAt(i    +    1));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	50	None	replace
411	[BUG]  [BUGGY]  result.append((  char)buffer[i].charAt(i  +  1),  0,  length);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)buffer[i].charAt(i  +  1),  0,  length);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)buffer[i].charAt(i  +  1),  0,  length);	  result.append((    char)buffer[i].charAt(i    +    1));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	50	None	replace
412	[BUG]  [BUGGY]  if(buffer[i]!=  0  ||  buffer[i]!=  null)  {  break;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]!=  0  ||  buffer[i]!=  null)  {  break;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]!=  0  ||  buffer[i]!=  null)  {  break;  }	  if(buffer[i]    ==    0    ||    buffer[i]!=    null)    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	87	None	replace
413	[BUG]  [BUGGY]  if(buffer[i]!=  0  ||  buffer[i]  ==  null)  {  break;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]!=  0  ||  buffer[i]  ==  null)  {  break;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]!=  0  ||  buffer[i]  ==  null)  {  break;  }	  if(buffer[i]    ==    0    ||    buffer[i]!=    null)    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	87	None	replace
414	[BUG]  [BUGGY]  if(buffer[i]!=  null  ||  buffer[i]!=  null)  {  break;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]!=  null  ||  buffer[i]!=  null)  {  break;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]!=  null  ||  buffer[i]!=  null)  {  break;  }	  if(buffer[i]    ==    0    ||    buffer[i]!=    null)    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	87	None	replace
415	[BUG]  [BUGGY]  if(buffer[i]  ==  0  ||  buffer[i]!=  null)  {  continue;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  0  ||  buffer[i]!=  null)  {  continue;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  0  ||  buffer[i]!=  null)  {  continue;  }	  if(buffer[i]    ==    0    ||    buffer[i]!=    null)    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	87	None	replace
416	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " "  +  String.valueOf(buffer,  i);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( " "  +  String.valueOf(buffer,  i);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	throw  new  IllegalArgumentException( " "  +  String.valueOf(buffer,  i);	  throw    new    IllegalArgumentException(   "   ".equals(buffer,    i);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	96	None	replace
417	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ".equals(buffer,  end);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( " ".equals(buffer,  end);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	throw  new  IllegalArgumentException( " ".equals(buffer,  end);	  throw    new    IllegalArgumentException(   "   ".equals(buffer,    i);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	96	None	replace
418	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ").append(buffer,  i);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( " ").append(buffer,  i);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	throw  new  IllegalArgumentException( " ").append(buffer,  i);	  throw    new    IllegalArgumentException(   "   ".equals(buffer,    i);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	96	None	replace
419	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " "  +  String.valueOf(buffer,  i));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( " "  +  String.valueOf(buffer,  i));  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	throw  new  IllegalArgumentException( " "  +  String.valueOf(buffer,  i));	  throw    new    IllegalArgumentException(   "   ".equals(buffer,    i);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	96	None	replace
420	[BUG]  [BUGGY]  result.append((  String)buffer[i].charAt(i++));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  String)buffer[i].charAt(i++));  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  String)buffer[i].charAt(i++));	  result.append((    String)buffer[i].charAt(i));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	52	None	replace
421	[BUG]  [BUGGY]  result.append((  String)buffer[i].toString());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  String)buffer[i].toString());  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  String)buffer[i].toString());	  result.append((    String)buffer[i].charAt(i));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	52	None	replace
422	[BUG]  [BUGGY]  result.append((  String)(buffer[i]  +  1]);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  String)(buffer[i]  +  1]);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  String)(buffer[i]  +  1]);	  result.append((    char)(buffer[i]    +    1]);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	23	None	replace
423	[BUG]  [BUGGY]  result.append((  char)(buffer[i]  +  1]  +  length);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)(buffer[i]  +  1]  +  length);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)(buffer[i]  +  1]  +  length);	  result.append((    char)(buffer[i]    +    1]);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	23	None	replace
424	[BUG]  [BUGGY]  result.append((  char)(buffer[i]  +  length  +  1]);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)(buffer[i]  +  length  +  1]);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)(buffer[i]  +  length  +  1]);	  result.append((    char)(buffer[i]    +    1]);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	23	None	replace
425	[BUG]  [BUGGY]  result.append((  char)(buffer[i]  *  1]);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)(buffer[i]  *  1]);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)(buffer[i]  *  1]);	  result.append((    char)(buffer[i]    +    1]);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	23	None	replace
426	[BUG]  [BUGGY]  result.append(buffer[i].getBytes(i));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append(buffer[i].getBytes(i));  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append(buffer[i].getBytes(i));	  result.append(buffer[i].getBytes());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	28	None	replace
427	[BUG]  [BUGGY]  result.append(buffer[i].getBytes()  +  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append(buffer[i].getBytes()  +  1);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append(buffer[i].getBytes()  +  1);	  result.append(buffer[i].getBytes());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	28	None	replace
428	[BUG]  [BUGGY]  result.append(buffer[i].getBytes()  +  offset);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append(buffer[i].getBytes()  +  offset);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append(buffer[i].getBytes()  +  offset);	  result.append(buffer[i].getBytes());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	28	None	replace
429	[BUG]  [BUGGY]  result.append(buffer[i].getBytes(),  length);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append(buffer[i].getBytes(),  length);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append(buffer[i].getBytes(),  length);	  result.append(buffer[i].getBytes());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	28	None	replace
430	[BUG]  [BUGGY]  result.append(buffer[i].getBytes(),  end);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                      ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append(buffer[i].getBytes(),  end);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append(buffer[i].getBytes(),  end);	  result.append(buffer[i].getBytes());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	28	None	replace
431	[BUG]  [BUGGY]  if(buffer[i]!=  '0'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]!=  '0'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]!=  '0'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a	  if(buffer[i]    ==    '0'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	74	None	replace
432	[BUG]  [BUGGY]  if(buffer[i]  ==  '0'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  '0'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  '0'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a	  if(buffer[i]    ==    '0'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	74	None	replace
433	[BUG]  [BUGGY]  if(buffer[i]  ==  '0'  &&  buffer[i]!=  'A'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  '0'  &&  buffer[i]!=  'A'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  '0'  &&  buffer[i]!=  'A'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a	  if(buffer[i]    ==    '0'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	74	None	replace
434	[BUG]  [BUGGY]  if(buffer[i]!=  '0'  &&  buffer[i]!=  'A'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]!=  '0'  &&  buffer[i]!=  'A'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]!=  '0'  &&  buffer[i]!=  'A'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a	  if(buffer[i]    ==    '0'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	74	None	replace
435	[BUG]  [BUGGY]  if(buffer[i]!=  '0'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]!=  '0'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]!=  '0'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  	  if(buffer[i]    ==    '0'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	74	None	replace
436	[BUG]  [BUGGY]  if(buffer[i]  ==  '0'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  '0'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  '0'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  	  if(buffer[i]    ==    '0'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	74	None	replace
437	[BUG]  [BUGGY]  if(buffer[i]!=  '0'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]!=  '0'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]!=  '0'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&	  if(buffer[i]    ==    '0'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	74	None	replace
438	[BUG]  [BUGGY]  result.append((  char)buffer[i],  0,  buffer[i]);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)buffer[i],  0,  buffer[i]);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)buffer[i],  0,  buffer[i]);	  result.append((    char)buffer[i],    0,    length);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	71	None	replace
439	[BUG]  [BUGGY]  result.append((  char)buffer[i],  0,  buffer[i].length);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)buffer[i],  0,  buffer[i].length);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)buffer[i],  0,  buffer[i].length);	  result.append((    char)buffer[i],    0,    length);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	71	None	replace
440	[BUG]  [BUGGY]  result.append((  char)buffer[i],  0,  end);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)buffer[i],  0,  end);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)buffer[i],  0,  end);	  result.append((    char)buffer[i],    0,    length);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	71	None	replace
441	[BUG]  [BUGGY]  result.append((  char)buffer[i],  0,  length,  buffer[i]);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)buffer[i],  0,  length,  buffer[i]);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)buffer[i],  0,  length,  buffer[i]);	  result.append((    char)buffer[i],    0,    length);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	71	None	replace
442	[BUG]  [BUGGY]  result.append((  char)buffer[i],  0,  offset,  length);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)buffer[i],  0,  offset,  length);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)buffer[i],  0,  offset,  length);	  result.append((    char)buffer[i],    0,    length);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	71	None	replace
443	[BUG]  [BUGGY]  result.append((  char)buffer[i],  0,  buffer[i].toString());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)buffer[i],  0,  buffer[i].toString());  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)buffer[i],  0,  buffer[i].toString());	  result.append((    char)buffer[i],    0,    length);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	71	None	replace
444	[BUG]  [BUGGY]  result.append((  char)buffer[i],  0,  buffer.length);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)buffer[i],  0,  buffer.length);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)buffer[i],  0,  buffer.length);	  result.append((    char)buffer[i],    0,    length);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	71	None	replace
445	[BUG]  [BUGGY]  result.append(buffer[i],  0,  length,  buffer[i]);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append(buffer[i],  0,  length,  buffer[i]);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append(buffer[i],  0,  length,  buffer[i]);	  result.append(buffer[i],    0,    length);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	98	None	replace
446	[BUG]  [BUGGY]  result.append(buffer[i],  0,  buffer.length);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append(buffer[i],  0,  buffer.length);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append(buffer[i],  0,  buffer.length);	  result.append(buffer[i],    0,    length);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	98	None	replace
447	[BUG]  [BUGGY]  result.append(buffer[i],  0,  length  -  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append(buffer[i],  0,  length  -  1);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append(buffer[i],  0,  length  -  1);	  result.append(buffer[i],    0,    length);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	98	None	replace
448	[BUG]  [BUGGY]  result.append(buffer[i],  0,  offset,  length);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append(buffer[i],  0,  offset,  length);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append(buffer[i],  0,  offset,  length);	  result.append(buffer[i],    0,    length);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	98	None	replace
449	[BUG]  [BUGGY]  result.append(buffer[i],  0,  length  +  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append(buffer[i],  0,  length  +  1);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append(buffer[i],  0,  length  +  1);	  result.append(buffer[i],    0,    length);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	98	None	replace
450	[BUG]  [BUGGY]  result.append(buffer[i],  0,  length,  offset);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append(buffer[i],  0,  length,  offset);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append(buffer[i],  0,  length,  offset);	  result.append(buffer[i],    0,    length);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	98	None	replace
451	[BUG]  [BUGGY]  result.append((  char)buffer[i].charAt(i++)+  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)buffer[i].charAt(i++)+  1);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)buffer[i].charAt(i++)+  1);	  result.append((    char)buffer[i].charAt(i++));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	51	None	replace
452	[BUG]  [BUGGY]  result.append((  char)buffer[i].charAt(i++),  length);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)buffer[i].charAt(i++),  length);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)buffer[i].charAt(i++),  length);	  result.append((    char)buffer[i].charAt(i++));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	51	None	replace
453	[BUG]  [BUGGY]  result.append('N',  buffer[i]);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append('N',  buffer[i]);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append('N',  buffer[i]);	  result.append('n',    end);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	11	None	replace
454	[BUG]  [BUGGY]  result.append('n',  BYTE_MASK);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append('n',  BYTE_MASK);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append('n',  BYTE_MASK);	  result.append('n',    end);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	11	None	replace
455	[BUG]  [BUGGY]  result.append('  ').append(buffer[i]);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append('  ').append(buffer[i]);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append('  ').append(buffer[i]);	  result.append('    ');    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	83	None	replace
456	[BUG]  [BUGGY]  result.append('  ').append(buffer[i].toString());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append('  ').append(buffer[i].toString());  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append('  ').append(buffer[i].toString());	  result.append('    ');    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	83	None	replace
457	[BUG]  [BUGGY]  result.append('  ').append(buffer,  i);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append('  ').append(buffer,  i);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append('  ').append(buffer,  i);	  result.append('    ');    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	83	None	replace
458	[BUG]  [BUGGY]  result.append('  ',  buffer[i]);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append('  ',  buffer[i]);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append('  ',  buffer[i]);	  result.append('    ');    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	83	None	replace
459	[BUG]  [BUGGY]  result.append( "  n ");  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append( "  n ");  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append( "  n ");	  result.append('    ');    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	83	None	replace
460	[BUG]  [BUGGY]  result.append('  ').append(buffer[i].toCharArray());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                      ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append('  ').append(buffer[i].toCharArray());  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append('  ').append(buffer[i].toCharArray());	  result.append('    ');    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	83	None	replace
461	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "The  BYTE_MASK  should  not  be  null. ");  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "The  BYTE_MASK  should  not  be  null. ");  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	throw  new  IllegalArgumentException( "The  BYTE_MASK  should  not  be  null. ");	  throw    new    IllegalArgumentException(   "BYTE_MASK    should    not    be    null.   ");    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	94	None	replace
462	[BUG]  [BUGGY]  new  IllegalArgumentException( "BYTE_MASK  should  not  be  null. ");  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  new  IllegalArgumentException( "BYTE_MASK  should  not  be  null. ");  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	new  IllegalArgumentException( "BYTE_MASK  should  not  be  null. ");	  throw    new    IllegalArgumentException(   "BYTE_MASK    should    not    be    null.   ");    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	94	None	replace
463	[BUG]  [BUGGY]  if(buffer[i]  ==  -1)  {  continue;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  -1)  {  continue;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  -1)  {  continue;  }	  if(buffer[i]    ==    0)    {    continue;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	86	None	replace
464	[BUG]  [BUGGY]  if(buffer[i]  ==  0)  {  continue  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  0)  {  continue  null;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  0)  {  continue  null;  }	  if(buffer[i]    ==    0)    {    continue;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	86	None	replace
465	[BUG]  [BUGGY]  result.append((  char)(buffer[i]  ==  0));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)(buffer[i]  ==  0));  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)(buffer[i]  ==  0));	  result.append((    char)(buffer[i]    }    );    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	107	None	replace
466	[BUG]  [BUGGY]  result.append((  char)(buffer[i]  ==  0);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)(buffer[i]  ==  0);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)(buffer[i]  ==  0);	  result.append((    char)(buffer[i]    }    );    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	107	None	replace
467	[BUG]  [BUGGY]  result.append((  char)(buffer[i]!=  0);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)(buffer[i]!=  0);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)(buffer[i]!=  0);	  result.append((    char)(buffer[i]    }    );    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	107	None	replace
468	[BUG]  [BUGGY]  result.append((  char)(buffer[i]!=  0));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)(buffer[i]!=  0));  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)(buffer[i]!=  0));	  result.append((    char)(buffer[i]    }    );    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	107	None	replace
469	[BUG]  [BUGGY]  result.append(buffer[i]  +  '0');  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append(buffer[i]  +  '0');  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append(buffer[i]  +  '0');	  result.append(buffer[i]    +    offset);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	17	None	replace
470	[BUG]  [BUGGY]  if(buffer[i]  ==  '0'  &&  buffer[i]  <  =  'A'  &&  buffer[i]  <  =  'Z')  {  break;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  '0'  &&  buffer[i]  <  =  'A'  &&  buffer[i]  <  =  'Z')  {  break;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  '0'  &&  buffer[i]  <  =  'A'  &&  buffer[i]  <  =  'Z')  {  break;  }	  if(buffer[i]    ==    '0'    ||    buffer[i]    ==    'A'    &&    buffer[i]    <    =    'Z')    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
471	[BUG]  [BUGGY]  result.append((  String)buffer[i].substring(1));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  String)buffer[i].substring(1));  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  String)buffer[i].substring(1));	  result.append((    String)buffer[i].charAt(i));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	52	None	replace
472	[BUG]  [BUGGY]  result.append((  char)buffer[i]  +  length  +  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)buffer[i]  +  length  +  1);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)buffer[i]  +  length  +  1);	  result.append((    char)buffer[i]    +    length);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	35	None	replace
473	[BUG]  [BUGGY]  result.append((  char)buffer[i]  *  length);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)buffer[i]  *  length);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)buffer[i]  *  length);	  result.append((    char)buffer[i]    +    length);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	35	None	replace
474	[BUG]  [BUGGY]  result.append((  byte)buffer[i].substring(1));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  byte)buffer[i].substring(1));  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  byte)buffer[i].substring(1));	  result.append((    byte)buffer[i].charAt(i));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	93	None	replace
475	[BUG]  [BUGGY]  if(buffer[i]  ==  '0'  &&  buffer[i]  >=  '9')  {  break;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  '0'  &&  buffer[i]  >=  '9')  {  break;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  '0'  &&  buffer[i]  >=  '9')  {  break;  }	  if(buffer[i]    ==    '0'    &&    buffer[i]    <    =    '9')    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	1	None	replace
476	[BUG]  [BUGGY]  if(buffer[i]!=  '0'  &&  buffer[i]  <  =  'A'  &&  buffer[i]  <  =  'Z')  {  break;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]!=  '0'  &&  buffer[i]  <  =  'A'  &&  buffer[i]  <  =  'Z')  {  break;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]!=  '0'  &&  buffer[i]  <  =  'A'  &&  buffer[i]  <  =  'Z')  {  break;  }	  if(buffer[i]    ==    '0'    &&    buffer[i]!=    'A'    &&    buffer[i]    <    =    'Z')    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
477	[BUG]  [BUGGY]  result.append('N',  i);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append('N',  i);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append('N',  i);	  result.append('n',    end);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	11	None	replace
478	[BUG]  [BUGGY]  result.append((  char)buffer[i].getBytes(offset));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)buffer[i].getBytes(offset));  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)buffer[i].getBytes(offset));	  result.append((    char)buffer[i].getBytes());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	80	None	replace
479	[BUG]  [BUGGY]  result.append((  char)buffer[i].getBytes(length));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)buffer[i].getBytes(length));  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)buffer[i].getBytes(length));	  result.append((    char)buffer[i].getBytes());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	80	None	replace
480	[BUG]  [BUGGY]  result.append((  char)buffer[i].getCharacterIndex());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)buffer[i].getCharacterIndex());  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)buffer[i].getCharacterIndex());	  result.append((    char)buffer[i].getLength());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	81	None	replace
481	[BUG]  [BUGGY]  result.append((  char)buffer[i].getChars(0,  length));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)buffer[i].getChars(0,  length));  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)buffer[i].getChars(0,  length));	  result.append((    char)buffer[i].getLength());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	81	None	replace
482	[BUG]  [BUGGY]  result.append((  char)buffer[i].getCharacter());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)buffer[i].getCharacter());  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)buffer[i].getCharacter());	  result.append((    char)buffer[i].getLength());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	81	None	replace
483	[BUG]  [BUGGY]  result.append((  char)buffer[i].getValue());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)buffer[i].getValue());  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)buffer[i].getValue());	  result.append((    char)buffer[i].getLength());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	81	None	replace
484	[BUG]  [BUGGY]  return  result.toString()  +  buffer[i];  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  return  result.toString()  +  buffer[i];  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	return  result.toString()  +  buffer[i];	  return    result.toString();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	103	None	replace
485	[BUG]  [BUGGY]  if(buffer[i]  ==  '.')  {  continue;  }  else  {  System.arraycopy(buffer,  0,  result,  0,  buffer[i]);  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  '.')  {  continue;  }  else  {  System.arraycopy(buffer,  0,  result,  0,  buffer[i]);  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  '.')  {  continue;  }  else  {  System.arraycopy(buffer,  0,  result,  0,  buffer[i]);  }	  if(buffer[i]    ==    'n'    ||    buffer[i]    ==    'r')    {    continue;    }    else    {    System.arraycopy(buffer,    0,    result,    0,    buffer[i]);    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	68	None	replace
486	[BUG]  [BUGGY]  if(buffer[i]  ==  '.'  ||  buffer[i]  ==  ',')  {  continue;  }  else  {  System.arraycopy(buffer,  0,  result,  0,  buffer[i]);  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  '.'  ||  buffer[i]  ==  ',')  {  continue;  }  else  {  System.arraycopy(buffer,  0,  result,  0,  buffer[i]);  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  '.'  ||  buffer[i]  ==  ',')  {  continue;  }  else  {  System.arraycopy(buffer,  0,  result,  0,  buffer[i]);  }	  if(buffer[i]    ==    'n'    ||    buffer[i]    ==    'r')    {    continue;    }    else    {    System.arraycopy(buffer,    0,    result,    0,    buffer[i]);    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	68	None	replace
487	[BUG]  [BUGGY]  System.arraycopy(buffer,  i,  buffer,  0,  length);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  System.arraycopy(buffer,  i,  buffer,  0,  length);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	System.arraycopy(buffer,  i,  buffer,  0,  length);	  System.arraycopy(buffer,    offset,    result,    0,    length);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	101	None	replace
488	[BUG]  [BUGGY]  result.append((  char)buffer[i],  length).toString();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)buffer[i],  length).toString();  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)buffer[i],  length).toString();	  result.append((    char)buffer[i]).toString();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	33	None	replace
489	[BUG]  [BUGGY]  result.append((  char)buffer[i],  offset).toString();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)buffer[i],  offset).toString();  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)buffer[i],  offset).toString();	  result.append((    char)buffer[i]).toString();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	33	None	replace
490	[BUG]  [BUGGY]  if(buffer[i]  ==  ','  ||  buffer[i]  ==  ')')  {  break;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  ','  ||  buffer[i]  ==  ')')  {  break;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  ','  ||  buffer[i]  ==  ')')  {  break;  }	  if(buffer[i]    ==    '.'    ||    buffer[i]    ==    ',')    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	73	None	replace
491	[BUG]  [BUGGY]  throw  new  IllegalStateException( " ".equals(buffer[i],  end));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  throw  new  IllegalStateException( " ".equals(buffer[i],  end));  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	throw  new  IllegalStateException( " ".equals(buffer[i],  end));	  throw    new    IllegalStateException(   "   ".equals(buffer[i]));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	46	None	replace
492	[BUG]  [BUGGY]  throw  new  IllegalStateException( " "  +  buffer[i]);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  throw  new  IllegalStateException( " "  +  buffer[i]);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	throw  new  IllegalStateException( " "  +  buffer[i]);	  throw    new    IllegalStateException(   "   ".equals(buffer[i]));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	46	None	replace
493	[BUG]  [BUGGY]  if(buffer[i]  ==  '0'  &&  buffer[i]  <  =  'a'  &&  buffer[i]  <  =  'z')  {  break;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  '0'  &&  buffer[i]  <  =  'a'  &&  buffer[i]  <  =  'z')  {  break;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  '0'  &&  buffer[i]  <  =  'a'  &&  buffer[i]  <  =  'z')  {  break;  }	  if(buffer[i]    ==    '0'    ||    buffer[i]    ==    'a'    &&    buffer[i]    <    =    'z')    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	88	None	replace
494	[BUG]  [BUGGY]  result.append(buffer[i],  0,  offset  +  length);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append(buffer[i],  0,  offset  +  length);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append(buffer[i],  0,  offset  +  length);	  result.append(buffer[i],    0,    length);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	98	None	replace
495	[BUG]  [BUGGY]  if(buffer[i]  ==  '.'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'f')  {  break;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  '.'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'f')  {  break;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  '.'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'f')  {  break;  }	  if(buffer[i]    ==    '.'    ||    buffer[i]    ==    'a'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'f')    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	72	None	replace
496	[BUG]  [BUGGY]  if(buffer[i]  ==  '.'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  '  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  '.'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  '  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  '.'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  '	  if(buffer[i]    ==    '.'    ||    buffer[i]    ==    'a'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'f')    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	72	None	replace
497	[BUG]  [BUGGY]  if(buffer[i]  ==  '.'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'f'  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  '.'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'f'  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  '.'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'f'	  if(buffer[i]    ==    '.'    ||    buffer[i]    ==    'a'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'f')    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	72	None	replace
498	[BUG]  [BUGGY]  if(buffer[i]  ==  '.'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'f  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  '.'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'f  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  '.'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'f	  if(buffer[i]    ==    '.'    ||    buffer[i]    ==    'a'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'f')    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	72	None	replace
499	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  BYTE_MASK  is  not  supported. ");  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  throw  new  IllegalStateException( "The  BYTE_MASK  is  not  supported. ");  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	throw  new  IllegalStateException( "The  BYTE_MASK  is  not  supported. ");	  throw    new    IllegalStateException(   "BYTE_MASK    is    not    supported.   ");    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	104	None	replace
500	[BUG]  [BUGGY]  throw  new  IllegalStateException( "BYTE_MASK  is  not  supported.   "  +  i);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  throw  new  IllegalStateException( "BYTE_MASK  is  not  supported.   "  +  i);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	throw  new  IllegalStateException( "BYTE_MASK  is  not  supported.   "  +  i);	  throw    new    IllegalStateException(   "BYTE_MASK    is    not    supported.   ");    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	104	None	replace
501	[BUG]  [BUGGY]  if(buffer[i]  ==  ':'  ||  buffer[i]  ==  ':')  {  break;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  ':'  ||  buffer[i]  ==  ':')  {  break;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  ':'  ||  buffer[i]  ==  ':')  {  break;  }	  if(buffer[i]    ==    '.'    ||    buffer[i]    ==    ':')    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	56	None	replace
502	[BUG]  [BUGGY]  result.append( "',' ");  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append( "',' ");  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append( "',' ");	  result.append(   ",   ");    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	10	None	replace
503	[BUG]  [BUGGY]  result.append( "  }   ");  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append( "  }   ");  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append( "  }   ");	  result.append(   ",   ");    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	10	None	replace
504	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " ",  i);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  Throwables.throw  new  IllegalStateException( " ",  i);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	Throwables.throw  new  IllegalStateException( " ",  i);	  Throwables.throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	47	None	replace
505	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " "  +  i);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  Throwables.throw  new  IllegalStateException( " "  +  i);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	Throwables.throw  new  IllegalStateException( " "  +  i);	  Throwables.throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	47	None	replace
506	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( ", ");  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  Throwables.throw  new  IllegalStateException( ", ");  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	Throwables.throw  new  IllegalStateException( ", ");	  Throwables.throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	47	None	replace
507	[BUG]  [BUGGY]  if(buffer[i]  ==  '.'  ||  buffer[i]  ==  'e')  {  break;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  '.'  ||  buffer[i]  ==  'e')  {  break;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  '.'  ||  buffer[i]  ==  'e')  {  break;  }	  if(buffer[i]    ==    'e'    ||    buffer[i]    ==    'E')    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	76	None	replace
508	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " "  +  buffer[i]);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( " "  +  buffer[i]);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	throw  new  IllegalArgumentException( " "  +  buffer[i]);	  throw    new    IllegalArgumentException(   "   ".equals(buffer[i]));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	40	None	replace
509	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ".equals(buffer[i],  end));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( " ".equals(buffer[i],  end));  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	throw  new  IllegalArgumentException( " ".equals(buffer[i],  end));	  throw    new    IllegalArgumentException(   "   ".equals(buffer[i]));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	40	None	replace
510	[BUG]  [BUGGY]  result.append((  char)(buffer[i]  +  3));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)(buffer[i]  +  3));  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)(buffer[i]  +  3));	  result.append((    char)(buffer[i]    +    1));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	22	None	replace
511	[BUG]  [BUGGY]  result.append((  char)(buffer[i]  +  6));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)(buffer[i]  +  6));  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)(buffer[i]  +  6));	  result.append((    char)(buffer[i]    +    1));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	22	None	replace
512	[BUG]  [BUGGY]  result.append((  char)(buffer[i]  +  8));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)(buffer[i]  +  8));  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)(buffer[i]  +  8));	  result.append((    char)(buffer[i]    +    1));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	22	None	replace
513	[BUG]  [BUGGY]  result.append((  char)(buffer[i]  +  4));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)(buffer[i]  +  4));  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)(buffer[i]  +  4));	  result.append((    char)(buffer[i]    +    1));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	22	None	replace
514	[BUG]  [BUGGY]  result.append((  char)(buffer[i]  +  5));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)(buffer[i]  +  5));  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)(buffer[i]  +  5));	  result.append((    char)(buffer[i]    +    1));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	22	None	replace
515	[BUG]  [BUGGY]  result.append((  char)(buffer[i]  +  1).toString());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)(buffer[i]  +  1).toString());  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)(buffer[i]  +  1).toString());	  result.append((    char)(buffer[i]    +    1));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	22	None	replace
516	[BUG]  [BUGGY]  throw  new  IllegalStateException( " "  +  i);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  throw  new  IllegalStateException( " "  +  i);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	throw  new  IllegalStateException( " "  +  i);	  throw    new    IllegalStateException(   "   ".getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	49	None	replace
517	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Can  not  parse  name: "  +  buffer.getMessage());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  throw  new  IllegalStateException( "Can  not  parse  name: "  +  buffer.getMessage());  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	throw  new  IllegalStateException( "Can  not  parse  name: "  +  buffer.getMessage());	  throw    new    IllegalStateException(   "   ".getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	49	None	replace
518	[BUG]  [BUGGY]  throw  new  IllegalStateException( " "  +  getMessage());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  throw  new  IllegalStateException( " "  +  getMessage());  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	throw  new  IllegalStateException( " "  +  getMessage());	  throw    new    IllegalStateException(   "   ".getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	49	None	replace
519	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Can  not  parse  name: "  +  buffer.getText());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  throw  new  IllegalStateException( "Can  not  parse  name: "  +  buffer.getText());  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	throw  new  IllegalStateException( "Can  not  parse  name: "  +  buffer.getText());	  throw    new    IllegalStateException(   "   ".getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	49	None	replace
520	[BUG]  [BUGGY]  result.append(buffer[i].substring(offset,  end)+  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append(buffer[i].substring(offset,  end)+  1);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append(buffer[i].substring(offset,  end)+  1);	  result.append(buffer[i].toString()    +    1);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	97	None	replace
521	[BUG]  [BUGGY]  Result.append(buffer[i].toString());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  Result.append(buffer[i].toString());  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	Result.append(buffer[i].toString());	  result.append(buffer[i].toString()    +    1);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	97	None	replace
522	[BUG]  [BUGGY]  result.append(buffer[i].toString(),  length  +  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append(buffer[i].toString(),  length  +  1);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append(buffer[i].toString(),  length  +  1);	  result.append(buffer[i].toString()    +    1);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	97	None	replace
523	[BUG]  [BUGGY]  result.append(buffer[i].substring(offset)+  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append(buffer[i].substring(offset)+  1);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append(buffer[i].substring(offset)+  1);	  result.append(buffer[i].toString()    +    1);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	97	None	replace
524	[BUG]  [BUGGY]  result.append(buffer[i].substring(offset,  i));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append(buffer[i].substring(offset,  i));  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append(buffer[i].substring(offset,  i));	  result.append(buffer[i].toString()    +    1);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	97	None	replace
525	[BUG]  [BUGGY]  result.append((  char)(buffer[i]  *  BYTE_MASK  +  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)(buffer[i]  *  BYTE_MASK  +  1);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)(buffer[i]  *  BYTE_MASK  +  1);	  result.append((    char)(buffer[i]    *    BYTE_MASK);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	24	None	replace
526	[BUG]  [BUGGY]  result.append((  char)(buffer[i]  *  BYTE_MASK  +  1));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)(buffer[i]  *  BYTE_MASK  +  1));  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)(buffer[i]  *  BYTE_MASK  +  1));	  result.append((    char)(buffer[i]    *    BYTE_MASK);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	24	None	replace
527	[BUG]  [BUGGY]  result.append((  char)(buffer[i]  *  DateTimeConstants.MILLIS_PER_SECOND);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)(buffer[i]  *  DateTimeConstants.MILLIS_PER_SECOND);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)(buffer[i]  *  DateTimeConstants.MILLIS_PER_SECOND);	  result.append((    char)(buffer[i]    *    BYTE_MASK);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	24	None	replace
528	[BUG]  [BUGGY]  if(buffer[i]!=  '0'  &&  buffer[i]!=  '9')  {  break;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]!=  '0'  &&  buffer[i]!=  '9')  {  break;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]!=  '0'  &&  buffer[i]!=  '9')  {  break;  }	  if(buffer[i]!=    '0'    &&    buffer[i]    <    =    '9')    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
529	[BUG]  [BUGGY]  if(buffer[i]!=  '0'  &&  buffer[i]  >=  '9')  {  break;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]!=  '0'  &&  buffer[i]  >=  '9')  {  break;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]!=  '0'  &&  buffer[i]  >=  '9')  {  break;  }	  if(buffer[i]!=    '0'    &&    buffer[i]    <    =    '9')    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
530	[BUG]  [BUGGY]  if(buffer[i]  ==  'n'  ||  buffer[i]  ==  't')  {  continue  null;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  'n'  ||  buffer[i]  ==  't')  {  continue  null;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  'n'  ||  buffer[i]  ==  't')  {  continue  null;  }	  if(buffer[i]    ==    'n'    ||    buffer[i]    ==    't')    {    continue;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	69	None	replace
531	[BUG]  [BUGGY]  if(buffer[i]  ==  't'  ||  buffer[i]  ==  'n')  {  continue;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  't'  ||  buffer[i]  ==  'n')  {  continue;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  't'  ||  buffer[i]  ==  'n')  {  continue;  }	  if(buffer[i]    ==    'n'    ||    buffer[i]    ==    't')    {    continue;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	69	None	replace
532	[BUG]  [BUGGY]  result.append(''+  buffer[i]);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append(''+  buffer[i]);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append(''+  buffer[i]);	  result.append('    ');    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	83	None	replace
533	[BUG]  [BUGGY]  result.append(buffer[i].getName()).toLowerCase();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append(buffer[i].getName()).toLowerCase();  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append(buffer[i].getName()).toLowerCase();	  result.append(buffer[i].getName());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	26	None	replace
534	[BUG]  [BUGGY]  if(buffer[i]  ==  '0'  &&  buffer[i]!=  '0'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'f'  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  '0'  &&  buffer[i]!=  '0'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'f'  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  '0'  &&  buffer[i]!=  '0'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'f'	  if(buffer[i]    ==    '0'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'f')    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	77	None	replace
535	[BUG]  [BUGGY]  if(buffer[i]  ==  '0'  &&  buffer[i]!=  '0'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'f  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  '0'  &&  buffer[i]!=  '0'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'f  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  '0'  &&  buffer[i]!=  '0'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'f	  if(buffer[i]    ==    '0'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'f')    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	77	None	replace
536	[BUG]  [BUGGY]  if(buffer[i]!=  '0'  &&  buffer[i]!=  '0'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'f')  {  break;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]!=  '0'  &&  buffer[i]!=  '0'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'f')  {  break;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]!=  '0'  &&  buffer[i]!=  '0'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'f')  {  break;  }	  if(buffer[i]    ==    '0'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'f')    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	77	None	replace
537	[BUG]  [BUGGY]  if(buffer[i]  ==  '0'  &&  buffer[i]!=  '0'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'f')  {  break  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  '0'  &&  buffer[i]!=  '0'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'f')  {  break  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  '0'  &&  buffer[i]!=  '0'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'f')  {  break	  if(buffer[i]    ==    '0'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'f')    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	77	None	replace
538	[BUG]  [BUGGY]  result.append((  char)buffer[i].charAt(i)+  1),  length);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)buffer[i].charAt(i)+  1),  length);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)buffer[i].charAt(i)+  1),  length);	  result.append((    char)buffer[i].charAt(i),    length);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	53	None	replace
539	[BUG]  [BUGGY]  result.append(buffer,  0,  offset  +  length);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append(buffer,  0,  offset  +  length);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append(buffer,  0,  offset  +  length);	  result.append(buffer,    0,    length);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	102	None	replace
540	[BUG]  [BUGGY]  result.append(buffer,  0,  i);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append(buffer,  0,  i);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append(buffer,  0,  i);	  result.append(buffer,    0,    length);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	102	None	replace
541	[BUG]  [BUGGY]  result.append(buffer,  0,  offset);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append(buffer,  0,  offset);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append(buffer,  0,  offset);	  result.append(buffer,    0,    length);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	102	None	replace
542	[BUG]  [BUGGY]  if(buffer[i]  ==  '+'  ||  buffer[i]  ==  '-')  {  break;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  '+'  ||  buffer[i]  ==  '-')  {  break;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  '+'  ||  buffer[i]  ==  '-')  {  break;  }	  if(buffer[i]    ==    '-'    ||    buffer[i]    ==    '+')    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	75	None	replace
543	[BUG]  [BUGGY]  if(buffer[i]  ==  '0'  &&  buffer[i]  ==  '+')  {  break;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  '0'  &&  buffer[i]  ==  '+')  {  break;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  '0'  &&  buffer[i]  ==  '+')  {  break;  }	  if(buffer[i]    ==    '-'    ||    buffer[i]    ==    '+')    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	75	None	replace
544	[BUG]  [BUGGY]  if(buffer[i]  ==  '.'  &&  buffer[i]  ==  'a'  &&  buffer[i]!=  end)  {  break;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  '.'  &&  buffer[i]  ==  'a'  &&  buffer[i]!=  end)  {  break;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  '.'  &&  buffer[i]  ==  'a'  &&  buffer[i]!=  end)  {  break;  }	  if(buffer[i]    ==    '.'    ||    buffer[i]    ==    'a'    &&    buffer[i]!=    end)    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	58	None	replace
545	[BUG]  [BUGGY]  if(buffer[i]  ==  '.'  ||  buffer[i]  ==  'a'  ||  buffer[i]  ==  end)  {  break;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  '.'  ||  buffer[i]  ==  'a'  ||  buffer[i]  ==  end)  {  break;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  '.'  ||  buffer[i]  ==  'a'  ||  buffer[i]  ==  end)  {  break;  }	  if(buffer[i]    ==    '.'    ||    buffer[i]    ==    'a'    &&    buffer[i]!=    end)    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	58	None	replace
546	[BUG]  [BUGGY]  if(buffer[i]  ==  ','  ||  buffer[i]  ==  'a'  &&  buffer[i]!=  end)  {  break;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  ','  ||  buffer[i]  ==  'a'  &&  buffer[i]!=  end)  {  break;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  ','  ||  buffer[i]  ==  'a'  &&  buffer[i]!=  end)  {  break;  }	  if(buffer[i]    ==    '.'    ||    buffer[i]    ==    'a'    &&    buffer[i]!=    end)    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	58	None	replace
547	[BUG]  [BUGGY]  if(buffer[i]  ==  0  ||  buffer[i]  ==  null)  {  break;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  0  ||  buffer[i]  ==  null)  {  break;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  0  ||  buffer[i]  ==  null)  {  break;  }	  if(buffer[i]    ==    0    ||    buffer[i]!=    null)    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	87	None	replace
548	[BUG]  [BUGGY]  if(buffer[i]  ==  end  ||  buffer[i]  ==  JsonStringEncoder.getInstance().encodeAsString( "UTF-8 "))  {  break;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  end  ||  buffer[i]  ==  JsonStringEncoder.getInstance().encodeAsString( "UTF-8 "))  {  break;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  end  ||  buffer[i]  ==  JsonStringEncoder.getInstance().encodeAsString( "UTF-8 "))  {  break;  }	  if(buffer[i]    ==    end)    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	39	None	replace
549	[BUG]  [BUGGY]  if(buffer[i]  ==  end  ||  buffer[i]  ==  BYTE_MASK)  {  break;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  end  ||  buffer[i]  ==  BYTE_MASK)  {  break;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  end  ||  buffer[i]  ==  BYTE_MASK)  {  break;  }	  if(buffer[i]    ==    end)    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	39	None	replace
550	[BUG]  [BUGGY]  if(buffer[i]  ==  end  ||  buffer[i]  ==  JsonStringEncoder.getInstance().encodeAsString( "US-ASCII "))  {  break;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  end  ||  buffer[i]  ==  JsonStringEncoder.getInstance().encodeAsString( "US-ASCII "))  {  break;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  end  ||  buffer[i]  ==  JsonStringEncoder.getInstance().encodeAsString( "US-ASCII "))  {  break;  }	  if(buffer[i]    ==    end)    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	39	None	replace
551	[BUG]  [BUGGY]  if(buffer[i]  ==  end  ||  buffer[i]  ==  '-')  {  break;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  end  ||  buffer[i]  ==  '-')  {  break;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  end  ||  buffer[i]  ==  '-')  {  break;  }	  if(buffer[i]    ==    end)    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	39	None	replace
552	[BUG]  [BUGGY]  if(buffer[i]  ==  end  ||  buffer[i]  ==  '.')  {  break;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  end  ||  buffer[i]  ==  '.')  {  break;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  end  ||  buffer[i]  ==  '.')  {  break;  }	  if(buffer[i]    ==    end)    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	39	None	replace
553	[BUG]  [BUGGY]  result.append(buffer[i].toString()  + ".. ");  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append(buffer[i].toString()  + ".. ");  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append(buffer[i].toString()  + ".. ");	  result.append(buffer[i].toString()    +   ",   ");    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	25	None	replace
554	[BUG]  [BUGGY]  result.append((  char)buffer[i],  0,  buffer[i].toCharArray(length));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)buffer[i],  0,  buffer[i].toCharArray(length));  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)buffer[i],  0,  buffer[i].toCharArray(length));	  result.append((    char)buffer[i],    0,    length);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	71	None	replace
555	[BUG]  [BUGGY]  result.append((  char)buffer[i],  0,  buffer[i].trim());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)buffer[i],  0,  buffer[i].trim());  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)buffer[i],  0,  buffer[i].trim());	  result.append((    char)buffer[i],    0,    length);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	71	None	replace
556	[BUG]  [BUGGY]  result.append((  char)buffer[i]  +  '0');  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)buffer[i]  +  '0');  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)buffer[i]  +  '0');	  result.append((    char)buffer[i]    +    1);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	31	None	replace
557	[BUG]  [BUGGY]  if(buffer[i]  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(buffer[i]    ==    null)    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	36	None	replace
558	[BUG]  [BUGGY]  if(buffer[i]  ==  null)  {  result.append('n');  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  null)  {  result.append('n');  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  null)  {  result.append('n');  }	  if(buffer[i]    ==    null)    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	36	None	replace
559	[BUG]  [BUGGY]  StringBuffer  result  =  new  StringBuffer(buffer,  i  +  1  +  length);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  StringBuffer  result  =  new  StringBuffer(buffer,  i  +  1  +  length);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	StringBuffer  result  =  new  StringBuffer(buffer,  i  +  1  +  length);	  StringBuffer    result    =    new    StringBuffer(buffer,    i    +    1);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	45	None	replace
560	[BUG]  [BUGGY]  result.append((  byte)(buffer[i]  +  offset);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  byte)(buffer[i]  +  offset);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  byte)(buffer[i]  +  offset);	  result.append((    byte)(buffer[i]);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	79	None	replace
561	[BUG]  [BUGGY]  result.append('$'  +  buffer[i]);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append('$'  +  buffer[i]);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append('$'  +  buffer[i]);	  result.append('$');    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	63	None	replace
562	[BUG]  [BUGGY]  StringBuffer  result  =  new  StringBuffer(length,  0,  buffer);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  StringBuffer  result  =  new  StringBuffer(length,  0,  buffer);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	StringBuffer  result  =  new  StringBuffer(length,  0,  buffer);	  StringBuffer    result    =    new    StringBuffer(buffer,    0,    length);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	84	None	replace
563	[BUG]  [BUGGY]  if(buffer[i]  ==  '0'  &&  buffer[i]!=  '0'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  '0'  &&  buffer[i]!=  '0'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  '0'  &&  buffer[i]!=  '0'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a	  if(buffer[i]    ==    '0'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	74	None	replace
564	[BUG]  [BUGGY]  if(buffer[i]  ==  '0'  &&  buffer[i]!=  '0'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  '  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  '0'  &&  buffer[i]!=  '0'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  '  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  '0'  &&  buffer[i]!=  '0'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  '	  if(buffer[i]    ==    '0'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	74	None	replace
565	[BUG]  [BUGGY]  if(buffer[i]  ==  '0'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  '  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  '0'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  '  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  '0'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  '	  if(buffer[i]    ==    '0'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	74	None	replace
566	[BUG]  [BUGGY]  if(buffer[i]!=  '0'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  '  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]!=  '0'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  '  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]!=  '0'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  '	  if(buffer[i]    ==    '0'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	74	None	replace
567	[BUG]  [BUGGY]  if(buffer[i]!=  '0'  &&  buffer[i]!=  '0'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]!=  '0'  &&  buffer[i]!=  '0'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]!=  '0'  &&  buffer[i]!=  '0'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a	  if(buffer[i]    ==    '0'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	74	None	replace
568	[BUG]  [BUGGY]  if(buffer[i]  ==  '.')  {  continue;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  '.')  {  continue;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  '.')  {  continue;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(buffer[i]    ==    'n'    ||    buffer[i]    ==    'r')    {    continue;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	67	None	replace
569	[BUG]  [BUGGY]  result.append(buffer[i],  offset).toString();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append(buffer[i],  offset).toString();  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append(buffer[i],  offset).toString();	  result.append(buffer[i]).toString();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	16	None	replace
570	[BUG]  [BUGGY]  result.append(buffer[i],  length).toString();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append(buffer[i],  length).toString();  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append(buffer[i],  length).toString();	  result.append(buffer[i]).toString();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	16	None	replace
571	[BUG]  [BUGGY]  if(buffer[i]!=  '.'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]!=  '.'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]!=  '.'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  	  if(buffer[i]    ==    '.'    ||    buffer[i]    ==    'a'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	99	None	replace
572	[BUG]  [BUGGY]  if(buffer[i]!=  '.'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  '  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]!=  '.'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  '  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]!=  '.'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  '	  if(buffer[i]    ==    '.'    ||    buffer[i]    ==    'a'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	99	None	replace
573	[BUG]  [BUGGY]  if(buffer[i]  ==  '.'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  '.'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  '.'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&	  if(buffer[i]    ==    '.'    ||    buffer[i]    ==    'a'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	99	None	replace
574	[BUG]  [BUGGY]  result.append('['  +  i  +  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append('['  +  i  +  1);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append('['  +  i  +  1);	  result.append('[');    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	12	None	replace
575	[BUG]  [BUGGY]  result.append(']');  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append(']');  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append(']');	  result.append('[');    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	12	None	replace
576	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "The  BYTE_MASK  is  not  supported. ");  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "The  BYTE_MASK  is  not  supported. ");  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	throw  new  IllegalArgumentException( "The  BYTE_MASK  is  not  supported. ");	  throw    new    IllegalArgumentException(   "BYTE_MASK    is    not    supported.   ");    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	95	None	replace
577	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "BYTE_MASK  is  not  supported.   "  +  i);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "BYTE_MASK  is  not  supported.   "  +  i);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	throw  new  IllegalArgumentException( "BYTE_MASK  is  not  supported.   "  +  i);	  throw    new    IllegalArgumentException(   "BYTE_MASK    is    not    supported.   ");    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	95	None	replace
578	[BUG]  [BUGGY]  result.append('N',  buffer[i  +  1]);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append('N',  buffer[i  +  1]);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append('N',  buffer[i  +  1]);	  result.append('n',    i    +    1);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	61	None	replace
579	[BUG]  [BUGGY]  result.append((  char)(buffer[i]  *  length));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)(buffer[i]  *  length));  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)(buffer[i]  *  length));	  result.append((    char)(buffer[i]    +    length));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	8	None	replace
580	[BUG]  [BUGGY]  result.append((  char)(buffer[i]  +  length),  buffer[i]);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)(buffer[i]  +  length),  buffer[i]);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)(buffer[i]  +  length),  buffer[i]);	  result.append((    char)(buffer[i]    +    length));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	8	None	replace
581	[BUG]  [BUGGY]  result.append('%');  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append('%');  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append('%');	  result.append('ufffd');    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	82	None	replace
582	[BUG]  [BUGGY]  because(buffer[i]  ==  '0'  &&  buffer[i]  ==  '9')  {  break;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  because(buffer[i]  ==  '0'  &&  buffer[i]  ==  '9')  {  break;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	because(buffer[i]  ==  '0'  &&  buffer[i]  ==  '9')  {  break;  }	  if(buffer[i]    ==    '0'    ||    buffer[i]    ==    '9')    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
583	[BUG]  [BUGGY]  if(buffer[i]!=  -1)  {  break;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]!=  -1)  {  break;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]!=  -1)  {  break;  }	  if(buffer[i]    ==    -1)    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	85	None	replace
584	[BUG]  [BUGGY]  return  new  String(buffer,  0,  result.length,  i);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  return  new  String(buffer,  0,  result.length,  i);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	return  new  String(buffer,  0,  result.length,  i);	  return    new    String(buffer,    0,    result.length);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	106	None	replace
585	[BUG]  [BUGGY]  return  new  String(buffer,  0,  result.length,  offset);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  return  new  String(buffer,  0,  result.length,  offset);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	return  new  String(buffer,  0,  result.length,  offset);	  return    new    String(buffer,    0,    result.length);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	106	None	replace
586	[BUG]  [BUGGY]  if(buffer[i]  ==  ':'  ||  buffer[i]  ==  '/')  {  break;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  ':'  ||  buffer[i]  ==  '/')  {  break;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  ':'  ||  buffer[i]  ==  '/')  {  break;  }	  if(buffer[i]    ==    '.'    ||    buffer[i]    ==    '/')    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	57	None	replace
587	[BUG]  [BUGGY]  throw  new  IllegalStateException( " ").equals(buffer,  end));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  throw  new  IllegalStateException( " ").equals(buffer,  end));  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	throw  new  IllegalStateException( " ").equals(buffer,  end));	  throw    new    IllegalStateException(   "   ".equals(buffer,    i));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	48	None	replace
588	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " "  +  i);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( " "  +  i);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	throw  new  IllegalArgumentException( " "  +  i);	  throw    new    IllegalArgumentException(   "   ".getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	44	None	replace
589	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " "  +  getMessage());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( " "  +  getMessage());  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	throw  new  IllegalArgumentException( " "  +  getMessage());	  throw    new    IllegalArgumentException(   "   ".getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	44	None	replace
590	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Can  not  parse  name: "  +  buffer.getMessage());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "Can  not  parse  name: "  +  buffer.getMessage());  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	throw  new  IllegalArgumentException( "Can  not  parse  name: "  +  buffer.getMessage());	  throw    new    IllegalArgumentException(   "   ".getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	44	None	replace
591	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Can  not  parse  ' "  +  buffer[i].getMessage());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "Can  not  parse  ' "  +  buffer[i].getMessage());  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	throw  new  IllegalArgumentException( "Can  not  parse  ' "  +  buffer[i].getMessage());	  throw    new    IllegalArgumentException(   "   ".getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	44	None	replace
592	[BUG]  [BUGGY]  if(buffer[i]  ==  'n'  ||  buffer[i]  ==  'r')  {  break;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  'n'  ||  buffer[i]  ==  'r')  {  break;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  'n'  ||  buffer[i]  ==  'r')  {  break;  }	  if(buffer[i]!=    0)    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	38	None	replace
593	[BUG]  [BUGGY]  if(buffer[i]  ==  'n'  ||  buffer[i]!=  'r')  {  break;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  'n'  ||  buffer[i]!=  'r')  {  break;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  'n'  ||  buffer[i]!=  'r')  {  break;  }	  if(buffer[i]!=    0)    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	38	None	replace
594	[BUG]  [BUGGY]  if(buffer[i]  ==  '.')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  '.')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  '.')  {  throw  new  IllegalArgumentException( " ");  }	  if(buffer[i]    ==    'n'    ||    buffer[i]    ==    'r')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	92	None	replace
595	[BUG]  [BUGGY]  result.append((  char)(buffer[i]  +  length  +  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)(buffer[i]  +  length  +  1);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)(buffer[i]  +  length  +  1);	  result.append((    char)(buffer[i]    +    length);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	20	None	replace
596	[BUG]  [BUGGY]  result.append(buffer[i].getPosition());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append(buffer[i].getPosition());  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append(buffer[i].getPosition());	  result.append(buffer[i].getLength());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	29	None	replace
597	[BUG]  [BUGGY]  result.append((  char)(buffer[i]  +  '0'));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)(buffer[i]  +  '0'));  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)(buffer[i]  +  '0'));	  result.append((    char)(buffer[i]    +    1]);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	23	None	replace
598	[BUG]  [BUGGY]  result.append((  char)(buffer[i]  +  11]);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)(buffer[i]  +  11]);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)(buffer[i]  +  11]);	  result.append((    char)(buffer[i]    +    1]);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	23	None	replace
599	[BUG]  [BUGGY]  result.append(buffer[i],  0,  buffer[i]  +  offset);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append(buffer[i],  0,  buffer[i]  +  offset);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append(buffer[i],  0,  buffer[i]  +  offset);	  result.append(buffer[i],    0,    buffer[i]);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	65	None	replace
600	[BUG]  [BUGGY]  result.append(buffer[i],  0,  buffer[i].trim());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append(buffer[i],  0,  buffer[i].trim());  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append(buffer[i],  0,  buffer[i].trim());	  result.append(buffer[i],    0,    buffer[i]);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	65	None	replace
601	[BUG]  [BUGGY]  result.append((  char)(buffer[i]).toCharArray(offset));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)(buffer[i]).toCharArray(offset));  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)(buffer[i]).toCharArray(offset));	  result.append((    char)(buffer[i]).toCharArray());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
602	[BUG]  [BUGGY]  result.append((  char)(buffer[i]).toCharArray(0,  length));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)(buffer[i]).toCharArray(0,  length));  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)(buffer[i]).toCharArray(0,  length));	  result.append((    char)(buffer[i]).toCharArray());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
603	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " "  +  i);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " "  +  i);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	Throwables.throw  new  IllegalArgumentException( " "  +  i);	  Throwables.throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	41	None	replace
604	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( ", ");  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( ", ");  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	Throwables.throw  new  IllegalArgumentException( ", ");	  Throwables.throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	41	None	replace
605	[BUG]  [BUGGY]  result.append(buffer[i].getBytes(offset));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append(buffer[i].getBytes(offset));  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append(buffer[i].getBytes(offset));	  result.append(buffer[i].getBytes());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	28	None	replace
606	[BUG]  [BUGGY]  result.append(buffer[i].getBytes(length));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append(buffer[i].getBytes(length));  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append(buffer[i].getBytes(length));	  result.append(buffer[i].getBytes());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	28	None	replace
607	[BUG]  [BUGGY]  result.append((  char)(buffer[i]  +  offset  +  length);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)(buffer[i]  +  offset  +  length);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)(buffer[i]  +  offset  +  length);	  result.append((    char)(buffer[i]    +    offset);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	78	None	replace
608	[BUG]  [BUGGY]  result.append((  char)buffer[i  +  1]).toCharArray();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)buffer[i  +  1]).toCharArray();  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)buffer[i  +  1]).toCharArray();	  result.append((    char)buffer[i    +    1]);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	89	None	replace
609	[BUG]  [BUGGY]  result.append((  char)buffer[i  +  11]);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)buffer[i  +  11]);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)buffer[i  +  11]);	  result.append((    char)buffer[i    +    1]);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	89	None	replace
610	[BUG]  [BUGGY]  result.append((  char)buffer[i  +  1]  +  length);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)buffer[i  +  1]  +  length);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)buffer[i  +  1]  +  length);	  result.append((    char)buffer[i    +    1]);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	89	None	replace
611	[BUG]  [BUGGY]  result.append('N',  i  +  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append('N',  i  +  1);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append('N',  i  +  1);	  result.append('N');    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	9	None	replace
612	[BUG]  [BUGGY]  result.append((  byte)buffer[i],  offset);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  byte)buffer[i],  offset);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  byte)buffer[i],  offset);	  result.append((    byte)buffer[i]);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	90	None	replace
613	[BUG]  [BUGGY]  result.append(buffer[i].toString()  /  offset);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append(buffer[i].toString()  /  offset);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append(buffer[i].toString()  /  offset);	  result.append(buffer[i].toString()    +    offset);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	27	None	replace
614	[BUG]  [BUGGY]  result.append(buffer[i].toString()  +  offset  +  length);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append(buffer[i].toString()  +  offset  +  length);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append(buffer[i].toString()  +  offset  +  length);	  result.append(buffer[i].toString()    +    offset);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	27	None	replace
615	[BUG]  [BUGGY]  if(buffer[i]!=  '.'  ||  buffer[i]  ==  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'f')  {  break;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]!=  '.'  ||  buffer[i]  ==  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'f')  {  break;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]!=  '.'  ||  buffer[i]  ==  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'f')  {  break;  }	  if(buffer[i]!=    '.')    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	59	None	replace
616	[BUG]  [BUGGY]  if(buffer[i]!=  '.'  ||  buffer[i]  ==  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]!=  '.'  ||  buffer[i]  ==  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]!=  '.'  ||  buffer[i]  ==  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&	  if(buffer[i]!=    '.')    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	59	None	replace
617	[BUG]  [BUGGY]  if(buffer[i]!=  '.'  ||  buffer[i]  ==  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'z')  {  break;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]!=  '.'  ||  buffer[i]  ==  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'z')  {  break;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]!=  '.'  ||  buffer[i]  ==  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'z')  {  break;  }	  if(buffer[i]!=    '.')    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	59	None	replace
618	[BUG]  [BUGGY]  if(buffer[i]!=  '.'  ||  buffer[i]  ==  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'c')  {  break;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]!=  '.'  ||  buffer[i]  ==  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'c')  {  break;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]!=  '.'  ||  buffer[i]  ==  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'c')  {  break;  }	  if(buffer[i]!=    '.')    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	59	None	replace
619	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ").equals(buffer,  end));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( " ").equals(buffer,  end));  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	throw  new  IllegalArgumentException( " ").equals(buffer,  end));	  throw    new    IllegalArgumentException(   "   ".equals(buffer,    i));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	42	None	replace
620	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  BYTE_MASK  should  not  be  null. ");  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  throw  new  IllegalStateException( "The  BYTE_MASK  should  not  be  null. ");  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	throw  new  IllegalStateException( "The  BYTE_MASK  should  not  be  null. ");	  throw    new    IllegalStateException(   "BYTE_MASK    should    not    be    null.   ");    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	105	None	replace
621	[BUG]  [BUGGY]  new  IllegalStateException( "BYTE_MASK  should  not  be  null. ");  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  new  IllegalStateException( "BYTE_MASK  should  not  be  null. ");  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	new  IllegalStateException( "BYTE_MASK  should  not  be  null. ");	  throw    new    IllegalStateException(   "BYTE_MASK    should    not    be    null.   ");    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	105	None	replace
622	[BUG]  [BUGGY]  result.append((  char)(buffer[i]  +  length)+  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)(buffer[i]  +  length)+  1);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)(buffer[i]  +  length)+  1);	  result.append((    char)(buffer[i]    +    length));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	8	None	replace
623	[BUG]  [BUGGY]  result.append(buffer[i],  end  +  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append(buffer[i],  end  +  1);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append(buffer[i],  end  +  1);	  result.append(buffer[i],    end);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	14	None	replace
624	[BUG]  [BUGGY]  if(buffer[i]  ==  '.'  ||  buffer[i]  ==  '+')break;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  '.'  ||  buffer[i]  ==  '+')break;  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  '.'  ||  buffer[i]  ==  '+')break;	  if(buffer[i]    ==    '.'    ||    buffer[i]    ==    '+')    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	60	None	replace
625	[BUG]  [BUGGY]  result.append((  char)(buffer[i],  0,  end);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)(buffer[i],  0,  end);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)(buffer[i],  0,  end);	  result.append((    char)(buffer[i],    end);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	19	None	replace
626	[BUG]  [BUGGY]  result.append((  char)(buffer[i],  length  -  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)(buffer[i],  length  -  1);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)(buffer[i],  length  -  1);	  result.append((    char)(buffer[i],    length);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	21	None	replace
627	[BUG]  [BUGGY]  if(buffer[i]  ==  '0'  &&  buffer[i]  <  =  'z')  {  break;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  '0'  &&  buffer[i]  <  =  'z')  {  break;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  '0'  &&  buffer[i]  <  =  'z')  {  break;  }	  if(buffer[i]    ==    '0'    ||    buffer[i]    ==    'a'    &&    buffer[i]    <    =    'z')    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	88	None	replace
628	[BUG]  [BUGGY]  if(buffer[i]  ==  '0'  ||  buffer[i]  ==  'a'  &&  buffer[i]!=  'z')  {  break;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  '0'  ||  buffer[i]  ==  'a'  &&  buffer[i]!=  'z')  {  break;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  '0'  ||  buffer[i]  ==  'a'  &&  buffer[i]!=  'z')  {  break;  }	  if(buffer[i]    ==    '0'    ||    buffer[i]    ==    'a'    &&    buffer[i]    <    =    'z')    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	88	None	replace
629	[BUG]  [BUGGY]  if(buffer[i]  ==  '0'  ||  buffer[i]  ==  'a'  &&  buffer[i]  <  'z')  {  break;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  '0'  ||  buffer[i]  ==  'a'  &&  buffer[i]  <  'z')  {  break;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  '0'  ||  buffer[i]  ==  'a'  &&  buffer[i]  <  'z')  {  break;  }	  if(buffer[i]    ==    '0'    ||    buffer[i]    ==    'a'    &&    buffer[i]    <    =    'z')    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	88	None	replace
630	[BUG]  [BUGGY]  if(buffer[i]  ==  '0'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'f')  {  break;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  '0'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'f')  {  break;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  '0'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'f')  {  break;  }	  if(buffer[i]    ==    '0'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'f')    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	77	None	replace
631	[BUG]  [BUGGY]  if(buffer[i]  ==  '0'  &&  buffer[i]!=  '0'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'f')  {  break;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  '0'  &&  buffer[i]!=  '0'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'f')  {  break;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  '0'  &&  buffer[i]!=  '0'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'f')  {  break;  }	  if(buffer[i]    ==    '0'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'f')    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	77	None	replace
632	[BUG]  [BUGGY]  if(buffer[i]!=  '0'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'f')  {  break;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]!=  '0'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'f')  {  break;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]!=  '0'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'f')  {  break;  }	  if(buffer[i]    ==    '0'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'f')    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	77	None	replace
633	[BUG]  [BUGGY]  if(buffer[i]  ==  '0'  &&  buffer[i]!=  '9'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'f')  {  break;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  '0'  &&  buffer[i]!=  '9'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'f')  {  break;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  '0'  &&  buffer[i]!=  '9'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'f')  {  break;  }	  if(buffer[i]    ==    '0'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'f')    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	77	None	replace
634	[BUG]  [BUGGY]  StringBuffer  result  =  new  StringBuffer(buffer,  0,  offset);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  StringBuffer  result  =  new  StringBuffer(buffer,  0,  offset);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	StringBuffer  result  =  new  StringBuffer(buffer,  0,  offset);	  StringBuffer    result    =    new    StringBuffer(buffer,    0,    length);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	84	None	replace
635	[BUG]  [BUGGY]  result.append((  char)(buffer[i],  end  +  offset);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)(buffer[i],  end  +  offset);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)(buffer[i],  end  +  offset);	  result.append((    char)(buffer[i]    +    offset);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	78	None	replace
636	[BUG]  [BUGGY]  if(buffer[i]  ==  '0'  &&  buffer[i]  <  =  '9')  {  continue;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  '0'  &&  buffer[i]  <  =  '9')  {  continue;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  '0'  &&  buffer[i]  <  =  '9')  {  continue;  }	  if(buffer[i]    ==    'n'    ||    buffer[i]    ==    'r')    {    continue;    }    else    {    System.arraycopy(buffer,    0,    result,    0,    buffer[i]);    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	68	None	replace
637	[BUG]  [BUGGY]  result.append((  char)(buffer[i]  +  length  -  1));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)(buffer[i]  +  length  -  1));  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)(buffer[i]  +  length  -  1));	  result.append((    char)(buffer[i]    +    length);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	20	None	replace
638	[BUG]  [BUGGY]  result.append( ".s.IFJDCS ".charAt(i));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append( ".s.IFJDCS ".charAt(i));  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append( ".s.IFJDCS ".charAt(i));	  result.append('N');    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	9	None	replace
639	[BUG]  [BUGGY]  if(buffer[i]  ==  '0'  &&  buffer[i]!=  'A'  &&  buffer[i]  <  =  'Z'  ||  buffer[i]  ==  'a'  &&  buffer[i]  <  =  'z')  {  break;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  '0'  &&  buffer[i]!=  'A'  &&  buffer[i]  <  =  'Z'  ||  buffer[i]  ==  'a'  &&  buffer[i]  <  =  'z')  {  break;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  '0'  &&  buffer[i]!=  'A'  &&  buffer[i]  <  =  'Z'  ||  buffer[i]  ==  'a'  &&  buffer[i]  <  =  'z')  {  break;  }	  if(buffer[i]    ==    '0'    &&    buffer[i]!=    'A'    &&    buffer[i]    <    =    'Z')    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
640	[BUG]  [BUGGY]  if(buffer[i]  ==  '0'  &&  buffer[i]!=  'A'  &&  buffer[i]  <  =  'Z'  ||  buffer[i]  >=  'a'  &&  buffer[i]  <  =  'z')  {  break;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  '0'  &&  buffer[i]!=  'A'  &&  buffer[i]  <  =  'Z'  ||  buffer[i]  >=  'a'  &&  buffer[i]  <  =  'z')  {  break;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  '0'  &&  buffer[i]!=  'A'  &&  buffer[i]  <  =  'Z'  ||  buffer[i]  >=  'a'  &&  buffer[i]  <  =  'z')  {  break;  }	  if(buffer[i]    ==    '0'    &&    buffer[i]!=    'A'    &&    buffer[i]    <    =    'Z')    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
641	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  result,  0,  i);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  System.arraycopy(buffer,  offset,  result,  0,  i);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	System.arraycopy(buffer,  offset,  result,  0,  i);	  System.arraycopy(buffer,    offset,    result,    0,    length);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	101	None	replace
642	[BUG]  [BUGGY]  result.append((  char)(buffer[i],  end).toCharArray());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)(buffer[i],  end).toCharArray());  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)(buffer[i],  end).toCharArray());	  result.append((    char)(buffer[i]).toCharArray());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
643	[BUG]  [BUGGY]  result.append((  char)(buffer[i],  length).toCharArray());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)(buffer[i],  length).toCharArray());  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)(buffer[i],  length).toCharArray());	  result.append((    char)(buffer[i]).toCharArray());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
644	[BUG]  [BUGGY]  if(buffer[i]  ==  '.'  ||  buffer[i]  ==  'a'  &&  end  <  =  0)  {  break;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  '.'  ||  buffer[i]  ==  'a'  &&  end  <  =  0)  {  break;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  '.'  ||  buffer[i]  ==  'a'  &&  end  <  =  0)  {  break;  }	  if(buffer[i]    ==    '.'    ||    buffer[i]    ==    'a'    &&    buffer[i]!=    end)    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	58	None	replace
645	[BUG]  [BUGGY]  if(buffer[i]  ==  '.'  ||  buffer[i]  ==  'a'  &&  result[i]!=  end)  {  break;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  '.'  ||  buffer[i]  ==  'a'  &&  result[i]!=  end)  {  break;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  '.'  ||  buffer[i]  ==  'a'  &&  result[i]!=  end)  {  break;  }	  if(buffer[i]    ==    '.'    ||    buffer[i]    ==    'a'    &&    buffer[i]!=    end)    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	58	None	replace
646	[BUG]  [BUGGY]  throw  new  IllegalStateException( " ").equals(buffer[i]);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  throw  new  IllegalStateException( " ").equals(buffer[i]);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	throw  new  IllegalStateException( " ").equals(buffer[i]);	  throw    new    IllegalStateException(   "   ".equals(buffer[i]));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	46	None	replace
647	[BUG]  [BUGGY]  throw  new  IllegalStateException( " ").printStackTrace(result);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  throw  new  IllegalStateException( " ").printStackTrace(result);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	throw  new  IllegalStateException( " ").printStackTrace(result);	  throw    new    IllegalStateException(   "   ".equals(buffer[i]));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	46	None	replace
648	[BUG]  [BUGGY]  throw  new  IllegalStateException( " ").equals(buffer[i]));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  throw  new  IllegalStateException( " ").equals(buffer[i]));  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	throw  new  IllegalStateException( " ").equals(buffer[i]));	  throw    new    IllegalStateException(   "   ".equals(buffer[i]));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	46	None	replace
649	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Bytes  should  not  be  null. ");  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  throw  new  IllegalStateException( "Bytes  should  not  be  null. ");  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	throw  new  IllegalStateException( "Bytes  should  not  be  null. ");	  throw    new    IllegalStateException(   "BYTE_MASK    should    not    be    null.   ");    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	105	None	replace
650	[BUG]  [BUGGY]  result.append(buffer[i],  0,  offset);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append(buffer[i],  0,  offset);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append(buffer[i],  0,  offset);	  result.append(buffer[i],    0,    length);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	98	None	replace
651	[BUG]  [BUGGY]  result.append(buffer[i].toString(),  offset  +  length);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append(buffer[i].toString(),  offset  +  length);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append(buffer[i].toString(),  offset  +  length);	  result.append(buffer[i].toString()    +    offset);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	27	None	replace
652	[BUG]  [BUGGY]  result.append((  int)buffer[i]);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  int)buffer[i]);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  int)buffer[i]);	  result.append((    String)buffer[i]);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	32	None	replace
653	[BUG]  [BUGGY]  if(buffer[i]  ==  '.'  ||  buffer[i]  ==  'e'  ||  buffer[i]  ==  'E')  {  break;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  '.'  ||  buffer[i]  ==  'e'  ||  buffer[i]  ==  'E')  {  break;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  '.'  ||  buffer[i]  ==  'e'  ||  buffer[i]  ==  'E')  {  break;  }	  if(buffer[i]    ==    'e'    ||    buffer[i]    ==    'E')    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	76	None	replace
654	[BUG]  [BUGGY]  if(buffer[i]  ==  'e'  ||  buffer[i]  ==  'E')break;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  'e'  ||  buffer[i]  ==  'E')break;  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  'e'  ||  buffer[i]  ==  'E')break;	  if(buffer[i]    ==    'e'    ||    buffer[i]    ==    'E')    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	76	None	replace
655	[BUG]  [BUGGY]  result.append(buffer[i],  0,  buffer[i].getLength());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append(buffer[i],  0,  buffer[i].getLength());  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append(buffer[i],  0,  buffer[i].getLength());	  result.append(buffer[i],    0,    buffer[i]);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	65	None	replace
656	[BUG]  [BUGGY]  if(buffer[i]  ==  '.'  ||  buffer[i]  ==  '/')break;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  '.'  ||  buffer[i]  ==  '/')break;  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  '.'  ||  buffer[i]  ==  '/')break;	  if(buffer[i]    ==    '.'    ||    buffer[i]    ==    '/')    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	57	None	replace
657	[BUG]  [BUGGY]  result.append('n',  '-');  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append('n',  '-');  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append('n',  '-');	  result.append('n',    i);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	62	None	replace
658	[BUG]  [BUGGY]  result.append('[',  i);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append('[',  i);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append('[',  i);	  result.append('n',    i);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	62	None	replace
659	[BUG]  [BUGGY]  if(buffer[i]  ==  '.'  ||  buffer[i]  ==  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'f')  {  break;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  '.'  ||  buffer[i]  ==  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'f')  {  break;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  '.'  ||  buffer[i]  ==  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'f')  {  break;  }	  if(buffer[i]    ==    '.'    ||    buffer[i]    ==    'a'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'f')    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	72	None	replace
660	[BUG]  [BUGGY]  if(buffer[i]  ==  '.'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'f')  {  break;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  '.'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'f')  {  break;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  '.'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'f')  {  break;  }	  if(buffer[i]    ==    '.'    ||    buffer[i]    ==    'a'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'f')    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	72	None	replace
661	[BUG]  [BUGGY]  if(byTE_MASK  ==  '0'  &&  buffer[i]  <  =  '9')  {  break;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(byTE_MASK  ==  '0'  &&  buffer[i]  <  =  '9')  {  break;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(byTE_MASK  ==  '0'  &&  buffer[i]  <  =  '9')  {  break;  }	  if(buffer[i]    ==    '0'    ||    buffer[i]    ==    '9')    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
662	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " ".equals(buffer,  i);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  Throwables.throw  new  IllegalStateException( " ".equals(buffer,  i);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	Throwables.throw  new  IllegalStateException( " ".equals(buffer,  i);	  Throwables.throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	47	None	replace
663	[BUG]  [BUGGY]  result.append((  char)buffer[i].charAt(i),  length  -  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)buffer[i].charAt(i),  length  -  1);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)buffer[i].charAt(i),  length  -  1);	  result.append((    char)buffer[i].charAt(i),    length);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	53	None	replace
664	[BUG]  [BUGGY]  result.append(buffer[i].getCharacterIndex());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append(buffer[i].getCharacterIndex());  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append(buffer[i].getCharacterIndex());	  result.append(buffer[i].getLength());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	29	None	replace
665	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " "  + "equals(buffer[i]));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( " "  + "equals(buffer[i]));  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	throw  new  IllegalArgumentException( " "  + "equals(buffer[i]));	  throw    new    IllegalArgumentException(   "   ".equals(buffer[i]));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	40	None	replace
666	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ").equals(buffer[i]);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( " ").equals(buffer[i]);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	throw  new  IllegalArgumentException( " ").equals(buffer[i]);	  throw    new    IllegalArgumentException(   "   ".equals(buffer[i]));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	40	None	replace
667	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ").printStackTrace(result);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( " ").printStackTrace(result);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	throw  new  IllegalArgumentException( " ").printStackTrace(result);	  throw    new    IllegalArgumentException(   "   ".equals(buffer[i]));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	40	None	replace
668	[BUG]  [BUGGY]  throw  new  IllegalStateException( "ByTE_MASK  is  not  supported.  Please  check  that  the  end  of  the  BYTE_MASK. ");  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  throw  new  IllegalStateException( "ByTE_MASK  is  not  supported.  Please  check  that  the  end  of  the  BYTE_MASK. ");  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	throw  new  IllegalStateException( "ByTE_MASK  is  not  supported.  Please  check  that  the  end  of  the  BYTE_MASK. ");	  throw    new    IllegalStateException(   "BYTE_MASK    is    not    supported.   ");    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	104	None	replace
669	[BUG]  [BUGGY]  throw  new  IllegalStateException( "BYTE_MASK  is  not  supported.  Please  check  that  the  end  of  the  BYTE_MASK. ");  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  throw  new  IllegalStateException( "BYTE_MASK  is  not  supported.  Please  check  that  the  end  of  the  BYTE_MASK. ");  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	throw  new  IllegalStateException( "BYTE_MASK  is  not  supported.  Please  check  that  the  end  of  the  BYTE_MASK. ");	  throw    new    IllegalStateException(   "BYTE_MASK    is    not    supported.   ");    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	104	None	replace
670	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ".equals(buffer,  i);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ".equals(buffer,  i);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	Throwables.throw  new  IllegalArgumentException( " ".equals(buffer,  i);	  Throwables.throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	41	None	replace
671	[BUG]  [BUGGY]  result.append((  char)buffer[i],  0,  length  -  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)buffer[i],  0,  length  -  1);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)buffer[i],  0,  length  -  1);	  result.append((    char)buffer[i],    0,    length);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	71	None	replace
672	[BUG]  [BUGGY]  result.append((  char)buffer[i],  0,  offset);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)buffer[i],  0,  offset);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)buffer[i],  0,  offset);	  result.append((    char)buffer[i],    0,    length);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	71	None	replace
673	[BUG]  [BUGGY]  result.append((  String)buffer[i].charAt(0));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  String)buffer[i].charAt(0));  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  String)buffer[i].charAt(0));	  result.append((    String)buffer[i].charAt(i));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	52	None	replace
674	[BUG]  [BUGGY]  if(buffer[i]!=  '.'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]!=  '.'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]!=  '.'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a	  if(buffer[i]    ==    '.'    ||    buffer[i]    ==    'a'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	99	None	replace
675	[BUG]  [BUGGY]  if(buffer[i]!=  '.'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]!=  '.'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]!=  '.'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&	  if(buffer[i]    ==    '.'    ||    buffer[i]    ==    'a'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	99	None	replace
676	[BUG]  [BUGGY]  if(buffer[i]  ==  '.'  ||  buffer[i]  ==  'n'  ||  buffer[i]  ==  't')  {  continue;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  '.'  ||  buffer[i]  ==  'n'  ||  buffer[i]  ==  't')  {  continue;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  '.'  ||  buffer[i]  ==  'n'  ||  buffer[i]  ==  't')  {  continue;  }	  if(buffer[i]    ==    'n'    ||    buffer[i]    ==    't')    {    continue;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	69	None	replace
677	[BUG]  [BUGGY]  if(buffer[i]  ==  '0'  &&  buffer[i]  ==  '9')  {  continue;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  '0'  &&  buffer[i]  ==  '9')  {  continue;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  '0'  &&  buffer[i]  ==  '9')  {  continue;  }	  if(buffer[i]    ==    'n'    ||    buffer[i]    ==    't')    {    continue;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	69	None	replace
678	[BUG]  [BUGGY]  if(buffer[i]  ==  ','  ||  buffer[i]  ==  't')  {  continue;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  ','  ||  buffer[i]  ==  't')  {  continue;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  ','  ||  buffer[i]  ==  't')  {  continue;  }	  if(buffer[i]    ==    'n'    ||    buffer[i]    ==    't')    {    continue;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	69	None	replace
679	[BUG]  [BUGGY]  if(byTE_MASK!=  '0'  &&  buffer[i]  <  =  '9')  {  break;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(byTE_MASK!=  '0'  &&  buffer[i]  <  =  '9')  {  break;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(byTE_MASK!=  '0'  &&  buffer[i]  <  =  '9')  {  break;  }	  if(buffer[i]!=    '0'    &&    buffer[i]    <    =    '9')    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
680	[BUG]  [BUGGY]  result.append((  char)(buffer[i]  %  BYTE_MASK);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)(buffer[i]  %  BYTE_MASK);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)(buffer[i]  %  BYTE_MASK);	  result.append((    char)(buffer[i]    *    BYTE_MASK);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	24	None	replace
681	[BUG]  [BUGGY]  result.append('[').append(buffer,  i  +  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append('[').append(buffer,  i  +  1);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append('[').append(buffer,  i  +  1);	  result.append('[');    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	12	None	replace
682	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ").equals(buffer,  i);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( " ").equals(buffer,  i);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	throw  new  IllegalArgumentException( " ").equals(buffer,  i);	  throw    new    IllegalArgumentException(   "   ".equals(buffer,    i));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	42	None	replace
683	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ").equals(buffer,  i));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( " ").equals(buffer,  i));  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	throw  new  IllegalArgumentException( " ").equals(buffer,  i));	  throw    new    IllegalArgumentException(   "   ".equals(buffer,    i));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	42	None	replace
684	[BUG]  [BUGGY]  if(buffer[i]  ==  '.'  ||  buffer[i]  ==  '-')break;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  '.'  ||  buffer[i]  ==  '-')break;  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  '.'  ||  buffer[i]  ==  '-')break;	  if(buffer[i]    ==    '.'    ||    buffer[i]    ==    '-')    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	55	None	replace
685	[BUG]  [BUGGY]  result.append((  char)(buffer[i]  +  1]).toString());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)(buffer[i]  +  1]).toString());  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)(buffer[i]  +  1]).toString());	  result.append((    char)(buffer[i]    +    1]);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	23	None	replace
686	[BUG]  [BUGGY]  result.append((  char)(buffer[i]  +  1]).toCharArray();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)(buffer[i]  +  1]).toCharArray();  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)(buffer[i]  +  1]).toCharArray();	  result.append((    char)(buffer[i]    +    1]);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	23	None	replace
687	[BUG]  [BUGGY]  result.append((  char)(buffer[i]  +  118));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)(buffer[i]  +  118));  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)(buffer[i]  +  118));	  result.append((    char)(buffer[i]    +    1]);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	23	None	replace
688	[BUG]  [BUGGY]  if(buffer[i]  ==  '0'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  '0'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  '0'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&	  if(buffer[i]    ==    '0'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    buffer[i]!=    'a'    &&    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	74	None	replace
689	[BUG]  [BUGGY]  result.append((  char)buffer[i]).append('n');  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)buffer[i]).append('n');  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)buffer[i]).append('n');	  result.append((    char)buffer[i]).toString();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	33	None	replace
690	[BUG]  [BUGGY]  result.append((  char)buffer[i],  end).toString();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)buffer[i],  end).toString();  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)buffer[i],  end).toString();	  result.append((    char)buffer[i]).toString();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	33	None	replace
691	[BUG]  [BUGGY]  result.append((  char)buffer[i]).append('-');  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)buffer[i]).append('-');  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)buffer[i]).append('-');	  result.append((    char)buffer[i]).toString();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	33	None	replace
692	[BUG]  [BUGGY]  result.append((  char)buffer[i]).append('/');  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)buffer[i]).append('/');  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)buffer[i]).append('/');	  result.append((    char)buffer[i]).toString();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	33	None	replace
693	[BUG]  [BUGGY]  result.append(buffer[i].getName()  + ", ");  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append(buffer[i].getName()  + ", ");  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append(buffer[i].getName()  + ", ");	  result.append(buffer[i].getName());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	26	None	replace
694	[BUG]  [BUGGY]  result.append(buffer[i].getName(),  length);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append(buffer[i].getName(),  length);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append(buffer[i].getName(),  length);	  result.append(buffer[i].getName());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	26	None	replace
695	[BUG]  [BUGGY]  throw  new  IllegalStateException( "BYTE_MASK  cannot  parse  name: "  +  buffer[i]);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  throw  new  IllegalStateException( "BYTE_MASK  cannot  parse  name: "  +  buffer[i]);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	throw  new  IllegalStateException( "BYTE_MASK  cannot  parse  name: "  +  buffer[i]);	  throw    new    IllegalStateException(   "   ".getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	49	None	replace
696	[BUG]  [BUGGY]  throw  new  IllegalStateException( "BYTE_MASK  cannot  parse  name: "  +  buffer[i].getMessage());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  throw  new  IllegalStateException( "BYTE_MASK  cannot  parse  name: "  +  buffer[i].getMessage());  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	throw  new  IllegalStateException( "BYTE_MASK  cannot  parse  name: "  +  buffer[i].getMessage());	  throw    new    IllegalStateException(   "   ".getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	49	None	replace
697	[BUG]  [BUGGY]  if(buffer[i]!=  null  ||  buffer[i]  ==  null)  {  break;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]!=  null  ||  buffer[i]  ==  null)  {  break;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]!=  null  ||  buffer[i]  ==  null)  {  break;  }	  if(buffer[i]!=    null)    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	37	None	replace
698	[BUG]  [BUGGY]  if(buffer[i]!=  null  ||  buffer[i].length()  ==  0)  {  break;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]!=  null  ||  buffer[i].length()  ==  0)  {  break;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]!=  null  ||  buffer[i].length()  ==  0)  {  break;  }	  if(buffer[i]!=    null)    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	37	None	replace
699	[BUG]  [BUGGY]  result.append(buffer,  offset,  length);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append(buffer,  offset,  length);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append(buffer,  offset,  length);	  result.append(buffer,    0,    length);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	102	None	replace
700	[BUG]  [BUGGY]  result.append(buffer,  offset,  0,  length);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append(buffer,  offset,  0,  length);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append(buffer,  offset,  0,  length);	  result.append(buffer,    0,    length);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	102	None	replace
701	[BUG]  [BUGGY]  result.append('n',  i  +  1,  buffer[i]);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append('n',  i  +  1,  buffer[i]);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append('n',  i  +  1,  buffer[i]);	  result.append('n',    i    +    1);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	61	None	replace
702	[BUG]  [BUGGY]  result.append(buffer[i].toString()  + ",  end= ");  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append(buffer[i].toString()  + ",  end= ");  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append(buffer[i].toString()  + ",  end= ");	  result.append(buffer[i].toString()    +   ",   ");    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	25	None	replace
703	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " "  + "equals(buffer,  i);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( " "  + "equals(buffer,  i);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	throw  new  IllegalArgumentException( " "  + "equals(buffer,  i);	  throw    new    IllegalArgumentException(   "   ".equals(buffer,    i);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	96	None	replace
704	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ".equals(buffer,  i  +  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( " ".equals(buffer,  i  +  1);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	throw  new  IllegalArgumentException( " ".equals(buffer,  i  +  1);	  throw    new    IllegalArgumentException(   "   ".equals(buffer,    i);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	96	None	replace
705	[BUG]  [BUGGY]  result.append((  char)(buffer[i]  {  'n'  ||  buffer[i]  ==  'r'))  throw  new  IllegalArgumentException( " ");  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)(buffer[i]  {  'n'  ||  buffer[i]  ==  'r'))  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)(buffer[i]  {  'n'  ||  buffer[i]  ==  'r'))  throw  new  IllegalArgumentException( " ");	  if(buffer[i]    ==    'n'    ||    buffer[i]    ==    'r')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	92	None	replace
706	[BUG]  [BUGGY]  result.append((  char)buffer[i]).append('n'  ||  buffer[i]  ==  'r')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)buffer[i]).append('n'  ||  buffer[i]  ==  'r')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)buffer[i]).append('n'  ||  buffer[i]  ==  'r')  {  throw  new  IllegalArgumentException( " ");  }	  if(buffer[i]    ==    'n'    ||    buffer[i]    ==    'r')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	92	None	replace
707	[BUG]  [BUGGY]  result.append((  char)(buffer[i]  {  'n'  ||  buffer[i]  ==  'r'))  throw  new  IllegalArgumentException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)(buffer[i]  {  'n'  ||  buffer[i]  ==  'r'))  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)(buffer[i]  {  'n'  ||  buffer[i]  ==  'r'))  throw  new  IllegalArgumentException( " ");  }	  if(buffer[i]    ==    'n'    ||    buffer[i]    ==    'r')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	92	None	replace
708	[BUG]  [BUGGY]  result.append((  char)(buffer[i]  {  'n'  ||  buffer[i]  ==  'r')?)  throw  new  IllegalArgumentException( " ");  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)(buffer[i]  {  'n'  ||  buffer[i]  ==  'r')?)  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)(buffer[i]  {  'n'  ||  buffer[i]  ==  'r')?)  throw  new  IllegalArgumentException( " ");	  if(buffer[i]    ==    'n'    ||    buffer[i]    ==    'r')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	92	None	replace
709	[BUG]  [BUGGY]  if(buffer[i]  ==  '.'  ||  buffer[i]  ==  'a'  ||  buffer[i]  ==  'r')  {  continue;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  '.'  ||  buffer[i]  ==  'a'  ||  buffer[i]  ==  'r')  {  continue;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  '.'  ||  buffer[i]  ==  'a'  ||  buffer[i]  ==  'r')  {  continue;  }	  if(buffer[i]    ==    'n'    ||    buffer[i]    ==    'r')    {    continue;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	67	None	replace
710	[BUG]  [BUGGY]  if(buffer[i]!=  '.'  ||  buffer[i]  ==  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'z')  {  break;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]!=  '.'  ||  buffer[i]  ==  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'z')  {  break;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]!=  '.'  ||  buffer[i]  ==  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'z')  {  break;  }	  if(buffer[i]!=    '.')    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	59	None	replace
711	[BUG]  [BUGGY]  if(buffer[i]!=  '.'  ||  buffer[i]  ==  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'd')  {  break;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]!=  '.'  ||  buffer[i]  ==  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'd')  {  break;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]!=  '.'  ||  buffer[i]  ==  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'a'  &&  buffer[i]!=  'd')  {  break;  }	  if(buffer[i]!=    '.')    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	59	None	replace
712	[BUG]  [BUGGY]  result.append((  char)(buffer[i]  +  11));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)(buffer[i]  +  11));  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)(buffer[i]  +  11));	  result.append((    char)(buffer[i]    +    1));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	22	None	replace
713	[BUG]  [BUGGY]  result.append(BufferUtils.toString(buffer[i].toString()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append(BufferUtils.toString(buffer[i].toString()));  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append(BufferUtils.toString(buffer[i].toString()));	  result.append(buffer[i].toString()    +    1);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	97	None	replace
714	[BUG]  [BUGGY]  result.append(BufferUtils.toString(buffer[i].toString(),  end));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append(BufferUtils.toString(buffer[i].toString(),  end));  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append(BufferUtils.toString(buffer[i].toString(),  end));	  result.append(buffer[i].toString()    +    1);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	97	None	replace
715	[BUG]  [BUGGY]  result.append(BufferUtils.toString(buffer[i].toString(),  length));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append(BufferUtils.toString(buffer[i].toString(),  length));  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append(BufferUtils.toString(buffer[i].toString(),  length));	  result.append(buffer[i].toString()    +    1);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	97	None	replace
716	[BUG]  [BUGGY]  result.append(BufferUtils.toString(buffer[i].toString())+  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append(BufferUtils.toString(buffer[i].toString())+  1);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append(BufferUtils.toString(buffer[i].toString())+  1);	  result.append(buffer[i].toString()    +    1);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	97	None	replace
717	[BUG]  [BUGGY]  result.append((  char)buffer[i  *  1]);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)buffer[i  *  1]);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)buffer[i  *  1]);	  result.append((    char)buffer[i    +    1]);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	89	None	replace
718	[BUG]  [BUGGY]  result.append( "  - ");  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append( "  - ");  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append( "  - ");	  result.append('    ');    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	83	None	replace
719	[BUG]  [BUGGY]  result.append(''+  i);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append(''+  i);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append(''+  i);	  result.append('    ');    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	83	None	replace
720	[BUG]  [BUGGY]  result.append('  ',  end);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append('  ',  end);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append('  ',  end);	  result.append('    ');    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	83	None	replace
721	[BUG]  [BUGGY]  return  new  String(buffer,  0,  result.length  -  1,  buffer.length);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  return  new  String(buffer,  0,  result.length  -  1,  buffer.length);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	return  new  String(buffer,  0,  result.length  -  1,  buffer.length);	  return    new    String(buffer,    0,    result.length);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	106	None	replace
722	[BUG]  [BUGGY]  return  new  String(buffer,  0,  result.length  -  2);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  return  new  String(buffer,  0,  result.length  -  2);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	return  new  String(buffer,  0,  result.length  -  2);	  return    new    String(buffer,    0,    result.length);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	106	None	replace
723	[BUG]  [BUGGY]  if(buffer[i]  ==  '.'  ||  buffer[i]  ==  ':')break;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  '.'  ||  buffer[i]  ==  ':')break;  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  '.'  ||  buffer[i]  ==  ':')break;	  if(buffer[i]    ==    '.'    ||    buffer[i]    ==    ':')    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	56	None	replace
724	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Bytes  should  not  be  null. ");  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "Bytes  should  not  be  null. ");  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	throw  new  IllegalArgumentException( "Bytes  should  not  be  null. ");	  throw    new    IllegalArgumentException(   "BYTE_MASK    should    not    be    null.   ");    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	94	None	replace
725	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "ByTE_MASK  should  not  be  null! ");  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "ByTE_MASK  should  not  be  null! ");  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	throw  new  IllegalArgumentException( "ByTE_MASK  should  not  be  null! ");	  throw    new    IllegalArgumentException(   "BYTE_MASK    should    not    be    null.   ");    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	94	None	replace
726	[BUG]  [BUGGY]  if(buffer[i]  ==  '0'  ||  buffer[i]  ==  '0')  {  continue;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  '0'  ||  buffer[i]  ==  '0')  {  continue;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  '0'  ||  buffer[i]  ==  '0')  {  continue;  }	  if(buffer[i]    ==    '0'    ||    buffer[i]    ==    '0')    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
727	[BUG]  [BUGGY]  result.append((  char)buffer[i].getName());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)buffer[i].getName());  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)buffer[i].getName());	  result.append((    char)buffer[i].getLength());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	81	None	replace
728	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "ByTE_MASK  is  not  supported: "  + "BYTE_MASK ");  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "ByTE_MASK  is  not  supported: "  + "BYTE_MASK ");  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	throw  new  IllegalArgumentException( "ByTE_MASK  is  not  supported: "  + "BYTE_MASK ");	  throw    new    IllegalArgumentException(   "BYTE_MASK    is    not    supported.   ");    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	95	None	replace
729	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "ByTE_MASK  is  not  supported: "  + "ByTE_MASK ");  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( "ByTE_MASK  is  not  supported: "  + "ByTE_MASK ");  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	throw  new  IllegalArgumentException( "ByTE_MASK  is  not  supported: "  + "ByTE_MASK ");	  throw    new    IllegalArgumentException(   "BYTE_MASK    is    not    supported.   ");    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	95	None	replace
730	[BUG]  [BUGGY]  if(buffer[i]  ==  '0'  &&  buffer[i]  ==  'r')  {  continue;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  '0'  &&  buffer[i]  ==  'r')  {  continue;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  '0'  &&  buffer[i]  ==  'r')  {  continue;  }	  if(buffer[i]    ==    'n'    ||    buffer[i]    ==    'r')    {    continue;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	66	None	replace
731	[BUG]  [BUGGY]  if(buffer[i]  ==  '.'  ||  buffer[i]  ==  'n'  ||  buffer[i]  ==  'r')  {  continue;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  '.'  ||  buffer[i]  ==  'n'  ||  buffer[i]  ==  'r')  {  continue;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  '.'  ||  buffer[i]  ==  'n'  ||  buffer[i]  ==  'r')  {  continue;  }	  if(buffer[i]    ==    'n'    ||    buffer[i]    ==    'r')    {    continue;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	66	None	replace
732	[BUG]  [BUGGY]  if(buffer[i]  ==  ','  ||  buffer[i]  ==  'r')  {  continue;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  ','  ||  buffer[i]  ==  'r')  {  continue;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  ','  ||  buffer[i]  ==  'r')  {  continue;  }	  if(buffer[i]    ==    'n'    ||    buffer[i]    ==    'r')    {    continue;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	66	None	replace
733	[BUG]  [BUGGY]  if(buffer[i]  ==  '.'  ||  buffer[i]  ==  ',')break;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  '.'  ||  buffer[i]  ==  ',')break;  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  '.'  ||  buffer[i]  ==  ',')break;	  if(buffer[i]    ==    '.'    ||    buffer[i]    ==    ',')    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	73	None	replace
734	[BUG]  [BUGGY]  if(buffer[i]  ==  -1  ||  buffer[i]  ==  -1  ||  buffer[i]  ==  -1)  {  break;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  -1  ||  buffer[i]  ==  -1  ||  buffer[i]  ==  -1)  {  break;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  -1  ||  buffer[i]  ==  -1  ||  buffer[i]  ==  -1)  {  break;  }	  if(buffer[i]    ==    -1)    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	85	None	replace
735	[BUG]  [BUGGY]  if(buffer[i]  ==  -1  ||  buffer[i]  ==  -1  ||  buffer[i]  ==  -1  ||  buffer[i]  ==  -1)  {  break;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  -1  ||  buffer[i]  ==  -1  ||  buffer[i]  ==  -1  ||  buffer[i]  ==  -1)  {  break;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  -1  ||  buffer[i]  ==  -1  ||  buffer[i]  ==  -1  ||  buffer[i]  ==  -1)  {  break;  }	  if(buffer[i]    ==    -1)    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	85	None	replace
736	[BUG]  [BUGGY]  if(buffer[i]  ==  0  ||  buffer[i]  ==  '.')  {  continue;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  0  ||  buffer[i]  ==  '.')  {  continue;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  0  ||  buffer[i]  ==  '.')  {  continue;  }	  if(buffer[i]    ==    0)    {    continue;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	86	None	replace
737	[BUG]  [BUGGY]  if(buffer[i]  ==  0  ||  buffer[i]  ==  '-')  {  continue;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  0  ||  buffer[i]  ==  '-')  {  continue;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  0  ||  buffer[i]  ==  '-')  {  continue;  }	  if(buffer[i]    ==    0)    {    continue;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	86	None	replace
738	[BUG]  [BUGGY]  return  result.toString()  + ", "  +  BYTE_MASK;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  return  result.toString()  + ", "  +  BYTE_MASK;  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	return  result.toString()  + ", "  +  BYTE_MASK;	  return    result.toString();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	103	None	replace
739	[BUG]  [BUGGY]  return  result.toString()  + ": "  +  buffer[i];  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  return  result.toString()  + ": "  +  buffer[i];  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	return  result.toString()  + ": "  +  buffer[i];	  return    result.toString();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	103	None	replace
740	[BUG]  [BUGGY]  return  result.toString()  + ": "  +  i;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  return  result.toString()  + ": "  +  i;  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	return  result.toString()  + ": "  +  i;	  return    result.toString();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	103	None	replace
741	[BUG]  [BUGGY]  return  result.toString()  + ", "  +  buffer[i];  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                      ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  return  result.toString()  + ", "  +  buffer[i];  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	return  result.toString()  + ", "  +  buffer[i];	  return    result.toString();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	103	None	replace
742	[BUG]  [BUGGY]  if(buffer[i]  ==  '-'  ||  buffer[i]  ==  '+')break;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  '-'  ||  buffer[i]  ==  '+')break;  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  '-'  ||  buffer[i]  ==  '+')break;	  if(buffer[i]    ==    '-'    ||    buffer[i]    ==    '+')    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	75	None	replace
743	[BUG]  [BUGGY]  result.append((  byte)buffer[i],  0,  length);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  byte)buffer[i],  0,  length);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  byte)buffer[i],  0,  length);	  result.append((    byte)buffer[i]);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	90	None	replace
744	[BUG]  [BUGGY]  if(buffer[i]  ==  0,  buffer[i]!=  null)  {  break;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  0,  buffer[i]!=  null)  {  break;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  0,  buffer[i]!=  null)  {  break;  }	  if(buffer[i]    ==    0    ||    buffer[i]!=    null)    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	87	None	replace
745	[BUG]  [BUGGY]  if(buffer[i]  ==  '0'  &&  buffer[i]  <  =  'Z')  {  break;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  '0'  &&  buffer[i]  <  =  'Z')  {  break;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  '0'  &&  buffer[i]  <  =  'Z')  {  break;  }	  if(buffer[i]    ==    '0'    ||    buffer[i]    ==    'A'    &&    buffer[i]    <    =    'Z')    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
746	[BUG]  [BUGGY]  if(buffer[i]!=  '0'  &&  buffer[i]  <  =  'Z')  {  break;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]!=  '0'  &&  buffer[i]  <  =  'Z')  {  break;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]!=  '0'  &&  buffer[i]  <  =  'Z')  {  break;  }	  if(buffer[i]    ==    '0'    ||    buffer[i]    ==    'A'    &&    buffer[i]    <    =    'Z')    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
747	[BUG]  [BUGGY]  if(buffer[i]  ==  null  ||  buffer[i].length()  ==  0)  {  break;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  null  ||  buffer[i].length()  ==  0)  {  break;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  null  ||  buffer[i].length()  ==  0)  {  break;  }	  if(buffer[i]    ==    null)    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	36	None	replace
748	[BUG]  [BUGGY]  result.append((  char)buffer[i].toString());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)buffer[i].toString());  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)buffer[i].toString());	  result.append((    char)buffer[i].getBytes());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	80	None	replace
749	[BUG]  [BUGGY]  result.append((  byte)buffer[i].charAt(offset));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  byte)buffer[i].charAt(offset));  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  byte)buffer[i].charAt(offset));	  result.append((    byte)buffer[i].charAt(i));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	93	None	replace
750	[BUG]  [BUGGY]  result.append('/');  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append('/');  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append('/');	  result.append('ufffd');    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	82	None	replace
751	[BUG]  [BUGGY]  if(buffer[i]  ==  '0'  &&  buffer[i]  <  =  '9'  ||  buffer[i]  ==  'a'  &&  buffer[i]  <  =  'z')  {  break;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  '0'  &&  buffer[i]  <  =  '9'  ||  buffer[i]  ==  'a'  &&  buffer[i]  <  =  'z')  {  break;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  '0'  &&  buffer[i]  <  =  '9'  ||  buffer[i]  ==  'a'  &&  buffer[i]  <  =  'z')  {  break;  }	  if(buffer[i]    ==    '0'    &&    buffer[i]    <    =    '9')    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	1	None	replace
752	[BUG]  [BUGGY]  if(buffer[i]  ==  '0'  &&  buffer[i]  <  =  '9'  ||  buffer[i]  ==  'A'  &&  buffer[i]  <  =  'Z')  {  break;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  '0'  &&  buffer[i]  <  =  '9'  ||  buffer[i]  ==  'A'  &&  buffer[i]  <  =  'Z')  {  break;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  '0'  &&  buffer[i]  <  =  '9'  ||  buffer[i]  ==  'A'  &&  buffer[i]  <  =  'Z')  {  break;  }	  if(buffer[i]    ==    '0'    &&    buffer[i]    <    =    '9')    {    break;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	1	None	replace
753	[BUG]  [BUGGY]  result.append(buffer[i]  -  offset);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append(buffer[i]  -  offset);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append(buffer[i]  -  offset);	  result.append(buffer[i]    +    offset);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	17	None	replace
754	[BUG]  [BUGGY]  throw  new  IllegalStateException( " ").equals(buffer,  i);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  throw  new  IllegalStateException( " ").equals(buffer,  i);  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	throw  new  IllegalStateException( " ").equals(buffer,  i);	  throw    new    IllegalStateException(   "   ".equals(buffer,    i));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	48	None	replace
755	[BUG]  [BUGGY]  throw  new  IllegalStateException( " ").equals(buffer,  i));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  throw  new  IllegalStateException( " ").equals(buffer,  i));  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	throw  new  IllegalStateException( " ").equals(buffer,  i));	  throw    new    IllegalStateException(   "   ".equals(buffer,    i));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	48	None	replace
756	[BUG]  [BUGGY]  if(buffer[i]  ==  't'  ||  buffer[i]  ==  'n'  ||  buffer[i]  ==  'r'  ||  buffer[i]  ==  'n'  ||  buffer[i]  ==  't')  {  continue;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  if(buffer[i]  ==  't'  ||  buffer[i]  ==  'n'  ||  buffer[i]  ==  'r'  ||  buffer[i]  ==  'n'  ||  buffer[i]  ==  't')  {  continue;  }  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	if(buffer[i]  ==  't'  ||  buffer[i]  ==  'n'  ||  buffer[i]  ==  'r'  ||  buffer[i]  ==  'n'  ||  buffer[i]  ==  't')  {  continue;  }	  if(buffer[i]    ==    'n'    ||    buffer[i]    ==    'r'    ||    buffer[i]    ==    'n'    ||    buffer[i]    ==    't')    {    continue;    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	91	None	replace
757	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ").printStackTrace();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( " ").printStackTrace();  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	throw  new  IllegalArgumentException( " ").printStackTrace();	  throw    new    IllegalArgumentException(   "   ".getMessage());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	44	None	replace
758	[BUG]  [BUGGY]  result.append((  char)(buffer[i]  >>  0));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length)  {  StringBuffer  result  =  new  StringBuffer(length);  intend  =  offset  +  length;  for  (int  i  =  offset;  i  <  end;  ++i)  {  if  (buffer[i]  ==  0)  {      [BUGGY]  result.append((  char)(buffer[i]  >>  0));  [BUGGY]      }  result.append((char)  buffer[i]);  }  return  result.toString();  }  [CLASS]  TarUtils  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  	projects/Compress7/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	99	99	1	replace	result.append((  char)(buffer[i]  >>  0));	  result.append((    char)(buffer[i]    }    );    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	107	None	replace
