bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  TimeSeries  copy  =(TimeSeries)this.data.get(startIndex  -  1);  [CE]  illegal  start  of  type  [FE]        IllegalArgumentException    [CONTEXT]    if  (start  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'start'  argument.   ");  }  if  (end  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'end'  argument.   ");  }  if  (start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException(     "Requires  start  on  or  before  end.   ");  }    [BUGGY]  TimeSeries  copy  =(TimeSeries)this.data.get(startIndex  -  1);  [BUGGY]    boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	931	931	1	replace	TimeSeries  copy  =(TimeSeries)this.data.get(startIndex  -  1);	      TimeSeries    copy    =(TimeSeries)this.data.get(startIndex);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
2	[BUG]  [BUGGY]  int  startIndex  =  getIndex(start,  this.data.size());  [CE]  illegal  start  of  type  [FE]        IllegalArgumentException    [CONTEXT]    if  (start  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'start'  argument.   ");  }  if  (end  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'end'  argument.   ");  }  if  (start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException(     "Requires  start  on  or  before  end.   ");  }    [BUGGY]  int  startIndex  =  getIndex(start,  this.data.size());  [BUGGY]    boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	931	931	1	replace	int  startIndex  =  getIndex(start,  this.data.size());	      int    startIndex    =    getIndex(start);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
3	[BUG]  [BUGGY]  int  count  =  this.data.size()  -  1;  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException    [CONTEXT]    if  (start  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'start'  argument.   ");  }  if  (end  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'end'  argument.   ");  }  if  (start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException(     "Requires  start  on  or  before  end.   ");  }    [BUGGY]  int  count  =  this.data.size()  -  1;  [BUGGY]    boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	931	931	1	replace	int  count  =  this.data.size()  -  1;	      int    count    =    this.data.size();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
4	[BUG]  [BUGGY]  TimeSeries  copy  =(TimeSeries)this.data.get(start  +  1);  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException    [CONTEXT]    if  (start  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'start'  argument.   ");  }  if  (end  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'end'  argument.   ");  }  if  (start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException(     "Requires  start  on  or  before  end.   ");  }    [BUGGY]  TimeSeries  copy  =(TimeSeries)this.data.get(start  +  1);  [BUGGY]    boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	931	931	1	replace	TimeSeries  copy  =(TimeSeries)this.data.get(start  +  1);	      TimeSeries    copy    =(TimeSeries)this.data.get(start);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
5	[BUG]  [BUGGY]  Boolean  emptyRange  =  false;  [CE]  illegal  start  of  type  [FE]        IllegalArgumentException    [CONTEXT]    if  (start  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'start'  argument.   ");  }  if  (end  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'end'  argument.   ");  }  if  (start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException(     "Requires  start  on  or  before  end.   ");  }    [BUGGY]  Boolean  emptyRange  =  false;  [BUGGY]    int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	931	931	1	replace	Boolean  emptyRange  =  false;	  boolean    emptyRange    =    true;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
6	[BUG]  [BUGGY]  int  startIndex  =  getIndex(start  +  1);  [CE]  illegal  start  of  type  [FE]        IllegalArgumentException    [CONTEXT]    if  (start  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'start'  argument.   ");  }  if  (end  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'end'  argument.   ");  }  if  (start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException(     "Requires  start  on  or  before  end.   ");  }    [BUGGY]  int  startIndex  =  getIndex(start  +  1);  [BUGGY]    boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	931	931	1	replace	int  startIndex  =  getIndex(start  +  1);	      int    startIndex    =    getIndex(start);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
7	[BUG]  [BUGGY]  long  startIndex  =  getIndex(start);  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException    [CONTEXT]    if  (start  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'start'  argument.   ");  }  if  (end  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'end'  argument.   ");  }  if  (start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException(     "Requires  start  on  or  before  end.   ");  }    [BUGGY]  long  startIndex  =  getIndex(start);  [BUGGY]    int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	931	931	1	replace	long  startIndex  =  getIndex(start);	      	non-compiled	[CE]  illegal  start  of  type	2	None	replace
8	[BUG]  [BUGGY]  TimeSeries  copy  =(TimeSeries)this.data.get(end);  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException    [CONTEXT]    if  (start  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'start'  argument.   ");  }  if  (end  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'end'  argument.   ");  }  if  (start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException(     "Requires  start  on  or  before  end.   ");  }    [BUGGY]  TimeSeries  copy  =(TimeSeries)this.data.get(end);  [BUGGY]    boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	931	931	1	replace	TimeSeries  copy  =(TimeSeries)this.data.get(end);	      TimeSeries    copy    =(TimeSeries)this.data.get(start);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
