bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  TimeSeries  copy  =(TimeSeries)this.data.get(startIndex  +  1);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      throws  CloneNotSupportedException  {  if  (start  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'start'  argument.     ");  }      [BUGGY]  TimeSeries  copy  =(TimeSeries)this.data.get(startIndex  +  1);  [BUGGY]      if  (end  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'end'  argument.     ");  }  if  (start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException(       "Requires  start  on  or  before  end.     ");  }  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	924	924	1	replace	TimeSeries  copy  =(TimeSeries)this.data.get(startIndex  +  1);	  TimeSeries    copy    =(TimeSeries)this.data.get(startIndex    -    1);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
2	[BUG]  [BUGGY]  Thread.currentThread().interrupt(this);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      throws  CloneNotSupportedException  {  if  (start  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'start'  argument.     ");  }      [BUGGY]  Thread.currentThread().interrupt(this);  [BUGGY]      if  (end  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'end'  argument.     ");  }  if  (start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException(       "Requires  start  on  or  before  end.     ");  }  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	924	924	1	replace	Thread.currentThread().interrupt(this);	  Thread.currentThread().interrupt();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
3	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(this,  timePeriodClass);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      throws  CloneNotSupportedException  {  if  (start  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'start'  argument.     ");  }      [BUGGY]  Thread.currentThread().setContextClassLoader(this,  timePeriodClass);  [BUGGY]      if  (end  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'end'  argument.     ");  }  if  (start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException(       "Requires  start  on  or  before  end.     ");  }  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	924	924	1	replace	Thread.currentThread().setContextClassLoader(this,  timePeriodClass);	  Thread.currentThread().setContextClassLoader(this);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
4	[BUG]  [BUGGY]  long  startIndex  =  getIndex(end);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      throws  CloneNotSupportedException  {  if  (start  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'start'  argument.     ");  }      [BUGGY]  long  startIndex  =  getIndex(end);  [BUGGY]      if  (end  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'end'  argument.     ");  }  if  (start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException(       "Requires  start  on  or  before  end.     ");  }  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	924	924	1	replace	long  startIndex  =  getIndex(end);	  int    startIndex    =    getIndex(end);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
5	[BUG]  [BUGGY]  TimeSeries  copy  =(TimeSeries)this.data.get(endIndex  +  1);  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      throws  CloneNotSupportedException  {  if  (start  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'start'  argument.     ");  }      [BUGGY]  TimeSeries  copy  =(TimeSeries)this.data.get(endIndex  +  1);  [BUGGY]      if  (end  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'end'  argument.     ");  }  if  (start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException(       "Requires  start  on  or  before  end.     ");  }  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	924	924	1	replace	TimeSeries  copy  =(TimeSeries)this.data.get(endIndex  +  1);	  TimeSeries    copy    =(TimeSeries)this.data.get(start    +    1);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
6	[BUG]  [BUGGY]  Class  <?>  end  =  timePeriodClass.getRange();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                IllegalArgumentException      [CONTEXT]      throws  CloneNotSupportedException  {  if  (start  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'start'  argument.     ");  }      [BUGGY]  Class  <?>  end  =  timePeriodClass.getRange();  [BUGGY]      if  (end  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'end'  argument.     ");  }  if  (start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException(       "Requires  start  on  or  before  end.     ");  }  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	924	924	1	replace	Class  <?>  end  =  timePeriodClass.getRange();	  Class    <?>    end    =    start.getRange();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	21	None	replace
7	[BUG]  [BUGGY]  int  count  =  getCount(start);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      throws  CloneNotSupportedException  {  if  (start  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'start'  argument.     ");  }      [BUGGY]  int  count  =  getCount(start);  [BUGGY]      if  (end  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'end'  argument.     ");  }  if  (start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException(       "Requires  start  on  or  before  end.     ");  }  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	924	924	1	replace	int  count  =  getCount(start);	  int    count    =    getIndex(end);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
8	[BUG]  [BUGGY]  int  count  =  getIndex(startIndex  +  1);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      throws  CloneNotSupportedException  {  if  (start  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'start'  argument.     ");  }      [BUGGY]  int  count  =  getIndex(startIndex  +  1);  [BUGGY]      if  (end  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'end'  argument.     ");  }  if  (start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException(       "Requires  start  on  or  before  end.     ");  }  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	924	924	1	replace	int  count  =  getIndex(startIndex  +  1);	  int    count    =    getIndex(start    +    1);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
9	[BUG]  [BUGGY]  Class  <?>  end  =  timePeriodClass.getClass();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]              IllegalArgumentException      [CONTEXT]      throws  CloneNotSupportedException  {  if  (start  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'start'  argument.     ");  }      [BUGGY]  Class  <?>  end  =  timePeriodClass.getClass();  [BUGGY]      if  (end  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'end'  argument.     ");  }  if  (start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException(       "Requires  start  on  or  before  end.     ");  }  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	924	924	1	replace	Class  <?>  end  =  timePeriodClass.getClass();	  Class    <?>    end    =    start.getClass();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	20	None	replace
10	[BUG]  [BUGGY]  Class  <?>  end  =  this.timePeriodClass.getClass();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                IllegalArgumentException      [CONTEXT]      throws  CloneNotSupportedException  {  if  (start  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'start'  argument.     ");  }      [BUGGY]  Class  <?>  end  =  this.timePeriodClass.getClass();  [BUGGY]      if  (end  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'end'  argument.     ");  }  if  (start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException(       "Requires  start  on  or  before  end.     ");  }  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	924	924	1	replace	Class  <?>  end  =  this.timePeriodClass.getClass();	  Class    <?>    end    =    start.getClass();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	20	None	replace
11	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(this,  start);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      throws  CloneNotSupportedException  {  if  (start  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'start'  argument.     ");  }      [BUGGY]  Thread.currentThread().setContextClassLoader(this,  start);  [BUGGY]      if  (end  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'end'  argument.     ");  }  if  (start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException(       "Requires  start  on  or  before  end.     ");  }  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	924	924	1	replace	Thread.currentThread().setContextClassLoader(this,  start);	  Thread.currentThread().setContextClassLoader(this);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
12	[BUG]  [BUGGY]  long  endIndex  =  getIndex(end);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      throws  CloneNotSupportedException  {  if  (start  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'start'  argument.     ");  }      [BUGGY]  long  endIndex  =  getIndex(end);  [BUGGY]      throw  new  IllegalArgumentException(     "Null  'end'  argument.     ");  }  if  (start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException(       "Requires  start  on  or  before  end.     ");  }  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	924	924	1	replace	long  endIndex  =  getIndex(end);	  long    endIndex    =    getIndex(start);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
13	[BUG]  [BUGGY]  Class  <?>  end  =  this.start.getRange();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                IllegalArgumentException      [CONTEXT]      throws  CloneNotSupportedException  {  if  (start  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'start'  argument.     ");  }      [BUGGY]  Class  <?>  end  =  this.start.getRange();  [BUGGY]      if  (end  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'end'  argument.     ");  }  if  (start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException(       "Requires  start  on  or  before  end.     ");  }  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	924	924	1	replace	Class  <?>  end  =  this.start.getRange();	  Class    <?>    end    =    start.getRange();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	21	None	replace
14	[BUG]  [BUGGY]  int  endIndex  =  getIndex(end  -  1);  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      throws  CloneNotSupportedException  {  if  (start  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'start'  argument.     ");  }      [BUGGY]  int  endIndex  =  getIndex(end  -  1);  [BUGGY]      throw  new  IllegalArgumentException(     "Null  'end'  argument.     ");  }  if  (start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException(       "Requires  start  on  or  before  end.     ");  }  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	924	924	1	replace	int  endIndex  =  getIndex(end  -  1);	  int    endIndex    =    getIndex(end);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
15	[BUG]  [BUGGY]  int  count  =  getIndex(start,  end);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      throws  CloneNotSupportedException  {  if  (start  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'start'  argument.     ");  }      [BUGGY]  int  count  =  getIndex(start,  end);  [BUGGY]      if  (end  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'end'  argument.     ");  }  if  (start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException(       "Requires  start  on  or  before  end.     ");  }  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	924	924	1	replace	int  count  =  getIndex(start,  end);	  int    count    =    getIndex(end);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
16	[BUG]  [BUGGY]  Class  <?>  end  =  start.getPeriod();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                IllegalArgumentException      [CONTEXT]      throws  CloneNotSupportedException  {  if  (start  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'start'  argument.     ");  }      [BUGGY]  Class  <?>  end  =  start.getPeriod();  [BUGGY]      if  (end  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'end'  argument.     ");  }  if  (start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException(       "Requires  start  on  or  before  end.     ");  }  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	924	924	1	replace	Class  <?>  end  =  start.getPeriod();	  Class    <?>    end    =    start.getRange();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	21	None	replace
17	[BUG]  [BUGGY]  Class  <?>  end  =  start.getPeriodClass();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                  IllegalArgumentException      [CONTEXT]      throws  CloneNotSupportedException  {  if  (start  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'start'  argument.     ");  }      [BUGGY]  Class  <?>  end  =  start.getPeriodClass();  [BUGGY]      if  (end  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'end'  argument.     ");  }  if  (start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException(       "Requires  start  on  or  before  end.     ");  }  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	924	924	1	replace	Class  <?>  end  =  start.getPeriodClass();	  Class    <?>    end    =    start.getRange();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	21	None	replace
18	[BUG]  [BUGGY]  int  count  =  getIndex(end  +  1);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      throws  CloneNotSupportedException  {  if  (start  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'start'  argument.     ");  }      [BUGGY]  int  count  =  getIndex(end  +  1);  [BUGGY]      if  (end  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'end'  argument.     ");  }  if  (start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException(       "Requires  start  on  or  before  end.     ");  }  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	924	924	1	replace	int  count  =  getIndex(end  +  1);	  int    count    =    getIndex(start    +    1);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
19	[BUG]  [BUGGY]  Thread.currentThread().intermediate().setContextClassLoader(this);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      throws  CloneNotSupportedException  {  if  (start  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'start'  argument.     ");  }      [BUGGY]  Thread.currentThread().intermediate().setContextClassLoader(this);  [BUGGY]      if  (end  ==  null)  {  throw  new  IllegalArgumentException(     "Null  'end'  argument.     ");  }  if  (start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException(       "Requires  start  on  or  before  end.     ");  }  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	924	924	1	replace	Thread.currentThread().intermediate().setContextClassLoader(this);	  Thread.currentThread().setContextClassLoader(this);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
