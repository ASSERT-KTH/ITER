bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	original_buggy	action	patch	execution_result	diagnosis	previous_bug_id	new_failing_test_number
1	[BUG]  [BUGGY]  boolean  added  =  this.data.contains(item.getItemCount(),  notify);  [CE]  class  or  interface  expected  [CONTEXT]    b.append(   "You  are  attempting  to  add  an  observation  for     ");  b.append(   "the  time  period     ");  b.append(item.getPeriod().toString());  b.append(   "  but  the  series  already  contains  an  observation   ");  b.append(   "  for  that  time  period.  Duplicates  are  not     ");  b.append(   "permitted.Try  using  the  addOrUpdate()  method.   ");  throw  new  SeriesException(b.toString());  }  }  }    [BUGGY]  boolean  added  =  this.data.contains(item.getItemCount(),  notify);  [BUGGY]    if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  removeAgedItems(false);//  remove  old  items  if  necessary,  but    if  (notify)  {  fireSeriesChanged();  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	536	536	1	replace	boolean  added  =  this.data.contains(item.getItemCount(),  notify);	      boolean    added    =    this.data.contains(item.getItemCount());    	non-compiled	[CE]  class  or  interface  expected	1443	None
2	[BUG]  [BUGGY]  boolean  added  =  this.data.contains(item.getItemCount()  -  1);  [CE]  class  or  interface  expected  [CONTEXT]    b.append(   "You  are  attempting  to  add  an  observation  for     ");  b.append(   "the  time  period     ");  b.append(item.getPeriod().toString());  b.append(   "  but  the  series  already  contains  an  observation   ");  b.append(   "  for  that  time  period.  Duplicates  are  not     ");  b.append(   "permitted.Try  using  the  addOrUpdate()  method.   ");  throw  new  SeriesException(b.toString());  }  }  }    [BUGGY]  boolean  added  =  this.data.contains(item.getItemCount()  -  1);  [BUGGY]    if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  removeAgedItems(false);//  remove  old  items  if  necessary,  but    if  (notify)  {  fireSeriesChanged();  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	536	536	1	replace	boolean  added  =  this.data.contains(item.getItemCount()  -  1);	      boolean    added    =    this.data.contains(item.getItemCount());    	non-compiled	[CE]  class  or  interface  expected	1443	None
25	[BUG]  [BUGGY]  endIndex  =  getIndex(startIndex,  end);  [CE]  illegal  start  of  type  [CONTEXT]    startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }    [BUGGY]  endIndex  =  getIndex(startIndex,  end);  [BUGGY]    if  (endIndex  <  0)  {  emptyRange  =  true;  }  if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  }  else  {  return  createCopy(startIndex,  endIndex);  }  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	944	944	1	replace	endIndex  =  getIndex(startIndex,  end);	      endIndex    =    getIndex(startIndex);    	non-compiled	[CE]  illegal  start  of  type	1177	None
26	[BUG]  [BUGGY]  endIndex  =  getIndex(startIndex,  endIndex);  [CE]  illegal  start  of  type  [CONTEXT]    startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }    [BUGGY]  endIndex  =  getIndex(startIndex,  endIndex);  [BUGGY]    if  (endIndex  <  0)  {  emptyRange  =  true;  }  if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  }  else  {  return  createCopy(startIndex,  endIndex);  }  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	944	944	1	replace	endIndex  =  getIndex(startIndex,  endIndex);	      endIndex    =    getIndex(startIndex);    	non-compiled	[CE]  illegal  start  of  type	1177	None
49	[BUG]  [BUGGY]  peg(name.getInstance());  [CE]  illegal  start  of  expression  [CONTEXT]    public  TimeSeries(Comparable  name)  {  this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  Day.class);    [BUGGY]  peg(name.getInstance());  [BUGGY]    }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Comparable)  Comparable  name  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.4082482904638631	144	144	1	replace	peg(name.getInstance());	      fireSeriesChanged();    	non-compiled	[CE]  illegal  start  of  expression	3602	None
73	[BUG]  [BUGGY]  add(period);  [CE]  illegal  start  of  expression  [CONTEXT]    public  void  add(RegularTimePeriod  period,  double  value)  {  add(period,  value,  true);    [BUGGY]  add(period);  [BUGGY]      [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  double  value  [VARIABLES]  boolean  double  value  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.2581988897471611	562	562	1	replace	add(period);	  fireSeriesChanged();    	non-compiled	[CE]  illegal  start  of  expression	2497	None
146	[BUG]  [BUGGY]  regularTimePeriod  end  =(RegularTimePeriod)this.data.get(startIndex);  [CE]  cannot  find  symbol  [CONTEXT]     "Requires  start  on  or  before  end.   ");  }  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }    [BUGGY]  regularTimePeriod  end  =(RegularTimePeriod)this.data.get(startIndex);  [BUGGY]    int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  emptyRange  =  true;  }  if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	939	939	1	replace	regularTimePeriod  end  =(RegularTimePeriod)this.data.get(startIndex);	      regularTimePeriod    start    =(RegularTimePeriod)this.data.get(startIndex);    	non-compiled	[CE]  cannot  find  symbol	1946	None
169	[BUG]  [BUGGY]  add(item,  notify,  value,  false);  [CE]  no  suitable  method  found  for  add(TimeSeriesDataItem,boolean,double,boolean)  [CONTEXT]    public  void  add(RegularTimePeriod  period,  double  value,  boolean  notify)  {  TimeSeriesDataItem  item  =  new  TimeSeriesDataItem(period,  value);    [BUGGY]  add(item,  notify,  value,  false);  [BUGGY]    }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  double  value  boolean  notify  [VARIABLES]  boolean  notify  double  value  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.2581988897471611	575	575	1	replace	add(item,  notify,  value,  false);	  add(item,    notify,    false);    	non-compiled	[CE]  no  suitable  method  found  for  add(TimeSeriesDataItem,boolean,double,boolean)	3050	None
170	[BUG]  [BUGGY]  add(item,  value,  notify,  false);  [CE]  no  suitable  method  found  for  add(TimeSeriesDataItem,double,boolean,boolean)  [CONTEXT]    public  void  add(RegularTimePeriod  period,  double  value,  boolean  notify)  {  TimeSeriesDataItem  item  =  new  TimeSeriesDataItem(period,  value);    [BUGGY]  add(item,  value,  notify,  false);  [BUGGY]    }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  double  value  boolean  notify  [VARIABLES]  boolean  notify  double  value  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.2581988897471611	575	575	1	replace	add(item,  value,  notify,  false);	  add(item,    notify,    false);    	non-compiled	[CE]  no  suitable  method  found  for  add(TimeSeriesDataItem,double,boolean,boolean)	3050	None
241	[BUG]  [BUGGY]  int  endIndex  =  getIndex(end);  [CE]  cannot  find  symbol  end  [CONTEXT]    public  void  add(RegularTimePeriod  period,  double  value,  boolean  notify)  {  TimeSeriesDataItem  item  =  new  TimeSeriesDataItem(period,  value);    [BUGGY]  int  endIndex  =  getIndex(end);  [BUGGY]    add(item,  notify);  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  double  value  boolean  notify  [VARIABLES]  boolean  notify  double  value  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.2581988897471611	575	575	1	replace	int  endIndex  =  getIndex(end);	      item.setValue(value);    fireSeriesChanged();    	non-compiled	[CE]  cannot  find  symbol  end	1681	None
242	[BUG]  [BUGGY]  endIndex  =  getIndex(end);  [CE]  cannot  find  symbol  endIndex  [CONTEXT]    public  void  add(RegularTimePeriod  period,  double  value,  boolean  notify)  {  TimeSeriesDataItem  item  =  new  TimeSeriesDataItem(period,  value);    [BUGGY]  endIndex  =  getIndex(end);  [BUGGY]    add(item,  notify);  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  double  value  boolean  notify  [VARIABLES]  boolean  notify  double  value  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.2581988897471611	575	575	1	replace	endIndex  =  getIndex(end);	      item.setValue(value);    fireSeriesChanged();    	non-compiled	[CE]  cannot  find  symbol  endIndex	1681	None
267	[BUG]  [BUGGY]  add(period,  value,  false);  set(period,  value,  false);  [CE]  cannot  find  symbol  [CONTEXT]    public  void  add(RegularTimePeriod  period,  double  value)  {      [BUGGY]  add(period,  value,  false);  set(period,  value,  false);  [BUGGY]    }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  double  value  [VARIABLES]  boolean  double  value  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.2581988897471611	561	561	1	replace	add(period,    value,    false);    set(period,  value,  false);	  	non-compiled	[CE]  cannot  find  symbol	1081	None
290	[BUG]  [BUGGY]  for(int  index  =  0;  index  <  this.data.size();  ++index)  {  TimeSeriesDataItem.getDataItem(this.data);  }  [CE]  variable  index  is  already  defined  in  method  getDataItem(int)  [CONTEXT]    public  TimeSeriesDataItem  getDataItem(int  index)  {    [BUGGY]  for(int  index  =  0;  index  <  this.data.size();  ++index)  {  TimeSeriesDataItem.getDataItem(this.data);  }  [BUGGY]    return  (TimeSeriesDataItem)  this.data.get(index);  }  [CLASS]  TimeSeries  [METHOD]  getDataItem  [RETURN_TYPE]  TimeSeriesDataItem  int  index  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  long  maximumItemAge  periods  serialVersionUID  int  count  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	341	341	1	replace	for(int  index  =  0;  index  <  this.data.size();  ++index)  {  TimeSeriesDataItem.getDataItem(this.data);  }	      for(int    index    =    0;    index    <    this.data.size();    ++index)    {    TimeSeriesDataItem.getDataItem(index);    }    	non-compiled	[CE]  variable  index  is  already  defined  in  method  getDataItem(int)	4923	None
313	[BUG]  [BUGGY]  item.setValue(value);  notify;  [CE]  not  a  statement  [CONTEXT]    public  void  add(RegularTimePeriod  period,  Number  value,  boolean  notify)  {  TimeSeriesDataItem  item  =  new  TimeSeriesDataItem(period,  value);    [BUGGY]  item.setValue(value);  notify;  [BUGGY]    add(item,  notify);  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  Number  value  boolean  notify  [VARIABLES]  boolean  notify  Number  value  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	603	603	1	replace	item.setValue(value);  notify;	      item.setValue(value);    fireSeriesChanged();    	non-compiled	[CE]  not  a  statement	2042	None
314	[BUG]  [BUGGY]  item.setValue(value,  notify);  fireSeriesChanged();  [CE]  method  setValue  in  class  TimeSeriesDataItem  cannot  be  applied  to  given  types;  [CONTEXT]    public  void  add(RegularTimePeriod  period,  Number  value,  boolean  notify)  {  TimeSeriesDataItem  item  =  new  TimeSeriesDataItem(period,  value);    [BUGGY]  item.setValue(value,  notify);  fireSeriesChanged();  [BUGGY]    add(item,  notify);  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  Number  value  boolean  notify  [VARIABLES]  boolean  notify  Number  value  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	603	603	1	replace	item.setValue(value,  notify);  fireSeriesChanged();	      item.setValue(value);    fireSeriesChanged();    	non-compiled	[CE]  method  setValue  in  class  TimeSeriesDataItem  cannot  be  applied  to  given  types;	2042	None
337	[BUG]  [BUGGY]  this.data  =  new  LinkedList  <  String>();  [CE]  generics  are  not  supported  in  -source  1.4  [CONTEXT]    public  TimeSeries(Comparable  name,  Class  timePeriodClass)  {  this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  timePeriodClass);    [BUGGY]  this.data  =  new  LinkedList  <  String>();  [BUGGY]      [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	157	157	1	replace	this.data  =  new  LinkedList  <  String>();	  this.data    =    new    ArrayList    <    String>();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	1994	None
338	[BUG]  [BUGGY]  this.data  =  new  ArrayList  <  String>(timePeriodClass);  [CE]  generics  are  not  supported  in  -source  1.4  [CONTEXT]    public  TimeSeries(Comparable  name,  Class  timePeriodClass)  {  this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  timePeriodClass);    [BUGGY]  this.data  =  new  ArrayList  <  String>(timePeriodClass);  [BUGGY]      [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	157	157	1	replace	this.data  =  new  ArrayList  <  String>(timePeriodClass);	  this.data    =    new    ArrayList    <    String>();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	1994	None
362	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]    throw  new  IllegalArgumentException(   "Null  'start'  argument.   ");  }  if  (end  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'end'  argument.   ");  }  if  (start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException(     "Requires  start  on  or  before  end.   ");  }  boolean  emptyRange  =  false;    [BUGGY]  int  startIndex  =  this.data.indexOf(start);  [BUGGY]    if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	932	932	1	add	int  startIndex  =  this.data.indexOf(start);	      	compilable	  [FE]  AssertionFailedError	2091	1
363	[BUG]  [BUGGY]  int  startIndex  =  this.data.indexOf(start);  [FE]  AssertionFailedError  [CONTEXT]    throw  new  IllegalArgumentException(   "Null  'start'  argument.   ");  }  if  (end  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'end'  argument.   ");  }  if  (start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException(     "Requires  start  on  or  before  end.   ");  }  boolean  emptyRange  =  false;    [BUGGY]  int  startIndex  =  this.data.indexOf(start);  [BUGGY]    if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	932	932	1	replace	int  startIndex  =  this.data.indexOf(start);	      	compilable	  [FE]  AssertionFailedError	2091	1
385	[BUG]  [BUGGY]  this.data.add(item,  last,  notify);  [CE]  no  suitable  method  found  for  add(TimeSeriesDataItem,RegularTimePeriod,boolean)  [CONTEXT]    if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {    [BUGGY]  this.data.add(item,  last,  notify);  [BUGGY]    this.data.add(item);  added  =  true;  }  else  {  int  index  =  Collections.binarySearch(this.data,  item);  if  (index  <  0)  {  this.data.add(-index  -  1,  item);  added  =  true;  }  else  {  StringBuffer  b  =  new  StringBuffer();  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	515	515	1	replace	this.data.add(item,  last,  notify);	      this.data.add(item,    last);    	non-compiled	[CE]  no  suitable  method  found  for  add(TimeSeriesDataItem,RegularTimePeriod,boolean)	482	None
409	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);    [BUGGY]  this.domain  =  domain  +  DEFAULT_DOMAIN_DESCRIPTION;  this.domain  =  domain  +  DEFAULT_DOMAIN_DESCRIPTION;  [BUGGY]    this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	175	175	1	add	this.domain    =    domain    +    DEFAULT_DOMAIN_DESCRIPTION;    this.domain  =  domain  +  DEFAULT_DOMAIN_DESCRIPTION;	  	compilable	  [FE]  IllegalArgumentException	422	1
410	[BUG]  [BUGGY]  this.domain  =  domain  +  DEFAULT_DOMAIN_DESCRIPTION;  this.domain  =  domain  +  DEFAULT_DOMAIN_DESCRIPTION;  [FE]  IllegalArgumentException  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);    [BUGGY]  this.domain  =  domain  +  DEFAULT_DOMAIN_DESCRIPTION;  this.domain  =  domain  +  DEFAULT_DOMAIN_DESCRIPTION;  [BUGGY]    this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	175	175	1	replace	this.domain    =    domain    +    DEFAULT_DOMAIN_DESCRIPTION;    this.domain  =  domain  +  DEFAULT_DOMAIN_DESCRIPTION;	  	compilable	  [FE]  IllegalArgumentException	422	1
410	[BUG]  [BUGGY]  this.domain  =  domain  +  DEFAULT_DOMAIN_DESCRIPTION;  this.domino  =  domain  +  DEFAULT_DOMAIN_DESCRIPTION;  [CE]  cannot  find  symbol  domino  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);    [BUGGY]  this.domain  =  domain  +  DEFAULT_DOMAIN_DESCRIPTION;  this.domino  =  domain  +  DEFAULT_DOMAIN_DESCRIPTION;  [BUGGY]    this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	175	175	1	replace	this.domain    =    domain    +    DEFAULT_DOMAIN_DESCRIPTION;    this.domino  =  domain  +  DEFAULT_DOMAIN_DESCRIPTION;	  	non-compiled	[CE]  cannot  find  symbol  domino	422	None
411	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);    [BUGGY]  this.domain  =  domain  +  DEFAULT_DOMAIN_DESCRIPTION;  this.range  =  domain  +  DEFAULT_DOMAIN_DESCRIPTION;  [BUGGY]    this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	175	175	1	add	this.domain    =    domain    +    DEFAULT_DOMAIN_DESCRIPTION;    this.range  =  domain  +  DEFAULT_DOMAIN_DESCRIPTION;	  	compilable	  [FE]  IllegalArgumentException	422	1
412	[BUG]  [BUGGY]  this.domain  =  domain  +  DEFAULT_DOMAIN_DESCRIPTION;  this.range  =  domain  +  DEFAULT_DOMAIN_DESCRIPTION;  [FE]  IllegalArgumentException  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);    [BUGGY]  this.domain  =  domain  +  DEFAULT_DOMAIN_DESCRIPTION;  this.range  =  domain  +  DEFAULT_DOMAIN_DESCRIPTION;  [BUGGY]    this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	175	175	1	replace	this.domain    =    domain    +    DEFAULT_DOMAIN_DESCRIPTION;    this.range  =  domain  +  DEFAULT_DOMAIN_DESCRIPTION;	  	compilable	  [FE]  IllegalArgumentException	422	1
434	[BUG]  [BUGGY]  while(this.timePeriodClass!=  null  &&  item.getPeriod().compareTo(this.timePeriodClass)>  0)  {  this.data.add(item);  added  =  true;  [CE]  illegal  start  of  expression  [CONTEXT]    b.append(   "is     ");  b.append(item.getPeriod().getClass().getName());  b.append(   ",  but  the  TimeSeries  is  expecting  an  instance  of     ");  b.append(this.timePeriodClass.getName());  b.append(   ".   ");  throw  new  SeriesException(b.toString());  }  boolean  added  =  false;    [BUGGY]  while(this.timePeriodClass!=  null  &&  item.getPeriod().compareTo(this.timePeriodClass)>  0)  {  this.data.add(item);  added  =  true;  [BUGGY]    int  count  =  getItemCount();  if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  added  =  true;  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	507	507	1	replace	while(this.timePeriodClass!=  null  &&  item.getPeriod().compareTo(this.timePeriodClass)>  0)  {  this.data.add(item);  added  =  true;	      while(item!=    null    &&    item.getPeriod().compareTo(this.timePeriodClass)    <    0)    {    this.data.add(item);    added    =    true;    	non-compiled	[CE]  illegal  start  of  expression	362	None
457	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]    throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(   "Requires  start  >=  0.   ");  }    [BUGGY]      if(end  <  start)  {  throw  new  IllegalArgumentException(   "Requires  start  >=  end.   ");  }  if(end  <  start)  {  throw  new  IllegalArgumentException( "Requires  start  >=  end.   ");  }  [BUGGY]    if  (end  <  start)  {  throw  new  IllegalArgumentException(   "Requires  start  <=  end.   ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	882	882	1	add	        if(end    <    start)    {    throw    new    IllegalArgumentException(   "Requires    start    >=    end.   ");    }    if(end  <  start)  {  throw  new  IllegalArgumentException( "Requires  start  >=  end.   ");  }	  	compilable	  [FE]  IllegalArgumentException	3194	1
458	[BUG]  [BUGGY]      if(end  <  start)  {  throw  new  IllegalArgumentException(   "Requires  start  >=  end.   ");  }  if(end  <  start)  {  throw  new  IllegalArgumentException( "Requires  start  >=  end.   ");  }  [FE]  IllegalArgumentException  [CONTEXT]    throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(   "Requires  start  >=  0.   ");  }    [BUGGY]      if(end  <  start)  {  throw  new  IllegalArgumentException(   "Requires  start  >=  end.   ");  }  if(end  <  start)  {  throw  new  IllegalArgumentException( "Requires  start  >=  end.   ");  }  [BUGGY]    if  (end  <  start)  {  throw  new  IllegalArgumentException(   "Requires  start  <=  end.   ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	882	882	1	replace	        if(end    <    start)    {    throw    new    IllegalArgumentException(   "Requires    start    >=    end.   ");    }    if(end  <  start)  {  throw  new  IllegalArgumentException( "Requires  start  >=  end.   ");  }	  	compilable	  [FE]  IllegalArgumentException	3194	1
481	[BUG]  [BUGGY]  item.setValue(value);  [CE]  illegal  start  of  expression  [CONTEXT]    public  void  add(RegularTimePeriod  period,  Number  value)  {  add(period,  value,  true);    [BUGGY]  item.setValue(value);  [BUGGY]      [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  Number  value  [VARIABLES]  boolean  Number  value  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	589	589	1	replace	item.setValue(value);	  this.data.add(period,    value);    	non-compiled	[CE]  illegal  start  of  expression	1562	None
482	[BUG]  [BUGGY]  item.setData(value);  [CE]  illegal  start  of  expression  [CONTEXT]    public  void  add(RegularTimePeriod  period,  Number  value)  {  add(period,  value,  true);    [BUGGY]  item.setData(value);  [BUGGY]      [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  Number  value  [VARIABLES]  boolean  Number  value  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	589	589	1	replace	item.setData(value);	  this.data.add(period,    value);    	non-compiled	[CE]  illegal  start  of  expression	1562	None
506	[BUG]  [BUGGY]  int  count  =  getItemCount(period);  [CE]  illegal  start  of  type  [CONTEXT]    public  int  getIndex(RegularTimePeriod  period)  {    [BUGGY]  int  count  =  getItemCount(period);  [BUGGY]    if  (period  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'period'  argument.   ");  }  TimeSeriesDataItem  dummy  =  new  TimeSeriesDataItem(  period,  Integer.MIN_VALUE);  return  Collections.binarySearch(this.data,  dummy);  }  [CLASS]  TimeSeries  [METHOD]  getIndex  [RETURN_TYPE]  int  RegularTimePeriod  period  [VARIABLES]  boolean  TimeSeriesDataItem  dummy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.3333333333333333	430	430	1	replace	int  count  =  getItemCount(period);	      int    count    =    getItemCount();    	non-compiled	[CE]  illegal  start  of  type	6604	None
530	[BUG]  [BUGGY]  while(dummy  ==  null)  {  dummy  =  new  TimeSeriesDataItem(period,  Integer.MIN_VALUE);  [CE]  illegal  start  of  expression  [CONTEXT]    public  int  getIndex(RegularTimePeriod  period)  {  if  (period  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'period'  argument.   ");  }  TimeSeriesDataItem  dummy  =  new  TimeSeriesDataItem(  period,  Integer.MIN_VALUE);    [BUGGY]  while(dummy  ==  null)  {  dummy  =  new  TimeSeriesDataItem(period,  Integer.MIN_VALUE);  [BUGGY]    return  Collections.binarySearch(this.data,  dummy);  }  [CLASS]  TimeSeries  [METHOD]  getIndex  [RETURN_TYPE]  int  RegularTimePeriod  period  [VARIABLES]  boolean  TimeSeriesDataItem  dummy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.3333333333333333	435	435	1	replace	while(dummy  ==  null)  {  dummy  =  new  TimeSeriesDataItem(period,  Integer.MIN_VALUE);	      while(dummy!=    null)    {    dummy    =    new    TimeSeriesDataItem(period,    Integer.MIN_VALUE);    	non-compiled	[CE]  illegal  start  of  expression	3025	None
554	[BUG]  [BUGGY]  this.data.add(period,  value,  notify,  null);  [CE]  no  suitable  method  found  for  add(RegularTimePeriod,Number,boolean,<null>)  [CONTEXT]    public  void  add(RegularTimePeriod  period,  Number  value,  boolean  notify)  {      [BUGGY]  this.data.add(period,  value,  notify,  null);  [BUGGY]    TimeSeriesDataItem  item  =  new  TimeSeriesDataItem(period,  value);  add(item,  notify);  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  Number  value  boolean  notify  [VARIABLES]  boolean  notify  Number  value  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	602	602	1	replace	this.data.add(period,  value,  notify,  null);	      this.data.add(period,    value,    notify);    	non-compiled	[CE]  no  suitable  method  found  for  add(RegularTimePeriod,Number,boolean,<null>)	2571	None
577	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;    [BUGGY]      this.maximumItemCount  =  getMaximumItemCount();  this.maximumItemCount  =  getMaximumItemCount();  [BUGGY]    this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	178	178	1	add	        this.maximumItemCount    =    getMaximumItemCount();    this.maximumItemCount  =  getMaximumItemCount();	  	compilable	  [FE]  IllegalArgumentException	649	1
578	[BUG]  [BUGGY]      this.maximumItemCount  =  getMaximumItemCount();  this.maximumItemCount  =  getMaximumItemCount();  [FE]  IllegalArgumentException  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;    [BUGGY]      this.maximumItemCount  =  getMaximumItemCount();  this.maximumItemCount  =  getMaximumItemCount();  [BUGGY]    this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	178	178	1	replace	        this.maximumItemCount    =    getMaximumItemCount();    this.maximumItemCount  =  getMaximumItemCount();	  	compilable	  [FE]  IllegalArgumentException	649	1
578	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;    [BUGGY]      this.maximumItemCount  =  getMaximumItemCount();  this.maximumItemAge  =  getMaximumItemAge();  [BUGGY]    this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	178	178	1	add	        this.maximumItemCount    =    getMaximumItemCount();    this.maximumItemAge  =  getMaximumItemAge();	  	compilable	  [FE]  IllegalArgumentException	649	1
579	[BUG]  [BUGGY]      this.maximumItemCount  =  getMaximumItemCount();  this.maximumItemAge  =  getMaximumItemAge();  [FE]  IllegalArgumentException  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;    [BUGGY]      this.maximumItemCount  =  getMaximumItemCount();  this.maximumItemAge  =  getMaximumItemAge();  [BUGGY]    this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	178	178	1	replace	        this.maximumItemCount    =    getMaximumItemCount();    this.maximumItemAge  =  getMaximumItemAge();	  	compilable	  [FE]  IllegalArgumentException	649	1
579	[BUG]  [BUGGY]      this.maximumItemCount  =  getMaximumItemCount();  this.maximumItemCount  =  getMinimumItemCount();  [CE]  cannot  find  symbol  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;    [BUGGY]      this.maximumItemCount  =  getMaximumItemCount();  this.maximumItemCount  =  getMinimumItemCount();  [BUGGY]    this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	178	178	1	replace	        this.maximumItemCount    =    getMaximumItemCount();    this.maximumItemCount  =  getMinimumItemCount();	  	non-compiled	[CE]  cannot  find  symbol	649	None
601	[BUG]  [BUGGY]      if(start  <  0)  {  throw  new  IllegalArgumentException(   "Requires  start  >=  0.   ");  }  if(start  <  0)  {  throw  new  IllegalArgumentException( "Requires  start  >=  0.   ");  consulted  if(end  <  start)  {  throw  new  IllegalArgumentException( "Requires  start  >=  end.   ");  }  [CE]  not  a  statement  [CONTEXT]    throws  CloneNotSupportedException  {    [BUGGY]      if(start  <  0)  {  throw  new  IllegalArgumentException(   "Requires  start  >=  0.   ");  }  if(start  <  0)  {  throw  new  IllegalArgumentException( "Requires  start  >=  0.   ");  consulted  if(end  <  start)  {  throw  new  IllegalArgumentException( "Requires  start  >=  end.   ");  }  [BUGGY]    if  (start  <  0)  {  throw  new  IllegalArgumentException(   "Requires  start  >=  0.   ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(   "Requires  start  <=  end.   ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	879	879	1	replace	        if(start    <    0)    {    throw    new    IllegalArgumentException(   "Requires    start    >=    0.   ");    }    if(start  <  0)  {  throw  new  IllegalArgumentException( "Requires  start  >=  0.   ");  consulted  if(end  <  start)  {  throw  new  IllegalArgumentException( "Requires  start  >=  end.   ");  }	  	non-compiled	[CE]  not  a  statement	265	None
602	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]    throws  CloneNotSupportedException  {    [BUGGY]      if(start  <  0)  {  throw  new  IllegalArgumentException(   "Requires  start  >=  0.   ");  }  if(start  <  0)  {  throw  new  IllegalArgumentException( "Requires  start  >=  0.   ");  }  if(end  <  start)  {  throw  new  IllegalArgumentException( "Requires  start  >=  end.   ");  }  [BUGGY]    if  (start  <  0)  {  throw  new  IllegalArgumentException(   "Requires  start  >=  0.   ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(   "Requires  start  <=  end.   ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	879	879	1	add	        if(start    <    0)    {    throw    new    IllegalArgumentException(   "Requires    start    >=    0.   ");    }    if(start  <  0)  {  throw  new  IllegalArgumentException( "Requires  start  >=  0.   ");  }  if(end  <  start)  {  throw  new  IllegalArgumentException( "Requires  start  >=  end.   ");  }	  	compilable	  [FE]  IllegalArgumentException	265	1
603	[BUG]  [BUGGY]      if(start  <  0)  {  throw  new  IllegalArgumentException(   "Requires  start  >=  0.   ");  }  if(start  <  0)  {  throw  new  IllegalArgumentException( "Requires  start  >=  0.   ");  }  if(end  <  start)  {  throw  new  IllegalArgumentException( "Requires  start  >=  end.   ");  }  [FE]  IllegalArgumentException  [CONTEXT]    throws  CloneNotSupportedException  {    [BUGGY]      if(start  <  0)  {  throw  new  IllegalArgumentException(   "Requires  start  >=  0.   ");  }  if(start  <  0)  {  throw  new  IllegalArgumentException( "Requires  start  >=  0.   ");  }  if(end  <  start)  {  throw  new  IllegalArgumentException( "Requires  start  >=  end.   ");  }  [BUGGY]    if  (start  <  0)  {  throw  new  IllegalArgumentException(   "Requires  start  >=  0.   ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(   "Requires  start  <=  end.   ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	879	879	1	replace	        if(start    <    0)    {    throw    new    IllegalArgumentException(   "Requires    start    >=    0.   ");    }    if(start  <  0)  {  throw  new  IllegalArgumentException( "Requires  start  >=  0.   ");  }  if(end  <  start)  {  throw  new  IllegalArgumentException( "Requires  start  >=  end.   ");  }	  	compilable	  [FE]  IllegalArgumentException	265	1
603	[BUG]  [BUGGY]      if(start  <  0)  {  throw  new  IllegalArgumentException(   "Requires  start  >=  0.   ");  }  if(start  <  0)  {  throw  new  IllegalArgumentException( "Requires  start  >=  0.   ");  ridden  if(end  <  start)  {  throw  new  IllegalArgumentException( "Requires  start  >=  end.   ");  }  [CE]  not  a  statement  [CONTEXT]    throws  CloneNotSupportedException  {    [BUGGY]      if(start  <  0)  {  throw  new  IllegalArgumentException(   "Requires  start  >=  0.   ");  }  if(start  <  0)  {  throw  new  IllegalArgumentException( "Requires  start  >=  0.   ");  ridden  if(end  <  start)  {  throw  new  IllegalArgumentException( "Requires  start  >=  end.   ");  }  [BUGGY]    if  (start  <  0)  {  throw  new  IllegalArgumentException(   "Requires  start  >=  0.   ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(   "Requires  start  <=  end.   ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	879	879	1	replace	        if(start    <    0)    {    throw    new    IllegalArgumentException(   "Requires    start    >=    0.   ");    }    if(start  <  0)  {  throw  new  IllegalArgumentException( "Requires  start  >=  0.   ");  ridden  if(end  <  start)  {  throw  new  IllegalArgumentException( "Requires  start  >=  end.   ");  }	  	non-compiled	[CE]  not  a  statement	265	None
626	[BUG]  [BUGGY]  this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  timePeriodClass,  true);  [CE]  no  suitable  constructor  found  for  TimeSeries(Comparable,String,String,Class,boolean)  [CONTEXT]    public  TimeSeries(Comparable  name,  Class  timePeriodClass)  {    [BUGGY]  this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  timePeriodClass,  true);  [BUGGY]    timePeriodClass);  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	155	156	1	replace	this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  timePeriodClass,  true);	  this(name,    DEFAULT_DOMAIN_DESCRIPTION,    DEFAULT_RANGE_DESCRIPTION,    timePeriodClass,    false);    	non-compiled	[CE]  no  suitable  constructor  found  for  TimeSeries(Comparable,String,String,Class,boolean)	7862	None
649	[BUG]  [BUGGY]  java.util.ArrayList();  this.data  =  new  java.util.ArrayList();  [CE]  cannot  find  symbol  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);    [BUGGY]  java.util.ArrayList();  this.data  =  new  java.util.ArrayList();  [BUGGY]    this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	175	175	1	replace	java.util.ArrayList();  this.data  =  new  java.util.ArrayList();	      java.util.ArrayList();    this.data    =    new    ArrayList();    	non-compiled	[CE]  cannot  find  symbol	3182	None
674	[BUG]  [BUGGY]  for(int  index  =  0;  index  <  this.data.size();  i++)  {  TimeSeriesDataItem  item  =(TimeSeriesDataItem)this.data.get(index);  if(item!=  null)  {  fireSeriesChanged();  }  [CE]  illegal  start  of  expression  [CONTEXT]    public  TimeSeriesDataItem  getDataItem(int  index)  {    [BUGGY]  for(int  index  =  0;  index  <  this.data.size();  i++)  {  TimeSeriesDataItem  item  =(TimeSeriesDataItem)this.data.get(index);  if(item!=  null)  {  fireSeriesChanged();  }  [BUGGY]    return  (TimeSeriesDataItem)  this.data.get(index);  }  [CLASS]  TimeSeries  [METHOD]  getDataItem  [RETURN_TYPE]  TimeSeriesDataItem  int  index  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  long  maximumItemAge  periods  serialVersionUID  int  count  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	341	341	1	replace	for(int  index  =  0;  index  <  this.data.size();  i++)  {  TimeSeriesDataItem  item  =(TimeSeriesDataItem)this.data.get(index);  if(item!=  null)  {  fireSeriesChanged();  }	      for(int    index    =    0;    index    <    this.data.size();    i++)    {    TimeSeriesDataItem    item    =(TimeSeriesDataItem)this.data.get(index);    if(item    ==    null)    {    fireSeriesChanged();    }    	non-compiled	[CE]  illegal  start  of  expression	4921	None
698	[BUG]  [BUGGY]  setPeriodClass(timePeriodClass);  [CE]  illegal  start  of  expression  [CONTEXT]    public  TimeSeries(Comparable  name,  Class  timePeriodClass)  {  this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  timePeriodClass);    [BUGGY]  setPeriodClass(timePeriodClass);  [BUGGY]      [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	157	157	1	replace	setPeriodClass(timePeriodClass);	  setDataItem(name,    timePeriodClass);    	non-compiled	[CE]  illegal  start  of  expression	7502	None
722	[BUG]  [BUGGY]  final  boolean  removed  =  true;  [CE]  cannot  assign  a  value  to  final  variable  removed  [CONTEXT]    public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();    [BUGGY]  final  boolean  removed  =  true;  [BUGGY]    while  ((latest  -  getTimePeriod(0).getSerialIndex())  >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	742	742	1	replace	final  boolean  removed  =  true;	  final    boolean    removed    =    false;    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  removed	6062	None
745	[BUG]  [BUGGY]  if(getItemCount()  >  0)  {  if(getItemCount()  >  0)  {  [CE]  illegal  start  of  expression  [CONTEXT]    public  void  removeAgedItems(boolean  notify)  {      [BUGGY]  if(getItemCount()  >  0)  {  if(getItemCount()  >  0)  {  [BUGGY]    long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())  >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	740	740	1	replace	if(getItemCount()    >    0)    {    if(getItemCount()  >  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	2066	None
747	[BUG]  [BUGGY]  if(getItemCount()  >  0)  {  if(getItemCount()  >  1)  {  [CE]  illegal  start  of  expression  [CONTEXT]    public  void  removeAgedItems(boolean  notify)  {      [BUGGY]  if(getItemCount()  >  0)  {  if(getItemCount()  >  1)  {  [BUGGY]    long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())  >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	740	740	1	replace	if(getItemCount()    >    0)    {    if(getItemCount()  >  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	2066	None
769	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;  this.range  =  range;    [BUGGY]      this.data  =  new  java.util.ArrayList();  this.data  =  new  java.util.ArrayList();  [BUGGY]    this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	177	177	1	add	        this.data    =    new    java.util.ArrayList();    this.data  =  new  java.util.ArrayList();	  	compilable	  [FE]  IllegalArgumentException	6183	1
770	[BUG]  [BUGGY]      this.data  =  new  java.util.ArrayList();  this.data  =  new  java.util.ArrayList();  [FE]  IllegalArgumentException  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;  this.range  =  range;    [BUGGY]      this.data  =  new  java.util.ArrayList();  this.data  =  new  java.util.ArrayList();  [BUGGY]    this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	177	177	1	replace	        this.data    =    new    java.util.ArrayList();    this.data  =  new  java.util.ArrayList();	  	compilable	  [FE]  IllegalArgumentException	6183	1
770	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;  this.range  =  range;    [BUGGY]      this.data  =  new  java.util.ArrayList();  if(this.data  ==  null)  {  this.data  =  new  java.util.ArrayList();  }  else  {  this.data  =  new  java.util.ArrayList();  }  [BUGGY]    this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	177	177	1	add	        this.data    =    new    java.util.ArrayList();    if(this.data  ==  null)  {  this.data  =  new  java.util.ArrayList();  }  else  {  this.data  =  new  java.util.ArrayList();  }	  	compilable	  [FE]  IllegalArgumentException	6183	1
771	[BUG]  [BUGGY]      this.data  =  new  java.util.ArrayList();  if(this.data  ==  null)  {  this.data  =  new  java.util.ArrayList();  }  else  {  this.data  =  new  java.util.ArrayList();  }  [FE]  IllegalArgumentException  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;  this.range  =  range;    [BUGGY]      this.data  =  new  java.util.ArrayList();  if(this.data  ==  null)  {  this.data  =  new  java.util.ArrayList();  }  else  {  this.data  =  new  java.util.ArrayList();  }  [BUGGY]    this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	177	177	1	replace	        this.data    =    new    java.util.ArrayList();    if(this.data  ==  null)  {  this.data  =  new  java.util.ArrayList();  }  else  {  this.data  =  new  java.util.ArrayList();  }	  	compilable	  [FE]  IllegalArgumentException	6183	1
771	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;  this.range  =  range;    [BUGGY]      this.data  =  new  java.util.ArrayList();  if(this.data  ==  null)  {  this.data  =  new  java.util.ArrayList();  }  [BUGGY]    this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	177	177	1	add	        this.data    =    new    java.util.ArrayList();    if(this.data  ==  null)  {  this.data  =  new  java.util.ArrayList();  }	  	compilable	  [FE]  IllegalArgumentException	6183	1
772	[BUG]  [BUGGY]      this.data  =  new  java.util.ArrayList();  if(this.data  ==  null)  {  this.data  =  new  java.util.ArrayList();  }  [FE]  IllegalArgumentException  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;  this.range  =  range;    [BUGGY]      this.data  =  new  java.util.ArrayList();  if(this.data  ==  null)  {  this.data  =  new  java.util.ArrayList();  }  [BUGGY]    this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	177	177	1	replace	        this.data    =    new    java.util.ArrayList();    if(this.data  ==  null)  {  this.data  =  new  java.util.ArrayList();  }	  	compilable	  [FE]  IllegalArgumentException	6183	1
793	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]    b.append(   "You  are  trying  to  add  data  where  the  time  period  class     ");  b.append(   "is     ");  b.append(item.getPeriod().getClass().getName());  b.append(   ",  but  the  TimeSeries  is  expecting  an  instance  of     ");  b.append(this.timePeriodClass.getName());  b.append(   ".   ");  throw  new  SeriesException(b.toString());  }      [BUGGY]      fireSeriesChanged();  fireSeriesChanged();  [BUGGY]    boolean  added  =  false;  int  count  =  getItemCount();  if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  added  =  true;  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	506	506	1	add	        fireSeriesChanged();    fireSeriesChanged();	  	compilable	  [FE]  IllegalArgumentException	5283	1
794	[BUG]  [BUGGY]      fireSeriesChanged();  fireSeriesChanged();  [FE]  IllegalArgumentException  [CONTEXT]    b.append(   "You  are  trying  to  add  data  where  the  time  period  class     ");  b.append(   "is     ");  b.append(item.getPeriod().getClass().getName());  b.append(   ",  but  the  TimeSeries  is  expecting  an  instance  of     ");  b.append(this.timePeriodClass.getName());  b.append(   ".   ");  throw  new  SeriesException(b.toString());  }      [BUGGY]      fireSeriesChanged();  fireSeriesChanged();  [BUGGY]    boolean  added  =  false;  int  count  =  getItemCount();  if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  added  =  true;  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	506	506	1	replace	        fireSeriesChanged();    fireSeriesChanged();	  	compilable	  [FE]  IllegalArgumentException	5283	1
794	[BUG]  [BUGGY]      fireSeriesChanged();  b.append( ":  the  TimeSeries  is  expecting  an  instance  of ");  [CE]  cannot  find  symbol  b  [CONTEXT]    b.append(   "You  are  trying  to  add  data  where  the  time  period  class     ");  b.append(   "is     ");  b.append(item.getPeriod().getClass().getName());  b.append(   ",  but  the  TimeSeries  is  expecting  an  instance  of     ");  b.append(this.timePeriodClass.getName());  b.append(   ".   ");  throw  new  SeriesException(b.toString());  }      [BUGGY]      fireSeriesChanged();  b.append( ":  the  TimeSeries  is  expecting  an  instance  of ");  [BUGGY]    boolean  added  =  false;  int  count  =  getItemCount();  if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  added  =  true;  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	506	506	1	replace	        fireSeriesChanged();    b.append( ":  the  TimeSeries  is  expecting  an  instance  of ");	  	non-compiled	[CE]  cannot  find  symbol  b	5283	None
866	[BUG]  [BUGGY]  this.data  =  new  java.util.ArrayList(this.domain,  this.range);  [CE]  no  suitable  constructor  found  for  ArrayList(String,String)  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;  this.range  =  range;    [BUGGY]  this.data  =  new  java.util.ArrayList(this.domain,  this.range);  [BUGGY]    this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	177	177	1	replace	this.data  =  new  java.util.ArrayList(this.domain,  this.range);	      this.data    =    new    java.util.ArrayList();    	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayList(String,String)	6184	None
890	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;    [BUGGY]  this.domain  = "domain ";  [BUGGY]    this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	176	176	1	add	this.domain  = "domain ";	      this.domain    =    domain;    	compilable	  [FE]  IllegalArgumentException	2474	1
891	[BUG]  [BUGGY]  this.domain  = "domain ";  [FE]  IllegalArgumentException  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;    [BUGGY]  this.domain  = "domain ";  [BUGGY]    this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	176	176	1	replace	this.domain  = "domain ";	      this.domain    =    domain;    	compilable	  [FE]  IllegalArgumentException	2474	1
913	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]    b.append(this.timePeriodClass.getName());  b.append(   ".   ");  throw  new  SeriesException(b.toString());  }  boolean  added  =  false;  int  count  =  getItemCount();  if  (count  ==  0)  {  this.data.add(item);    [BUGGY]      fireSeriesChanged();  fireSeriesChanged();  [BUGGY]    added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  added  =  true;  }  else  {  int  index  =  Collections.binarySearch(this.data,  item);  if  (index  <  0)  {  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	510	510	1	add	        fireSeriesChanged();    fireSeriesChanged();	  	compilable	  [FE]  IllegalArgumentException	5341	1
914	[BUG]  [BUGGY]      fireSeriesChanged();  fireSeriesChanged();  [FE]  IllegalArgumentException  [CONTEXT]    b.append(this.timePeriodClass.getName());  b.append(   ".   ");  throw  new  SeriesException(b.toString());  }  boolean  added  =  false;  int  count  =  getItemCount();  if  (count  ==  0)  {  this.data.add(item);    [BUGGY]      fireSeriesChanged();  fireSeriesChanged();  [BUGGY]    added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  added  =  true;  }  else  {  int  index  =  Collections.binarySearch(this.data,  item);  if  (index  <  0)  {  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	510	510	1	replace	        fireSeriesChanged();    fireSeriesChanged();	  	compilable	  [FE]  IllegalArgumentException	5341	1
914	[BUG]  [BUGGY]      fireSeriesChanged();  fireSeriesChanged();  b.append( ": ");  [CE]  cannot  find  symbol  b  [CONTEXT]    b.append(this.timePeriodClass.getName());  b.append(   ".   ");  throw  new  SeriesException(b.toString());  }  boolean  added  =  false;  int  count  =  getItemCount();  if  (count  ==  0)  {  this.data.add(item);    [BUGGY]      fireSeriesChanged();  fireSeriesChanged();  b.append( ": ");  [BUGGY]    added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  added  =  true;  }  else  {  int  index  =  Collections.binarySearch(this.data,  item);  if  (index  <  0)  {  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	510	510	1	replace	        fireSeriesChanged();    fireSeriesChanged();  b.append( ": ");	  	non-compiled	[CE]  cannot  find  symbol  b	5341	None
938	[BUG]  [BUGGY]  return  createCopy(startIndex,  endIndex,  data.data);  [CE]  cannot  find  symbol  data  [CONTEXT]    if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  }  else  {    [BUGGY]  return  createCopy(startIndex,  endIndex,  data.data);  [BUGGY]    }  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	953	953	1	replace	return  createCopy(startIndex,  endIndex,  data.data);	  return    createCopy(startIndex,    endIndex,    copy.data);    	non-compiled	[CE]  cannot  find  symbol  data	4982	None
961	[BUG]  [BUGGY]  add(period,  value,  false);  this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  DEFAULT_DOMAIN_DESCRIPTION);  [CE]  call  to  this  must  be  first  statement  in  constructor  [CONTEXT]    public  void  add(RegularTimePeriod  period,  double  value)  {      [BUGGY]  add(period,  value,  false);  this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  DEFAULT_DOMAIN_DESCRIPTION);  [BUGGY]    }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  double  value  [VARIABLES]  boolean  double  value  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.2581988897471611	561	561	1	replace	add(period,    value,    false);    this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  DEFAULT_DOMAIN_DESCRIPTION);	  	non-compiled	[CE]  call  to  this  must  be  first  statement  in  constructor	1081	None
962	[BUG]  [BUGGY]  add(period,  value,  false);  this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  timePeriodClass);  [CE]  call  to  this  must  be  first  statement  in  constructor  [CONTEXT]    public  void  add(RegularTimePeriod  period,  double  value)  {      [BUGGY]  add(period,  value,  false);  this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  timePeriodClass);  [BUGGY]    }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  double  value  [VARIABLES]  boolean  double  value  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.2581988897471611	561	561	1	replace	add(period,    value,    false);    this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  timePeriodClass);	  	non-compiled	[CE]  call  to  this  must  be  first  statement  in  constructor	1081	None
963	[BUG]  [BUGGY]  add(period,  value,  false);  this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  TimePeriodClass.class);  [CE]  call  to  this  must  be  first  statement  in  constructor  [CONTEXT]    public  void  add(RegularTimePeriod  period,  double  value)  {      [BUGGY]  add(period,  value,  false);  this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  TimePeriodClass.class);  [BUGGY]    }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  double  value  [VARIABLES]  boolean  double  value  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.2581988897471611	561	561	1	replace	add(period,    value,    false);    this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  TimePeriodClass.class);	  	non-compiled	[CE]  call  to  this  must  be  first  statement  in  constructor	1081	None
985	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.data.size();  i++)  {  [CE]  illegal  start  of  expression  [CONTEXT]    public  int  getItemCount()  {    [BUGGY]  for(int  i  =  0;  i  <  this.data.size();  i++)  {  [BUGGY]    return  this.data.size();  }  [CLASS]  TimeSeries  [METHOD]  getItemCount  [RETURN_TYPE]  int  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	240	240	1	replace	for(int  i  =  0;  i  <  this.data.size();  i++)  {	      for(int    i    =    0;    i    <    this.data.size();    i++)    {    TimePeriodClass    timePeriodClass    =    getTimePeriodClass();    if(timePeriodClass.getItemCount()    ==    this.data.size())    {    this.data.    	non-compiled	[CE]  illegal  start  of  expression	4143	None
986	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.data.size();  i++)  {  TimePeriodClass  timePeriodClass  =  getTimePeriodClass();  if(timePeriodClass.getItemCount()  ==  this.data.size())  {  [CE]  illegal  start  of  expression  [CONTEXT]    public  int  getItemCount()  {    [BUGGY]  for(int  i  =  0;  i  <  this.data.size();  i++)  {  TimePeriodClass  timePeriodClass  =  getTimePeriodClass();  if(timePeriodClass.getItemCount()  ==  this.data.size())  {  [BUGGY]    return  this.data.size();  }  [CLASS]  TimeSeries  [METHOD]  getItemCount  [RETURN_TYPE]  int  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	240	240	1	replace	for(int  i  =  0;  i  <  this.data.size();  i++)  {  TimePeriodClass  timePeriodClass  =  getTimePeriodClass();  if(timePeriodClass.getItemCount()  ==  this.data.size())  {	      for(int    i    =    0;    i    <    this.data.size();    i++)    {    TimePeriodClass    timePeriodClass    =    getTimePeriodClass();    if(timePeriodClass.getItemCount()    ==    this.data.size())    {    this.data.    	non-compiled	[CE]  illegal  start  of  expression	4143	None
1010	[BUG]  [BUGGY]  while(count  >  1)  {  this.data.add(item);  added  =  true;  [CE]  'else'  without  'if'  [CONTEXT]    b.append(item.getPeriod().getClass().getName());  b.append(   ",  but  the  TimeSeries  is  expecting  an  instance  of     ");  b.append(this.timePeriodClass.getName());  b.append(   ".   ");  throw  new  SeriesException(b.toString());  }  boolean  added  =  false;  int  count  =  getItemCount();    [BUGGY]  while(count  >  1)  {  this.data.add(item);  added  =  true;  [BUGGY]    if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  added  =  true;  }  else  {  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	508	508	1	replace	while(count  >  1)  {  this.data.add(item);  added  =  true;	      while(count    >    0)    {    this.data.add(item);    added    =    true;    	non-compiled	[CE]  'else'  without  'if'	146	None
1058	[BUG]  [BUGGY]  RegularTimePeriod  item  =  getTimePeriod(getItemCount()  /  1);  [CE]  variable  item  is  already  defined  in  method  add(TimeSeriesDataItem,boolean)  [CONTEXT]    if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {    [BUGGY]  RegularTimePeriod  item  =  getTimePeriod(getItemCount()  /  1);  [BUGGY]    RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  added  =  true;  }  else  {  int  index  =  Collections.binarySearch(this.data,  item);  if  (index  <  0)  {  this.data.add(-index  -  1,  item);  added  =  true;  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	513	513	1	replace	RegularTimePeriod  item  =  getTimePeriod(getItemCount()  /  1);	      RegularTimePeriod    item    =    getTimePeriod(getItemCount()    -    1);    	non-compiled	[CE]  variable  item  is  already  defined  in  method  add(TimeSeriesDataItem,boolean)	3423	None
1082	[BUG]  [BUGGY]  fireSeriesChanged(item.getPeriod(),  notify);  [CE]  class  or  interface  expected  [CONTEXT]    b.append(item.getPeriod().toString());  b.append(   "  but  the  series  already  contains  an  observation   ");  b.append(   "  for  that  time  period.  Duplicates  are  not     ");  b.append(   "permitted.Try  using  the  addOrUpdate()  method.   ");  throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {      [BUGGY]  fireSeriesChanged(item.getPeriod(),  notify);  [BUGGY]    if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  removeAgedItems(false);//  remove  old  items  if  necessary,  but    if  (notify)  {  fireSeriesChanged();  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	538	538	1	replace	fireSeriesChanged(item.getPeriod(),  notify);	      fireSeriesChanged();    	non-compiled	[CE]  class  or  interface  expected	2908	None
1154	[BUG]  [BUGGY]  update(period,  value,  true);  [CE]  no  suitable  method  found  for  update(RegularTimePeriod,double,boolean)  [CONTEXT]    public  void  add(RegularTimePeriod  period,  double  value)  {      [BUGGY]  update(period,  value,  true);  [BUGGY]    }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  double  value  [VARIABLES]  boolean  double  value  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.2581988897471611	561	561	1	replace	update(period,  value,  true);	  add(period,    value,    false);    	non-compiled	[CE]  no  suitable  method  found  for  update(RegularTimePeriod,double,boolean)	1082	None
1178	[BUG]  [BUGGY]  this.data.add(period,  value,  new  Double(value));  [CE]  no  suitable  method  found  for  add(RegularTimePeriod,double,Double)  [CONTEXT]    public  void  add(RegularTimePeriod  period,  double  value)  {      [BUGGY]  this.data.add(period,  value,  new  Double(value));  [BUGGY]    add(period,  value,  true);  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  double  value  [VARIABLES]  boolean  double  value  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.2581988897471611	561	561	1	replace	this.data.add(period,  value,  new  Double(value));	      this.data.add(period,    new    Double(value));    	non-compiled	[CE]  no  suitable  method  found  for  add(RegularTimePeriod,double,Double)	5701	None
1250	[BUG]  [BUGGY]  item.addChangeListener(false);  [CE]  class  or  interface  expected  [CONTEXT]    }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  removeAgedItems(false);//  remove  old  items  if  necessary,  but      [BUGGY]  item.addChangeListener(false);  [BUGGY]    if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	545	545	1	replace	item.addChangeListener(false);	      item.addChangeListener(this);    	non-compiled	[CE]  class  or  interface  expected	5102	None
1274	[BUG]  [BUGGY]  if(this.data!=  null)  {  List  data  =  new  ArrayList();  this.data  =  new  ArrayList();  }  [CE]  no  suitable  constructor  found  for  Series()  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {    [BUGGY]  if(this.data!=  null)  {  List  data  =  new  ArrayList();  this.data  =  new  ArrayList();  }  [BUGGY]    super(name);  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	174	174	1	replace	if(this.data!=  null)  {  List  data  =  new  ArrayList();  this.data  =  new  ArrayList();  }	      java.util.ArrayList();    this.data    =    new    java.util.ArrayList();    	non-compiled	[CE]  no  suitable  constructor  found  for  Series()	2209	None
1297	[BUG]  [BUGGY]  add(item,  period,  notify);  [CE]  no  suitable  method  found  for  add(TimeSeriesDataItem,RegularTimePeriod,boolean)  [CONTEXT]    public  void  add(RegularTimePeriod  period,  Number  value,  boolean  notify)  {  TimeSeriesDataItem  item  =  new  TimeSeriesDataItem(period,  value);    [BUGGY]  add(item,  period,  notify);  [BUGGY]    }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  Number  value  boolean  notify  [VARIABLES]  boolean  notify  Number  value  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	603	603	1	replace	add(item,  period,  notify);	  add(item,    notify,    period);    	non-compiled	[CE]  no  suitable  method  found  for  add(TimeSeriesDataItem,RegularTimePeriod,boolean)	2258	None
1298	[BUG]  [BUGGY]  add(period,  notify,  item);  [CE]  no  suitable  method  found  for  add(RegularTimePeriod,boolean,TimeSeriesDataItem)  [CONTEXT]    public  void  add(RegularTimePeriod  period,  Number  value,  boolean  notify)  {  TimeSeriesDataItem  item  =  new  TimeSeriesDataItem(period,  value);    [BUGGY]  add(period,  notify,  item);  [BUGGY]    }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  Number  value  boolean  notify  [VARIABLES]  boolean  notify  Number  value  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	603	603	1	replace	add(period,  notify,  item);	  add(item,    notify,    period);    	non-compiled	[CE]  no  suitable  method  found  for  add(RegularTimePeriod,boolean,TimeSeriesDataItem)	2258	None
1346	[BUG]  [BUGGY]  RegularTimePeriod  startIndex  =(RegularTimePeriod)this.data.get(startIndex);  [CE]  illegal  start  of  type  [CONTEXT]    throws  CloneNotSupportedException  {    [BUGGY]  RegularTimePeriod  startIndex  =(RegularTimePeriod)this.data.get(startIndex);  [BUGGY]    if  (start  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'start'  argument.   ");  }  if  (end  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'end'  argument.   ");  }  if  (start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException(     "Requires  start  on  or  before  end.   ");  }  boolean  emptyRange  =  false;  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	921	921	1	replace	RegularTimePeriod  startIndex  =(RegularTimePeriod)this.data.get(startIndex);	      RegularTimePeriod    start    =(RegularTimePeriod)this.data.get(startIndex);    	non-compiled	[CE]  illegal  start  of  type	25	None
1370	[BUG]  [BUGGY]  for(int  index  =  0;  index  <  this.data.size();  i++)  {  TimeSeriesDataItem  item  =(TimeSeriesDataItem)this.data.get(index);  if(item  ==  null)  {  throw  new  IllegalArgumentException( "TimeSeriesDataI  [CE]  unclosed  string  literal  [CONTEXT]    public  TimeSeriesDataItem  getDataItem(int  index)  {    [BUGGY]  for(int  index  =  0;  index  <  this.data.size();  i++)  {  TimeSeriesDataItem  item  =(TimeSeriesDataItem)this.data.get(index);  if(item  ==  null)  {  throw  new  IllegalArgumentException( "TimeSeriesDataI  [BUGGY]    return  (TimeSeriesDataItem)  this.data.get(index);  }  [CLASS]  TimeSeries  [METHOD]  getDataItem  [RETURN_TYPE]  TimeSeriesDataItem  int  index  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  long  maximumItemAge  periods  serialVersionUID  int  count  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	341	341	1	replace	for(int  index  =  0;  index  <  this.data.size();  i++)  {  TimeSeriesDataItem  item  =(TimeSeriesDataItem)this.data.get(index);  if(item  ==  null)  {  throw  new  IllegalArgumentException( "TimeSeriesDataI	      for(int    index    =    0;    index    <    this.data.size();    i++)    {    TimeSeriesDataItem    item    =(TimeSeriesDataItem)this.data.get(index);    if(item    ==    null)    {    throw    new    IllegalArgumentException(   "TimeSeriesDataItem    	non-compiled	[CE]  unclosed  string  literal	4922	None
1393	[BUG]  [BUGGY]  data.add(period,  value,  true);  fireSeriesChanged();  [CE]  illegal  start  of  expression  [CONTEXT]    public  void  add(RegularTimePeriod  period,  Number  value)  {  add(period,  value,  true);    [BUGGY]  data.add(period,  value,  true);  fireSeriesChanged();  [BUGGY]    }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  Number  value  [VARIABLES]  boolean  Number  value  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	589	589	1	replace	data.add(period,  value,  true);  fireSeriesChanged();	      data.add(period,    value);    fireSeriesChanged();    	non-compiled	[CE]  illegal  start  of  expression	62	None
1394	[BUG]  [BUGGY]  data.add(period,  value,  false);  fireSeriesChanged();  [CE]  illegal  start  of  expression  [CONTEXT]    public  void  add(RegularTimePeriod  period,  Number  value)  {  add(period,  value,  true);    [BUGGY]  data.add(period,  value,  false);  fireSeriesChanged();  [BUGGY]    }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  Number  value  [VARIABLES]  boolean  Number  value  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	589	589	1	replace	data.add(period,  value,  false);  fireSeriesChanged();	      data.add(period,    value);    fireSeriesChanged();    	non-compiled	[CE]  illegal  start  of  expression	62	None
1442	[BUG]  [BUGGY]  endIndex  =  startIndex  -  1;//  so  this  is  last  item  BEFORE  end  &&  endIndex  >=  0)  {  [CE]  illegal  start  of  expression  [CONTEXT]    int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period    [BUGGY]  endIndex  =  startIndex  -  1;//  so  this  is  last  item  BEFORE  end  &&  endIndex  >=  0)  {  [BUGGY]    }  if  (endIndex  <  0)  {  emptyRange  =  true;  }  if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  }  else  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	942	943	1	replace	endIndex  =  startIndex  -  1;//  so  this  is  last  item  BEFORE  end  &&  endIndex  >=  0)  {	  endIndex    =    endIndex    -    1;//    so    this    is    last    item    BEFORE    end    &&    startIndex    >=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	3073	None
1489	[BUG]  [BUGGY]  int  endIndex  =  getIndex();  [CE]  variable  endIndex  is  already  defined  in  method  createCopy(RegularTimePeriod,RegularTimePeriod)  [CONTEXT]    if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  }  else  {    [BUGGY]  int  endIndex  =  getIndex();  [BUGGY]    return  createCopy(startIndex,  endIndex);  }  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	953	953	1	replace	int  endIndex  =  getIndex();	      int    startIndex    =    getIndex();    	non-compiled	[CE]  variable  endIndex  is  already  defined  in  method  createCopy(RegularTimePeriod,RegularTimePeriod)	4201	None
1514	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]    }  if  (end  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'end'  argument.   ");  }  if  (start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException(     "Requires  start  on  or  before  end.   ");  }  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);    [BUGGY]  if(startIndex  <  0)  {  if(startIndex  ==  0)  {  emptyRange  =  true;  }  [BUGGY]    startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	933	933	1	add	if(startIndex  <  0)  {  if(startIndex  ==  0)  {  emptyRange  =  true;  }	      	compilable	  [FE]  IllegalArgumentException	747	1
1515	[BUG]  [BUGGY]  if(startIndex  <  0)  {  if(startIndex  ==  0)  {  emptyRange  =  true;  }  [FE]  IllegalArgumentException  [CONTEXT]    }  if  (end  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'end'  argument.   ");  }  if  (start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException(     "Requires  start  on  or  before  end.   ");  }  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);    [BUGGY]  if(startIndex  <  0)  {  if(startIndex  ==  0)  {  emptyRange  =  true;  }  [BUGGY]    startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	933	933	1	replace	if(startIndex  <  0)  {  if(startIndex  ==  0)  {  emptyRange  =  true;  }	      	compilable	  [FE]  IllegalArgumentException	747	1
1537	[BUG]  [BUGGY]  int  startIndex  =  indexOf('n',  startIndex);  endIndex  +=  i;  [CE]  variable  startIndex  is  already  defined  in  method  createCopy(RegularTimePeriod,RegularTimePeriod)  [CONTEXT]    if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  }  else  {    [BUGGY]  int  startIndex  =  indexOf('n',  startIndex);  endIndex  +=  i;  [BUGGY]    return  createCopy(startIndex,  endIndex);  }  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	953	953	1	replace	int  startIndex  =  indexOf('n',  startIndex);  endIndex  +=  i;	      int    startIndex    =    indexOf('n',    startIndex);    endIndex    +=    startIndex;    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  createCopy(RegularTimePeriod,RegularTimePeriod)	1394	None
1538	[BUG]  [BUGGY]  int  startIndex  =  indexOf('n',  startIndex);  endIndex  +=  length;  [CE]  variable  startIndex  is  already  defined  in  method  createCopy(RegularTimePeriod,RegularTimePeriod)  [CONTEXT]    if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  }  else  {    [BUGGY]  int  startIndex  =  indexOf('n',  startIndex);  endIndex  +=  length;  [BUGGY]    return  createCopy(startIndex,  endIndex);  }  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	953	953	1	replace	int  startIndex  =  indexOf('n',  startIndex);  endIndex  +=  length;	      int    startIndex    =    indexOf('n',    startIndex);    endIndex    +=    startIndex;    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  createCopy(RegularTimePeriod,RegularTimePeriod)	1394	None
1562	[BUG]  [BUGGY]  if(added)  {  if(item.getPeriod().equals(last))  {  this.data.add(item);  }  [CE]  illegal  start  of  expression  [CONTEXT]    if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);    [BUGGY]  if(added)  {  if(item.getPeriod().equals(last))  {  this.data.add(item);  }  [BUGGY]    added  =  true;  }  else  {  int  index  =  Collections.binarySearch(this.data,  item);  if  (index  <  0)  {  this.data.add(-index  -  1,  item);  added  =  true;  }  else  {  StringBuffer  b  =  new  StringBuffer();  b.append(   "You  are  attempting  to  add  an  observation  for     ");  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	516	516	1	replace	if(added)  {  if(item.getPeriod().equals(last))  {  this.data.add(item);  }	      if(notify)    {    if(item.getPeriod().equals(last))    {    this.data.add(item);    }    	non-compiled	[CE]  illegal  start  of  expression	7383	None
1585	[BUG]  [BUGGY]  while(item  ==  null)  {  throw  new  IllegalArgumentException( "Null  'item'  argument.   ");  [CE]  unreachable  statement  [CONTEXT]    public  void  add(TimeSeriesDataItem  item,  boolean  notify)  {    [BUGGY]  while(item  ==  null)  {  throw  new  IllegalArgumentException( "Null  'item'  argument.   ");  [BUGGY]    if  (item  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'item'  argument.   ");  }  if  (!item.getPeriod().getClass().equals(this.timePeriodClass))  {  StringBuffer  b  =  new  StringBuffer();  b.append(   "You  are  trying  to  add  data  where  the  time  period  class     ");  b.append(   "is     ");  b.append(item.getPeriod().getClass().getName());  b.append(   ",  but  the  TimeSeries  is  expecting  an  instance  of     ");  b.append(this.timePeriodClass.getName());  b.append(   ".   ");  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	491	491	1	replace	while(item  ==  null)  {  throw  new  IllegalArgumentException( "Null  'item'  argument.   ");	      if(item    ==    null)    {    throw    new    IllegalArgumentException(   "Null    'item'    argument.   ");    }    	non-compiled	[CE]  unreachable  statement	818	None
1609	[BUG]  [BUGGY]  if(end  <  start  ||  end  >  data.length)  {  [CE]  cannot  find  symbol  length  [CONTEXT]    throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(   "Requires  start  >=  0.   ");  }    [BUGGY]  if(end  <  start  ||  end  >  data.length)  {  [BUGGY]    throw  new  IllegalArgumentException(   "Requires  start  <=  end.   ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	882	882	1	replace	if(end  <  start  ||  end  >  data.length)  {	  if(end    <    start    ||    end    >    length)    {    	non-compiled	[CE]  cannot  find  symbol  length	6422	None
1610	[BUG]  [BUGGY]  if(end  <  start  ||  end  >  limit)  {  [CE]  cannot  find  symbol  limit  [CONTEXT]    throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(   "Requires  start  >=  0.   ");  }    [BUGGY]  if(end  <  start  ||  end  >  limit)  {  [BUGGY]    throw  new  IllegalArgumentException(   "Requires  start  <=  end.   ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	882	882	1	replace	if(end  <  start  ||  end  >  limit)  {	  if(end    <    start    ||    end    >    length)    {    	non-compiled	[CE]  cannot  find  symbol  limit	6422	None
1633	[BUG]  [BUGGY]  while(period  ==  null)  {  throw  new  IllegalArgumentException( "Null  'period'  argument.   ");  [CE]  unreachable  statement  [CONTEXT]    public  int  getIndex(RegularTimePeriod  period)  {    [BUGGY]  while(period  ==  null)  {  throw  new  IllegalArgumentException( "Null  'period'  argument.   ");  [BUGGY]    if  (period  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'period'  argument.   ");  }  TimeSeriesDataItem  dummy  =  new  TimeSeriesDataItem(  period,  Integer.MIN_VALUE);  return  Collections.binarySearch(this.data,  dummy);  }  [CLASS]  TimeSeries  [METHOD]  getIndex  [RETURN_TYPE]  int  RegularTimePeriod  period  [VARIABLES]  boolean  TimeSeriesDataItem  dummy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.3333333333333333	430	430	1	replace	while(period  ==  null)  {  throw  new  IllegalArgumentException( "Null  'period'  argument.   ");	      while(period!=    null)    {    throw    new    IllegalArgumentException(   "Null    'period'    argument.   ");    	non-compiled	[CE]  unreachable  statement	938	None
1657	[BUG]  [BUGGY]  this.data.add(item);  updateBounds(this.data.getPeriod(),  item.size()  -  1);  [CE]  cannot  find  symbol  [CONTEXT]    if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  removeAgedItems(false);//  remove  old  items  if  necessary,  but    if  (notify)  {    [BUGGY]  this.data.add(item);  updateBounds(this.data.getPeriod(),  item.size()  -  1);  [BUGGY]    fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	546	546	1	replace	this.data.add(item);  updateBounds(this.data.getPeriod(),  item.size()  -  1);	      this.data.add(item);    updateBounds(item.getPeriod(),    this.data.size()    -    1);    	non-compiled	[CE]  cannot  find  symbol	662	None
1658	[BUG]  [BUGGY]  this.data.add(item);  updateBounds(this.data.getPeriod(),  item.data.size()  -  1);  [CE]  cannot  find  symbol  [CONTEXT]    if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  removeAgedItems(false);//  remove  old  items  if  necessary,  but    if  (notify)  {    [BUGGY]  this.data.add(item);  updateBounds(this.data.getPeriod(),  item.data.size()  -  1);  [BUGGY]    fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	546	546	1	replace	this.data.add(item);  updateBounds(this.data.getPeriod(),  item.data.size()  -  1);	      this.data.add(item);    updateBounds(item.getPeriod(),    this.data.size()    -    1);    	non-compiled	[CE]  cannot  find  symbol	662	None
1681	[BUG]  [BUGGY]  if(added)  {  if(item.getPeriod().compareTo(count)>  0)  {  this.data.add(item);  }  [CE]  illegal  start  of  expression  [CONTEXT]    b.append(this.timePeriodClass.getName());  b.append(   ".   ");  throw  new  SeriesException(b.toString());  }  boolean  added  =  false;  int  count  =  getItemCount();  if  (count  ==  0)  {  this.data.add(item);    [BUGGY]  if(added)  {  if(item.getPeriod().compareTo(count)>  0)  {  this.data.add(item);  }  [BUGGY]    added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  added  =  true;  }  else  {  int  index  =  Collections.binarySearch(this.data,  item);  if  (index  <  0)  {  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	510	510	1	replace	if(added)  {  if(item.getPeriod().compareTo(count)>  0)  {  this.data.add(item);  }	      fireSeriesChanged();    	non-compiled	[CE]  illegal  start  of  expression	5342	None
1706	[BUG]  [BUGGY]  while(item.hasNext())  {  if(count  >  0)  {  this.data.add(item);  }  [CE]  'else'  without  'if'  [CONTEXT]    b.append(item.getPeriod().getClass().getName());  b.append(   ",  but  the  TimeSeries  is  expecting  an  instance  of     ");  b.append(this.timePeriodClass.getName());  b.append(   ".   ");  throw  new  SeriesException(b.toString());  }  boolean  added  =  false;  int  count  =  getItemCount();    [BUGGY]  while(item.hasNext())  {  if(count  >  0)  {  this.data.add(item);  }  [BUGGY]    if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  added  =  true;  }  else  {  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	508	508	1	replace	while(item.hasNext())  {  if(count  >  0)  {  this.data.add(item);  }	      while(it.hasNext())    {    if(count    >    0)    {    this.data.add(item);    }    	non-compiled	[CE]  'else'  without  'if'	7143	None
1729	[BUG]  [BUGGY]  [Delete]  [CE]  illegal  start  of  expression  [CONTEXT]    public  int  getIndex(RegularTimePeriod  period)  {  if  (period  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'period'  argument.   ");  }    [BUGGY]  [Delete]  [BUGGY]    TimeSeriesDataItem  dummy  =  new  TimeSeriesDataItem(    period,  Integer.MIN_VALUE);  period,  Integer.MIN_VALUE);  return  Collections.binarySearch(this.data,  dummy);  }  [CLASS]  TimeSeries  [METHOD]  getIndex  [RETURN_TYPE]  int  RegularTimePeriod  period  [VARIABLES]  boolean  TimeSeriesDataItem  dummy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.3333333333333333	433	434	1	replace	[Delete]	      if(period    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	2740	None
1730	[BUG]  [BUGGY]  }  [CE]  illegal  start  of  type  [CONTEXT]    public  int  getIndex(RegularTimePeriod  period)  {  if  (period  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'period'  argument.   ");  }    [BUGGY]  }  [BUGGY]    TimeSeriesDataItem  dummy  =  new  TimeSeriesDataItem(    period,  Integer.MIN_VALUE);  period,  Integer.MIN_VALUE);  return  Collections.binarySearch(this.data,  dummy);  }  [CLASS]  TimeSeries  [METHOD]  getIndex  [RETURN_TYPE]  int  RegularTimePeriod  period  [VARIABLES]  boolean  TimeSeriesDataItem  dummy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.3333333333333333	433	434	1	replace	}	      if(period    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	2740	None
1753	[BUG]  [BUGGY]  if(!notify)  {  if(!notify)  {  [CE]  illegal  start  of  expression  [CONTEXT]    }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  removeAgedItems(false);//  remove  old  items  if  necessary,  but      [BUGGY]  if(!notify)  {  if(!notify)  {  [BUGGY]    fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	545	545	1	replace	if(!notify)    {    if(!notify)  {	  	non-compiled	[CE]  illegal  start  of  expression	2102	None
1754	[BUG]  [BUGGY]  if(!notify)  {  if(!notify)  throw  new  SeriesException( " ");  [CE]  illegal  start  of  expression  [CONTEXT]    }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  removeAgedItems(false);//  remove  old  items  if  necessary,  but      [BUGGY]  if(!notify)  {  if(!notify)  throw  new  SeriesException( " ");  [BUGGY]    fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	545	545	1	replace	if(!notify)    {    if(!notify)  throw  new  SeriesException( " ");	  	non-compiled	[CE]  illegal  start  of  expression	2102	None
1755	[BUG]  [BUGGY]  if(!notify)  {  if(!notify)  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [CONTEXT]    }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  removeAgedItems(false);//  remove  old  items  if  necessary,  but      [BUGGY]  if(!notify)  {  if(!notify)  throw  new  IllegalArgumentException( " ");  [BUGGY]    fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	545	545	1	replace	if(!notify)    {    if(!notify)  throw  new  IllegalArgumentException( " ");	  	non-compiled	[CE]  illegal  start  of  expression	2102	None
1778	[BUG]  [BUGGY]  fireSeriesChanged(item);  [CE]  method  fireSeriesChanged  in  class  Series  cannot  be  applied  to  given  types;  [CONTEXT]    if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);    [BUGGY]  fireSeriesChanged(item);  [BUGGY]    added  =  true;  }  else  {  int  index  =  Collections.binarySearch(this.data,  item);  if  (index  <  0)  {  this.data.add(-index  -  1,  item);  added  =  true;  }  else  {  StringBuffer  b  =  new  StringBuffer();  b.append(   "You  are  attempting  to  add  an  observation  for     ");  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	516	516	1	replace	fireSeriesChanged(item);	      fireSeriesChanged();    	non-compiled	[CE]  method  fireSeriesChanged  in  class  Series  cannot  be  applied  to  given  types;	7382	None
1801	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]    public  RegularTimePeriod  getTimePeriod(int  index)  {    [BUGGY]      getDataItem(index).getPeriod();  getDataItem(index).getPeriod();  [BUGGY]    return  getDataItem(index).getPeriod();  }  [CLASS]  TimeSeries  [METHOD]  getTimePeriod  [RETURN_TYPE]  RegularTimePeriod  int  index  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  long  maximumItemAge  periods  serialVersionUID  int  count  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	372	372	1	add	        getDataItem(index).getPeriod();    getDataItem(index).getPeriod();	  	compilable	  [FE]  IllegalArgumentException	2593	1
1802	[BUG]  [BUGGY]      getDataItem(index).getPeriod();  getDataItem(index).getPeriod();  [FE]  IllegalArgumentException  [CONTEXT]    public  RegularTimePeriod  getTimePeriod(int  index)  {    [BUGGY]      getDataItem(index).getPeriod();  getDataItem(index).getPeriod();  [BUGGY]    return  getDataItem(index).getPeriod();  }  [CLASS]  TimeSeries  [METHOD]  getTimePeriod  [RETURN_TYPE]  RegularTimePeriod  int  index  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  long  maximumItemAge  periods  serialVersionUID  int  count  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	372	372	1	replace	        getDataItem(index).getPeriod();    getDataItem(index).getPeriod();	  	compilable	  [FE]  IllegalArgumentException	2593	1
1803	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]    public  RegularTimePeriod  getTimePeriod(int  index)  {    [BUGGY]      getDataItem(index).getPeriod();  if(index  >=  0)  {  getDataItem(index).getPeriod();  }  [BUGGY]    return  getDataItem(index).getPeriod();  }  [CLASS]  TimeSeries  [METHOD]  getTimePeriod  [RETURN_TYPE]  RegularTimePeriod  int  index  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  long  maximumItemAge  periods  serialVersionUID  int  count  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	372	372	1	add	        getDataItem(index).getPeriod();    if(index  >=  0)  {  getDataItem(index).getPeriod();  }	  	compilable	  [FE]  IllegalArgumentException	2593	1
1804	[BUG]  [BUGGY]      getDataItem(index).getPeriod();  if(index  >=  0)  {  getDataItem(index).getPeriod();  }  [FE]  IllegalArgumentException  [CONTEXT]    public  RegularTimePeriod  getTimePeriod(int  index)  {    [BUGGY]      getDataItem(index).getPeriod();  if(index  >=  0)  {  getDataItem(index).getPeriod();  }  [BUGGY]    return  getDataItem(index).getPeriod();  }  [CLASS]  TimeSeries  [METHOD]  getTimePeriod  [RETURN_TYPE]  RegularTimePeriod  int  index  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  long  maximumItemAge  periods  serialVersionUID  int  count  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	372	372	1	replace	        getDataItem(index).getPeriod();    if(index  >=  0)  {  getDataItem(index).getPeriod();  }	  	compilable	  [FE]  IllegalArgumentException	2593	1
1826	[BUG]  [BUGGY]  updateSeries(name);  [CE]  illegal  start  of  expression  [CONTEXT]    public  TimeSeries(Comparable  name)  {  this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  Day.class);    [BUGGY]  updateSeries(name);  [BUGGY]    }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Comparable)  Comparable  name  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.4082482904638631	144	144	1	replace	updateSeries(name);	      fireSeriesChanged();    	non-compiled	[CE]  illegal  start  of  expression	3602	None
1874	[BUG]  [BUGGY]  while(start!=  null  &&  start.getSeriesCount()  >  0)  {  this.data  =  new  ArrayList  <  TimePeriod>(start.getSeriesCount());  [CE]  generics  are  not  supported  in  -source  1.4  [CONTEXT]    throw  new  IllegalArgumentException(   "Null  'start'  argument.   ");  }  if  (end  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'end'  argument.   ");  }  if  (start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException(     "Requires  start  on  or  before  end.   ");  }  boolean  emptyRange  =  false;    [BUGGY]  while(start!=  null  &&  start.getSeriesCount()  >  0)  {  this.data  =  new  ArrayList  <  TimePeriod>(start.getSeriesCount());  [BUGGY]    int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	932	932	1	replace	while(start!=  null  &&  start.getSeriesCount()  >  0)  {  this.data  =  new  ArrayList  <  TimePeriod>(start.getSeriesCount());	      while(start    <    null    &&    start.getSeriesCount()    >    0)    {    this.data    =    new    ArrayList    <    TimePeriod>(start.getSeriesCount());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	7321	None
1897	[BUG]  [BUGGY]  this.data.add(period,  value,  true);  [CE]  no  suitable  method  found  for  add(RegularTimePeriod,double,boolean)  [CONTEXT]    public  void  add(RegularTimePeriod  period,  double  value)  {      [BUGGY]  this.data.add(period,  value,  true);  [BUGGY]    add(period,  value,  true);  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  double  value  [VARIABLES]  boolean  double  value  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.2581988897471611	561	561	1	replace	this.data.add(period,  value,  true);	      this.data.add(period,    value);    	non-compiled	[CE]  no  suitable  method  found  for  add(RegularTimePeriod,double,boolean)	2546	None
1898	[BUG]  [BUGGY]  this.data.add(period,  value,  false);  [CE]  no  suitable  method  found  for  add(RegularTimePeriod,double,boolean)  [CONTEXT]    public  void  add(RegularTimePeriod  period,  double  value)  {      [BUGGY]  this.data.add(period,  value,  false);  [BUGGY]    add(period,  value,  true);  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  double  value  [VARIABLES]  boolean  double  value  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.2581988897471611	561	561	1	replace	this.data.add(period,  value,  false);	      this.data.add(period,    value);    	non-compiled	[CE]  no  suitable  method  found  for  add(RegularTimePeriod,double,boolean)	2546	None
1921	[BUG]  [BUGGY]  [Delete]  [CE]  illegal  start  of  expression  [CONTEXT]    throws  CloneNotSupportedException  {    [BUGGY]  [Delete]  [BUGGY]    if  (start  <  0)  {  throw  new  IllegalArgumentException(   "Requires  start  >=  0.   ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(   "Requires  start  <=  end.   ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	879	879	1	replace	[Delete]	      if(start    <    0)    {    throw    new    IllegalArgumentException(   "Requires    start    <=    0.   ");    }    	non-compiled	[CE]  illegal  start  of  expression	267	None
1922	[BUG]  [BUGGY]  }  [CE]  illegal  start  of  type  [CONTEXT]    throws  CloneNotSupportedException  {    [BUGGY]  }  [BUGGY]    if  (start  <  0)  {  throw  new  IllegalArgumentException(   "Requires  start  >=  0.   ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(   "Requires  start  <=  end.   ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	879	879	1	replace	}	      if(start    <    0)    {    throw    new    IllegalArgumentException(   "Requires    start    <=    0.   ");    }    	non-compiled	[CE]  illegal  start  of  type	267	None
1946	[BUG]  [BUGGY]  &&(latest  -  getTimePeriod(0).getSerialIndex()  +  1))  {  this.data.add(remove);  [CE]  bad  operand  types  for  binary  operator  '&&'  [CONTEXT]    public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())    [BUGGY]  &&(latest  -  getTimePeriod(0).getSerialIndex()  +  1))  {  this.data.add(remove);  [BUGGY]    >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	744	744	1	replace	&&(latest  -  getTimePeriod(0).getSerialIndex()  +  1))  {  this.data.add(remove);	      &&(latest    -    getTimePeriod(0).getSerialIndex()))    {    this.data.add(remove);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&&'	1021	None
1969	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]    throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(   "Requires  start  >=  0.   ");  }  if  (end  <  start)  {    [BUGGY]  throw  new  IllegalArgumentException( "Requires  end  >=  start.   ");  [BUGGY]    throw  new  IllegalArgumentException(   "Requires  start  <=  end.   ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	883	883	1	add	throw  new  IllegalArgumentException( "Requires  end  >=  start.   ");	      throw    new    IllegalArgumentException(   "Requires    start    >>    end.   ");    	compilable	  [FE]  IllegalArgumentException	531	1
1970	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Requires  end  >=  start.   ");  [FE]  IllegalArgumentException  [CONTEXT]    throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(   "Requires  start  >=  0.   ");  }  if  (end  <  start)  {    [BUGGY]  throw  new  IllegalArgumentException( "Requires  end  >=  start.   ");  [BUGGY]    throw  new  IllegalArgumentException(   "Requires  start  <=  end.   ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	883	883	1	replace	throw  new  IllegalArgumentException( "Requires  end  >=  start.   ");	      throw    new    IllegalArgumentException(   "Requires    start    >>    end.   ");    	compilable	  [FE]  IllegalArgumentException	531	1
1994	[BUG]  [BUGGY]  if(startIndex  >=  endIndex)  {  ArrayList();  }  [CE]  illegal  start  of  type  [CONTEXT]    }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  emptyRange  =  true;  }    [BUGGY]  if(startIndex  >=  endIndex)  {  ArrayList();  }  [BUGGY]    if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  }  else  {  return  createCopy(startIndex,  endIndex);  }  }  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	947	947	1	replace	if(startIndex  >=  endIndex)  {  ArrayList();  }	      java.util.ArrayList();    	non-compiled	[CE]  illegal  start  of  type	5583	None
2017	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]    throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(   "Requires  start  >=  0.   ");  }  if  (end  <  start)  {    [BUGGY]  if(end  <  start)  {  throw  new  IllegalArgumentException(   "   ");  }  else  if(end  <  end)  {  throw  new  IllegalArgumentException(   "   ");  }  [BUGGY]    throw  new  IllegalArgumentException(   "Requires  start  <=  end.   ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	883	883	1	add	if(end  <  start)  {  throw  new  IllegalArgumentException(   "   ");  }  else  if(end  <  end)  {  throw  new  IllegalArgumentException(   "   ");  }	      if(end    <    start)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  IllegalArgumentException	4082	1
2018	[BUG]  [BUGGY]  if(end  <  start)  {  throw  new  IllegalArgumentException(   "   ");  }  else  if(end  <  end)  {  throw  new  IllegalArgumentException(   "   ");  }  [FE]  IllegalArgumentException  [CONTEXT]    throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(   "Requires  start  >=  0.   ");  }  if  (end  <  start)  {    [BUGGY]  if(end  <  start)  {  throw  new  IllegalArgumentException(   "   ");  }  else  if(end  <  end)  {  throw  new  IllegalArgumentException(   "   ");  }  [BUGGY]    throw  new  IllegalArgumentException(   "Requires  start  <=  end.   ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	883	883	1	replace	if(end  <  start)  {  throw  new  IllegalArgumentException(   "   ");  }  else  if(end  <  end)  {  throw  new  IllegalArgumentException(   "   ");  }	      if(end    <    start)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  IllegalArgumentException	4082	1
2018	[BUG]  [BUGGY]  else  if(end  <  start)  {  throw  new  IllegalArgumentException(   "   ");  }  else  if(end  <  end)  {  throw  new  IllegalArgumentException(   "   ");  }  [CE]  [CONTEXT]    throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(   "Requires  start  >=  0.   ");  }  if  (end  <  start)  {    [BUGGY]  else  if(end  <  start)  {  throw  new  IllegalArgumentException(   "   ");  }  else  if(end  <  end)  {  throw  new  IllegalArgumentException(   "   ");  }  [BUGGY]    throw  new  IllegalArgumentException(   "Requires  start  <=  end.   ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	883	883	1	replace	else  if(end  <  start)  {  throw  new  IllegalArgumentException(   "   ");  }  else  if(end  <  end)  {  throw  new  IllegalArgumentException(   "   ");  }	      if(end    <    start)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	4082	None
2041	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]    if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);    [BUGGY]  added  =  false;  added  =  false;  [BUGGY]    }  else  {  int  index  =  Collections.binarySearch(this.data,  item);  if  (index  <  0)  {  this.data.add(-index  -  1,  item);  added  =  true;  }  else  {  StringBuffer  b  =  new  StringBuffer();  b.append(   "You  are  attempting  to  add  an  observation  for     ");  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	516	516	1	add	added    =    false;    added  =  false;	  	compilable	  [FE]  IllegalArgumentException	1874	1
2042	[BUG]  [BUGGY]  added  =  false;  added  =  false;  [FE]  IllegalArgumentException  [CONTEXT]    if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);    [BUGGY]  added  =  false;  added  =  false;  [BUGGY]    }  else  {  int  index  =  Collections.binarySearch(this.data,  item);  if  (index  <  0)  {  this.data.add(-index  -  1,  item);  added  =  true;  }  else  {  StringBuffer  b  =  new  StringBuffer();  b.append(   "You  are  attempting  to  add  an  observation  for     ");  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	516	516	1	replace	added    =    false;    added  =  false;	  	compilable	  [FE]  IllegalArgumentException	1874	1
2042	[BUG]  [BUGGY]  added  =  false;  add  =  false;  [CE]  cannot  find  symbol  add  [CONTEXT]    if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);    [BUGGY]  added  =  false;  add  =  false;  [BUGGY]    }  else  {  int  index  =  Collections.binarySearch(this.data,  item);  if  (index  <  0)  {  this.data.add(-index  -  1,  item);  added  =  true;  }  else  {  StringBuffer  b  =  new  StringBuffer();  b.append(   "You  are  attempting  to  add  an  observation  for     ");  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	516	516	1	replace	added    =    false;    add  =  false;	  	non-compiled	[CE]  cannot  find  symbol  add	1874	None
2043	[BUG]  [BUGGY]  added  =  false;  adding  =  false;  [CE]  cannot  find  symbol  adding  [CONTEXT]    if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);    [BUGGY]  added  =  false;  adding  =  false;  [BUGGY]    }  else  {  int  index  =  Collections.binarySearch(this.data,  item);  if  (index  <  0)  {  this.data.add(-index  -  1,  item);  added  =  true;  }  else  {  StringBuffer  b  =  new  StringBuffer();  b.append(   "You  are  attempting  to  add  an  observation  for     ");  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	516	516	1	replace	added    =    false;    adding  =  false;	  	non-compiled	[CE]  cannot  find  symbol  adding	1874	None
2065	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]    throws  CloneNotSupportedException  {  if  (start  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'start'  argument.   ");  }    [BUGGY]      if(start.compareTo(start)>  0)  {  throw  new  IllegalArgumentException(   "   ");  }  if(start.compareTo(start)>  0)  {  throw  new  IllegalArgumentException(   "   ");  }  [BUGGY]    if  (end  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'end'  argument.   ");  }  if  (start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException(     "Requires  start  on  or  before  end.   ");  }  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	924	924	1	add	        if(start.compareTo(start)>    0)    {    throw    new    IllegalArgumentException(   "   ");    }    if(start.compareTo(start)>  0)  {  throw  new  IllegalArgumentException(   "   ");  }	  	compilable	  [FE]  IllegalArgumentException	6663	1
2066	[BUG]  [BUGGY]      if(start.compareTo(start)>  0)  {  throw  new  IllegalArgumentException(   "   ");  }  if(start.compareTo(start)>  0)  {  throw  new  IllegalArgumentException(   "   ");  }  [FE]  IllegalArgumentException  [CONTEXT]    throws  CloneNotSupportedException  {  if  (start  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'start'  argument.   ");  }    [BUGGY]      if(start.compareTo(start)>  0)  {  throw  new  IllegalArgumentException(   "   ");  }  if(start.compareTo(start)>  0)  {  throw  new  IllegalArgumentException(   "   ");  }  [BUGGY]    if  (end  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'end'  argument.   ");  }  if  (start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException(     "Requires  start  on  or  before  end.   ");  }  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	924	924	1	replace	        if(start.compareTo(start)>    0)    {    throw    new    IllegalArgumentException(   "   ");    }    if(start.compareTo(start)>  0)  {  throw  new  IllegalArgumentException(   "   ");  }	  	compilable	  [FE]  IllegalArgumentException	6663	1
2067	[BUG]  [BUGGY]      if(start.compareTo(start)>  0)  {  throw  new  IllegalArgumentException(   "   ");  }  if(start.compareTo(start)>  0)  {  throw  new  IllegalArgumentException(   "   ");  >>  [CE]  illegal  start  of  expression  [CONTEXT]    throws  CloneNotSupportedException  {  if  (start  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'start'  argument.   ");  }    [BUGGY]      if(start.compareTo(start)>  0)  {  throw  new  IllegalArgumentException(   "   ");  }  if(start.compareTo(start)>  0)  {  throw  new  IllegalArgumentException(   "   ");  >>  [BUGGY]    if  (end  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'end'  argument.   ");  }  if  (start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException(     "Requires  start  on  or  before  end.   ");  }  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	924	924	1	replace	        if(start.compareTo(start)>    0)    {    throw    new    IllegalArgumentException(   "   ");    }    if(start.compareTo(start)>  0)  {  throw  new  IllegalArgumentException(   "   ");  >>	  	non-compiled	[CE]  illegal  start  of  expression	6663	None
2089	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]    public  void  add(RegularTimePeriod  period,  Number  value,  boolean  notify)  {  TimeSeriesDataItem  item  =  new  TimeSeriesDataItem(period,  value);    [BUGGY]      item.setValue(value);  fireSeriesChanged();  item.setValue(value);  fireSeriesChanged();  [BUGGY]    add(item,  notify);  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  Number  value  boolean  notify  [VARIABLES]  boolean  notify  Number  value  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	603	603	1	add	        item.setValue(value);    fireSeriesChanged();    item.setValue(value);  fireSeriesChanged();	  	compilable	  [FE]  IllegalArgumentException	2041	1
2090	[BUG]  [BUGGY]      item.setValue(value);  fireSeriesChanged();  item.setValue(value);  fireSeriesChanged();  [FE]  IllegalArgumentException  [CONTEXT]    public  void  add(RegularTimePeriod  period,  Number  value,  boolean  notify)  {  TimeSeriesDataItem  item  =  new  TimeSeriesDataItem(period,  value);    [BUGGY]      item.setValue(value);  fireSeriesChanged();  item.setValue(value);  fireSeriesChanged();  [BUGGY]    add(item,  notify);  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  Number  value  boolean  notify  [VARIABLES]  boolean  notify  Number  value  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	603	603	1	replace	        item.setValue(value);    fireSeriesChanged();    item.setValue(value);  fireSeriesChanged();	  	compilable	  [FE]  IllegalArgumentException	2041	1
2090	[BUG]  [BUGGY]      item.setValue(value);  fireSeriesChanged();  item.setData(value);  fireSeriesChanged();  [CE]  cannot  find  symbol  [CONTEXT]    public  void  add(RegularTimePeriod  period,  Number  value,  boolean  notify)  {  TimeSeriesDataItem  item  =  new  TimeSeriesDataItem(period,  value);    [BUGGY]      item.setValue(value);  fireSeriesChanged();  item.setData(value);  fireSeriesChanged();  [BUGGY]    add(item,  notify);  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  Number  value  boolean  notify  [VARIABLES]  boolean  notify  Number  value  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	603	603	1	replace	        item.setValue(value);    fireSeriesChanged();    item.setData(value);  fireSeriesChanged();	  	non-compiled	[CE]  cannot  find  symbol	2041	None
2091	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]    public  void  add(RegularTimePeriod  period,  Number  value,  boolean  notify)  {  TimeSeriesDataItem  item  =  new  TimeSeriesDataItem(period,  value);    [BUGGY]      item.setValue(value);  fireSeriesChanged();  item.setValue(value);  [BUGGY]    add(item,  notify);  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  Number  value  boolean  notify  [VARIABLES]  boolean  notify  Number  value  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	603	603	1	add	        item.setValue(value);    fireSeriesChanged();    item.setValue(value);	  	compilable	  [FE]  IllegalArgumentException	2041	1
2092	[BUG]  [BUGGY]      item.setValue(value);  fireSeriesChanged();  item.setValue(value);  [FE]  IllegalArgumentException  [CONTEXT]    public  void  add(RegularTimePeriod  period,  Number  value,  boolean  notify)  {  TimeSeriesDataItem  item  =  new  TimeSeriesDataItem(period,  value);    [BUGGY]      item.setValue(value);  fireSeriesChanged();  item.setValue(value);  [BUGGY]    add(item,  notify);  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  Number  value  boolean  notify  [VARIABLES]  boolean  notify  Number  value  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	603	603	1	replace	        item.setValue(value);    fireSeriesChanged();    item.setValue(value);	  	compilable	  [FE]  IllegalArgumentException	2041	1
2113	[BUG]  [BUGGY]  if(end  ==  null  ||  start.compareTo(end)>  0)  {  [CE]  illegal  start  of  expression  [CONTEXT]    if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);    [BUGGY]  if(end  ==  null  ||  start.compareTo(end)>  0)  {  [BUGGY]    added  =  true;  }  else  {  int  index  =  Collections.binarySearch(this.data,  item);  if  (index  <  0)  {  this.data.add(-index  -  1,  item);  added  =  true;  }  else  {  StringBuffer  b  =  new  StringBuffer();  b.append(   "You  are  attempting  to  add  an  observation  for     ");  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	516	516	1	replace	if(end  ==  null  ||  start.compareTo(end)>  0)  {	      while(item.getPeriod().compareTo(last)>    0)    {    this.data.add(-index    -    1,    item);    	non-compiled	[CE]  illegal  start  of  expression	122	None
2161	[BUG]  [BUGGY]  [Delete]  [CE]  illegal  start  of  expression  [CONTEXT]    public  void  add(TimeSeriesDataItem  item,  boolean  notify)  {    [BUGGY]  [Delete]  [BUGGY]    if  (item  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'item'  argument.   ");  }  if  (!item.getPeriod().getClass().equals(this.timePeriodClass))  {  StringBuffer  b  =  new  StringBuffer();  b.append(   "You  are  trying  to  add  data  where  the  time  period  class     ");  b.append(   "is     ");  b.append(item.getPeriod().getClass().getName());  b.append(   ",  but  the  TimeSeries  is  expecting  an  instance  of     ");  b.append(this.timePeriodClass.getName());  b.append(   ".   ");  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	491	491	1	replace	[Delete]	      if(item    ==    null)    {    throw    new    IllegalArgumentException(   "Null    'item'    argument.   ");    }    else    {    add(item.getPeriod().getClass().getName());    }    	non-compiled	[CE]  illegal  start  of  expression	819	None
2162	[BUG]  [BUGGY]  if(item  ==  null)  {  throw  new  IllegalArgumentException( "Null  'item'  argument.   ");  }  else  {  add(item.getPeriod().getClass().getName(),  notify);  }  [CE]  illegal  start  of  type  [CONTEXT]    public  void  add(TimeSeriesDataItem  item,  boolean  notify)  {    [BUGGY]  if(item  ==  null)  {  throw  new  IllegalArgumentException( "Null  'item'  argument.   ");  }  else  {  add(item.getPeriod().getClass().getName(),  notify);  }  [BUGGY]    if  (item  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'item'  argument.   ");  }  if  (!item.getPeriod().getClass().equals(this.timePeriodClass))  {  StringBuffer  b  =  new  StringBuffer();  b.append(   "You  are  trying  to  add  data  where  the  time  period  class     ");  b.append(   "is     ");  b.append(item.getPeriod().getClass().getName());  b.append(   ",  but  the  TimeSeries  is  expecting  an  instance  of     ");  b.append(this.timePeriodClass.getName());  b.append(   ".   ");  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	491	491	1	replace	if(item  ==  null)  {  throw  new  IllegalArgumentException( "Null  'item'  argument.   ");  }  else  {  add(item.getPeriod().getClass().getName(),  notify);  }	      if(item    ==    null)    {    throw    new    IllegalArgumentException(   "Null    'item'    argument.   ");    }    else    {    add(item.getPeriod().getClass().getName());    }    	non-compiled	[CE]  illegal  start  of  type	819	None
2210	[BUG]  [BUGGY]  fireSeriesChanged(item.getPeriod(),  notify);  [CE]  method  fireSeriesChanged  in  class  Series  cannot  be  applied  to  given  types;  [CONTEXT]    b.append(   "You  are  trying  to  add  data  where  the  time  period  class     ");  b.append(   "is     ");  b.append(item.getPeriod().getClass().getName());  b.append(   ",  but  the  TimeSeries  is  expecting  an  instance  of     ");  b.append(this.timePeriodClass.getName());  b.append(   ".   ");  throw  new  SeriesException(b.toString());  }      [BUGGY]  fireSeriesChanged(item.getPeriod(),  notify);  [BUGGY]    boolean  added  =  false;  int  count  =  getItemCount();  if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  added  =  true;  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	506	506	1	replace	fireSeriesChanged(item.getPeriod(),  notify);	      fireSeriesChanged();    	non-compiled	[CE]  method  fireSeriesChanged  in  class  Series  cannot  be  applied  to  given  types;	5284	None
2258	[BUG]  [BUGGY]  while(startIndex  >  0)  {  emptyRange  =  true;  [CE]  illegal  start  of  expression  [CONTEXT]    if  (end  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'end'  argument.   ");  }  if  (start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException(     "Requires  start  on  or  before  end.   ");  }  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {    [BUGGY]  while(startIndex  >  0)  {  emptyRange  =  true;  [BUGGY]    startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	934	934	1	replace	while(startIndex  >  0)  {  emptyRange  =  true;	      while(startIndex    <    0)    {    emptyRange    =    true;    	non-compiled	[CE]  illegal  start  of  expression	771	None
2281	[BUG]  [BUGGY]  if(startIndex  >  end)  {  throw  new  IllegalArgumentException( "   ");  }  [CE]  illegal  start  of  type  [CONTEXT]    throw  new  IllegalArgumentException(   "Null  'end'  argument.   ");  }  if  (start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException(     "Requires  start  on  or  before  end.   ");  }  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);    [BUGGY]  if(startIndex  >  end)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]    if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  emptyRange  =  true;  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	935	935	1	replace	if(startIndex  >  end)  {  throw  new  IllegalArgumentException( "   ");  }	      if(startIndex    <    this.data.size())    {    if(startIndex    >    end)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	6482	None
2282	[BUG]  [BUGGY]  if(startIndex  >  this.data.size())  {  if(startIndex  >  end)  {  throw  new  IllegalArgumentException( "   ");  }  [CE]  bad  operand  types  for  binary  operator  [CONTEXT]    throw  new  IllegalArgumentException(   "Null  'end'  argument.   ");  }  if  (start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException(     "Requires  start  on  or  before  end.   ");  }  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);    [BUGGY]  if(startIndex  >  this.data.size())  {  if(startIndex  >  end)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]    if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  emptyRange  =  true;  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	935	935	1	replace	if(startIndex  >  this.data.size())  {  if(startIndex  >  end)  {  throw  new  IllegalArgumentException( "   ");  }	      if(startIndex    <    this.data.size())    {    if(startIndex    >    end)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  bad  operand  types  for  binary  operator  	6482	None
2306	[BUG]  [BUGGY]  return  Collections.binarySearch(this.data,  dummy,  period);  [CE]  no  suitable  method  found  for  binarySearch(List,TimeSeriesDataItem,RegularTimePeriod)  [CONTEXT]    public  int  getIndex(RegularTimePeriod  period)  {  if  (period  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'period'  argument.   ");  }  TimeSeriesDataItem  dummy  =  new  TimeSeriesDataItem(  period,  Integer.MIN_VALUE);    [BUGGY]  return  Collections.binarySearch(this.data,  dummy,  period);  [BUGGY]    }  [CLASS]  TimeSeries  [METHOD]  getIndex  [RETURN_TYPE]  int  RegularTimePeriod  period  [VARIABLES]  boolean  TimeSeriesDataItem  dummy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.3333333333333333	435	435	1	replace	return  Collections.binarySearch(this.data,  dummy,  period);	  return    Collections.binarySearch(this.data,    dummy),    period);    	non-compiled	[CE]  no  suitable  method  found  for  binarySearch(List,TimeSeriesDataItem,RegularTimePeriod)	2666	None
2329	[BUG]  [BUGGY]  while(start  <  end)  {  if(end  >  start)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  bad  operand  types  for  binary  operator  [CONTEXT]    throw  new  IllegalArgumentException(   "Null  'end'  argument.   ");  }  if  (start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException(     "Requires  start  on  or  before  end.   ");  }  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);    [BUGGY]  while(start  <  end)  {  if(end  >  start)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  emptyRange  =  true;  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	935	935	1	replace	while(start  <  end)  {  if(end  >  start)  {  throw  new  IllegalArgumentException( " ");  }	      while(this.data!=    null)    {    this.data    =    new    ArrayList    <    TimePeriod>();    	non-compiled	[CE]  bad  operand  types  for  binary  operator  	2763	None
2330	[BUG]  [BUGGY]  while(start  >  end)  {  if(end  >  start)  {  throw  new  IllegalArgumentException( "Requires  start  <=  end.   ");  }  [CE]  bad  operand  types  for  binary  operator  [CONTEXT]    throw  new  IllegalArgumentException(   "Null  'end'  argument.   ");  }  if  (start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException(     "Requires  start  on  or  before  end.   ");  }  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);    [BUGGY]  while(start  >  end)  {  if(end  >  start)  {  throw  new  IllegalArgumentException( "Requires  start  <=  end.   ");  }  [BUGGY]    if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  emptyRange  =  true;  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	935	935	1	replace	while(start  >  end)  {  if(end  >  start)  {  throw  new  IllegalArgumentException( "Requires  start  <=  end.   ");  }	      while(this.data!=    null)    {    this.data    =    new    ArrayList    <    TimePeriod>();    	non-compiled	[CE]  bad  operand  types  for  binary  operator  	2763	None
2354	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;    [BUGGY]  if(range!=  null)  {  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Integer.MAX_VALUE;  }  [BUGGY]    this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	176	176	1	add	if(range!=  null)  {  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Integer.MAX_VALUE;  }	      	compilable	  [FE]  IllegalArgumentException	460	1
2355	[BUG]  [BUGGY]  if(range!=  null)  {  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Integer.MAX_VALUE;  }  [FE]  IllegalArgumentException  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;    [BUGGY]  if(range!=  null)  {  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Integer.MAX_VALUE;  }  [BUGGY]    this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	176	176	1	replace	if(range!=  null)  {  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Integer.MAX_VALUE;  }	      	compilable	  [FE]  IllegalArgumentException	460	1
2377	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]    }  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);    [BUGGY]  if(endIndex  <  0)  {  endIndex  =  getIndex(start);  if(endIndex  >=  0)  {  emptyRange  =  true;  }  [BUGGY]    endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  emptyRange  =  true;  }  if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	940	942	1	add	if(endIndex  <  0)  {  endIndex  =  getIndex(start);  if(endIndex  >=  0)  {  emptyRange  =  true;  }	  if(endIndex    <    0)    {    //    endIndex    is    not    in    original    series    endIndex    =    -(endIndex    +    1);    //    this    is    first    item    AFTER    end    period    endIndex    =    endIndex    -    1;    //    so    this    is    last    item    BEFORE    end    	compilable	  [FE]  AssertionFailedError	1611	1
2378	[BUG]  [BUGGY]  if(endIndex  <  0)  {  endIndex  =  getIndex(start);  if(endIndex  >=  0)  {  emptyRange  =  true;  }  [FE]  AssertionFailedError  [CONTEXT]    }  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);    [BUGGY]  if(endIndex  <  0)  {  endIndex  =  getIndex(start);  if(endIndex  >=  0)  {  emptyRange  =  true;  }  [BUGGY]    endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  emptyRange  =  true;  }  if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	940	942	1	replace	if(endIndex  <  0)  {  endIndex  =  getIndex(start);  if(endIndex  >=  0)  {  emptyRange  =  true;  }	  if(endIndex    <    0)    {    //    endIndex    is    not    in    original    series    endIndex    =    -(endIndex    +    1);    //    this    is    first    item    AFTER    end    period    endIndex    =    endIndex    -    1;    //    so    this    is    last    item    BEFORE    end    	compilable	  [FE]  AssertionFailedError	1611	1
2378	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]    }  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);    [BUGGY]  if(endIndex  <  0)  {  endIndex  =  getIndex(start);  if(endIndex  >  0)  {  emptyRange  =  true;  }  [BUGGY]    endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  emptyRange  =  true;  }  if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	940	942	1	add	if(endIndex  <  0)  {  endIndex  =  getIndex(start);  if(endIndex  >  0)  {  emptyRange  =  true;  }	  if(endIndex    <    0)    {    //    endIndex    is    not    in    original    series    endIndex    =    -(endIndex    +    1);    //    this    is    first    item    AFTER    end    period    endIndex    =    endIndex    -    1;    //    so    this    is    last    item    BEFORE    end    	compilable	  [FE]  AssertionFailedError	1611	1
2379	[BUG]  [BUGGY]  if(endIndex  <  0)  {  endIndex  =  getIndex(start);  if(endIndex  >  0)  {  emptyRange  =  true;  }  [FE]  AssertionFailedError  [CONTEXT]    }  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);    [BUGGY]  if(endIndex  <  0)  {  endIndex  =  getIndex(start);  if(endIndex  >  0)  {  emptyRange  =  true;  }  [BUGGY]    endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  emptyRange  =  true;  }  if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	940	942	1	replace	if(endIndex  <  0)  {  endIndex  =  getIndex(start);  if(endIndex  >  0)  {  emptyRange  =  true;  }	  if(endIndex    <    0)    {    //    endIndex    is    not    in    original    series    endIndex    =    -(endIndex    +    1);    //    this    is    first    item    AFTER    end    period    endIndex    =    endIndex    -    1;    //    so    this    is    last    item    BEFORE    end    	compilable	  [FE]  AssertionFailedError	1611	1
2402	[BUG]  [BUGGY]  long  maximumItemAge  =  getTimePeriod(getItemCount()  /  1).getSerialIndex();  [CE]  cannot  find  symbol  latest  [CONTEXT]    public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {    [BUGGY]  long  maximumItemAge  =  getTimePeriod(getItemCount()  /  1).getSerialIndex();  [BUGGY]    long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())  >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	741	741	1	replace	long  maximumItemAge  =  getTimePeriod(getItemCount()  /  1).getSerialIndex();	      long    maximumItemAge    =    getTimePeriod(getItemCount()    -    1).getSerialIndex();    	non-compiled	[CE]  cannot  find  symbol  latest	3483	None
2425	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]    throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(   "Requires  start  >=  0.   ");  }  if  (end  <  start)  {    [BUGGY]  throw  new  IllegalArgumentException( "Requires  end  >=  0 ");  [BUGGY]    }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	883	883	1	add	throw  new  IllegalArgumentException( "Requires  end  >=  0 ");	  throw    new    IllegalArgumentException(   "Requires    start    >=    end.   ");    	compilable	  [FE]  IllegalArgumentException	51	1
2426	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Requires  end  >=  0 ");  [FE]  IllegalArgumentException  [CONTEXT]    throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(   "Requires  start  >=  0.   ");  }  if  (end  <  start)  {    [BUGGY]  throw  new  IllegalArgumentException( "Requires  end  >=  0 ");  [BUGGY]    }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	883	883	1	replace	throw  new  IllegalArgumentException( "Requires  end  >=  0 ");	  throw    new    IllegalArgumentException(   "Requires    start    >=    end.   ");    	compilable	  [FE]  IllegalArgumentException	51	1
2426	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]    throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(   "Requires  start  >=  0.   ");  }  if  (end  <  start)  {    [BUGGY]  throw  new  IllegalArgumentException( "Requires  end  >=  0. ");  [BUGGY]    }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	883	883	1	add	throw  new  IllegalArgumentException( "Requires  end  >=  0. ");	  throw    new    IllegalArgumentException(   "Requires    start    >=    end.   ");    	compilable	  [FE]  IllegalArgumentException	51	1
2427	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Requires  end  >=  0. ");  [FE]  IllegalArgumentException  [CONTEXT]    throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(   "Requires  start  >=  0.   ");  }  if  (end  <  start)  {    [BUGGY]  throw  new  IllegalArgumentException( "Requires  end  >=  0. ");  [BUGGY]    }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	883	883	1	replace	throw  new  IllegalArgumentException( "Requires  end  >=  0. ");	  throw    new    IllegalArgumentException(   "Requires    start    >=    end.   ");    	compilable	  [FE]  IllegalArgumentException	51	1
2450	[BUG]  [BUGGY]  long  removed  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  [CE]  incompatible  types  [CONTEXT]    public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();    [BUGGY]  long  removed  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  [BUGGY]    while  ((latest  -  getTimePeriod(0).getSerialIndex())  >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	742	742	1	replace	long  removed  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();	      	non-compiled	[CE]  incompatible  types	387	None
2473	[BUG]  [BUGGY]  this.domain  =   "domain   ";  while(item!=  null  &&  item.isSeriesKey())  {  this.data.add(item);  [CE]  illegal  start  of  expression  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);    [BUGGY]  this.domain  =   "domain   ";  while(item!=  null  &&  item.isSeriesKey())  {  this.data.add(item);  [BUGGY]    this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	175	175	1	replace	this.domain    =   "domain   ";    while(item!=  null  &&  item.isSeriesKey())  {  this.data.add(item);	  	non-compiled	[CE]  illegal  start  of  expression	2	None
2474	[BUG]  [BUGGY]  this.domain  =   "domain   ";  while(this.data!=  null  &&  item.isSeriesKey())  {  this.data.add(item);  [CE]  illegal  start  of  expression  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);    [BUGGY]  this.domain  =   "domain   ";  while(this.data!=  null  &&  item.isSeriesKey())  {  this.data.add(item);  [BUGGY]    this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	175	175	1	replace	this.domain    =   "domain   ";    while(this.data!=  null  &&  item.isSeriesKey())  {  this.data.add(item);	  	non-compiled	[CE]  illegal  start  of  expression	2	None
2475	[BUG]  [BUGGY]  this.domain  =   "domain   ";  while(item!=  null  &&  item.hasTimeSeriesKey())  {  this.data.add(item);  [CE]  illegal  start  of  expression  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);    [BUGGY]  this.domain  =   "domain   ";  while(item!=  null  &&  item.hasTimeSeriesKey())  {  this.data.add(item);  [BUGGY]    this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	175	175	1	replace	this.domain    =   "domain   ";    while(item!=  null  &&  item.hasTimeSeriesKey())  {  this.data.add(item);	  	non-compiled	[CE]  illegal  start  of  expression	2	None
2498	[BUG]  [BUGGY]  while(item.getPeriod()  ==  null)  {  this.data.add(item);  [CE]  illegal  start  of  expression  [CONTEXT]    b.append(   "is     ");  b.append(item.getPeriod().getClass().getName());  b.append(   ",  but  the  TimeSeries  is  expecting  an  instance  of     ");  b.append(this.timePeriodClass.getName());  b.append(   ".   ");  throw  new  SeriesException(b.toString());  }  boolean  added  =  false;    [BUGGY]  while(item.getPeriod()  ==  null)  {  this.data.add(item);  [BUGGY]    int  count  =  getItemCount();  if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  added  =  true;  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	507	507	1	replace	while(item.getPeriod()  ==  null)  {  this.data.add(item);	      while(item.getPeriod()!=    null)    {    this.data.add(item);    	non-compiled	[CE]  illegal  start  of  expression	1	None
2522	[BUG]  [BUGGY]  this.minimumItemCount  =  Integer.MAX_VALUE;  [CE]  cannot  find  symbol  minimumItemCount  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;    [BUGGY]  this.minimumItemCount  =  Integer.MAX_VALUE;  [BUGGY]    this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	180	180	1	replace	this.minimumItemCount  =  Integer.MAX_VALUE;	      this.minimumItemCount    =    Long.MAX_VALUE;    	non-compiled	[CE]  cannot  find  symbol  minimumItemCount	303	None
2545	[BUG]  [BUGGY]  if(notify)  {  if(notify)  {  [CE]  illegal  start  of  expression  [CONTEXT]    b.append(   "You  are  attempting  to  add  an  observation  for     ");  b.append(   "the  time  period     ");  b.append(item.getPeriod().toString());  b.append(   "  but  the  series  already  contains  an  observation   ");  b.append(   "  for  that  time  period.  Duplicates  are  not     ");  b.append(   "permitted.Try  using  the  addOrUpdate()  method.   ");  throw  new  SeriesException(b.toString());  }  }  }    [BUGGY]  if(notify)  {  if(notify)  {  [BUGGY]      if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  removeAgedItems(false);//  remove  old  items  if  necessary,  but    if  (notify)  {  fireSeriesChanged();  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	536	536	1	replace	if(notify)    {    if(notify)  {	  	non-compiled	[CE]  illegal  start  of  expression	890	None
2546	[BUG]  [BUGGY]  if(notify)  {  if(notify)  }  [CE]  illegal  start  of  expression  [CONTEXT]    b.append(   "You  are  attempting  to  add  an  observation  for     ");  b.append(   "the  time  period     ");  b.append(item.getPeriod().toString());  b.append(   "  but  the  series  already  contains  an  observation   ");  b.append(   "  for  that  time  period.  Duplicates  are  not     ");  b.append(   "permitted.Try  using  the  addOrUpdate()  method.   ");  throw  new  SeriesException(b.toString());  }  }  }    [BUGGY]  if(notify)  {  if(notify)  }  [BUGGY]      if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  removeAgedItems(false);//  remove  old  items  if  necessary,  but    if  (notify)  {  fireSeriesChanged();  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	536	536	1	replace	if(notify)    {    if(notify)  }	  	non-compiled	[CE]  illegal  start  of  expression	890	None
2547	[BUG]  [BUGGY]  if(notify)  {  if(annotation)  {  [CE]  illegal  start  of  expression  [CONTEXT]    b.append(   "You  are  attempting  to  add  an  observation  for     ");  b.append(   "the  time  period     ");  b.append(item.getPeriod().toString());  b.append(   "  but  the  series  already  contains  an  observation   ");  b.append(   "  for  that  time  period.  Duplicates  are  not     ");  b.append(   "permitted.Try  using  the  addOrUpdate()  method.   ");  throw  new  SeriesException(b.toString());  }  }  }    [BUGGY]  if(notify)  {  if(annotation)  {  [BUGGY]      if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  removeAgedItems(false);//  remove  old  items  if  necessary,  but    if  (notify)  {  fireSeriesChanged();  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	536	536	1	replace	if(notify)    {    if(annotation)  {	  	non-compiled	[CE]  illegal  start  of  expression	890	None
2570	[BUG]  [BUGGY]  &&(last  -  getTimePeriod(0).getSerialIndex()))  {  this.data.add(new  ArrayList(this.maximumItemAge,  this.data.size()));  removed  =  true;  [CE]  cannot  find  symbol  last  [CONTEXT]    public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())    [BUGGY]  &&(last  -  getTimePeriod(0).getSerialIndex()))  {  this.data.add(new  ArrayList(this.maximumItemAge,  this.data.size()));  removed  =  true;  [BUGGY]    >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	744	744	1	replace	&&(last  -  getTimePeriod(0).getSerialIndex()))  {  this.data.add(new  ArrayList(this.maximumItemAge,  this.data.size()));  removed  =  true;	      &&(latest    -    getTimePeriod(0).getSerialIndex()))    {    this.data.add(new    ArrayList(this.maximumItemAge,    this.data.size()    -    1));    removed    =    true;    	non-compiled	[CE]  cannot  find  symbol  last	1022	None
2618	[BUG]  [BUGGY]  return  createCopy(startIndex,  endIndex,  copy.data.length);  [CE]  package  copy  does  not  exist  [CONTEXT]    if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  }  else  {    [BUGGY]  return  createCopy(startIndex,  endIndex,  copy.data.length);  [BUGGY]    }  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	953	953	1	replace	return  createCopy(startIndex,  endIndex,  copy.data.length);	  return    createCopy(startIndex,    endIndex,    data.length);    	non-compiled	[CE]  package  copy  does  not  exist	2402	None
2641	[BUG]  [BUGGY]  this.maximumItemCount  =  Math.max(0,  name,  timePeriodClass);  [CE]  no  suitable  method  found  for  max(int,Comparable,Class)  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;  this.range  =  range;    [BUGGY]  this.maximumItemCount  =  Math.max(0,  name,  timePeriodClass);  [BUGGY]    this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	177	177	1	replace	this.maximumItemCount  =  Math.max(0,  name,  timePeriodClass);	      this.maximumItemCount    =    Math.max(0,    timePeriodClass);    	non-compiled	[CE]  no  suitable  method  found  for  max(int,Comparable,Class)	6182	None
2642	[BUG]  [BUGGY]  this.maximumItemCount  =  Math.max(0,  domain,  timePeriodClass);  [CE]  no  suitable  method  found  for  max(int,String,Class)  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;  this.range  =  range;    [BUGGY]  this.maximumItemCount  =  Math.max(0,  domain,  timePeriodClass);  [BUGGY]    this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	177	177	1	replace	this.maximumItemCount  =  Math.max(0,  domain,  timePeriodClass);	      this.maximumItemCount    =    Math.max(0,    timePeriodClass);    	non-compiled	[CE]  no  suitable  method  found  for  max(int,String,Class)	6182	None
2666	[BUG]  [BUGGY]  if(getItemCount(1)  <  this.maximumItemAge)  {  [CE]  no  suitable  method  found  for  getItemCount(int)  [CONTEXT]    public  void  removeAgedItems(boolean  notify)  {      [BUGGY]  if(getItemCount(1)  <  this.maximumItemAge)  {  [BUGGY]    long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())  >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	740	740	1	replace	if(getItemCount(1)  <  this.maximumItemAge)  {	  if(getItemCount(1)    >    this.maximumItemAge)    {    	non-compiled	[CE]  no  suitable  method  found  for  getItemCount(int)	4742	None
2689	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);    [BUGGY]      this.domain  =  domain;  this.range  =  range;  this.domain  =  domain;  [BUGGY]    this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	175	175	1	add	        this.domain    =    domain;    this.range    =    range;    this.domain  =  domain;	  	compilable	  [FE]  IllegalArgumentException	1539	1
2690	[BUG]  [BUGGY]      this.domain  =  domain;  this.range  =  range;  this.domain  =  domain;  [FE]  IllegalArgumentException  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);    [BUGGY]      this.domain  =  domain;  this.range  =  range;  this.domain  =  domain;  [BUGGY]    this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	175	175	1	replace	        this.domain    =    domain;    this.range    =    range;    this.domain  =  domain;	  	compilable	  [FE]  IllegalArgumentException	1539	1
2690	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);    [BUGGY]      this.domain  =  domain;  this.range  =  range;  if(timePeriodClass  ==  null)  {  this.domain  =  domain;  this.range  =  range;  }  [BUGGY]    this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	175	175	1	add	        this.domain    =    domain;    this.range    =    range;    if(timePeriodClass  ==  null)  {  this.domain  =  domain;  this.range  =  range;  }	  	compilable	  [FE]  IllegalArgumentException	1539	1
2691	[BUG]  [BUGGY]      this.domain  =  domain;  this.range  =  range;  if(timePeriodClass  ==  null)  {  this.domain  =  domain;  this.range  =  range;  }  [FE]  IllegalArgumentException  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);    [BUGGY]      this.domain  =  domain;  this.range  =  range;  if(timePeriodClass  ==  null)  {  this.domain  =  domain;  this.range  =  range;  }  [BUGGY]    this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	175	175	1	replace	        this.domain    =    domain;    this.range    =    range;    if(timePeriodClass  ==  null)  {  this.domain  =  domain;  this.range  =  range;  }	  	compilable	  [FE]  IllegalArgumentException	1539	1
2691	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);    [BUGGY]      this.domain  =  domain;  this.range  =  range;  if(timePeriodClass!=  null)  {  this.domain  =  domain;  this.range  =  range;  }  [BUGGY]    this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	175	175	1	add	        this.domain    =    domain;    this.range    =    range;    if(timePeriodClass!=  null)  {  this.domain  =  domain;  this.range  =  range;  }	  	compilable	  [FE]  IllegalArgumentException	1539	1
2692	[BUG]  [BUGGY]      this.domain  =  domain;  this.range  =  range;  if(timePeriodClass!=  null)  {  this.domain  =  domain;  this.range  =  range;  }  [FE]  IllegalArgumentException  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);    [BUGGY]      this.domain  =  domain;  this.range  =  range;  if(timePeriodClass!=  null)  {  this.domain  =  domain;  this.range  =  range;  }  [BUGGY]    this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	175	175	1	replace	        this.domain    =    domain;    this.range    =    range;    if(timePeriodClass!=  null)  {  this.domain  =  domain;  this.range  =  range;  }	  	compilable	  [FE]  IllegalArgumentException	1539	1
2713	[BUG]  [BUGGY]  TimeSeriesDataItem  item  =(TimeSeriesDataItem)getDataItem(last);  [CE]  class  or  interface  expected  [CONTEXT]      if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())  >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }    [BUGGY]  TimeSeriesDataItem  item  =(TimeSeriesDataItem)getDataItem(last);  [BUGGY]    if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	748	748	1	replace	TimeSeriesDataItem  item  =(TimeSeriesDataItem)getDataItem(last);	      while((    latest    -    getTimePeriod(0).getSerialIndex()    >    this.maximumItemAge)>    this.data.size())    {    this.data.remove(0);    	non-compiled	[CE]  class  or  interface  expected	2523	None
2714	[BUG]  [BUGGY]  TimeSeriesDataItem  item  =(TimeSeriesDataItem)getDataItem(last,  notify);  [CE]  class  or  interface  expected  [CONTEXT]      if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())  >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }    [BUGGY]  TimeSeriesDataItem  item  =(TimeSeriesDataItem)getDataItem(last,  notify);  [BUGGY]    if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	748	748	1	replace	TimeSeriesDataItem  item  =(TimeSeriesDataItem)getDataItem(last,  notify);	      while((    latest    -    getTimePeriod(0).getSerialIndex()    >    this.maximumItemAge)>    this.data.size())    {    this.data.remove(0);    	non-compiled	[CE]  class  or  interface  expected	2523	None
2738	[BUG]  [BUGGY]  while(count  >  1)  {  this.data.add(item);  added  =  notify;  [CE]  'else'  without  'if'  [CONTEXT]    b.append(item.getPeriod().getClass().getName());  b.append(   ",  but  the  TimeSeries  is  expecting  an  instance  of     ");  b.append(this.timePeriodClass.getName());  b.append(   ".   ");  throw  new  SeriesException(b.toString());  }  boolean  added  =  false;  int  count  =  getItemCount();    [BUGGY]  while(count  >  1)  {  this.data.add(item);  added  =  notify;  [BUGGY]    if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  added  =  true;  }  else  {  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	508	508	1	replace	while(count  >  1)  {  this.data.add(item);  added  =  notify;	      while(count    >    0)    {    this.data.add(item);    added    =    notify;    	non-compiled	[CE]  'else'  without  'if'	147	None
2762	[BUG]  [BUGGY]  this.data  =  new  java.util.ArrayList();  [CE]  no  suitable  constructor  found  for  Series()  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {    [BUGGY]  this.data  =  new  java.util.ArrayList();  [BUGGY]    super(name);  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	174	174	1	replace	this.data  =  new  java.util.ArrayList();	      this();    	non-compiled	[CE]  no  suitable  constructor  found  for  Series()	6541	None
2785	[BUG]  [BUGGY]  TimeSeriesDataItem  item  =(TimeSeriesDataItem)this.data.get(last);  [CE]  class  or  interface  expected  [CONTEXT]      if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())  >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }    [BUGGY]  TimeSeriesDataItem  item  =(TimeSeriesDataItem)this.data.get(last);  [BUGGY]    if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	748	748	1	replace	TimeSeriesDataItem  item  =(TimeSeriesDataItem)this.data.get(last);	      while((    latest    -    getTimePeriod(0).getSerialIndex())>    this.maximumItemAge)    {    this.data.remove(0);    	non-compiled	[CE]  class  or  interface  expected	2521	None
2786	[BUG]  [BUGGY]  TimeSeriesDataItem  item  =(TimeSeriesDataItem)this.data.get(last,  notify);  [CE]  class  or  interface  expected  [CONTEXT]      if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())  >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }    [BUGGY]  TimeSeriesDataItem  item  =(TimeSeriesDataItem)this.data.get(last,  notify);  [BUGGY]    if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	748	748	1	replace	TimeSeriesDataItem  item  =(TimeSeriesDataItem)this.data.get(last,  notify);	      while((    latest    -    getTimePeriod(0).getSerialIndex())>    this.maximumItemAge)    {    this.data.remove(0);    	non-compiled	[CE]  class  or  interface  expected	2521	None
2810	[BUG]  [BUGGY]  long  maximalItemAge  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  [CE]  cannot  find  symbol  removed  [CONTEXT]    public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();    [BUGGY]  long  maximalItemAge  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  [BUGGY]    boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())  >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	742	742	1	replace	long  maximalItemAge  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();	      long    maximum    =    getTimePeriod(getItemCount()    -    1).getSerialIndex();    	non-compiled	[CE]  cannot  find  symbol  removed	5643	None
2833	[BUG]  [BUGGY]  if(endIndex  <  0)  {  for(TimeSeries  start  :(TimeSeries)this.data.get(startIndex));  if(endIndex  >=  0)  {  emptyRange  =  false;  }  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [CONTEXT]    int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period    [BUGGY]  if(endIndex  <  0)  {  for(TimeSeries  start  :(TimeSeries)this.data.get(startIndex));  if(endIndex  >=  0)  {  emptyRange  =  false;  }  [BUGGY]    endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  }  if  (endIndex  <  0)  {  emptyRange  =  true;  }  if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  }  else  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	942	943	1	replace	if(endIndex  <  0)  {  for(TimeSeries  start  :(TimeSeries)this.data.get(startIndex));  if(endIndex  >=  0)  {  emptyRange  =  false;  }	      if(endIndex    <    0)    {    for(TimeSeries    start    :(TimeSeries)this.data.get(startIndex));    if(startIndex    >=    0)    {    emptyRange    =    false;    }    	non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	1130	None
2834	[BUG]  [BUGGY]  if(endIndex  >=  0)  {  for(TimeSeries  start  :(TimeSeries)this.data.get(startIndex));  if(endIndex  >=  0)  {  emptyRange  =  false;  }  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [CONTEXT]    int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period    [BUGGY]  if(endIndex  >=  0)  {  for(TimeSeries  start  :(TimeSeries)this.data.get(startIndex));  if(endIndex  >=  0)  {  emptyRange  =  false;  }  [BUGGY]    endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  }  if  (endIndex  <  0)  {  emptyRange  =  true;  }  if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  }  else  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	942	943	1	replace	if(endIndex  >=  0)  {  for(TimeSeries  start  :(TimeSeries)this.data.get(startIndex));  if(endIndex  >=  0)  {  emptyRange  =  false;  }	      if(endIndex    <    0)    {    for(TimeSeries    start    :(TimeSeries)this.data.get(startIndex));    if(startIndex    >=    0)    {    emptyRange    =    false;    }    	non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	1130	None
2857	[BUG]  [BUGGY]  int  startIndex  =  getIndex(start,  end  +  1);  [CE]  bad  operand  types  for  binary  operator  '+'  [CONTEXT]    throw  new  IllegalArgumentException(   "Null  'start'  argument.   ");  }  if  (end  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'end'  argument.   ");  }  if  (start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException(     "Requires  start  on  or  before  end.   ");  }  boolean  emptyRange  =  false;    [BUGGY]  int  startIndex  =  getIndex(start,  end  +  1);  [BUGGY]    if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	932	932	1	replace	int  startIndex  =  getIndex(start,  end  +  1);	  int    startIndex    =    getIndex(start    +    1);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	3902	None
2881	[BUG]  [BUGGY]  [Delete]  [CE]  illegal  start  of  expression  [CONTEXT]    public  void  add(RegularTimePeriod  period,  Number  value,  boolean  notify)  {  TimeSeriesDataItem  item  =  new  TimeSeriesDataItem(period,  value);  add(item,  notify);    [BUGGY]  [Delete]  [BUGGY]      [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  Number  value  boolean  notify  [VARIABLES]  boolean  notify  Number  value  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	604	604	1	replace	[Delete]	  if(value!=    null)    {    TimeSeriesDataItem    item    =    new    TimeSeriesDataItem(period,    value,    notify);    item.addValue();    }    else    {    fireSeriesChanged();    }    	non-compiled	[CE]  illegal  start  of  expression	902	None
2906	[BUG]  [BUGGY]  this.time  =  domain.getTime();  [CE]  cannot  find  symbol  time  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;    [BUGGY]  this.time  =  domain.getTime();  [BUGGY]    this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	176	176	1	replace	this.time  =  domain.getTime();	      this.data    =    new    java.util.ArrayList();    	non-compiled	[CE]  cannot  find  symbol  time	3003	None
2930	[BUG]  [BUGGY]  item.setDataItem(getItemCount()  +  1);  [CE]  class  or  interface  expected  [CONTEXT]    }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  removeAgedItems(false);//  remove  old  items  if  necessary,  but      [BUGGY]  item.setDataItem(getItemCount()  +  1);  [BUGGY]    if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	545	545	1	replace	item.setDataItem(getItemCount()  +  1);	      item.setDataItem(getItemCount()    -    1);    	non-compiled	[CE]  class  or  interface  expected	5103	None
2954	[BUG]  [BUGGY]  }  [CE]  illegal  start  of  type  [CONTEXT]    public  void  add(TimeSeriesDataItem  item,  boolean  notify)  {    [BUGGY]  }  [BUGGY]    if  (item  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'item'  argument.   ");  }  if  (!item.getPeriod().getClass().equals(this.timePeriodClass))  {  StringBuffer  b  =  new  StringBuffer();  b.append(   "You  are  trying  to  add  data  where  the  time  period  class     ");  b.append(   "is     ");  b.append(item.getPeriod().getClass().getName());  b.append(   ",  but  the  TimeSeries  is  expecting  an  instance  of     ");  b.append(this.timePeriodClass.getName());  b.append(   ".   ");  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	491	491	1	replace	}	      if(item    ==    null)    {    throw    new    IllegalArgumentException(   "Null    'item'    argument.   ");    }    	non-compiled	[CE]  illegal  start  of  type	818	None
2978	[BUG]  [BUGGY]  while(item!=  null  &&  item.isLocal())  {  add(item,  notify);  [CE]  illegal  start  of  expression  [CONTEXT]    public  void  add(RegularTimePeriod  period,  double  value,  boolean  notify)  {  TimeSeriesDataItem  item  =  new  TimeSeriesDataItem(period,  value);  add(item,  notify);    [BUGGY]  while(item!=  null  &&  item.isLocal())  {  add(item,  notify);  [BUGGY]    }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  double  value  boolean  notify  [VARIABLES]  boolean  notify  double  value  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.2581988897471611	576	576	1	replace	while(item!=  null  &&  item.isLocal())  {  add(item,  notify);	      while(item!=    null    &&    item.isLocal())    {    add(item);    	non-compiled	[CE]  illegal  start  of  expression	435	None
3002	[BUG]  [BUGGY]  return  getDataItemCount();  [CE]  cannot  find  symbol  [CONTEXT]    public  int  getItemCount()  {    [BUGGY]  return  getDataItemCount();  [BUGGY]    }  [CLASS]  TimeSeries  [METHOD]  getItemCount  [RETURN_TYPE]  int  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	240	240	1	replace	return  getDataItemCount();	      	non-compiled	[CE]  cannot  find  symbol	627	None
3050	[BUG]  [BUGGY]  item.setData(value);  [CE]  cannot  find  symbol  [CONTEXT]    public  void  add(RegularTimePeriod  period,  Number  value,  boolean  notify)  {  TimeSeriesDataItem  item  =  new  TimeSeriesDataItem(period,  value);    [BUGGY]  item.setData(value);  [BUGGY]    add(item,  notify);  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  Number  value  boolean  notify  [VARIABLES]  boolean  notify  Number  value  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	603	603	1	replace	item.setData(value);	      item.setValue(value);    fireSeriesChanged();    	non-compiled	[CE]  cannot  find  symbol	2042	None
3073	[BUG]  [BUGGY]  item.removeChangeListener(false);  [CE]  class  or  interface  expected  [CONTEXT]    }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  removeAgedItems(false);//  remove  old  items  if  necessary,  but      [BUGGY]  item.removeChangeListener(false);  [BUGGY]    if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	545	545	1	replace	item.removeChangeListener(false);	      fireSeriesChanged();    	non-compiled	[CE]  class  or  interface  expected	2378	None
3074	[BUG]  [BUGGY]  item.removeChangeListener(true);  [CE]  class  or  interface  expected  [CONTEXT]    }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  removeAgedItems(false);//  remove  old  items  if  necessary,  but      [BUGGY]  item.removeChangeListener(true);  [BUGGY]    if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	545	545	1	replace	item.removeChangeListener(true);	      fireSeriesChanged();    	non-compiled	[CE]  class  or  interface  expected	2378	None
3098	[BUG]  [BUGGY]  this(name,  domain,  range,  DEFAULT_DOMAIN_DESCRIPTION,  timePeriodClass);  [CE]  no  suitable  constructor  found  for  TimeSeries(Comparable,String,String,String,Class)  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {    [BUGGY]  this(name,  domain,  range,  DEFAULT_DOMAIN_DESCRIPTION,  timePeriodClass);  [BUGGY]    super(name);  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	174	174	1	replace	this(name,  domain,  range,  DEFAULT_DOMAIN_DESCRIPTION,  timePeriodClass);	      this(name,    domain,    range,    timePeriodClass);    	non-compiled	[CE]  no  suitable  constructor  found  for  TimeSeries(Comparable,String,String,String,Class)	2210	None
3121	[BUG]  [BUGGY]  this.data.add(-latest,  latest);  removed  =  true;  [CE]  class  or  interface  expected  [CONTEXT]      if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())  >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }    [BUGGY]  this.data.add(-latest,  latest);  removed  =  true;  [BUGGY]    if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	748	748	1	replace	this.data.add(-latest,  latest);  removed  =  true;	      this.data.add(-latest);    removed    =    true;    	non-compiled	[CE]  class  or  interface  expected	2223	None
3122	[BUG]  [BUGGY]  this.data.add(-latest,  -this.maximumItemAge);  removed  =  true;  [CE]  class  or  interface  expected  [CONTEXT]      if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())  >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }    [BUGGY]  this.data.add(-latest,  -this.maximumItemAge);  removed  =  true;  [BUGGY]    if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	748	748	1	replace	this.data.add(-latest,  -this.maximumItemAge);  removed  =  true;	      this.data.add(-latest);    removed    =    true;    	non-compiled	[CE]  class  or  interface  expected	2223	None
3170	[BUG]  [BUGGY]  long  maximalItemAge  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  [CE]  cannot  find  symbol  latest  [CONTEXT]    public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {    [BUGGY]  long  maximalItemAge  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  [BUGGY]    long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())  >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	741	741	1	replace	long  maximalItemAge  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();	      long    last    =    getTimePeriod(getItemCount()    -    1).getSerialIndex();    	non-compiled	[CE]  cannot  find  symbol  latest	3482	None
3193	[BUG]  [BUGGY]  RegularTimePeriod  first  =  getTimePeriod(getItemCount()  -  1);  [CE]  class  or  interface  expected  [CONTEXT]      if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())  >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }    [BUGGY]  RegularTimePeriod  first  =  getTimePeriod(getItemCount()  -  1);  [BUGGY]    if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	748	748	1	replace	RegularTimePeriod  first  =  getTimePeriod(getItemCount()  -  1);	      while((    latest    -    getTimePeriod(0).getSerialIndex())>    this.maximumItemAge)    {    this.data.remove(0);    removed    =    true;    	non-compiled	[CE]  class  or  interface  expected	2522	None
3217	[BUG]  [BUGGY]  if(endIndex  <  0)  {  for(TimeSeries  start  :(TimeSeries)this.data.get(startIndex));  if(endIndex  >  endIndex)  {  emptyRange  =  true;  }  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [CONTEXT]    int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period    [BUGGY]  if(endIndex  <  0)  {  for(TimeSeries  start  :(TimeSeries)this.data.get(startIndex));  if(endIndex  >  endIndex)  {  emptyRange  =  true;  }  [BUGGY]    endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  }  if  (endIndex  <  0)  {  emptyRange  =  true;  }  if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  }  else  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	942	943	1	replace	if(endIndex  <  0)  {  for(TimeSeries  start  :(TimeSeries)this.data.get(startIndex));  if(endIndex  >  endIndex)  {  emptyRange  =  true;  }	      if(endIndex    <    0)    {    for(TimeSeries    start    :(TimeSeries)this.data.get(startIndex));    if(startIndex    >    endIndex)    {    emptyRange    =    true;    }    	non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	1131	None
3218	[BUG]  [BUGGY]  if(endIndex  >  0)  {  for(TimeSeries  start  :(TimeSeries)this.data.get(startIndex));  if(startIndex  >  endIndex)  {  emptyRange  =  true;  }  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [CONTEXT]    int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period    [BUGGY]  if(endIndex  >  0)  {  for(TimeSeries  start  :(TimeSeries)this.data.get(startIndex));  if(startIndex  >  endIndex)  {  emptyRange  =  true;  }  [BUGGY]    endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  }  if  (endIndex  <  0)  {  emptyRange  =  true;  }  if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  }  else  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	942	943	1	replace	if(endIndex  >  0)  {  for(TimeSeries  start  :(TimeSeries)this.data.get(startIndex));  if(startIndex  >  endIndex)  {  emptyRange  =  true;  }	      if(endIndex    <    0)    {    for(TimeSeries    start    :(TimeSeries)this.data.get(startIndex));    if(startIndex    >    endIndex)    {    emptyRange    =    true;    }    	non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	1131	None
3242	[BUG]  [BUGGY]  &&((  last  -  getTimePeriod(0).getSerialIndex())>  this.maximumItemAge))  {  fireSeriesChanged();  [CE]  cannot  find  symbol  last  [CONTEXT]    public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())    [BUGGY]  &&((  last  -  getTimePeriod(0).getSerialIndex())>  this.maximumItemAge))  {  fireSeriesChanged();  [BUGGY]    >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	744	744	1	replace	&&((  last  -  getTimePeriod(0).getSerialIndex())>  this.maximumItemAge))  {  fireSeriesChanged();	      &&((    latest    -    getTimePeriod(0).getSerialIndex())>    this.maximumItemAge))    {    fireSeriesChanged();    	non-compiled	[CE]  cannot  find  symbol  last	579	None
3313	[BUG]  [BUGGY]  this.data.add(index,  timePeriodClass);  [CE]  missing  return  statement  [CONTEXT]    public  RegularTimePeriod  getTimePeriod(int  index)  {    [BUGGY]  this.data.add(index,  timePeriodClass);  [BUGGY]    return  getDataItem(index).getPeriod();  }  [CLASS]  TimeSeries  [METHOD]  getTimePeriod  [RETURN_TYPE]  RegularTimePeriod  int  index  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  long  maximumItemAge  periods  serialVersionUID  int  count  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	372	372	1	replace	this.data.add(index,  timePeriodClass);	      this.data.add(index);    	non-compiled	[CE]  missing  return  statement	2595	None
3314	[BUG]  [BUGGY]  this.data.add(index,  getDataItem(index));  [CE]  missing  return  statement  [CONTEXT]    public  RegularTimePeriod  getTimePeriod(int  index)  {    [BUGGY]  this.data.add(index,  getDataItem(index));  [BUGGY]    return  getDataItem(index).getPeriod();  }  [CLASS]  TimeSeries  [METHOD]  getTimePeriod  [RETURN_TYPE]  RegularTimePeriod  int  index  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  long  maximumItemAge  periods  serialVersionUID  int  count  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	372	372	1	replace	this.data.add(index,  getDataItem(index));	      this.data.add(index);    	non-compiled	[CE]  missing  return  statement	2595	None
3362	[BUG]  [BUGGY]  while(item.getPeriod().compareTo(last)>  0)  >>  this.data.add(-index  -  1,  item);  [CE]  illegal  start  of  expression  [CONTEXT]    if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);    [BUGGY]  while(item.getPeriod().compareTo(last)>  0)  >>  this.data.add(-index  -  1,  item);  [BUGGY]    added  =  true;  }  else  {  int  index  =  Collections.binarySearch(this.data,  item);  if  (index  <  0)  {  this.data.add(-index  -  1,  item);  added  =  true;  }  else  {  StringBuffer  b  =  new  StringBuffer();  b.append(   "You  are  attempting  to  add  an  observation  for     ");  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	516	516	1	replace	while(item.getPeriod().compareTo(last)>  0)  >>  this.data.add(-index  -  1,  item);	      while(item.getPeriod().compareTo(last)>    0)    {    this.data.add(-index    -    1,    item);    	non-compiled	[CE]  illegal  start  of  expression	122	None
3386	[BUG]  [BUGGY]  updateBounds(item.getPeriod(),  notify);  [CE]  cannot  find  symbol  [CONTEXT]    public  void  add(RegularTimePeriod  period,  Number  value,  boolean  notify)  {  TimeSeriesDataItem  item  =  new  TimeSeriesDataItem(period,  value);    [BUGGY]  updateBounds(item.getPeriod(),  notify);  [BUGGY]    }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  Number  value  boolean  notify  [VARIABLES]  boolean  notify  Number  value  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	603	603	1	replace	updateBounds(item.getPeriod(),  notify);	  updateBounds(item,    notify);    	non-compiled	[CE]  cannot  find  symbol	542	None
3410	[BUG]  [BUGGY]  this.timePeriodClass  =  new  java.util.TimePeriodClass();  [CE]  cannot  find  symbol  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;  this.range  =  range;    [BUGGY]  this.timePeriodClass  =  new  java.util.TimePeriodClass();  [BUGGY]    this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	177	177	1	replace	this.timePeriodClass  =  new  java.util.TimePeriodClass();	  this.timePeriodClass    =    new    java.util.ArrayList();    	non-compiled	[CE]  cannot  find  symbol	2858	None
3433	[BUG]  [BUGGY]  while(last.getPeriod()!=  null)  {  this.data.add(last.getPeriod());  [CE]  'else'  without  'if'  [CONTEXT]    if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);    [BUGGY]  while(last.getPeriod()!=  null)  {  this.data.add(last.getPeriod());  [BUGGY]    this.data.add(item);  added  =  true;  }  else  {  int  index  =  Collections.binarySearch(this.data,  item);  if  (index  <  0)  {  this.data.add(-index  -  1,  item);  added  =  true;  }  else  {  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	514	514	1	replace	while(last.getPeriod()!=  null)  {  this.data.add(last.getPeriod());	      	non-compiled	[CE]  'else'  without  'if'	699	None
3434	[BUG]  [BUGGY]  while(last.getPeriod()!=  null)  {  this.data.add(last.getPeriod()  -  1);  [CE]  'else'  without  'if'  [CONTEXT]    if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);    [BUGGY]  while(last.getPeriod()!=  null)  {  this.data.add(last.getPeriod()  -  1);  [BUGGY]    this.data.add(item);  added  =  true;  }  else  {  int  index  =  Collections.binarySearch(this.data,  item);  if  (index  <  0)  {  this.data.add(-index  -  1,  item);  added  =  true;  }  else  {  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	514	514	1	replace	while(last.getPeriod()!=  null)  {  this.data.add(last.getPeriod()  -  1);	      	non-compiled	[CE]  'else'  without  'if'	699	None
3457	[BUG]  [BUGGY]      item.setValue(value);  fireSeriesChanged();  this.data  =  item.getDataItem(item.getPeriod());  [CE]  cannot  find  symbol  [CONTEXT]    public  void  add(RegularTimePeriod  period,  Number  value,  boolean  notify)  {  TimeSeriesDataItem  item  =  new  TimeSeriesDataItem(period,  value);    [BUGGY]      item.setValue(value);  fireSeriesChanged();  this.data  =  item.getDataItem(item.getPeriod());  [BUGGY]    add(item,  notify);  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  Number  value  boolean  notify  [VARIABLES]  boolean  notify  Number  value  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	603	603	1	replace	        item.setValue(value);    fireSeriesChanged();    this.data  =  item.getDataItem(item.getPeriod());	  	non-compiled	[CE]  cannot  find  symbol	2041	None
3458	[BUG]  [BUGGY]      item.setValue(value);  fireSeriesChanged();  this.data  =  item.getDataItem(item.getPeriod(),  notify);  [CE]  cannot  find  symbol  [CONTEXT]    public  void  add(RegularTimePeriod  period,  Number  value,  boolean  notify)  {  TimeSeriesDataItem  item  =  new  TimeSeriesDataItem(period,  value);    [BUGGY]      item.setValue(value);  fireSeriesChanged();  this.data  =  item.getDataItem(item.getPeriod(),  notify);  [BUGGY]    add(item,  notify);  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  Number  value  boolean  notify  [VARIABLES]  boolean  notify  Number  value  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	603	603	1	replace	        item.setValue(value);    fireSeriesChanged();    this.data  =  item.getDataItem(item.getPeriod(),  notify);	  	non-compiled	[CE]  cannot  find  symbol	2041	None
3459	[BUG]  [BUGGY]      item.setValue(value);  fireSeriesChanged();  this.data  =  item.getDataItem(item.getPeriod()).toString();  [CE]  cannot  find  symbol  [CONTEXT]    public  void  add(RegularTimePeriod  period,  Number  value,  boolean  notify)  {  TimeSeriesDataItem  item  =  new  TimeSeriesDataItem(period,  value);    [BUGGY]      item.setValue(value);  fireSeriesChanged();  this.data  =  item.getDataItem(item.getPeriod()).toString();  [BUGGY]    add(item,  notify);  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  Number  value  boolean  notify  [VARIABLES]  boolean  notify  Number  value  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	603	603	1	replace	        item.setValue(value);    fireSeriesChanged();    this.data  =  item.getDataItem(item.getPeriod()).toString();	  	non-compiled	[CE]  cannot  find  symbol	2041	None
3481	[BUG]  [BUGGY]  item.setValue(value,  notify);  fireSeriesChanged();  [CE]  method  setValue  in  class  TimeSeriesDataItem  cannot  be  applied  to  given  types;  [CONTEXT]    public  void  add(RegularTimePeriod  period,  double  value,  boolean  notify)  {  TimeSeriesDataItem  item  =  new  TimeSeriesDataItem(period,  value);    [BUGGY]  item.setValue(value,  notify);  fireSeriesChanged();  [BUGGY]    add(item,  notify);  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  double  value  boolean  notify  [VARIABLES]  boolean  notify  double  value  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.2581988897471611	575	575	1	replace	item.setValue(value,  notify);  fireSeriesChanged();	      item.setValue(value);    fireSeriesChanged();    	non-compiled	[CE]  method  setValue  in  class  TimeSeriesDataItem  cannot  be  applied  to  given  types;	1681	None
3506	[BUG]  [BUGGY]  this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  timePeriodClass,  0);  [CE]  no  suitable  constructor  found  for  TimeSeries(Comparable,String,String,Class,int)  [CONTEXT]    public  TimeSeries(Comparable  name,  Class  timePeriodClass)  {    [BUGGY]  this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  timePeriodClass,  0);  [BUGGY]    this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,    timePeriodClass);  timePeriodClass);  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	155	156	1	replace	this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  timePeriodClass,  0);	      this(name,    DEFAULT_DOMAIN_DESCRIPTION,    DEFAULT_RANGE_DESCRIPTION,    0);    	non-compiled	[CE]  no  suitable  constructor  found  for  TimeSeries(Comparable,String,String,Class,int)	291	None
3530	[BUG]  [BUGGY]  return  getDataItem(index)/  timePeriodClass.getPeriodClass();  [CE]  cannot  find  symbol  [CONTEXT]    public  RegularTimePeriod  getTimePeriod(int  index)  {    [BUGGY]  return  getDataItem(index)/  timePeriodClass.getPeriodClass();  [BUGGY]    }  [CLASS]  TimeSeries  [METHOD]  getTimePeriod  [RETURN_TYPE]  RegularTimePeriod  int  index  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  long  maximumItemAge  periods  serialVersionUID  int  count  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	372	372	1	replace	return  getDataItem(index)/  timePeriodClass.getPeriodClass();	  return    getDataItem(index).getPeriodClass();    	non-compiled	[CE]  cannot  find  symbol	74	None
3554	[BUG]  [BUGGY]  int  maximumItemAge  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  [CE]  possible  loss  of  precision  [CONTEXT]    public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();    [BUGGY]  int  maximumItemAge  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  [BUGGY]    boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())  >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	742	742	1	replace	int  maximumItemAge  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();	      long    maximumItemAge    =    getTimePeriod(getItemCount()    -    1).getSerialIndex();    	non-compiled	[CE]  possible  loss  of  precision	5644	None
3577	[BUG]  [BUGGY]  return  getDataItem(index,  timePeriodClass).getPeriod(0);  [CE]  no  suitable  method  found  for  getDataItem(int,Class)  [CONTEXT]    public  RegularTimePeriod  getTimePeriod(int  index)  {    [BUGGY]  return  getDataItem(index,  timePeriodClass).getPeriod(0);  [BUGGY]    }  [CLASS]  TimeSeries  [METHOD]  getTimePeriod  [RETURN_TYPE]  RegularTimePeriod  int  index  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  long  maximumItemAge  periods  serialVersionUID  int  count  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	372	372	1	replace	return  getDataItem(index,  timePeriodClass).getPeriod(0);	  return    getDataItem(index).getPeriod(0);    	non-compiled	[CE]  no  suitable  method  found  for  getDataItem(int,Class)	6302	None
3578	[BUG]  [BUGGY]  return  getDataItem(index,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION);  [CE]  no  suitable  method  found  for  getDataItem(int,String,String)  [CONTEXT]    public  RegularTimePeriod  getTimePeriod(int  index)  {    [BUGGY]  return  getDataItem(index,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION);  [BUGGY]    }  [CLASS]  TimeSeries  [METHOD]  getTimePeriod  [RETURN_TYPE]  RegularTimePeriod  int  index  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  long  maximumItemAge  periods  serialVersionUID  int  count  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	372	372	1	replace	return  getDataItem(index,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION);	  return    getDataItem(index).getPeriod(0);    	non-compiled	[CE]  no  suitable  method  found  for  getDataItem(int,String,String)	6302	None
3602	[BUG]  [BUGGY]  fireSeriesChanged(item);  [CE]  method  fireSeriesChanged  in  class  Series  cannot  be  applied  to  given  types;  [CONTEXT]    b.append(   ",  but  the  TimeSeries  is  expecting  an  instance  of     ");  b.append(this.timePeriodClass.getName());  b.append(   ".   ");  throw  new  SeriesException(b.toString());  }  boolean  added  =  false;  int  count  =  getItemCount();  if  (count  ==  0)  {    [BUGGY]  fireSeriesChanged(item);  [BUGGY]    this.data.add(item);  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  added  =  true;  }  else  {  int  index  =  Collections.binarySearch(this.data,  item);  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	509	509	1	replace	fireSeriesChanged(item);	      fireSeriesChanged();    	non-compiled	[CE]  method  fireSeriesChanged  in  class  Series  cannot  be  applied  to  given  types;	1347	None
3625	[BUG]  [BUGGY]  TimeSeriesDataItem  item  =  new  TimeSeriesDataItem(period,  value,  notify,  timePeriodClass);  [CE]  no  suitable  constructor  found  for  TimeSeriesDataItem(RegularTimePeriod,double,boolean,Class)  [CONTEXT]    public  void  add(RegularTimePeriod  period,  double  value,  boolean  notify)  {      [BUGGY]  TimeSeriesDataItem  item  =  new  TimeSeriesDataItem(period,  value,  notify,  timePeriodClass);  [BUGGY]    add(item,  notify);  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  double  value  boolean  notify  [VARIABLES]  boolean  notify  double  value  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.2581988897471611	574	574	1	replace	TimeSeriesDataItem  item  =  new  TimeSeriesDataItem(period,  value,  notify,  timePeriodClass);	  TimeSeriesDataItem    item    =    new    TimeSeriesDataItem(period,    value,    notify);    	non-compiled	[CE]  no  suitable  constructor  found  for  TimeSeriesDataItem(RegularTimePeriod,double,boolean,Class)	1753	None
3650	[BUG]  [BUGGY]  while(this.data  ==  null)  {  this.data  =  new  ArrayList  <  TimePeriod>();  [CE]  generics  are  not  supported  in  -source  1.4  [CONTEXT]    throw  new  IllegalArgumentException(   "Null  'end'  argument.   ");  }  if  (start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException(     "Requires  start  on  or  before  end.   ");  }  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);    [BUGGY]  while(this.data  ==  null)  {  this.data  =  new  ArrayList  <  TimePeriod>();  [BUGGY]    if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  emptyRange  =  true;  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	935	935	1	replace	while(this.data  ==  null)  {  this.data  =  new  ArrayList  <  TimePeriod>();	      while(this.data!=    null)    {    this.data    =    new    ArrayList    <    TimePeriod>();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	2763	None
3673	[BUG]  [BUGGY]  while(start!=  null  &&  start.getPeriodType()  ==  this.data.size())  {  this.data.add(start);  [CE]  illegal  start  of  expression  [CONTEXT]    throw  new  IllegalArgumentException(   "Null  'start'  argument.   ");  }  if  (end  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'end'  argument.   ");  }  if  (start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException(     "Requires  start  on  or  before  end.   ");  }  boolean  emptyRange  =  false;    [BUGGY]  while(start!=  null  &&  start.getPeriodType()  ==  this.data.size())  {  this.data.add(start);  [BUGGY]    int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	932	932	1	replace	while(start!=  null  &&  start.getPeriodType()  ==  this.data.size())  {  this.data.add(start);	      while(start    <    null    &&    start.getPeriodType()!=    this.data.size())    {    this.data.add(start);    	non-compiled	[CE]  illegal  start  of  expression	7323	None
3674	[BUG]  [BUGGY]  while(start  <  null  &&  start.getPeriodType()  ==  this.data.size())  {  this.data.add(start);  [CE]  illegal  start  of  expression  [CONTEXT]    throw  new  IllegalArgumentException(   "Null  'start'  argument.   ");  }  if  (end  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'end'  argument.   ");  }  if  (start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException(     "Requires  start  on  or  before  end.   ");  }  boolean  emptyRange  =  false;    [BUGGY]  while(start  <  null  &&  start.getPeriodType()  ==  this.data.size())  {  this.data.add(start);  [BUGGY]    int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	932	932	1	replace	while(start  <  null  &&  start.getPeriodType()  ==  this.data.size())  {  this.data.add(start);	      while(start    <    null    &&    start.getPeriodType()!=    this.data.size())    {    this.data.add(start);    	non-compiled	[CE]  illegal  start  of  expression	7323	None
3697	[BUG]  [BUGGY]  this.data  =  createDataItem(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  timePeriodClass);  [CE]  illegal  start  of  expression  [CONTEXT]    public  TimeSeries(Comparable  name)  {  this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  Day.class);    [BUGGY]  this.data  =  createDataItem(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  timePeriodClass);  [BUGGY]    }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Comparable)  Comparable  name  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.4082482904638631	144	144	1	replace	this.data  =  createDataItem(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  timePeriodClass);	      this.data    =    createDataItem(name,    DEFAULT_DOMAIN_DESCRIPTION,    DEFAULT_RANGE_DESCRIPTION);    	non-compiled	[CE]  illegal  start  of  expression	1658	None
3721	[BUG]  [BUGGY]  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  &&  start  %  2  ==  [CE]  illegal  start  of  expression  [CONTEXT]    int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period    [BUGGY]  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  &&  start  %  2  ==  [BUGGY]    }  if  (endIndex  <  0)  {  emptyRange  =  true;  }  if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  }  else  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	942	943	1	replace	endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  &&  start  %  2  ==	  endIndex    =    endIndex    -    1;//    so    this    is    last    item    BEFORE    end    &&    start    <    	non-compiled	[CE]  illegal  start  of  expression	5161	None
3722	[BUG]  [BUGGY]  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  &&  start  %  2!=  [CE]  illegal  start  of  expression  [CONTEXT]    int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period    [BUGGY]  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  &&  start  %  2!=  [BUGGY]    }  if  (endIndex  <  0)  {  emptyRange  =  true;  }  if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  }  else  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	942	943	1	replace	endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  &&  start  %  2!=	  endIndex    =    endIndex    -    1;//    so    this    is    last    item    BEFORE    end    &&    start    <    	non-compiled	[CE]  illegal  start  of  expression	5161	None
3746	[BUG]  [BUGGY]  b.append(item.getPeriod().getName());  [CE]  cannot  find  symbol  [CONTEXT]    throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }    [BUGGY]  b.append(item.getPeriod().getName());  [BUGGY]    removeAgedItems(false);//  remove  old  items  if  necessary,  but          //  don't  notify  anyone,  because  that                    //  happens  next  anyway...    if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	542	544	1	replace	b.append(item.getPeriod().getName());	      b.append(item.getPeriod().getValue());    	non-compiled	[CE]  cannot  find  symbol	1419	None
3817	[BUG]  [BUGGY]  int  startIndex  =  getIndex(start);  [CE]  illegal  start  of  type  [CONTEXT]    startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }    [BUGGY]  int  startIndex  =  getIndex(start);  [BUGGY]    if  (endIndex  <  0)  {  emptyRange  =  true;  }  if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  }  else  {  return  createCopy(startIndex,  endIndex);  }  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	944	944	1	replace	int  startIndex  =  getIndex(start);	      int    endIndex    =    getIndex(startIndex);    	non-compiled	[CE]  illegal  start  of  type	7441	None
3841	[BUG]  [BUGGY]  this.data.add(period,  value,  notify);  notifyListeners(new  DataItem(period,  value,  false));  [CE]  illegal  start  of  expression  [CONTEXT]    public  TimeSeries(Comparable  name,  Class  timePeriodClass)  {  this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  timePeriodClass);    [BUGGY]  this.data.add(period,  value,  notify);  notifyListeners(new  DataItem(period,  value,  false));  [BUGGY]    }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	157	157	1	replace	this.data.add(period,  value,  notify);  notifyListeners(new  DataItem(period,  value,  false));	      this.data    =    new    ArrayList    <    Comparable>(DEFAULT_DOMAIN_DESCRIPTION,    DEFAULT_RANGE_DESCRIPTION);    	non-compiled	[CE]  illegal  start  of  expression	1922	None
3842	[BUG]  [BUGGY]  this.data.add(period,  value);  notifyListeners(new  DataItem(period,  value,  notify));  [CE]  illegal  start  of  expression  [CONTEXT]    public  TimeSeries(Comparable  name,  Class  timePeriodClass)  {  this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  timePeriodClass);    [BUGGY]  this.data.add(period,  value);  notifyListeners(new  DataItem(period,  value,  notify));  [BUGGY]    }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	157	157	1	replace	this.data.add(period,  value);  notifyListeners(new  DataItem(period,  value,  notify));	      this.data    =    new    ArrayList    <    Comparable>(DEFAULT_DOMAIN_DESCRIPTION,    DEFAULT_RANGE_DESCRIPTION);    	non-compiled	[CE]  illegal  start  of  expression	1922	None
3866	[BUG]  [BUGGY]  endIndex  =  -(endIndex  +  1);  //  this  is  last  item  AFTER  end  period  endIndex  =  endIndex  -  1;  //  so  this  is  last  item  BEFORE  end  &  [CE]  illegal  start  of  expression  [CONTEXT]    boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series    [BUGGY]  endIndex  =  -(endIndex  +  1);  //  this  is  last  item  AFTER  end  period  endIndex  =  endIndex  -  1;  //  so  this  is  last  item  BEFORE  end  &  [BUGGY]    endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  emptyRange  =  true;  }  if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  }  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	941	943	1	replace	endIndex  =  -(endIndex  +  1);  //  this  is  last  item  AFTER  end  period  endIndex  =  endIndex  -  1;  //  so  this  is  last  item  BEFORE  end  &	  endIndex    =    -(endIndex    +    1);    //    this    is    first    item    AFTER    end    period    endIndex    =    endIndex    -    1;    //    so    this    is    last    item    BEFORE    end    &    	non-compiled	[CE]  illegal  start  of  expression	2690	None
3914	[BUG]  [BUGGY]  if(start  ==  null  ||  start.compareTo(end)>  0)  {  [CE]  illegal  start  of  expression  [CONTEXT]    if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);    [BUGGY]  if(start  ==  null  ||  start.compareTo(end)>  0)  {  [BUGGY]    added  =  true;  }  else  {  int  index  =  Collections.binarySearch(this.data,  item);  if  (index  <  0)  {  this.data.add(-index  -  1,  item);  added  =  true;  }  else  {  StringBuffer  b  =  new  StringBuffer();  b.append(   "You  are  attempting  to  add  an  observation  for     ");  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	516	516	1	replace	if(start  ==  null  ||  start.compareTo(end)>  0)  {	      while(item.getPeriod().compareTo(last)    <    0)    {    this.data.add(item);    	non-compiled	[CE]  illegal  start  of  expression	123	None
3962	[BUG]  [BUGGY]  RegularTimePeriod  endIndex  =(RegularTimePeriod)this.data.get(startIndex);  [CE]  bad  operand  types  for  binary  operator  '<'  [CONTEXT]     "Requires  start  on  or  before  end.   ");  }  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }    [BUGGY]  RegularTimePeriod  endIndex  =(RegularTimePeriod)this.data.get(startIndex);  [BUGGY]    int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  emptyRange  =  true;  }  if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	939	939	1	replace	RegularTimePeriod  endIndex  =(RegularTimePeriod)this.data.get(startIndex);	      RegularTimePeriod    end    =(RegularTimePeriod)this.data.get(startIndex);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '<'	1945	None
3986	[BUG]  [BUGGY]  fireSeriesChanged(item);  [CE]  illegal  start  of  expression  [CONTEXT]    public  void  add(RegularTimePeriod  period,  double  value,  boolean  notify)  {  TimeSeriesDataItem  item  =  new  TimeSeriesDataItem(period,  value);  add(item,  notify);    [BUGGY]  fireSeriesChanged(item);  [BUGGY]    }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  double  value  boolean  notify  [VARIABLES]  boolean  notify  double  value  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.2581988897471611	576	576	1	replace	fireSeriesChanged(item);	      fireSeriesChanged();    	non-compiled	[CE]  illegal  start  of  expression	434	None
4011	[BUG]  [BUGGY]      this.data.get(index);  this.data.set(index);  [CE]  method  set  in  interface  List  cannot  be  applied  to  given  types;  [CONTEXT]    public  TimeSeriesDataItem  getDataItem(int  index)  {    [BUGGY]      this.data.get(index);  this.data.set(index);  [BUGGY]    return  (TimeSeriesDataItem)  this.data.get(index);  }  [CLASS]  TimeSeries  [METHOD]  getDataItem  [RETURN_TYPE]  TimeSeriesDataItem  int  index  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  long  maximumItemAge  periods  serialVersionUID  int  count  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	341	341	1	replace	        this.data.get(index);    this.data.set(index);	  	non-compiled	[CE]  method  set  in  interface  List  cannot  be  applied  to  given  types;	411	None
4034	[BUG]  [BUGGY]  if(this.add)  {  [CE]  cannot  find  symbol  add  [CONTEXT]    b.append(   "You  are  attempting  to  add  an  observation  for     ");  b.append(   "the  time  period     ");  b.append(item.getPeriod().toString());  b.append(   "  but  the  series  already  contains  an  observation   ");  b.append(   "  for  that  time  period.  Duplicates  are  not     ");  b.append(   "permitted.Try  using  the  addOrUpdate()  method.   ");  throw  new  SeriesException(b.toString());  }  }  }    [BUGGY]  if(this.add)  {  [BUGGY]      if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  removeAgedItems(false);//  remove  old  items  if  necessary,  but    if  (notify)  {  fireSeriesChanged();  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	536	536	1	replace	if(this.add)  {	  if(this.added)    {    	non-compiled	[CE]  cannot  find  symbol  add	2461	None
4081	[BUG]  [BUGGY]  checkPeriod(getTimePeriodClass(),  index);  [CE]  cannot  find  symbol  [CONTEXT]    public  RegularTimePeriod  getTimePeriod(int  index)  {    [BUGGY]  checkPeriod(getTimePeriodClass(),  index);  [BUGGY]    return  getDataItem(index).getPeriod();  }  [CLASS]  TimeSeries  [METHOD]  getTimePeriod  [RETURN_TYPE]  RegularTimePeriod  int  index  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  long  maximumItemAge  periods  serialVersionUID  int  count  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	372	372	1	replace	checkPeriod(getTimePeriodClass(),  index);	      checkPeriod(getTimePeriod());    	non-compiled	[CE]  cannot  find  symbol	6903	None
4082	[BUG]  [BUGGY]  checkPeriod(index,  getTimePeriod());  [CE]  method  getTimePeriod  in  class  TimeSeries  cannot  be  applied  to  given  types;  [CONTEXT]    public  RegularTimePeriod  getTimePeriod(int  index)  {    [BUGGY]  checkPeriod(index,  getTimePeriod());  [BUGGY]    return  getDataItem(index).getPeriod();  }  [CLASS]  TimeSeries  [METHOD]  getTimePeriod  [RETURN_TYPE]  RegularTimePeriod  int  index  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  long  maximumItemAge  periods  serialVersionUID  int  count  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	372	372	1	replace	checkPeriod(index,  getTimePeriod());	      checkPeriod(getTimePeriod());    	non-compiled	[CE]  method  getTimePeriod  in  class  TimeSeries  cannot  be  applied  to  given  types;	6903	None
4106	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]    }  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);    [BUGGY]      endIndex  =  getIndex(end);  endIndex  =  getIndex(end);  [BUGGY]    if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series    endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period      endIndex  =  endIndex  -  1;  //  so  this  is  last  item  BEFORE  end  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  emptyRange  =  true;  }  if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	940	942	1	add	        endIndex    =    getIndex(end);    endIndex  =  getIndex(end);	  	compilable	  [FE]  IllegalArgumentException	1778	1
4107	[BUG]  [BUGGY]      endIndex  =  getIndex(end);  endIndex  =  getIndex(end);  [FE]  IllegalArgumentException  [CONTEXT]    }  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);    [BUGGY]      endIndex  =  getIndex(end);  endIndex  =  getIndex(end);  [BUGGY]    if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series    endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period      endIndex  =  endIndex  -  1;  //  so  this  is  last  item  BEFORE  end  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  emptyRange  =  true;  }  if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	940	942	1	replace	        endIndex    =    getIndex(end);    endIndex  =  getIndex(end);	  	compilable	  [FE]  IllegalArgumentException	1778	1
4107	[BUG]  [BUGGY]      endIndex  =  getIndex(end);  int  endIndex  =  getIndex(start);  [CE]  variable  endIndex  is  already  defined  in  method  createCopy(RegularTimePeriod,RegularTimePeriod)  [CONTEXT]    }  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);    [BUGGY]      endIndex  =  getIndex(end);  int  endIndex  =  getIndex(start);  [BUGGY]    if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series    endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period      endIndex  =  endIndex  -  1;  //  so  this  is  last  item  BEFORE  end  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  emptyRange  =  true;  }  if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	940	942	1	replace	        endIndex    =    getIndex(end);    int  endIndex  =  getIndex(start);	  	non-compiled	[CE]  variable  endIndex  is  already  defined  in  method  createCopy(RegularTimePeriod,RegularTimePeriod)	1778	None
4153	[BUG]  [BUGGY]  while(period  ==  null)  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [CONTEXT]    public  int  getIndex(RegularTimePeriod  period)  {  if  (period  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'period'  argument.   ");  }    [BUGGY]  while(period  ==  null)  {  throw  new  IllegalArgumentException( " ");  [BUGGY]    TimeSeriesDataItem  dummy  =  new  TimeSeriesDataItem(    period,  Integer.MIN_VALUE);  period,  Integer.MIN_VALUE);  return  Collections.binarySearch(this.data,  dummy);  }  [CLASS]  TimeSeries  [METHOD]  getIndex  [RETURN_TYPE]  int  RegularTimePeriod  period  [VARIABLES]  boolean  TimeSeriesDataItem  dummy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.3333333333333333	433	434	1	replace	while(period  ==  null)  {  throw  new  IllegalArgumentException( " ");	      while(period!=    null)    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	2737	None
4178	[BUG]  [BUGGY]  fireSeriesChanged(item);  [CE]  method  fireSeriesChanged  in  class  Series  cannot  be  applied  to  given  types;  [CONTEXT]    b.append(this.timePeriodClass.getName());  b.append(   ".   ");  throw  new  SeriesException(b.toString());  }  boolean  added  =  false;  int  count  =  getItemCount();  if  (count  ==  0)  {  this.data.add(item);    [BUGGY]  fireSeriesChanged(item);  [BUGGY]    added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  added  =  true;  }  else  {  int  index  =  Collections.binarySearch(this.data,  item);  if  (index  <  0)  {  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	510	510	1	replace	fireSeriesChanged(item);	      fireSeriesChanged();    	non-compiled	[CE]  method  fireSeriesChanged  in  class  Series  cannot  be  applied  to  given  types;	5342	None
4201	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]    b.append(item.getPeriod().toString());  b.append(   "  but  the  series  already  contains  an  observation   ");  b.append(   "  for  that  time  period.  Duplicates  are  not     ");  b.append(   "permitted.Try  using  the  addOrUpdate()  method.   ");  throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {      [BUGGY]      fireSeriesChanged();  fireSeriesChanged();  [BUGGY]    if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  removeAgedItems(false);//  remove  old  items  if  necessary,  but    if  (notify)  {  fireSeriesChanged();  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	538	538	1	add	        fireSeriesChanged();    fireSeriesChanged();	  	compilable	  [FE]  IllegalArgumentException	2907	1
4202	[BUG]  [BUGGY]      fireSeriesChanged();  fireSeriesChanged();  [FE]  IllegalArgumentException  [CONTEXT]    b.append(item.getPeriod().toString());  b.append(   "  but  the  series  already  contains  an  observation   ");  b.append(   "  for  that  time  period.  Duplicates  are  not     ");  b.append(   "permitted.Try  using  the  addOrUpdate()  method.   ");  throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {      [BUGGY]      fireSeriesChanged();  fireSeriesChanged();  [BUGGY]    if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  removeAgedItems(false);//  remove  old  items  if  necessary,  but    if  (notify)  {  fireSeriesChanged();  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	538	538	1	replace	        fireSeriesChanged();    fireSeriesChanged();	  	compilable	  [FE]  IllegalArgumentException	2907	1
4202	[BUG]  [BUGGY]      fireSeriesChanged();  fireSeriesChanged();  b.append(item.getPeriod().toString());  [CE]  cannot  find  symbol  b  [CONTEXT]    b.append(item.getPeriod().toString());  b.append(   "  but  the  series  already  contains  an  observation   ");  b.append(   "  for  that  time  period.  Duplicates  are  not     ");  b.append(   "permitted.Try  using  the  addOrUpdate()  method.   ");  throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {      [BUGGY]      fireSeriesChanged();  fireSeriesChanged();  b.append(item.getPeriod().toString());  [BUGGY]    if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  removeAgedItems(false);//  remove  old  items  if  necessary,  but    if  (notify)  {  fireSeriesChanged();  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	538	538	1	replace	        fireSeriesChanged();    fireSeriesChanged();  b.append(item.getPeriod().toString());	  	non-compiled	[CE]  cannot  find  symbol  b	2907	None
4203	[BUG]  [BUGGY]      fireSeriesChanged();  fireSeriesChanged();  b.append( "  but  the  series  already  contains  an  observation ");  [CE]  cannot  find  symbol  b  [CONTEXT]    b.append(item.getPeriod().toString());  b.append(   "  but  the  series  already  contains  an  observation   ");  b.append(   "  for  that  time  period.  Duplicates  are  not     ");  b.append(   "permitted.Try  using  the  addOrUpdate()  method.   ");  throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {      [BUGGY]      fireSeriesChanged();  fireSeriesChanged();  b.append( "  but  the  series  already  contains  an  observation ");  [BUGGY]    if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  removeAgedItems(false);//  remove  old  items  if  necessary,  but    if  (notify)  {  fireSeriesChanged();  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	538	538	1	replace	        fireSeriesChanged();    fireSeriesChanged();  b.append( "  but  the  series  already  contains  an  observation ");	  	non-compiled	[CE]  cannot  find  symbol  b	2907	None
4225	[BUG]  [BUGGY]  for(TimeSeriesDataItem  item  :  copy.data)  {  TimeSeriesDataItem  item  =(TimeSeriesDataItem)super.clone();  item.getDataItem(0)!=  null;  if(start  <  0)  {  throw  new  IllegalArgumentException( "Requires  start  >=  0.  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [CONTEXT]    throws  CloneNotSupportedException  {    [BUGGY]  for(TimeSeriesDataItem  item  :  copy.data)  {  TimeSeriesDataItem  item  =(TimeSeriesDataItem)super.clone();  item.getDataItem(0)!=  null;  if(start  <  0)  {  throw  new  IllegalArgumentException( "Requires  start  >=  0.  [BUGGY]    if  (start  <  0)  {  throw  new  IllegalArgumentException(   "Requires  start  >=  0.   ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(   "Requires  start  <=  end.   ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	879	879	1	replace	for(TimeSeriesDataItem  item  :  copy.data)  {  TimeSeriesDataItem  item  =(TimeSeriesDataItem)super.clone();  item.getDataItem(0)!=  null;  if(start  <  0)  {  throw  new  IllegalArgumentException( "Requires  start  >=  0.	      for(TimeSeriesDataItem    item    :    copy.data)    {    TimeSeriesDataItem    item    =(TimeSeriesDataItem)super.clone();    item.getDataItem(0)!=    null;    if(start    <    0)    {    throw    new    IllegalArgumentException(   "Invalid    start    of    series.   ");    }    	non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	1383	None
4226	[BUG]  [BUGGY]  for(TimeSeriesDataItem  item  :  copy.data)  {  TimeSeriesDataItem  item  =(TimeSeriesDataItem)super.clone();  item.getDataItem(1)!=  null;  if(start  <  0)  {  throw  new  IllegalArgumentException( "Requires  start  >=  0.  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [CONTEXT]    throws  CloneNotSupportedException  {    [BUGGY]  for(TimeSeriesDataItem  item  :  copy.data)  {  TimeSeriesDataItem  item  =(TimeSeriesDataItem)super.clone();  item.getDataItem(1)!=  null;  if(start  <  0)  {  throw  new  IllegalArgumentException( "Requires  start  >=  0.  [BUGGY]    if  (start  <  0)  {  throw  new  IllegalArgumentException(   "Requires  start  >=  0.   ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(   "Requires  start  <=  end.   ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	879	879	1	replace	for(TimeSeriesDataItem  item  :  copy.data)  {  TimeSeriesDataItem  item  =(TimeSeriesDataItem)super.clone();  item.getDataItem(1)!=  null;  if(start  <  0)  {  throw  new  IllegalArgumentException( "Requires  start  >=  0.	      for(TimeSeriesDataItem    item    :    copy.data)    {    TimeSeriesDataItem    item    =(TimeSeriesDataItem)super.clone();    item.getDataItem(0)!=    null;    if(start    <    0)    {    throw    new    IllegalArgumentException(   "Invalid    start    of    series.   ");    }    	non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	1383	None
4250	[BUG]  [BUGGY]  dummy.setPeriod(period,  0);  [CE]  cannot  find  symbol  [CONTEXT]    public  int  getIndex(RegularTimePeriod  period)  {  if  (period  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'period'  argument.   ");  }  TimeSeriesDataItem  dummy  =  new  TimeSeriesDataItem(  period,  Integer.MIN_VALUE);    [BUGGY]  dummy.setPeriod(period,  0);  [BUGGY]    return  Collections.binarySearch(this.data,  dummy);  }  [CLASS]  TimeSeries  [METHOD]  getIndex  [RETURN_TYPE]  int  RegularTimePeriod  period  [VARIABLES]  boolean  TimeSeriesDataItem  dummy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.3333333333333333	435	435	1	replace	dummy.setPeriod(period,  0);	      dummy.setPeriod(period);    	non-compiled	[CE]  cannot  find  symbol	4503	None
4273	[BUG]  [BUGGY]  if(startIndex  >  end)  {  throw  new  IllegalArgumentException( "   ");  }  [CE]  bad  operand  types  for  binary  operator  [CONTEXT]    if  (end  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'end'  argument.   ");  }  if  (start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException(     "Requires  start  on  or  before  end.   ");  }  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {    [BUGGY]  if(startIndex  >  end)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]    startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	934	934	1	replace	if(startIndex  >  end)  {  throw  new  IllegalArgumentException( "   ");  }	      if(startIndex    <    this.data.size())    {    if(startIndex    >    end)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  bad  operand  types  for  binary  operator  	5521	None
4274	[BUG]  [BUGGY]  if(startIndex  >  this.data.size())  {  if(startIndex  >  end)  {  throw  new  IllegalArgumentException( "   ");  }  [CE]  illegal  start  of  expression  [CONTEXT]    if  (end  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'end'  argument.   ");  }  if  (start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException(     "Requires  start  on  or  before  end.   ");  }  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {    [BUGGY]  if(startIndex  >  this.data.size())  {  if(startIndex  >  end)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]    startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	934	934	1	replace	if(startIndex  >  this.data.size())  {  if(startIndex  >  end)  {  throw  new  IllegalArgumentException( "   ");  }	      if(startIndex    <    this.data.size())    {    if(startIndex    >    end)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	5521	None
4298	[BUG]  [BUGGY]  this.data.add(new  TimeSeries(name,  domain,  range,  timePeriodClass),  false);  [CE]  no  suitable  method  found  for  add(TimeSeries,boolean)  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();    [BUGGY]  this.data.add(new  TimeSeries(name,  domain,  range,  timePeriodClass),  false);  [BUGGY]    this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	179	179	1	replace	this.data.add(new  TimeSeries(name,  domain,  range,  timePeriodClass),  false);	      this.data.add(new    TimeSeries(name,    domain,    range,    timePeriodClass),    true);    	non-compiled	[CE]  no  suitable  method  found  for  add(TimeSeries,boolean)	843	None
4322	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]    boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series    [BUGGY]      endIndex  =  getIndex(end);  endIndex  =  getIndex(end);  [BUGGY]    endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period    endIndex  =  endIndex  -  1;  //  so  this  is  last  item  BEFORE  end    }  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  emptyRange  =  true;  }  if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  }  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	941	943	1	add	        endIndex    =    getIndex(end);    endIndex  =  getIndex(end);	  	compilable	  [FE]  IllegalArgumentException	2425	1
4323	[BUG]  [BUGGY]      endIndex  =  getIndex(end);  endIndex  =  getIndex(end);  [FE]  IllegalArgumentException  [CONTEXT]    boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series    [BUGGY]      endIndex  =  getIndex(end);  endIndex  =  getIndex(end);  [BUGGY]    endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period    endIndex  =  endIndex  -  1;  //  so  this  is  last  item  BEFORE  end    }  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  emptyRange  =  true;  }  if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  }  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	941	943	1	replace	        endIndex    =    getIndex(end);    endIndex  =  getIndex(end);	  	compilable	  [FE]  IllegalArgumentException	2425	1
4323	[BUG]  [BUGGY]      endIndex  =  getIndex(end);  endIndex  =  getIndex(series);  [CE]  cannot  find  symbol  series  [CONTEXT]    boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series    [BUGGY]      endIndex  =  getIndex(end);  endIndex  =  getIndex(series);  [BUGGY]    endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period    endIndex  =  endIndex  -  1;  //  so  this  is  last  item  BEFORE  end    }  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  emptyRange  =  true;  }  if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  }  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	941	943	1	replace	        endIndex    =    getIndex(end);    endIndex  =  getIndex(series);	  	non-compiled	[CE]  cannot  find  symbol  series	2425	None
4370	[BUG]  [BUGGY]  fireSeriesChanged(last);  [CE]  method  fireSeriesChanged  in  class  Series  cannot  be  applied  to  given  types;  [CONTEXT]    if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {    [BUGGY]  fireSeriesChanged(last);  [BUGGY]    this.data.add(item);  added  =  true;  }  else  {  int  index  =  Collections.binarySearch(this.data,  item);  if  (index  <  0)  {  this.data.add(-index  -  1,  item);  added  =  true;  }  else  {  StringBuffer  b  =  new  StringBuffer();  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	515	515	1	replace	fireSeriesChanged(last);	      fireSeriesChanged();    	non-compiled	[CE]  method  fireSeriesChanged  in  class  Series  cannot  be  applied  to  given  types;	1371	None
4393	[BUG]  [BUGGY]  super(name,  domain);  super(name,  domain);  [CE]  call  to  super  must  be  first  statement  in  constructor  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {    [BUGGY]  super(name,  domain);  super(name,  domain);  [BUGGY]    this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	174	174	1	replace	super(name,    domain);    super(name,  domain);	  	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	170	None
4394	[BUG]  [BUGGY]  super(name,  domain);  super(name);  [CE]  call  to  super  must  be  first  statement  in  constructor  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {    [BUGGY]  super(name,  domain);  super(name);  [BUGGY]    this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	174	174	1	replace	super(name,    domain);    super(name);	  	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	170	None
4395	[BUG]  [BUGGY]  super(name,  domain);  super(name,  range);  [CE]  call  to  super  must  be  first  statement  in  constructor  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {    [BUGGY]  super(name,  domain);  super(name,  range);  [BUGGY]    this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	174	174	1	replace	super(name,    domain);    super(name,  range);	  	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	170	None
4417	[BUG]  [BUGGY]  while(item!=  null)  {  this.data.add(item);  [CE]  illegal  start  of  expression  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);    [BUGGY]  while(item!=  null)  {  this.data.add(item);  [BUGGY]    this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	175	175	1	replace	while(item!=  null)  {  this.data.add(item);	  this.domain    =   "domain   ";    	non-compiled	[CE]  illegal  start  of  expression	3	None
4418	[BUG]  [BUGGY]  while(this.data!=  null)  {  this.data.add(item);  [CE]  illegal  start  of  expression  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);    [BUGGY]  while(this.data!=  null)  {  this.data.add(item);  [BUGGY]    this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	175	175	1	replace	while(this.data!=  null)  {  this.data.add(item);	  this.domain    =   "domain   ";    	non-compiled	[CE]  illegal  start  of  expression	3	None
4465	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(   "Requires  start  >=  end.   ");  throw  new  IllegalArgumentException( "Requires  start  >=  end.   ");  [CE]  unreachable  statement  [CONTEXT]    throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(   "Requires  start  >=  0.   ");  }  if  (end  <  start)  {    [BUGGY]  throw  new  IllegalArgumentException(   "Requires  start  >=  end.   ");  throw  new  IllegalArgumentException( "Requires  start  >=  end.   ");  [BUGGY]    }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	883	883	1	replace	throw    new    IllegalArgumentException(   "Requires    start    >=    end.   ");    throw  new  IllegalArgumentException( "Requires  start  >=  end.   ");	  	non-compiled	[CE]  unreachable  statement	50	None
4467	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(   "Requires  start  >=  end.   ");  throw  new  IllegalArgumentException( "Requires  start  <<  end.   ");  [CE]  unreachable  statement  [CONTEXT]    throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(   "Requires  start  >=  0.   ");  }  if  (end  <  start)  {    [BUGGY]  throw  new  IllegalArgumentException(   "Requires  start  >=  end.   ");  throw  new  IllegalArgumentException( "Requires  start  <<  end.   ");  [BUGGY]    }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	883	883	1	replace	throw    new    IllegalArgumentException(   "Requires    start    >=    end.   ");    throw  new  IllegalArgumentException( "Requires  start  <<  end.   ");	  	non-compiled	[CE]  unreachable  statement	50	None
4490	[BUG]  [BUGGY]  this.maximumItemAge  =  getMinimumItemAge();  [CE]  cannot  find  symbol  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;    [BUGGY]  this.maximumItemAge  =  getMinimumItemAge();  [BUGGY]    this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	178	178	1	replace	this.maximumItemAge  =  getMinimumItemAge();	      this.maximumItemAge    =    getMaximumItemAge();    	non-compiled	[CE]  cannot  find  symbol	651	None
4562	[BUG]  [BUGGY]  TimePeriodClass  this  =(TimePeriodClass)this.data.get(getItemCount()  -  1);  [CE]  not  a  statement  [CONTEXT]    public  void  removeAgedItems(boolean  notify)  {      [BUGGY]  TimePeriodClass  this  =(TimePeriodClass)this.data.get(getItemCount()  -  1);  [BUGGY]    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())  >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	740	740	1	replace	TimePeriodClass  this  =(TimePeriodClass)this.data.get(getItemCount()  -  1);	      TimePeriodClass    timePeriodClass    =(TimePeriodClass)this.data.get(getItemCount()    -    1);    	non-compiled	[CE]  not  a  statement	1466	None
4610	[BUG]  [BUGGY]  while(start  =  getStart())  {  if(start.compareTo(end)>  0)  {  throw  new  IllegalArgumentException( "Requires  start  on  or  before  end.   ");  }  [CE]  cannot  find  symbol  [CONTEXT]    throws  CloneNotSupportedException  {  if  (start  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'start'  argument.   ");  }  if  (end  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'end'  argument.   ");  }    [BUGGY]  while(start  =  getStart())  {  if(start.compareTo(end)>  0)  {  throw  new  IllegalArgumentException( "Requires  start  on  or  before  end.   ");  }  [BUGGY]    if  (start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException(     "Requires  start  on  or  before  end.   ");  }  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	927	927	1	replace	while(start  =  getStart())  {  if(start.compareTo(end)>  0)  {  throw  new  IllegalArgumentException( "Requires  start  on  or  before  end.   ");  }	      while(start    =    getStart())    {    if(start.compareTo(start)>    0)    {    throw    new    IllegalArgumentException(   "Requires    start    on    or    before    end.   ");    }    	non-compiled	[CE]  cannot  find  symbol	5403	None
4633	[BUG]  [BUGGY]  [Delete]  [CE]  illegal  start  of  expression  [CONTEXT]    throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(   "Requires  start  >=  0.   ");  }  if  (end  <  start)  {    [BUGGY]  [Delete]  [BUGGY]    throw  new  IllegalArgumentException(   "Requires  start  <=  end.   ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	883	883	1	replace	[Delete]	      if(end    <    start)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	4082	None
4634	[BUG]  [BUGGY]  }  [CE]  <identifier>  expected  [CONTEXT]    throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(   "Requires  start  >=  0.   ");  }  if  (end  <  start)  {    [BUGGY]  }  [BUGGY]    throw  new  IllegalArgumentException(   "Requires  start  <=  end.   ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	883	883	1	replace	}	      if(end    <    start)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	4082	None
4658	[BUG]  [BUGGY]  item.addValue(value);  notifyListeners(new  DataItem(period,  value,  true));  [CE]  illegal  start  of  expression  [CONTEXT]    public  void  add(RegularTimePeriod  period,  double  value,  boolean  notify)  {  TimeSeriesDataItem  item  =  new  TimeSeriesDataItem(period,  value);  add(item,  notify);    [BUGGY]  item.addValue(value);  notifyListeners(new  DataItem(period,  value,  true));  [BUGGY]    }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  double  value  boolean  notify  [VARIABLES]  boolean  notify  double  value  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.2581988897471611	576	576	1	replace	item.addValue(value);  notifyListeners(new  DataItem(period,  value,  true));	      item.addValue(value);    notifyListeners(new    DataItem(period,    value,    false));    	non-compiled	[CE]  illegal  start  of  expression	1983	None
4682	[BUG]  [BUGGY]  if(added)  {  if(item.getPeriod().compareTo(last)>  0)  {  this.data.add(item);  }  [CE]  illegal  start  of  expression  [CONTEXT]    if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);    [BUGGY]  if(added)  {  if(item.getPeriod().compareTo(last)>  0)  {  this.data.add(item);  }  [BUGGY]    added  =  true;  }  else  {  int  index  =  Collections.binarySearch(this.data,  item);  if  (index  <  0)  {  this.data.add(-index  -  1,  item);  added  =  true;  }  else  {  StringBuffer  b  =  new  StringBuffer();  b.append(   "You  are  attempting  to  add  an  observation  for     ");  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	516	516	1	replace	if(added)  {  if(item.getPeriod().compareTo(last)>  0)  {  this.data.add(item);  }	      fireSeriesChanged();    	non-compiled	[CE]  illegal  start  of  expression	7382	None
4706	[BUG]  [BUGGY]  this.maximumItemCount  =  data.getArrayList();  [CE]  cannot  find  symbol  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;    [BUGGY]  this.maximumItemCount  =  data.getArrayList();  [BUGGY]    this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	178	178	1	replace	this.maximumItemCount  =  data.getArrayList();	      this.maximumItemAge    =    getMaximumItemAge();    	non-compiled	[CE]  cannot  find  symbol	651	None
4729	[BUG]  [BUGGY]  this.data.add(item,  notify,  this.timePeriodClass);  [CE]  no  suitable  method  found  for  add(TimeSeriesDataItem,boolean,Class)  [CONTEXT]    public  void  add(RegularTimePeriod  period,  Number  value,  boolean  notify)  {  TimeSeriesDataItem  item  =  new  TimeSeriesDataItem(period,  value);    [BUGGY]  this.data.add(item,  notify,  this.timePeriodClass);  [BUGGY]    add(item,  notify);  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  Number  value  boolean  notify  [VARIABLES]  boolean  notify  Number  value  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	603	603	1	replace	this.data.add(item,  notify,  this.timePeriodClass);	      item.setValue(value);    fireSeriesChanged();    	non-compiled	[CE]  no  suitable  method  found  for  add(TimeSeriesDataItem,boolean,Class)	2042	None
4730	[BUG]  [BUGGY]  this.data.add(item,  notify,  item);  [CE]  no  suitable  method  found  for  add(TimeSeriesDataItem,boolean,TimeSeriesDataItem)  [CONTEXT]    public  void  add(RegularTimePeriod  period,  Number  value,  boolean  notify)  {  TimeSeriesDataItem  item  =  new  TimeSeriesDataItem(period,  value);    [BUGGY]  this.data.add(item,  notify,  item);  [BUGGY]    add(item,  notify);  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  Number  value  boolean  notify  [VARIABLES]  boolean  notify  Number  value  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	603	603	1	replace	this.data.add(item,  notify,  item);	      item.setValue(value);    fireSeriesChanged();    	non-compiled	[CE]  no  suitable  method  found  for  add(TimeSeriesDataItem,boolean,TimeSeriesDataItem)	2042	None
4777	[BUG]  [BUGGY]  if(endIndex  >  endIndex)  {  emptyRange  =  true;  }  [CE]  illegal  start  of  type  [CONTEXT]    }  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);    [BUGGY]  if(endIndex  >  endIndex)  {  emptyRange  =  true;  }  [BUGGY]    if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series    endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period      endIndex  =  endIndex  -  1;  //  so  this  is  last  item  BEFORE  end  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  emptyRange  =  true;  }  if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	940	942	1	replace	if(endIndex  >  endIndex)  {  emptyRange  =  true;  }	      if(endIndex    <    0)    {    if(startIndex    >    endIndex)    {    emptyRange    =    true;    }    	non-compiled	[CE]  illegal  start  of  type	3542	None
4801	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]    throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(   "Requires  start  >=  0.   ");  }  if  (end  <  start)  {    [BUGGY]      if(end  <  start)  {  throw  new  IllegalArgumentException(   "   ");  }  if(end  <  start)  {  throw  new  IllegalArgumentException(   "   ");  }  [BUGGY]    throw  new  IllegalArgumentException(   "Requires  start  <=  end.   ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	883	883	1	add	        if(end    <    start)    {    throw    new    IllegalArgumentException(   "   ");    }    if(end  <  start)  {  throw  new  IllegalArgumentException(   "   ");  }	  	compilable	  [FE]  IllegalArgumentException	4081	1
4802	[BUG]  [BUGGY]      if(end  <  start)  {  throw  new  IllegalArgumentException(   "   ");  }  if(end  <  start)  {  throw  new  IllegalArgumentException(   "   ");  }  [FE]  IllegalArgumentException  [CONTEXT]    throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(   "Requires  start  >=  0.   ");  }  if  (end  <  start)  {    [BUGGY]      if(end  <  start)  {  throw  new  IllegalArgumentException(   "   ");  }  if(end  <  start)  {  throw  new  IllegalArgumentException(   "   ");  }  [BUGGY]    throw  new  IllegalArgumentException(   "Requires  start  <=  end.   ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	883	883	1	replace	        if(end    <    start)    {    throw    new    IllegalArgumentException(   "   ");    }    if(end  <  start)  {  throw  new  IllegalArgumentException(   "   ");  }	  	compilable	  [FE]  IllegalArgumentException	4081	1
4802	[BUG]  [BUGGY]      if(end  <  start)  {  throw  new  IllegalArgumentException(   "   ");  }  if(end  <  start)  {  throw  new  IllegalArgumentException(   "   ");  >>  [CE]  illegal  start  of  expression  [CONTEXT]    throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(   "Requires  start  >=  0.   ");  }  if  (end  <  start)  {    [BUGGY]      if(end  <  start)  {  throw  new  IllegalArgumentException(   "   ");  }  if(end  <  start)  {  throw  new  IllegalArgumentException(   "   ");  >>  [BUGGY]    throw  new  IllegalArgumentException(   "Requires  start  <=  end.   ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	883	883	1	replace	        if(end    <    start)    {    throw    new    IllegalArgumentException(   "   ");    }    if(end  <  start)  {  throw  new  IllegalArgumentException(   "   ");  >>	  	non-compiled	[CE]  illegal  start  of  expression	4081	None
4849	[BUG]  [BUGGY]      fireSeriesChanged();  this.data.add(period,  value);  [CE]  no  suitable  method  found  for  add(RegularTimePeriod,Number)  [CONTEXT]    public  void  add(RegularTimePeriod  period,  Number  value)  {  add(period,  value,  true);    [BUGGY]      fireSeriesChanged();  this.data.add(period,  value);  [BUGGY]    }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  Number  value  [VARIABLES]  boolean  Number  value  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	589	589	1	replace	        fireSeriesChanged();    this.data.add(period,  value);	  	non-compiled	[CE]  no  suitable  method  found  for  add(RegularTimePeriod,Number)	505	None
4873	[BUG]  [BUGGY]  TimeSeriesDataItem  dummy  =  new  TimeSeriesDataItem(this.data,  Integer.MIN_VALUE,  period);  [CE]  no  suitable  constructor  found  for  TimeSeriesDataItem(List,int,RegularTimePeriod)  [CONTEXT]    public  int  getIndex(RegularTimePeriod  period)  {  if  (period  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'period'  argument.   ");  }    [BUGGY]  TimeSeriesDataItem  dummy  =  new  TimeSeriesDataItem(this.data,  Integer.MIN_VALUE,  period);  [BUGGY]    period,  Integer.MIN_VALUE);  return  Collections.binarySearch(this.data,  dummy);  }  [CLASS]  TimeSeries  [METHOD]  getIndex  [RETURN_TYPE]  int  RegularTimePeriod  period  [VARIABLES]  boolean  TimeSeriesDataItem  dummy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.3333333333333333	433	434	1	replace	TimeSeriesDataItem  dummy  =  new  TimeSeriesDataItem(this.data,  Integer.MIN_VALUE,  period);	  TimeSeriesDataItem    dummy    =    new    TimeSeriesDataItem(period,    Integer.MIN_VALUE,    this.data);    	non-compiled	[CE]  no  suitable  constructor  found  for  TimeSeriesDataItem(List,int,RegularTimePeriod)	1154	None
4897	[BUG]  [BUGGY]  StringBuffer  b.append(item.getPeriod().toString());  [CE]  ';'  expected  [CONTEXT]    throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }    [BUGGY]  StringBuffer  b.append(item.getPeriod().toString());  [BUGGY]    removeAgedItems(false);//  remove  old  items  if  necessary,  but          //  don't  notify  anyone,  because  that                    //  happens  next  anyway...    if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	542	544	1	replace	StringBuffer  b.append(item.getPeriod().toString());	      b.append(item.getPeriod().toString());    	non-compiled	[CE]  ';'  expected	1417	None
4898	[BUG]  [BUGGY]  StringBuffer.append(item.getPeriod().toString());  [CE]  non-static  method  append(String)  cannot  be  referenced  from  a  static  context  [CONTEXT]    throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }    [BUGGY]  StringBuffer.append(item.getPeriod().toString());  [BUGGY]    removeAgedItems(false);//  remove  old  items  if  necessary,  but          //  don't  notify  anyone,  because  that                    //  happens  next  anyway...    if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	542	544	1	replace	StringBuffer.append(item.getPeriod().toString());	      b.append(item.getPeriod().toString());    	non-compiled	[CE]  non-static  method  append(String)  cannot  be  referenced  from  a  static  context	1417	None
4922	[BUG]  [BUGGY]  while(startIndex  >=  this.data.size())  {  emptyRange  =  true;  [CE]  illegal  start  of  expression  [CONTEXT]    if  (end  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'end'  argument.   ");  }  if  (start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException(     "Requires  start  on  or  before  end.   ");  }  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {    [BUGGY]  while(startIndex  >=  this.data.size())  {  emptyRange  =  true;  [BUGGY]    startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	934	934	1	replace	while(startIndex  >=  this.data.size())  {  emptyRange  =  true;	      while(startIndex    <    this.data.size())    {    emptyRange    =    true;    	non-compiled	[CE]  illegal  start  of  expression	770	None
4945	[BUG]  [BUGGY]  while(last  <  getPeriodType())  {  this.data.add(last);  [CE]  'else'  without  'if'  [CONTEXT]    if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);    [BUGGY]  while(last  <  getPeriodType())  {  this.data.add(last);  [BUGGY]    if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  added  =  true;  }  else  {  int  index  =  Collections.binarySearch(this.data,  item);  if  (index  <  0)  {  this.data.add(-index  -  1,  item);  added  =  true;  }  else  {  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	514	514	1	replace	while(last  <  getPeriodType())  {  this.data.add(last);	      while(last    >    getPeriodType())    {    this.data.add(last);    	non-compiled	[CE]  'else'  without  'if'	2187	None
4969	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);    [BUGGY]      this.data  =  new  java.util.ArrayList();  this.data  =  new  java.util.ArrayList();  [BUGGY]    this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	175	175	1	add	        this.data    =    new    java.util.ArrayList();    this.data  =  new  java.util.ArrayList();	  	compilable	  [FE]  IllegalArgumentException	1537	1
4970	[BUG]  [BUGGY]      this.data  =  new  java.util.ArrayList();  this.data  =  new  java.util.ArrayList();  [FE]  IllegalArgumentException  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);    [BUGGY]      this.data  =  new  java.util.ArrayList();  this.data  =  new  java.util.ArrayList();  [BUGGY]    this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	175	175	1	replace	        this.data    =    new    java.util.ArrayList();    this.data  =  new  java.util.ArrayList();	  	compilable	  [FE]  IllegalArgumentException	1537	1
4970	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);    [BUGGY]      this.data  =  new  java.util.ArrayList();  if(this.data  ==  null)  {  this.data  =  new  java.util.ArrayList();  }  [BUGGY]    this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	175	175	1	add	        this.data    =    new    java.util.ArrayList();    if(this.data  ==  null)  {  this.data  =  new  java.util.ArrayList();  }	  	compilable	  [FE]  IllegalArgumentException	1537	1
4971	[BUG]  [BUGGY]      this.data  =  new  java.util.ArrayList();  if(this.data  ==  null)  {  this.data  =  new  java.util.ArrayList();  }  [FE]  IllegalArgumentException  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);    [BUGGY]      this.data  =  new  java.util.ArrayList();  if(this.data  ==  null)  {  this.data  =  new  java.util.ArrayList();  }  [BUGGY]    this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	175	175	1	replace	        this.data    =    new    java.util.ArrayList();    if(this.data  ==  null)  {  this.data  =  new  java.util.ArrayList();  }	  	compilable	  [FE]  IllegalArgumentException	1537	1
4971	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);    [BUGGY]      this.data  =  new  java.util.ArrayList();  if(domain  ==  null)  {  this.data  =  new  java.util.ArrayList();  }  [BUGGY]    this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	175	175	1	add	        this.data    =    new    java.util.ArrayList();    if(domain  ==  null)  {  this.data  =  new  java.util.ArrayList();  }	  	compilable	  [FE]  IllegalArgumentException	1537	1
4972	[BUG]  [BUGGY]      this.data  =  new  java.util.ArrayList();  if(domain  ==  null)  {  this.data  =  new  java.util.ArrayList();  }  [FE]  IllegalArgumentException  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);    [BUGGY]      this.data  =  new  java.util.ArrayList();  if(domain  ==  null)  {  this.data  =  new  java.util.ArrayList();  }  [BUGGY]    this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	175	175	1	replace	        this.data    =    new    java.util.ArrayList();    if(domain  ==  null)  {  this.data  =  new  java.util.ArrayList();  }	  	compilable	  [FE]  IllegalArgumentException	1537	1
4993	[BUG]  [BUGGY]  boolean  added  =  notify;  boolean  added  =  notify;  [CE]  variable  added  is  already  defined  in  method  add(TimeSeriesDataItem,boolean)  [CONTEXT]    b.append(   "You  are  trying  to  add  data  where  the  time  period  class     ");  b.append(   "is     ");  b.append(item.getPeriod().getClass().getName());  b.append(   ",  but  the  TimeSeries  is  expecting  an  instance  of     ");  b.append(this.timePeriodClass.getName());  b.append(   ".   ");  throw  new  SeriesException(b.toString());  }      [BUGGY]  boolean  added  =  notify;  boolean  added  =  notify;  [BUGGY]    int  count  =  getItemCount();  if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  added  =  true;  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	506	506	1	replace	boolean    added    =    notify;    boolean  added  =  notify;	  	non-compiled	[CE]  variable  added  is  already  defined  in  method  add(TimeSeriesDataItem,boolean)	1033	None
4994	[BUG]  [BUGGY]  boolean  added  =  notify;  boolean  added  =  notification;  [CE]  variable  added  is  already  defined  in  method  add(TimeSeriesDataItem,boolean)  [CONTEXT]    b.append(   "You  are  trying  to  add  data  where  the  time  period  class     ");  b.append(   "is     ");  b.append(item.getPeriod().getClass().getName());  b.append(   ",  but  the  TimeSeries  is  expecting  an  instance  of     ");  b.append(this.timePeriodClass.getName());  b.append(   ".   ");  throw  new  SeriesException(b.toString());  }      [BUGGY]  boolean  added  =  notify;  boolean  added  =  notification;  [BUGGY]    int  count  =  getItemCount();  if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  added  =  true;  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	506	506	1	replace	boolean    added    =    notify;    boolean  added  =  notification;	  	non-compiled	[CE]  variable  added  is  already  defined  in  method  add(TimeSeriesDataItem,boolean)	1033	None
5042	[BUG]  [BUGGY]  this(name,  domain,  range,  DEFAULT_DOMAIN_DESCRIPTION,  timePeriodClass,  null);  [CE]  no  suitable  constructor  found  for  TimeSeries(Comparable,String,String,String,Class,<null>)  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {    [BUGGY]  this(name,  domain,  range,  DEFAULT_DOMAIN_DESCRIPTION,  timePeriodClass,  null);  [BUGGY]    super(name);  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	174	174	1	replace	this(name,  domain,  range,  DEFAULT_DOMAIN_DESCRIPTION,  timePeriodClass,  null);	      this(name,    domain,    range,    timePeriodClass,    null);    	non-compiled	[CE]  no  suitable  constructor  found  for  TimeSeries(Comparable,String,String,String,Class,<null>)	2211	None
5066	[BUG]  [BUGGY]  int  count  =  this.data.size()  -  1;  [CE]  illegal  start  of  type  [CONTEXT]    public  int  getIndex(RegularTimePeriod  period)  {    [BUGGY]  int  count  =  this.data.size()  -  1;  [BUGGY]    if  (period  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'period'  argument.   ");  }  TimeSeriesDataItem  dummy  =  new  TimeSeriesDataItem(  period,  Integer.MIN_VALUE);  return  Collections.binarySearch(this.data,  dummy);  }  [CLASS]  TimeSeries  [METHOD]  getIndex  [RETURN_TYPE]  int  RegularTimePeriod  period  [VARIABLES]  boolean  TimeSeriesDataItem  dummy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.3333333333333333	430	430	1	replace	int  count  =  this.data.size()  -  1;	      int    count    =    this.data.size();    	non-compiled	[CE]  illegal  start  of  type	6603	None
5090	[BUG]  [BUGGY]  while((  latest  -  getTimePeriod(1).getSerialIndex())>  this.maximumItemAge)  {  this.data.remove(0);  [CE]  illegal  start  of  expression  [CONTEXT]    public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();    [BUGGY]  while((  latest  -  getTimePeriod(1).getSerialIndex())>  this.maximumItemAge)  {  this.data.remove(0);  [BUGGY]    boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())  >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	742	742	1	replace	while((  latest  -  getTimePeriod(1).getSerialIndex())>  this.maximumItemAge)  {  this.data.remove(0);	      while((    latest    -    getTimePeriod(0).getSerialIndex())>    this.maximumItemAge)    {    this.data.remove(0);    	non-compiled	[CE]  illegal  start  of  expression	1897	None
5113	[BUG]  [BUGGY]  if(endIndex  <  0)  {  //  endIndex  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;  //  so  this  is  last  item  BEFORE  end  int  endIndex  =  getIndex(end);  [CE]  illegal  start  of  expression  [CONTEXT]    }  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);    [BUGGY]  if(endIndex  <  0)  {  //  endIndex  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;  //  so  this  is  last  item  BEFORE  end  int  endIndex  =  getIndex(end);  [BUGGY]    endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  emptyRange  =  true;  }  if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	940	942	1	replace	if(endIndex    <    0)    {    //    endIndex    is    not    in    original    series    endIndex    =    -(endIndex    +    1);    //    this    is    first    item    AFTER    end    period    endIndex    =    endIndex    -    1;    //    so    this    is    last    item    BEFORE    end    int  endIndex  =  getIndex(end);	  	non-compiled	[CE]  illegal  start  of  expression	1610	None
5114	[BUG]  [BUGGY]  if(endIndex  <  0)  {  //  endIndex  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;  //  so  this  is  last  item  BEFORE  end  endIndex  =  getIndex(end);  [CE]  illegal  start  of  expression  [CONTEXT]    }  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);    [BUGGY]  if(endIndex  <  0)  {  //  endIndex  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;  //  so  this  is  last  item  BEFORE  end  endIndex  =  getIndex(end);  [BUGGY]    endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  emptyRange  =  true;  }  if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	940	942	1	replace	if(endIndex    <    0)    {    //    endIndex    is    not    in    original    series    endIndex    =    -(endIndex    +    1);    //    this    is    first    item    AFTER    end    period    endIndex    =    endIndex    -    1;    //    so    this    is    last    item    BEFORE    end    endIndex  =  getIndex(end);	  	non-compiled	[CE]  illegal  start  of  expression	1610	None
5115	[BUG]  [BUGGY]  if(endIndex  <  0)  {  //  endIndex  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;  //  so  this  is  last  item  BEFORE  end  if(endIndex  <  0)  {  endIndex  =  getIndex(end);  if(endIndex  >  0)  {  endIndex  =  -(endIndex  +  1);  }  [CE]  illegal  start  of  expression  [CONTEXT]    }  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);    [BUGGY]  if(endIndex  <  0)  {  //  endIndex  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;  //  so  this  is  last  item  BEFORE  end  if(endIndex  <  0)  {  endIndex  =  getIndex(end);  if(endIndex  >  0)  {  endIndex  =  -(endIndex  +  1);  }  [BUGGY]    endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  emptyRange  =  true;  }  if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	940	942	1	replace	if(endIndex    <    0)    {    //    endIndex    is    not    in    original    series    endIndex    =    -(endIndex    +    1);    //    this    is    first    item    AFTER    end    period    endIndex    =    endIndex    -    1;    //    so    this    is    last    item    BEFORE    end    if(endIndex  <  0)  {  endIndex  =  getIndex(end);  if(endIndex  >  0)  {  endIndex  =  -(endIndex  +  1);  }	  	non-compiled	[CE]  illegal  start  of  expression	1610	None
5138	[BUG]  [BUGGY]  item.addChangeListener(b);  [CE]  cannot  find  symbol  b  [CONTEXT]    if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  removeAgedItems(false);//  remove  old  items  if  necessary,  but    if  (notify)  {    [BUGGY]  item.addChangeListener(b);  [BUGGY]    fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	546	546	1	replace	item.addChangeListener(b);	      item.addChangeListener(this);    	non-compiled	[CE]  cannot  find  symbol  b	2305	None
5161	[BUG]  [BUGGY]  List  <  TimeSeriesDataItem>  data  =(List)item.getPeriod().getClass().getName();  [CE]  generics  are  not  supported  in  -source  1.4  [CONTEXT]    public  void  add(TimeSeriesDataItem  item,  boolean  notify)  {  if  (item  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'item'  argument.   ");  }    [BUGGY]  List  <  TimeSeriesDataItem>  data  =(List)item.getPeriod().getClass().getName();  [BUGGY]    StringBuffer  b  =  new  StringBuffer();  b.append(   "You  are  trying  to  add  data  where  the  time  period  class     ");  b.append(   "is     ");  b.append(item.getPeriod().getClass().getName());  b.append(   ",  but  the  TimeSeries  is  expecting  an  instance  of     ");  b.append(this.timePeriodClass.getName());  b.append(   ".   ");  throw  new  SeriesException(b.toString());  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	494	494	1	replace	List  <  TimeSeriesDataItem>  data  =(List)item.getPeriod().getClass().getName();	      	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	1971	None
5162	[BUG]  [BUGGY]  List  <  TimeSeriesDataItem>  data  =  item.getData();  [CE]  generics  are  not  supported  in  -source  1.4  [CONTEXT]    public  void  add(TimeSeriesDataItem  item,  boolean  notify)  {  if  (item  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'item'  argument.   ");  }    [BUGGY]  List  <  TimeSeriesDataItem>  data  =  item.getData();  [BUGGY]    StringBuffer  b  =  new  StringBuffer();  b.append(   "You  are  trying  to  add  data  where  the  time  period  class     ");  b.append(   "is     ");  b.append(item.getPeriod().getClass().getName());  b.append(   ",  but  the  TimeSeries  is  expecting  an  instance  of     ");  b.append(this.timePeriodClass.getName());  b.append(   ".   ");  throw  new  SeriesException(b.toString());  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	494	494	1	replace	List  <  TimeSeriesDataItem>  data  =  item.getData();	      	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	1971	None
5209	[BUG]  [BUGGY]  item.setValue(value,  notify);  [CE]  method  setValue  in  class  TimeSeriesDataItem  cannot  be  applied  to  given  types;  [CONTEXT]    public  void  add(RegularTimePeriod  period,  double  value,  boolean  notify)  {  TimeSeriesDataItem  item  =  new  TimeSeriesDataItem(period,  value);    [BUGGY]  item.setValue(value,  notify);  [BUGGY]    add(item,  notify);  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  double  value  boolean  notify  [VARIABLES]  boolean  notify  double  value  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.2581988897471611	575	575	1	replace	item.setValue(value,  notify);	      item.setValue(value);    notify    =    true;    	non-compiled	[CE]  method  setValue  in  class  TimeSeriesDataItem  cannot  be  applied  to  given  types;	1683	None
5234	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;    [BUGGY]  this.range  =  range  +  2;  [BUGGY]    this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	176	176	1	add	this.range  =  range  +  2;	  this.range    =    range    +    1;    	compilable	  [FE]  IllegalArgumentException	459	1
5235	[BUG]  [BUGGY]  this.range  =  range  +  2;  [FE]  IllegalArgumentException  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;    [BUGGY]  this.range  =  range  +  2;  [BUGGY]    this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	176	176	1	replace	this.range  =  range  +  2;	  this.range    =    range    +    1;    	compilable	  [FE]  IllegalArgumentException	459	1
5257	[BUG]  [BUGGY]  RegularTimePeriod  period  =  getTimePeriod(period);  [CE]  illegal  start  of  expression  [CONTEXT]    public  TimeSeries(Comparable  name,  Class  timePeriodClass)  {  this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  timePeriodClass);    [BUGGY]  RegularTimePeriod  period  =  getTimePeriod(period);  [BUGGY]    }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	157	157	1	replace	RegularTimePeriod  period  =  getTimePeriod(period);	      this.data    =    new    ArrayList    <    Comparable>(timePeriodClass,    DEFAULT_DOMAIN_DESCRIPTION,    DEFAULT_RANGE_DESCRIPTION);    	non-compiled	[CE]  illegal  start  of  expression	1923	None
5258	[BUG]  [BUGGY]  RegularTimePeriod  period  =  getTimePeriod(value);  [CE]  illegal  start  of  expression  [CONTEXT]    public  TimeSeries(Comparable  name,  Class  timePeriodClass)  {  this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  timePeriodClass);    [BUGGY]  RegularTimePeriod  period  =  getTimePeriod(value);  [BUGGY]    }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	157	157	1	replace	RegularTimePeriod  period  =  getTimePeriod(value);	      this.data    =    new    ArrayList    <    Comparable>(timePeriodClass,    DEFAULT_DOMAIN_DESCRIPTION,    DEFAULT_RANGE_DESCRIPTION);    	non-compiled	[CE]  illegal  start  of  expression	1923	None
5282	[BUG]  [BUGGY]  if(emptyRange)  {  emptyRange  =  true;  }  [CE]  cannot  find  symbol  emptyRange  [CONTEXT]    if  (start  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'start'  argument.   ");  }  if  (end  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'end'  argument.   ");  }  if  (start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException(     "Requires  start  on  or  before  end.   ");  }    [BUGGY]  if(emptyRange)  {  emptyRange  =  true;  }  [BUGGY]    int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	931	931	1	replace	if(emptyRange)  {  emptyRange  =  true;  }	  boolean    emptyRange    =    true;    	non-compiled	[CE]  cannot  find  symbol  emptyRange	1635	None
5305	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]    if  (start  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'start'  argument.   ");  }  if  (end  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'end'  argument.   ");  }  if  (start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException(     "Requires  start  on  or  before  end.   ");  }    [BUGGY]      if(start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException(   "Requires  start  on  or  before  end.   ");  }  if(start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException( "Requires  start  on  or  before  end.   ");  }  [BUGGY]    boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	931	931	1	add	        if(start.compareTo(end)    >    0)    {    throw    new    IllegalArgumentException(   "Requires    start    on    or    before    end.   ");    }    if(start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException( "Requires  start  on  or  before  end.   ");  }	  	compilable	  [FE]  IllegalArgumentException	1202	1
5306	[BUG]  [BUGGY]      if(start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException(   "Requires  start  on  or  before  end.   ");  }  if(start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException( "Requires  start  on  or  before  end.   ");  }  [FE]  IllegalArgumentException  [CONTEXT]    if  (start  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'start'  argument.   ");  }  if  (end  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'end'  argument.   ");  }  if  (start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException(     "Requires  start  on  or  before  end.   ");  }    [BUGGY]      if(start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException(   "Requires  start  on  or  before  end.   ");  }  if(start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException( "Requires  start  on  or  before  end.   ");  }  [BUGGY]    boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	931	931	1	replace	        if(start.compareTo(end)    >    0)    {    throw    new    IllegalArgumentException(   "Requires    start    on    or    before    end.   ");    }    if(start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException( "Requires  start  on  or  before  end.   ");  }	  	compilable	  [FE]  IllegalArgumentException	1202	1
5329	[BUG]  [BUGGY]  return  new  TimeSeries(name.getPeriod(),  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  Date.class);  [CE]  illegal  start  of  expression  [CONTEXT]    public  TimeSeries(Comparable  name)  {  this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  Day.class);    [BUGGY]  return  new  TimeSeries(name.getPeriod(),  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  Date.class);  [BUGGY]      [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Comparable)  Comparable  name  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.4082482904638631	144	144	1	replace	return  new  TimeSeries(name.getPeriod(),  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  Date.class);	  return    new    TimeSeries(name.getPeriod(),    DEFAULT_DOMAIN_DESCRIPTION,    DEFAULT_RANGE_DESCRIPTION);    	non-compiled	[CE]  illegal  start  of  expression	2161	None
5330	[BUG]  [BUGGY]  return  new  TimeSeries(name.getPeriod(),  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  Day.class);  [CE]  illegal  start  of  expression  [CONTEXT]    public  TimeSeries(Comparable  name)  {  this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  Day.class);    [BUGGY]  return  new  TimeSeries(name.getPeriod(),  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  Day.class);  [BUGGY]      [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Comparable)  Comparable  name  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.4082482904638631	144	144	1	replace	return  new  TimeSeries(name.getPeriod(),  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  Day.class);	  return    new    TimeSeries(name.getPeriod(),    DEFAULT_DOMAIN_DESCRIPTION,    DEFAULT_RANGE_DESCRIPTION);    	non-compiled	[CE]  illegal  start  of  expression	2161	None
5354	[BUG]  [BUGGY]  this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  DEFAULT_DOMAIN_DESCRIPTION,  timePeriodClass);  [CE]  no  suitable  constructor  found  for  TimeSeries(Comparable,String,String,String,Class)  [CONTEXT]    public  TimeSeries(Comparable  name,  Class  timePeriodClass)  {    [BUGGY]  this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  DEFAULT_DOMAIN_DESCRIPTION,  timePeriodClass);  [BUGGY]    timePeriodClass);  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	155	156	1	replace	this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  DEFAULT_DOMAIN_DESCRIPTION,  timePeriodClass);	  this(name,    timePeriodClass,    DEFAULT_DOMAIN_DESCRIPTION,    DEFAULT_RANGE_DESCRIPTION,    DEFAULT_DOMAIN_DESCRIPTION);    	non-compiled	[CE]  no  suitable  constructor  found  for  TimeSeries(Comparable,String,String,String,Class)	1010	None
5377	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]    throws  CloneNotSupportedException  {  if  (start  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'start'  argument.   ");  }    [BUGGY]      if(start.compareTo(start)  >  0)  {  throw  new  IllegalArgumentException(   "Requires  start  on  or  before  start.   ");  }  if(start.compareTo(start)  >  0)  {  throw  new  IllegalArgumentException( "Requires  start  on  or  before  start.   ");  }  [BUGGY]    if  (end  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'end'  argument.   ");  }  if  (start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException(     "Requires  start  on  or  before  end.   ");  }  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	924	924	1	add	        if(start.compareTo(start)    >    0)    {    throw    new    IllegalArgumentException(   "Requires    start    on    or    before    start.   ");    }    if(start.compareTo(start)  >  0)  {  throw  new  IllegalArgumentException( "Requires  start  on  or  before  start.   ");  }	  	compilable	  [FE]  IllegalArgumentException	865	1
5378	[BUG]  [BUGGY]      if(start.compareTo(start)  >  0)  {  throw  new  IllegalArgumentException(   "Requires  start  on  or  before  start.   ");  }  if(start.compareTo(start)  >  0)  {  throw  new  IllegalArgumentException( "Requires  start  on  or  before  start.   ");  }  [FE]  IllegalArgumentException  [CONTEXT]    throws  CloneNotSupportedException  {  if  (start  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'start'  argument.   ");  }    [BUGGY]      if(start.compareTo(start)  >  0)  {  throw  new  IllegalArgumentException(   "Requires  start  on  or  before  start.   ");  }  if(start.compareTo(start)  >  0)  {  throw  new  IllegalArgumentException( "Requires  start  on  or  before  start.   ");  }  [BUGGY]    if  (end  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'end'  argument.   ");  }  if  (start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException(     "Requires  start  on  or  before  end.   ");  }  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	924	924	1	replace	        if(start.compareTo(start)    >    0)    {    throw    new    IllegalArgumentException(   "Requires    start    on    or    before    start.   ");    }    if(start.compareTo(start)  >  0)  {  throw  new  IllegalArgumentException( "Requires  start  on  or  before  start.   ");  }	  	compilable	  [FE]  IllegalArgumentException	865	1
5379	[BUG]  [BUGGY]      if(start.compareTo(start)  >  0)  {  throw  new  IllegalArgumentException(   "Requires  start  on  or  before  start.   ");  }  if(start.compareTo(start)  >  0)  {  throw  new  IllegalArgumentException( "Requires  start  on  or  before  start.   ");  [Delete]  [CE]  illegal  start  of  expression  [CONTEXT]    throws  CloneNotSupportedException  {  if  (start  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'start'  argument.   ");  }    [BUGGY]      if(start.compareTo(start)  >  0)  {  throw  new  IllegalArgumentException(   "Requires  start  on  or  before  start.   ");  }  if(start.compareTo(start)  >  0)  {  throw  new  IllegalArgumentException( "Requires  start  on  or  before  start.   ");  [Delete]  [BUGGY]    if  (end  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'end'  argument.   ");  }  if  (start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException(     "Requires  start  on  or  before  end.   ");  }  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	924	924	1	replace	        if(start.compareTo(start)    >    0)    {    throw    new    IllegalArgumentException(   "Requires    start    on    or    before    start.   ");    }    if(start.compareTo(start)  >  0)  {  throw  new  IllegalArgumentException( "Requires  start  on  or  before  start.   ");  [Delete]	  	non-compiled	[CE]  illegal  start  of  expression	865	None
5449	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;    [BUGGY]      this.range  =  domain;  this.domain  =  domain;  [BUGGY]    this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	176	176	1	add	        this.range    =    domain;    this.domain  =  domain;	  	compilable	  [FE]  IllegalArgumentException	2475	1
5450	[BUG]  [BUGGY]      this.range  =  domain;  this.domain  =  domain;  [FE]  IllegalArgumentException  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;    [BUGGY]      this.range  =  domain;  this.domain  =  domain;  [BUGGY]    this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	176	176	1	replace	        this.range    =    domain;    this.domain  =  domain;	  	compilable	  [FE]  IllegalArgumentException	2475	1
5450	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;    [BUGGY]      this.range  =  domain;  this.range  =  range;  [BUGGY]    this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	176	176	1	add	        this.range    =    domain;    this.range  =  range;	  	compilable	  [FE]  IllegalArgumentException	2475	1
5451	[BUG]  [BUGGY]      this.range  =  domain;  this.range  =  range;  [FE]  IllegalArgumentException  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;    [BUGGY]      this.range  =  domain;  this.range  =  range;  [BUGGY]    this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	176	176	1	replace	        this.range    =    domain;    this.range  =  range;	  	compilable	  [FE]  IllegalArgumentException	2475	1
5451	[BUG]  [BUGGY]      this.range  =  domain;  this.domino  =  domain;  [CE]  cannot  find  symbol  domino  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;    [BUGGY]      this.range  =  domain;  this.domino  =  domain;  [BUGGY]    this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	176	176	1	replace	        this.range    =    domain;    this.domino  =  domain;	  	non-compiled	[CE]  cannot  find  symbol  domino	2475	None
5473	[BUG]  [BUGGY]  if(startIndex  >=  0)  {  emptyRange  =  true;  }  [CE]  cannot  find  symbol  endIndex  [CONTEXT]     "Requires  start  on  or  before  end.   ");  }  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }    [BUGGY]  if(startIndex  >=  0)  {  emptyRange  =  true;  }  [BUGGY]    int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  emptyRange  =  true;  }  if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	939	939	1	replace	if(startIndex  >=  0)  {  emptyRange  =  true;  }	      if(startIndex    <    this.data.size())    {    if(startIndex    >=    0)    {    emptyRange    =    true;    }    	non-compiled	[CE]  cannot  find  symbol  endIndex	4263	None
5474	[BUG]  [BUGGY]  if(startIndex  <  0)  {  emptyRange  =  true;  }  [CE]  cannot  find  symbol  endIndex  [CONTEXT]     "Requires  start  on  or  before  end.   ");  }  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }    [BUGGY]  if(startIndex  <  0)  {  emptyRange  =  true;  }  [BUGGY]    int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  emptyRange  =  true;  }  if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	939	939	1	replace	if(startIndex  <  0)  {  emptyRange  =  true;  }	      if(startIndex    <    this.data.size())    {    if(startIndex    >=    0)    {    emptyRange    =    true;    }    	non-compiled	[CE]  cannot  find  symbol  endIndex	4263	None
5498	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]    throw  new  IllegalArgumentException(   "Null  'end'  argument.   ");  }  if  (start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException(     "Requires  start  on  or  before  end.   ");  }  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);    [BUGGY]  while(startIndex  >=  this.data.size())  {  startIndex  =  -(startIndex  -  1);  [BUGGY]    if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  emptyRange  =  true;  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	935	935	1	add	while(startIndex  >=  this.data.size())  {  startIndex  =  -(startIndex  -  1);	      while(startIndex    <    this.data.size())    {    startIndex    =    -(startIndex    -    1);    	compilable	  [FE]  IllegalArgumentException	6483	1
5499	[BUG]  [BUGGY]  while(startIndex  >=  this.data.size())  {  startIndex  =  -(startIndex  -  1);  [FE]  IllegalArgumentException  [CONTEXT]    throw  new  IllegalArgumentException(   "Null  'end'  argument.   ");  }  if  (start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException(     "Requires  start  on  or  before  end.   ");  }  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);    [BUGGY]  while(startIndex  >=  this.data.size())  {  startIndex  =  -(startIndex  -  1);  [BUGGY]    if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  emptyRange  =  true;  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	935	935	1	replace	while(startIndex  >=  this.data.size())  {  startIndex  =  -(startIndex  -  1);	      while(startIndex    <    this.data.size())    {    startIndex    =    -(startIndex    -    1);    	compilable	  [FE]  IllegalArgumentException	6483	1
5546	[BUG]  [BUGGY]  RegularTimePeriod  end  =(RegularTimePeriod)super.clone();  [CE]  illegal  start  of  type  [CONTEXT]    throws  CloneNotSupportedException  {    [BUGGY]  RegularTimePeriod  end  =(RegularTimePeriod)super.clone();  [BUGGY]    if  (start  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'start'  argument.   ");  }  if  (end  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'end'  argument.   ");  }  if  (start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException(     "Requires  start  on  or  before  end.   ");  }  boolean  emptyRange  =  false;  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	921	921	1	replace	RegularTimePeriod  end  =(RegularTimePeriod)super.clone();	      RegularTimePeriod    start    =(RegularTimePeriod)super.clone();    	non-compiled	[CE]  illegal  start  of  type	26	None
5569	[BUG]  [BUGGY]  StringBuffer.setItem(item);  [CE]  cannot  find  symbol  [CONTEXT]    throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }    [BUGGY]  StringBuffer.setItem(item);  [BUGGY]    removeAgedItems(false);//  remove  old  items  if  necessary,  but          //  don't  notify  anyone,  because  that                    //  happens  next  anyway...    if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	542	544	1	replace	StringBuffer.setItem(item);	      fireSeriesChanged();    	non-compiled	[CE]  cannot  find  symbol	5883	None
5570	[BUG]  [BUGGY]  StringBuffer  b  =  new  StringBuffer(item.size());  [CE]  cannot  find  symbol  [CONTEXT]    throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }    [BUGGY]  StringBuffer  b  =  new  StringBuffer(item.size());  [BUGGY]    removeAgedItems(false);//  remove  old  items  if  necessary,  but          //  don't  notify  anyone,  because  that                    //  happens  next  anyway...    if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	542	544	1	replace	StringBuffer  b  =  new  StringBuffer(item.size());	      fireSeriesChanged();    	non-compiled	[CE]  cannot  find  symbol	5883	None
5594	[BUG]  [BUGGY]  if(startIndex  <  endIndex)  {  for(TimeSeries  start  :  start.getPeriodType())  {  emptyRange  =  false;  }  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [CONTEXT]    }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  emptyRange  =  true;  }    [BUGGY]  if(startIndex  <  endIndex)  {  for(TimeSeries  start  :  start.getPeriodType())  {  emptyRange  =  false;  }  [BUGGY]    if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  }  else  {  return  createCopy(startIndex,  endIndex);  }  }  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	947	947	1	replace	if(startIndex  <  endIndex)  {  for(TimeSeries  start  :  start.getPeriodType())  {  emptyRange  =  false;  }	      if(startIndex    >=    endIndex)    {    for(TimeSeries    start    :    start.getPeriodType())    {    emptyRange    =    false;    }    	non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	315	None
5617	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]    if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {    [BUGGY]      fireSeriesChanged();  fireSeriesChanged();  [BUGGY]    this.data.add(item);  added  =  true;  }  else  {  int  index  =  Collections.binarySearch(this.data,  item);  if  (index  <  0)  {  this.data.add(-index  -  1,  item);  added  =  true;  }  else  {  StringBuffer  b  =  new  StringBuffer();  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	515	515	1	add	        fireSeriesChanged();    fireSeriesChanged();	  	compilable	  [FE]  IllegalArgumentException	1370	1
5618	[BUG]  [BUGGY]      fireSeriesChanged();  fireSeriesChanged();  [FE]  IllegalArgumentException  [CONTEXT]    if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {    [BUGGY]      fireSeriesChanged();  fireSeriesChanged();  [BUGGY]    this.data.add(item);  added  =  true;  }  else  {  int  index  =  Collections.binarySearch(this.data,  item);  if  (index  <  0)  {  this.data.add(-index  -  1,  item);  added  =  true;  }  else  {  StringBuffer  b  =  new  StringBuffer();  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	515	515	1	replace	        fireSeriesChanged();    fireSeriesChanged();	  	compilable	  [FE]  IllegalArgumentException	1370	1
5641	[BUG]  [BUGGY]  if(start  <  0)  {  throw  new  IllegalArgumentException( "Requires  start  >=  0.   ");  consulted  if(end  <  start)  {  throw  new  IllegalArgumentException( "Requires  start  <=  end.   ");  }  [CE]  not  a  statement  [CONTEXT]    throws  CloneNotSupportedException  {    [BUGGY]  if(start  <  0)  {  throw  new  IllegalArgumentException( "Requires  start  >=  0.   ");  consulted  if(end  <  start)  {  throw  new  IllegalArgumentException( "Requires  start  <=  end.   ");  }  [BUGGY]    if  (start  <  0)  {  throw  new  IllegalArgumentException(   "Requires  start  >=  0.   ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(   "Requires  start  <=  end.   ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	879	879	1	replace	if(start  <  0)  {  throw  new  IllegalArgumentException( "Requires  start  >=  0.   ");  consulted  if(end  <  start)  {  throw  new  IllegalArgumentException( "Requires  start  <=  end.   ");  }	      if(start    <    0)    {    throw    new    IllegalArgumentException(   "Requires    start    >=    0.   ");    }    	non-compiled	[CE]  not  a  statement	266	None
5642	[BUG]  [BUGGY]  if(start  <  0)  {  throw  new  IllegalArgumentException( "Requires  start  >=  0.   ");  consulted  if(end  <  start)  {  throw  new  IllegalArgumentException( "Requires  start  >>  end.   ");  }  [CE]  not  a  statement  [CONTEXT]    throws  CloneNotSupportedException  {    [BUGGY]  if(start  <  0)  {  throw  new  IllegalArgumentException( "Requires  start  >=  0.   ");  consulted  if(end  <  start)  {  throw  new  IllegalArgumentException( "Requires  start  >>  end.   ");  }  [BUGGY]    if  (start  <  0)  {  throw  new  IllegalArgumentException(   "Requires  start  >=  0.   ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(   "Requires  start  <=  end.   ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	879	879	1	replace	if(start  <  0)  {  throw  new  IllegalArgumentException( "Requires  start  >=  0.   ");  consulted  if(end  <  start)  {  throw  new  IllegalArgumentException( "Requires  start  >>  end.   ");  }	      if(start    <    0)    {    throw    new    IllegalArgumentException(   "Requires    start    >=    0.   ");    }    	non-compiled	[CE]  not  a  statement	266	None
5690	[BUG]  [BUGGY]  long  last  =  getTimePeriod(getItemCount()  /  1).getSerialIndex();  [CE]  cannot  find  symbol  latest  [CONTEXT]    public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {    [BUGGY]  long  last  =  getTimePeriod(getItemCount()  /  1).getSerialIndex();  [BUGGY]    long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())  >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	741	741	1	replace	long  last  =  getTimePeriod(getItemCount()  /  1).getSerialIndex();	      long    last    =    getTimePeriod(getItemCount()    -    1).getSerialIndex();    	non-compiled	[CE]  cannot  find  symbol  latest	3482	None
5713	[BUG]  [BUGGY]  if(last.getPeriod().compareTo(this.data)>  0)  {  [CE]  cannot  find  symbol  [CONTEXT]    if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);    [BUGGY]  if(last.getPeriod().compareTo(this.data)>  0)  {  [BUGGY]    this.data.add(item);  added  =  true;  }  else  {  int  index  =  Collections.binarySearch(this.data,  item);  if  (index  <  0)  {  this.data.add(-index  -  1,  item);  added  =  true;  }  else  {  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	514	514	1	replace	if(last.getPeriod().compareTo(this.data)>  0)  {	  if(last.getPeriod().compareTo(item)>    0)    {    	non-compiled	[CE]  cannot  find  symbol	698	None
5761	[BUG]  [BUGGY]  [Delete]  [CE]  illegal  start  of  expression  [CONTEXT]    throws  CloneNotSupportedException  {  if  (start  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'start'  argument.   ");  }  if  (end  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'end'  argument.   ");  }    [BUGGY]  [Delete]  [BUGGY]    if  (start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException(     "Requires  start  on  or  before  end.   ");  }  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	927	927	1	replace	[Delete]	      if(start.compareTo(start)>    0)    {    throw    new    IllegalArgumentException(   "Requires    start    on    or    before    end.   ");    }    	non-compiled	[CE]  illegal  start  of  expression	914	None
5786	[BUG]  [BUGGY]  if(this.data.size()  ||  startIndex  >  end)  {  [CE]  bad  operand  types  for  binary  operator  '>'  [CONTEXT]    throw  new  IllegalArgumentException(   "Null  'end'  argument.   ");  }  if  (start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException(     "Requires  start  on  or  before  end.   ");  }  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);    [BUGGY]  if(this.data.size()  ||  startIndex  >  end)  {  [BUGGY]    emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  emptyRange  =  true;  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	935	935	1	replace	if(this.data.size()  ||  startIndex  >  end)  {	  if(startIndex    ==    this.data.size()    ||    startIndex    >    end)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>'	5042	None
5810	[BUG]  [BUGGY]  long  maximum  =  getTimePeriod(getItemCount()  /  1).getSerialIndex();  [CE]  cannot  find  symbol  removed  [CONTEXT]    public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();    [BUGGY]  long  maximum  =  getTimePeriod(getItemCount()  /  1).getSerialIndex();  [BUGGY]    boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())  >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	742	742	1	replace	long  maximum  =  getTimePeriod(getItemCount()  /  1).getSerialIndex();	      long    maximum    =    getTimePeriod(getItemCount()    -    1).getSerialIndex();    	non-compiled	[CE]  cannot  find  symbol  removed	5643	None
5834	[BUG]  [BUGGY]  this.data  =  new  ArrayList  <  Comparable>(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  timePeriodClass);  [CE]  generics  are  not  supported  in  -source  1.4  [CONTEXT]    public  TimeSeries(Comparable  name,  Class  timePeriodClass)  {  this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  timePeriodClass);    [BUGGY]  this.data  =  new  ArrayList  <  Comparable>(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  timePeriodClass);  [BUGGY]    }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	157	157	1	replace	this.data  =  new  ArrayList  <  Comparable>(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  timePeriodClass);	      this.data    =    new    ArrayList    <    Comparable>(DEFAULT_DOMAIN_DESCRIPTION,    DEFAULT_RANGE_DESCRIPTION,    timePeriodClass);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	1921	None
5881	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]    public  TimeSeries(Comparable  name)  {  this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  Day.class);    [BUGGY]      fireSeriesChanged();  fireSeriesChanged();  [BUGGY]    }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Comparable)  Comparable  name  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.4082482904638631	144	144	1	add	        fireSeriesChanged();    fireSeriesChanged();	  	compilable	  [FE]  IllegalArgumentException	3601	1
5882	[BUG]  [BUGGY]      fireSeriesChanged();  fireSeriesChanged();  [FE]  IllegalArgumentException  [CONTEXT]    public  TimeSeries(Comparable  name)  {  this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  Day.class);    [BUGGY]      fireSeriesChanged();  fireSeriesChanged();  [BUGGY]    }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Comparable)  Comparable  name  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.4082482904638631	144	144	1	replace	        fireSeriesChanged();    fireSeriesChanged();	  	compilable	  [FE]  IllegalArgumentException	3601	1
5905	[BUG]  [BUGGY]  final  boolean  emptyRange  =  true;  [CE]  cannot  assign  a  value  to  final  variable  emptyRange  [CONTEXT]    if  (start  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'start'  argument.   ");  }  if  (end  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'end'  argument.   ");  }  if  (start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException(     "Requires  start  on  or  before  end.   ");  }    [BUGGY]  final  boolean  emptyRange  =  true;  [BUGGY]    int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	931	931	1	replace	final  boolean  emptyRange  =  true;	  final    boolean    emptyRange    =    false;    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  emptyRange	3062	None
5906	[BUG]  [BUGGY]  final  boolean  emptyRange  =(this.data!=  null)?  false  :  start.compareTo(end)>  0;  [CE]  cannot  assign  a  value  to  final  variable  emptyRange  [CONTEXT]    if  (start  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'start'  argument.   ");  }  if  (end  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'end'  argument.   ");  }  if  (start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException(     "Requires  start  on  or  before  end.   ");  }    [BUGGY]  final  boolean  emptyRange  =(this.data!=  null)?  false  :  start.compareTo(end)>  0;  [BUGGY]    int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	931	931	1	replace	final  boolean  emptyRange  =(this.data!=  null)?  false  :  start.compareTo(end)>  0;	  final    boolean    emptyRange    =    false;    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  emptyRange	3062	None
5929	[BUG]  [BUGGY]  for(int  i  =  0,  count  =  this.data.size();  i  <  count;  i++)  {  TimeSeriesDataItem  period  =(TimeSeriesDataItem)this.data.get(i);  period  =  period.getDataItem(i);  if(period  ==  null)  {  throw  new  IllegalArgumentException  [CE]  '('  or  '['  expected  [CONTEXT]    public  int  getIndex(RegularTimePeriod  period)  {  if  (period  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'period'  argument.   ");  }    [BUGGY]  for(int  i  =  0,  count  =  this.data.size();  i  <  count;  i++)  {  TimeSeriesDataItem  period  =(TimeSeriesDataItem)this.data.get(i);  period  =  period.getDataItem(i);  if(period  ==  null)  {  throw  new  IllegalArgumentException  [BUGGY]    TimeSeriesDataItem  dummy  =  new  TimeSeriesDataItem(    period,  Integer.MIN_VALUE);  period,  Integer.MIN_VALUE);  return  Collections.binarySearch(this.data,  dummy);  }  [CLASS]  TimeSeries  [METHOD]  getIndex  [RETURN_TYPE]  int  RegularTimePeriod  period  [VARIABLES]  boolean  TimeSeriesDataItem  dummy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.3333333333333333	433	434	1	replace	for(int  i  =  0,  count  =  this.data.size();  i  <  count;  i++)  {  TimeSeriesDataItem  period  =(TimeSeriesDataItem)this.data.get(i);  period  =  period.getDataItem(i);  if(period  ==  null)  {  throw  new  IllegalArgumentException	      for(int    i    =    0,    count    =    this.data.size();    i    <    count;    i++)    {    TimeSeriesDataItem    period    =(TimeSeriesDataItem)this.data.get(i);    period    =    period.getDataItem(i);    if(period    ==    null)    {    throw    new    IllegalArgumentException(   "    	non-compiled	[CE]  '('  or  '['  expected	7922	None
5930	[BUG]  [BUGGY]  for(int  i  =  0,  count  =  this.data.size();  i  <  count;  i++)  {  TimeSeriesDataItem  period  =(TimeSeriesDataItem)this.data.get(i);  period  =  period.getDataItem(i);  if(period  ==  null)  {  throw  [CE]  illegal  start  of  expression  [CONTEXT]    public  int  getIndex(RegularTimePeriod  period)  {  if  (period  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'period'  argument.   ");  }    [BUGGY]  for(int  i  =  0,  count  =  this.data.size();  i  <  count;  i++)  {  TimeSeriesDataItem  period  =(TimeSeriesDataItem)this.data.get(i);  period  =  period.getDataItem(i);  if(period  ==  null)  {  throw  [BUGGY]    TimeSeriesDataItem  dummy  =  new  TimeSeriesDataItem(    period,  Integer.MIN_VALUE);  period,  Integer.MIN_VALUE);  return  Collections.binarySearch(this.data,  dummy);  }  [CLASS]  TimeSeries  [METHOD]  getIndex  [RETURN_TYPE]  int  RegularTimePeriod  period  [VARIABLES]  boolean  TimeSeriesDataItem  dummy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.3333333333333333	433	434	1	replace	for(int  i  =  0,  count  =  this.data.size();  i  <  count;  i++)  {  TimeSeriesDataItem  period  =(TimeSeriesDataItem)this.data.get(i);  period  =  period.getDataItem(i);  if(period  ==  null)  {  throw	      for(int    i    =    0,    count    =    this.data.size();    i    <    count;    i++)    {    TimeSeriesDataItem    period    =(TimeSeriesDataItem)this.data.get(i);    period    =    period.getDataItem(i);    if(period    ==    null)    {    throw    new    IllegalArgumentException(   "    	non-compiled	[CE]  illegal  start  of  expression	7922	None
5954	[BUG]  [BUGGY]  if(domain  instanceof  java.util.ArrayList())  {  this.domain  =  domain;  }  [CE]  ')'  expected  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);    [BUGGY]  if(domain  instanceof  java.util.ArrayList())  {  this.domain  =  domain;  }  [BUGGY]    this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	175	175	1	replace	if(domain  instanceof  java.util.ArrayList())  {  this.domain  =  domain;  }	      java.util.ArrayList();    this.domain    =    domain;    	non-compiled	[CE]  ')'  expected	3183	None
5977	[BUG]  [BUGGY]  endIndex  =  getIndex(startIndex,  endIndex);  [CE]  illegal  start  of  type  [CONTEXT]    }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  emptyRange  =  true;  }    [BUGGY]  endIndex  =  getIndex(startIndex,  endIndex);  [BUGGY]    if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  }  else  {  return  createCopy(startIndex,  endIndex);  }  }  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	947	947	1	replace	endIndex  =  getIndex(startIndex,  endIndex);	      endIndex    =    getIndex(startIndex);    	non-compiled	[CE]  illegal  start  of  type	314	None
5978	[BUG]  [BUGGY]  endIndex  =  getIndex(startIndex),  endIndex);  [CE]  ';'  expected  [CONTEXT]    }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  emptyRange  =  true;  }    [BUGGY]  endIndex  =  getIndex(startIndex),  endIndex);  [BUGGY]    if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  }  else  {  return  createCopy(startIndex,  endIndex);  }  }  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	947	947	1	replace	endIndex  =  getIndex(startIndex),  endIndex);	      endIndex    =    getIndex(startIndex);    	non-compiled	[CE]  ';'  expected	314	None
6002	[BUG]  [BUGGY]  while(this.timePeriodClass!=  null  &&  item.getPeriod().compareTo(this.timePeriodClass)>  0)  {  this.data.add(item);  [CE]  illegal  start  of  expression  [CONTEXT]    b.append(   "is     ");  b.append(item.getPeriod().getClass().getName());  b.append(   ",  but  the  TimeSeries  is  expecting  an  instance  of     ");  b.append(this.timePeriodClass.getName());  b.append(   ".   ");  throw  new  SeriesException(b.toString());  }  boolean  added  =  false;    [BUGGY]  while(this.timePeriodClass!=  null  &&  item.getPeriod().compareTo(this.timePeriodClass)>  0)  {  this.data.add(item);  [BUGGY]    int  count  =  getItemCount();  if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  added  =  true;  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	507	507	1	replace	while(this.timePeriodClass!=  null  &&  item.getPeriod().compareTo(this.timePeriodClass)>  0)  {  this.data.add(item);	      while(item!=    null    &&    item.getPeriod().compareTo(this.timePeriodClass)>    0)    {    this.data.add(item);    	non-compiled	[CE]  illegal  start  of  expression	363	None
6026	[BUG]  [BUGGY]  this.data  =  new  java.util.ArrayList(domain);  [CE]  no  suitable  constructor  found  for  ArrayList(String)  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);    [BUGGY]  this.data  =  new  java.util.ArrayList(domain);  [BUGGY]    this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	175	175	1	replace	this.data  =  new  java.util.ArrayList(domain);	      this.data    =    new    java.util.ArrayList();    	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayList(String)	1538	None
6074	[BUG]  [BUGGY]  this.maximumItemAge  =  new  java.util.ArrayList(this.minimumItemCount);  [CE]  cannot  find  symbol  minimumItemCount  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;  this.range  =  range;    [BUGGY]  this.maximumItemAge  =  new  java.util.ArrayList(this.minimumItemCount);  [BUGGY]    this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	177	177	1	replace	this.maximumItemAge  =  new  java.util.ArrayList(this.minimumItemCount);	      this.maximumItemAge    =    new    java.util.ArrayList();    	non-compiled	[CE]  cannot  find  symbol  minimumItemCount	2810	None
6098	[BUG]  [BUGGY]  this.data.add(period,  new  Double(value));  [CE]  illegal  start  of  expression  [CONTEXT]    public  void  add(RegularTimePeriod  period,  double  value)  {  add(period,  value,  true);    [BUGGY]  this.data.add(period,  new  Double(value));  [BUGGY]      [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  double  value  [VARIABLES]  boolean  double  value  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.2581988897471611	562	562	1	replace	this.data.add(period,  new  Double(value));	  this.data.add(period,    value);    	non-compiled	[CE]  illegal  start  of  expression	2498	None
6121	[BUG]  [BUGGY]  if(!emptyRange)  {  this.data.add(period,  new  Double(value));  notifyListeners(new  DataItem(period,  value,  notify));  [CE]  illegal  start  of  expression  [CONTEXT]    }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  emptyRange  =  true;  }    [BUGGY]  if(!emptyRange)  {  this.data.add(period,  new  Double(value));  notifyListeners(new  DataItem(period,  value,  notify));  [BUGGY]    TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  }  else  {  return  createCopy(startIndex,  endIndex);  }  }  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	947	947	1	replace	if(!emptyRange)    {    this.data.add(period,  new  Double(value));  notifyListeners(new  DataItem(period,  value,  notify));	  	non-compiled	[CE]  illegal  start  of  expression	2282	None
6122	[BUG]  [BUGGY]  if(!emptyRange)  {  this.data.add(period,  new  Double(value),  notifyListeners(new  DataItem(period,  value,  notify));  [CE]  ')'  expected  [CONTEXT]    }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  emptyRange  =  true;  }    [BUGGY]  if(!emptyRange)  {  this.data.add(period,  new  Double(value),  notifyListeners(new  DataItem(period,  value,  notify));  [BUGGY]    TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  }  else  {  return  createCopy(startIndex,  endIndex);  }  }  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	947	947	1	replace	if(!emptyRange)    {    this.data.add(period,  new  Double(value),  notifyListeners(new  DataItem(period,  value,  notify));	  	non-compiled	[CE]  ')'  expected	2282	None
6123	[BUG]  [BUGGY]  if(!emptyRange)  {  this.data.add(period,  new  Double(value));  notifyListeners(new  DataItem(period,  value,  notify),  null);  [CE]  illegal  start  of  expression  [CONTEXT]    }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  emptyRange  =  true;  }    [BUGGY]  if(!emptyRange)  {  this.data.add(period,  new  Double(value));  notifyListeners(new  DataItem(period,  value,  notify),  null);  [BUGGY]    TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  }  else  {  return  createCopy(startIndex,  endIndex);  }  }  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	947	947	1	replace	if(!emptyRange)    {    this.data.add(period,  new  Double(value));  notifyListeners(new  DataItem(period,  value,  notify),  null);	  	non-compiled	[CE]  illegal  start  of  expression	2282	None
6146	[BUG]  [BUGGY]  checkPeriod(index,  DEFAULT_DOMAIN_DESCRIPTION);  [CE]  cannot  find  symbol  [CONTEXT]    public  RegularTimePeriod  getTimePeriod(int  index)  {    [BUGGY]  checkPeriod(index,  DEFAULT_DOMAIN_DESCRIPTION);  [BUGGY]    return  getDataItem(index).getPeriod();  }  [CLASS]  TimeSeries  [METHOD]  getTimePeriod  [RETURN_TYPE]  RegularTimePeriod  int  index  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  long  maximumItemAge  periods  serialVersionUID  int  count  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	372	372	1	replace	checkPeriod(index,  DEFAULT_DOMAIN_DESCRIPTION);	      getDataItem(index).getPeriod();    	non-compiled	[CE]  cannot  find  symbol	2594	None
6170	[BUG]  [BUGGY]  boolean  added  =  notification;  [CE]  cannot  find  symbol  notification  [CONTEXT]    b.append(   "You  are  trying  to  add  data  where  the  time  period  class     ");  b.append(   "is     ");  b.append(item.getPeriod().getClass().getName());  b.append(   ",  but  the  TimeSeries  is  expecting  an  instance  of     ");  b.append(this.timePeriodClass.getName());  b.append(   ".   ");  throw  new  SeriesException(b.toString());  }      [BUGGY]  boolean  added  =  notification;  [BUGGY]    int  count  =  getItemCount();  if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  added  =  true;  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	506	506	1	replace	boolean  added  =  notification;	  boolean    added    =    notify;    	non-compiled	[CE]  cannot  find  symbol  notification	1034	None
6193	[BUG]  [BUGGY]  if(endIndex  >  endIndex)  {  throw  new  SeriesException( " ");  }  [CE]  illegal  start  of  expression  [CONTEXT]    int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period    [BUGGY]  if(endIndex  >  endIndex)  {  throw  new  SeriesException( " ");  }  [BUGGY]    endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  }  if  (endIndex  <  0)  {  emptyRange  =  true;  }  if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  }  else  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	942	943	1	replace	if(endIndex  >  endIndex)  {  throw  new  SeriesException( " ");  }	      if(endIndex    <    0)    {    if(startIndex    >    endIndex)    {    throw    new    SeriesException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	2401	None
6194	[BUG]  [BUGGY]  if(endIndex  >  startIndex)  {  throw  new  SeriesException( " ");  }  [CE]  illegal  start  of  expression  [CONTEXT]    int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period    [BUGGY]  if(endIndex  >  startIndex)  {  throw  new  SeriesException( " ");  }  [BUGGY]    endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  }  if  (endIndex  <  0)  {  emptyRange  =  true;  }  if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  }  else  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	942	943	1	replace	if(endIndex  >  startIndex)  {  throw  new  SeriesException( " ");  }	      if(endIndex    <    0)    {    if(startIndex    >    endIndex)    {    throw    new    SeriesException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	2401	None
6218	[BUG]  [BUGGY]  TimeSeriesDataItem  dummy  =(TimeSeriesDataItem)this.data.get(period,  0);  [CE]  method  get  in  interface  List  cannot  be  applied  to  given  types;  [CONTEXT]    public  int  getIndex(RegularTimePeriod  period)  {  if  (period  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'period'  argument.   ");  }    [BUGGY]  TimeSeriesDataItem  dummy  =(TimeSeriesDataItem)this.data.get(period,  0);  [BUGGY]    TimeSeriesDataItem  dummy  =  new  TimeSeriesDataItem(    period,  Integer.MIN_VALUE);  period,  Integer.MIN_VALUE);  return  Collections.binarySearch(this.data,  dummy);  }  [CLASS]  TimeSeries  [METHOD]  getIndex  [RETURN_TYPE]  int  RegularTimePeriod  period  [VARIABLES]  boolean  TimeSeriesDataItem  dummy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.3333333333333333	433	434	1	replace	TimeSeriesDataItem  dummy  =(TimeSeriesDataItem)this.data.get(period,  0);	      TimeSeriesDataItem    dummy    =(TimeSeriesDataItem)this.data.get(period);    	non-compiled	[CE]  method  get  in  interface  List  cannot  be  applied  to  given  types;	2738	None
6242	[BUG]  [BUGGY]  super(name,  Domain.class,  timePeriodClass);  [CE]  cannot  find  symbol  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {    [BUGGY]  super(name,  Domain.class,  timePeriodClass);  [BUGGY]    this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	174	174	1	replace	super(name,  Domain.class,  timePeriodClass);	  super(name,    Domain.class);    	non-compiled	[CE]  cannot  find  symbol	242	None
6266	[BUG]  [BUGGY]  Class  timePeriodClass  =  this.timePeriodClass.getTimePeriodClass();  [CE]  illegal  start  of  type  [CONTEXT]    public  void  add(TimeSeriesDataItem  item,  boolean  notify)  {  if  (item  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'item'  argument.   ");  }    [BUGGY]  Class  timePeriodClass  =  this.timePeriodClass.getTimePeriodClass();  [BUGGY]    if  (!item.getPeriod().getClass().equals(this.timePeriodClass))  {  StringBuffer  b  =  new  StringBuffer();  b.append(   "You  are  trying  to  add  data  where  the  time  period  class     ");  b.append(   "is     ");  b.append(item.getPeriod().getClass().getName());  b.append(   ",  but  the  TimeSeries  is  expecting  an  instance  of     ");  b.append(this.timePeriodClass.getName());  b.append(   ".   ");  throw  new  SeriesException(b.toString());  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	494	494	1	replace	Class  timePeriodClass  =  this.timePeriodClass.getTimePeriodClass();	      Class    timePeriodClass    =    item.getTimePeriodClass();    	non-compiled	[CE]  illegal  start  of  type	2329	None
6290	[BUG]  [BUGGY]  fireSeriesChanged(item);  [CE]  illegal  start  of  expression  [CONTEXT]    public  void  add(RegularTimePeriod  period,  Number  value,  boolean  notify)  {  TimeSeriesDataItem  item  =  new  TimeSeriesDataItem(period,  value);  add(item,  notify);    [BUGGY]  fireSeriesChanged(item);  [BUGGY]      [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  Number  value  boolean  notify  [VARIABLES]  boolean  notify  Number  value  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	604	604	1	replace	fireSeriesChanged(item);	  fireSeriesChanged();    	non-compiled	[CE]  illegal  start  of  expression	673	None
6315	[BUG]  [BUGGY]  add(period,  value,  false);  update(period,  value,  true);  [CE]  no  suitable  method  found  for  update(RegularTimePeriod,Number,boolean)  [CONTEXT]    public  void  add(RegularTimePeriod  period,  Number  value)  {      [BUGGY]  add(period,  value,  false);  update(period,  value,  true);  [BUGGY]    }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  Number  value  [VARIABLES]  boolean  Number  value  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	588	588	1	replace	add(period,    value,    false);    update(period,  value,  true);	  	non-compiled	[CE]  no  suitable  method  found  for  update(RegularTimePeriod,Number,boolean)	793	None
6337	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;    [BUGGY]      this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemCount  =  Integer.MAX_VALUE;  [BUGGY]    this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	180	180	1	add	        this.maximumItemCount    =    Integer.MAX_VALUE;    this.maximumItemCount  =  Integer.MAX_VALUE;	  	compilable	  [FE]  IllegalArgumentException	2113	1
6338	[BUG]  [BUGGY]      this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemCount  =  Integer.MAX_VALUE;  [FE]  IllegalArgumentException  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;    [BUGGY]      this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemCount  =  Integer.MAX_VALUE;  [BUGGY]    this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	180	180	1	replace	        this.maximumItemCount    =    Integer.MAX_VALUE;    this.maximumItemCount  =  Integer.MAX_VALUE;	  	compilable	  [FE]  IllegalArgumentException	2113	1
6338	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;    [BUGGY]      this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Integer.MAX_VALUE;  [BUGGY]    this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	180	180	1	add	        this.maximumItemCount    =    Integer.MAX_VALUE;    this.maximumItemAge  =  Integer.MAX_VALUE;	  	compilable	  [FE]  IllegalArgumentException	2113	1
6339	[BUG]  [BUGGY]      this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Integer.MAX_VALUE;  [FE]  IllegalArgumentException  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;    [BUGGY]      this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Integer.MAX_VALUE;  [BUGGY]    this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	180	180	1	replace	        this.maximumItemCount    =    Integer.MAX_VALUE;    this.maximumItemAge  =  Integer.MAX_VALUE;	  	compilable	  [FE]  IllegalArgumentException	2113	1
6339	[BUG]  [BUGGY]      this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemCount  =  Long.MAX_VALUE;  [CE]  possible  loss  of  precision  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;    [BUGGY]      this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemCount  =  Long.MAX_VALUE;  [BUGGY]    this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	180	180	1	replace	        this.maximumItemCount    =    Integer.MAX_VALUE;    this.maximumItemCount  =  Long.MAX_VALUE;	  	non-compiled	[CE]  possible  loss  of  precision	2113	None
6361	[BUG]  [BUGGY]  [Delete]  [CE]  illegal  start  of  expression  [CONTEXT]    throw  new  IllegalArgumentException(   "Null  'end'  argument.   ");  }  if  (start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException(     "Requires  start  on  or  before  end.   ");  }  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);    [BUGGY]  [Delete]  [BUGGY]    if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  emptyRange  =  true;  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	935	935	1	replace	[Delete]	      while(this.data!=    null)    {    this.data    =    new    ArrayList    <    TimePeriod>();    	non-compiled	[CE]  illegal  start  of  expression	2763	None
6362	[BUG]  [BUGGY]  }  [CE]  class  or  interface  expected  [CONTEXT]    throw  new  IllegalArgumentException(   "Null  'end'  argument.   ");  }  if  (start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException(     "Requires  start  on  or  before  end.   ");  }  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);    [BUGGY]  }  [BUGGY]    if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  emptyRange  =  true;  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	935	935	1	replace	}	      while(this.data!=    null)    {    this.data    =    new    ArrayList    <    TimePeriod>();    	non-compiled	[CE]  class  or  interface  expected	2763	None
6410	[BUG]  [BUGGY]  super(name,  domain,  range);  [CE]  no  suitable  constructor  found  for  Series(Comparable,String,String)  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {    [BUGGY]  super(name,  domain,  range);  [BUGGY]    super(name);  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	174	174	1	replace	super(name,  domain,  range);	      super();    	non-compiled	[CE]  no  suitable  constructor  found  for  Series(Comparable,String,String)	6543	None
6433	[BUG]  [BUGGY]  data.add(period,  value,  true);  [CE]  illegal  start  of  expression  [CONTEXT]    public  void  add(RegularTimePeriod  period,  Number  value)  {  add(period,  value,  true);    [BUGGY]  data.add(period,  value,  true);  [BUGGY]    }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  Number  value  [VARIABLES]  boolean  Number  value  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	589	589	1	replace	data.add(period,  value,  true);	      data.add(period,    value);    	non-compiled	[CE]  illegal  start  of  expression	507	None
6434	[BUG]  [BUGGY]  data.add(period,  value,  false);  [CE]  illegal  start  of  expression  [CONTEXT]    public  void  add(RegularTimePeriod  period,  Number  value)  {  add(period,  value,  true);    [BUGGY]  data.add(period,  value,  false);  [BUGGY]    }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  Number  value  [VARIABLES]  boolean  Number  value  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	589	589	1	replace	data.add(period,  value,  false);	      data.add(period,    value);    	non-compiled	[CE]  illegal  start  of  expression	507	None
6482	[BUG]  [BUGGY]  updateBounds(item.getPeriod(),  notify);  [CE]  cannot  find  symbol  [CONTEXT]    public  void  add(RegularTimePeriod  period,  double  value,  boolean  notify)  {  TimeSeriesDataItem  item  =  new  TimeSeriesDataItem(period,  value);    [BUGGY]  updateBounds(item.getPeriod(),  notify);  [BUGGY]    }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  double  value  boolean  notify  [VARIABLES]  boolean  notify  double  value  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.2581988897471611	575	575	1	replace	updateBounds(item.getPeriod(),  notify);	  updateBounds(item,    notify);    	non-compiled	[CE]  cannot  find  symbol	1502	None
6505	[BUG]  [BUGGY]  this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  TimePeriodClass.class);  [CE]  call  to  this  must  be  first  statement  in  constructor  [CONTEXT]    public  void  add(RegularTimePeriod  period,  double  value)  {      [BUGGY]  this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  TimePeriodClass.class);  [BUGGY]    }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  double  value  [VARIABLES]  boolean  double  value  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.2581988897471611	561	561	1	replace	this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  TimePeriodClass.class);	  add(period,    value,    false);    	non-compiled	[CE]  call  to  this  must  be  first  statement  in  constructor	1082	None
6506	[BUG]  [BUGGY]  this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  TimePeriodClass.CLASS);  [CE]  call  to  this  must  be  first  statement  in  constructor  [CONTEXT]    public  void  add(RegularTimePeriod  period,  double  value)  {      [BUGGY]  this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  TimePeriodClass.CLASS);  [BUGGY]    }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  double  value  [VARIABLES]  boolean  double  value  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.2581988897471611	561	561	1	replace	this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  TimePeriodClass.CLASS);	  add(period,    value,    false);    	non-compiled	[CE]  call  to  this  must  be  first  statement  in  constructor	1082	None
6553	[BUG]  [BUGGY]  int  count  =  getItemCount()  -  1;  [CE]  class  or  interface  expected  [CONTEXT]    public  void  removeAgedItems(boolean  notify)  {      [BUGGY]  int  count  =  getItemCount()  -  1;  [BUGGY]    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())  >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	740	740	1	replace	int  count  =  getItemCount()  -  1;	      int    count    =    getItemCount();    	non-compiled	[CE]  class  or  interface  expected	1264	None
6577	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]    b.append(   ",  but  the  TimeSeries  is  expecting  an  instance  of     ");  b.append(this.timePeriodClass.getName());  b.append(   ".   ");  throw  new  SeriesException(b.toString());  }  boolean  added  =  false;  int  count  =  getItemCount();  if  (count  ==  0)  {    [BUGGY]      fireSeriesChanged();  fireSeriesChanged();  [BUGGY]    this.data.add(item);  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  added  =  true;  }  else  {  int  index  =  Collections.binarySearch(this.data,  item);  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	509	509	1	add	        fireSeriesChanged();    fireSeriesChanged();	  	compilable	  [FE]  IllegalArgumentException	1346	1
6578	[BUG]  [BUGGY]      fireSeriesChanged();  fireSeriesChanged();  [FE]  IllegalArgumentException  [CONTEXT]    b.append(   ",  but  the  TimeSeries  is  expecting  an  instance  of     ");  b.append(this.timePeriodClass.getName());  b.append(   ".   ");  throw  new  SeriesException(b.toString());  }  boolean  added  =  false;  int  count  =  getItemCount();  if  (count  ==  0)  {    [BUGGY]      fireSeriesChanged();  fireSeriesChanged();  [BUGGY]    this.data.add(item);  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  added  =  true;  }  else  {  int  index  =  Collections.binarySearch(this.data,  item);  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	509	509	1	replace	        fireSeriesChanged();    fireSeriesChanged();	  	compilable	  [FE]  IllegalArgumentException	1346	1
6578	[BUG]  [BUGGY]      fireSeriesChanged();  fireSeriesChanged();  b.append( "The  TimeSeries  is  expecting  an  instance  of "  +  this.timePeriodClass.getName());  [CE]  cannot  find  symbol  b  [CONTEXT]    b.append(   ",  but  the  TimeSeries  is  expecting  an  instance  of     ");  b.append(this.timePeriodClass.getName());  b.append(   ".   ");  throw  new  SeriesException(b.toString());  }  boolean  added  =  false;  int  count  =  getItemCount();  if  (count  ==  0)  {    [BUGGY]      fireSeriesChanged();  fireSeriesChanged();  b.append( "The  TimeSeries  is  expecting  an  instance  of "  +  this.timePeriodClass.getName());  [BUGGY]    this.data.add(item);  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  added  =  true;  }  else  {  int  index  =  Collections.binarySearch(this.data,  item);  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	509	509	1	replace	        fireSeriesChanged();    fireSeriesChanged();  b.append( "The  TimeSeries  is  expecting  an  instance  of "  +  this.timePeriodClass.getName());	  	non-compiled	[CE]  cannot  find  symbol  b	1346	None
6579	[BUG]  [BUGGY]      fireSeriesChanged();  fireSeriesChanged();  b.append( "The  TimeSeries  is  expecting  an  instance  of ");  [CE]  cannot  find  symbol  b  [CONTEXT]    b.append(   ",  but  the  TimeSeries  is  expecting  an  instance  of     ");  b.append(this.timePeriodClass.getName());  b.append(   ".   ");  throw  new  SeriesException(b.toString());  }  boolean  added  =  false;  int  count  =  getItemCount();  if  (count  ==  0)  {    [BUGGY]      fireSeriesChanged();  fireSeriesChanged();  b.append( "The  TimeSeries  is  expecting  an  instance  of ");  [BUGGY]    this.data.add(item);  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  added  =  true;  }  else  {  int  index  =  Collections.binarySearch(this.data,  item);  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	509	509	1	replace	        fireSeriesChanged();    fireSeriesChanged();  b.append( "The  TimeSeries  is  expecting  an  instance  of ");	  	non-compiled	[CE]  cannot  find  symbol  b	1346	None
6626	[BUG]  [BUGGY]  this.data  =  createDataItem(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  TimeSeries.CLASS);  [CE]  illegal  start  of  expression  [CONTEXT]    public  TimeSeries(Comparable  name)  {  this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  Day.class);    [BUGGY]  this.data  =  createDataItem(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  TimeSeries.CLASS);  [BUGGY]    }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Comparable)  Comparable  name  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.4082482904638631	144	144	1	replace	this.data  =  createDataItem(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  TimeSeries.CLASS);	      this.data    =    createDataItem(name,    DEFAULT_DOMAIN_DESCRIPTION,    DEFAULT_RANGE_DESCRIPTION,    TimeSeries.class);    	non-compiled	[CE]  illegal  start  of  expression	1659	None
6650	[BUG]  [BUGGY]  if(item  ==  null  ||  item.getPeriod().getClass().getName().equals(this.timePeriodClass))  {  throw  new  IllegalArgumentException( "Null  'item'  argument.   ");  }  [CE]  illegal  start  of  type  [CONTEXT]    public  void  add(TimeSeriesDataItem  item,  boolean  notify)  {    [BUGGY]  if(item  ==  null  ||  item.getPeriod().getClass().getName().equals(this.timePeriodClass))  {  throw  new  IllegalArgumentException( "Null  'item'  argument.   ");  }  [BUGGY]    throw  new  IllegalArgumentException(   "Null  'item'  argument.   ");  }  if  (!item.getPeriod().getClass().equals(this.timePeriodClass))  {  StringBuffer  b  =  new  StringBuffer();  b.append(   "You  are  trying  to  add  data  where  the  time  period  class     ");  b.append(   "is     ");  b.append(item.getPeriod().getClass().getName());  b.append(   ",  but  the  TimeSeries  is  expecting  an  instance  of     ");  b.append(this.timePeriodClass.getName());  b.append(   ".   ");  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	491	491	1	replace	if(item  ==  null  ||  item.getPeriod().getClass().getName().equals(this.timePeriodClass))  {  throw  new  IllegalArgumentException( "Null  'item'  argument.   ");  }	      	non-compiled	[CE]  illegal  start  of  type	483	None
6673	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]    if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);    [BUGGY]      fireSeriesChanged();  fireSeriesChanged();  [BUGGY]    added  =  true;  }  else  {  int  index  =  Collections.binarySearch(this.data,  item);  if  (index  <  0)  {  this.data.add(-index  -  1,  item);  added  =  true;  }  else  {  StringBuffer  b  =  new  StringBuffer();  b.append(   "You  are  attempting  to  add  an  observation  for     ");  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	516	516	1	add	        fireSeriesChanged();    fireSeriesChanged();	  	compilable	  [FE]  IllegalArgumentException	7381	1
6674	[BUG]  [BUGGY]      fireSeriesChanged();  fireSeriesChanged();  [FE]  IllegalArgumentException  [CONTEXT]    if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);    [BUGGY]      fireSeriesChanged();  fireSeriesChanged();  [BUGGY]    added  =  true;  }  else  {  int  index  =  Collections.binarySearch(this.data,  item);  if  (index  <  0)  {  this.data.add(-index  -  1,  item);  added  =  true;  }  else  {  StringBuffer  b  =  new  StringBuffer();  b.append(   "You  are  attempting  to  add  an  observation  for     ");  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	516	516	1	replace	        fireSeriesChanged();    fireSeriesChanged();	  	compilable	  [FE]  IllegalArgumentException	7381	1
6674	[BUG]  [BUGGY]      fireSeriesChanged();  fireSeriesChanged();  b.append( "You  are  attempting  to  add  an  observation  for ");  [CE]  cannot  find  symbol  b  [CONTEXT]    if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);    [BUGGY]      fireSeriesChanged();  fireSeriesChanged();  b.append( "You  are  attempting  to  add  an  observation  for ");  [BUGGY]    added  =  true;  }  else  {  int  index  =  Collections.binarySearch(this.data,  item);  if  (index  <  0)  {  this.data.add(-index  -  1,  item);  added  =  true;  }  else  {  StringBuffer  b  =  new  StringBuffer();  b.append(   "You  are  attempting  to  add  an  observation  for     ");  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	516	516	1	replace	        fireSeriesChanged();    fireSeriesChanged();  b.append( "You  are  attempting  to  add  an  observation  for ");	  	non-compiled	[CE]  cannot  find  symbol  b	7381	None
6698	[BUG]  [BUGGY]  item.setData(value);  notify  =  true;  [CE]  cannot  find  symbol  [CONTEXT]    public  void  add(RegularTimePeriod  period,  Number  value,  boolean  notify)  {  TimeSeriesDataItem  item  =  new  TimeSeriesDataItem(period,  value);    [BUGGY]  item.setData(value);  notify  =  true;  [BUGGY]    add(item,  notify);  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  Number  value  boolean  notify  [VARIABLES]  boolean  notify  Number  value  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	603	603	1	replace	item.setData(value);  notify  =  true;	      item.setValue(value);    	non-compiled	[CE]  cannot  find  symbol	2043	None
6721	[BUG]  [BUGGY]      endIndex  =  getIndex(start);  int  startIndex  =  getIndex(start);  [CE]  variable  startIndex  is  already  defined  in  method  createCopy(RegularTimePeriod,RegularTimePeriod)  [CONTEXT]    startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }    [BUGGY]      endIndex  =  getIndex(start);  int  startIndex  =  getIndex(start);  [BUGGY]    if  (endIndex  <  0)  {  emptyRange  =  true;  }  if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  }  else  {  return  createCopy(startIndex,  endIndex);  }  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	944	944	1	replace	        endIndex    =    getIndex(start);    int  startIndex  =  getIndex(start);	  	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  createCopy(RegularTimePeriod,RegularTimePeriod)	1178	None
6722	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]    startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }    [BUGGY]      endIndex  =  getIndex(start);  endIndex  =  getIndex(end);  [BUGGY]    if  (endIndex  <  0)  {  emptyRange  =  true;  }  if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  }  else  {  return  createCopy(startIndex,  endIndex);  }  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	944	944	1	add	        endIndex    =    getIndex(start);    endIndex  =  getIndex(end);	  	compilable	  [FE]  AssertionFailedError	1178	1
6723	[BUG]  [BUGGY]      endIndex  =  getIndex(start);  endIndex  =  getIndex(end);  [FE]  AssertionFailedError  [CONTEXT]    startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }    [BUGGY]      endIndex  =  getIndex(start);  endIndex  =  getIndex(end);  [BUGGY]    if  (endIndex  <  0)  {  emptyRange  =  true;  }  if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  }  else  {  return  createCopy(startIndex,  endIndex);  }  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	944	944	1	replace	        endIndex    =    getIndex(start);    endIndex  =  getIndex(end);	  	compilable	  [FE]  AssertionFailedError	1178	1
6723	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]    startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }    [BUGGY]      endIndex  =  getIndex(start);  endIndex  =  getIndex(start);  [BUGGY]    if  (endIndex  <  0)  {  emptyRange  =  true;  }  if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  }  else  {  return  createCopy(startIndex,  endIndex);  }  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	944	944	1	add	        endIndex    =    getIndex(start);    endIndex  =  getIndex(start);	  	compilable	  [FE]  AssertionFailedError	1178	1
6724	[BUG]  [BUGGY]      endIndex  =  getIndex(start);  endIndex  =  getIndex(start);  [FE]  AssertionFailedError  [CONTEXT]    startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }    [BUGGY]      endIndex  =  getIndex(start);  endIndex  =  getIndex(start);  [BUGGY]    if  (endIndex  <  0)  {  emptyRange  =  true;  }  if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  }  else  {  return  createCopy(startIndex,  endIndex);  }  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	944	944	1	replace	        endIndex    =    getIndex(start);    endIndex  =  getIndex(start);	  	compilable	  [FE]  AssertionFailedError	1178	1
6746	[BUG]  [BUGGY]  int  startIndex  =  indexOf('n',  endIndex);  [CE]  variable  startIndex  is  already  defined  in  method  createCopy(RegularTimePeriod,RegularTimePeriod)  [CONTEXT]    if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  }  else  {    [BUGGY]  int  startIndex  =  indexOf('n',  endIndex);  [BUGGY]    return  createCopy(startIndex,  endIndex);  }  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	953	953	1	replace	int  startIndex  =  indexOf('n',  endIndex);	      int    startIndex    =    indexOf('n',    startIndex);    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  createCopy(RegularTimePeriod,RegularTimePeriod)	1395	None
6793	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]    }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  removeAgedItems(false);//  remove  old  items  if  necessary,  but      [BUGGY]  if(added)  {  [BUGGY]    fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	545	545	1	add	if(added)  {	  if(notify)    }    	compilable	  [FE]  IllegalArgumentException	1586	1
6794	[BUG]  [BUGGY]  if(added)  {  [FE]  IllegalArgumentException  [CONTEXT]    }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  removeAgedItems(false);//  remove  old  items  if  necessary,  but      [BUGGY]  if(added)  {  [BUGGY]    fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	545	545	1	replace	if(added)  {	  if(notify)    }    	compilable	  [FE]  IllegalArgumentException	1586	1
6818	[BUG]  [BUGGY]  this.data  =  new  java.util.ArrayList(timePeriodClass);  [CE]  no  suitable  constructor  found  for  ArrayList(Class)  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;    [BUGGY]  this.data  =  new  java.util.ArrayList(timePeriodClass);  [BUGGY]    this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	176	176	1	replace	this.data  =  new  java.util.ArrayList(timePeriodClass);	      this.data    =    new    java.util.ArrayList();    	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayList(Class)	3003	None
6866	[BUG]  [BUGGY]  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  &&  start  &&  end  %  2  ==  [CE]  illegal  start  of  expression  [CONTEXT]    int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period    [BUGGY]  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  &&  start  &&  end  %  2  ==  [BUGGY]    }  if  (endIndex  <  0)  {  emptyRange  =  true;  }  if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  }  else  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	942	943	1	replace	endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  &&  start  &&  end  %  2  ==	  endIndex    =    endIndex    -    1;//    so    this    is    last    item    BEFORE    end    &&    start    }    	non-compiled	[CE]  illegal  start  of  expression	5162	None
6890	[BUG]  [BUGGY]  while(item.getPeriod()  ==  null)  {  this.data.add(item);  [CE]  illegal  start  of  expression  [CONTEXT]    b.append(   "You  are  trying  to  add  data  where  the  time  period  class     ");  b.append(   "is     ");  b.append(item.getPeriod().getClass().getName());  b.append(   ",  but  the  TimeSeries  is  expecting  an  instance  of     ");  b.append(this.timePeriodClass.getName());  b.append(   ".   ");  throw  new  SeriesException(b.toString());  }      [BUGGY]  while(item.getPeriod()  ==  null)  {  this.data.add(item);  [BUGGY]    boolean  added  =  false;  int  count  =  getItemCount();  if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  added  =  true;  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	506	506	1	replace	while(item.getPeriod()  ==  null)  {  this.data.add(item);	      while(item.getPeriod()!=    null)    {    this.data.add(item);    	non-compiled	[CE]  illegal  start  of  expression	5281	None
6913	[BUG]  [BUGGY]  Class  this.timePeriodClass  =  item.getTimePeriod();  [CE]  not  a  statement  [CONTEXT]    public  void  add(TimeSeriesDataItem  item,  boolean  notify)  {  if  (item  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'item'  argument.   ");  }    [BUGGY]  Class  this.timePeriodClass  =  item.getTimePeriod();  [BUGGY]    if  (!item.getPeriod().getClass().equals(this.timePeriodClass))  {  StringBuffer  b  =  new  StringBuffer();  b.append(   "You  are  trying  to  add  data  where  the  time  period  class     ");  b.append(   "is     ");  b.append(item.getPeriod().getClass().getName());  b.append(   ",  but  the  TimeSeries  is  expecting  an  instance  of     ");  b.append(this.timePeriodClass.getName());  b.append(   ".   ");  throw  new  SeriesException(b.toString());  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	494	494	1	replace	Class  this.timePeriodClass  =  item.getTimePeriod();	      Class    timePeriodClass    =    item.getTimePeriod();    	non-compiled	[CE]  not  a  statement	2331	None
6961	[BUG]  [BUGGY]      int  count  =  getItemCount();  int  count  =  getItemCount();  [CE]  variable  count  is  already  defined  in  method  removeAgedItems(boolean)  [CONTEXT]    public  void  removeAgedItems(boolean  notify)  {      [BUGGY]      int  count  =  getItemCount();  int  count  =  getItemCount();  [BUGGY]    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())  >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	740	740	1	replace	        int    count    =    getItemCount();    int  count  =  getItemCount();	  	non-compiled	[CE]  variable  count  is  already  defined  in  method  removeAgedItems(boolean)	1263	None
6962	[BUG]  [BUGGY]      int  count  =  getItemCount();  int  count  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  [CE]  variable  count  is  already  defined  in  method  removeAgedItems(boolean)  [CONTEXT]    public  void  removeAgedItems(boolean  notify)  {      [BUGGY]      int  count  =  getItemCount();  int  count  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  [BUGGY]    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())  >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	740	740	1	replace	        int    count    =    getItemCount();    int  count  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();	  	non-compiled	[CE]  variable  count  is  already  defined  in  method  removeAgedItems(boolean)	1263	None
6963	[BUG]  [BUGGY]      int  count  =  getItemCount();  int  count  =  getTimePeriod(0).getSerialIndex();  [CE]  variable  count  is  already  defined  in  method  removeAgedItems(boolean)  [CONTEXT]    public  void  removeAgedItems(boolean  notify)  {      [BUGGY]      int  count  =  getItemCount();  int  count  =  getTimePeriod(0).getSerialIndex();  [BUGGY]    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())  >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	740	740	1	replace	        int    count    =    getItemCount();    int  count  =  getTimePeriod(0).getSerialIndex();	  	non-compiled	[CE]  variable  count  is  already  defined  in  method  removeAgedItems(boolean)	1263	None
6985	[BUG]  [BUGGY]  copy.data.add(startIndex);  [CE]  cannot  find  symbol  startIndex  [CONTEXT]    public  void  add(RegularTimePeriod  period,  double  value,  boolean  notify)  {      [BUGGY]  copy.data.add(startIndex);  [BUGGY]    TimeSeriesDataItem  item  =  new  TimeSeriesDataItem(period,  value);  add(item,  notify);  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  double  value  boolean  notify  [VARIABLES]  boolean  notify  double  value  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.2581988897471611	574	574	1	replace	copy.data.add(startIndex);	      double    value    =    Double.valueOf(period.getValue(),    notify);    	non-compiled	[CE]  cannot  find  symbol  startIndex	2882	None
6986	[BUG]  [BUGGY]  copy.data.add(this);  [CE]  package  copy  does  not  exist  [CONTEXT]    public  void  add(RegularTimePeriod  period,  double  value,  boolean  notify)  {      [BUGGY]  copy.data.add(this);  [BUGGY]    TimeSeriesDataItem  item  =  new  TimeSeriesDataItem(period,  value);  add(item,  notify);  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  double  value  boolean  notify  [VARIABLES]  boolean  notify  double  value  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.2581988897471611	574	574	1	replace	copy.data.add(this);	      double    value    =    Double.valueOf(period.getValue(),    notify);    	non-compiled	[CE]  package  copy  does  not  exist	2882	None
7033	[BUG]  [BUGGY]  fireSeriesChanged(item,  notify);  [CE]  method  fireSeriesChanged  in  class  Series  cannot  be  applied  to  given  types;  [CONTEXT]    if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  removeAgedItems(false);//  remove  old  items  if  necessary,  but    if  (notify)  {    [BUGGY]  fireSeriesChanged(item,  notify);  [BUGGY]    }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	546	546	1	replace	fireSeriesChanged(item,  notify);	  fireSeriesChanged(item);    	non-compiled	[CE]  method  fireSeriesChanged  in  class  Series  cannot  be  applied  to  given  types;	2642	None
7034	[BUG]  [BUGGY]  fireSeriesChanged(item,  this.data);  [CE]  method  fireSeriesChanged  in  class  Series  cannot  be  applied  to  given  types;  [CONTEXT]    if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  removeAgedItems(false);//  remove  old  items  if  necessary,  but    if  (notify)  {    [BUGGY]  fireSeriesChanged(item,  this.data);  [BUGGY]    }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	546	546	1	replace	fireSeriesChanged(item,  this.data);	  fireSeriesChanged(item);    	non-compiled	[CE]  method  fireSeriesChanged  in  class  Series  cannot  be  applied  to  given  types;	2642	None
7058	[BUG]  [BUGGY]  update(period,  value,  true);  [CE]  no  suitable  method  found  for  update(RegularTimePeriod,Number,boolean)  [CONTEXT]    public  void  add(RegularTimePeriod  period,  Number  value)  {      [BUGGY]  update(period,  value,  true);  [BUGGY]    }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  Number  value  [VARIABLES]  boolean  Number  value  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	588	588	1	replace	update(period,  value,  true);	  add(period,    value,    false);    	non-compiled	[CE]  no  suitable  method  found  for  update(RegularTimePeriod,Number,boolean)	794	None
7081	[BUG]  [BUGGY]      long  last  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  long  last  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  [CE]  variable  last  is  already  defined  in  method  removeAgedItems(boolean)  [CONTEXT]    public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {    [BUGGY]      long  last  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  long  last  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  [BUGGY]    long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())  >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	741	741	1	replace	        long    last    =    getTimePeriod(getItemCount()    -    1).getSerialIndex();    long  last  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();	  	non-compiled	[CE]  variable  last  is  already  defined  in  method  removeAgedItems(boolean)	3481	None
7082	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]    public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {    [BUGGY]      long  last  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  long  first  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  [BUGGY]    long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())  >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	741	741	1	add	        long    last    =    getTimePeriod(getItemCount()    -    1).getSerialIndex();    long  first  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();	  	compilable	  [FE]  IllegalArgumentException	3481	1
7083	[BUG]  [BUGGY]      long  last  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  long  first  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  [FE]  IllegalArgumentException  [CONTEXT]    public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {    [BUGGY]      long  last  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  long  first  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  [BUGGY]    long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())  >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	741	741	1	replace	        long    last    =    getTimePeriod(getItemCount()    -    1).getSerialIndex();    long  first  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();	  	compilable	  [FE]  IllegalArgumentException	3481	1
7083	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]    public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {    [BUGGY]      long  last  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  long  longest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  [BUGGY]    long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())  >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	741	741	1	add	        long    last    =    getTimePeriod(getItemCount()    -    1).getSerialIndex();    long  longest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();	  	compilable	  [FE]  IllegalArgumentException	3481	1
7084	[BUG]  [BUGGY]      long  last  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  long  longest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  [FE]  IllegalArgumentException  [CONTEXT]    public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {    [BUGGY]      long  last  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  long  longest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  [BUGGY]    long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())  >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	741	741	1	replace	        long    last    =    getTimePeriod(getItemCount()    -    1).getSerialIndex();    long  longest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();	  	compilable	  [FE]  IllegalArgumentException	3481	1
7129	[BUG]  [BUGGY]  if(period  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'period'  argument.   ");  }  [CE]  illegal  start  of  type  [CONTEXT]    public  int  getIndex(RegularTimePeriod  period)  {    [BUGGY]  if(period  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'period'  argument.   ");  }  [BUGGY]    if  (period  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'period'  argument.   ");  }  TimeSeriesDataItem  dummy  =  new  TimeSeriesDataItem(  period,  Integer.MIN_VALUE);  return  Collections.binarySearch(this.data,  dummy);  }  [CLASS]  TimeSeries  [METHOD]  getIndex  [RETURN_TYPE]  int  RegularTimePeriod  period  [VARIABLES]  boolean  TimeSeriesDataItem  dummy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.3333333333333333	430	430	1	replace	if(period  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'period'  argument.   ");  }	      int    count    =    this.data.size();    	non-compiled	[CE]  illegal  start  of  type	6603	None
7154	[BUG]  [BUGGY]  while(this.data  ==  null)  {  this.data  =  getDataItemCount();  [CE]  illegal  start  of  expression  [CONTEXT]    public  int  getItemCount()  {    [BUGGY]  while(this.data  ==  null)  {  this.data  =  getDataItemCount();  [BUGGY]    return  this.data.size();  }  [CLASS]  TimeSeries  [METHOD]  getItemCount  [RETURN_TYPE]  int  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	240	240	1	replace	while(this.data  ==  null)  {  this.data  =  getDataItemCount();	      while(this.data!=    null)    {    this.data    =    getDataItemCount();    	non-compiled	[CE]  illegal  start  of  expression	1706	None
7178	[BUG]  [BUGGY]  &&((  last  -  getTimePeriod(0).getSerialIndex())>  this.maximumItemAge))  {  this.data.remove(0);  [CE]  cannot  find  symbol  last  [CONTEXT]    public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())    [BUGGY]  &&((  last  -  getTimePeriod(0).getSerialIndex())>  this.maximumItemAge))  {  this.data.remove(0);  [BUGGY]    >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	744	744	1	replace	&&((  last  -  getTimePeriod(0).getSerialIndex())>  this.maximumItemAge))  {  this.data.remove(0);	      &&((    latest    -    getTimePeriod(0).getSerialIndex())>    this.maximumItemAge))    {    this.data.remove(0);    	non-compiled	[CE]  cannot  find  symbol  last	577	None
7202	[BUG]  [BUGGY]  this.minimumItemAge  =  getMaximumItemAge();  [CE]  cannot  find  symbol  minimumItemAge  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;    [BUGGY]  this.minimumItemAge  =  getMaximumItemAge();  [BUGGY]    this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	178	178	1	replace	this.minimumItemAge  =  getMaximumItemAge();	      this.maximumItemCount    =    getMaximumItemCount();    	non-compiled	[CE]  cannot  find  symbol  minimumItemAge	650	None
7250	[BUG]  [BUGGY]  while(item!=  null  &&  item.isLocal())  {  add(item,  notify);  [CE]  illegal  start  of  expression  [CONTEXT]    public  void  add(RegularTimePeriod  period,  Number  value,  boolean  notify)  {  TimeSeriesDataItem  item  =  new  TimeSeriesDataItem(period,  value);  add(item,  notify);    [BUGGY]  while(item!=  null  &&  item.isLocal())  {  add(item,  notify);  [BUGGY]    }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  Number  value  boolean  notify  [VARIABLES]  boolean  notify  Number  value  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	604	604	1	replace	while(item!=  null  &&  item.isLocal())  {  add(item,  notify);	      while(item!=    null    &&    item.isLocal())    {    add(item);    	non-compiled	[CE]  illegal  start  of  expression	2139	None
7322	[BUG]  [BUGGY]  throw  new  SeriesException( "Period  does  not  support  field  ' "  +  item.getName()  + "' ");  [CE]  illegal  start  of  expression  [CONTEXT]    public  void  add(RegularTimePeriod  period,  double  value,  boolean  notify)  {  TimeSeriesDataItem  item  =  new  TimeSeriesDataItem(period,  value);  add(item,  notify);    [BUGGY]  throw  new  SeriesException( "Period  does  not  support  field  ' "  +  item.getName()  + "' ");  [BUGGY]      [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  double  value  boolean  notify  [VARIABLES]  boolean  notify  double  value  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.2581988897471611	576	576	1	replace	throw  new  SeriesException( "Period  does  not  support  field  ' "  +  item.getName()  + "' ");	  throw    new    SeriesException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	3122	None
7345	[BUG]  [BUGGY]  boolean  emptyRange  =  true;  boolean  emptyRange  =  true;  [CE]  variable  emptyRange  is  already  defined  in  method  createCopy(RegularTimePeriod,RegularTimePeriod)  [CONTEXT]    if  (start  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'start'  argument.   ");  }  if  (end  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'end'  argument.   ");  }  if  (start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException(     "Requires  start  on  or  before  end.   ");  }    [BUGGY]  boolean  emptyRange  =  true;  boolean  emptyRange  =  true;  [BUGGY]    int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	931	931	1	replace	boolean    emptyRange    =    true;    boolean  emptyRange  =  true;	  	non-compiled	[CE]  variable  emptyRange  is  already  defined  in  method  createCopy(RegularTimePeriod,RegularTimePeriod)	1634	None
7346	[BUG]  [BUGGY]  boolean  emptyRange  =  true;  boolean  emptyRange  =  false;  [CE]  variable  emptyRange  is  already  defined  in  method  createCopy(RegularTimePeriod,RegularTimePeriod)  [CONTEXT]    if  (start  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'start'  argument.   ");  }  if  (end  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'end'  argument.   ");  }  if  (start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException(     "Requires  start  on  or  before  end.   ");  }    [BUGGY]  boolean  emptyRange  =  true;  boolean  emptyRange  =  false;  [BUGGY]    int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	931	931	1	replace	boolean    emptyRange    =    true;    boolean  emptyRange  =  false;	  	non-compiled	[CE]  variable  emptyRange  is  already  defined  in  method  createCopy(RegularTimePeriod,RegularTimePeriod)	1634	None
7347	[BUG]  [BUGGY]  boolean  emptyRange  =  true;  if(start.compareTo(end)>  0)  {  boolean  emptyRange  =  true;  }  [CE]  variable  emptyRange  is  already  defined  in  method  createCopy(RegularTimePeriod,RegularTimePeriod)  [CONTEXT]    if  (start  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'start'  argument.   ");  }  if  (end  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'end'  argument.   ");  }  if  (start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException(     "Requires  start  on  or  before  end.   ");  }    [BUGGY]  boolean  emptyRange  =  true;  if(start.compareTo(end)>  0)  {  boolean  emptyRange  =  true;  }  [BUGGY]    int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	931	931	1	replace	boolean    emptyRange    =    true;    if(start.compareTo(end)>  0)  {  boolean  emptyRange  =  true;  }	  	non-compiled	[CE]  variable  emptyRange  is  already  defined  in  method  createCopy(RegularTimePeriod,RegularTimePeriod)	1634	None
7370	[BUG]  [BUGGY]  if(startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if(startIndex  ==  this.data.size())  }  emptyRange  =  true;  }  [CE]  illegal  start  of  expression  [CONTEXT]    }  if  (end  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'end'  argument.   ");  }  if  (start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException(     "Requires  start  on  or  before  end.   ");  }  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);    [BUGGY]  if(startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if(startIndex  ==  this.data.size())  }  emptyRange  =  true;  }  [BUGGY]    if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	933	933	1	replace	if(startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if(startIndex  ==  this.data.size())  }  emptyRange  =  true;  }	      if(startIndex    <    0)    {    startIndex    =    -(startIndex    +    1);    if(startIndex    ==    this.data.size())    {    emptyRange    =    true;    }    	non-compiled	[CE]  illegal  start  of  expression	1861	None
7394	[BUG]  [BUGGY]  add(period);  [CE]  illegal  start  of  expression  [CONTEXT]    public  void  add(RegularTimePeriod  period,  Number  value)  {  add(period,  value,  true);    [BUGGY]  add(period);  [BUGGY]    }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  Number  value  [VARIABLES]  boolean  Number  value  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	589	589	1	replace	add(period);	      fireSeriesChanged();    	non-compiled	[CE]  illegal  start  of  expression	506	None
7418	[BUG]  [BUGGY]  fireSeriesChanged(item.getPeriod());  [CE]  class  or  interface  expected  [CONTEXT]    }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  removeAgedItems(false);//  remove  old  items  if  necessary,  but      [BUGGY]  fireSeriesChanged(item.getPeriod());  [BUGGY]    if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	545	545	1	replace	fireSeriesChanged(item.getPeriod());	      fireSeriesChanged();    	non-compiled	[CE]  class  or  interface  expected	2378	None
7441	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(   "Requires  end  <=  start.   ");  throw  new  IllegalArgumentException( "Requires  end  >=  start.   ");  [CE]  unreachable  statement  [CONTEXT]    throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(   "Requires  start  >=  0.   ");  }  if  (end  <  start)  {    [BUGGY]  throw  new  IllegalArgumentException(   "Requires  end  <=  start.   ");  throw  new  IllegalArgumentException( "Requires  end  >=  start.   ");  [BUGGY]    }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	883	883	1	replace	throw    new    IllegalArgumentException(   "Requires    end    <=    start.   ");    throw  new  IllegalArgumentException( "Requires  end  >=  start.   ");	  	non-compiled	[CE]  unreachable  statement	782	None
7442	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(   "Requires  end  <=  start.   ");  throw  new  IllegalArgumentException( "Requires  end  <=  start.   ");  [CE]  unreachable  statement  [CONTEXT]    throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(   "Requires  start  >=  0.   ");  }  if  (end  <  start)  {    [BUGGY]  throw  new  IllegalArgumentException(   "Requires  end  <=  start.   ");  throw  new  IllegalArgumentException( "Requires  end  <=  start.   ");  [BUGGY]    }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	883	883	1	replace	throw    new    IllegalArgumentException(   "Requires    end    <=    start.   ");    throw  new  IllegalArgumentException( "Requires  end  <=  start.   ");	  	non-compiled	[CE]  unreachable  statement	782	None
7466	[BUG]  [BUGGY]  item.setValue(value);  notifyListeners(new  DataItem(period,  value,  notify));  [CE]  illegal  start  of  expression  [CONTEXT]    public  void  add(RegularTimePeriod  period,  Number  value,  boolean  notify)  {  TimeSeriesDataItem  item  =  new  TimeSeriesDataItem(period,  value);  add(item,  notify);    [BUGGY]  item.setValue(value);  notifyListeners(new  DataItem(period,  value,  notify));  [BUGGY]    }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  Number  value  boolean  notify  [VARIABLES]  boolean  notify  Number  value  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	604	604	1	replace	item.setValue(value);  notifyListeners(new  DataItem(period,  value,  notify));	      item.setValue(value);    fireSeriesChanged();    	non-compiled	[CE]  illegal  start  of  expression	1563	None
7490	[BUG]  [BUGGY]  updateSeries(name,  timePeriodClass);  [CE]  illegal  start  of  expression  [CONTEXT]    public  TimeSeries(Comparable  name,  Class  timePeriodClass)  {  this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  timePeriodClass);    [BUGGY]  updateSeries(name,  timePeriodClass);  [BUGGY]      [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	157	157	1	replace	updateSeries(name,  timePeriodClass);	  fireSeriesChanged();    	non-compiled	[CE]  illegal  start  of  expression	1993	None
7537	[BUG]  [BUGGY]  this.data.add(period,  new  Double(value),  notify  =  true;  [CE]  ')'  expected  [CONTEXT]    }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  emptyRange  =  true;  }    [BUGGY]  this.data.add(period,  new  Double(value),  notify  =  true;  [BUGGY]    TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  }  else  {  return  createCopy(startIndex,  endIndex);  }  }  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	947	947	1	replace	this.data.add(period,  new  Double(value),  notify  =  true;	  if(!emptyRange)    {    	non-compiled	[CE]  ')'  expected	2283	None
7538	[BUG]  [BUGGY]  this.data.add(period,  new  Double(value));  notify  =  true;  [CE]  illegal  start  of  type  [CONTEXT]    }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  emptyRange  =  true;  }    [BUGGY]  this.data.add(period,  new  Double(value));  notify  =  true;  [BUGGY]    TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  }  else  {  return  createCopy(startIndex,  endIndex);  }  }  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	947	947	1	replace	this.data.add(period,  new  Double(value));  notify  =  true;	  if(!emptyRange)    {    	non-compiled	[CE]  illegal  start  of  type	2283	None
7585	[BUG]  [BUGGY]  TimeSeriesDataItem  item  =  new  TimeSeriesDataItem(period,  value,  notify,  timePeriodClass);  [CE]  no  suitable  constructor  found  for  TimeSeriesDataItem(RegularTimePeriod,Number,boolean,Class)  [CONTEXT]    public  void  add(RegularTimePeriod  period,  Number  value,  boolean  notify)  {      [BUGGY]  TimeSeriesDataItem  item  =  new  TimeSeriesDataItem(period,  value,  notify,  timePeriodClass);  [BUGGY]    add(item,  notify);  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  Number  value  boolean  notify  [VARIABLES]  boolean  notify  Number  value  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	602	602	1	replace	TimeSeriesDataItem  item  =  new  TimeSeriesDataItem(period,  value,  notify,  timePeriodClass);	  TimeSeriesDataItem    item    =    new    TimeSeriesDataItem(period,    value,    notify);    	non-compiled	[CE]  no  suitable  constructor  found  for  TimeSeriesDataItem(RegularTimePeriod,Number,boolean,Class)	2833	None
7610	[BUG]  [BUGGY]  if(startIndex  <  0)  {  startIndex  =  getIndex(startIndex);  if(startIndex  ==  this.data.size())  }  emptyRange  =  true;  }  [CE]  illegal  start  of  expression  [CONTEXT]    }  if  (end  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'end'  argument.   ");  }  if  (start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException(     "Requires  start  on  or  before  end.   ");  }  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);    [BUGGY]  if(startIndex  <  0)  {  startIndex  =  getIndex(startIndex);  if(startIndex  ==  this.data.size())  }  emptyRange  =  true;  }  [BUGGY]    if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	933	933	1	replace	if(startIndex  <  0)  {  startIndex  =  getIndex(startIndex);  if(startIndex  ==  this.data.size())  }  emptyRange  =  true;  }	      if(startIndex    <    0)    {    startIndex    =    getIndex(startIndex);    if(startIndex    ==    this.data.size())    {    emptyRange    =    true;    }    	non-compiled	[CE]  illegal  start  of  expression	1863	None
7633	[BUG]  [BUGGY]  if(startIndex  <  0)  {  if(startIndex  >  end)  {  startIndex  =  -(startIndex  +  1);  }  [CE]  bad  operand  types  for  binary  operator  '>'  [CONTEXT]    throw  new  IllegalArgumentException(   "Null  'end'  argument.   ");  }  if  (start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException(     "Requires  start  on  or  before  end.   ");  }  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);    [BUGGY]  if(startIndex  <  0)  {  if(startIndex  >  end)  {  startIndex  =  -(startIndex  +  1);  }  [BUGGY]    emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  emptyRange  =  true;  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	935	935	1	replace	if(startIndex  <  0)  {  if(startIndex  >  end)  {  startIndex  =  -(startIndex  +  1);  }	      	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>'	1803	None
7634	[BUG]  [BUGGY]  if(startIndex  <  0)  {  if(startIndex  >  end)  {  startIndex  =  -(startIndex  -  1);  }  [CE]  bad  operand  types  for  binary  operator  '>'  [CONTEXT]    throw  new  IllegalArgumentException(   "Null  'end'  argument.   ");  }  if  (start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException(     "Requires  start  on  or  before  end.   ");  }  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);    [BUGGY]  if(startIndex  <  0)  {  if(startIndex  >  end)  {  startIndex  =  -(startIndex  -  1);  }  [BUGGY]    emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  emptyRange  =  true;  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	935	935	1	replace	if(startIndex  <  0)  {  if(startIndex  >  end)  {  startIndex  =  -(startIndex  -  1);  }	      	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>'	1803	None
7658	[BUG]  [BUGGY]  if(!notify)  ||  item.getPeriodType()  ==  DEFAULT_RANGE_DESCRIPTION)  {  [CE]  illegal  start  of  expression  [CONTEXT]    }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  removeAgedItems(false);//  remove  old  items  if  necessary,  but      [BUGGY]  if(!notify)  ||  item.getPeriodType()  ==  DEFAULT_RANGE_DESCRIPTION)  {  [BUGGY]    fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	545	545	1	replace	if(!notify)  ||  item.getPeriodType()  ==  DEFAULT_RANGE_DESCRIPTION)  {	  if(!notify)    {    	non-compiled	[CE]  illegal  start  of  expression	2103	None
7682	[BUG]  [BUGGY]  long  last  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  [CE]  cannot  find  symbol  removed  [CONTEXT]    public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();    [BUGGY]  long  last  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  [BUGGY]    boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())  >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	742	742	1	replace	long  last  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();	      long    latest    =    getTimePeriod(getItemCount()    -    1).getSerialIndex();    	non-compiled	[CE]  cannot  find  symbol  removed	1898	None
7729	[BUG]  [BUGGY]  this.data  =  new  ArrayList  <  Comparable>(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION);  [CE]  generics  are  not  supported  in  -source  1.4  [CONTEXT]    public  TimeSeries(Comparable  name,  Class  timePeriodClass)  {  this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  timePeriodClass);    [BUGGY]  this.data  =  new  ArrayList  <  Comparable>(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION);  [BUGGY]    }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	157	157	1	replace	this.data  =  new  ArrayList  <  Comparable>(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION);	      this.data    =    new    ArrayList    <    Comparable>(timePeriodClass,    DEFAULT_DOMAIN_DESCRIPTION,    DEFAULT_RANGE_DESCRIPTION);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	1923	None
7754	[BUG]  [BUGGY]  int  startIndex  =  getIndex(endIndex);  [CE]  variable  startIndex  is  already  defined  in  method  createCopy(RegularTimePeriod,RegularTimePeriod)  [CONTEXT]    if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  }  else  {    [BUGGY]  int  startIndex  =  getIndex(endIndex);  [BUGGY]    return  createCopy(startIndex,  endIndex);  }  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	953	953	1	replace	int  startIndex  =  getIndex(endIndex);	      int    startIndex    =    getIndex(startIndex);    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  createCopy(RegularTimePeriod,RegularTimePeriod)	1393	None
7777	[BUG]  [BUGGY]  data.add(period,  value,  false);  [CE]  illegal  start  of  expression  [CONTEXT]    public  void  add(RegularTimePeriod  period,  double  value)  {  add(period,  value,  true);    [BUGGY]  data.add(period,  value,  false);  [BUGGY]    }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  double  value  [VARIABLES]  boolean  double  value  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.2581988897471611	562	562	1	replace	data.add(period,  value,  false);	      data.add(period,    value);    	non-compiled	[CE]  illegal  start  of  expression	2787	None
7778	[BUG]  [BUGGY]  data.add(period,  value,  true);  [CE]  illegal  start  of  expression  [CONTEXT]    public  void  add(RegularTimePeriod  period,  double  value)  {  add(period,  value,  true);    [BUGGY]  data.add(period,  value,  true);  [BUGGY]    }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  double  value  [VARIABLES]  boolean  double  value  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.2581988897471611	562	562	1	replace	data.add(period,  value,  true);	      data.add(period,    value);    	non-compiled	[CE]  illegal  start  of  expression	2787	None
7801	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;    [BUGGY]      this.domain  =  domain;  this.domain  =  domain;  [BUGGY]    this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	176	176	1	add	        this.domain    =    domain;    this.domain  =  domain;	  	compilable	  [FE]  IllegalArgumentException	2473	1
7802	[BUG]  [BUGGY]      this.domain  =  domain;  this.domain  =  domain;  [FE]  IllegalArgumentException  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;    [BUGGY]      this.domain  =  domain;  this.domain  =  domain;  [BUGGY]    this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	176	176	1	replace	        this.domain    =    domain;    this.domain  =  domain;	  	compilable	  [FE]  IllegalArgumentException	2473	1
7802	[BUG]  [BUGGY]      this.domain  =  domain;  this.domino  =  domain;  [CE]  cannot  find  symbol  domino  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;    [BUGGY]      this.domain  =  domain;  this.domino  =  domain;  [BUGGY]    this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	176	176	1	replace	        this.domain    =    domain;    this.domino  =  domain;	  	non-compiled	[CE]  cannot  find  symbol  domino	2473	None
7803	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;    [BUGGY]      this.domain  =  domain;  this.range  =  range;  [BUGGY]    this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	176	176	1	add	        this.domain    =    domain;    this.range  =  range;	  	compilable	  [FE]  IllegalArgumentException	2473	1
7804	[BUG]  [BUGGY]      this.domain  =  domain;  this.range  =  range;  [FE]  IllegalArgumentException  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;    [BUGGY]      this.domain  =  domain;  this.range  =  range;  [BUGGY]    this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	176	176	1	replace	        this.domain    =    domain;    this.range  =  range;	  	compilable	  [FE]  IllegalArgumentException	2473	1
7826	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]    if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);    [BUGGY]  added  =  notify;  [BUGGY]    }  else  {  int  index  =  Collections.binarySearch(this.data,  item);  if  (index  <  0)  {  this.data.add(-index  -  1,  item);  added  =  true;  }  else  {  StringBuffer  b  =  new  StringBuffer();  b.append(   "You  are  attempting  to  add  an  observation  for     ");  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	516	516	1	add	added  =  notify;	  added    =    false;    	compilable	  [FE]  IllegalArgumentException	1875	1
7827	[BUG]  [BUGGY]  added  =  notify;  [FE]  IllegalArgumentException  [CONTEXT]    if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);    [BUGGY]  added  =  notify;  [BUGGY]    }  else  {  int  index  =  Collections.binarySearch(this.data,  item);  if  (index  <  0)  {  this.data.add(-index  -  1,  item);  added  =  true;  }  else  {  StringBuffer  b  =  new  StringBuffer();  b.append(   "You  are  attempting  to  add  an  observation  for     ");  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	516	516	1	replace	added  =  notify;	  added    =    false;    	compilable	  [FE]  IllegalArgumentException	1875	1
7849	[BUG]  [BUGGY]  this.data  =(List)this.data.newArrayList();  [CE]  cannot  find  symbol  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;    [BUGGY]  this.data  =(List)this.data.newArrayList();  [BUGGY]    this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	178	178	1	replace	this.data  =(List)this.data.newArrayList();	      this.data    =(List)ArrayList.newArrayList();    	non-compiled	[CE]  cannot  find  symbol	6782	None
7850	[BUG]  [BUGGY]  this.data  =(List)null.newArrayList();  [CE]  <null>  cannot  be  dereferenced  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;    [BUGGY]  this.data  =(List)null.newArrayList();  [BUGGY]    this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	178	178	1	replace	this.data  =(List)null.newArrayList();	      this.data    =(List)ArrayList.newArrayList();    	non-compiled	[CE]  <null>  cannot  be  dereferenced	6782	None
7873	[BUG]  [BUGGY]  [Delete]  [CE]  illegal  start  of  expression  [CONTEXT]    throws  CloneNotSupportedException  {  if  (start  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'start'  argument.   ");  }    [BUGGY]  [Delete]  [BUGGY]    if  (end  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'end'  argument.   ");  }  if  (start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException(     "Requires  start  on  or  before  end.   ");  }  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	924	924	1	replace	[Delete]	      if(start.compareTo(start)>    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	6664	None
7898	[BUG]  [BUGGY]  while(this.data!=  null)  {  this.data.add(item);  [CE]  illegal  start  of  expression  [CONTEXT]    b.append(   "You  are  trying  to  add  data  where  the  time  period  class     ");  b.append(   "is     ");  b.append(item.getPeriod().getClass().getName());  b.append(   ",  but  the  TimeSeries  is  expecting  an  instance  of     ");  b.append(this.timePeriodClass.getName());  b.append(   ".   ");  throw  new  SeriesException(b.toString());  }      [BUGGY]  while(this.data!=  null)  {  this.data.add(item);  [BUGGY]    boolean  added  =  false;  int  count  =  getItemCount();  if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  added  =  true;  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	506	506	1	replace	while(this.data!=  null)  {  this.data.add(item);	      while(item!=    null)    {    this.data.add(item);    	non-compiled	[CE]  illegal  start  of  expression	339	None
7922	[BUG]  [BUGGY]  this.data  =  createDataItem(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  Date.class);  [CE]  illegal  start  of  expression  [CONTEXT]    public  TimeSeries(Comparable  name)  {  this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  Day.class);    [BUGGY]  this.data  =  createDataItem(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  Date.class);  [BUGGY]    }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Comparable)  Comparable  name  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.4082482904638631	144	144	1	replace	this.data  =  createDataItem(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  Date.class);	      this.data    =    createDataItem(name,    DEFAULT_DOMAIN_DESCRIPTION,    DEFAULT_RANGE_DESCRIPTION,    Day.class);    	non-compiled	[CE]  illegal  start  of  expression	1657	None
7945	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]    throws  CloneNotSupportedException  {  if  (start  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'start'  argument.   ");  }    [BUGGY]      if(start.compareTo(start)  >  0)  {  throw  new  IllegalArgumentException(   "Requires  start  on  or  before  end.   ");  }  if(start.compareTo(start)  >  0)  {  throw  new  IllegalArgumentException( "Requires  start  on  or  before  end.   ");  }  [BUGGY]    if  (end  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'end'  argument.   ");  }  if  (start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException(     "Requires  start  on  or  before  end.   ");  }  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	924	924	1	add	        if(start.compareTo(start)    >    0)    {    throw    new    IllegalArgumentException(   "Requires    start    on    or    before    end.   ");    }    if(start.compareTo(start)  >  0)  {  throw  new  IllegalArgumentException( "Requires  start  on  or  before  end.   ");  }	  	compilable	  [FE]  IllegalArgumentException	867	1
7946	[BUG]  [BUGGY]      if(start.compareTo(start)  >  0)  {  throw  new  IllegalArgumentException(   "Requires  start  on  or  before  end.   ");  }  if(start.compareTo(start)  >  0)  {  throw  new  IllegalArgumentException( "Requires  start  on  or  before  end.   ");  }  [FE]  IllegalArgumentException  [CONTEXT]    throws  CloneNotSupportedException  {  if  (start  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'start'  argument.   ");  }    [BUGGY]      if(start.compareTo(start)  >  0)  {  throw  new  IllegalArgumentException(   "Requires  start  on  or  before  end.   ");  }  if(start.compareTo(start)  >  0)  {  throw  new  IllegalArgumentException( "Requires  start  on  or  before  end.   ");  }  [BUGGY]    if  (end  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'end'  argument.   ");  }  if  (start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException(     "Requires  start  on  or  before  end.   ");  }  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	924	924	1	replace	        if(start.compareTo(start)    >    0)    {    throw    new    IllegalArgumentException(   "Requires    start    on    or    before    end.   ");    }    if(start.compareTo(start)  >  0)  {  throw  new  IllegalArgumentException( "Requires  start  on  or  before  end.   ");  }	  	compilable	  [FE]  IllegalArgumentException	867	1
7969	[BUG]  [BUGGY]  if(!emptyRange)  {  if(!emptyRange)  {  [CE]  illegal  start  of  expression  [CONTEXT]    }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  emptyRange  =  true;  }    [BUGGY]  if(!emptyRange)  {  if(!emptyRange)  {  [BUGGY]    TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  }  else  {  return  createCopy(startIndex,  endIndex);  }  }  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	947	947	1	replace	if(!emptyRange)    {    if(!emptyRange)  {	  	non-compiled	[CE]  illegal  start  of  expression	2282	None
7970	[BUG]  [BUGGY]  if(!emptyRange)  {  if(!emptyRange)  }  [CE]  illegal  start  of  expression  [CONTEXT]    }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  emptyRange  =  true;  }    [BUGGY]  if(!emptyRange)  {  if(!emptyRange)  }  [BUGGY]    TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  }  else  {  return  createCopy(startIndex,  endIndex);  }  }  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	947	947	1	replace	if(!emptyRange)    {    if(!emptyRange)  }	  	non-compiled	[CE]  illegal  start  of  expression	2282	None
7971	[BUG]  [BUGGY]  if(!emptyRange)  {  if(!emptyRange)  >>  [CE]  illegal  start  of  expression  [CONTEXT]    }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  emptyRange  =  true;  }    [BUGGY]  if(!emptyRange)  {  if(!emptyRange)  >>  [BUGGY]    TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  }  else  {  return  createCopy(startIndex,  endIndex);  }  }  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	947	947	1	replace	if(!emptyRange)    {    if(!emptyRange)  >>	  	non-compiled	[CE]  illegal  start  of  expression	2282	None
7994	[BUG]  [BUGGY]  this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  0,  0);  [CE]  no  suitable  constructor  found  for  TimeSeries(Comparable,String,String,int,int)  [CONTEXT]    public  TimeSeries(Comparable  name)  {    [BUGGY]  this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  0,  0);  [BUGGY]    this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,    Day.class);  Day.class);  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Comparable)  Comparable  name  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.4082482904638631	142	143	1	replace	this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  0,  0);	      this(name,    DEFAULT_DOMAIN_DESCRIPTION,    DEFAULT_RANGE_DESCRIPTION,    0);    	non-compiled	[CE]  no  suitable  constructor  found  for  TimeSeries(Comparable,String,String,int,int)	722	None
8018	[BUG]  [BUGGY]  TimeSeriesDataItem  this  =(TimeSeriesDataItem)this.data.get(index).data;  [CE]  not  a  statement  [CONTEXT]    public  TimeSeriesDataItem  getDataItem(int  index)  {    [BUGGY]  TimeSeriesDataItem  this  =(TimeSeriesDataItem)this.data.get(index).data;  [BUGGY]    return  (TimeSeriesDataItem)  this.data.get(index);  }  [CLASS]  TimeSeries  [METHOD]  getDataItem  [RETURN_TYPE]  TimeSeriesDataItem  int  index  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  long  maximumItemAge  periods  serialVersionUID  int  count  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	341	341	1	replace	TimeSeriesDataItem  this  =(TimeSeriesDataItem)this.data.get(index).data;	      TimeSeriesDataItem    this    =(TimeSeriesDataItem)this.data.get(index);    	non-compiled	[CE]  not  a  statement	409	None
8041	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;  this.range  =  range;    [BUGGY]      this.maximumItemCount  =  0;  this.maximumItemCount  =  0;  [BUGGY]    this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	177	177	1	add	        this.maximumItemCount    =    0;    this.maximumItemCount  =  0;	  	compilable	  [FE]  IllegalArgumentException	2811	1
8042	[BUG]  [BUGGY]      this.maximumItemCount  =  0;  this.maximumItemCount  =  0;  [FE]  IllegalArgumentException  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;  this.range  =  range;    [BUGGY]      this.maximumItemCount  =  0;  this.maximumItemCount  =  0;  [BUGGY]    this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	177	177	1	replace	        this.maximumItemCount    =    0;    this.maximumItemCount  =  0;	  	compilable	  [FE]  IllegalArgumentException	2811	1
8042	[BUG]  [BUGGY]      this.maximumItemCount  =  0;  this.minimumItemCount  =  0;  [CE]  cannot  find  symbol  minimumItemCount  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;  this.range  =  range;    [BUGGY]      this.maximumItemCount  =  0;  this.minimumItemCount  =  0;  [BUGGY]    this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	177	177	1	replace	        this.maximumItemCount    =    0;    this.minimumItemCount  =  0;	  	non-compiled	[CE]  cannot  find  symbol  minimumItemCount	2811	None
8043	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;  this.range  =  range;    [BUGGY]      this.maximumItemCount  =  0;  this.maximumItemCount  =  1;  [BUGGY]    this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	177	177	1	add	        this.maximumItemCount    =    0;    this.maximumItemCount  =  1;	  	compilable	  [FE]  IllegalArgumentException	2811	1
8044	[BUG]  [BUGGY]      this.maximumItemCount  =  0;  this.maximumItemCount  =  1;  [FE]  IllegalArgumentException  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;  this.range  =  range;    [BUGGY]      this.maximumItemCount  =  0;  this.maximumItemCount  =  1;  [BUGGY]    this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	177	177	1	replace	        this.maximumItemCount    =    0;    this.maximumItemCount  =  1;	  	compilable	  [FE]  IllegalArgumentException	2811	1
8065	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]    throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }    [BUGGY]  removeAgedItems(true);//  remove  old  items  if  necessary,  but  //  don't  notify  anyone,  because  that  //  happens  next  anyway...  this.data.remove(0);  [BUGGY]      if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	542	544	1	add	removeAgedItems(true);//    remove    old    items    if    necessary,    but    //    don't    notify    anyone,    because    that    //    happens    next    anyway...    this.data.remove(0);	  	compilable	  [FE]  IllegalArgumentException	2233	1
8066	[BUG]  [BUGGY]  removeAgedItems(true);//  remove  old  items  if  necessary,  but  //  don't  notify  anyone,  because  that  //  happens  next  anyway...  this.data.remove(0);  [FE]  IllegalArgumentException  [CONTEXT]    throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }    [BUGGY]  removeAgedItems(true);//  remove  old  items  if  necessary,  but  //  don't  notify  anyone,  because  that  //  happens  next  anyway...  this.data.remove(0);  [BUGGY]      if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	542	544	1	replace	removeAgedItems(true);//    remove    old    items    if    necessary,    but    //    don't    notify    anyone,    because    that    //    happens    next    anyway...    this.data.remove(0);	  	compilable	  [FE]  IllegalArgumentException	2233	1
8066	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]    throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }    [BUGGY]  removeAgedItems(true);//  remove  old  items  if  necessary,  but  //  don't  notify  anyone,  because  that  //  happens  next  anyway...  this.data.remove(0);  removedAgedItems(false);  [BUGGY]      if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	542	544	1	add	removeAgedItems(true);//    remove    old    items    if    necessary,    but    //    don't    notify    anyone,    because    that    //    happens    next    anyway...    this.data.remove(0);  removedAgedItems(false);	  	compilable	  [FE]  IllegalArgumentException	2233	1
8067	[BUG]  [BUGGY]  removeAgedItems(true);//  remove  old  items  if  necessary,  but  //  don't  notify  anyone,  because  that  //  happens  next  anyway...  this.data.remove(0);  removedAgedItems(false);  [FE]  IllegalArgumentException  [CONTEXT]    throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }    [BUGGY]  removeAgedItems(true);//  remove  old  items  if  necessary,  but  //  don't  notify  anyone,  because  that  //  happens  next  anyway...  this.data.remove(0);  removedAgedItems(false);  [BUGGY]      if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	542	544	1	replace	removeAgedItems(true);//    remove    old    items    if    necessary,    but    //    don't    notify    anyone,    because    that    //    happens    next    anyway...    this.data.remove(0);  removedAgedItems(false);	  	compilable	  [FE]  IllegalArgumentException	2233	1
8067	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]    throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }    [BUGGY]  removeAgedItems(true);//  remove  old  items  if  necessary,  but  //  don't  notify  anyone,  because  that  //  happens  next  anyway...  removeAgedItems(false);  [BUGGY]      if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	542	544	1	add	removeAgedItems(true);//    remove    old    items    if    necessary,    but    //    don't    notify    anyone,    because    that    //    happens    next    anyway...    removeAgedItems(false);	  	compilable	  [FE]  IllegalArgumentException	2233	1
8068	[BUG]  [BUGGY]  removeAgedItems(true);//  remove  old  items  if  necessary,  but  //  don't  notify  anyone,  because  that  //  happens  next  anyway...  removeAgedItems(false);  [FE]  IllegalArgumentException  [CONTEXT]    throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }    [BUGGY]  removeAgedItems(true);//  remove  old  items  if  necessary,  but  //  don't  notify  anyone,  because  that  //  happens  next  anyway...  removeAgedItems(false);  [BUGGY]      if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	542	544	1	replace	removeAgedItems(true);//    remove    old    items    if    necessary,    but    //    don't    notify    anyone,    because    that    //    happens    next    anyway...    removeAgedItems(false);	  	compilable	  [FE]  IllegalArgumentException	2233	1
8090	[BUG]  [BUGGY]  while(item.getPeriod().compareTo(count)>  0)  }  this.data.add(item);  [CE]  illegal  start  of  expression  [CONTEXT]    b.append(this.timePeriodClass.getName());  b.append(   ".   ");  throw  new  SeriesException(b.toString());  }  boolean  added  =  false;  int  count  =  getItemCount();  if  (count  ==  0)  {  this.data.add(item);    [BUGGY]  while(item.getPeriod().compareTo(count)>  0)  }  this.data.add(item);  [BUGGY]    added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  added  =  true;  }  else  {  int  index  =  Collections.binarySearch(this.data,  item);  if  (index  <  0)  {  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	510	510	1	replace	while(item.getPeriod().compareTo(count)>  0)  }  this.data.add(item);	      while(item.getPeriod().compareTo(count)>    0)    {    this.data.add(item);    	non-compiled	[CE]  illegal  start  of  expression	3169	None
8233	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);    [BUGGY]  this.domain  =   "domain   ";  this.domain  =   "domain ";  [BUGGY]    this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	175	175	1	add	this.domain    =   "domain   ";    this.domain  =   "domain ";	  	compilable	  [FE]  IllegalArgumentException	2	1
8234	[BUG]  [BUGGY]  this.domain  =   "domain   ";  this.domain  =   "domain ";  [FE]  IllegalArgumentException  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);    [BUGGY]  this.domain  =   "domain   ";  this.domain  =   "domain ";  [BUGGY]    this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	175	175	1	replace	this.domain    =   "domain   ";    this.domain  =   "domain ";	  	compilable	  [FE]  IllegalArgumentException	2	1
8258	[BUG]  [BUGGY]  if(timePeriodClass  ==  null)  {  this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  timePeriodClass);  }  [CE]  no  suitable  constructor  found  for  Series()  [CONTEXT]    public  TimeSeries(Comparable  name,  Class  timePeriodClass)  {    [BUGGY]  if(timePeriodClass  ==  null)  {  this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  timePeriodClass);  }  [BUGGY]    this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,    timePeriodClass);  timePeriodClass);  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	155	156	1	replace	if(timePeriodClass  ==  null)  {  this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  timePeriodClass);  }	      this(name,    DEFAULT_DOMAIN_DESCRIPTION,    DEFAULT_RANGE_DESCRIPTION,    timePeriodClass);    	non-compiled	[CE]  no  suitable  constructor  found  for  Series()	289	None
8305	[BUG]  [BUGGY]  if(startIndex  >  end)  {  emptyRange  =  true;  }  [CE]  bad  operand  types  for  binary  operator  '>'  [CONTEXT]     "Requires  start  on  or  before  end.   ");  }  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }    [BUGGY]  if(startIndex  >  end)  {  emptyRange  =  true;  }  [BUGGY]    int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  emptyRange  =  true;  }  if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	939	939	1	replace	if(startIndex  >  end)  {  emptyRange  =  true;  }	      if(startIndex    <    this.data.size())    {    if(startIndex    >    end)    {    emptyRange    =    true;    }    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>'	4262	None
8306	[BUG]  [BUGGY]  if(endIndex  >  this.data.size())  {  if(startIndex  >  end)  {  emptyRange  =  true;  }  [CE]  illegal  start  of  expression  [CONTEXT]     "Requires  start  on  or  before  end.   ");  }  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }    [BUGGY]  if(endIndex  >  this.data.size())  {  if(startIndex  >  end)  {  emptyRange  =  true;  }  [BUGGY]    int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  emptyRange  =  true;  }  if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	939	939	1	replace	if(endIndex  >  this.data.size())  {  if(startIndex  >  end)  {  emptyRange  =  true;  }	      if(startIndex    <    this.data.size())    {    if(startIndex    >    end)    {    emptyRange    =    true;    }    	non-compiled	[CE]  illegal  start  of  expression	4262	None
8330	[BUG]  [BUGGY]  while(this.data  ==  null)  {  this.data  =(List)this.data.get(this.timePeriodClass);  [CE]  illegal  start  of  expression  [CONTEXT]    public  int  getItemCount()  {    [BUGGY]  while(this.data  ==  null)  {  this.data  =(List)this.data.get(this.timePeriodClass);  [BUGGY]    return  this.data.size();  }  [CLASS]  TimeSeries  [METHOD]  getItemCount  [RETURN_TYPE]  int  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	240	240	1	replace	while(this.data  ==  null)  {  this.data  =(List)this.data.get(this.timePeriodClass);	      while(this.data!=    null)    {    this.data    =(List)this.data.get(this.timePeriodClass);    	non-compiled	[CE]  illegal  start  of  expression	1705	None
8353	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;    [BUGGY]      this.maximumItemAge  =  Long.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  [BUGGY]    }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	181	181	1	add	        this.maximumItemAge    =    Long.MAX_VALUE;    this.maximumItemAge  =  Long.MAX_VALUE;	  	compilable	  [FE]  IllegalArgumentException	97	1
8354	[BUG]  [BUGGY]      this.maximumItemAge  =  Long.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  [FE]  IllegalArgumentException  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;    [BUGGY]      this.maximumItemAge  =  Long.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  [BUGGY]    }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	181	181	1	replace	        this.maximumItemAge    =    Long.MAX_VALUE;    this.maximumItemAge  =  Long.MAX_VALUE;	  	compilable	  [FE]  IllegalArgumentException	97	1
8354	[BUG]  [BUGGY]      this.maximumItemAge  =  Long.MAX_VALUE;  this.maximumItemCount  =  Long.MAX_VALUE;  [CE]  possible  loss  of  precision  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;    [BUGGY]      this.maximumItemAge  =  Long.MAX_VALUE;  this.maximumItemCount  =  Long.MAX_VALUE;  [BUGGY]    }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	181	181	1	replace	        this.maximumItemAge    =    Long.MAX_VALUE;    this.maximumItemCount  =  Long.MAX_VALUE;	  	non-compiled	[CE]  possible  loss  of  precision	97	None
8355	[BUG]  [BUGGY]      this.maximumItemAge  =  Long.MAX_VALUE;  this.maximumItemBound  =  Long.MAX_VALUE;  [CE]  cannot  find  symbol  maximumItemBound  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;    [BUGGY]      this.maximumItemAge  =  Long.MAX_VALUE;  this.maximumItemBound  =  Long.MAX_VALUE;  [BUGGY]    }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	181	181	1	replace	        this.maximumItemAge    =    Long.MAX_VALUE;    this.maximumItemBound  =  Long.MAX_VALUE;	  	non-compiled	[CE]  cannot  find  symbol  maximumItemBound	97	None
8377	[BUG]  [BUGGY]  [Delete]  ((  latest  -  getTimePeriod(0).getSerialIndex())>  this.maximumItemAge))  {  this.data.remove(0);  removed  =  true;  [CE]  ')'  expected  [CONTEXT]    public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())    [BUGGY]  [Delete]  ((  latest  -  getTimePeriod(0).getSerialIndex())>  this.maximumItemAge))  {  this.data.remove(0);  removed  =  true;  [BUGGY]    >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	744	744	1	replace	[Delete]  ((  latest  -  getTimePeriod(0).getSerialIndex())>  this.maximumItemAge))  {  this.data.remove(0);  removed  =  true;	      &&((    latest    -    getTimePeriod(0).getSerialIndex())>    this.maximumItemAge))    {    this.data.remove(0);    removed    =    true;    	non-compiled	[CE]  ')'  expected	578	None
8378	[BUG]  [BUGGY]  }  ((  latest  -  getTimePeriod(0).getSerialIndex())>  this.maximumItemAge))  {  this.data.remove(0);  removed  =  true;  [CE]  ')'  expected  [CONTEXT]    public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())    [BUGGY]  }  ((  latest  -  getTimePeriod(0).getSerialIndex())>  this.maximumItemAge))  {  this.data.remove(0);  removed  =  true;  [BUGGY]    >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	744	744	1	replace	}  ((  latest  -  getTimePeriod(0).getSerialIndex())>  this.maximumItemAge))  {  this.data.remove(0);  removed  =  true;	      &&((    latest    -    getTimePeriod(0).getSerialIndex())>    this.maximumItemAge))    {    this.data.remove(0);    removed    =    true;    	non-compiled	[CE]  ')'  expected	578	None
8401	[BUG]  [BUGGY]  this.data.add(item,  notify,  this.timePeriodClass);  [CE]  illegal  start  of  type  [CONTEXT]    public  void  add(TimeSeriesDataItem  item,  boolean  notify)  {    [BUGGY]  this.data.add(item,  notify,  this.timePeriodClass);  [BUGGY]    if  (item  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'item'  argument.   ");  }  if  (!item.getPeriod().getClass().equals(this.timePeriodClass))  {  StringBuffer  b  =  new  StringBuffer();  b.append(   "You  are  trying  to  add  data  where  the  time  period  class     ");  b.append(   "is     ");  b.append(item.getPeriod().getClass().getName());  b.append(   ",  but  the  TimeSeries  is  expecting  an  instance  of     ");  b.append(this.timePeriodClass.getName());  b.append(   ".   ");  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	491	491	1	replace	this.data.add(item,  notify,  this.timePeriodClass);	      this.data.add(item,    notify);    	non-compiled	[CE]  illegal  start  of  type	4381	None
8402	[BUG]  [BUGGY]  this.data.add(item,  notify,  item);  [CE]  illegal  start  of  type  [CONTEXT]    public  void  add(TimeSeriesDataItem  item,  boolean  notify)  {    [BUGGY]  this.data.add(item,  notify,  item);  [BUGGY]    if  (item  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'item'  argument.   ");  }  if  (!item.getPeriod().getClass().equals(this.timePeriodClass))  {  StringBuffer  b  =  new  StringBuffer();  b.append(   "You  are  trying  to  add  data  where  the  time  period  class     ");  b.append(   "is     ");  b.append(item.getPeriod().getClass().getName());  b.append(   ",  but  the  TimeSeries  is  expecting  an  instance  of     ");  b.append(this.timePeriodClass.getName());  b.append(   ".   ");  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	491	491	1	replace	this.data.add(item,  notify,  item);	      this.data.add(item,    notify);    	non-compiled	[CE]  illegal  start  of  type	4381	None
8474	[BUG]  [BUGGY]  checkPeriod(index,  getDataItem(index));  [CE]  cannot  find  symbol  [CONTEXT]    public  RegularTimePeriod  getTimePeriod(int  index)  {    [BUGGY]  checkPeriod(index,  getDataItem(index));  [BUGGY]    return  getDataItem(index).getPeriod();  }  [CLASS]  TimeSeries  [METHOD]  getTimePeriod  [RETURN_TYPE]  RegularTimePeriod  int  index  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  long  maximumItemAge  periods  serialVersionUID  int  count  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	372	372	1	replace	checkPeriod(index,  getDataItem(index));	      checkPeriod(getDataItem(index));    	non-compiled	[CE]  cannot  find  symbol	6901	None
8497	[BUG]  [BUGGY]  if(getItemCount(1)>  this.maximumItemCount)  {  [CE]  no  suitable  method  found  for  getItemCount(int)  [CONTEXT]    b.append(item.getPeriod().toString());  b.append(   "  but  the  series  already  contains  an  observation   ");  b.append(   "  for  that  time  period.  Duplicates  are  not     ");  b.append(   "permitted.Try  using  the  addOrUpdate()  method.   ");  throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {      [BUGGY]  if(getItemCount(1)>  this.maximumItemCount)  {  [BUGGY]    this.data.remove(0);  }  removeAgedItems(false);//  remove  old  items  if  necessary,  but    if  (notify)  {  fireSeriesChanged();  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	538	538	1	replace	if(getItemCount(1)>  this.maximumItemCount)  {	  if(getItemCount(0)    >    this.maximumItemCount)    {    	non-compiled	[CE]  no  suitable  method  found  for  getItemCount(int)	6722	None
8522	[BUG]  [BUGGY]  for(int  i  =  0,  count  =  this.data.size();  i  >  count;  i++)  {  TimeSeriesDataItem  period  =(TimeSeriesDataItem)this.data.get(i);  PeriodDataItem  period  =(TimeSeriesDataItem)period.getDataItem(i);  [CE]  illegal  start  of  expression  [CONTEXT]    public  int  getIndex(RegularTimePeriod  period)  {  if  (period  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'period'  argument.   ");  }    [BUGGY]  for(int  i  =  0,  count  =  this.data.size();  i  >  count;  i++)  {  TimeSeriesDataItem  period  =(TimeSeriesDataItem)this.data.get(i);  PeriodDataItem  period  =(TimeSeriesDataItem)period.getDataItem(i);  [BUGGY]    TimeSeriesDataItem  dummy  =  new  TimeSeriesDataItem(    period,  Integer.MIN_VALUE);  period,  Integer.MIN_VALUE);  return  Collections.binarySearch(this.data,  dummy);  }  [CLASS]  TimeSeries  [METHOD]  getIndex  [RETURN_TYPE]  int  RegularTimePeriod  period  [VARIABLES]  boolean  TimeSeriesDataItem  dummy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.3333333333333333	433	434	1	replace	for(int  i  =  0,  count  =  this.data.size();  i  >  count;  i++)  {  TimeSeriesDataItem  period  =(TimeSeriesDataItem)this.data.get(i);  PeriodDataItem  period  =(TimeSeriesDataItem)period.getDataItem(i);	      for(int    i    =    0,    count    =    this.data.size();    i    <    count;    i++)    {    TimeSeriesDataItem    period    =(TimeSeriesDataItem)this.data.get(i);    PeriodDataItem    period    =(TimeSeriesDataItem)period.getDataItem(i);    	non-compiled	[CE]  illegal  start  of  expression	7921	None
8594	[BUG]  [BUGGY]  while(count!=  it.hasNext())  {  this.data.add(item);  [CE]  'else'  without  'if'  [CONTEXT]    b.append(item.getPeriod().getClass().getName());  b.append(   ",  but  the  TimeSeries  is  expecting  an  instance  of     ");  b.append(this.timePeriodClass.getName());  b.append(   ".   ");  throw  new  SeriesException(b.toString());  }  boolean  added  =  false;  int  count  =  getItemCount();    [BUGGY]  while(count!=  it.hasNext())  {  this.data.add(item);  [BUGGY]    if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  added  =  true;  }  else  {  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	508	508	1	replace	while(count!=  it.hasNext())  {  this.data.add(item);	      while(it.hasNext())    {    this.data.add(item);    	non-compiled	[CE]  'else'  without  'if'	7141	None
8641	[BUG]  [BUGGY]  if(!added)  {  if(!added)  {  [CE]  illegal  start  of  expression  [CONTEXT]    b.append(   "You  are  attempting  to  add  an  observation  for     ");  b.append(   "the  time  period     ");  b.append(item.getPeriod().toString());  b.append(   "  but  the  series  already  contains  an  observation   ");  b.append(   "  for  that  time  period.  Duplicates  are  not     ");  b.append(   "permitted.Try  using  the  addOrUpdate()  method.   ");  throw  new  SeriesException(b.toString());  }  }  }    [BUGGY]  if(!added)  {  if(!added)  {  [BUGGY]      if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  removeAgedItems(false);//  remove  old  items  if  necessary,  but    if  (notify)  {  fireSeriesChanged();  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	536	536	1	replace	if(!added)    {    if(!added)  {	  	non-compiled	[CE]  illegal  start  of  expression	2462	None
8642	[BUG]  [BUGGY]  if(!added)  {  if(!added)  }  [CE]  illegal  start  of  expression  [CONTEXT]    b.append(   "You  are  attempting  to  add  an  observation  for     ");  b.append(   "the  time  period     ");  b.append(item.getPeriod().toString());  b.append(   "  but  the  series  already  contains  an  observation   ");  b.append(   "  for  that  time  period.  Duplicates  are  not     ");  b.append(   "permitted.Try  using  the  addOrUpdate()  method.   ");  throw  new  SeriesException(b.toString());  }  }  }    [BUGGY]  if(!added)  {  if(!added)  }  [BUGGY]      if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  removeAgedItems(false);//  remove  old  items  if  necessary,  but    if  (notify)  {  fireSeriesChanged();  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	536	536	1	replace	if(!added)    {    if(!added)  }	  	non-compiled	[CE]  illegal  start  of  expression	2462	None
8643	[BUG]  [BUGGY]  if(!added)  {  if(!added)  >>  [CE]  illegal  start  of  expression  [CONTEXT]    b.append(   "You  are  attempting  to  add  an  observation  for     ");  b.append(   "the  time  period     ");  b.append(item.getPeriod().toString());  b.append(   "  but  the  series  already  contains  an  observation   ");  b.append(   "  for  that  time  period.  Duplicates  are  not     ");  b.append(   "permitted.Try  using  the  addOrUpdate()  method.   ");  throw  new  SeriesException(b.toString());  }  }  }    [BUGGY]  if(!added)  {  if(!added)  >>  [BUGGY]      if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  removeAgedItems(false);//  remove  old  items  if  necessary,  but    if  (notify)  {  fireSeriesChanged();  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	536	536	1	replace	if(!added)    {    if(!added)  >>	  	non-compiled	[CE]  illegal  start  of  expression	2462	None
8666	[BUG]  [BUGGY]  data.add(period,  value,  new  Double(value));  [CE]  illegal  start  of  expression  [CONTEXT]    public  void  add(RegularTimePeriod  period,  double  value)  {  add(period,  value,  true);    [BUGGY]  data.add(period,  value,  new  Double(value));  [BUGGY]    }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  double  value  [VARIABLES]  boolean  double  value  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.2581988897471611	562	562	1	replace	data.add(period,  value,  new  Double(value));	      data.add(period,    new    Double(value));    	non-compiled	[CE]  illegal  start  of  expression	1743	None
8714	[BUG]  [BUGGY]  this.data.clear();  [CE]  missing  return  statement  [CONTEXT]    public  TimeSeriesDataItem  getDataItem(int  index)  {    [BUGGY]  this.data.clear();  [BUGGY]    return  (TimeSeriesDataItem)  this.data.get(index);  }  [CLASS]  TimeSeries  [METHOD]  getDataItem  [RETURN_TYPE]  TimeSeriesDataItem  int  index  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  long  maximumItemAge  periods  serialVersionUID  int  count  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	341	341	1	replace	this.data.clear();	      this.data.get(index);    	non-compiled	[CE]  missing  return  statement	412	None
8737	[BUG]  [BUGGY]  while(item.getPeriod().compareTo(count)>  0)  {  this.data.add(item);  added  =  true;  [CE]  'else'  without  'if'  [CONTEXT]    b.append(this.timePeriodClass.getName());  b.append(   ".   ");  throw  new  SeriesException(b.toString());  }  boolean  added  =  false;  int  count  =  getItemCount();  if  (count  ==  0)  {  this.data.add(item);    [BUGGY]  while(item.getPeriod().compareTo(count)>  0)  {  this.data.add(item);  added  =  true;  [BUGGY]    }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  added  =  true;  }  else  {  int  index  =  Collections.binarySearch(this.data,  item);  if  (index  <  0)  {  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	510	510	1	replace	while(item.getPeriod().compareTo(count)>  0)  {  this.data.add(item);  added  =  true;	      	non-compiled	[CE]  'else'  without  'if'	1492	None
8738	[BUG]  [BUGGY]  while(item.getPeriod().compareTo(this.timePeriodClass)>  0)  {  this.data.add(item);  added  =  true;  [CE]  'else'  without  'if'  [CONTEXT]    b.append(this.timePeriodClass.getName());  b.append(   ".   ");  throw  new  SeriesException(b.toString());  }  boolean  added  =  false;  int  count  =  getItemCount();  if  (count  ==  0)  {  this.data.add(item);    [BUGGY]  while(item.getPeriod().compareTo(this.timePeriodClass)>  0)  {  this.data.add(item);  added  =  true;  [BUGGY]    }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  added  =  true;  }  else  {  int  index  =  Collections.binarySearch(this.data,  item);  if  (index  <  0)  {  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	510	510	1	replace	while(item.getPeriod().compareTo(this.timePeriodClass)>  0)  {  this.data.add(item);  added  =  true;	      	non-compiled	[CE]  'else'  without  'if'	1492	None
8761	[BUG]  [BUGGY]  this.data.add(new  TimeSeries(name,  domain,  range,  timePeriodClass);  [CE]  ')'  expected  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;    [BUGGY]  this.data.add(new  TimeSeries(name,  domain,  range,  timePeriodClass);  [BUGGY]    this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	180	180	1	replace	this.data.add(new  TimeSeries(name,  domain,  range,  timePeriodClass);	      this.data.add(new    TimeSeries(name),    domain,    range,    timePeriodClass);    	non-compiled	[CE]  ')'  expected	302	None
8762	[BUG]  [BUGGY]  this.data.add(new  TimeSeries(name,  domain,  range,  timePeriodClass,  this.maximumItemCount);  [CE]  ')'  expected  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;    [BUGGY]  this.data.add(new  TimeSeries(name,  domain,  range,  timePeriodClass,  this.maximumItemCount);  [BUGGY]    this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	180	180	1	replace	this.data.add(new  TimeSeries(name,  domain,  range,  timePeriodClass,  this.maximumItemCount);	      this.data.add(new    TimeSeries(name),    domain,    range,    timePeriodClass);    	non-compiled	[CE]  ')'  expected	302	None
8785	[BUG]  [BUGGY]  if(startIndex  >  end)  {  emptyRange  =  true;  }  [CE]  bad  operand  types  for  binary  operator  '>'  [CONTEXT]    if  (end  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'end'  argument.   ");  }  if  (start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException(     "Requires  start  on  or  before  end.   ");  }  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {    [BUGGY]  if(startIndex  >  end)  {  emptyRange  =  true;  }  [BUGGY]    startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	934	934	1	replace	if(startIndex  >  end)  {  emptyRange  =  true;  }	      if(startIndex    <    this.data.size())    {    if(startIndex    >    end)    {    emptyRange    =    true;    }    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>'	5523	None
8786	[BUG]  [BUGGY]  if(startIndex  >  this.data.size())  {  if(startIndex  >  end)  {  emptyRange  =  true;  }  [CE]  illegal  start  of  expression  [CONTEXT]    if  (end  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'end'  argument.   ");  }  if  (start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException(     "Requires  start  on  or  before  end.   ");  }  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {    [BUGGY]  if(startIndex  >  this.data.size())  {  if(startIndex  >  end)  {  emptyRange  =  true;  }  [BUGGY]    startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	934	934	1	replace	if(startIndex  >  this.data.size())  {  if(startIndex  >  end)  {  emptyRange  =  true;  }	      if(startIndex    <    this.data.size())    {    if(startIndex    >    end)    {    emptyRange    =    true;    }    	non-compiled	[CE]  illegal  start  of  expression	5523	None
8809	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]    throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }    [BUGGY]      fireSeriesChanged();  fireSeriesChanged();  [BUGGY]    removeAgedItems(false);//  remove  old  items  if  necessary,  but          //  don't  notify  anyone,  because  that                    //  happens  next  anyway...    if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	542	544	1	add	        fireSeriesChanged();    fireSeriesChanged();	  	compilable	  [FE]  IllegalArgumentException	5882	1
8810	[BUG]  [BUGGY]      fireSeriesChanged();  fireSeriesChanged();  [FE]  IllegalArgumentException  [CONTEXT]    throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }    [BUGGY]      fireSeriesChanged();  fireSeriesChanged();  [BUGGY]    removeAgedItems(false);//  remove  old  items  if  necessary,  but          //  don't  notify  anyone,  because  that                    //  happens  next  anyway...    if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	542	544	1	replace	        fireSeriesChanged();    fireSeriesChanged();	  	compilable	  [FE]  IllegalArgumentException	5882	1
8810	[BUG]  [BUGGY]      fireSeriesChanged();  fireSeriesChanged();  b.append(item.getPeriod());  [CE]  cannot  find  symbol  b  [CONTEXT]    throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }    [BUGGY]      fireSeriesChanged();  fireSeriesChanged();  b.append(item.getPeriod());  [BUGGY]    removeAgedItems(false);//  remove  old  items  if  necessary,  but          //  don't  notify  anyone,  because  that                    //  happens  next  anyway...    if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	542	544	1	replace	        fireSeriesChanged();    fireSeriesChanged();  b.append(item.getPeriod());	  	non-compiled	[CE]  cannot  find  symbol  b	5882	None
8811	[BUG]  [BUGGY]      fireSeriesChanged();  fireSeriesChanged();  b.append(item.getPeriodType());  [CE]  cannot  find  symbol  [CONTEXT]    throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }    [BUGGY]      fireSeriesChanged();  fireSeriesChanged();  b.append(item.getPeriodType());  [BUGGY]    removeAgedItems(false);//  remove  old  items  if  necessary,  but          //  don't  notify  anyone,  because  that                    //  happens  next  anyway...    if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	542	544	1	replace	        fireSeriesChanged();    fireSeriesChanged();  b.append(item.getPeriodType());	  	non-compiled	[CE]  cannot  find  symbol	5882	None
8858	[BUG]  [BUGGY]  this.data.remove(period,  value);  [CE]  illegal  start  of  expression  [CONTEXT]    public  void  add(RegularTimePeriod  period,  Number  value)  {  add(period,  value,  true);    [BUGGY]  this.data.remove(period,  value);  [BUGGY]      [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  Number  value  [VARIABLES]  boolean  Number  value  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	589	589	1	replace	this.data.remove(period,  value);	  this.data.add(period,    value);    	non-compiled	[CE]  illegal  start  of  expression	1562	None
8881	[BUG]  [BUGGY]  item.setValue(value);  notify;  [CE]  not  a  statement  [CONTEXT]    public  void  add(RegularTimePeriod  period,  Number  value,  boolean  notify)  {  TimeSeriesDataItem  item  =  new  TimeSeriesDataItem(period,  value);  add(item,  notify);    [BUGGY]  item.setValue(value);  notify;  [BUGGY]    }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  Number  value  boolean  notify  [VARIABLES]  boolean  notify  Number  value  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	604	604	1	replace	item.setValue(value);  notify;	      item.setValue(value);    fireSeriesChanged();    	non-compiled	[CE]  not  a  statement	1563	None
8905	[BUG]  [BUGGY]  if(start  ==  null  ||  start.compareTo(start)>  0)  {  if(start  ==  null  ||  start.compareTo(start)>  0)  {  [CE]  illegal  start  of  expression  [CONTEXT]    throws  CloneNotSupportedException  {    [BUGGY]  if(start  ==  null  ||  start.compareTo(start)>  0)  {  if(start  ==  null  ||  start.compareTo(start)>  0)  {  [BUGGY]    throw  new  IllegalArgumentException(   "Null  'start'  argument.   ");  }  if  (end  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'end'  argument.   ");  }  if  (start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException(     "Requires  start  on  or  before  end.   ");  }  boolean  emptyRange  =  false;  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	921	921	1	replace	if(start    ==    null    ||    start.compareTo(start)>    0)    {    if(start  ==  null  ||  start.compareTo(start)>  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	2930	None
8907	[BUG]  [BUGGY]  if(start  ==  null  ||  start.compareTo(start)>  0)  {  if(start!=  null  ||  start.compareTo(start)>  0)  {  [CE]  illegal  start  of  expression  [CONTEXT]    throws  CloneNotSupportedException  {    [BUGGY]  if(start  ==  null  ||  start.compareTo(start)>  0)  {  if(start!=  null  ||  start.compareTo(start)>  0)  {  [BUGGY]    throw  new  IllegalArgumentException(   "Null  'start'  argument.   ");  }  if  (end  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'end'  argument.   ");  }  if  (start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException(     "Requires  start  on  or  before  end.   ");  }  boolean  emptyRange  =  false;  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	921	921	1	replace	if(start    ==    null    ||    start.compareTo(start)>    0)    {    if(start!=  null  ||  start.compareTo(start)>  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	2930	None
8929	[BUG]  [BUGGY]  for(TimeSeriesDataItem  item  :  copy.data)  {  TimeSeriesDataItem  item  =(TimeSeriesDataItem)super.clone();  item.getDataItem(0)!=  null;  if(start  >  0)  {  throw  new  IllegalArgumentException( "Requires  start  >=  0.  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [CONTEXT]    throws  CloneNotSupportedException  {    [BUGGY]  for(TimeSeriesDataItem  item  :  copy.data)  {  TimeSeriesDataItem  item  =(TimeSeriesDataItem)super.clone();  item.getDataItem(0)!=  null;  if(start  >  0)  {  throw  new  IllegalArgumentException( "Requires  start  >=  0.  [BUGGY]    if  (start  <  0)  {  throw  new  IllegalArgumentException(   "Requires  start  >=  0.   ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(   "Requires  start  <=  end.   ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	879	879	1	replace	for(TimeSeriesDataItem  item  :  copy.data)  {  TimeSeriesDataItem  item  =(TimeSeriesDataItem)super.clone();  item.getDataItem(0)!=  null;  if(start  >  0)  {  throw  new  IllegalArgumentException( "Requires  start  >=  0.	      for(TimeSeriesDataItem    item    :    copy.data)    {    TimeSeriesDataItem    item    =(TimeSeriesDataItem)super.clone();    item.getDataItem(0)!=    null;    if(start    <    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	1381	None
8930	[BUG]  [BUGGY]  for(TimeSeriesDataItem  item  :  copy.data)  {  TimeSeriesDataItem  item  =(TimeSeriesDataItem)super.clone();  item.getDataItem(1)!=  null;  if(start  >  0)  {  throw  new  IllegalArgumentException( "Requires  start  >=  0.  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [CONTEXT]    throws  CloneNotSupportedException  {    [BUGGY]  for(TimeSeriesDataItem  item  :  copy.data)  {  TimeSeriesDataItem  item  =(TimeSeriesDataItem)super.clone();  item.getDataItem(1)!=  null;  if(start  >  0)  {  throw  new  IllegalArgumentException( "Requires  start  >=  0.  [BUGGY]    if  (start  <  0)  {  throw  new  IllegalArgumentException(   "Requires  start  >=  0.   ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(   "Requires  start  <=  end.   ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	879	879	1	replace	for(TimeSeriesDataItem  item  :  copy.data)  {  TimeSeriesDataItem  item  =(TimeSeriesDataItem)super.clone();  item.getDataItem(1)!=  null;  if(start  >  0)  {  throw  new  IllegalArgumentException( "Requires  start  >=  0.	      for(TimeSeriesDataItem    item    :    copy.data)    {    TimeSeriesDataItem    item    =(TimeSeriesDataItem)super.clone();    item.getDataItem(0)!=    null;    if(start    <    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	1381	None
8953	[BUG]  [BUGGY]  if(item  ==  null  ||  item.getPeriod().getClass()!=  this.timePeriodClass)  {  if(item  ==  null  ||  item.getPeriod().getClass()!=  this.timePeriodClass)  {  [CE]  illegal  start  of  expression  [CONTEXT]    public  void  add(TimeSeriesDataItem  item,  boolean  notify)  {    [BUGGY]  if(item  ==  null  ||  item.getPeriod().getClass()!=  this.timePeriodClass)  {  if(item  ==  null  ||  item.getPeriod().getClass()!=  this.timePeriodClass)  {  [BUGGY]    throw  new  IllegalArgumentException(   "Null  'item'  argument.   ");  }  if  (!item.getPeriod().getClass().equals(this.timePeriodClass))  {  StringBuffer  b  =  new  StringBuffer();  b.append(   "You  are  trying  to  add  data  where  the  time  period  class     ");  b.append(   "is     ");  b.append(item.getPeriod().getClass().getName());  b.append(   ",  but  the  TimeSeries  is  expecting  an  instance  of     ");  b.append(this.timePeriodClass.getName());  b.append(   ".   ");  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	491	491	1	replace	if(item    ==    null    ||    item.getPeriod().getClass()!=    this.timePeriodClass)    {    if(item  ==  null  ||  item.getPeriod().getClass()!=  this.timePeriodClass)  {	  	non-compiled	[CE]  illegal  start  of  expression	1802	None
8954	[BUG]  [BUGGY]  if(item  ==  null  ||  item.getPeriod().getClass()!=  this.timePeriodClass)  {  if(item!=  null  ||  item.getPeriod().getClass()!=  this.timePeriodClass)  {  [CE]  illegal  start  of  expression  [CONTEXT]    public  void  add(TimeSeriesDataItem  item,  boolean  notify)  {    [BUGGY]  if(item  ==  null  ||  item.getPeriod().getClass()!=  this.timePeriodClass)  {  if(item!=  null  ||  item.getPeriod().getClass()!=  this.timePeriodClass)  {  [BUGGY]    throw  new  IllegalArgumentException(   "Null  'item'  argument.   ");  }  if  (!item.getPeriod().getClass().equals(this.timePeriodClass))  {  StringBuffer  b  =  new  StringBuffer();  b.append(   "You  are  trying  to  add  data  where  the  time  period  class     ");  b.append(   "is     ");  b.append(item.getPeriod().getClass().getName());  b.append(   ",  but  the  TimeSeries  is  expecting  an  instance  of     ");  b.append(this.timePeriodClass.getName());  b.append(   ".   ");  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	491	491	1	replace	if(item    ==    null    ||    item.getPeriod().getClass()!=    this.timePeriodClass)    {    if(item!=  null  ||  item.getPeriod().getClass()!=  this.timePeriodClass)  {	  	non-compiled	[CE]  illegal  start  of  expression	1802	None
8955	[BUG]  [BUGGY]  if(item  ==  null  ||  item.getPeriod().getClass()!=  this.timePeriodClass)  {  if(item  ==  null  ||  item.getPeriod().getClass()  <=  this.timePeriodClass)  {  [CE]  illegal  start  of  expression  [CONTEXT]    public  void  add(TimeSeriesDataItem  item,  boolean  notify)  {    [BUGGY]  if(item  ==  null  ||  item.getPeriod().getClass()!=  this.timePeriodClass)  {  if(item  ==  null  ||  item.getPeriod().getClass()  <=  this.timePeriodClass)  {  [BUGGY]    throw  new  IllegalArgumentException(   "Null  'item'  argument.   ");  }  if  (!item.getPeriod().getClass().equals(this.timePeriodClass))  {  StringBuffer  b  =  new  StringBuffer();  b.append(   "You  are  trying  to  add  data  where  the  time  period  class     ");  b.append(   "is     ");  b.append(item.getPeriod().getClass().getName());  b.append(   ",  but  the  TimeSeries  is  expecting  an  instance  of     ");  b.append(this.timePeriodClass.getName());  b.append(   ".   ");  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	491	491	1	replace	if(item    ==    null    ||    item.getPeriod().getClass()!=    this.timePeriodClass)    {    if(item  ==  null  ||  item.getPeriod().getClass()  <=  this.timePeriodClass)  {	  	non-compiled	[CE]  illegal  start  of  expression	1802	None
8977	[BUG]  [BUGGY]  if(endIndex  >  endIndex)  {  throw  new  SeriesException( " ");  }  [CE]  missing  return  statement  [CONTEXT]    if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  }  else  {    [BUGGY]  if(endIndex  >  endIndex)  {  throw  new  SeriesException( " ");  }  [BUGGY]    }  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	953	953	1	replace	if(endIndex  >  endIndex)  {  throw  new  SeriesException( " ");  }	  return    createCopy(startIndex,    endIndex,    data.length);    	non-compiled	[CE]  missing  return  statement	2402	None
8978	[BUG]  [BUGGY]  if(endIndex  >  startIndex)  {  throw  new  SeriesException( " ");  }  [CE]  missing  return  statement  [CONTEXT]    if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  }  else  {    [BUGGY]  if(endIndex  >  startIndex)  {  throw  new  SeriesException( " ");  }  [BUGGY]    }  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	953	953	1	replace	if(endIndex  >  startIndex)  {  throw  new  SeriesException( " ");  }	  return    createCopy(startIndex,    endIndex,    data.length);    	non-compiled	[CE]  missing  return  statement	2402	None
9001	[BUG]  [BUGGY]  this(name,  TimeZone.getDefault(),  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  timePeriodClass);  [CE]  no  suitable  constructor  found  for  TimeSeries(Comparable,TimeZone,String,String,Class)  [CONTEXT]    public  TimeSeries(Comparable  name,  Class  timePeriodClass)  {    [BUGGY]  this(name,  TimeZone.getDefault(),  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  timePeriodClass);  [BUGGY]    this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,    timePeriodClass);  timePeriodClass);  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	155	156	1	replace	this(name,  TimeZone.getDefault(),  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  timePeriodClass);	      this(name,    TimeZone.getDefault(),    DEFAULT_DOMAIN_DESCRIPTION,    DEFAULT_RANGE_DESCRIPTION);    	non-compiled	[CE]  no  suitable  constructor  found  for  TimeSeries(Comparable,TimeZone,String,String,Class)	2702	None
9002	[BUG]  [BUGGY]  this(name,  timePeriodClass,  TimeZone.getDefault(),  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION);  [CE]  no  suitable  constructor  found  for  TimeSeries(Comparable,Class,TimeZone,String,String)  [CONTEXT]    public  TimeSeries(Comparable  name,  Class  timePeriodClass)  {    [BUGGY]  this(name,  timePeriodClass,  TimeZone.getDefault(),  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION);  [BUGGY]    this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,    timePeriodClass);  timePeriodClass);  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	155	156	1	replace	this(name,  timePeriodClass,  TimeZone.getDefault(),  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION);	      this(name,    TimeZone.getDefault(),    DEFAULT_DOMAIN_DESCRIPTION,    DEFAULT_RANGE_DESCRIPTION);    	non-compiled	[CE]  no  suitable  constructor  found  for  TimeSeries(Comparable,Class,TimeZone,String,String)	2702	None
9026	[BUG]  [BUGGY]  fireSeriesChanged(item.getDataItemCount()  -  1);  [CE]  class  or  interface  expected  [CONTEXT]    b.append(   "You  are  attempting  to  add  an  observation  for     ");  b.append(   "the  time  period     ");  b.append(item.getPeriod().toString());  b.append(   "  but  the  series  already  contains  an  observation   ");  b.append(   "  for  that  time  period.  Duplicates  are  not     ");  b.append(   "permitted.Try  using  the  addOrUpdate()  method.   ");  throw  new  SeriesException(b.toString());  }  }  }    [BUGGY]  fireSeriesChanged(item.getDataItemCount()  -  1);  [BUGGY]    if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  removeAgedItems(false);//  remove  old  items  if  necessary,  but    if  (notify)  {  fireSeriesChanged();  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	536	536	1	replace	fireSeriesChanged(item.getDataItemCount()  -  1);	      fireSeriesChanged();    	non-compiled	[CE]  class  or  interface  expected	6004	None
9074	[BUG]  [BUGGY]  this.domain  =  domain  +  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION;  [CE]  ';'  expected  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);    [BUGGY]  this.domain  =  domain  +  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION;  [BUGGY]    this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	175	175	1	replace	this.domain  =  domain  +  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION;	  this.domain    =    domain    +    DEFAULT_DOMAIN_DESCRIPTION;    	non-compiled	[CE]  ';'  expected	423	None
9098	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]    throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }    [BUGGY]  removeAgedItems(false);//  remove  old  items  if  necessary,  but  //  do  not  notify  anyone,  because  that  //  happens  next  anyway...  [BUGGY]      if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	542	544	1	add	removeAgedItems(false);//  remove  old  items  if  necessary,  but  //  do  not  notify  anyone,  because  that  //  happens  next  anyway...	  removeAgedItems(true);//    remove    old    items    if    necessary,    but    //    don't    notify    anyone,    because    that    //    happens    next    anyway...    	compilable	  [FE]  IllegalArgumentException	2234	1
9099	[BUG]  [BUGGY]  removeAgedItems(false);//  remove  old  items  if  necessary,  but  //  do  not  notify  anyone,  because  that  //  happens  next  anyway...  [FE]  IllegalArgumentException  [CONTEXT]    throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }    [BUGGY]  removeAgedItems(false);//  remove  old  items  if  necessary,  but  //  do  not  notify  anyone,  because  that  //  happens  next  anyway...  [BUGGY]      if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	542	544	1	replace	removeAgedItems(false);//  remove  old  items  if  necessary,  but  //  do  not  notify  anyone,  because  that  //  happens  next  anyway...	  removeAgedItems(true);//    remove    old    items    if    necessary,    but    //    don't    notify    anyone,    because    that    //    happens    next    anyway...    	compilable	  [FE]  IllegalArgumentException	2234	1
9121	[BUG]  [BUGGY]  this.data.add(period,  new  Double(value),  notify,  this.maximumItemCount);  [CE]  no  suitable  method  found  for  add(RegularTimePeriod,Double,boolean,int)  [CONTEXT]    public  void  add(RegularTimePeriod  period,  double  value,  boolean  notify)  {      [BUGGY]  this.data.add(period,  new  Double(value),  notify,  this.maximumItemCount);  [BUGGY]    TimeSeriesDataItem  item  =  new  TimeSeriesDataItem(period,  value);  add(item,  notify);  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  double  value  boolean  notify  [VARIABLES]  boolean  notify  double  value  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.2581988897471611	574	574	1	replace	this.data.add(period,  new  Double(value),  notify,  this.maximumItemCount);	      this.data.add(period,    new    Double(value),    notify);    	non-compiled	[CE]  no  suitable  method  found  for  add(RegularTimePeriod,Double,boolean,int)	2281	None
9122	[BUG]  [BUGGY]  this.data.add(period,  new  Double(value),  notify,  item);  [CE]  cannot  find  symbol  item  [CONTEXT]    public  void  add(RegularTimePeriod  period,  double  value,  boolean  notify)  {      [BUGGY]  this.data.add(period,  new  Double(value),  notify,  item);  [BUGGY]    TimeSeriesDataItem  item  =  new  TimeSeriesDataItem(period,  value);  add(item,  notify);  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  double  value  boolean  notify  [VARIABLES]  boolean  notify  double  value  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.2581988897471611	574	574	1	replace	this.data.add(period,  new  Double(value),  notify,  item);	      this.data.add(period,    new    Double(value),    notify);    	non-compiled	[CE]  cannot  find  symbol  item	2281	None
9146	[BUG]  [BUGGY]  if(timePeriodClass  ==  null)  {  this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  TimeSeries.class);  }  [CE]  no  suitable  constructor  found  for  Series()  [CONTEXT]    public  TimeSeries(Comparable  name)  {    [BUGGY]  if(timePeriodClass  ==  null)  {  this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  TimeSeries.class);  }  [BUGGY]    this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,    Day.class);  Day.class);  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Comparable)  Comparable  name  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.4082482904638631	142	143	1	replace	if(timePeriodClass  ==  null)  {  this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  TimeSeries.class);  }	      this(name,    DEFAULT_DOMAIN_DESCRIPTION,    DEFAULT_RANGE_DESCRIPTION,    TimeSeries.class);    	non-compiled	[CE]  no  suitable  constructor  found  for  Series()	721	None
9169	[BUG]  [BUGGY]  if(start  >  end)  {  throw  new  IllegalArgumentException(   "   ");  }  [CE]  illegal  start  of  type  [CONTEXT]    throw  new  IllegalArgumentException(   "Null  'end'  argument.   ");  }  if  (start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException(     "Requires  start  on  or  before  end.   ");  }  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);    [BUGGY]  if(start  >  end)  {  throw  new  IllegalArgumentException(   "   ");  }  [BUGGY]    if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  emptyRange  =  true;  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	935	935	1	replace	if(start  >  end)  {  throw  new  IllegalArgumentException(   "   ");  }	      if(this.data!=    null)    {    if(startIndex    ==    0)    {    emptyRange    =    true;    }    	non-compiled	[CE]  illegal  start  of  type	2762	None
9218	[BUG]  [BUGGY]  while((  latest  -  getTimePeriod(1).getSerialIndex()  >  this.maximumItemAge)>  this.data.size())  {  this.data.remove(0);  [CE]  bad  operand  types  for  binary  operator  '>'  [CONTEXT]      if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())  >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }    [BUGGY]  while((  latest  -  getTimePeriod(1).getSerialIndex()  >  this.maximumItemAge)>  this.data.size())  {  this.data.remove(0);  [BUGGY]    if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	748	748	1	replace	while((  latest  -  getTimePeriod(1).getSerialIndex()  >  this.maximumItemAge)>  this.data.size())  {  this.data.remove(0);	      while((    latest    -    getTimePeriod(0).getSerialIndex()    >    this.maximumItemAge)>    this.data.size())    {    this.data.remove(0);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>'	2523	None
9241	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]    public  void  add(RegularTimePeriod  period,  double  value,  boolean  notify)  {  TimeSeriesDataItem  item  =  new  TimeSeriesDataItem(period,  value);  add(item,  notify);    [BUGGY]      fireSeriesChanged();  fireSeriesChanged();  [BUGGY]    }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  double  value  boolean  notify  [VARIABLES]  boolean  notify  double  value  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.2581988897471611	576	576	1	add	        fireSeriesChanged();    fireSeriesChanged();	  	compilable	  [FE]  IllegalArgumentException	433	1
9242	[BUG]  [BUGGY]      fireSeriesChanged();  fireSeriesChanged();  [FE]  IllegalArgumentException  [CONTEXT]    public  void  add(RegularTimePeriod  period,  double  value,  boolean  notify)  {  TimeSeriesDataItem  item  =  new  TimeSeriesDataItem(period,  value);  add(item,  notify);    [BUGGY]      fireSeriesChanged();  fireSeriesChanged();  [BUGGY]    }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  double  value  boolean  notify  [VARIABLES]  boolean  notify  double  value  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.2581988897471611	576	576	1	replace	        fireSeriesChanged();    fireSeriesChanged();	  	compilable	  [FE]  IllegalArgumentException	433	1
9242	[BUG]  [BUGGY]      fireSeriesChanged();  updateBoolean(item.getPeriod(),  notify);  [CE]  cannot  find  symbol  [CONTEXT]    public  void  add(RegularTimePeriod  period,  double  value,  boolean  notify)  {  TimeSeriesDataItem  item  =  new  TimeSeriesDataItem(period,  value);  add(item,  notify);    [BUGGY]      fireSeriesChanged();  updateBoolean(item.getPeriod(),  notify);  [BUGGY]    }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  double  value  boolean  notify  [VARIABLES]  boolean  notify  double  value  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.2581988897471611	576	576	1	replace	        fireSeriesChanged();    updateBoolean(item.getPeriod(),  notify);	  	non-compiled	[CE]  cannot  find  symbol	433	None
9243	[BUG]  [BUGGY]      fireSeriesChanged();  updateBoolean(item.getPeriodType(),  notify);  [CE]  cannot  find  symbol  [CONTEXT]    public  void  add(RegularTimePeriod  period,  double  value,  boolean  notify)  {  TimeSeriesDataItem  item  =  new  TimeSeriesDataItem(period,  value);  add(item,  notify);    [BUGGY]      fireSeriesChanged();  updateBoolean(item.getPeriodType(),  notify);  [BUGGY]    }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  double  value  boolean  notify  [VARIABLES]  boolean  notify  double  value  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.2581988897471611	576	576	1	replace	        fireSeriesChanged();    updateBoolean(item.getPeriodType(),  notify);	  	non-compiled	[CE]  cannot  find  symbol	433	None
9313	[BUG]  [BUGGY]  item.setValue(value,  period,  notify);  [CE]  method  setValue  in  class  TimeSeriesDataItem  cannot  be  applied  to  given  types;  [CONTEXT]    public  void  add(RegularTimePeriod  period,  Number  value,  boolean  notify)  {  TimeSeriesDataItem  item  =  new  TimeSeriesDataItem(period,  value);    [BUGGY]  item.setValue(value,  period,  notify);  [BUGGY]    add(item,  notify);  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  Number  value  boolean  notify  [VARIABLES]  boolean  notify  Number  value  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	603	603	1	replace	item.setValue(value,  period,  notify);	      item.setValue(value,    notify);    	non-compiled	[CE]  method  setValue  in  class  TimeSeriesDataItem  cannot  be  applied  to  given  types;	4443	None
9314	[BUG]  [BUGGY]  item.setValue(period,  value,  notify);  [CE]  method  setValue  in  class  TimeSeriesDataItem  cannot  be  applied  to  given  types;  [CONTEXT]    public  void  add(RegularTimePeriod  period,  Number  value,  boolean  notify)  {  TimeSeriesDataItem  item  =  new  TimeSeriesDataItem(period,  value);    [BUGGY]  item.setValue(period,  value,  notify);  [BUGGY]    add(item,  notify);  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  Number  value  boolean  notify  [VARIABLES]  boolean  notify  Number  value  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	603	603	1	replace	item.setValue(period,  value,  notify);	      item.setValue(value,    notify);    	non-compiled	[CE]  method  setValue  in  class  TimeSeriesDataItem  cannot  be  applied  to  given  types;	4443	None
9337	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;    [BUGGY]  this.range  =  range  +  1;  this.range  =  range  +  1;  [BUGGY]    this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	176	176	1	add	this.range    =    range    +    1;    this.range  =  range  +  1;	  	compilable	  [FE]  IllegalArgumentException	458	1
9338	[BUG]  [BUGGY]  this.range  =  range  +  1;  this.range  =  range  +  1;  [FE]  IllegalArgumentException  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;    [BUGGY]  this.range  =  range  +  1;  this.range  =  range  +  1;  [BUGGY]    this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	176	176	1	replace	this.range    =    range    +    1;    this.range  =  range  +  1;	  	compilable	  [FE]  IllegalArgumentException	458	1
9338	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;    [BUGGY]  this.range  =  range  +  1;  this.domain  =  domain  +  1;  [BUGGY]    this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	176	176	1	add	this.range    =    range    +    1;    this.domain  =  domain  +  1;	  	compilable	  [FE]  IllegalArgumentException	458	1
9339	[BUG]  [BUGGY]  this.range  =  range  +  1;  this.domain  =  domain  +  1;  [FE]  IllegalArgumentException  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;    [BUGGY]  this.range  =  range  +  1;  this.domain  =  domain  +  1;  [BUGGY]    this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	176	176	1	replace	this.range    =    range    +    1;    this.domain  =  domain  +  1;	  	compilable	  [FE]  IllegalArgumentException	458	1
9339	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;    [BUGGY]  this.range  =  range  +  1;  this.maximumItemCount  =  0;  [BUGGY]    this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	176	176	1	add	this.range    =    range    +    1;    this.maximumItemCount  =  0;	  	compilable	  [FE]  IllegalArgumentException	458	1
9340	[BUG]  [BUGGY]  this.range  =  range  +  1;  this.maximumItemCount  =  0;  [FE]  IllegalArgumentException  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;    [BUGGY]  this.range  =  range  +  1;  this.maximumItemCount  =  0;  [BUGGY]    this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	176	176	1	replace	this.range    =    range    +    1;    this.maximumItemCount  =  0;	  	compilable	  [FE]  IllegalArgumentException	458	1
9362	[BUG]  [BUGGY]  long  maximumItemAge  =  getTimePeriod(0).getMaximumItemAge();  [CE]  cannot  find  symbol  [CONTEXT]    public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {    [BUGGY]  long  maximumItemAge  =  getTimePeriod(0).getMaximumItemAge();  [BUGGY]    long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())  >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	741	741	1	replace	long  maximumItemAge  =  getTimePeriod(0).getMaximumItemAge();	      long    maximumItemAge    =    getTimePeriod(0).getSerialIndex();    	non-compiled	[CE]  cannot  find  symbol	3484	None
9409	[BUG]  [BUGGY]  if(item  ==  null  ||  item.getPeriod().getClass()!=  this.timePeriodClass)  {  [CE]  cannot  find  symbol  item  [CONTEXT]    throw  new  IllegalArgumentException(   "Null  'end'  argument.   ");  }  if  (start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException(     "Requires  start  on  or  before  end.   ");  }  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);    [BUGGY]  if(item  ==  null  ||  item.getPeriod().getClass()!=  this.timePeriodClass)  {  [BUGGY]    emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  emptyRange  =  true;  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	935	935	1	replace	if(item  ==  null  ||  item.getPeriod().getClass()!=  this.timePeriodClass)  {	      	non-compiled	[CE]  cannot  find  symbol  item	1803	None
9410	[BUG]  [BUGGY]  if(item!=  null  ||  item.getPeriod().getClass()!=  this.timePeriodClass)  {  [CE]  cannot  find  symbol  item  [CONTEXT]    throw  new  IllegalArgumentException(   "Null  'end'  argument.   ");  }  if  (start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException(     "Requires  start  on  or  before  end.   ");  }  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);    [BUGGY]  if(item!=  null  ||  item.getPeriod().getClass()!=  this.timePeriodClass)  {  [BUGGY]    emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  emptyRange  =  true;  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	935	935	1	replace	if(item!=  null  ||  item.getPeriod().getClass()!=  this.timePeriodClass)  {	      	non-compiled	[CE]  cannot  find  symbol  item	1803	None
9458	[BUG]  [BUGGY]  fireSeriesChanged(item);  [CE]  method  fireSeriesChanged  in  class  Series  cannot  be  applied  to  given  types;  [CONTEXT]    throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }    [BUGGY]  fireSeriesChanged(item);  [BUGGY]    removeAgedItems(false);//  remove  old  items  if  necessary,  but          //  don't  notify  anyone,  because  that                    //  happens  next  anyway...    if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	542	544	1	replace	fireSeriesChanged(item);	      fireSeriesChanged();    	non-compiled	[CE]  method  fireSeriesChanged  in  class  Series  cannot  be  applied  to  given  types;	5883	None
9505	[BUG]  [BUGGY]  [Delete]  [CE]  illegal  start  of  expression  [CONTEXT]    }  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);    [BUGGY]  [Delete]  [BUGGY]    if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series    endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period      endIndex  =  endIndex  -  1;  //  so  this  is  last  item  BEFORE  end  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  emptyRange  =  true;  }  if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	940	942	1	replace	[Delete]	      if(endIndex    <    0)    {    if(startIndex    >    endIndex)    {    throw    new    SeriesException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	3543	None
9506	[BUG]  [BUGGY]  if(endIndex  >  0)  {  throw  new  SeriesException( " ");  }  [CE]  illegal  start  of  type  [CONTEXT]    }  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);    [BUGGY]  if(endIndex  >  0)  {  throw  new  SeriesException( " ");  }  [BUGGY]    if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series    endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period      endIndex  =  endIndex  -  1;  //  so  this  is  last  item  BEFORE  end  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  emptyRange  =  true;  }  if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	940	942	1	replace	if(endIndex  >  0)  {  throw  new  SeriesException( " ");  }	      if(endIndex    <    0)    {    if(startIndex    >    endIndex)    {    throw    new    SeriesException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	3543	None
9553	[BUG]  [BUGGY]  this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  DEFAULT_SECRIPTION);  [CE]  cannot  find  symbol  DEFAULT_SECRIPTION  [CONTEXT]    public  TimeSeries(Comparable  name)  {    [BUGGY]  this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  DEFAULT_SECRIPTION);  [BUGGY]    this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,    Day.class);  Day.class);  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Comparable)  Comparable  name  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.4082482904638631	142	143	1	replace	this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  DEFAULT_SECRIPTION);	      this(name,    DEFAULT_DOMAIN_DESCRIPTION,    DEFAULT_RANGE_DESCRIPTION,    TimePeriodClass);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_SECRIPTION	1083	None
9554	[BUG]  [BUGGY]  this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  DEFAULT_STANDARD_DESCRIPTION);  [CE]  cannot  find  symbol  DEFAULT_STANDARD_DESCRIPTION  [CONTEXT]    public  TimeSeries(Comparable  name)  {    [BUGGY]  this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  DEFAULT_STANDARD_DESCRIPTION);  [BUGGY]    this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,    Day.class);  Day.class);  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Comparable)  Comparable  name  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.4082482904638631	142	143	1	replace	this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  DEFAULT_STANDARD_DESCRIPTION);	      this(name,    DEFAULT_DOMAIN_DESCRIPTION,    DEFAULT_RANGE_DESCRIPTION,    TimePeriodClass);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_STANDARD_DESCRIPTION	1083	None
9601	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;    [BUGGY]      this.data  =  new  java.util.ArrayList();  this.data  =  new  java.util.ArrayList();  [BUGGY]    this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	176	176	1	add	        this.data    =    new    java.util.ArrayList();    this.data  =  new  java.util.ArrayList();	  	compilable	  [FE]  IllegalArgumentException	3002	1
9602	[BUG]  [BUGGY]      this.data  =  new  java.util.ArrayList();  this.data  =  new  java.util.ArrayList();  [FE]  IllegalArgumentException  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;    [BUGGY]      this.data  =  new  java.util.ArrayList();  this.data  =  new  java.util.ArrayList();  [BUGGY]    this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	176	176	1	replace	        this.data    =    new    java.util.ArrayList();    this.data  =  new  java.util.ArrayList();	  	compilable	  [FE]  IllegalArgumentException	3002	1
9602	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;    [BUGGY]      this.data  =  new  java.util.ArrayList();  if(this.domain!=  null)  {  this.data  =  new  java.util.ArrayList();  }  else  {  this.data  =  new  java.util.ArrayList();  }  [BUGGY]    this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	176	176	1	add	        this.data    =    new    java.util.ArrayList();    if(this.domain!=  null)  {  this.data  =  new  java.util.ArrayList();  }  else  {  this.data  =  new  java.util.ArrayList();  }	  	compilable	  [FE]  IllegalArgumentException	3002	1
9603	[BUG]  [BUGGY]      this.data  =  new  java.util.ArrayList();  if(this.domain!=  null)  {  this.data  =  new  java.util.ArrayList();  }  else  {  this.data  =  new  java.util.ArrayList();  }  [FE]  IllegalArgumentException  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;    [BUGGY]      this.data  =  new  java.util.ArrayList();  if(this.domain!=  null)  {  this.data  =  new  java.util.ArrayList();  }  else  {  this.data  =  new  java.util.ArrayList();  }  [BUGGY]    this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	176	176	1	replace	        this.data    =    new    java.util.ArrayList();    if(this.domain!=  null)  {  this.data  =  new  java.util.ArrayList();  }  else  {  this.data  =  new  java.util.ArrayList();  }	  	compilable	  [FE]  IllegalArgumentException	3002	1
9603	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;    [BUGGY]      this.data  =  new  java.util.ArrayList();  if(this.domain!=  null)  {  this.data  =  new  java.util.ArrayList();  }  [BUGGY]    this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	176	176	1	add	        this.data    =    new    java.util.ArrayList();    if(this.domain!=  null)  {  this.data  =  new  java.util.ArrayList();  }	  	compilable	  [FE]  IllegalArgumentException	3002	1
9604	[BUG]  [BUGGY]      this.data  =  new  java.util.ArrayList();  if(this.domain!=  null)  {  this.data  =  new  java.util.ArrayList();  }  [FE]  IllegalArgumentException  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;    [BUGGY]      this.data  =  new  java.util.ArrayList();  if(this.domain!=  null)  {  this.data  =  new  java.util.ArrayList();  }  [BUGGY]    this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	176	176	1	replace	        this.data    =    new    java.util.ArrayList();    if(this.domain!=  null)  {  this.data  =  new  java.util.ArrayList();  }	  	compilable	  [FE]  IllegalArgumentException	3002	1
9626	[BUG]  [BUGGY]  setDataItem(domain);  this.data.add(new  TimeSeries(name,  domain,  range,  timePeriodClass));  [CE]  illegal  start  of  expression  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;    [BUGGY]  setDataItem(domain);  this.data.add(new  TimeSeries(name,  domain,  range,  timePeriodClass));  [BUGGY]    }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	181	181	1	replace	setDataItem(domain);  this.data.add(new  TimeSeries(name,  domain,  range,  timePeriodClass));	      setDataItem(name);    this.data.add(new    TimeSeries(name,    domain,    range,    timePeriodClass));    	non-compiled	[CE]  illegal  start  of  expression	4022	None
9649	[BUG]  [BUGGY]  this.data.add(period,  value,  null);  [CE]  no  suitable  method  found  for  add(RegularTimePeriod,Number,<null>)  [CONTEXT]    public  void  add(RegularTimePeriod  period,  Number  value)  {      [BUGGY]  this.data.add(period,  value,  null);  [BUGGY]    add(period,  value,  true);  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  Number  value  [VARIABLES]  boolean  Number  value  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	588	588	1	replace	this.data.add(period,  value,  null);	      this.data.add(period,    null);    	non-compiled	[CE]  no  suitable  method  found  for  add(RegularTimePeriod,Number,<null>)	3243	None
9650	[BUG]  [BUGGY]  this.data.add(period,  null,  value);  [CE]  no  suitable  method  found  for  add(RegularTimePeriod,<null>,Number)  [CONTEXT]    public  void  add(RegularTimePeriod  period,  Number  value)  {      [BUGGY]  this.data.add(period,  null,  value);  [BUGGY]    add(period,  value,  true);  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  Number  value  [VARIABLES]  boolean  Number  value  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	588	588	1	replace	this.data.add(period,  null,  value);	      this.data.add(period,    null);    	non-compiled	[CE]  no  suitable  method  found  for  add(RegularTimePeriod,<null>,Number)	3243	None
9674	[BUG]  [BUGGY]  while((  latest  -  getTimePeriod(1).getSerialIndex())>  this.minimumItemAge)  {  this.data.remove(0);  [CE]  illegal  start  of  expression  [CONTEXT]    public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();    [BUGGY]  while((  latest  -  getTimePeriod(1).getSerialIndex())>  this.minimumItemAge)  {  this.data.remove(0);  [BUGGY]    boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())  >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	742	742	1	replace	while((  latest  -  getTimePeriod(1).getSerialIndex())>  this.minimumItemAge)  {  this.data.remove(0);	      while((    latest    -    getTimePeriod(0).getSerialIndex())>    this.minimumItemAge)    {    this.data.remove(0);    	non-compiled	[CE]  illegal  start  of  expression	1899	None
9697	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]    public  int  getIndex(RegularTimePeriod  period)  {    [BUGGY]      int  count  =  this.data.size();  if(period  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'period'  argument.   ");  }  [BUGGY]    if  (period  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'period'  argument.   ");  }  TimeSeriesDataItem  dummy  =  new  TimeSeriesDataItem(  period,  Integer.MIN_VALUE);  return  Collections.binarySearch(this.data,  dummy);  }  [CLASS]  TimeSeries  [METHOD]  getIndex  [RETURN_TYPE]  int  RegularTimePeriod  period  [VARIABLES]  boolean  TimeSeriesDataItem  dummy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.3333333333333333	430	430	1	add	        int    count    =    this.data.size();    if(period  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'period'  argument.   ");  }	  	compilable	  [FE]  IllegalArgumentException	6602	1
9698	[BUG]  [BUGGY]      int  count  =  this.data.size();  if(period  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'period'  argument.   ");  }  [FE]  IllegalArgumentException  [CONTEXT]    public  int  getIndex(RegularTimePeriod  period)  {    [BUGGY]      int  count  =  this.data.size();  if(period  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'period'  argument.   ");  }  [BUGGY]    if  (period  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'period'  argument.   ");  }  TimeSeriesDataItem  dummy  =  new  TimeSeriesDataItem(  period,  Integer.MIN_VALUE);  return  Collections.binarySearch(this.data,  dummy);  }  [CLASS]  TimeSeries  [METHOD]  getIndex  [RETURN_TYPE]  int  RegularTimePeriod  period  [VARIABLES]  boolean  TimeSeriesDataItem  dummy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.3333333333333333	430	430	1	replace	        int    count    =    this.data.size();    if(period  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'period'  argument.   ");  }	  	compilable	  [FE]  IllegalArgumentException	6602	1
9699	[BUG]  [BUGGY]      int  count  =  this.data.size();  int  count  =  this.data.size();  [CE]  variable  count  is  already  defined  in  method  getIndex(RegularTimePeriod)  [CONTEXT]    public  int  getIndex(RegularTimePeriod  period)  {    [BUGGY]      int  count  =  this.data.size();  int  count  =  this.data.size();  [BUGGY]    if  (period  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'period'  argument.   ");  }  TimeSeriesDataItem  dummy  =  new  TimeSeriesDataItem(  period,  Integer.MIN_VALUE);  return  Collections.binarySearch(this.data,  dummy);  }  [CLASS]  TimeSeries  [METHOD]  getIndex  [RETURN_TYPE]  int  RegularTimePeriod  period  [VARIABLES]  boolean  TimeSeriesDataItem  dummy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.3333333333333333	430	430	1	replace	        int    count    =    this.data.size();    int  count  =  this.data.size();	  	non-compiled	[CE]  variable  count  is  already  defined  in  method  getIndex(RegularTimePeriod)	6602	None
9722	[BUG]  [BUGGY]  dummy.setValue(period.getValue()  +  1,  0);  [CE]  cannot  find  symbol  [CONTEXT]    public  int  getIndex(RegularTimePeriod  period)  {  if  (period  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'period'  argument.   ");  }  TimeSeriesDataItem  dummy  =  new  TimeSeriesDataItem(  period,  Integer.MIN_VALUE);    [BUGGY]  dummy.setValue(period.getValue()  +  1,  0);  [BUGGY]    return  Collections.binarySearch(this.data,  dummy);  }  [CLASS]  TimeSeries  [METHOD]  getIndex  [RETURN_TYPE]  int  RegularTimePeriod  period  [VARIABLES]  boolean  TimeSeriesDataItem  dummy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.3333333333333333	435	435	1	replace	dummy.setValue(period.getValue()  +  1,  0);	      dummy.setValue(period.getValue()    +    1);    	non-compiled	[CE]  cannot  find  symbol	4502	None
9746	[BUG]  [BUGGY]  updateDataItem(period,  value);  [CE]  cannot  find  symbol  [CONTEXT]    public  void  add(RegularTimePeriod  period,  Number  value,  boolean  notify)  {      [BUGGY]  updateDataItem(period,  value);  [BUGGY]    TimeSeriesDataItem  item  =  new  TimeSeriesDataItem(period,  value);  add(item,  notify);  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  Number  value  boolean  notify  [VARIABLES]  boolean  notify  Number  value  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	602	602	1	replace	updateDataItem(period,  value);	      fireSeriesChanged();    	non-compiled	[CE]  cannot  find  symbol	2570	None
9770	[BUG]  [BUGGY]  int  start  =  this.data.size()  -  1;  [CE]  illegal  start  of  type  [CONTEXT]    throws  CloneNotSupportedException  {    [BUGGY]  int  start  =  this.data.size()  -  1;  [BUGGY]    if  (start  <  0)  {  throw  new  IllegalArgumentException(   "Requires  start  >=  0.   ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(   "Requires  start  <=  end.   ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	879	879	1	replace	int  start  =  this.data.size()  -  1;	      if(start    <    0)    {    throw    new    IllegalArgumentException(   "Requires    start    <=    0.   ");    }    	non-compiled	[CE]  illegal  start  of  type	267	None
9793	[BUG]  [BUGGY]  this.data.add(last,  b);  [CE]  cannot  find  symbol  b  [CONTEXT]    if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {    [BUGGY]  this.data.add(last,  b);  [BUGGY]    this.data.add(item);  added  =  true;  }  else  {  int  index  =  Collections.binarySearch(this.data,  item);  if  (index  <  0)  {  this.data.add(-index  -  1,  item);  added  =  true;  }  else  {  StringBuffer  b  =  new  StringBuffer();  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	515	515	1	replace	this.data.add(last,  b);	      fireSeriesChanged();    	non-compiled	[CE]  cannot  find  symbol  b	1371	None
9818	[BUG]  [BUGGY]  this.data  =  new  java.util.ArrayList(name.size());  [CE]  cannot  find  symbol  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;    [BUGGY]  this.data  =  new  java.util.ArrayList(name.size());  [BUGGY]    this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	178	178	1	replace	this.data  =  new  java.util.ArrayList(name.size());	      this.data    =    new    ArrayList(name.size());    	non-compiled	[CE]  cannot  find  symbol	6783	None
9841	[BUG]  [BUGGY]  startIndex  =  getIndex(startIndex,  endIndex);  [CE]  illegal  start  of  type  [CONTEXT]    }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  emptyRange  =  true;  }    [BUGGY]  startIndex  =  getIndex(startIndex,  endIndex);  [BUGGY]    if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  }  else  {  return  createCopy(startIndex,  endIndex);  }  }  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	947	947	1	replace	startIndex  =  getIndex(startIndex,  endIndex);	      startIndex    =    getIndex(startIndex);    	non-compiled	[CE]  illegal  start  of  type	5582	None
9865	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]    }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  removeAgedItems(false);//  remove  old  items  if  necessary,  but      [BUGGY]      fireSeriesChanged();  fireSeriesChanged();  [BUGGY]    if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	545	545	1	add	        fireSeriesChanged();    fireSeriesChanged();	  	compilable	  [FE]  IllegalArgumentException	2377	1
9866	[BUG]  [BUGGY]      fireSeriesChanged();  fireSeriesChanged();  [FE]  IllegalArgumentException  [CONTEXT]    }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  removeAgedItems(false);//  remove  old  items  if  necessary,  but      [BUGGY]      fireSeriesChanged();  fireSeriesChanged();  [BUGGY]    if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	545	545	1	replace	        fireSeriesChanged();    fireSeriesChanged();	  	compilable	  [FE]  IllegalArgumentException	2377	1
9866	[BUG]  [BUGGY]      fireSeriesChanged();  if(notify)  {  fireSeriesChanged();  [CE]  illegal  start  of  expression  [CONTEXT]    }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  removeAgedItems(false);//  remove  old  items  if  necessary,  but      [BUGGY]      fireSeriesChanged();  if(notify)  {  fireSeriesChanged();  [BUGGY]    if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	545	545	1	replace	        fireSeriesChanged();    if(notify)  {  fireSeriesChanged();	  	non-compiled	[CE]  illegal  start  of  expression	2377	None
9867	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]    }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  removeAgedItems(false);//  remove  old  items  if  necessary,  but      [BUGGY]      fireSeriesChanged();  if(notify)  {  fireSeriesChanged();  }  [BUGGY]    if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	545	545	1	add	        fireSeriesChanged();    if(notify)  {  fireSeriesChanged();  }	  	compilable	  [FE]  IllegalArgumentException	2377	1
9868	[BUG]  [BUGGY]      fireSeriesChanged();  if(notify)  {  fireSeriesChanged();  }  [FE]  IllegalArgumentException  [CONTEXT]    }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  removeAgedItems(false);//  remove  old  items  if  necessary,  but      [BUGGY]      fireSeriesChanged();  if(notify)  {  fireSeriesChanged();  }  [BUGGY]    if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	545	545	1	replace	        fireSeriesChanged();    if(notify)  {  fireSeriesChanged();  }	  	compilable	  [FE]  IllegalArgumentException	2377	1
9889	[BUG]  [BUGGY]  item  =  getTimePeriod(getItemCount()  -  1);  [CE]  no  suitable  constructor  found  for  Series()  [CONTEXT]    public  TimeSeries(Comparable  name)  {    [BUGGY]  item  =  getTimePeriod(getItemCount()  -  1);  [BUGGY]    this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,    Day.class);  Day.class);  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Comparable)  Comparable  name  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.4082482904638631	142	143	1	replace	item  =  getTimePeriod(getItemCount()  -  1);	      this(name,    DEFAULT_DOMAIN_DESCRIPTION,    DEFAULT_RANGE_DESCRIPTION,    Date.class);    	non-compiled	[CE]  no  suitable  constructor  found  for  Series()	723	None
9890	[BUG]  [BUGGY]  item  =  getTimePeriod(getItemCount()  /  1);  [CE]  no  suitable  constructor  found  for  Series()  [CONTEXT]    public  TimeSeries(Comparable  name)  {    [BUGGY]  item  =  getTimePeriod(getItemCount()  /  1);  [BUGGY]    this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,    Day.class);  Day.class);  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Comparable)  Comparable  name  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.4082482904638631	142	143	1	replace	item  =  getTimePeriod(getItemCount()  /  1);	      this(name,    DEFAULT_DOMAIN_DESCRIPTION,    DEFAULT_RANGE_DESCRIPTION,    Date.class);    	non-compiled	[CE]  no  suitable  constructor  found  for  Series()	723	None
9913	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]    b.append(this.timePeriodClass.getName());  b.append(   ".   ");  throw  new  SeriesException(b.toString());  }  boolean  added  =  false;  int  count  =  getItemCount();  if  (count  ==  0)  {  this.data.add(item);    [BUGGY]  added  =  false;  added  =  false;  [BUGGY]    }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  added  =  true;  }  else  {  int  index  =  Collections.binarySearch(this.data,  item);  if  (index  <  0)  {  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	510	510	1	add	added    =    false;    added  =  false;	  	compilable	  [FE]  IllegalArgumentException	1490	1
9914	[BUG]  [BUGGY]  added  =  false;  added  =  false;  [FE]  IllegalArgumentException  [CONTEXT]    b.append(this.timePeriodClass.getName());  b.append(   ".   ");  throw  new  SeriesException(b.toString());  }  boolean  added  =  false;  int  count  =  getItemCount();  if  (count  ==  0)  {  this.data.add(item);    [BUGGY]  added  =  false;  added  =  false;  [BUGGY]    }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  added  =  true;  }  else  {  int  index  =  Collections.binarySearch(this.data,  item);  if  (index  <  0)  {  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	510	510	1	replace	added    =    false;    added  =  false;	  	compilable	  [FE]  IllegalArgumentException	1490	1
9914	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]    b.append(this.timePeriodClass.getName());  b.append(   ".   ");  throw  new  SeriesException(b.toString());  }  boolean  added  =  false;  int  count  =  getItemCount();  if  (count  ==  0)  {  this.data.add(item);    [BUGGY]  added  =  false;  added  =  true;  [BUGGY]    }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  added  =  true;  }  else  {  int  index  =  Collections.binarySearch(this.data,  item);  if  (index  <  0)  {  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	510	510	1	add	added    =    false;    added  =  true;	  	compilable	  [FE]  IllegalArgumentException	1490	1
9915	[BUG]  [BUGGY]  added  =  false;  added  =  true;  [FE]  IllegalArgumentException  [CONTEXT]    b.append(this.timePeriodClass.getName());  b.append(   ".   ");  throw  new  SeriesException(b.toString());  }  boolean  added  =  false;  int  count  =  getItemCount();  if  (count  ==  0)  {  this.data.add(item);    [BUGGY]  added  =  false;  added  =  true;  [BUGGY]    }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  added  =  true;  }  else  {  int  index  =  Collections.binarySearch(this.data,  item);  if  (index  <  0)  {  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	510	510	1	replace	added    =    false;    added  =  true;	  	compilable	  [FE]  IllegalArgumentException	1490	1
9915	[BUG]  [BUGGY]  added  =  false;  add  =  false;  [CE]  cannot  find  symbol  add  [CONTEXT]    b.append(this.timePeriodClass.getName());  b.append(   ".   ");  throw  new  SeriesException(b.toString());  }  boolean  added  =  false;  int  count  =  getItemCount();  if  (count  ==  0)  {  this.data.add(item);    [BUGGY]  added  =  false;  add  =  false;  [BUGGY]    }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  added  =  true;  }  else  {  int  index  =  Collections.binarySearch(this.data,  item);  if  (index  <  0)  {  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	510	510	1	replace	added    =    false;    add  =  false;	  	non-compiled	[CE]  cannot  find  symbol  add	1490	None
9986	[BUG]  [BUGGY]  while(item.getPeriod().compareTo(index)>  0)  >>  this.data.add(item);  [CE]  illegal  start  of  expression  [CONTEXT]    b.append(this.timePeriodClass.getName());  b.append(   ".   ");  throw  new  SeriesException(b.toString());  }  boolean  added  =  false;  int  count  =  getItemCount();  if  (count  ==  0)  {  this.data.add(item);    [BUGGY]  while(item.getPeriod().compareTo(index)>  0)  >>  this.data.add(item);  [BUGGY]    added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  added  =  true;  }  else  {  int  index  =  Collections.binarySearch(this.data,  item);  if  (index  <  0)  {  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	510	510	1	replace	while(item.getPeriod().compareTo(index)>  0)  >>  this.data.add(item);	      while(item.getPeriod().compareTo(index)>    0)    {    this.data.add(item);    	non-compiled	[CE]  illegal  start  of  expression	3171	None
10081	[BUG]  [BUGGY]  this.data.add(period,  value,  true);  [CE]  no  suitable  method  found  for  add(RegularTimePeriod,Number,boolean)  [CONTEXT]    public  void  add(RegularTimePeriod  period,  Number  value)  {      [BUGGY]  this.data.add(period,  value,  true);  [BUGGY]    add(period,  value,  true);  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  Number  value  [VARIABLES]  boolean  Number  value  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	588	588	1	replace	this.data.add(period,  value,  true);	      this.data.add(period,    value);    	non-compiled	[CE]  no  suitable  method  found  for  add(RegularTimePeriod,Number,boolean)	1105	None
10082	[BUG]  [BUGGY]  this.data.add(period,  value,  false);  [CE]  no  suitable  method  found  for  add(RegularTimePeriod,Number,boolean)  [CONTEXT]    public  void  add(RegularTimePeriod  period,  Number  value)  {      [BUGGY]  this.data.add(period,  value,  false);  [BUGGY]    add(period,  value,  true);  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  Number  value  [VARIABLES]  boolean  Number  value  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	588	588	1	replace	this.data.add(period,  value,  false);	      this.data.add(period,    value);    	non-compiled	[CE]  no  suitable  method  found  for  add(RegularTimePeriod,Number,boolean)	1105	None
10106	[BUG]  [BUGGY]  item.setValue(period,  value);  [CE]  method  setValue  in  class  TimeSeriesDataItem  cannot  be  applied  to  given  types;  [CONTEXT]    public  void  add(RegularTimePeriod  period,  double  value,  boolean  notify)  {  TimeSeriesDataItem  item  =  new  TimeSeriesDataItem(period,  value);    [BUGGY]  item.setValue(period,  value);  [BUGGY]    add(item,  notify);  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  double  value  boolean  notify  [VARIABLES]  boolean  notify  double  value  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.2581988897471611	575	575	1	replace	item.setValue(period,  value);	      item.setValue(value);    	non-compiled	[CE]  method  setValue  in  class  TimeSeriesDataItem  cannot  be  applied  to  given  types;	1682	None
10154	[BUG]  [BUGGY]  while(count  >  0)  {  this.data.contains(item);  [CE]  'else'  without  'if'  [CONTEXT]    b.append(item.getPeriod().getClass().getName());  b.append(   ",  but  the  TimeSeries  is  expecting  an  instance  of     ");  b.append(this.timePeriodClass.getName());  b.append(   ".   ");  throw  new  SeriesException(b.toString());  }  boolean  added  =  false;  int  count  =  getItemCount();    [BUGGY]  while(count  >  0)  {  this.data.contains(item);  [BUGGY]    if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  added  =  true;  }  else  {  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	508	508	1	replace	while(count  >  0)  {  this.data.contains(item);	      while(count    >    0)    {    this.data.add(item);    	non-compiled	[CE]  'else'  without  'if'	145	None
10178	[BUG]  [BUGGY]  this.data  =  createList(name,  DEFAULT_DOMAIN_DESCRIPTION,  timePeriodClass);  [CE]  illegal  start  of  expression  [CONTEXT]    public  TimeSeries(Comparable  name,  Class  timePeriodClass)  {  this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  timePeriodClass);    [BUGGY]  this.data  =  createList(name,  DEFAULT_DOMAIN_DESCRIPTION,  timePeriodClass);  [BUGGY]    }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	157	157	1	replace	this.data  =  createList(name,  DEFAULT_DOMAIN_DESCRIPTION,  timePeriodClass);	      this.data    =    createList(name,    timePeriodClass);    	non-compiled	[CE]  illegal  start  of  expression	7743	None
10201	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]    throws  CloneNotSupportedException  {  if  (start  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'start'  argument.   ");  }  if  (end  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'end'  argument.   ");  }    [BUGGY]      if(start.compareTo(start)>  0)  {  throw  new  IllegalArgumentException(   "Requires  start  on  or  before  end.   ");  }  if(start.compareTo(start)>  0)  {  throw  new  IllegalArgumentException(   "Requires  start  on  or  before  end.   ");  }  [BUGGY]    if  (start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException(     "Requires  start  on  or  before  end.   ");  }  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	927	927	1	add	        if(start.compareTo(start)>    0)    {    throw    new    IllegalArgumentException(   "Requires    start    on    or    before    end.   ");    }    if(start.compareTo(start)>  0)  {  throw  new  IllegalArgumentException(   "Requires  start  on  or  before  end.   ");  }	  	compilable	  [FE]  IllegalArgumentException	913	1
10202	[BUG]  [BUGGY]      if(start.compareTo(start)>  0)  {  throw  new  IllegalArgumentException(   "Requires  start  on  or  before  end.   ");  }  if(start.compareTo(start)>  0)  {  throw  new  IllegalArgumentException(   "Requires  start  on  or  before  end.   ");  }  [FE]  IllegalArgumentException  [CONTEXT]    throws  CloneNotSupportedException  {  if  (start  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'start'  argument.   ");  }  if  (end  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'end'  argument.   ");  }    [BUGGY]      if(start.compareTo(start)>  0)  {  throw  new  IllegalArgumentException(   "Requires  start  on  or  before  end.   ");  }  if(start.compareTo(start)>  0)  {  throw  new  IllegalArgumentException(   "Requires  start  on  or  before  end.   ");  }  [BUGGY]    if  (start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException(     "Requires  start  on  or  before  end.   ");  }  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	927	927	1	replace	        if(start.compareTo(start)>    0)    {    throw    new    IllegalArgumentException(   "Requires    start    on    or    before    end.   ");    }    if(start.compareTo(start)>  0)  {  throw  new  IllegalArgumentException(   "Requires  start  on  or  before  end.   ");  }	  	compilable	  [FE]  IllegalArgumentException	913	1
10249	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]    throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(   "Requires  start  >=  0.   ");  }    [BUGGY]      if(end  <  start)  {  throw  new  IllegalArgumentException(   "   ");  }  if(end  <  start)  {  throw  new  IllegalArgumentException(   "   ");  }  [BUGGY]    if  (end  <  start)  {  throw  new  IllegalArgumentException(   "Requires  start  <=  end.   ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	882	882	1	add	        if(end    <    start)    {    throw    new    IllegalArgumentException(   "   ");    }    if(end  <  start)  {  throw  new  IllegalArgumentException(   "   ");  }	  	compilable	  [FE]  IllegalArgumentException	2761	1
10250	[BUG]  [BUGGY]      if(end  <  start)  {  throw  new  IllegalArgumentException(   "   ");  }  if(end  <  start)  {  throw  new  IllegalArgumentException(   "   ");  }  [FE]  IllegalArgumentException  [CONTEXT]    throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(   "Requires  start  >=  0.   ");  }    [BUGGY]      if(end  <  start)  {  throw  new  IllegalArgumentException(   "   ");  }  if(end  <  start)  {  throw  new  IllegalArgumentException(   "   ");  }  [BUGGY]    if  (end  <  start)  {  throw  new  IllegalArgumentException(   "Requires  start  <=  end.   ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	882	882	1	replace	        if(end    <    start)    {    throw    new    IllegalArgumentException(   "   ");    }    if(end  <  start)  {  throw  new  IllegalArgumentException(   "   ");  }	  	compilable	  [FE]  IllegalArgumentException	2761	1
10274	[BUG]  [BUGGY]  Class  item  =  item.getTimePeriodClass();  [CE]  illegal  start  of  type  [CONTEXT]    public  void  add(TimeSeriesDataItem  item,  boolean  notify)  {  if  (item  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'item'  argument.   ");  }    [BUGGY]  Class  item  =  item.getTimePeriodClass();  [BUGGY]    if  (!item.getPeriod().getClass().equals(this.timePeriodClass))  {  StringBuffer  b  =  new  StringBuffer();  b.append(   "You  are  trying  to  add  data  where  the  time  period  class     ");  b.append(   "is     ");  b.append(item.getPeriod().getClass().getName());  b.append(   ",  but  the  TimeSeries  is  expecting  an  instance  of     ");  b.append(this.timePeriodClass.getName());  b.append(   ".   ");  throw  new  SeriesException(b.toString());  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	494	494	1	replace	Class  item  =  item.getTimePeriodClass();	      Class    this.timePeriodClass    =    item.getTimePeriodClass();    	non-compiled	[CE]  illegal  start  of  type	2330	None
10346	[BUG]  [BUGGY]  long  latest  =  getTimePeriod().getSerialIndex();  [CE]  method  getTimePeriod  in  class  TimeSeries  cannot  be  applied  to  given  types;  [CONTEXT]    public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {    [BUGGY]  long  latest  =  getTimePeriod().getSerialIndex();  [BUGGY]    boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())  >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	741	741	1	replace	long  latest  =  getTimePeriod().getSerialIndex();	      	non-compiled	[CE]  method  getTimePeriod  in  class  TimeSeries  cannot  be  applied  to  given  types;	195	None
10369	[BUG]  [BUGGY]  this.data.add(-count  -  1,  item);  [CE]  no  suitable  constructor  found  for  Series()  [CONTEXT]    public  TimeSeries(Comparable  name)  {    [BUGGY]  this.data.add(-count  -  1,  item);  [BUGGY]    this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,    Day.class);  Day.class);  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Comparable)  Comparable  name  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.4082482904638631	142	143	1	replace	this.data.add(-count  -  1,  item);	      this(name,    DEFAULT_DOMAIN_DESCRIPTION,    DEFAULT_RANGE_DESCRIPTION,    0);    	non-compiled	[CE]  no  suitable  constructor  found  for  Series()	722	None
10370	[BUG]  [BUGGY]  this.data.add(-itemCount  -  1,  item);  [CE]  no  suitable  constructor  found  for  Series()  [CONTEXT]    public  TimeSeries(Comparable  name)  {    [BUGGY]  this.data.add(-itemCount  -  1,  item);  [BUGGY]    this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,    Day.class);  Day.class);  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Comparable)  Comparable  name  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.4082482904638631	142	143	1	replace	this.data.add(-itemCount  -  1,  item);	      this(name,    DEFAULT_DOMAIN_DESCRIPTION,    DEFAULT_RANGE_DESCRIPTION,    0);    	non-compiled	[CE]  no  suitable  constructor  found  for  Series()	722	None
10417	[BUG]  [BUGGY]  getDataItem(index).getPeriodClass();  [CE]  cannot  find  symbol  [CONTEXT]    public  RegularTimePeriod  getTimePeriod(int  index)  {    [BUGGY]  getDataItem(index).getPeriodClass();  [BUGGY]    return  getDataItem(index).getPeriod();  }  [CLASS]  TimeSeries  [METHOD]  getTimePeriod  [RETURN_TYPE]  RegularTimePeriod  int  index  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  long  maximumItemAge  periods  serialVersionUID  int  count  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	372	372	1	replace	getDataItem(index).getPeriodClass();	      getDataItem(index).getPeriod();    	non-compiled	[CE]  cannot  find  symbol	2594	None
10442	[BUG]  [BUGGY]  this.maximumItemCount  =  BigDecimal.MAX_VALUE;  [CE]  cannot  find  symbol  BigDecimal  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();    [BUGGY]  this.maximumItemCount  =  BigDecimal.MAX_VALUE;  [BUGGY]    this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	179	179	1	replace	this.maximumItemCount  =  BigDecimal.MAX_VALUE;	  this.maximumItemCount    =    Long.MAX_VALUE;    	non-compiled	[CE]  cannot  find  symbol  BigDecimal	1849	None
10466	[BUG]  [BUGGY]  this.data.add(item);  notifyListeners(new  DataItem(this.data,  getPeriodClass()));  [CE]  cannot  find  symbol  [CONTEXT]    if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  removeAgedItems(false);//  remove  old  items  if  necessary,  but    if  (notify)  {    [BUGGY]  this.data.add(item);  notifyListeners(new  DataItem(this.data,  getPeriodClass()));  [BUGGY]    fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	546	546	1	replace	this.data.add(item);  notifyListeners(new  DataItem(this.data,  getPeriodClass()));	      this.data.add(item);    notifyListeners(new    DataItem(item,    getPeriodClass()));    	non-compiled	[CE]  cannot  find  symbol	663	None
10489	[BUG]  [BUGGY]  TimeSeriesDataItem  item  =  getDataItem(period);  add(value,  notify);  [CE]  no  suitable  method  found  for  add(double,boolean)  [CONTEXT]    public  void  add(RegularTimePeriod  period,  double  value,  boolean  notify)  {      [BUGGY]  TimeSeriesDataItem  item  =  getDataItem(period);  add(value,  notify);  [BUGGY]    add(item,  notify);  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  double  value  boolean  notify  [VARIABLES]  boolean  notify  double  value  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.2581988897471611	574	574	1	replace	TimeSeriesDataItem  item  =  getDataItem(period);  add(value,  notify);	      	non-compiled	[CE]  no  suitable  method  found  for  add(double,boolean)	1755	None
10490	[BUG]  [BUGGY]  TimeSeriesDataItem  item  =  getDataItem(period,  value);  [CE]  no  suitable  method  found  for  getDataItem(RegularTimePeriod,double)  [CONTEXT]    public  void  add(RegularTimePeriod  period,  double  value,  boolean  notify)  {      [BUGGY]  TimeSeriesDataItem  item  =  getDataItem(period,  value);  [BUGGY]    add(item,  notify);  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  double  value  boolean  notify  [VARIABLES]  boolean  notify  double  value  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.2581988897471611	574	574	1	replace	TimeSeriesDataItem  item  =  getDataItem(period,  value);	      	non-compiled	[CE]  no  suitable  method  found  for  getDataItem(RegularTimePeriod,double)	1755	None
10513	[BUG]  [BUGGY]  this.data.add(new  TimeSeries(name,  domain,  range,  timePeriodClass);  [CE]  ')'  expected  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();    [BUGGY]  this.data.add(new  TimeSeries(name,  domain,  range,  timePeriodClass);  [BUGGY]    this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	179	179	1	replace	this.data.add(new  TimeSeries(name,  domain,  range,  timePeriodClass);	      this.data.add(new    TimeSeries(name),    domain,    range,    timePeriodClass);    	non-compiled	[CE]  ')'  expected	842	None
10537	[BUG]  [BUGGY]  for(TimeSeriesDataItem  item  :  copy.data)  {  TimeSeriesDataItem  item  =(TimeSeriesDataItem)super.clone();  item.getDataItem(0)  ==  null;  if(start  >  0)  {  throw  new  IllegalArgumentException( "Requires  start  >=  0.  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [CONTEXT]    throws  CloneNotSupportedException  {    [BUGGY]  for(TimeSeriesDataItem  item  :  copy.data)  {  TimeSeriesDataItem  item  =(TimeSeriesDataItem)super.clone();  item.getDataItem(0)  ==  null;  if(start  >  0)  {  throw  new  IllegalArgumentException( "Requires  start  >=  0.  [BUGGY]    if  (start  <  0)  {  throw  new  IllegalArgumentException(   "Requires  start  >=  0.   ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(   "Requires  start  <=  end.   ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	879	879	1	replace	for(TimeSeriesDataItem  item  :  copy.data)  {  TimeSeriesDataItem  item  =(TimeSeriesDataItem)super.clone();  item.getDataItem(0)  ==  null;  if(start  >  0)  {  throw  new  IllegalArgumentException( "Requires  start  >=  0.	      for(TimeSeriesDataItem    item    :    copy.data)    {    TimeSeriesDataItem    item    =(TimeSeriesDataItem)super.clone();    item.getDataItem(0)    ==    null;    if(start    <    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	1382	None
10538	[BUG]  [BUGGY]  for(TimeSeriesDataItem  item  :  copy.data)  {  TimeSeriesDataItem  item  =(TimeSeriesDataItem)super.clone();  item.getDataItem(1)  ==  null;  if(start  >  0)  {  throw  new  IllegalArgumentException( "Requires  start  >=  0.  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [CONTEXT]    throws  CloneNotSupportedException  {    [BUGGY]  for(TimeSeriesDataItem  item  :  copy.data)  {  TimeSeriesDataItem  item  =(TimeSeriesDataItem)super.clone();  item.getDataItem(1)  ==  null;  if(start  >  0)  {  throw  new  IllegalArgumentException( "Requires  start  >=  0.  [BUGGY]    if  (start  <  0)  {  throw  new  IllegalArgumentException(   "Requires  start  >=  0.   ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(   "Requires  start  <=  end.   ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	879	879	1	replace	for(TimeSeriesDataItem  item  :  copy.data)  {  TimeSeriesDataItem  item  =(TimeSeriesDataItem)super.clone();  item.getDataItem(1)  ==  null;  if(start  >  0)  {  throw  new  IllegalArgumentException( "Requires  start  >=  0.	      for(TimeSeriesDataItem    item    :    copy.data)    {    TimeSeriesDataItem    item    =(TimeSeriesDataItem)super.clone();    item.getDataItem(0)    ==    null;    if(start    <    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	1382	None
10561	[BUG]  [BUGGY]  this.data.add(-last);  [CE]  illegal  start  of  type  [CONTEXT]    public  void  add(TimeSeriesDataItem  item,  boolean  notify)  {    [BUGGY]  this.data.add(-last);  [BUGGY]    throw  new  IllegalArgumentException(   "Null  'item'  argument.   ");  }  if  (!item.getPeriod().getClass().equals(this.timePeriodClass))  {  StringBuffer  b  =  new  StringBuffer();  b.append(   "You  are  trying  to  add  data  where  the  time  period  class     ");  b.append(   "is     ");  b.append(item.getPeriod().getClass().getName());  b.append(   ",  but  the  TimeSeries  is  expecting  an  instance  of     ");  b.append(this.timePeriodClass.getName());  b.append(   ".   ");  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	491	491	1	replace	this.data.add(-last);	      	non-compiled	[CE]  illegal  start  of  type	483	None
10562	[BUG]  [BUGGY]  this.data.add(-item,  last);  [CE]  illegal  start  of  type  [CONTEXT]    public  void  add(TimeSeriesDataItem  item,  boolean  notify)  {    [BUGGY]  this.data.add(-item,  last);  [BUGGY]    throw  new  IllegalArgumentException(   "Null  'item'  argument.   ");  }  if  (!item.getPeriod().getClass().equals(this.timePeriodClass))  {  StringBuffer  b  =  new  StringBuffer();  b.append(   "You  are  trying  to  add  data  where  the  time  period  class     ");  b.append(   "is     ");  b.append(item.getPeriod().getClass().getName());  b.append(   ",  but  the  TimeSeries  is  expecting  an  instance  of     ");  b.append(this.timePeriodClass.getName());  b.append(   ".   ");  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	491	491	1	replace	this.data.add(-item,  last);	      	non-compiled	[CE]  illegal  start  of  type	483	None
10585	[BUG]  [BUGGY]  this.data.add(item,  notify,  count);  [CE]  no  suitable  method  found  for  add(TimeSeriesDataItem,boolean,int)  [CONTEXT]    b.append(   ",  but  the  TimeSeries  is  expecting  an  instance  of     ");  b.append(this.timePeriodClass.getName());  b.append(   ".   ");  throw  new  SeriesException(b.toString());  }  boolean  added  =  false;  int  count  =  getItemCount();  if  (count  ==  0)  {    [BUGGY]  this.data.add(item,  notify,  count);  [BUGGY]    added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  added  =  true;  }  else  {  int  index  =  Collections.binarySearch(this.data,  item);  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	509	509	1	replace	this.data.add(item,  notify,  count);	  this.data.add(item,    notify);    	non-compiled	[CE]  no  suitable  method  found  for  add(TimeSeriesDataItem,boolean,int)	1298	None
10586	[BUG]  [BUGGY]  this.data.add(item,  alert,  count);  [CE]  cannot  find  symbol  alert  [CONTEXT]    b.append(   ",  but  the  TimeSeries  is  expecting  an  instance  of     ");  b.append(this.timePeriodClass.getName());  b.append(   ".   ");  throw  new  SeriesException(b.toString());  }  boolean  added  =  false;  int  count  =  getItemCount();  if  (count  ==  0)  {    [BUGGY]  this.data.add(item,  alert,  count);  [BUGGY]    added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  added  =  true;  }  else  {  int  index  =  Collections.binarySearch(this.data,  item);  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	509	509	1	replace	this.data.add(item,  alert,  count);	  this.data.add(item,    notify);    	non-compiled	[CE]  cannot  find  symbol  alert	1298	None
10609	[BUG]  [BUGGY]  this.data  =  new  java.util.ArrayList(this.domain,  this.range,  timePeriodClass);  [CE]  no  suitable  constructor  found  for  ArrayList(String,String,Class)  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;    [BUGGY]  this.data  =  new  java.util.ArrayList(this.domain,  this.range,  timePeriodClass);  [BUGGY]    this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	178	178	1	replace	this.data  =  new  java.util.ArrayList(this.domain,  this.range,  timePeriodClass);	  this.data    =    new    java.util.ArrayList(this.domain,    this.range);    	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayList(String,String,Class)	1274	None
10610	[BUG]  [BUGGY]  this.data  =  new  java.util.ArrayList(this.domain,  this.range,  this.timePeriodClass);  [CE]  no  suitable  constructor  found  for  ArrayList(String,String,Class)  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;    [BUGGY]  this.data  =  new  java.util.ArrayList(this.domain,  this.range,  this.timePeriodClass);  [BUGGY]    this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	178	178	1	replace	this.data  =  new  java.util.ArrayList(this.domain,  this.range,  this.timePeriodClass);	  this.data    =    new    java.util.ArrayList(this.domain,    this.range);    	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayList(String,String,Class)	1274	None
10634	[BUG]  [BUGGY]  if(period  ==  null  ||  this.period.getItemCount()  <  0)  {  [CE]  cannot  find  symbol  period  [CONTEXT]    public  int  getIndex(RegularTimePeriod  period)  {    [BUGGY]  if(period  ==  null  ||  this.period.getItemCount()  <  0)  {  [BUGGY]    throw  new  IllegalArgumentException(   "Null  'period'  argument.   ");  }  TimeSeriesDataItem  dummy  =  new  TimeSeriesDataItem(  period,  Integer.MIN_VALUE);  return  Collections.binarySearch(this.data,  dummy);  }  [CLASS]  TimeSeries  [METHOD]  getIndex  [RETURN_TYPE]  int  RegularTimePeriod  period  [VARIABLES]  boolean  TimeSeriesDataItem  dummy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.3333333333333333	430	430	1	replace	if(period  ==  null  ||  this.period.getItemCount()  <  0)  {	  if(period    ==    null    ||    period.getItemCount()    <    0)    {    	non-compiled	[CE]  cannot  find  symbol  period	3722	None
10657	[BUG]  [BUGGY]  if(added)  {  if(item.getPeriod().compareTo( "   ")>  0)  {  this.data.add(item);  }  [CE]  illegal  start  of  expression  [CONTEXT]    b.append(this.timePeriodClass.getName());  b.append(   ".   ");  throw  new  SeriesException(b.toString());  }  boolean  added  =  false;  int  count  =  getItemCount();  if  (count  ==  0)  {  this.data.add(item);    [BUGGY]  if(added)  {  if(item.getPeriod().compareTo( "   ")>  0)  {  this.data.add(item);  }  [BUGGY]    added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  added  =  true;  }  else  {  int  index  =  Collections.binarySearch(this.data,  item);  if  (index  <  0)  {  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	510	510	1	replace	if(added)  {  if(item.getPeriod().compareTo( "   ")>  0)  {  this.data.add(item);  }	      if(notify)    {    if(item.getPeriod().compareTo(   "   ")>    0)    {    this.data.add(item);    }    	non-compiled	[CE]  illegal  start  of  expression	5343	None
10706	[BUG]  [BUGGY]  this.maximumItemCount  =  getMinimumItemCount();  [CE]  cannot  find  symbol  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;    [BUGGY]  this.maximumItemCount  =  getMinimumItemCount();  [BUGGY]    this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	178	178	1	replace	this.maximumItemCount  =  getMinimumItemCount();	      this.maximumItemCount    =    getMaximumItemCount();    	non-compiled	[CE]  cannot  find  symbol	650	None
10753	[BUG]  [BUGGY]  if(endIndex  <  0)  {  for(TimeSeries  start  :(TimeSeries)this.data.get(startIndex));  if(endIndex  >=  0)  {  emptyRange  =  true;  }  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [CONTEXT]    int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period    [BUGGY]  if(endIndex  <  0)  {  for(TimeSeries  start  :(TimeSeries)this.data.get(startIndex));  if(endIndex  >=  0)  {  emptyRange  =  true;  }  [BUGGY]    endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  }  if  (endIndex  <  0)  {  emptyRange  =  true;  }  if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  }  else  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	942	943	1	replace	if(endIndex  <  0)  {  for(TimeSeries  start  :(TimeSeries)this.data.get(startIndex));  if(endIndex  >=  0)  {  emptyRange  =  true;  }	      if(endIndex    <    0)    {    for(TimeSeries    start    :(TimeSeries)this.data.get(startIndex));    if(startIndex    >=    0)    {    emptyRange    =    true;    }    	non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	1129	None
10754	[BUG]  [BUGGY]  if(endIndex  >=  0)  {  for(TimeSeries  start  :(TimeSeries)this.data.get(startIndex));  if(endIndex  >=  0)  {  emptyRange  =  true;  }  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [CONTEXT]    int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period    [BUGGY]  if(endIndex  >=  0)  {  for(TimeSeries  start  :(TimeSeries)this.data.get(startIndex));  if(endIndex  >=  0)  {  emptyRange  =  true;  }  [BUGGY]    endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  }  if  (endIndex  <  0)  {  emptyRange  =  true;  }  if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  }  else  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	942	943	1	replace	if(endIndex  >=  0)  {  for(TimeSeries  start  :(TimeSeries)this.data.get(startIndex));  if(endIndex  >=  0)  {  emptyRange  =  true;  }	      if(endIndex    <    0)    {    for(TimeSeries    start    :(TimeSeries)this.data.get(startIndex));    if(startIndex    >=    0)    {    emptyRange    =    true;    }    	non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	1129	None
10777	[BUG]  [BUGGY]  this.timePeriodClass  =  timePeriodClass?  timePeriodClass  :  null;  [CE]  incompatible  types  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();    [BUGGY]  this.timePeriodClass  =  timePeriodClass?  timePeriodClass  :  null;  [BUGGY]    this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	179	179	1	replace	this.timePeriodClass  =  timePeriodClass?  timePeriodClass  :  null;	      this.data.add(new    TimeSeries(name),    domain,    range,    timePeriodClass);    	non-compiled	[CE]  incompatible  types	842	None
10778	[BUG]  [BUGGY]  this.timePeriodClass  =  timePeriodClass?  null  :  timePeriodClass;  [CE]  incompatible  types  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();    [BUGGY]  this.timePeriodClass  =  timePeriodClass?  null  :  timePeriodClass;  [BUGGY]    this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	179	179	1	replace	this.timePeriodClass  =  timePeriodClass?  null  :  timePeriodClass;	      this.data.add(new    TimeSeries(name),    domain,    range,    timePeriodClass);    	non-compiled	[CE]  incompatible  types	842	None
10802	[BUG]  [BUGGY]  while(this.data  ==  null)  {  this.data  =  new  ArrayList  <  TimePeriodClass>();  [CE]  generics  are  not  supported  in  -source  1.4  [CONTEXT]    public  int  getItemCount()  {    [BUGGY]  while(this.data  ==  null)  {  this.data  =  new  ArrayList  <  TimePeriodClass>();  [BUGGY]    return  this.data.size();  }  [CLASS]  TimeSeries  [METHOD]  getItemCount  [RETURN_TYPE]  int  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	240	240	1	replace	while(this.data  ==  null)  {  this.data  =  new  ArrayList  <  TimePeriodClass>();	      while(this.data!=    null)    {    this.data    =    new    ArrayList    <    TimePeriodClass>();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	1707	None
10825	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]    public  void  add(TimeSeriesDataItem  item,  boolean  notify)  {    [BUGGY]      if(item  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'item'  argument.   ");  }  if(item  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'item'  argument.   ");  }  [BUGGY]    if  (item  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'item'  argument.   ");  }  if  (!item.getPeriod().getClass().equals(this.timePeriodClass))  {  StringBuffer  b  =  new  StringBuffer();  b.append(   "You  are  trying  to  add  data  where  the  time  period  class     ");  b.append(   "is     ");  b.append(item.getPeriod().getClass().getName());  b.append(   ",  but  the  TimeSeries  is  expecting  an  instance  of     ");  b.append(this.timePeriodClass.getName());  b.append(   ".   ");  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	491	491	1	add	        if(item    ==    null)    {    throw    new    IllegalArgumentException(   "Null    'item'    argument.   ");    }    if(item  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'item'  argument.   ");  }	  	compilable	  [FE]  IllegalArgumentException	817	1
10826	[BUG]  [BUGGY]      if(item  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'item'  argument.   ");  }  if(item  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'item'  argument.   ");  }  [FE]  IllegalArgumentException  [CONTEXT]    public  void  add(TimeSeriesDataItem  item,  boolean  notify)  {    [BUGGY]      if(item  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'item'  argument.   ");  }  if(item  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'item'  argument.   ");  }  [BUGGY]    if  (item  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'item'  argument.   ");  }  if  (!item.getPeriod().getClass().equals(this.timePeriodClass))  {  StringBuffer  b  =  new  StringBuffer();  b.append(   "You  are  trying  to  add  data  where  the  time  period  class     ");  b.append(   "is     ");  b.append(item.getPeriod().getClass().getName());  b.append(   ",  but  the  TimeSeries  is  expecting  an  instance  of     ");  b.append(this.timePeriodClass.getName());  b.append(   ".   ");  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	491	491	1	replace	        if(item    ==    null)    {    throw    new    IllegalArgumentException(   "Null    'item'    argument.   ");    }    if(item  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'item'  argument.   ");  }	  	compilable	  [FE]  IllegalArgumentException	817	1
10827	[BUG]  [BUGGY]      if(item  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'item'  argument.   ");  }  if(item  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'item'  argument.   ");  >>  [CE]  illegal  start  of  expression  [CONTEXT]    public  void  add(TimeSeriesDataItem  item,  boolean  notify)  {    [BUGGY]      if(item  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'item'  argument.   ");  }  if(item  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'item'  argument.   ");  >>  [BUGGY]    if  (item  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'item'  argument.   ");  }  if  (!item.getPeriod().getClass().equals(this.timePeriodClass))  {  StringBuffer  b  =  new  StringBuffer();  b.append(   "You  are  trying  to  add  data  where  the  time  period  class     ");  b.append(   "is     ");  b.append(item.getPeriod().getClass().getName());  b.append(   ",  but  the  TimeSeries  is  expecting  an  instance  of     ");  b.append(this.timePeriodClass.getName());  b.append(   ".   ");  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	491	491	1	replace	        if(item    ==    null)    {    throw    new    IllegalArgumentException(   "Null    'item'    argument.   ");    }    if(item  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'item'  argument.   ");  >>	  	non-compiled	[CE]  illegal  start  of  expression	817	None
10849	[BUG]  [BUGGY]  endIndex  =  getIndex(end);  [CE]  illegal  start  of  type  [CONTEXT]    startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }    [BUGGY]  endIndex  =  getIndex(end);  [BUGGY]    if  (endIndex  <  0)  {  emptyRange  =  true;  }  if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  }  else  {  return  createCopy(startIndex,  endIndex);  }  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	944	944	1	replace	endIndex  =  getIndex(end);	      endIndex    =    getIndex(start);    	non-compiled	[CE]  illegal  start  of  type	1179	None
10874	[BUG]  [BUGGY]  while(start!=  null  &&  start.getSeriesCount()  >  0)  {  this.data.add(start);  [CE]  illegal  start  of  expression  [CONTEXT]    throw  new  IllegalArgumentException(   "Null  'start'  argument.   ");  }  if  (end  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'end'  argument.   ");  }  if  (start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException(     "Requires  start  on  or  before  end.   ");  }  boolean  emptyRange  =  false;    [BUGGY]  while(start!=  null  &&  start.getSeriesCount()  >  0)  {  this.data.add(start);  [BUGGY]    int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	932	932	1	replace	while(start!=  null  &&  start.getSeriesCount()  >  0)  {  this.data.add(start);	      while(start    <    null    &&    start.getSeriesCount()    >    0)    {    this.data.add(start);    	non-compiled	[CE]  illegal  start  of  expression	7322	None
10898	[BUG]  [BUGGY]  while(item.getPeriod().compareTo(last)  >>  0)  {  this.data.add(item);  [CE]  'else'  without  'if'  [CONTEXT]    if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);    [BUGGY]  while(item.getPeriod().compareTo(last)  >>  0)  {  this.data.add(item);  [BUGGY]    added  =  true;  }  else  {  int  index  =  Collections.binarySearch(this.data,  item);  if  (index  <  0)  {  this.data.add(-index  -  1,  item);  added  =  true;  }  else  {  StringBuffer  b  =  new  StringBuffer();  b.append(   "You  are  attempting  to  add  an  observation  for     ");  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	516	516	1	replace	while(item.getPeriod().compareTo(last)  >>  0)  {  this.data.add(item);	      while(item.getPeriod().compareTo(last)    <    0)    {    this.data.add(item);    	non-compiled	[CE]  'else'  without  'if'	123	None
10922	[BUG]  [BUGGY]  while(dummy  ==  null)  {  dummy.setValue(period.getValue());  [CE]  illegal  start  of  expression  [CONTEXT]    public  int  getIndex(RegularTimePeriod  period)  {  if  (period  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'period'  argument.   ");  }  TimeSeriesDataItem  dummy  =  new  TimeSeriesDataItem(  period,  Integer.MIN_VALUE);    [BUGGY]  while(dummy  ==  null)  {  dummy.setValue(period.getValue());  [BUGGY]    return  Collections.binarySearch(this.data,  dummy);  }  [CLASS]  TimeSeries  [METHOD]  getIndex  [RETURN_TYPE]  int  RegularTimePeriod  period  [VARIABLES]  boolean  TimeSeriesDataItem  dummy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.3333333333333333	435	435	1	replace	while(dummy  ==  null)  {  dummy.setValue(period.getValue());	      while(dummy!=    null)    {    dummy.setValue(period.getValue());    	non-compiled	[CE]  illegal  start  of  expression	3027	None
10945	[BUG]  [BUGGY]      long  maximum  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  long  maximum  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  [CE]  variable  maximum  is  already  defined  in  method  removeAgedItems(boolean)  [CONTEXT]    public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();    [BUGGY]      long  maximum  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  long  maximum  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  [BUGGY]    boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())  >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	742	742	1	replace	        long    maximum    =    getTimePeriod(getItemCount()    -    1).getSerialIndex();    long  maximum  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();	  	non-compiled	[CE]  variable  maximum  is  already  defined  in  method  removeAgedItems(boolean)	5642	None
10946	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]    public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();    [BUGGY]      long  maximum  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  long  maximal  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  [BUGGY]    boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())  >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	742	742	1	add	        long    maximum    =    getTimePeriod(getItemCount()    -    1).getSerialIndex();    long  maximal  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();	  	compilable	  [FE]  IllegalArgumentException	5642	1
10947	[BUG]  [BUGGY]      long  maximum  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  long  maximal  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  [FE]  IllegalArgumentException  [CONTEXT]    public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();    [BUGGY]      long  maximum  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  long  maximal  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  [BUGGY]    boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())  >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	742	742	1	replace	        long    maximum    =    getTimePeriod(getItemCount()    -    1).getSerialIndex();    long  maximal  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();	  	compilable	  [FE]  IllegalArgumentException	5642	1
10947	[BUG]  [BUGGY]      long  maximum  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  long  maximum  =  getTimePeriod(getItemCount()  +  1).getSerialIndex();  [CE]  variable  maximum  is  already  defined  in  method  removeAgedItems(boolean)  [CONTEXT]    public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();    [BUGGY]      long  maximum  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  long  maximum  =  getTimePeriod(getItemCount()  +  1).getSerialIndex();  [BUGGY]    boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())  >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	742	742	1	replace	        long    maximum    =    getTimePeriod(getItemCount()    -    1).getSerialIndex();    long  maximum  =  getTimePeriod(getItemCount()  +  1).getSerialIndex();	  	non-compiled	[CE]  variable  maximum  is  already  defined  in  method  removeAgedItems(boolean)	5642	None
10969	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]    public  int  getIndex(RegularTimePeriod  period)  {  if  (period  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'period'  argument.   ");  }    [BUGGY]      if(period  ==  null)  {  throw  new  IllegalArgumentException(   "   ");  }  if(period  ==  null)  {  throw  new  IllegalArgumentException(   "   ");  }  [BUGGY]    TimeSeriesDataItem  dummy  =  new  TimeSeriesDataItem(    period,  Integer.MIN_VALUE);  period,  Integer.MIN_VALUE);  return  Collections.binarySearch(this.data,  dummy);  }  [CLASS]  TimeSeries  [METHOD]  getIndex  [RETURN_TYPE]  int  RegularTimePeriod  period  [VARIABLES]  boolean  TimeSeriesDataItem  dummy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.3333333333333333	433	434	1	add	        if(period    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    if(period  ==  null)  {  throw  new  IllegalArgumentException(   "   ");  }	  	compilable	  [FE]  IllegalArgumentException	2739	1
10970	[BUG]  [BUGGY]      if(period  ==  null)  {  throw  new  IllegalArgumentException(   "   ");  }  if(period  ==  null)  {  throw  new  IllegalArgumentException(   "   ");  }  [FE]  IllegalArgumentException  [CONTEXT]    public  int  getIndex(RegularTimePeriod  period)  {  if  (period  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'period'  argument.   ");  }    [BUGGY]      if(period  ==  null)  {  throw  new  IllegalArgumentException(   "   ");  }  if(period  ==  null)  {  throw  new  IllegalArgumentException(   "   ");  }  [BUGGY]    TimeSeriesDataItem  dummy  =  new  TimeSeriesDataItem(    period,  Integer.MIN_VALUE);  period,  Integer.MIN_VALUE);  return  Collections.binarySearch(this.data,  dummy);  }  [CLASS]  TimeSeries  [METHOD]  getIndex  [RETURN_TYPE]  int  RegularTimePeriod  period  [VARIABLES]  boolean  TimeSeriesDataItem  dummy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.3333333333333333	433	434	1	replace	        if(period    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    if(period  ==  null)  {  throw  new  IllegalArgumentException(   "   ");  }	  	compilable	  [FE]  IllegalArgumentException	2739	1
10994	[BUG]  [BUGGY]  endIndex  =  endIndex  -  1;//  this  is  last  item  BEFORE  end  &  [CE]  illegal  start  of  expression  [CONTEXT]    int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period    [BUGGY]  endIndex  =  endIndex  -  1;//  this  is  last  item  BEFORE  end  &  [BUGGY]    }  if  (endIndex  <  0)  {  emptyRange  =  true;  }  if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  }  else  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	942	943	1	replace	endIndex  =  endIndex  -  1;//  this  is  last  item  BEFORE  end  &	  endIndex    =    endIndex    -    1;//    so    this    is    last    item    BEFORE    end    &    	non-compiled	[CE]  illegal  start  of  expression	3074	None
11018	[BUG]  [BUGGY]  this.maximumItemCount  =  new  java.util.ArrayList(this.minimumItemCount);  [CE]  cannot  find  symbol  minimumItemCount  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;  this.range  =  range;    [BUGGY]  this.maximumItemCount  =  new  java.util.ArrayList(this.minimumItemCount);  [BUGGY]    this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	177	177	1	replace	this.maximumItemCount  =  new  java.util.ArrayList(this.minimumItemCount);	      this.maximumItemCount    =    new    java.util.ArrayList();    	non-compiled	[CE]  cannot  find  symbol  minimumItemCount	2809	None
11042	[BUG]  [BUGGY]  if(last.getPeriod().compareTo(item)>  0  &&  item.getYear().compareTo(last)  <  0)  {  [CE]  cannot  find  symbol  [CONTEXT]    if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);    [BUGGY]  if(last.getPeriod().compareTo(item)>  0  &&  item.getYear().compareTo(last)  <  0)  {  [BUGGY]    this.data.add(item);  added  =  true;  }  else  {  int  index  =  Collections.binarySearch(this.data,  item);  if  (index  <  0)  {  this.data.add(-index  -  1,  item);  added  =  true;  }  else  {  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	514	514	1	replace	if(last.getPeriod().compareTo(item)>  0  &&  item.getYear().compareTo(last)  <  0)  {	  if(item.getPeriod().compareTo(last)>    0    &&    item.getYear().compareTo(last)    <    0)    {    	non-compiled	[CE]  cannot  find  symbol	3662	None
11065	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]    b.append(   "You  are  attempting  to  add  an  observation  for     ");  b.append(   "the  time  period     ");  b.append(item.getPeriod().toString());  b.append(   "  but  the  series  already  contains  an  observation   ");  b.append(   "  for  that  time  period.  Duplicates  are  not     ");  b.append(   "permitted.Try  using  the  addOrUpdate()  method.   ");  throw  new  SeriesException(b.toString());  }  }  }    [BUGGY]      fireSeriesChanged();  fireSeriesChanged();  [BUGGY]    if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  removeAgedItems(false);//  remove  old  items  if  necessary,  but    if  (notify)  {  fireSeriesChanged();  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	536	536	1	add	        fireSeriesChanged();    fireSeriesChanged();	  	compilable	  [FE]  IllegalArgumentException	6003	1
11066	[BUG]  [BUGGY]      fireSeriesChanged();  fireSeriesChanged();  [FE]  IllegalArgumentException  [CONTEXT]    b.append(   "You  are  attempting  to  add  an  observation  for     ");  b.append(   "the  time  period     ");  b.append(item.getPeriod().toString());  b.append(   "  but  the  series  already  contains  an  observation   ");  b.append(   "  for  that  time  period.  Duplicates  are  not     ");  b.append(   "permitted.Try  using  the  addOrUpdate()  method.   ");  throw  new  SeriesException(b.toString());  }  }  }    [BUGGY]      fireSeriesChanged();  fireSeriesChanged();  [BUGGY]    if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  removeAgedItems(false);//  remove  old  items  if  necessary,  but    if  (notify)  {  fireSeriesChanged();  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	536	536	1	replace	        fireSeriesChanged();    fireSeriesChanged();	  	compilable	  [FE]  IllegalArgumentException	6003	1
11066	[BUG]  [BUGGY]      fireSeriesChanged();  fireSeriesChanged(item.getPeriod());  [CE]  method  fireSeriesChanged  in  class  Series  cannot  be  applied  to  given  types;  [CONTEXT]    b.append(   "You  are  attempting  to  add  an  observation  for     ");  b.append(   "the  time  period     ");  b.append(item.getPeriod().toString());  b.append(   "  but  the  series  already  contains  an  observation   ");  b.append(   "  for  that  time  period.  Duplicates  are  not     ");  b.append(   "permitted.Try  using  the  addOrUpdate()  method.   ");  throw  new  SeriesException(b.toString());  }  }  }    [BUGGY]      fireSeriesChanged();  fireSeriesChanged(item.getPeriod());  [BUGGY]    if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  removeAgedItems(false);//  remove  old  items  if  necessary,  but    if  (notify)  {  fireSeriesChanged();  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	536	536	1	replace	        fireSeriesChanged();    fireSeriesChanged(item.getPeriod());	  	non-compiled	[CE]  method  fireSeriesChanged  in  class  Series  cannot  be  applied  to  given  types;	6003	None
11067	[BUG]  [BUGGY]      fireSeriesChanged();  fireSeriesChanged(item.getPeriodType());  [CE]  cannot  find  symbol  [CONTEXT]    b.append(   "You  are  attempting  to  add  an  observation  for     ");  b.append(   "the  time  period     ");  b.append(item.getPeriod().toString());  b.append(   "  but  the  series  already  contains  an  observation   ");  b.append(   "  for  that  time  period.  Duplicates  are  not     ");  b.append(   "permitted.Try  using  the  addOrUpdate()  method.   ");  throw  new  SeriesException(b.toString());  }  }  }    [BUGGY]      fireSeriesChanged();  fireSeriesChanged(item.getPeriodType());  [BUGGY]    if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  removeAgedItems(false);//  remove  old  items  if  necessary,  but    if  (notify)  {  fireSeriesChanged();  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	536	536	1	replace	        fireSeriesChanged();    fireSeriesChanged(item.getPeriodType());	  	non-compiled	[CE]  cannot  find  symbol	6003	None
11089	[BUG]  [BUGGY]  [Delete]  [CE]  illegal  start  of  expression  [CONTEXT]    throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(   "Requires  start  >=  0.   ");  }    [BUGGY]  [Delete]  [BUGGY]    if  (end  <  start)  {  throw  new  IllegalArgumentException(   "Requires  start  <=  end.   ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	882	882	1	replace	[Delete]	      if(end    <    start)    {    throw    new    IllegalArgumentException(   "Requires    start    >=    end.   ");    }    	non-compiled	[CE]  illegal  start  of  expression	3195	None
11090	[BUG]  [BUGGY]  }  [CE]  illegal  start  of  type  [CONTEXT]    throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(   "Requires  start  >=  0.   ");  }    [BUGGY]  }  [BUGGY]    if  (end  <  start)  {  throw  new  IllegalArgumentException(   "Requires  start  <=  end.   ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	882	882	1	replace	}	      if(end    <    start)    {    throw    new    IllegalArgumentException(   "Requires    start    >=    end.   ");    }    	non-compiled	[CE]  illegal  start  of  type	3195	None
11113	[BUG]  [BUGGY]  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;  //  this  is  last  item  BEFORE  end  [CE]  illegal  start  of  expression  [CONTEXT]    boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series    [BUGGY]  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;  //  this  is  last  item  BEFORE  end  [BUGGY]    endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  emptyRange  =  true;  }  if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  }  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	941	943	1	replace	endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;  //  this  is  last  item  BEFORE  end	  endIndex    =    -(endIndex    +    1);    //    this    is    first    item    AFTER    end    period    endIndex    =    endIndex    -    1;    //    this    is    last    item    BEFORE    end    }    	non-compiled	[CE]  illegal  start  of  expression	6961	None
11114	[BUG]  [BUGGY]  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;  //  this  is  last  item  BEFORE  end  &  [CE]  illegal  start  of  expression  [CONTEXT]    boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series    [BUGGY]  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;  //  this  is  last  item  BEFORE  end  &  [BUGGY]    endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  emptyRange  =  true;  }  if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  }  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	941	943	1	replace	endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;  //  this  is  last  item  BEFORE  end  &	  endIndex    =    -(endIndex    +    1);    //    this    is    first    item    AFTER    end    period    endIndex    =    endIndex    -    1;    //    this    is    last    item    BEFORE    end    }    	non-compiled	[CE]  illegal  start  of  expression	6961	None
11138	[BUG]  [BUGGY]  if(startIndex  <  endIndex)  {  for(TimeSeries  start  :  start.getPeriodType())  {  emptyRange  =  true;  }  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [CONTEXT]    }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  emptyRange  =  true;  }    [BUGGY]  if(startIndex  <  endIndex)  {  for(TimeSeries  start  :  start.getPeriodType())  {  emptyRange  =  true;  }  [BUGGY]    if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  }  else  {  return  createCopy(startIndex,  endIndex);  }  }  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	947	947	1	replace	if(startIndex  <  endIndex)  {  for(TimeSeries  start  :  start.getPeriodType())  {  emptyRange  =  true;  }	      if(startIndex    >=    endIndex)    {    for(TimeSeries    start    :    start.getPeriodType())    {    emptyRange    =    true;    }    	non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	313	None
11161	[BUG]  [BUGGY]  if(endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  =  endIndex  -  1;  //  this  is  last  item  BEFORE  end  [CE]  illegal  start  of  expression  [CONTEXT]    public  void  add(RegularTimePeriod  period,  double  value,  boolean  notify)  {  TimeSeriesDataItem  item  =  new  TimeSeriesDataItem(period,  value);    [BUGGY]  if(endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  =  endIndex  -  1;  //  this  is  last  item  BEFORE  end  [BUGGY]    add(item,  notify);  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  double  value  boolean  notify  [VARIABLES]  boolean  notify  double  value  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.2581988897471611	575	575	1	replace	if(endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  =  endIndex  -  1;  //  this  is  last  item  BEFORE  end	      item.setValue(value);    	non-compiled	[CE]  illegal  start  of  expression	1682	None
11162	[BUG]  [BUGGY]  if(endIndex  >  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  =  endIndex  -  1;  //  this  is  last  item  BEFORE  end  [CE]  illegal  start  of  expression  [CONTEXT]    public  void  add(RegularTimePeriod  period,  double  value,  boolean  notify)  {  TimeSeriesDataItem  item  =  new  TimeSeriesDataItem(period,  value);    [BUGGY]  if(endIndex  >  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  =  endIndex  -  1;  //  this  is  last  item  BEFORE  end  [BUGGY]    add(item,  notify);  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  double  value  boolean  notify  [VARIABLES]  boolean  notify  double  value  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.2581988897471611	575	575	1	replace	if(endIndex  >  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  =  endIndex  -  1;  //  this  is  last  item  BEFORE  end	      item.setValue(value);    	non-compiled	[CE]  illegal  start  of  expression	1682	None
11185	[BUG]  [BUGGY]  while(dummy  ==  null)  {  dummy  =  new  TimeSeriesDataItem(period,  Integer.MAX_VALUE);  [CE]  illegal  start  of  expression  [CONTEXT]    public  int  getIndex(RegularTimePeriod  period)  {  if  (period  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'period'  argument.   ");  }  TimeSeriesDataItem  dummy  =  new  TimeSeriesDataItem(  period,  Integer.MIN_VALUE);    [BUGGY]  while(dummy  ==  null)  {  dummy  =  new  TimeSeriesDataItem(period,  Integer.MAX_VALUE);  [BUGGY]    return  Collections.binarySearch(this.data,  dummy);  }  [CLASS]  TimeSeries  [METHOD]  getIndex  [RETURN_TYPE]  int  RegularTimePeriod  period  [VARIABLES]  boolean  TimeSeriesDataItem  dummy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.3333333333333333	435	435	1	replace	while(dummy  ==  null)  {  dummy  =  new  TimeSeriesDataItem(period,  Integer.MAX_VALUE);	      while(dummy!=    null)    {    dummy    =    new    TimeSeriesDataItem(period,    Integer.MAX_VALUE);    	non-compiled	[CE]  illegal  start  of  expression	3026	None
11210	[BUG]  [BUGGY]  this.data.add(period,  value,  new  Long(value));  [CE]  no  suitable  constructor  found  for  Long(Number)  [CONTEXT]    public  void  add(RegularTimePeriod  period,  Number  value)  {      [BUGGY]  this.data.add(period,  value,  new  Long(value));  [BUGGY]    add(period,  value,  true);  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  Number  value  [VARIABLES]  boolean  Number  value  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	588	588	1	replace	this.data.add(period,  value,  new  Long(value));	      this.data.add(period,    new    Long(value));    	non-compiled	[CE]  no  suitable  constructor  found  for  Long(Number)	3242	None
11233	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]    public  void  add(RegularTimePeriod  period,  Number  value,  boolean  notify)  {      [BUGGY]      fireSeriesChanged();  fireSeriesChanged();  [BUGGY]    TimeSeriesDataItem  item  =  new  TimeSeriesDataItem(period,  value);  add(item,  notify);  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  Number  value  boolean  notify  [VARIABLES]  boolean  notify  Number  value  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	602	602	1	add	        fireSeriesChanged();    fireSeriesChanged();	  	compilable	  [FE]  IllegalArgumentException	2569	1
11234	[BUG]  [BUGGY]      fireSeriesChanged();  fireSeriesChanged();  [FE]  IllegalArgumentException  [CONTEXT]    public  void  add(RegularTimePeriod  period,  Number  value,  boolean  notify)  {      [BUGGY]      fireSeriesChanged();  fireSeriesChanged();  [BUGGY]    TimeSeriesDataItem  item  =  new  TimeSeriesDataItem(period,  value);  add(item,  notify);  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  Number  value  boolean  notify  [VARIABLES]  boolean  notify  Number  value  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	602	602	1	replace	        fireSeriesChanged();    fireSeriesChanged();	  	compilable	  [FE]  IllegalArgumentException	2569	1
11234	[BUG]  [BUGGY]      fireSeriesChanged();  this.data.add(period,  value);  [CE]  no  suitable  method  found  for  add(RegularTimePeriod,Number)  [CONTEXT]    public  void  add(RegularTimePeriod  period,  Number  value,  boolean  notify)  {      [BUGGY]      fireSeriesChanged();  this.data.add(period,  value);  [BUGGY]    TimeSeriesDataItem  item  =  new  TimeSeriesDataItem(period,  value);  add(item,  notify);  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  Number  value  boolean  notify  [VARIABLES]  boolean  notify  Number  value  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	602	602	1	replace	        fireSeriesChanged();    this.data.add(period,  value);	  	non-compiled	[CE]  no  suitable  method  found  for  add(RegularTimePeriod,Number)	2569	None
11235	[BUG]  [BUGGY]      fireSeriesChanged();  this.data.add(period,  value,  notify);  [CE]  no  suitable  method  found  for  add(RegularTimePeriod,Number,boolean)  [CONTEXT]    public  void  add(RegularTimePeriod  period,  Number  value,  boolean  notify)  {      [BUGGY]      fireSeriesChanged();  this.data.add(period,  value,  notify);  [BUGGY]    TimeSeriesDataItem  item  =  new  TimeSeriesDataItem(period,  value);  add(item,  notify);  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  Number  value  boolean  notify  [VARIABLES]  boolean  notify  Number  value  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	602	602	1	replace	        fireSeriesChanged();    this.data.add(period,  value,  notify);	  	non-compiled	[CE]  no  suitable  method  found  for  add(RegularTimePeriod,Number,boolean)	2569	None
11258	[BUG]  [BUGGY]  while(item.getPeriod().compareTo(last)>  0)  }  this.data.add(item);  [CE]  illegal  start  of  expression  [CONTEXT]    if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);    [BUGGY]  while(item.getPeriod().compareTo(last)>  0)  }  this.data.add(item);  [BUGGY]    added  =  true;  }  else  {  int  index  =  Collections.binarySearch(this.data,  item);  if  (index  <  0)  {  this.data.add(-index  -  1,  item);  added  =  true;  }  else  {  StringBuffer  b  =  new  StringBuffer();  b.append(   "You  are  attempting  to  add  an  observation  for     ");  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	516	516	1	replace	while(item.getPeriod().compareTo(last)>  0)  }  this.data.add(item);	      while(item.getPeriod().compareTo(last)>    0)    {    this.data.add(item);    	non-compiled	[CE]  illegal  start  of  expression	121	None
11281	[BUG]  [BUGGY]  while(item.getPeriod().equals(getItemCount()  -  1))  {  this.data.add(item);  [CE]  'else'  without  'if'  [CONTEXT]    b.append(item.getPeriod().getClass().getName());  b.append(   ",  but  the  TimeSeries  is  expecting  an  instance  of     ");  b.append(this.timePeriodClass.getName());  b.append(   ".   ");  throw  new  SeriesException(b.toString());  }  boolean  added  =  false;  int  count  =  getItemCount();    [BUGGY]  while(item.getPeriod().equals(getItemCount()  -  1))  {  this.data.add(item);  [BUGGY]    if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  added  =  true;  }  else  {  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	508	508	1	replace	while(item.getPeriod().equals(getItemCount()  -  1))  {  this.data.add(item);	      while(item.getPeriod().equals(getItemCount()))    {    this.data.add(item);    	non-compiled	[CE]  'else'  without  'if'	7142	None
11282	[BUG]  [BUGGY]  while(item.getPeriod().compareTo(getItemCount()  -  1))  {  this.data.add(item);  [CE]  'else'  without  'if'  [CONTEXT]    b.append(item.getPeriod().getClass().getName());  b.append(   ",  but  the  TimeSeries  is  expecting  an  instance  of     ");  b.append(this.timePeriodClass.getName());  b.append(   ".   ");  throw  new  SeriesException(b.toString());  }  boolean  added  =  false;  int  count  =  getItemCount();    [BUGGY]  while(item.getPeriod().compareTo(getItemCount()  -  1))  {  this.data.add(item);  [BUGGY]    if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  added  =  true;  }  else  {  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	508	508	1	replace	while(item.getPeriod().compareTo(getItemCount()  -  1))  {  this.data.add(item);	      while(item.getPeriod().equals(getItemCount()))    {    this.data.add(item);    	non-compiled	[CE]  'else'  without  'if'	7142	None
11330	[BUG]  [BUGGY]  item.addValue(value,  notify);  fireSeriesChanged();  [CE]  illegal  start  of  expression  [CONTEXT]    public  void  add(RegularTimePeriod  period,  double  value,  boolean  notify)  {  TimeSeriesDataItem  item  =  new  TimeSeriesDataItem(period,  value);  add(item,  notify);    [BUGGY]  item.addValue(value,  notify);  fireSeriesChanged();  [BUGGY]    }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  double  value  boolean  notify  [VARIABLES]  boolean  notify  double  value  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.2581988897471611	576	576	1	replace	item.addValue(value,  notify);  fireSeriesChanged();	      fireSeriesChanged();    	non-compiled	[CE]  illegal  start  of  expression	434	None
11378	[BUG]  [BUGGY]  endIndex  =  -(endIndex  +  1);  [CE]  cannot  find  symbol  endIndex  [CONTEXT]    if  (end  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'end'  argument.   ");  }  if  (start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException(     "Requires  start  on  or  before  end.   ");  }  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {    [BUGGY]  endIndex  =  -(endIndex  +  1);  [BUGGY]    if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	934	934	1	replace	endIndex  =  -(endIndex  +  1);	  endIndex    =    -(startIndex    +    1);    	non-compiled	[CE]  cannot  find  symbol  endIndex	2162	None
11402	[BUG]  [BUGGY]  this(name,  timePeriodClass,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION);  [CE]  no  suitable  constructor  found  for  TimeSeries(Comparable,Class,String,String)  [CONTEXT]    public  TimeSeries(Comparable  name,  Class  timePeriodClass)  {    [BUGGY]  this(name,  timePeriodClass,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION);  [BUGGY]    this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,    timePeriodClass);  timePeriodClass);  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	155	156	1	replace	this(name,  timePeriodClass,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION);	      this(name,    DEFAULT_DOMAIN_DESCRIPTION,    DEFAULT_RANGE_DESCRIPTION);    	non-compiled	[CE]  no  suitable  constructor  found  for  TimeSeries(Comparable,Class,String,String)	290	None
11426	[BUG]  [BUGGY]  int  count  =  getItemCount()  -  1;  [CE]  variable  count  is  already  defined  in  method  add(TimeSeriesDataItem,boolean)  [CONTEXT]    if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {    [BUGGY]  int  count  =  getItemCount()  -  1;  [BUGGY]    RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  added  =  true;  }  else  {  int  index  =  Collections.binarySearch(this.data,  item);  if  (index  <  0)  {  this.data.add(-index  -  1,  item);  added  =  true;  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	513	513	1	replace	int  count  =  getItemCount()  -  1;	      int    count    =    getItemCount();    	non-compiled	[CE]  variable  count  is  already  defined  in  method  add(TimeSeriesDataItem,boolean)	1826	None
11450	[BUG]  [BUGGY]  while(startIndex  >=  0)  {  startIndex  =  getIndex(startIndex);  [CE]  method  getIndex  in  class  TimeSeries  cannot  be  applied  to  given  types;  [CONTEXT]    }  if  (end  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'end'  argument.   ");  }  if  (start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException(     "Requires  start  on  or  before  end.   ");  }  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);    [BUGGY]  while(startIndex  >=  0)  {  startIndex  =  getIndex(startIndex);  [BUGGY]    if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	933	933	1	replace	while(startIndex  >=  0)  {  startIndex  =  getIndex(startIndex);	      while(startIndex    <    0)    {    startIndex    =    getIndex(startIndex);    	non-compiled	[CE]  method  getIndex  in  class  TimeSeries  cannot  be  applied  to  given  types;	1059	None
11474	[BUG]  [BUGGY]  int  startIndex  =  indexOf(endIndex);  [CE]  variable  startIndex  is  already  defined  in  method  createCopy(RegularTimePeriod,RegularTimePeriod)  [CONTEXT]    if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  }  else  {    [BUGGY]  int  startIndex  =  indexOf(endIndex);  [BUGGY]    return  createCopy(startIndex,  endIndex);  }  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	953	953	1	replace	int  startIndex  =  indexOf(endIndex);	      int    startIndex    =    indexOf(startIndex);    	non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  createCopy(RegularTimePeriod,RegularTimePeriod)	4202	None
11498	[BUG]  [BUGGY]  final  boolean  added  =  notify;  [CE]  cannot  assign  a  value  to  final  variable  added  [CONTEXT]    b.append(   "You  are  trying  to  add  data  where  the  time  period  class     ");  b.append(   "is     ");  b.append(item.getPeriod().getClass().getName());  b.append(   ",  but  the  TimeSeries  is  expecting  an  instance  of     ");  b.append(this.timePeriodClass.getName());  b.append(   ".   ");  throw  new  SeriesException(b.toString());  }      [BUGGY]  final  boolean  added  =  notify;  [BUGGY]    int  count  =  getItemCount();  if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  added  =  true;  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	506	506	1	replace	final  boolean  added  =  notify;	  final    boolean    added    =    false;    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  added	7982	None
11521	[BUG]  [BUGGY]  TimeSeriesDataItem  dummy  =  new  TimeSeriesDataItem(period,  Integer.MIN_VALUE,  1);  [CE]  no  suitable  constructor  found  for  TimeSeriesDataItem(RegularTimePeriod,int,int)  [CONTEXT]    public  int  getIndex(RegularTimePeriod  period)  {  if  (period  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'period'  argument.   ");  }    [BUGGY]  TimeSeriesDataItem  dummy  =  new  TimeSeriesDataItem(period,  Integer.MIN_VALUE,  1);  [BUGGY]    period,  Integer.MIN_VALUE);  return  Collections.binarySearch(this.data,  dummy);  }  [CLASS]  TimeSeries  [METHOD]  getIndex  [RETURN_TYPE]  int  RegularTimePeriod  period  [VARIABLES]  boolean  TimeSeriesDataItem  dummy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.3333333333333333	433	434	1	replace	TimeSeriesDataItem  dummy  =  new  TimeSeriesDataItem(period,  Integer.MIN_VALUE,  1);	  TimeSeriesDataItem    dummy    =    new    TimeSeriesDataItem(period,    Integer.MIN_VALUE,    0);    	non-compiled	[CE]  no  suitable  constructor  found  for  TimeSeriesDataItem(RegularTimePeriod,int,int)	7022	None
11546	[BUG]  [BUGGY]  this.data.remove(0);  [CE]  class  or  interface  expected  [CONTEXT]    b.append(   "You  are  attempting  to  add  an  observation  for     ");  b.append(   "the  time  period     ");  b.append(item.getPeriod().toString());  b.append(   "  but  the  series  already  contains  an  observation   ");  b.append(   "  for  that  time  period.  Duplicates  are  not     ");  b.append(   "permitted.Try  using  the  addOrUpdate()  method.   ");  throw  new  SeriesException(b.toString());  }  }  }    [BUGGY]  this.data.remove(0);  [BUGGY]      if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  removeAgedItems(false);//  remove  old  items  if  necessary,  but    if  (notify)  {  fireSeriesChanged();  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	536	536	1	replace	this.data.remove(0);	  if(notify)    {    	non-compiled	[CE]  class  or  interface  expected	891	None
11569	[BUG]  [BUGGY]  if(endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;  //  this  is  last  item  BEFORE  end  [CE]  illegal  start  of  expression  [CONTEXT]    public  void  add(RegularTimePeriod  period,  double  value,  boolean  notify)  {  TimeSeriesDataItem  item  =  new  TimeSeriesDataItem(period,  value);    [BUGGY]  if(endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;  //  this  is  last  item  BEFORE  end  [BUGGY]    add(item,  notify);  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  double  value  boolean  notify  [VARIABLES]  boolean  notify  double  value  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.2581988897471611	575	575	1	replace	if(endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;  //  this  is  last  item  BEFORE  end	      item.setValue(value);    notify    =    true;    	non-compiled	[CE]  illegal  start  of  expression	1683	None
2	[BUG]  [BUGGY]      this.data  =  new  java.util.ArrayList();  if(this.domain!=  null)  {  this.data  =  new  ArrayList();  }  else  {  this.data  =  new  ArrayList();  }  [CE]  cannot  find  symbol  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;  this.range  =  range;    [BUGGY]      this.data  =  new  java.util.ArrayList();  if(this.domain!=  null)  {  this.data  =  new  ArrayList();  }  else  {  this.data  =  new  ArrayList();  }  [BUGGY]    this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	177	177	1	replace	        this.data    =    new    java.util.ArrayList();    if(this.domain!=  null)  {  this.data  =  new  ArrayList();  }  else  {  this.data  =  new  ArrayList();  }	  	non-compiled	[CE]  cannot  find  symbol	6183	None
3	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;  this.range  =  range;    [BUGGY]      this.data  =  new  java.util.ArrayList();  if(this.domain!=  null)  {  this.data  =  new  java.util.ArrayList();  }  else  {  this.data.add(name);  }  [BUGGY]    this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	177	177	1	add	        this.data    =    new    java.util.ArrayList();    if(this.domain!=  null)  {  this.data  =  new  java.util.ArrayList();  }  else  {  this.data.add(name);  }	  	compilable	  [FE]  IllegalArgumentException	6183	1
4	[BUG]  [BUGGY]      this.data  =  new  java.util.ArrayList();  if(this.domain!=  null)  {  this.data  =  new  java.util.ArrayList();  }  else  {  this.data.add(name);  }  [FE]  IllegalArgumentException  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;  this.range  =  range;    [BUGGY]      this.data  =  new  java.util.ArrayList();  if(this.domain!=  null)  {  this.data  =  new  java.util.ArrayList();  }  else  {  this.data.add(name);  }  [BUGGY]    this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	177	177	1	replace	        this.data    =    new    java.util.ArrayList();    if(this.domain!=  null)  {  this.data  =  new  java.util.ArrayList();  }  else  {  this.data.add(name);  }	  	compilable	  [FE]  IllegalArgumentException	6183	1
61	[BUG]  [BUGGY]  int  count  =  getItemCount(0);  [CE]  class  or  interface  expected  [CONTEXT]    public  void  removeAgedItems(boolean  notify)  {      [BUGGY]  int  count  =  getItemCount(0);  [BUGGY]    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())  >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	740	740	1	replace	int  count  =  getItemCount(0);	      int    count    =    getItemCount();    	non-compiled	[CE]  class  or  interface  expected	1264	None
123	[BUG]  [BUGGY]  added  =  false;  Added  =  false;  [CE]  cannot  find  symbol  Added  [CONTEXT]    b.append(this.timePeriodClass.getName());  b.append(   ".   ");  throw  new  SeriesException(b.toString());  }  boolean  added  =  false;  int  count  =  getItemCount();  if  (count  ==  0)  {  this.data.add(item);    [BUGGY]  added  =  false;  Added  =  false;  [BUGGY]    }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  added  =  true;  }  else  {  int  index  =  Collections.binarySearch(this.data,  item);  if  (index  <  0)  {  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	510	510	1	replace	added    =    false;    Added  =  false;	  	non-compiled	[CE]  cannot  find  symbol  Added	1490	None
182	[BUG]  [BUGGY]  TimePeriodClass  timePeriodClass  =  item.getTimePeriodClass();  [CE]  illegal  start  of  type  [CONTEXT]    public  void  add(TimeSeriesDataItem  item,  boolean  notify)  {  if  (item  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'item'  argument.   ");  }    [BUGGY]  TimePeriodClass  timePeriodClass  =  item.getTimePeriodClass();  [BUGGY]    if  (!item.getPeriod().getClass().equals(this.timePeriodClass))  {  StringBuffer  b  =  new  StringBuffer();  b.append(   "You  are  trying  to  add  data  where  the  time  period  class     ");  b.append(   "is     ");  b.append(item.getPeriod().getClass().getName());  b.append(   ",  but  the  TimeSeries  is  expecting  an  instance  of     ");  b.append(this.timePeriodClass.getName());  b.append(   ".   ");  throw  new  SeriesException(b.toString());  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	494	494	1	replace	TimePeriodClass  timePeriodClass  =  item.getTimePeriodClass();	      Class    timePeriodClass    =    item.getTimePeriodClass();    	non-compiled	[CE]  illegal  start  of  type	2329	None
241	[BUG]  [BUGGY]  updateBounds();  [CE]  illegal  start  of  expression  [CONTEXT]    public  void  add(RegularTimePeriod  period,  double  value,  boolean  notify)  {  TimeSeriesDataItem  item  =  new  TimeSeriesDataItem(period,  value);  add(item,  notify);    [BUGGY]  updateBounds();  [BUGGY]    }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  double  value  boolean  notify  [VARIABLES]  boolean  notify  double  value  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.2581988897471611	576	576	1	replace	updateBounds();	      fireSeriesChanged();    	non-compiled	[CE]  illegal  start  of  expression	434	None
242	[BUG]  [BUGGY]  updateBounds(item.getPeriod(),  this.data);  [CE]  illegal  start  of  expression  [CONTEXT]    public  void  add(RegularTimePeriod  period,  double  value,  boolean  notify)  {  TimeSeriesDataItem  item  =  new  TimeSeriesDataItem(period,  value);  add(item,  notify);    [BUGGY]  updateBounds(item.getPeriod(),  this.data);  [BUGGY]    }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  double  value  boolean  notify  [VARIABLES]  boolean  notify  double  value  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.2581988897471611	576	576	1	replace	updateBounds(item.getPeriod(),  this.data);	      fireSeriesChanged();    	non-compiled	[CE]  illegal  start  of  expression	434	None
362	[BUG]  [BUGGY]  this.data.append(item.getPeriod().toString());  [CE]  cannot  find  symbol  [CONTEXT]    throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }    [BUGGY]  this.data.append(item.getPeriod().toString());  [BUGGY]    removeAgedItems(false);//  remove  old  items  if  necessary,  but          //  don't  notify  anyone,  because  that                    //  happens  next  anyway...    if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	542	544	1	replace	this.data.append(item.getPeriod().toString());	      b.append(item.getPeriod().toString());    	non-compiled	[CE]  cannot  find  symbol	1417	None
422	[BUG]  [BUGGY]  super(name,  domain,  Domain.class);  [CE]  cannot  find  symbol  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {    [BUGGY]  super(name,  domain,  Domain.class);  [BUGGY]    this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	174	174	1	replace	super(name,  domain,  Domain.class);	  super(name,    Domain.class);    	non-compiled	[CE]  cannot  find  symbol	242	None
482	[BUG]  [BUGGY]  while(item.getPeriod().compareTo(count  -  1)>  0)  }  this.data.add(item);  [CE]  illegal  start  of  expression  [CONTEXT]    b.append(this.timePeriodClass.getName());  b.append(   ".   ");  throw  new  SeriesException(b.toString());  }  boolean  added  =  false;  int  count  =  getItemCount();  if  (count  ==  0)  {  this.data.add(item);    [BUGGY]  while(item.getPeriod().compareTo(count  -  1)>  0)  }  this.data.add(item);  [BUGGY]    added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  added  =  true;  }  else  {  int  index  =  Collections.binarySearch(this.data,  item);  if  (index  <  0)  {  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	510	510	1	replace	while(item.getPeriod().compareTo(count  -  1)>  0)  }  this.data.add(item);	      while(item.getPeriod().compareTo(count    -    1)>    0)    {    this.data.add(item);    	non-compiled	[CE]  illegal  start  of  expression	3170	None
602	[BUG]  [BUGGY]  throw  new  SeriesException( "TimeSeriesDataItem  item  does  not  belong  to  the  same  category. ");  [CE]  illegal  start  of  expression  [CONTEXT]    public  void  add(RegularTimePeriod  period,  double  value,  boolean  notify)  {  TimeSeriesDataItem  item  =  new  TimeSeriesDataItem(period,  value);  add(item,  notify);    [BUGGY]  throw  new  SeriesException( "TimeSeriesDataItem  item  does  not  belong  to  the  same  category. ");  [BUGGY]      [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  double  value  boolean  notify  [VARIABLES]  boolean  notify  double  value  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.2581988897471611	576	576	1	replace	throw  new  SeriesException( "TimeSeriesDataItem  item  does  not  belong  to  the  same  category. ");	  throw    new    SeriesException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	3122	None
661	[BUG]  [BUGGY]      this.data.get(index);  if(index  >=  0)  {  if(this.data.size()  >  0)  {  throw  new  IllegalArgumentException( "TimeSeriesDataItem  fetches  DataItem( "  +  getDataItem(index)+ ")not  for  sale ");  }  [CE]  illegal  start  of  expression  [CONTEXT]    public  TimeSeriesDataItem  getDataItem(int  index)  {    [BUGGY]      this.data.get(index);  if(index  >=  0)  {  if(this.data.size()  >  0)  {  throw  new  IllegalArgumentException( "TimeSeriesDataItem  fetches  DataItem( "  +  getDataItem(index)+ ")not  for  sale ");  }  [BUGGY]    return  (TimeSeriesDataItem)  this.data.get(index);  }  [CLASS]  TimeSeries  [METHOD]  getDataItem  [RETURN_TYPE]  TimeSeriesDataItem  int  index  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  long  maximumItemAge  periods  serialVersionUID  int  count  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	341	341	1	replace	        this.data.get(index);    if(index  >=  0)  {  if(this.data.size()  >  0)  {  throw  new  IllegalArgumentException( "TimeSeriesDataItem  fetches  DataItem( "  +  getDataItem(index)+ ")not  for  sale ");  }	  	non-compiled	[CE]  illegal  start  of  expression	411	None
662	[BUG]  [BUGGY]      this.data.get(index);  if(index  >=  0)  {  if(this.data.size()  >  0)  {  throw  new  IllegalArgumentException( "TimeSeriesDataItem  fetches  DataItem( "  +  getDataItem(index)+ ")not  in  the  range  [ "  +  getDataItemCount()  + "] ");  }  [CE]  illegal  start  of  expression  [CONTEXT]    public  TimeSeriesDataItem  getDataItem(int  index)  {    [BUGGY]      this.data.get(index);  if(index  >=  0)  {  if(this.data.size()  >  0)  {  throw  new  IllegalArgumentException( "TimeSeriesDataItem  fetches  DataItem( "  +  getDataItem(index)+ ")not  in  the  range  [ "  +  getDataItemCount()  + "] ");  }  [BUGGY]    return  (TimeSeriesDataItem)  this.data.get(index);  }  [CLASS]  TimeSeries  [METHOD]  getDataItem  [RETURN_TYPE]  TimeSeriesDataItem  int  index  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  long  maximumItemAge  periods  serialVersionUID  int  count  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	341	341	1	replace	        this.data.get(index);    if(index  >=  0)  {  if(this.data.size()  >  0)  {  throw  new  IllegalArgumentException( "TimeSeriesDataItem  fetches  DataItem( "  +  getDataItem(index)+ ")not  in  the  range  [ "  +  getDataItemCount()  + "] ");  }	  	non-compiled	[CE]  illegal  start  of  expression	411	None
663	[BUG]  [BUGGY]      this.data.get(index);  if(index  >=  0)  {  if(this.data.size()  >  0)  {  throw  new  IllegalArgumentException( "TimeSeriesDataItem  fetches  DataItem( "  +  getDataItem(index)+ ")not  in  the  range  [ "  +  TimeSeriesDataItem.getClass()  + "] ");  }  [CE]  illegal  start  of  expression  [CONTEXT]    public  TimeSeriesDataItem  getDataItem(int  index)  {    [BUGGY]      this.data.get(index);  if(index  >=  0)  {  if(this.data.size()  >  0)  {  throw  new  IllegalArgumentException( "TimeSeriesDataItem  fetches  DataItem( "  +  getDataItem(index)+ ")not  in  the  range  [ "  +  TimeSeriesDataItem.getClass()  + "] ");  }  [BUGGY]    return  (TimeSeriesDataItem)  this.data.get(index);  }  [CLASS]  TimeSeries  [METHOD]  getDataItem  [RETURN_TYPE]  TimeSeriesDataItem  int  index  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  long  maximumItemAge  periods  serialVersionUID  int  count  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	341	341	1	replace	        this.data.get(index);    if(index  >=  0)  {  if(this.data.size()  >  0)  {  throw  new  IllegalArgumentException( "TimeSeriesDataItem  fetches  DataItem( "  +  getDataItem(index)+ ")not  in  the  range  [ "  +  TimeSeriesDataItem.getClass()  + "] ");  }	  	non-compiled	[CE]  illegal  start  of  expression	411	None
782	[BUG]  [BUGGY]  item.setValue(value);  notifyListeners(new  DataItem(period,  null,  notify));  [CE]  illegal  start  of  expression  [CONTEXT]    public  void  add(RegularTimePeriod  period,  Number  value,  boolean  notify)  {  TimeSeriesDataItem  item  =  new  TimeSeriesDataItem(period,  value);  add(item,  notify);    [BUGGY]  item.setValue(value);  notifyListeners(new  DataItem(period,  null,  notify));  [BUGGY]    }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  Number  value  boolean  notify  [VARIABLES]  boolean  notify  Number  value  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	604	604	1	replace	item.setValue(value);  notifyListeners(new  DataItem(period,  null,  notify));	      item.setValue(value);    fireSeriesChanged();    	non-compiled	[CE]  illegal  start  of  expression	1563	None
842	[BUG]  [BUGGY]  this.timePeriodClass  =  new  java.util.ArrayList(timePeriodClass);  [CE]  no  suitable  constructor  found  for  ArrayList(Class)  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;  this.range  =  range;    [BUGGY]  this.timePeriodClass  =  new  java.util.ArrayList(timePeriodClass);  [BUGGY]    this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	177	177	1	replace	this.timePeriodClass  =  new  java.util.ArrayList(timePeriodClass);	  this.timePeriodClass    =    new    java.util.ArrayList();    	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayList(Class)	2858	None
1022	[BUG]  [BUGGY]  RegularTimePeriod  start  =(RegularTimePeriod)Super.clone();  [CE]  illegal  start  of  type  [CONTEXT]    throws  CloneNotSupportedException  {    [BUGGY]  RegularTimePeriod  start  =(RegularTimePeriod)Super.clone();  [BUGGY]    if  (start  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'start'  argument.   ");  }  if  (end  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'end'  argument.   ");  }  if  (start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException(     "Requires  start  on  or  before  end.   ");  }  boolean  emptyRange  =  false;  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	921	921	1	replace	RegularTimePeriod  start  =(RegularTimePeriod)Super.clone();	      RegularTimePeriod    start    =(RegularTimePeriod)super.clone();    	non-compiled	[CE]  illegal  start  of  type	26	None
1082	[BUG]  [BUGGY]  this.data  =  new  LinkedList();  [CE]  cannot  find  symbol  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;    [BUGGY]  this.data  =  new  LinkedList();  [BUGGY]    this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	178	178	1	replace	this.data  =  new  LinkedList();	      this.data    =    new    ArrayList();    	non-compiled	[CE]  cannot  find  symbol	6781	None
1142	[BUG]  [BUGGY]  updateBounds(item.getPeriod()  -  1);  [CE]  bad  operand  types  for  binary  operator  '-'  [CONTEXT]    b.append(this.timePeriodClass.getName());  b.append(   ".   ");  throw  new  SeriesException(b.toString());  }  boolean  added  =  false;  int  count  =  getItemCount();  if  (count  ==  0)  {  this.data.add(item);    [BUGGY]  updateBounds(item.getPeriod()  -  1);  [BUGGY]    added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  added  =  true;  }  else  {  int  index  =  Collections.binarySearch(this.data,  item);  if  (index  <  0)  {  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	510	510	1	replace	updateBounds(item.getPeriod()  -  1);	      fireSeriesChanged();    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	5342	None
1202	[BUG]  [BUGGY]  if(item  ==  null)  {  throw  new  IllegalArgumentException( "Null  'item'  argument.   ");  Afterward  [CE]  not  a  statement  [CONTEXT]    public  void  add(TimeSeriesDataItem  item,  boolean  notify)  {    [BUGGY]  if(item  ==  null)  {  throw  new  IllegalArgumentException( "Null  'item'  argument.   ");  Afterward  [BUGGY]    if  (item  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'item'  argument.   ");  }  if  (!item.getPeriod().getClass().equals(this.timePeriodClass))  {  StringBuffer  b  =  new  StringBuffer();  b.append(   "You  are  trying  to  add  data  where  the  time  period  class     ");  b.append(   "is     ");  b.append(item.getPeriod().getClass().getName());  b.append(   ",  but  the  TimeSeries  is  expecting  an  instance  of     ");  b.append(this.timePeriodClass.getName());  b.append(   ".   ");  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	491	491	1	replace	if(item  ==  null)  {  throw  new  IllegalArgumentException( "Null  'item'  argument.   ");  Afterward	      if(item    ==    null)    {    throw    new    IllegalArgumentException(   "Null    'item'    argument.   ");    }    	non-compiled	[CE]  not  a  statement	818	None
1263	[BUG]  [BUGGY]      this.domain  =  domain;  this.name  =  name;  [CE]  cannot  find  symbol  name  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;    [BUGGY]      this.domain  =  domain;  this.name  =  name;  [BUGGY]    this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	176	176	1	replace	        this.domain    =    domain;    this.name  =  name;	  	non-compiled	[CE]  cannot  find  symbol  name	2473	None
1323	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(   "Requires  end  <=  start.   ");  throw  new  IllegalArgumentException( "Requires  end  <<  start.   ");  [CE]  unreachable  statement  [CONTEXT]    throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(   "Requires  start  >=  0.   ");  }  if  (end  <  start)  {    [BUGGY]  throw  new  IllegalArgumentException(   "Requires  end  <=  start.   ");  throw  new  IllegalArgumentException( "Requires  end  <<  start.   ");  [BUGGY]    }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	883	883	1	replace	throw    new    IllegalArgumentException(   "Requires    end    <=    start.   ");    throw  new  IllegalArgumentException( "Requires  end  <<  start.   ");	  	non-compiled	[CE]  unreachable  statement	782	None
1501	[BUG]  [BUGGY]  item.setValue(value,  fireSeriesChanged());  [CE]  'void'  type  not  allowed  here  [CONTEXT]    public  void  add(RegularTimePeriod  period,  double  value,  boolean  notify)  {  TimeSeriesDataItem  item  =  new  TimeSeriesDataItem(period,  value);    [BUGGY]  item.setValue(value,  fireSeriesChanged());  [BUGGY]    add(item,  notify);  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  double  value  boolean  notify  [VARIABLES]  boolean  notify  double  value  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.2581988897471611	575	575	1	replace	item.setValue(value,  fireSeriesChanged());	      item.setValue(value);    fireSeriesChanged();    	non-compiled	[CE]  'void'  type  not  allowed  here	1681	None
1682	[BUG]  [BUGGY]  this.range  =  range  +  1;  this.maximumItemCount  =  Math.max(maximumItemCount,  range);  [CE]  no  suitable  method  found  for  max(int,String)  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;    [BUGGY]  this.range  =  range  +  1;  this.maximumItemCount  =  Math.max(maximumItemCount,  range);  [BUGGY]    this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	176	176	1	replace	this.range    =    range    +    1;    this.maximumItemCount  =  Math.max(maximumItemCount,  range);	  	non-compiled	[CE]  no  suitable  method  found  for  max(int,String)	458	None
1683	[BUG]  [BUGGY]  this.range  =  range  +  1;  this.maximumItemCount  =  Math.max(maximumItemCount);  [CE]  no  suitable  method  found  for  max(int)  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;    [BUGGY]  this.range  =  range  +  1;  this.maximumItemCount  =  Math.max(maximumItemCount);  [BUGGY]    this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	176	176	1	replace	this.range    =    range    +    1;    this.maximumItemCount  =  Math.max(maximumItemCount);	  	non-compiled	[CE]  no  suitable  method  found  for  max(int)	458	None
1742	[BUG]  [BUGGY]  List  timePeriodClass  =  item.getTimePeriod();  [CE]  illegal  start  of  type  [CONTEXT]    public  void  add(TimeSeriesDataItem  item,  boolean  notify)  {  if  (item  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'item'  argument.   ");  }    [BUGGY]  List  timePeriodClass  =  item.getTimePeriod();  [BUGGY]    if  (!item.getPeriod().getClass().equals(this.timePeriodClass))  {  StringBuffer  b  =  new  StringBuffer();  b.append(   "You  are  trying  to  add  data  where  the  time  period  class     ");  b.append(   "is     ");  b.append(item.getPeriod().getClass().getName());  b.append(   ",  but  the  TimeSeries  is  expecting  an  instance  of     ");  b.append(this.timePeriodClass.getName());  b.append(   ".   ");  throw  new  SeriesException(b.toString());  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	494	494	1	replace	List  timePeriodClass  =  item.getTimePeriod();	      Class    timePeriodClass    =    item.getTimePeriod();    	non-compiled	[CE]  illegal  start  of  type	2331	None
1802	[BUG]  [BUGGY]  long  last  =  getTimePeriod(getItemCount()  +  1).getSerialIndex();  [CE]  cannot  find  symbol  latest  [CONTEXT]    public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {    [BUGGY]  long  last  =  getTimePeriod(getItemCount()  +  1).getSerialIndex();  [BUGGY]    long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())  >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	741	741	1	replace	long  last  =  getTimePeriod(getItemCount()  +  1).getSerialIndex();	      long    last    =    getTimePeriod(getItemCount()    -    1).getSerialIndex();    	non-compiled	[CE]  cannot  find  symbol  latest	3482	None
1862	[BUG]  [BUGGY]  return  getDataItem(index).getPeriod(this.timePeriodClass);  [CE]  method  getPeriod  in  class  TimeSeriesDataItem  cannot  be  applied  to  given  types;  [CONTEXT]    public  RegularTimePeriod  getTimePeriod(int  index)  {    [BUGGY]  return  getDataItem(index).getPeriod(this.timePeriodClass);  [BUGGY]    }  [CLASS]  TimeSeries  [METHOD]  getTimePeriod  [RETURN_TYPE]  RegularTimePeriod  int  index  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  long  maximumItemAge  periods  serialVersionUID  int  count  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	372	372	1	replace	return  getDataItem(index).getPeriod(this.timePeriodClass);	  return    getDataItem(index).getPeriod(0);    	non-compiled	[CE]  method  getPeriod  in  class  TimeSeriesDataItem  cannot  be  applied  to  given  types;	6302	None
1982	[BUG]  [BUGGY]  peg(Calendar.setInstance(Calendar.getInstance()));  [CE]  illegal  start  of  expression  [CONTEXT]    public  TimeSeries(Comparable  name)  {  this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  Day.class);    [BUGGY]  peg(Calendar.setInstance(Calendar.getInstance()));  [BUGGY]    }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Comparable)  Comparable  name  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.4082482904638631	144	144	1	replace	peg(Calendar.setInstance(Calendar.getInstance()));	      fireSeriesChanged();    	non-compiled	[CE]  illegal  start  of  expression	3602	None
2101	[BUG]  [BUGGY]  this.data.add(new  TimeSeries(name,  timePeriodClass));  [CE]  illegal  start  of  expression  [CONTEXT]    public  TimeSeries(Comparable  name,  Class  timePeriodClass)  {  this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  timePeriodClass);    [BUGGY]  this.data.add(new  TimeSeries(name,  timePeriodClass));  [BUGGY]      [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	157	157	1	replace	this.data.add(new  TimeSeries(name,  timePeriodClass));	  fireSeriesChanged();    	non-compiled	[CE]  illegal  start  of  expression	1993	None
2102	[BUG]  [BUGGY]  this.data.add(name);  [CE]  illegal  start  of  expression  [CONTEXT]    public  TimeSeries(Comparable  name,  Class  timePeriodClass)  {  this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  timePeriodClass);    [BUGGY]  this.data.add(name);  [BUGGY]      [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	157	157	1	replace	this.data.add(name);	  fireSeriesChanged();    	non-compiled	[CE]  illegal  start  of  expression	1993	None
2221	[BUG]  [BUGGY]  data.add(period,  value,  fireSeriesChanged());  [CE]  illegal  start  of  expression  [CONTEXT]    public  void  add(RegularTimePeriod  period,  Number  value)  {  add(period,  value,  true);    [BUGGY]  data.add(period,  value,  fireSeriesChanged());  [BUGGY]    }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  Number  value  [VARIABLES]  boolean  Number  value  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	589	589	1	replace	data.add(period,  value,  fireSeriesChanged());	      data.add(period,    value);    fireSeriesChanged();    	non-compiled	[CE]  illegal  start  of  expression	62	None
2281	[BUG]  [BUGGY]  if(endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  =  endIndex  -  1;  }  [CE]  illegal  start  of  expression  [CONTEXT]    public  void  add(RegularTimePeriod  period,  double  value,  boolean  notify)  {  TimeSeriesDataItem  item  =  new  TimeSeriesDataItem(period,  value);    [BUGGY]  if(endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  =  endIndex  -  1;  }  [BUGGY]    add(item,  notify);  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  double  value  boolean  notify  [VARIABLES]  boolean  notify  double  value  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.2581988897471611	575	575	1	replace	if(endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  =  endIndex  -  1;  }	      item.setValue(value);    notify    =    true;    	non-compiled	[CE]  illegal  start  of  expression	1683	None
2282	[BUG]  [BUGGY]  if(endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period,  endIndex  =  endIndex  -  1;  }  [CE]  illegal  start  of  expression  [CONTEXT]    public  void  add(RegularTimePeriod  period,  double  value,  boolean  notify)  {  TimeSeriesDataItem  item  =  new  TimeSeriesDataItem(period,  value);    [BUGGY]  if(endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period,  endIndex  =  endIndex  -  1;  }  [BUGGY]    add(item,  notify);  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  double  value  boolean  notify  [VARIABLES]  boolean  notify  double  value  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.2581988897471611	575	575	1	replace	if(endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period,  endIndex  =  endIndex  -  1;  }	      item.setValue(value);    notify    =    true;    	non-compiled	[CE]  illegal  start  of  expression	1683	None
2343	[BUG]  [BUGGY]      endIndex  =  getIndex(end);  endIndex  =  getIndex(startIndex);  [CE]  method  getIndex  in  class  TimeSeries  cannot  be  applied  to  given  types;  [CONTEXT]    }  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);    [BUGGY]      endIndex  =  getIndex(end);  endIndex  =  getIndex(startIndex);  [BUGGY]    if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series    endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period      endIndex  =  endIndex  -  1;  //  so  this  is  last  item  BEFORE  end  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  emptyRange  =  true;  }  if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	940	942	1	replace	        endIndex    =    getIndex(end);    endIndex  =  getIndex(startIndex);	  	non-compiled	[CE]  method  getIndex  in  class  TimeSeries  cannot  be  applied  to  given  types;	1778	None
2402	[BUG]  [BUGGY]      fireSeriesChanged();  this.data.add(period,  new  Long(value));  [CE]  no  suitable  constructor  found  for  Long(Number)  [CONTEXT]    public  void  add(RegularTimePeriod  period,  Number  value)  {  add(period,  value,  true);    [BUGGY]      fireSeriesChanged();  this.data.add(period,  new  Long(value));  [BUGGY]    }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  Number  value  [VARIABLES]  boolean  Number  value  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	589	589	1	replace	        fireSeriesChanged();    this.data.add(period,  new  Long(value));	  	non-compiled	[CE]  no  suitable  constructor  found  for  Long(Number)	505	None
2403	[BUG]  [BUGGY]      fireSeriesChanged();  this.data.add(period,  new  Double(value));  [CE]  no  suitable  constructor  found  for  Double(Number)  [CONTEXT]    public  void  add(RegularTimePeriod  period,  Number  value)  {  add(period,  value,  true);    [BUGGY]      fireSeriesChanged();  this.data.add(period,  new  Double(value));  [BUGGY]    }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  Number  value  [VARIABLES]  boolean  Number  value  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	589	589	1	replace	        fireSeriesChanged();    this.data.add(period,  new  Double(value));	  	non-compiled	[CE]  no  suitable  constructor  found  for  Double(Number)	505	None
2462	[BUG]  [BUGGY]  if(name!=  null)  {  ArrayList();  this.data  =  new  ArrayList();  }  else  {  TimeSeries.init(name,  domain,  range,  timePeriodClass);  }  [CE]  no  suitable  constructor  found  for  Series()  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {    [BUGGY]  if(name!=  null)  {  ArrayList();  this.data  =  new  ArrayList();  }  else  {  TimeSeries.init(name,  domain,  range,  timePeriodClass);  }  [BUGGY]    super(name);  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	174	174	1	replace	if(name!=  null)  {  ArrayList();  this.data  =  new  ArrayList();  }  else  {  TimeSeries.init(name,  domain,  range,  timePeriodClass);  }	      java.util.ArrayList();    this.data    =    new    java.util.ArrayList();    	non-compiled	[CE]  no  suitable  constructor  found  for  Series()	2209	None
2521	[BUG]  [BUGGY]  &&(latest  -  getTimePeriod(1).getSerialIndex()))  {  this.data.add(new  ArrayList(this.maximumItemAge,  this.data.size()));  removed  =  true;  [CE]  bad  operand  types  for  binary  operator  '&&'  [CONTEXT]    public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())    [BUGGY]  &&(latest  -  getTimePeriod(1).getSerialIndex()))  {  this.data.add(new  ArrayList(this.maximumItemAge,  this.data.size()));  removed  =  true;  [BUGGY]    >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	744	744	1	replace	&&(latest  -  getTimePeriod(1).getSerialIndex()))  {  this.data.add(new  ArrayList(this.maximumItemAge,  this.data.size()));  removed  =  true;	      &&(latest    -    getTimePeriod(0).getSerialIndex()))    {    this.data.add(new    ArrayList(this.maximumItemAge,    this.data.size()));    removed    =    true;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&&'	1023	None
2642	[BUG]  [BUGGY]  this.data.add(item);  b.append( "  but  the  series  already  contains  an  observation ");  [CE]  class  or  interface  expected  [CONTEXT]    b.append(   "You  are  attempting  to  add  an  observation  for     ");  b.append(   "the  time  period     ");  b.append(item.getPeriod().toString());  b.append(   "  but  the  series  already  contains  an  observation   ");  b.append(   "  for  that  time  period.  Duplicates  are  not     ");  b.append(   "permitted.Try  using  the  addOrUpdate()  method.   ");  throw  new  SeriesException(b.toString());  }  }  }    [BUGGY]  this.data.add(item);  b.append( "  but  the  series  already  contains  an  observation ");  [BUGGY]      if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  removeAgedItems(false);//  remove  old  items  if  necessary,  but    if  (notify)  {  fireSeriesChanged();  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	536	536	1	replace	this.data.add(item);  b.append( "  but  the  series  already  contains  an  observation ");	  if(notify)    {    	non-compiled	[CE]  class  or  interface  expected	891	None
2701	[BUG]  [BUGGY]  if(startIndex  <  end)  {  if(startIndex  >  end)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  bad  operand  types  for  binary  operator  [CONTEXT]    throw  new  IllegalArgumentException(   "Null  'end'  argument.   ");  }  if  (start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException(     "Requires  start  on  or  before  end.   ");  }  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);    [BUGGY]  if(startIndex  <  end)  {  if(startIndex  >  end)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  emptyRange  =  true;  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	935	935	1	replace	if(startIndex  <  end)  {  if(startIndex  >  end)  {  throw  new  IllegalArgumentException( " ");  }	      	non-compiled	[CE]  bad  operand  types  for  binary  operator  	1803	None
2702	[BUG]  [BUGGY]  if(startIndex  <  end)  {  if(startIndex  ==  this.data.size()  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  bad  operand  types  for  binary  operator  [CONTEXT]    throw  new  IllegalArgumentException(   "Null  'end'  argument.   ");  }  if  (start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException(     "Requires  start  on  or  before  end.   ");  }  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);    [BUGGY]  if(startIndex  <  end)  {  if(startIndex  ==  this.data.size()  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  emptyRange  =  true;  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	935	935	1	replace	if(startIndex  <  end)  {  if(startIndex  ==  this.data.size()  >  0)  {  throw  new  IllegalArgumentException( " ");  }	      	non-compiled	[CE]  bad  operand  types  for  binary  operator  	1803	None
3181	[BUG]  [BUGGY]  data.add(period,  value,  null);  [CE]  illegal  start  of  expression  [CONTEXT]    public  void  add(RegularTimePeriod  period,  double  value)  {  add(period,  value,  true);    [BUGGY]  data.add(period,  value,  null);  [BUGGY]    }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  double  value  [VARIABLES]  boolean  double  value  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.2581988897471611	562	562	1	replace	data.add(period,  value,  null);	      data.add(period,    value);    	non-compiled	[CE]  illegal  start  of  expression	2787	None
3242	[BUG]  [BUGGY]  if(isDateTimePeriod(last.getPeriod()).compareTo(item)>  0)  {  [CE]  cannot  find  symbol  [CONTEXT]    if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);    [BUGGY]  if(isDateTimePeriod(last.getPeriod()).compareTo(item)>  0)  {  [BUGGY]    this.data.add(item);  added  =  true;  }  else  {  int  index  =  Collections.binarySearch(this.data,  item);  if  (index  <  0)  {  this.data.add(-index  -  1,  item);  added  =  true;  }  else  {  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	514	514	1	replace	if(isDateTimePeriod(last.getPeriod()).compareTo(item)>  0)  {	  if(last.getPeriod().compareTo(item)>    0)    {    	non-compiled	[CE]  cannot  find  symbol	698	None
3302	[BUG]  [BUGGY]      int  count  =  getItemCount();  int  count  =  getItemCount()  +  1;  [CE]  variable  count  is  already  defined  in  method  removeAgedItems(boolean)  [CONTEXT]    public  void  removeAgedItems(boolean  notify)  {      [BUGGY]      int  count  =  getItemCount();  int  count  =  getItemCount()  +  1;  [BUGGY]    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())  >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	740	740	1	replace	        int    count    =    getItemCount();    int  count  =  getItemCount()  +  1;	  	non-compiled	[CE]  variable  count  is  already  defined  in  method  removeAgedItems(boolean)	1263	None
3303	[BUG]  [BUGGY]      int  count  =  getItemCount();  int  count  =  getItemCount(0);  [CE]  variable  count  is  already  defined  in  method  removeAgedItems(boolean)  [CONTEXT]    public  void  removeAgedItems(boolean  notify)  {      [BUGGY]      int  count  =  getItemCount();  int  count  =  getItemCount(0);  [BUGGY]    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())  >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	740	740	1	replace	        int    count    =    getItemCount();    int  count  =  getItemCount(0);	  	non-compiled	[CE]  variable  count  is  already  defined  in  method  removeAgedItems(boolean)	1263	None
3361	[BUG]  [BUGGY]  data.add(period,  new  Double(value),  value);  [CE]  illegal  start  of  expression  [CONTEXT]    public  void  add(RegularTimePeriod  period,  double  value)  {  add(period,  value,  true);    [BUGGY]  data.add(period,  new  Double(value),  value);  [BUGGY]    }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  double  value  [VARIABLES]  boolean  double  value  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.2581988897471611	562	562	1	replace	data.add(period,  new  Double(value),  value);	      data.add(period,    new    Double(value));    	non-compiled	[CE]  illegal  start  of  expression	1743	None
3362	[BUG]  [BUGGY]  data.add(period,  new  Double(value),  this);  [CE]  illegal  start  of  expression  [CONTEXT]    public  void  add(RegularTimePeriod  period,  double  value)  {  add(period,  value,  true);    [BUGGY]  data.add(period,  new  Double(value),  this);  [BUGGY]    }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  double  value  [VARIABLES]  boolean  double  value  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.2581988897471611	562	562	1	replace	data.add(period,  new  Double(value),  this);	      data.add(period,    new    Double(value));    	non-compiled	[CE]  illegal  start  of  expression	1743	None
3422	[BUG]  [BUGGY]  data.add(period,  value,  null);  [CE]  illegal  start  of  expression  [CONTEXT]    public  void  add(RegularTimePeriod  period,  Number  value)  {  add(period,  value,  true);    [BUGGY]  data.add(period,  value,  null);  [BUGGY]    }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  Number  value  [VARIABLES]  boolean  Number  value  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	589	589	1	replace	data.add(period,  value,  null);	      data.add(period,    value);    	non-compiled	[CE]  illegal  start  of  expression	507	None
3482	[BUG]  [BUGGY]  if(item  ==  null  ||  item.getPeriod().getClass()!=  this.timePeriodClass)  {  if(item  ==  null  ||  item.getPeriod().getClass()!=  this.timePeriodClass)  }  [CE]  illegal  start  of  expression  [CONTEXT]    public  void  add(TimeSeriesDataItem  item,  boolean  notify)  {    [BUGGY]  if(item  ==  null  ||  item.getPeriod().getClass()!=  this.timePeriodClass)  {  if(item  ==  null  ||  item.getPeriod().getClass()!=  this.timePeriodClass)  }  [BUGGY]    throw  new  IllegalArgumentException(   "Null  'item'  argument.   ");  }  if  (!item.getPeriod().getClass().equals(this.timePeriodClass))  {  StringBuffer  b  =  new  StringBuffer();  b.append(   "You  are  trying  to  add  data  where  the  time  period  class     ");  b.append(   "is     ");  b.append(item.getPeriod().getClass().getName());  b.append(   ",  but  the  TimeSeries  is  expecting  an  instance  of     ");  b.append(this.timePeriodClass.getName());  b.append(   ".   ");  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	491	491	1	replace	if(item    ==    null    ||    item.getPeriod().getClass()!=    this.timePeriodClass)    {    if(item  ==  null  ||  item.getPeriod().getClass()!=  this.timePeriodClass)  }	  	non-compiled	[CE]  illegal  start  of  expression	1802	None
3483	[BUG]  [BUGGY]  if(item  ==  null  ||  item.getPeriod().getClass()!=  this.timePeriodClass)  {  if(item  ==  null  ||  item.getPeriod().getClass()!=  this.timePeriodClass)  <  [CE]  generics  are  not  supported  in  -source  1.4  [CONTEXT]    public  void  add(TimeSeriesDataItem  item,  boolean  notify)  {    [BUGGY]  if(item  ==  null  ||  item.getPeriod().getClass()!=  this.timePeriodClass)  {  if(item  ==  null  ||  item.getPeriod().getClass()!=  this.timePeriodClass)  <  [BUGGY]    throw  new  IllegalArgumentException(   "Null  'item'  argument.   ");  }  if  (!item.getPeriod().getClass().equals(this.timePeriodClass))  {  StringBuffer  b  =  new  StringBuffer();  b.append(   "You  are  trying  to  add  data  where  the  time  period  class     ");  b.append(   "is     ");  b.append(item.getPeriod().getClass().getName());  b.append(   ",  but  the  TimeSeries  is  expecting  an  instance  of     ");  b.append(this.timePeriodClass.getName());  b.append(   ".   ");  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	491	491	1	replace	if(item    ==    null    ||    item.getPeriod().getClass()!=    this.timePeriodClass)    {    if(item  ==  null  ||  item.getPeriod().getClass()!=  this.timePeriodClass)  <	  	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	1802	None
3542	[BUG]  [BUGGY]  long  latest  =  getTimePeriod(getItemCount()  -  1);  [CE]  incompatible  types  [CONTEXT]    public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {    [BUGGY]  long  latest  =  getTimePeriod(getItemCount()  -  1);  [BUGGY]    boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())  >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	741	741	1	replace	long  latest  =  getTimePeriod(getItemCount()  -  1);	      	non-compiled	[CE]  incompatible  types	195	None
3601	[BUG]  [BUGGY]  this.data.add(index);  [CE]  no  suitable  method  found  for  add(int)  [CONTEXT]    public  TimeSeriesDataItem  getDataItem(int  index)  {    [BUGGY]  this.data.add(index);  [BUGGY]    return  (TimeSeriesDataItem)  this.data.get(index);  }  [CLASS]  TimeSeries  [METHOD]  getDataItem  [RETURN_TYPE]  TimeSeriesDataItem  int  index  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  long  maximumItemAge  periods  serialVersionUID  int  count  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	341	341	1	replace	this.data.add(index);	      this.data.get(index);    	non-compiled	[CE]  no  suitable  method  found  for  add(int)	412	None
3662	[BUG]  [BUGGY]  int  endIndex  =  indexOf('n',  startIndex);  [CE]  variable  endIndex  is  already  defined  in  method  createCopy(RegularTimePeriod,RegularTimePeriod)  [CONTEXT]    if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  }  else  {    [BUGGY]  int  endIndex  =  indexOf('n',  startIndex);  [BUGGY]    return  createCopy(startIndex,  endIndex);  }  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	953	953	1	replace	int  endIndex  =  indexOf('n',  startIndex);	      int    startIndex    =    indexOf('n',    startIndex);    	non-compiled	[CE]  variable  endIndex  is  already  defined  in  method  createCopy(RegularTimePeriod,RegularTimePeriod)	1395	None
3782	[BUG]  [BUGGY]  this.domain  =  domain? "domain "  : "domain ";  [CE]  incompatible  types  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);    [BUGGY]  this.domain  =  domain? "domain "  : "domain ";  [BUGGY]    this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	175	175	1	replace	this.domain  =  domain? "domain "  : "domain ";	  this.domain    =   "domain   ";    	non-compiled	[CE]  incompatible  types	3	None
3842	[BUG]  [BUGGY]  item.setValue(value);  notifyListeners(new  DataItem(period,  value));  [CE]  illegal  start  of  expression  [CONTEXT]    public  void  add(RegularTimePeriod  period,  Number  value,  boolean  notify)  {  TimeSeriesDataItem  item  =  new  TimeSeriesDataItem(period,  value);  add(item,  notify);    [BUGGY]  item.setValue(value);  notifyListeners(new  DataItem(period,  value));  [BUGGY]    }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  Number  value  boolean  notify  [VARIABLES]  boolean  notify  Number  value  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	604	604	1	replace	item.setValue(value);  notifyListeners(new  DataItem(period,  value));	      item.setValue(value);    fireSeriesChanged();    	non-compiled	[CE]  illegal  start  of  expression	1563	None
3902	[BUG]  [BUGGY]  long  maximumItemAge  =  getTimePeriod(1).getSerialIndex();  [CE]  cannot  find  symbol  latest  [CONTEXT]    public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {    [BUGGY]  long  maximumItemAge  =  getTimePeriod(1).getSerialIndex();  [BUGGY]    long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())  >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	741	741	1	replace	long  maximumItemAge  =  getTimePeriod(1).getSerialIndex();	      long    maximumItemAge    =    getTimePeriod(getItemCount()    -    1).getSerialIndex();    	non-compiled	[CE]  cannot  find  symbol  latest	3483	None
4021	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]    throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(   "Requires  start  >=  0.   ");  }    [BUGGY]  if(end  <  start)  {  if(start  >  end)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    throw  new  IllegalArgumentException(   "Requires  start  <=  end.   ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	882	882	1	add	if(end  <  start)  {  if(start  >  end)  {  throw  new  IllegalArgumentException( " ");  }	      	compilable	  [FE]  IllegalArgumentException	2619	1
4022	[BUG]  [BUGGY]  if(end  <  start)  {  if(start  >  end)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [CONTEXT]    throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(   "Requires  start  >=  0.   ");  }    [BUGGY]  if(end  <  start)  {  if(start  >  end)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    throw  new  IllegalArgumentException(   "Requires  start  <=  end.   ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	882	882	1	replace	if(end  <  start)  {  if(start  >  end)  {  throw  new  IllegalArgumentException( " ");  }	      	compilable	  [FE]  IllegalArgumentException	2619	1
4141	[BUG]  [BUGGY]  int  count  =  item.getItemCount  -  1;  [CE]  cannot  find  symbol  getItemCount  [CONTEXT]    b.append(   "is     ");  b.append(item.getPeriod().getClass().getName());  b.append(   ",  but  the  TimeSeries  is  expecting  an  instance  of     ");  b.append(this.timePeriodClass.getName());  b.append(   ".   ");  throw  new  SeriesException(b.toString());  }  boolean  added  =  false;    [BUGGY]  int  count  =  item.getItemCount  -  1;  [BUGGY]    if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  added  =  true;  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	507	507	1	replace	int  count  =  item.getItemCount  -  1;	  int    count    =    getItemCount    -    1;    	non-compiled	[CE]  cannot  find  symbol  getItemCount	4801	None
4142	[BUG]  [BUGGY]  int  count  =  item.length  -  1;  [CE]  cannot  find  symbol  length  [CONTEXT]    b.append(   "is     ");  b.append(item.getPeriod().getClass().getName());  b.append(   ",  but  the  TimeSeries  is  expecting  an  instance  of     ");  b.append(this.timePeriodClass.getName());  b.append(   ".   ");  throw  new  SeriesException(b.toString());  }  boolean  added  =  false;    [BUGGY]  int  count  =  item.length  -  1;  [BUGGY]    if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  added  =  true;  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	507	507	1	replace	int  count  =  item.length  -  1;	  int    count    =    getItemCount    -    1;    	non-compiled	[CE]  cannot  find  symbol  length	4801	None
4261	[BUG]  [BUGGY]  if(endIndex  <  0)  {  if(endIndex  >  endIndex)  {  throw  new  SeriesException( " ");  }  [CE]  illegal  start  of  expression  [CONTEXT]    int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period    [BUGGY]  if(endIndex  <  0)  {  if(endIndex  >  endIndex)  {  throw  new  SeriesException( " ");  }  [BUGGY]    endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  }  if  (endIndex  <  0)  {  emptyRange  =  true;  }  if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  }  else  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	942	943	1	replace	if(endIndex  <  0)  {  if(endIndex  >  endIndex)  {  throw  new  SeriesException( " ");  }	      if(endIndex    <    0)    {    if(startIndex    >    endIndex)    {    throw    new    SeriesException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	2401	None
4322	[BUG]  [BUGGY]  if(name  ==  null)  {  this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  timePeriodClass);  }  else  {  this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DES  [CE]  ')'  expected  [CONTEXT]    public  TimeSeries(Comparable  name,  Class  timePeriodClass)  {    [BUGGY]  if(name  ==  null)  {  this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  timePeriodClass);  }  else  {  this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DES  [BUGGY]    this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,    timePeriodClass);  timePeriodClass);  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	155	156	1	replace	if(name  ==  null)  {  this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  timePeriodClass);  }  else  {  this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DES	      this(name,    DEFAULT_DOMAIN_DESCRIPTION,    DEFAULT_RANGE_DESCRIPTION);    	non-compiled	[CE]  ')'  expected	290	None
4382	[BUG]  [BUGGY]  java.util.ArrayList();  [CE]  cannot  find  symbol  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);    [BUGGY]  java.util.ArrayList();  [BUGGY]    this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	175	175	1	replace	java.util.ArrayList();	      java.util.ArrayList();    this.domain    =    domain;    	non-compiled	[CE]  cannot  find  symbol	3183	None
4442	[BUG]  [BUGGY]  this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  timePeriodClass);  [CE]  cannot  reference  timePeriodClass  before  supertype  constructor  has  been  called  [CONTEXT]    public  TimeSeries(Comparable  name)  {    [BUGGY]  this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  timePeriodClass);  [BUGGY]    this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,    Day.class);  Day.class);  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Comparable)  Comparable  name  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.4082482904638631	142	143	1	replace	this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  timePeriodClass);	      this(name,    DEFAULT_DOMAIN_DESCRIPTION,    DEFAULT_RANGE_DESCRIPTION,    TimePeriodClass);    	non-compiled	[CE]  cannot  reference  timePeriodClass  before  supertype  constructor  has  been  called	1083	None
4561	[BUG]  [BUGGY]  if(end  <  start)  {  throw  new  IllegalArgumentException(   "   ");  Alternatively  else  if(end  <  start)  {  throw  new  IllegalArgumentException( "   ");  }  [CE]  not  a  statement  [CONTEXT]    throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(   "Requires  start  >=  0.   ");  }  if  (end  <  start)  {    [BUGGY]  if(end  <  start)  {  throw  new  IllegalArgumentException(   "   ");  Alternatively  else  if(end  <  start)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]    throw  new  IllegalArgumentException(   "Requires  start  <=  end.   ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	883	883	1	replace	if(end  <  start)  {  throw  new  IllegalArgumentException(   "   ");  Alternatively  else  if(end  <  start)  {  throw  new  IllegalArgumentException( "   ");  }	      if(end    <    start)    {    throw    new    IllegalArgumentException(   "   ");    }    else    if(end    <    start)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	4083	None
4622	[BUG]  [BUGGY]  it.remove();  added  =  true;  [CE]  cannot  find  symbol  it  [CONTEXT]    b.append(this.timePeriodClass.getName());  b.append(   ".   ");  throw  new  SeriesException(b.toString());  }  boolean  added  =  false;  int  count  =  getItemCount();  if  (count  ==  0)  {  this.data.add(item);    [BUGGY]  it.remove();  added  =  true;  [BUGGY]    }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  added  =  true;  }  else  {  int  index  =  Collections.binarySearch(this.data,  item);  if  (index  <  0)  {  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	510	510	1	replace	it.remove();  added  =  true;	  added    =    false;    	non-compiled	[CE]  cannot  find  symbol  it	1491	None
4742	[BUG]  [BUGGY]  this.data  =  new  ArrayList  >>  Comparable>(DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  timePeriodClass);  [CE]  '('  or  '['  expected  [CONTEXT]    public  TimeSeries(Comparable  name,  Class  timePeriodClass)  {  this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  timePeriodClass);    [BUGGY]  this.data  =  new  ArrayList  >>  Comparable>(DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  timePeriodClass);  [BUGGY]    }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	157	157	1	replace	this.data  =  new  ArrayList  >>  Comparable>(DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  timePeriodClass);	      this.data    =    new    ArrayList    <    Comparable>(DEFAULT_DOMAIN_DESCRIPTION,    DEFAULT_RANGE_DESCRIPTION);    	non-compiled	[CE]  '('  or  '['  expected	1922	None
4861	[BUG]  [BUGGY]  this.data.add(-item,  item);  [CE]  illegal  start  of  type  [CONTEXT]    public  void  add(TimeSeriesDataItem  item,  boolean  notify)  {    [BUGGY]  this.data.add(-item,  item);  [BUGGY]    throw  new  IllegalArgumentException(   "Null  'item'  argument.   ");  }  if  (!item.getPeriod().getClass().equals(this.timePeriodClass))  {  StringBuffer  b  =  new  StringBuffer();  b.append(   "You  are  trying  to  add  data  where  the  time  period  class     ");  b.append(   "is     ");  b.append(item.getPeriod().getClass().getName());  b.append(   ",  but  the  TimeSeries  is  expecting  an  instance  of     ");  b.append(this.timePeriodClass.getName());  b.append(   ".   ");  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	491	491	1	replace	this.data.add(-item,  item);	      	non-compiled	[CE]  illegal  start  of  type	483	None
4862	[BUG]  [BUGGY]  this.data.add(-item);  [CE]  illegal  start  of  type  [CONTEXT]    public  void  add(TimeSeriesDataItem  item,  boolean  notify)  {    [BUGGY]  this.data.add(-item);  [BUGGY]    throw  new  IllegalArgumentException(   "Null  'item'  argument.   ");  }  if  (!item.getPeriod().getClass().equals(this.timePeriodClass))  {  StringBuffer  b  =  new  StringBuffer();  b.append(   "You  are  trying  to  add  data  where  the  time  period  class     ");  b.append(   "is     ");  b.append(item.getPeriod().getClass().getName());  b.append(   ",  but  the  TimeSeries  is  expecting  an  instance  of     ");  b.append(this.timePeriodClass.getName());  b.append(   ".   ");  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	491	491	1	replace	this.data.add(-item);	      	non-compiled	[CE]  illegal  start  of  type	483	None
4922	[BUG]  [BUGGY]  this.data  =  createDataItem(DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  Day.class);  [CE]  illegal  start  of  expression  [CONTEXT]    public  TimeSeries(Comparable  name)  {  this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  Day.class);    [BUGGY]  this.data  =  createDataItem(DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  Day.class);  [BUGGY]    }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Comparable)  Comparable  name  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.4082482904638631	144	144	1	replace	this.data  =  createDataItem(DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  Day.class);	      this.data    =    createDataItem(name,    DEFAULT_DOMAIN_DESCRIPTION,    DEFAULT_RANGE_DESCRIPTION,    Day.class);    	non-compiled	[CE]  illegal  start  of  expression	1657	None
5042	[BUG]  [BUGGY]  while(item!=  null  &&  item.isArray())  {  add(item);  [CE]  illegal  start  of  expression  [CONTEXT]    public  void  add(RegularTimePeriod  period,  double  value,  boolean  notify)  {  TimeSeriesDataItem  item  =  new  TimeSeriesDataItem(period,  value);  add(item,  notify);    [BUGGY]  while(item!=  null  &&  item.isArray())  {  add(item);  [BUGGY]    }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  double  value  boolean  notify  [VARIABLES]  boolean  notify  double  value  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.2581988897471611	576	576	1	replace	while(item!=  null  &&  item.isArray())  {  add(item);	      while(item!=    null    &&    item.isLocal())    {    add(item);    	non-compiled	[CE]  illegal  start  of  expression	435	None
5222	[BUG]  [BUGGY]  this(name,  TimeZone.getDefault(),  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  dateTimePeriodClass);  [CE]  cannot  find  symbol  dateTimePeriodClass  [CONTEXT]    public  TimeSeries(Comparable  name,  Class  timePeriodClass)  {    [BUGGY]  this(name,  TimeZone.getDefault(),  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  dateTimePeriodClass);  [BUGGY]    this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,    timePeriodClass);  timePeriodClass);  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	155	156	1	replace	this(name,  TimeZone.getDefault(),  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  dateTimePeriodClass);	      this(name,    TimeZone.getDefault(),    DEFAULT_DOMAIN_DESCRIPTION,    DEFAULT_RANGE_DESCRIPTION);    	non-compiled	[CE]  cannot  find  symbol  dateTimePeriodClass	2702	None
5282	[BUG]  [BUGGY]  TimeSeriesDataItem  item  =(TimeSeriesDataItem)this.data.get(index);  [CE]  missing  return  statement  [CONTEXT]    public  TimeSeriesDataItem  getDataItem(int  index)  {    [BUGGY]  TimeSeriesDataItem  item  =(TimeSeriesDataItem)this.data.get(index);  [BUGGY]    return  (TimeSeriesDataItem)  this.data.get(index);  }  [CLASS]  TimeSeries  [METHOD]  getDataItem  [RETURN_TYPE]  TimeSeriesDataItem  int  index  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  long  maximumItemAge  periods  serialVersionUID  int  count  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	341	341	1	replace	TimeSeriesDataItem  item  =(TimeSeriesDataItem)this.data.get(index);	      TimeSeriesDataItem    this    =(TimeSeriesDataItem)this.data.get(index);    	non-compiled	[CE]  missing  return  statement	409	None
5342	[BUG]  [BUGGY]      fireSeriesChanged();  fireSeriesChanged();  b.append( ", ");  [CE]  cannot  find  symbol  b  [CONTEXT]    b.append(this.timePeriodClass.getName());  b.append(   ".   ");  throw  new  SeriesException(b.toString());  }  boolean  added  =  false;  int  count  =  getItemCount();  if  (count  ==  0)  {  this.data.add(item);    [BUGGY]      fireSeriesChanged();  fireSeriesChanged();  b.append( ", ");  [BUGGY]    added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  added  =  true;  }  else  {  int  index  =  Collections.binarySearch(this.data,  item);  if  (index  <  0)  {  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	510	510	1	replace	        fireSeriesChanged();    fireSeriesChanged();  b.append( ", ");	  	non-compiled	[CE]  cannot  find  symbol  b	5341	None
5462	[BUG]  [BUGGY]  RegularTimePeriod  start  =(RegularTimePeriod)this.data.get(index);  [CE]  illegal  start  of  type  [CONTEXT]    throws  CloneNotSupportedException  {    [BUGGY]  RegularTimePeriod  start  =(RegularTimePeriod)this.data.get(index);  [BUGGY]    if  (start  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'start'  argument.   ");  }  if  (end  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'end'  argument.   ");  }  if  (start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException(     "Requires  start  on  or  before  end.   ");  }  boolean  emptyRange  =  false;  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	921	921	1	replace	RegularTimePeriod  start  =(RegularTimePeriod)this.data.get(index);	      RegularTimePeriod    start    =(RegularTimePeriod)this.data.get(startIndex);    	non-compiled	[CE]  illegal  start  of  type	25	None
5581	[BUG]  [BUGGY]  for(TimeSeriesDataItem  item  :  copy.data)  {  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [CONTEXT]    throws  CloneNotSupportedException  {    [BUGGY]  for(TimeSeriesDataItem  item  :  copy.data)  {  [BUGGY]    if  (start  <  0)  {  throw  new  IllegalArgumentException(   "Requires  start  >=  0.   ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(   "Requires  start  <=  end.   ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	879	879	1	replace	for(TimeSeriesDataItem  item  :  copy.data)  {	      for(TimeSeriesDataItem    item    :    copy.data)    {    TimeSeriesDataItem    item    =(TimeSeriesDataItem)super.clone();    item.getDataItem(0)!=    null;    if(start    <    0)    {    throw    new    IllegalArgumentException(   "Invalid    start    of    series.   ");    }    	non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	1383	None
5582	[BUG]  [BUGGY]  for(TimeSeriesDataItem  item  :  copy.data)  {  TimeSeriesDataItem  item  =(TimeSeriesDataItem)super.clone();  item.getDataItem(0)!=  null;  if(start  >  0)  {  throw  new  IllegalArgumentException( "Invalid  start  of  series. ");  }  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [CONTEXT]    throws  CloneNotSupportedException  {    [BUGGY]  for(TimeSeriesDataItem  item  :  copy.data)  {  TimeSeriesDataItem  item  =(TimeSeriesDataItem)super.clone();  item.getDataItem(0)!=  null;  if(start  >  0)  {  throw  new  IllegalArgumentException( "Invalid  start  of  series. ");  }  [BUGGY]    if  (start  <  0)  {  throw  new  IllegalArgumentException(   "Requires  start  >=  0.   ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException(   "Requires  start  <=  end.   ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	879	879	1	replace	for(TimeSeriesDataItem  item  :  copy.data)  {  TimeSeriesDataItem  item  =(TimeSeriesDataItem)super.clone();  item.getDataItem(0)!=  null;  if(start  >  0)  {  throw  new  IllegalArgumentException( "Invalid  start  of  series. ");  }	      for(TimeSeriesDataItem    item    :    copy.data)    {    TimeSeriesDataItem    item    =(TimeSeriesDataItem)super.clone();    item.getDataItem(0)!=    null;    if(start    <    0)    {    throw    new    IllegalArgumentException(   "Invalid    start    of    series.   ");    }    	non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	1383	None
5761	[BUG]  [BUGGY]  if(endIndex  <  0)  {  if(startIndex  >=  0)  {  emptyRange  =  true;  }  [CE]  illegal  start  of  expression  [CONTEXT]     "Requires  start  on  or  before  end.   ");  }  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }    [BUGGY]  if(endIndex  <  0)  {  if(startIndex  >=  0)  {  emptyRange  =  true;  }  [BUGGY]    int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  emptyRange  =  true;  }  if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	939	939	1	replace	if(endIndex  <  0)  {  if(startIndex  >=  0)  {  emptyRange  =  true;  }	      if(startIndex    <    this.data.size())    {    if(startIndex    >=    0)    {    emptyRange    =    true;    }    	non-compiled	[CE]  illegal  start  of  expression	4263	None
5762	[BUG]  [BUGGY]  if(endIndex  <  0)  {  if(startIndex  >  0)  {  emptyRange  =  true;  }  [CE]  illegal  start  of  expression  [CONTEXT]     "Requires  start  on  or  before  end.   ");  }  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }    [BUGGY]  if(endIndex  <  0)  {  if(startIndex  >  0)  {  emptyRange  =  true;  }  [BUGGY]    int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  emptyRange  =  true;  }  if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	939	939	1	replace	if(endIndex  <  0)  {  if(startIndex  >  0)  {  emptyRange  =  true;  }	      if(startIndex    <    this.data.size())    {    if(startIndex    >=    0)    {    emptyRange    =    true;    }    	non-compiled	[CE]  illegal  start  of  expression	4263	None
5942	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;    [BUGGY]      this.range  =  domain;  if(domain  ==  null)  {  this.domain  =  domain;  }  else  {  this.range  =  range;  }  [BUGGY]    this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	176	176	1	add	        this.range    =    domain;    if(domain  ==  null)  {  this.domain  =  domain;  }  else  {  this.range  =  range;  }	  	compilable	  [FE]  IllegalArgumentException	2475	1
5943	[BUG]  [BUGGY]      this.range  =  domain;  if(domain  ==  null)  {  this.domain  =  domain;  }  else  {  this.range  =  range;  }  [FE]  IllegalArgumentException  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;    [BUGGY]      this.range  =  domain;  if(domain  ==  null)  {  this.domain  =  domain;  }  else  {  this.range  =  range;  }  [BUGGY]    this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	176	176	1	replace	        this.range    =    domain;    if(domain  ==  null)  {  this.domain  =  domain;  }  else  {  this.range  =  range;  }	  	compilable	  [FE]  IllegalArgumentException	2475	1
5943	[BUG]  [BUGGY]      this.range  =  domain;  if(domain  ==  null)  {  this.data  =  new  ArrayList();  }  else  {  this.data.add(name);  }  [CE]  cannot  find  symbol  [CONTEXT]    public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;    [BUGGY]      this.range  =  domain;  if(domain  ==  null)  {  this.data  =  new  ArrayList();  }  else  {  this.data.add(name);  }  [BUGGY]    this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	176	176	1	replace	        this.range    =    domain;    if(domain  ==  null)  {  this.data  =  new  ArrayList();  }  else  {  this.data.add(name);  }	  	non-compiled	[CE]  cannot  find  symbol	2475	None
6001	[BUG]  [BUGGY]  this.data.add(item,  count,  notify);  [CE]  no  suitable  method  found  for  add(TimeSeriesDataItem,int,boolean)  [CONTEXT]    b.append(   ",  but  the  TimeSeries  is  expecting  an  instance  of     ");  b.append(this.timePeriodClass.getName());  b.append(   ".   ");  throw  new  SeriesException(b.toString());  }  boolean  added  =  false;  int  count  =  getItemCount();  if  (count  ==  0)  {    [BUGGY]  this.data.add(item,  count,  notify);  [BUGGY]    added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  added  =  true;  }  else  {  int  index  =  Collections.binarySearch(this.data,  item);  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	509	509	1	replace	this.data.add(item,  count,  notify);	  this.data.add(item,    notify);    	non-compiled	[CE]  no  suitable  method  found  for  add(TimeSeriesDataItem,int,boolean)	1298	None
6002	[BUG]  [BUGGY]  this.data.add(item,  index,  notify);  [CE]  cannot  find  symbol  index  [CONTEXT]    b.append(   ",  but  the  TimeSeries  is  expecting  an  instance  of     ");  b.append(this.timePeriodClass.getName());  b.append(   ".   ");  throw  new  SeriesException(b.toString());  }  boolean  added  =  false;  int  count  =  getItemCount();  if  (count  ==  0)  {    [BUGGY]  this.data.add(item,  index,  notify);  [BUGGY]    added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  added  =  true;  }  else  {  int  index  =  Collections.binarySearch(this.data,  item);  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	509	509	1	replace	this.data.add(item,  index,  notify);	  this.data.add(item,    notify);    	non-compiled	[CE]  cannot  find  symbol  index	1298	None
6182	[BUG]  [BUGGY]  this.data  =  new  ArrayList  <  Comparable>(timePeriodClass,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  timePeriodClass);  [CE]  generics  are  not  supported  in  -source  1.4  [CONTEXT]    public  TimeSeries(Comparable  name,  Class  timePeriodClass)  {  this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  timePeriodClass);    [BUGGY]  this.data  =  new  ArrayList  <  Comparable>(timePeriodClass,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  timePeriodClass);  [BUGGY]    }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	157	157	1	replace	this.data  =  new  ArrayList  <  Comparable>(timePeriodClass,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  timePeriodClass);	      this.data    =    new    ArrayList    <    Comparable>(timePeriodClass,    DEFAULT_DOMAIN_DESCRIPTION,    DEFAULT_RANGE_DESCRIPTION);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	1923	None
6303	[BUG]  [BUGGY]      if(start.compareTo(start)  >  0)  {  throw  new  IllegalArgumentException(   "Requires  start  on  or  before  end.   ");  }  if(start.compareTo(start)  >  0)  {  throw  new  IllegalArgumentException( "Requires  start  on  or  before  end.   ");  >>  [CE]  illegal  start  of  expression  [CONTEXT]    throws  CloneNotSupportedException  {  if  (start  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'start'  argument.   ");  }    [BUGGY]      if(start.compareTo(start)  >  0)  {  throw  new  IllegalArgumentException(   "Requires  start  on  or  before  end.   ");  }  if(start.compareTo(start)  >  0)  {  throw  new  IllegalArgumentException( "Requires  start  on  or  before  end.   ");  >>  [BUGGY]    if  (end  ==  null)  {  throw  new  IllegalArgumentException(   "Null  'end'  argument.   ");  }  if  (start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException(     "Requires  start  on  or  before  end.   ");  }  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	924	924	1	replace	        if(start.compareTo(start)    >    0)    {    throw    new    IllegalArgumentException(   "Requires    start    on    or    before    end.   ");    }    if(start.compareTo(start)  >  0)  {  throw  new  IllegalArgumentException( "Requires  start  on  or  before  end.   ");  >>	  	non-compiled	[CE]  illegal  start  of  expression	867	None
6422	[BUG]  [BUGGY]  long  maximumItemAge  =  getTimePeriod(getItemCount()  +  1).getSerialIndex();  [CE]  cannot  find  symbol  removed  [CONTEXT]    public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();    [BUGGY]  long  maximumItemAge  =  getTimePeriod(getItemCount()  +  1).getSerialIndex();  [BUGGY]    boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())  >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	742	742	1	replace	long  maximumItemAge  =  getTimePeriod(getItemCount()  +  1).getSerialIndex();	      long    maximum    =    getTimePeriod(getItemCount()    -    1).getSerialIndex();    	non-compiled	[CE]  cannot  find  symbol  removed	5643	None
6602	[BUG]  [BUGGY]  while((  last  -  getTimePeriod(0).getSerialIndex())>  this.maximumItemAge)  {  this.data.remove(0);  [CE]  cannot  find  symbol  last  [CONTEXT]      if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())  >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }    [BUGGY]  while((  last  -  getTimePeriod(0).getSerialIndex())>  this.maximumItemAge)  {  this.data.remove(0);  [BUGGY]    if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	748	748	1	replace	while((  last  -  getTimePeriod(0).getSerialIndex())>  this.maximumItemAge)  {  this.data.remove(0);	      while((    latest    -    getTimePeriod(0).getSerialIndex())>    this.maximumItemAge)    {    this.data.remove(0);    	non-compiled	[CE]  cannot  find  symbol  last	2521	None
6661	[BUG]  [BUGGY]      fireSeriesChanged();  item.addChangeListener(this);  [CE]  cannot  find  symbol  [CONTEXT]    public  void  add(RegularTimePeriod  period,  double  value,  boolean  notify)  {  TimeSeriesDataItem  item  =  new  TimeSeriesDataItem(period,  value);  add(item,  notify);    [BUGGY]      fireSeriesChanged();  item.addChangeListener(this);  [BUGGY]    }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  double  value  boolean  notify  [VARIABLES]  boolean  notify  double  value  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.2581988897471611	576	576	1	replace	        fireSeriesChanged();    item.addChangeListener(this);	  	non-compiled	[CE]  cannot  find  symbol	433	None
6663	[BUG]  [BUGGY]      fireSeriesChanged();  updateBounds(item.getPeriod(),  value);  [CE]  cannot  find  symbol  [CONTEXT]    public  void  add(RegularTimePeriod  period,  double  value,  boolean  notify)  {  TimeSeriesDataItem  item  =  new  TimeSeriesDataItem(period,  value);  add(item,  notify);    [BUGGY]      fireSeriesChanged();  updateBounds(item.getPeriod(),  value);  [BUGGY]    }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  double  value  boolean  notify  [VARIABLES]  boolean  notify  double  value  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.2581988897471611	576	576	1	replace	        fireSeriesChanged();    updateBounds(item.getPeriod(),  value);	  	non-compiled	[CE]  cannot  find  symbol	433	None
6722	[BUG]  [BUGGY]  if(this.adjusted)  {  [CE]  cannot  find  symbol  adjusted  [CONTEXT]    b.append(   "You  are  attempting  to  add  an  observation  for     ");  b.append(   "the  time  period     ");  b.append(item.getPeriod().toString());  b.append(   "  but  the  series  already  contains  an  observation   ");  b.append(   "  for  that  time  period.  Duplicates  are  not     ");  b.append(   "permitted.Try  using  the  addOrUpdate()  method.   ");  throw  new  SeriesException(b.toString());  }  }  }    [BUGGY]  if(this.adjusted)  {  [BUGGY]      if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  removeAgedItems(false);//  remove  old  items  if  necessary,  but    if  (notify)  {  fireSeriesChanged();  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	536	536	1	replace	if(this.adjusted)  {	  if(this.added)    {    	non-compiled	[CE]  cannot  find  symbol  adjusted	2461	None
