bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	original_buggy	action	patch	execution_result	diagnosis	previous_bug_id	new_failing_test_number
2	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]  public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  [BUGGY]  this.domain  = "domain ";  [BUGGY]  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	175	175	1	add	this.domain  = "domain ";	this.domain  =  domain;  	compilable	  [FE]  IllegalArgumentException	63	1
3	[BUG]  [BUGGY]  this.domain  = "domain ";  [FE]  IllegalArgumentException  [CONTEXT]  public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  [BUGGY]  this.domain  = "domain ";  [BUGGY]  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	175	175	1	replace	this.domain  = "domain ";	this.domain  =  domain;  	compilable	  [FE]  IllegalArgumentException	63	1
3	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]  public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  [BUGGY]    [BUGGY]  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	175	175	1	add	  	this.domain  =  domain;  	compilable	  [FE]  IllegalArgumentException	63	1
4	[BUG]  [BUGGY]    [FE]  IllegalArgumentException  [CONTEXT]  public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  [BUGGY]    [BUGGY]  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	175	175	1	replace	  	this.domain  =  domain;  	compilable	  [FE]  IllegalArgumentException	63	1
25	[BUG]  [BUGGY]    RegularTimePeriod  start  =(RegularTimePeriod)this.data.get(startIndex);  [CE]  variable  start  is  already  defined  in  method  createCopy(RegularTimePeriod,RegularTimePeriod)  [CONTEXT]  throws  CloneNotSupportedException  {  [BUGGY]    RegularTimePeriod  start  =(RegularTimePeriod)this.data.get(startIndex);  [BUGGY]  if  (start  ==  null)  {  throw  new  IllegalArgumentException( "Null  'start'  argument. ");  }  if  (end  ==  null)  {  throw  new  IllegalArgumentException( "Null  'end'  argument. ");  }  if  (start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException(   "Requires  start  on  or  before  end. ");  }  boolean  emptyRange  =  false;  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	921	921	1	replace	    RegularTimePeriod  start  =(RegularTimePeriod)this.data.get(startIndex);		non-compiled	[CE]  variable  start  is  already  defined  in  method  createCopy(RegularTimePeriod,RegularTimePeriod)	4	None
26	[BUG]  [BUGGY]    RegularTimePeriod  start  =(RegularTimePeriod)super.clone();  [CE]  variable  start  is  already  defined  in  method  createCopy(RegularTimePeriod,RegularTimePeriod)  [CONTEXT]  throws  CloneNotSupportedException  {  [BUGGY]    RegularTimePeriod  start  =(RegularTimePeriod)super.clone();  [BUGGY]  if  (start  ==  null)  {  throw  new  IllegalArgumentException( "Null  'start'  argument. ");  }  if  (end  ==  null)  {  throw  new  IllegalArgumentException( "Null  'end'  argument. ");  }  if  (start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException(   "Requires  start  on  or  before  end. ");  }  boolean  emptyRange  =  false;  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	921	921	1	replace	    RegularTimePeriod  start  =(RegularTimePeriod)super.clone();		non-compiled	[CE]  variable  start  is  already  defined  in  method  createCopy(RegularTimePeriod,RegularTimePeriod)	4	None
27	[BUG]  [BUGGY]    RegularTimePeriod  start  =(RegularTimePeriod)this.data.get(start);  [CE]  variable  start  is  already  defined  in  method  createCopy(RegularTimePeriod,RegularTimePeriod)  [CONTEXT]  throws  CloneNotSupportedException  {  [BUGGY]    RegularTimePeriod  start  =(RegularTimePeriod)this.data.get(start);  [BUGGY]  if  (start  ==  null)  {  throw  new  IllegalArgumentException( "Null  'start'  argument. ");  }  if  (end  ==  null)  {  throw  new  IllegalArgumentException( "Null  'end'  argument. ");  }  if  (start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException(   "Requires  start  on  or  before  end. ");  }  boolean  emptyRange  =  false;  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	921	921	1	replace	    RegularTimePeriod  start  =(RegularTimePeriod)this.data.get(start);		non-compiled	[CE]  variable  start  is  already  defined  in  method  createCopy(RegularTimePeriod,RegularTimePeriod)	4	None
50	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException( "Requires  start  >=  0. ");  }  if  (end  <  start)  {  [BUGGY]  throw  new  IllegalArgumentException( "Requires  start  >=  end. ");  [BUGGY]  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	883	883	1	add	throw  new  IllegalArgumentException( "Requires  start  >=  end. ");	throw  new  IllegalArgumentException( "Requires  start  <=  end. ");  	compilable	  [FE]  IllegalArgumentException	1	1
51	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Requires  start  >=  end. ");  [FE]  IllegalArgumentException  [CONTEXT]  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException( "Requires  start  >=  0. ");  }  if  (end  <  start)  {  [BUGGY]  throw  new  IllegalArgumentException( "Requires  start  >=  end. ");  [BUGGY]  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	883	883	1	replace	throw  new  IllegalArgumentException( "Requires  start  >=  end. ");	throw  new  IllegalArgumentException( "Requires  start  <=  end. ");  	compilable	  [FE]  IllegalArgumentException	1	1
51	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException( "Requires  start  >=  0. ");  }  if  (end  <  start)  {  [BUGGY]    [BUGGY]  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	883	883	1	add	  	throw  new  IllegalArgumentException( "Requires  start  <=  end. ");  	compilable	  [FE]  AssertionFailedError	1	1
52	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException( "Requires  start  >=  0. ");  }  if  (end  <  start)  {  [BUGGY]    [BUGGY]  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	883	883	1	replace	  	throw  new  IllegalArgumentException( "Requires  start  <=  end. ");  	compilable	  [FE]  AssertionFailedError	1	1
74	[BUG]  [BUGGY]  return  getDataItem(index).getPeriodClass();  [CE]  cannot  find  symbol  [CONTEXT]  public  RegularTimePeriod  getTimePeriod(int  index)  {  [BUGGY]  return  getDataItem(index).getPeriodClass();  [BUGGY]  }  [CLASS]  TimeSeries  [METHOD]  getTimePeriod  [RETURN_TYPE]  RegularTimePeriod  int  index  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  long  maximumItemAge  periods  serialVersionUID  int  count  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	372	372	1	replace	return  getDataItem(index).getPeriodClass();	return  getDataItem(index).getPeriod();  	non-compiled	[CE]  cannot  find  symbol	81	None
75	[BUG]  [BUGGY]    [CE]  missing  return  statement  [CONTEXT]  public  RegularTimePeriod  getTimePeriod(int  index)  {  [BUGGY]    [BUGGY]  }  [CLASS]  TimeSeries  [METHOD]  getTimePeriod  [RETURN_TYPE]  RegularTimePeriod  int  index  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  long  maximumItemAge  periods  serialVersionUID  int  count  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	372	372	1	replace	  	return  getDataItem(index).getPeriod();  	non-compiled	[CE]  missing  return  statement	81	None
97	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]  public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  [BUGGY]    this.maximumItemAge  =  Long.MAX_VALUE;  [BUGGY]  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	181	181	1	add	    this.maximumItemAge  =  Long.MAX_VALUE;		compilable	  [FE]  IllegalArgumentException	76	1
98	[BUG]  [BUGGY]    this.maximumItemAge  =  Long.MAX_VALUE;  [FE]  IllegalArgumentException  [CONTEXT]  public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  [BUGGY]    this.maximumItemAge  =  Long.MAX_VALUE;  [BUGGY]  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	181	181	1	replace	    this.maximumItemAge  =  Long.MAX_VALUE;		compilable	  [FE]  IllegalArgumentException	76	1
121	[BUG]  [BUGGY]    while(item.getPeriod().compareTo(last)>  0)  {  this.data.add(item);  [CE]  'else'  without  'if'  [CONTEXT]  if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  [BUGGY]    while(item.getPeriod().compareTo(last)>  0)  {  this.data.add(item);  [BUGGY]  added  =  true;  }  else  {  int  index  =  Collections.binarySearch(this.data,  item);  if  (index  <  0)  {  this.data.add(-index  -  1,  item);  added  =  true;  }  else  {  StringBuffer  b  =  new  StringBuffer();  b.append( "You  are  attempting  to  add  an  observation  for   ");  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	516	516	1	replace	    while(item.getPeriod().compareTo(last)>  0)  {  this.data.add(item);		non-compiled	[CE]  'else'  without  'if'	104	None
122	[BUG]  [BUGGY]    while(item.getPeriod().compareTo(last)>  0)  {  this.data.add(-index  -  1,  item);  [CE]  'else'  without  'if'  [CONTEXT]  if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  [BUGGY]    while(item.getPeriod().compareTo(last)>  0)  {  this.data.add(-index  -  1,  item);  [BUGGY]  added  =  true;  }  else  {  int  index  =  Collections.binarySearch(this.data,  item);  if  (index  <  0)  {  this.data.add(-index  -  1,  item);  added  =  true;  }  else  {  StringBuffer  b  =  new  StringBuffer();  b.append( "You  are  attempting  to  add  an  observation  for   ");  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	516	516	1	replace	    while(item.getPeriod().compareTo(last)>  0)  {  this.data.add(-index  -  1,  item);		non-compiled	[CE]  'else'  without  'if'	104	None
123	[BUG]  [BUGGY]    while(item.getPeriod().compareTo(last)  <  0)  {  this.data.add(item);  [CE]  'else'  without  'if'  [CONTEXT]  if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  [BUGGY]    while(item.getPeriod().compareTo(last)  <  0)  {  this.data.add(item);  [BUGGY]  added  =  true;  }  else  {  int  index  =  Collections.binarySearch(this.data,  item);  if  (index  <  0)  {  this.data.add(-index  -  1,  item);  added  =  true;  }  else  {  StringBuffer  b  =  new  StringBuffer();  b.append( "You  are  attempting  to  add  an  observation  for   ");  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	516	516	1	replace	    while(item.getPeriod().compareTo(last)  <  0)  {  this.data.add(item);		non-compiled	[CE]  'else'  without  'if'	104	None
145	[BUG]  [BUGGY]    while(count  >  0)  {  this.data.add(item);  [CE]  illegal  start  of  expression  [CONTEXT]  b.append(item.getPeriod().getClass().getName());  b.append( ",  but  the  TimeSeries  is  expecting  an  instance  of   ");  b.append(this.timePeriodClass.getName());  b.append( ". ");  throw  new  SeriesException(b.toString());  }  boolean  added  =  false;  int  count  =  getItemCount();  [BUGGY]    while(count  >  0)  {  this.data.add(item);  [BUGGY]  if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  added  =  true;  }  else  {  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	508	508	1	replace	    while(count  >  0)  {  this.data.add(item);		non-compiled	[CE]  illegal  start  of  expression	92	None
146	[BUG]  [BUGGY]    while(count  >  0)  {  this.data.add(item);  added  =  true;  [CE]  illegal  start  of  expression  [CONTEXT]  b.append(item.getPeriod().getClass().getName());  b.append( ",  but  the  TimeSeries  is  expecting  an  instance  of   ");  b.append(this.timePeriodClass.getName());  b.append( ". ");  throw  new  SeriesException(b.toString());  }  boolean  added  =  false;  int  count  =  getItemCount();  [BUGGY]    while(count  >  0)  {  this.data.add(item);  added  =  true;  [BUGGY]  if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  added  =  true;  }  else  {  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	508	508	1	replace	    while(count  >  0)  {  this.data.add(item);  added  =  true;		non-compiled	[CE]  illegal  start  of  expression	92	None
147	[BUG]  [BUGGY]    while(count  >  0)  {  this.data.add(item);  added  =  notify;  [CE]  illegal  start  of  expression  [CONTEXT]  b.append(item.getPeriod().getClass().getName());  b.append( ",  but  the  TimeSeries  is  expecting  an  instance  of   ");  b.append(this.timePeriodClass.getName());  b.append( ". ");  throw  new  SeriesException(b.toString());  }  boolean  added  =  false;  int  count  =  getItemCount();  [BUGGY]    while(count  >  0)  {  this.data.add(item);  added  =  notify;  [BUGGY]  if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  added  =  true;  }  else  {  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	508	508	1	replace	    while(count  >  0)  {  this.data.add(item);  added  =  notify;		non-compiled	[CE]  illegal  start  of  expression	92	None
170	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]  public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  [BUGGY]  super(name,  domain);  [BUGGY]  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	174	174	1	add	super(name,  domain);	super(name);  	compilable	  [FE]  IllegalArgumentException	61	1
171	[BUG]  [BUGGY]  super(name,  domain);  [FE]  IllegalArgumentException  [CONTEXT]  public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  [BUGGY]  super(name,  domain);  [BUGGY]  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	174	174	1	replace	super(name,  domain);	super(name);  	compilable	  [FE]  IllegalArgumentException	61	1
171	[BUG]  [BUGGY]    [CE]  no  suitable  constructor  found  for  Series()  [CONTEXT]  public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  [BUGGY]    [BUGGY]  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	174	174	1	replace	  	super(name);  	non-compiled	[CE]  no  suitable  constructor  found  for  Series()	61	None
195	[BUG]  [BUGGY]    [CE]  cannot  find  symbol  latest  [CONTEXT]  public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  [BUGGY]    [BUGGY]  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())  >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	741	741	1	replace	  	long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  	non-compiled	[CE]  cannot  find  symbol  latest	128	None
243	[BUG]  [BUGGY]    [CE]  class  or  interface  expected  [CONTEXT]  b.append(item.getPeriod().toString());  b.append( "  but  the  series  already  contains  an  observation ");  b.append( "  for  that  time  period.  Duplicates  are  not   ");  b.append( "permitted.Try  using  the  addOrUpdate()  method. ");  throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {    [BUGGY]    [BUGGY]  this.data.remove(0);  }  removeAgedItems(false);//  remove  old  items  if  necessary,  but    if  (notify)  {  fireSeriesChanged();  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	538	538	1	replace	  	if  (getItemCount()  >  this.maximumItemCount)  {  	non-compiled	[CE]  class  or  interface  expected	107	None
265	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]  throws  CloneNotSupportedException  {  [BUGGY]    if(start  <  0)  {  throw  new  IllegalArgumentException( "Requires  start  >=  0. ");  }  [BUGGY]  if  (start  <  0)  {  throw  new  IllegalArgumentException( "Requires  start  >=  0. ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException( "Requires  start  <=  end. ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	879	879	1	add	    if(start  <  0)  {  throw  new  IllegalArgumentException( "Requires  start  >=  0. ");  }		compilable	  [FE]  IllegalArgumentException	34	1
266	[BUG]  [BUGGY]    if(start  <  0)  {  throw  new  IllegalArgumentException( "Requires  start  >=  0. ");  }  [FE]  IllegalArgumentException  [CONTEXT]  throws  CloneNotSupportedException  {  [BUGGY]    if(start  <  0)  {  throw  new  IllegalArgumentException( "Requires  start  >=  0. ");  }  [BUGGY]  if  (start  <  0)  {  throw  new  IllegalArgumentException( "Requires  start  >=  0. ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException( "Requires  start  <=  end. ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	879	879	1	replace	    if(start  <  0)  {  throw  new  IllegalArgumentException( "Requires  start  >=  0. ");  }		compilable	  [FE]  IllegalArgumentException	34	1
266	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]  throws  CloneNotSupportedException  {  [BUGGY]    if(start  <  0)  {  throw  new  IllegalArgumentException( "Requires  start  <=  0. ");  }  [BUGGY]  if  (start  <  0)  {  throw  new  IllegalArgumentException( "Requires  start  >=  0. ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException( "Requires  start  <=  end. ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	879	879	1	add	    if(start  <  0)  {  throw  new  IllegalArgumentException( "Requires  start  <=  0. ");  }		compilable	  [FE]  IllegalArgumentException	34	1
267	[BUG]  [BUGGY]    if(start  <  0)  {  throw  new  IllegalArgumentException( "Requires  start  <=  0. ");  }  [FE]  IllegalArgumentException  [CONTEXT]  throws  CloneNotSupportedException  {  [BUGGY]    if(start  <  0)  {  throw  new  IllegalArgumentException( "Requires  start  <=  0. ");  }  [BUGGY]  if  (start  <  0)  {  throw  new  IllegalArgumentException( "Requires  start  >=  0. ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException( "Requires  start  <=  end. ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	879	879	1	replace	    if(start  <  0)  {  throw  new  IllegalArgumentException( "Requires  start  <=  0. ");  }		compilable	  [FE]  IllegalArgumentException	34	1
267	[BUG]  [BUGGY]    int  start  =  this.data.size();  [CE]  variable  start  is  already  defined  in  method  createCopy(int,int)  [CONTEXT]  throws  CloneNotSupportedException  {  [BUGGY]    int  start  =  this.data.size();  [BUGGY]  if  (start  <  0)  {  throw  new  IllegalArgumentException( "Requires  start  >=  0. ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException( "Requires  start  <=  end. ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	879	879	1	replace	    int  start  =  this.data.size();		non-compiled	[CE]  variable  start  is  already  defined  in  method  createCopy(int,int)	34	None
289	[BUG]  [BUGGY]    this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  timePeriodClass);  [CE]  call  to  this  must  be  first  statement  in  constructor  [CONTEXT]  public  TimeSeries(Comparable  name,  Class  timePeriodClass)  {  [BUGGY]    this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  timePeriodClass);  [BUGGY]  this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,    timePeriodClass);  timePeriodClass);  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	155	156	1	replace	    this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  timePeriodClass);		non-compiled	[CE]  call  to  this  must  be  first  statement  in  constructor	58	None
290	[BUG]  [BUGGY]    this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION);  [CE]  no  suitable  constructor  found  for  TimeSeries(Comparable,String,String)  [CONTEXT]  public  TimeSeries(Comparable  name,  Class  timePeriodClass)  {  [BUGGY]    this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION);  [BUGGY]  this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,    timePeriodClass);  timePeriodClass);  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	155	156	1	replace	    this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION);		non-compiled	[CE]  no  suitable  constructor  found  for  TimeSeries(Comparable,String,String)	58	None
291	[BUG]  [BUGGY]    this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  0);  [CE]  no  suitable  constructor  found  for  TimeSeries(Comparable,String,String,int)  [CONTEXT]  public  TimeSeries(Comparable  name,  Class  timePeriodClass)  {  [BUGGY]    this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  0);  [BUGGY]  this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,    timePeriodClass);  timePeriodClass);  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	155	156	1	replace	    this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  0);		non-compiled	[CE]  no  suitable  constructor  found  for  TimeSeries(Comparable,String,String,int)	58	None
313	[BUG]  [BUGGY]    if(startIndex  >=  endIndex)  {  for(TimeSeries  start  :  start.getPeriodType())  {  emptyRange  =  true;  }  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [CONTEXT]  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  emptyRange  =  true;  }  [BUGGY]    if(startIndex  >=  endIndex)  {  for(TimeSeries  start  :  start.getPeriodType())  {  emptyRange  =  true;  }  [BUGGY]  if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  }  else  {  return  createCopy(startIndex,  endIndex);  }  }  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	947	947	1	replace	    if(startIndex  >=  endIndex)  {  for(TimeSeries  start  :  start.getPeriodType())  {  emptyRange  =  true;  }		non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	30	None
314	[BUG]  [BUGGY]    endIndex  =  getIndex(startIndex);  [CE]  method  getIndex  in  class  TimeSeries  cannot  be  applied  to  given  types;  [CONTEXT]  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  emptyRange  =  true;  }  [BUGGY]    endIndex  =  getIndex(startIndex);  [BUGGY]  if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  }  else  {  return  createCopy(startIndex,  endIndex);  }  }  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	947	947	1	replace	    endIndex  =  getIndex(startIndex);		non-compiled	[CE]  method  getIndex  in  class  TimeSeries  cannot  be  applied  to  given  types;	30	None
315	[BUG]  [BUGGY]    if(startIndex  >=  endIndex)  {  for(TimeSeries  start  :  start.getPeriodType())  {  emptyRange  =  false;  }  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [CONTEXT]  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  emptyRange  =  true;  }  [BUGGY]    if(startIndex  >=  endIndex)  {  for(TimeSeries  start  :  start.getPeriodType())  {  emptyRange  =  false;  }  [BUGGY]  if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  }  else  {  return  createCopy(startIndex,  endIndex);  }  }  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	947	947	1	replace	    if(startIndex  >=  endIndex)  {  for(TimeSeries  start  :  start.getPeriodType())  {  emptyRange  =  false;  }		non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	30	None
339	[BUG]  [BUGGY]    while(item!=  null)  {  this.data.add(item);  [CE]  illegal  start  of  expression  [CONTEXT]  b.append( "You  are  trying  to  add  data  where  the  time  period  class   ");  b.append( "is   ");  b.append(item.getPeriod().getClass().getName());  b.append( ",  but  the  TimeSeries  is  expecting  an  instance  of   ");  b.append(this.timePeriodClass.getName());  b.append( ". ");  throw  new  SeriesException(b.toString());  }    [BUGGY]    while(item!=  null)  {  this.data.add(item);  [BUGGY]  boolean  added  =  false;  int  count  =  getItemCount();  if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  added  =  true;  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	506	506	1	replace	    while(item!=  null)  {  this.data.add(item);		non-compiled	[CE]  illegal  start  of  expression	88	None
361	[BUG]  [BUGGY]    while(item!=  null  &&  item.getPeriod().compareTo(this.timePeriodClass)>  0)  {  this.data.add(item);  added  =  true;  [CE]  illegal  start  of  expression  [CONTEXT]  b.append( "is   ");  b.append(item.getPeriod().getClass().getName());  b.append( ",  but  the  TimeSeries  is  expecting  an  instance  of   ");  b.append(this.timePeriodClass.getName());  b.append( ". ");  throw  new  SeriesException(b.toString());  }  boolean  added  =  false;  [BUGGY]    while(item!=  null  &&  item.getPeriod().compareTo(this.timePeriodClass)>  0)  {  this.data.add(item);  added  =  true;  [BUGGY]  int  count  =  getItemCount();  if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  added  =  true;  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	507	507	1	replace	    while(item!=  null  &&  item.getPeriod().compareTo(this.timePeriodClass)>  0)  {  this.data.add(item);  added  =  true;		non-compiled	[CE]  illegal  start  of  expression	90	None
362	[BUG]  [BUGGY]    while(item!=  null  &&  item.getPeriod().compareTo(this.timePeriodClass)  <  0)  {  this.data.add(item);  added  =  true;  [CE]  illegal  start  of  expression  [CONTEXT]  b.append( "is   ");  b.append(item.getPeriod().getClass().getName());  b.append( ",  but  the  TimeSeries  is  expecting  an  instance  of   ");  b.append(this.timePeriodClass.getName());  b.append( ". ");  throw  new  SeriesException(b.toString());  }  boolean  added  =  false;  [BUGGY]    while(item!=  null  &&  item.getPeriod().compareTo(this.timePeriodClass)  <  0)  {  this.data.add(item);  added  =  true;  [BUGGY]  int  count  =  getItemCount();  if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  added  =  true;  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	507	507	1	replace	    while(item!=  null  &&  item.getPeriod().compareTo(this.timePeriodClass)  <  0)  {  this.data.add(item);  added  =  true;		non-compiled	[CE]  illegal  start  of  expression	90	None
363	[BUG]  [BUGGY]    while(item!=  null  &&  item.getPeriod().compareTo(this.timePeriodClass)>  0)  {  this.data.add(item);  [CE]  illegal  start  of  expression  [CONTEXT]  b.append( "is   ");  b.append(item.getPeriod().getClass().getName());  b.append( ",  but  the  TimeSeries  is  expecting  an  instance  of   ");  b.append(this.timePeriodClass.getName());  b.append( ". ");  throw  new  SeriesException(b.toString());  }  boolean  added  =  false;  [BUGGY]    while(item!=  null  &&  item.getPeriod().compareTo(this.timePeriodClass)>  0)  {  this.data.add(item);  [BUGGY]  int  count  =  getItemCount();  if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  added  =  true;  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	507	507	1	replace	    while(item!=  null  &&  item.getPeriod().compareTo(this.timePeriodClass)>  0)  {  this.data.add(item);		non-compiled	[CE]  illegal  start  of  expression	90	None
387	[BUG]  [BUGGY]    [CE]  cannot  find  symbol  removed  [CONTEXT]  public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  [BUGGY]    [BUGGY]  while  ((latest  -  getTimePeriod(0).getSerialIndex())  >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	742	742	1	replace	  	boolean  removed  =  false;  	non-compiled	[CE]  cannot  find  symbol  removed	130	None
409	[BUG]  [BUGGY]    TimeSeriesDataItem  this  =(TimeSeriesDataItem)this.data.get(index);  [CE]  not  a  statement  [CONTEXT]  public  TimeSeriesDataItem  getDataItem(int  index)  {  [BUGGY]    TimeSeriesDataItem  this  =(TimeSeriesDataItem)this.data.get(index);  [BUGGY]  return  (TimeSeriesDataItem)  this.data.get(index);  }  [CLASS]  TimeSeries  [METHOD]  getDataItem  [RETURN_TYPE]  TimeSeriesDataItem  int  index  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  long  maximumItemAge  periods  serialVersionUID  int  count  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	341	341	1	replace	    TimeSeriesDataItem  this  =(TimeSeriesDataItem)this.data.get(index);		non-compiled	[CE]  not  a  statement	80	None
411	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]  public  TimeSeriesDataItem  getDataItem(int  index)  {  [BUGGY]    this.data.get(index);  [BUGGY]  return  (TimeSeriesDataItem)  this.data.get(index);  }  [CLASS]  TimeSeries  [METHOD]  getDataItem  [RETURN_TYPE]  TimeSeriesDataItem  int  index  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  long  maximumItemAge  periods  serialVersionUID  int  count  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	341	341	1	add	    this.data.get(index);		compilable	  [FE]  IllegalArgumentException	80	1
412	[BUG]  [BUGGY]    this.data.get(index);  [FE]  IllegalArgumentException  [CONTEXT]  public  TimeSeriesDataItem  getDataItem(int  index)  {  [BUGGY]    this.data.get(index);  [BUGGY]  return  (TimeSeriesDataItem)  this.data.get(index);  }  [CLASS]  TimeSeries  [METHOD]  getDataItem  [RETURN_TYPE]  TimeSeriesDataItem  int  index  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  long  maximumItemAge  periods  serialVersionUID  int  count  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	341	341	1	replace	    this.data.get(index);		compilable	  [FE]  IllegalArgumentException	80	1
433	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]  public  void  add(RegularTimePeriod  period,  double  value,  boolean  notify)  {  TimeSeriesDataItem  item  =  new  TimeSeriesDataItem(period,  value);  add(item,  notify);  [BUGGY]    fireSeriesChanged();  [BUGGY]  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  double  value  boolean  notify  [VARIABLES]  boolean  notify  double  value  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.2581988897471611	576	576	1	add	    fireSeriesChanged();		compilable	  [FE]  IllegalArgumentException	56	1
434	[BUG]  [BUGGY]    fireSeriesChanged();  [FE]  IllegalArgumentException  [CONTEXT]  public  void  add(RegularTimePeriod  period,  double  value,  boolean  notify)  {  TimeSeriesDataItem  item  =  new  TimeSeriesDataItem(period,  value);  add(item,  notify);  [BUGGY]    fireSeriesChanged();  [BUGGY]  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  double  value  boolean  notify  [VARIABLES]  boolean  notify  double  value  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.2581988897471611	576	576	1	replace	    fireSeriesChanged();		compilable	  [FE]  IllegalArgumentException	56	1
434	[BUG]  [BUGGY]    item.addValue(value);  fireSeriesChanged();  [CE]  cannot  find  symbol  [CONTEXT]  public  void  add(RegularTimePeriod  period,  double  value,  boolean  notify)  {  TimeSeriesDataItem  item  =  new  TimeSeriesDataItem(period,  value);  add(item,  notify);  [BUGGY]    item.addValue(value);  fireSeriesChanged();  [BUGGY]  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  double  value  boolean  notify  [VARIABLES]  boolean  notify  double  value  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.2581988897471611	576	576	1	replace	    item.addValue(value);  fireSeriesChanged();		non-compiled	[CE]  cannot  find  symbol	56	None
435	[BUG]  [BUGGY]    while(item!=  null  &&  item.isLocal())  {  add(item);  [CE]  illegal  start  of  expression  [CONTEXT]  public  void  add(RegularTimePeriod  period,  double  value,  boolean  notify)  {  TimeSeriesDataItem  item  =  new  TimeSeriesDataItem(period,  value);  add(item,  notify);  [BUGGY]    while(item!=  null  &&  item.isLocal())  {  add(item);  [BUGGY]  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  double  value  boolean  notify  [VARIABLES]  boolean  notify  double  value  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.2581988897471611	576	576	1	replace	    while(item!=  null  &&  item.isLocal())  {  add(item);		non-compiled	[CE]  illegal  start  of  expression	56	None
458	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]  public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;  [BUGGY]  this.range  =  range  +  1;  [BUGGY]  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	176	176	1	add	this.range  =  range  +  1;	this.range  =  range;  	compilable	  [FE]  IllegalArgumentException	65	1
459	[BUG]  [BUGGY]  this.range  =  range  +  1;  [FE]  IllegalArgumentException  [CONTEXT]  public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;  [BUGGY]  this.range  =  range  +  1;  [BUGGY]  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	176	176	1	replace	this.range  =  range  +  1;	this.range  =  range;  	compilable	  [FE]  IllegalArgumentException	65	1
459	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]  public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;  [BUGGY]    [BUGGY]  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	176	176	1	add	  	this.range  =  range;  	compilable	  [FE]  IllegalArgumentException	65	1
460	[BUG]  [BUGGY]    [FE]  IllegalArgumentException  [CONTEXT]  public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;  [BUGGY]    [BUGGY]  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	176	176	1	replace	  	this.range  =  range;  	compilable	  [FE]  IllegalArgumentException	65	1
483	[BUG]  [BUGGY]    [CE]  illegal  start  of  type  [CONTEXT]  public  void  add(TimeSeriesDataItem  item,  boolean  notify)  {  [BUGGY]    [BUGGY]  throw  new  IllegalArgumentException( "Null  'item'  argument. ");  }  if  (!item.getPeriod().getClass().equals(this.timePeriodClass))  {  StringBuffer  b  =  new  StringBuffer();  b.append( "You  are  trying  to  add  data  where  the  time  period  class   ");  b.append( "is   ");  b.append(item.getPeriod().getClass().getName());  b.append( ",  but  the  TimeSeries  is  expecting  an  instance  of   ");  b.append(this.timePeriodClass.getName());  b.append( ". ");  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	491	491	1	replace	  	if  (item  ==  null)  {  	non-compiled	[CE]  illegal  start  of  type	83	None
505	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]  public  void  add(RegularTimePeriod  period,  Number  value)  {  add(period,  value,  true);  [BUGGY]    fireSeriesChanged();  [BUGGY]  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  Number  value  [VARIABLES]  boolean  Number  value  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	589	589	1	add	    fireSeriesChanged();		compilable	  [FE]  IllegalArgumentException	119	1
506	[BUG]  [BUGGY]    fireSeriesChanged();  [FE]  IllegalArgumentException  [CONTEXT]  public  void  add(RegularTimePeriod  period,  Number  value)  {  add(period,  value,  true);  [BUGGY]    fireSeriesChanged();  [BUGGY]  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  Number  value  [VARIABLES]  boolean  Number  value  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	589	589	1	replace	    fireSeriesChanged();		compilable	  [FE]  IllegalArgumentException	119	1
507	[BUG]  [BUGGY]    data.add(period,  value);  [CE]  no  suitable  method  found  for  add(RegularTimePeriod,Number)  [CONTEXT]  public  void  add(RegularTimePeriod  period,  Number  value)  {  add(period,  value,  true);  [BUGGY]    data.add(period,  value);  [BUGGY]  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  Number  value  [VARIABLES]  boolean  Number  value  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	589	589	1	replace	    data.add(period,  value);		non-compiled	[CE]  no  suitable  method  found  for  add(RegularTimePeriod,Number)	119	None
531	[BUG]  [BUGGY]    throw  new  IllegalArgumentException( "Requires  start  >>  end. ");  [CE]  unreachable  statement  [CONTEXT]  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException( "Requires  start  >=  0. ");  }  if  (end  <  start)  {  [BUGGY]    throw  new  IllegalArgumentException( "Requires  start  >>  end. ");  [BUGGY]  throw  new  IllegalArgumentException( "Requires  start  <=  end. ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	883	883	1	replace	    throw  new  IllegalArgumentException( "Requires  start  >>  end. ");		non-compiled	[CE]  unreachable  statement	2	None
577	[BUG]  [BUGGY]    &&((  latest  -  getTimePeriod(0).getSerialIndex())>  this.maximumItemAge))  {  this.data.remove(0);  [CE]  illegal  start  of  expression  [CONTEXT]  public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())  [BUGGY]    &&((  latest  -  getTimePeriod(0).getSerialIndex())>  this.maximumItemAge))  {  this.data.remove(0);  [BUGGY]  >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	744	744	1	replace	    &&((  latest  -  getTimePeriod(0).getSerialIndex())>  this.maximumItemAge))  {  this.data.remove(0);		non-compiled	[CE]  illegal  start  of  expression	133	None
578	[BUG]  [BUGGY]    &&((  latest  -  getTimePeriod(0).getSerialIndex())>  this.maximumItemAge))  {  this.data.remove(0);  removed  =  true;  [CE]  illegal  start  of  expression  [CONTEXT]  public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())  [BUGGY]    &&((  latest  -  getTimePeriod(0).getSerialIndex())>  this.maximumItemAge))  {  this.data.remove(0);  removed  =  true;  [BUGGY]  >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	744	744	1	replace	    &&((  latest  -  getTimePeriod(0).getSerialIndex())>  this.maximumItemAge))  {  this.data.remove(0);  removed  =  true;		non-compiled	[CE]  illegal  start  of  expression	133	None
579	[BUG]  [BUGGY]    &&((  latest  -  getTimePeriod(0).getSerialIndex())>  this.maximumItemAge))  {  fireSeriesChanged();  [CE]  illegal  start  of  expression  [CONTEXT]  public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())  [BUGGY]    &&((  latest  -  getTimePeriod(0).getSerialIndex())>  this.maximumItemAge))  {  fireSeriesChanged();  [BUGGY]  >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	744	744	1	replace	    &&((  latest  -  getTimePeriod(0).getSerialIndex())>  this.maximumItemAge))  {  fireSeriesChanged();		non-compiled	[CE]  illegal  start  of  expression	133	None
627	[BUG]  [BUGGY]    [CE]  missing  return  statement  [CONTEXT]  public  int  getItemCount()  {  [BUGGY]    [BUGGY]  }  [CLASS]  TimeSeries  [METHOD]  getItemCount  [RETURN_TYPE]  int  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	240	240	1	replace	  	return  this.data.size();  	non-compiled	[CE]  missing  return  statement	77	None
649	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]  public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  [BUGGY]    this.maximumItemCount  =  getMaximumItemCount();  [BUGGY]  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	178	178	1	add	    this.maximumItemCount  =  getMaximumItemCount();		compilable	  [FE]  IllegalArgumentException	70	1
650	[BUG]  [BUGGY]    this.maximumItemCount  =  getMaximumItemCount();  [FE]  IllegalArgumentException  [CONTEXT]  public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  [BUGGY]    this.maximumItemCount  =  getMaximumItemCount();  [BUGGY]  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	178	178	1	replace	    this.maximumItemCount  =  getMaximumItemCount();		compilable	  [FE]  IllegalArgumentException	70	1
650	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]  public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  [BUGGY]    this.maximumItemAge  =  getMaximumItemAge();  [BUGGY]  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	178	178	1	add	    this.maximumItemAge  =  getMaximumItemAge();		compilable	  [FE]  IllegalArgumentException	70	1
651	[BUG]  [BUGGY]    this.maximumItemAge  =  getMaximumItemAge();  [FE]  IllegalArgumentException  [CONTEXT]  public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  [BUGGY]    this.maximumItemAge  =  getMaximumItemAge();  [BUGGY]  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	178	178	1	replace	    this.maximumItemAge  =  getMaximumItemAge();		compilable	  [FE]  IllegalArgumentException	70	1
651	[BUG]  [BUGGY]    this.maximumItemCount  =  java.util.ArrayList();  [CE]  cannot  find  symbol  [CONTEXT]  public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  [BUGGY]    this.maximumItemCount  =  java.util.ArrayList();  [BUGGY]  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	178	178	1	replace	    this.maximumItemCount  =  java.util.ArrayList();		non-compiled	[CE]  cannot  find  symbol	70	None
673	[BUG]  [BUGGY]  fireSeriesChanged();  [CE]  illegal  start  of  expression  [CONTEXT]  public  void  add(RegularTimePeriod  period,  Number  value,  boolean  notify)  {  TimeSeriesDataItem  item  =  new  TimeSeriesDataItem(period,  value);  add(item,  notify);  [BUGGY]  fireSeriesChanged();  [BUGGY]    [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  Number  value  boolean  notify  [VARIABLES]  boolean  notify  Number  value  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	604	604	1	replace	fireSeriesChanged();	}  	non-compiled	[CE]  illegal  start  of  expression	124	None
674	[BUG]  [BUGGY]  item.addValue(value);  fireSeriesChanged();  [CE]  illegal  start  of  expression  [CONTEXT]  public  void  add(RegularTimePeriod  period,  Number  value,  boolean  notify)  {  TimeSeriesDataItem  item  =  new  TimeSeriesDataItem(period,  value);  add(item,  notify);  [BUGGY]  item.addValue(value);  fireSeriesChanged();  [BUGGY]    [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  Number  value  boolean  notify  [VARIABLES]  boolean  notify  Number  value  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	604	604	1	replace	item.addValue(value);  fireSeriesChanged();	}  	non-compiled	[CE]  illegal  start  of  expression	124	None
675	[BUG]  [BUGGY]    [CE]  illegal  start  of  expression  [CONTEXT]  public  void  add(RegularTimePeriod  period,  Number  value,  boolean  notify)  {  TimeSeriesDataItem  item  =  new  TimeSeriesDataItem(period,  value);  add(item,  notify);  [BUGGY]    [BUGGY]    [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  Number  value  boolean  notify  [VARIABLES]  boolean  notify  Number  value  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	604	604	1	replace	  	}  	non-compiled	[CE]  illegal  start  of  expression	124	None
698	[BUG]  [BUGGY]  if(last.getPeriod().compareTo(item)>  0)  {  [CE]  cannot  find  symbol  [CONTEXT]  if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  [BUGGY]  if(last.getPeriod().compareTo(item)>  0)  {  [BUGGY]  this.data.add(item);  added  =  true;  }  else  {  int  index  =  Collections.binarySearch(this.data,  item);  if  (index  <  0)  {  this.data.add(-index  -  1,  item);  added  =  true;  }  else  {  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	514	514	1	replace	if(last.getPeriod().compareTo(item)>  0)  {	if  (item.getPeriod().compareTo(last)  >  0)  {  	non-compiled	[CE]  cannot  find  symbol	99	None
699	[BUG]  [BUGGY]    [CE]  [CONTEXT]  if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  [BUGGY]    [BUGGY]  this.data.add(item);  added  =  true;  }  else  {  int  index  =  Collections.binarySearch(this.data,  item);  if  (index  <  0)  {  this.data.add(-index  -  1,  item);  added  =  true;  }  else  {  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	514	514	1	replace	  	if  (item.getPeriod().compareTo(last)  >  0)  {  	non-compiled	[CE]  	99	None
721	[BUG]  [BUGGY]    this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  TimeSeries.class);  [CE]  call  to  this  must  be  first  statement  in  constructor  [CONTEXT]  public  TimeSeries(Comparable  name)  {  [BUGGY]    this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  TimeSeries.class);  [BUGGY]  this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,    Day.class);  Day.class);  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Comparable)  Comparable  name  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.4082482904638631	142	143	1	replace	    this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  TimeSeries.class);		non-compiled	[CE]  call  to  this  must  be  first  statement  in  constructor	38	None
722	[BUG]  [BUGGY]    this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  0);  [CE]  no  suitable  constructor  found  for  TimeSeries(Comparable,String,String,int)  [CONTEXT]  public  TimeSeries(Comparable  name)  {  [BUGGY]    this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  0);  [BUGGY]  this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,    Day.class);  Day.class);  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Comparable)  Comparable  name  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.4082482904638631	142	143	1	replace	    this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  0);		non-compiled	[CE]  no  suitable  constructor  found  for  TimeSeries(Comparable,String,String,int)	38	None
723	[BUG]  [BUGGY]    this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  Date.class);  [CE]  call  to  this  must  be  first  statement  in  constructor  [CONTEXT]  public  TimeSeries(Comparable  name)  {  [BUGGY]    this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  Date.class);  [BUGGY]  this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,    Day.class);  Day.class);  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Comparable)  Comparable  name  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.4082482904638631	142	143	1	replace	    this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  Date.class);		non-compiled	[CE]  call  to  this  must  be  first  statement  in  constructor	38	None
747	[BUG]  [BUGGY]    [CE]  illegal  start  of  type  [CONTEXT]  }  if  (end  ==  null)  {  throw  new  IllegalArgumentException( "Null  'end'  argument. ");  }  if  (start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException(   "Requires  start  on  or  before  end. ");  }  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  [BUGGY]    [BUGGY]  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	933	933	1	replace	  	if  (startIndex  <  0)  {  	non-compiled	[CE]  illegal  start  of  type	13	None
770	[BUG]  [BUGGY]    while(startIndex  <  this.data.size())  {  emptyRange  =  true;  [CE]  illegal  start  of  expression  [CONTEXT]  if  (end  ==  null)  {  throw  new  IllegalArgumentException( "Null  'end'  argument. ");  }  if  (start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException(   "Requires  start  on  or  before  end. ");  }  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  [BUGGY]    while(startIndex  <  this.data.size())  {  emptyRange  =  true;  [BUGGY]  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	934	934	1	replace	    while(startIndex  <  this.data.size())  {  emptyRange  =  true;		non-compiled	[CE]  illegal  start  of  expression	16	None
771	[BUG]  [BUGGY]    while(startIndex  <  0)  {  emptyRange  =  true;  [CE]  illegal  start  of  expression  [CONTEXT]  if  (end  ==  null)  {  throw  new  IllegalArgumentException( "Null  'end'  argument. ");  }  if  (start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException(   "Requires  start  on  or  before  end. ");  }  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  [BUGGY]    while(startIndex  <  0)  {  emptyRange  =  true;  [BUGGY]  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	934	934	1	replace	    while(startIndex  <  0)  {  emptyRange  =  true;		non-compiled	[CE]  illegal  start  of  expression	16	None
793	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]  public  void  add(RegularTimePeriod  period,  Number  value)  {    [BUGGY]  add(period,  value,  false);  [BUGGY]  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  Number  value  [VARIABLES]  boolean  Number  value  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	588	588	1	add	add(period,  value,  false);	add(period,  value,  true);  	compilable	  [FE]  IllegalArgumentException	116	1
794	[BUG]  [BUGGY]  add(period,  value,  false);  [FE]  IllegalArgumentException  [CONTEXT]  public  void  add(RegularTimePeriod  period,  Number  value)  {    [BUGGY]  add(period,  value,  false);  [BUGGY]  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  Number  value  [VARIABLES]  boolean  Number  value  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	588	588	1	replace	add(period,  value,  false);	add(period,  value,  true);  	compilable	  [FE]  IllegalArgumentException	116	1
817	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]  public  void  add(TimeSeriesDataItem  item,  boolean  notify)  {  [BUGGY]    if(item  ==  null)  {  throw  new  IllegalArgumentException( "Null  'item'  argument. ");  }  [BUGGY]  if  (item  ==  null)  {  throw  new  IllegalArgumentException( "Null  'item'  argument. ");  }  if  (!item.getPeriod().getClass().equals(this.timePeriodClass))  {  StringBuffer  b  =  new  StringBuffer();  b.append( "You  are  trying  to  add  data  where  the  time  period  class   ");  b.append( "is   ");  b.append(item.getPeriod().getClass().getName());  b.append( ",  but  the  TimeSeries  is  expecting  an  instance  of   ");  b.append(this.timePeriodClass.getName());  b.append( ". ");  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	491	491	1	add	    if(item  ==  null)  {  throw  new  IllegalArgumentException( "Null  'item'  argument. ");  }		compilable	  [FE]  IllegalArgumentException	84	1
818	[BUG]  [BUGGY]    if(item  ==  null)  {  throw  new  IllegalArgumentException( "Null  'item'  argument. ");  }  [FE]  IllegalArgumentException  [CONTEXT]  public  void  add(TimeSeriesDataItem  item,  boolean  notify)  {  [BUGGY]    if(item  ==  null)  {  throw  new  IllegalArgumentException( "Null  'item'  argument. ");  }  [BUGGY]  if  (item  ==  null)  {  throw  new  IllegalArgumentException( "Null  'item'  argument. ");  }  if  (!item.getPeriod().getClass().equals(this.timePeriodClass))  {  StringBuffer  b  =  new  StringBuffer();  b.append( "You  are  trying  to  add  data  where  the  time  period  class   ");  b.append( "is   ");  b.append(item.getPeriod().getClass().getName());  b.append( ",  but  the  TimeSeries  is  expecting  an  instance  of   ");  b.append(this.timePeriodClass.getName());  b.append( ". ");  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	491	491	1	replace	    if(item  ==  null)  {  throw  new  IllegalArgumentException( "Null  'item'  argument. ");  }		compilable	  [FE]  IllegalArgumentException	84	1
818	[BUG]  [BUGGY]    while(item!=  null)  {  throw  new  IllegalArgumentException( "Null  'item'  argument. ");  [CE]  illegal  start  of  expression  [CONTEXT]  public  void  add(TimeSeriesDataItem  item,  boolean  notify)  {  [BUGGY]    while(item!=  null)  {  throw  new  IllegalArgumentException( "Null  'item'  argument. ");  [BUGGY]  if  (item  ==  null)  {  throw  new  IllegalArgumentException( "Null  'item'  argument. ");  }  if  (!item.getPeriod().getClass().equals(this.timePeriodClass))  {  StringBuffer  b  =  new  StringBuffer();  b.append( "You  are  trying  to  add  data  where  the  time  period  class   ");  b.append( "is   ");  b.append(item.getPeriod().getClass().getName());  b.append( ",  but  the  TimeSeries  is  expecting  an  instance  of   ");  b.append(this.timePeriodClass.getName());  b.append( ". ");  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	491	491	1	replace	    while(item!=  null)  {  throw  new  IllegalArgumentException( "Null  'item'  argument. ");		non-compiled	[CE]  illegal  start  of  expression	84	None
819	[BUG]  [BUGGY]    if(item  ==  null)  {  throw  new  IllegalArgumentException( "Null  'item'  argument. ");  }  else  {  add(item.getPeriod().getClass().getName());  }  [CE]  no  suitable  method  found  for  add(String)  [CONTEXT]  public  void  add(TimeSeriesDataItem  item,  boolean  notify)  {  [BUGGY]    if(item  ==  null)  {  throw  new  IllegalArgumentException( "Null  'item'  argument. ");  }  else  {  add(item.getPeriod().getClass().getName());  }  [BUGGY]  if  (item  ==  null)  {  throw  new  IllegalArgumentException( "Null  'item'  argument. ");  }  if  (!item.getPeriod().getClass().equals(this.timePeriodClass))  {  StringBuffer  b  =  new  StringBuffer();  b.append( "You  are  trying  to  add  data  where  the  time  period  class   ");  b.append( "is   ");  b.append(item.getPeriod().getClass().getName());  b.append( ",  but  the  TimeSeries  is  expecting  an  instance  of   ");  b.append(this.timePeriodClass.getName());  b.append( ". ");  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	491	491	1	replace	    if(item  ==  null)  {  throw  new  IllegalArgumentException( "Null  'item'  argument. ");  }  else  {  add(item.getPeriod().getClass().getName());  }		non-compiled	[CE]  no  suitable  method  found  for  add(String)	84	None
842	[BUG]  [BUGGY]    this.data.add(new  TimeSeries(name),  domain,  range,  timePeriodClass);  [CE]  no  suitable  method  found  for  add(TimeSeries,String,String,Class)  [CONTEXT]  public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  [BUGGY]    this.data.add(new  TimeSeries(name),  domain,  range,  timePeriodClass);  [BUGGY]  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	179	179	1	replace	    this.data.add(new  TimeSeries(name),  domain,  range,  timePeriodClass);		non-compiled	[CE]  no  suitable  method  found  for  add(TimeSeries,String,String,Class)	72	None
843	[BUG]  [BUGGY]    this.data.add(new  TimeSeries(name,  domain,  range,  timePeriodClass),  true);  [CE]  no  suitable  method  found  for  add(TimeSeries,boolean)  [CONTEXT]  public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  [BUGGY]    this.data.add(new  TimeSeries(name,  domain,  range,  timePeriodClass),  true);  [BUGGY]  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	179	179	1	replace	    this.data.add(new  TimeSeries(name,  domain,  range,  timePeriodClass),  true);		non-compiled	[CE]  no  suitable  method  found  for  add(TimeSeries,boolean)	72	None
865	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]  throws  CloneNotSupportedException  {  if  (start  ==  null)  {  throw  new  IllegalArgumentException( "Null  'start'  argument. ");  }  [BUGGY]    if(start.compareTo(start)  >  0)  {  throw  new  IllegalArgumentException( "Requires  start  on  or  before  start. ");  }  [BUGGY]  if  (end  ==  null)  {  throw  new  IllegalArgumentException( "Null  'end'  argument. ");  }  if  (start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException(   "Requires  start  on  or  before  end. ");  }  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	924	924	1	add	    if(start.compareTo(start)  >  0)  {  throw  new  IllegalArgumentException( "Requires  start  on  or  before  start. ");  }		compilable	  [FE]  IllegalArgumentException	6	1
866	[BUG]  [BUGGY]    if(start.compareTo(start)  >  0)  {  throw  new  IllegalArgumentException( "Requires  start  on  or  before  start. ");  }  [FE]  IllegalArgumentException  [CONTEXT]  throws  CloneNotSupportedException  {  if  (start  ==  null)  {  throw  new  IllegalArgumentException( "Null  'start'  argument. ");  }  [BUGGY]    if(start.compareTo(start)  >  0)  {  throw  new  IllegalArgumentException( "Requires  start  on  or  before  start. ");  }  [BUGGY]  if  (end  ==  null)  {  throw  new  IllegalArgumentException( "Null  'end'  argument. ");  }  if  (start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException(   "Requires  start  on  or  before  end. ");  }  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	924	924	1	replace	    if(start.compareTo(start)  >  0)  {  throw  new  IllegalArgumentException( "Requires  start  on  or  before  start. ");  }		compilable	  [FE]  IllegalArgumentException	6	1
867	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]  throws  CloneNotSupportedException  {  if  (start  ==  null)  {  throw  new  IllegalArgumentException( "Null  'start'  argument. ");  }  [BUGGY]    if(start.compareTo(start)  >  0)  {  throw  new  IllegalArgumentException( "Requires  start  on  or  before  end. ");  }  [BUGGY]  if  (end  ==  null)  {  throw  new  IllegalArgumentException( "Null  'end'  argument. ");  }  if  (start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException(   "Requires  start  on  or  before  end. ");  }  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	924	924	1	add	    if(start.compareTo(start)  >  0)  {  throw  new  IllegalArgumentException( "Requires  start  on  or  before  end. ");  }		compilable	  [FE]  IllegalArgumentException	6	1
868	[BUG]  [BUGGY]    if(start.compareTo(start)  >  0)  {  throw  new  IllegalArgumentException( "Requires  start  on  or  before  end. ");  }  [FE]  IllegalArgumentException  [CONTEXT]  throws  CloneNotSupportedException  {  if  (start  ==  null)  {  throw  new  IllegalArgumentException( "Null  'start'  argument. ");  }  [BUGGY]    if(start.compareTo(start)  >  0)  {  throw  new  IllegalArgumentException( "Requires  start  on  or  before  end. ");  }  [BUGGY]  if  (end  ==  null)  {  throw  new  IllegalArgumentException( "Null  'end'  argument. ");  }  if  (start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException(   "Requires  start  on  or  before  end. ");  }  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	924	924	1	replace	    if(start.compareTo(start)  >  0)  {  throw  new  IllegalArgumentException( "Requires  start  on  or  before  end. ");  }		compilable	  [FE]  IllegalArgumentException	6	1
890	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]  b.append( "You  are  attempting  to  add  an  observation  for   ");  b.append( "the  time  period   ");  b.append(item.getPeriod().toString());  b.append( "  but  the  series  already  contains  an  observation ");  b.append( "  for  that  time  period.  Duplicates  are  not   ");  b.append( "permitted.Try  using  the  addOrUpdate()  method. ");  throw  new  SeriesException(b.toString());  }  }  }  [BUGGY]  if(notify)  {  [BUGGY]    if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  removeAgedItems(false);//  remove  old  items  if  necessary,  but    if  (notify)  {  fireSeriesChanged();  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	536	536	1	add	if(notify)  {	if  (added)  {  	compilable	  [FE]  IllegalArgumentException	105	1
891	[BUG]  [BUGGY]  if(notify)  {  [FE]  IllegalArgumentException  [CONTEXT]  b.append( "You  are  attempting  to  add  an  observation  for   ");  b.append( "the  time  period   ");  b.append(item.getPeriod().toString());  b.append( "  but  the  series  already  contains  an  observation ");  b.append( "  for  that  time  period.  Duplicates  are  not   ");  b.append( "permitted.Try  using  the  addOrUpdate()  method. ");  throw  new  SeriesException(b.toString());  }  }  }  [BUGGY]  if(notify)  {  [BUGGY]    if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  removeAgedItems(false);//  remove  old  items  if  necessary,  but    if  (notify)  {  fireSeriesChanged();  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	536	536	1	replace	if(notify)  {	if  (added)  {  	compilable	  [FE]  IllegalArgumentException	105	1
891	[BUG]  [BUGGY]    [CE]  class  or  interface  expected  [CONTEXT]  b.append( "You  are  attempting  to  add  an  observation  for   ");  b.append( "the  time  period   ");  b.append(item.getPeriod().toString());  b.append( "  but  the  series  already  contains  an  observation ");  b.append( "  for  that  time  period.  Duplicates  are  not   ");  b.append( "permitted.Try  using  the  addOrUpdate()  method. ");  throw  new  SeriesException(b.toString());  }  }  }  [BUGGY]    [BUGGY]    if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  removeAgedItems(false);//  remove  old  items  if  necessary,  but    if  (notify)  {  fireSeriesChanged();  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	536	536	1	replace	  	if  (added)  {  	non-compiled	[CE]  class  or  interface  expected	105	None
913	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]  throws  CloneNotSupportedException  {  if  (start  ==  null)  {  throw  new  IllegalArgumentException( "Null  'start'  argument. ");  }  if  (end  ==  null)  {  throw  new  IllegalArgumentException( "Null  'end'  argument. ");  }  [BUGGY]    if(start.compareTo(start)>  0)  {  throw  new  IllegalArgumentException( "Requires  start  on  or  before  end. ");  }  [BUGGY]  if  (start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException(   "Requires  start  on  or  before  end. ");  }  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	927	927	1	add	    if(start.compareTo(start)>  0)  {  throw  new  IllegalArgumentException( "Requires  start  on  or  before  end. ");  }		compilable	  [FE]  IllegalArgumentException	8	1
914	[BUG]  [BUGGY]    if(start.compareTo(start)>  0)  {  throw  new  IllegalArgumentException( "Requires  start  on  or  before  end. ");  }  [FE]  IllegalArgumentException  [CONTEXT]  throws  CloneNotSupportedException  {  if  (start  ==  null)  {  throw  new  IllegalArgumentException( "Null  'start'  argument. ");  }  if  (end  ==  null)  {  throw  new  IllegalArgumentException( "Null  'end'  argument. ");  }  [BUGGY]    if(start.compareTo(start)>  0)  {  throw  new  IllegalArgumentException( "Requires  start  on  or  before  end. ");  }  [BUGGY]  if  (start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException(   "Requires  start  on  or  before  end. ");  }  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	927	927	1	replace	    if(start.compareTo(start)>  0)  {  throw  new  IllegalArgumentException( "Requires  start  on  or  before  end. ");  }		compilable	  [FE]  IllegalArgumentException	8	1
915	[BUG]  [BUGGY]    while(start.compareTo(start)>  0)  {  throw  new  IllegalArgumentException( "Requires  start  on  or  before  end. ");  [CE]  illegal  start  of  expression  [CONTEXT]  throws  CloneNotSupportedException  {  if  (start  ==  null)  {  throw  new  IllegalArgumentException( "Null  'start'  argument. ");  }  if  (end  ==  null)  {  throw  new  IllegalArgumentException( "Null  'end'  argument. ");  }  [BUGGY]    while(start.compareTo(start)>  0)  {  throw  new  IllegalArgumentException( "Requires  start  on  or  before  end. ");  [BUGGY]  if  (start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException(   "Requires  start  on  or  before  end. ");  }  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	927	927	1	replace	    while(start.compareTo(start)>  0)  {  throw  new  IllegalArgumentException( "Requires  start  on  or  before  end. ");		non-compiled	[CE]  illegal  start  of  expression	8	None
937	[BUG]  [BUGGY]    RegularTimePeriod  period  =(RegularTimePeriod)this.data.get(period);  [CE]  variable  period  is  already  defined  in  method  getIndex(RegularTimePeriod)  [CONTEXT]  public  int  getIndex(RegularTimePeriod  period)  {  [BUGGY]    RegularTimePeriod  period  =(RegularTimePeriod)this.data.get(period);  [BUGGY]  if  (period  ==  null)  {  throw  new  IllegalArgumentException( "Null  'period'  argument. ");  }  TimeSeriesDataItem  dummy  =  new  TimeSeriesDataItem(  period,  Integer.MIN_VALUE);  return  Collections.binarySearch(this.data,  dummy);  }  [CLASS]  TimeSeries  [METHOD]  getIndex  [RETURN_TYPE]  int  RegularTimePeriod  period  [VARIABLES]  boolean  TimeSeriesDataItem  dummy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.3333333333333333	430	430	1	replace	    RegularTimePeriod  period  =(RegularTimePeriod)this.data.get(period);		non-compiled	[CE]  variable  period  is  already  defined  in  method  getIndex(RegularTimePeriod)	42	None
938	[BUG]  [BUGGY]    while(period!=  null)  {  throw  new  IllegalArgumentException( "Null  'period'  argument. ");  [CE]  illegal  start  of  expression  [CONTEXT]  public  int  getIndex(RegularTimePeriod  period)  {  [BUGGY]    while(period!=  null)  {  throw  new  IllegalArgumentException( "Null  'period'  argument. ");  [BUGGY]  if  (period  ==  null)  {  throw  new  IllegalArgumentException( "Null  'period'  argument. ");  }  TimeSeriesDataItem  dummy  =  new  TimeSeriesDataItem(  period,  Integer.MIN_VALUE);  return  Collections.binarySearch(this.data,  dummy);  }  [CLASS]  TimeSeries  [METHOD]  getIndex  [RETURN_TYPE]  int  RegularTimePeriod  period  [VARIABLES]  boolean  TimeSeriesDataItem  dummy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.3333333333333333	430	430	1	replace	    while(period!=  null)  {  throw  new  IllegalArgumentException( "Null  'period'  argument. ");		non-compiled	[CE]  illegal  start  of  expression	42	None
939	[BUG]  [BUGGY]    while(period  <  null)  {  throw  new  IllegalArgumentException( "Null  'period'  argument. ");  [CE]  illegal  start  of  expression  [CONTEXT]  public  int  getIndex(RegularTimePeriod  period)  {  [BUGGY]    while(period  <  null)  {  throw  new  IllegalArgumentException( "Null  'period'  argument. ");  [BUGGY]  if  (period  ==  null)  {  throw  new  IllegalArgumentException( "Null  'period'  argument. ");  }  TimeSeriesDataItem  dummy  =  new  TimeSeriesDataItem(  period,  Integer.MIN_VALUE);  return  Collections.binarySearch(this.data,  dummy);  }  [CLASS]  TimeSeries  [METHOD]  getIndex  [RETURN_TYPE]  int  RegularTimePeriod  period  [VARIABLES]  boolean  TimeSeriesDataItem  dummy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.3333333333333333	430	430	1	replace	    while(period  <  null)  {  throw  new  IllegalArgumentException( "Null  'period'  argument. ");		non-compiled	[CE]  illegal  start  of  expression	42	None
1010	[BUG]  [BUGGY]  this(name,  timePeriodClass,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  DEFAULT_DOMAIN_DESCRIPTION);  [CE]  no  suitable  constructor  found  for  TimeSeries(Comparable,Class,String,String,String)  [CONTEXT]  public  TimeSeries(Comparable  name,  Class  timePeriodClass)  {  [BUGGY]  this(name,  timePeriodClass,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  DEFAULT_DOMAIN_DESCRIPTION);  [BUGGY]  timePeriodClass);  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	155	156	1	replace	this(name,  timePeriodClass,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  DEFAULT_DOMAIN_DESCRIPTION);	this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  timePeriodClass);  	non-compiled	[CE]  no  suitable  constructor  found  for  TimeSeries(Comparable,Class,String,String,String)	57	None
1033	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]  b.append( "You  are  trying  to  add  data  where  the  time  period  class   ");  b.append( "is   ");  b.append(item.getPeriod().getClass().getName());  b.append( ",  but  the  TimeSeries  is  expecting  an  instance  of   ");  b.append(this.timePeriodClass.getName());  b.append( ". ");  throw  new  SeriesException(b.toString());  }    [BUGGY]  boolean  added  =  notify;  [BUGGY]  int  count  =  getItemCount();  if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  added  =  true;  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	506	506	1	add	boolean  added  =  notify;	boolean  added  =  false;  	compilable	  [FE]  IllegalArgumentException	87	1
1034	[BUG]  [BUGGY]  boolean  added  =  notify;  [FE]  IllegalArgumentException  [CONTEXT]  b.append( "You  are  trying  to  add  data  where  the  time  period  class   ");  b.append( "is   ");  b.append(item.getPeriod().getClass().getName());  b.append( ",  but  the  TimeSeries  is  expecting  an  instance  of   ");  b.append(this.timePeriodClass.getName());  b.append( ". ");  throw  new  SeriesException(b.toString());  }    [BUGGY]  boolean  added  =  notify;  [BUGGY]  int  count  =  getItemCount();  if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  added  =  true;  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	506	506	1	replace	boolean  added  =  notify;	boolean  added  =  false;  	compilable	  [FE]  IllegalArgumentException	87	1
1034	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]  b.append( "You  are  trying  to  add  data  where  the  time  period  class   ");  b.append( "is   ");  b.append(item.getPeriod().getClass().getName());  b.append( ",  but  the  TimeSeries  is  expecting  an  instance  of   ");  b.append(this.timePeriodClass.getName());  b.append( ". ");  throw  new  SeriesException(b.toString());  }    [BUGGY]  boolean  added  =  true;  [BUGGY]  int  count  =  getItemCount();  if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  added  =  true;  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	506	506	1	add	boolean  added  =  true;	boolean  added  =  false;  	compilable	  [FE]  IllegalArgumentException	87	1
1035	[BUG]  [BUGGY]  boolean  added  =  true;  [FE]  IllegalArgumentException  [CONTEXT]  b.append( "You  are  trying  to  add  data  where  the  time  period  class   ");  b.append( "is   ");  b.append(item.getPeriod().getClass().getName());  b.append( ",  but  the  TimeSeries  is  expecting  an  instance  of   ");  b.append(this.timePeriodClass.getName());  b.append( ". ");  throw  new  SeriesException(b.toString());  }    [BUGGY]  boolean  added  =  true;  [BUGGY]  int  count  =  getItemCount();  if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  added  =  true;  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	506	506	1	replace	boolean  added  =  true;	boolean  added  =  false;  	compilable	  [FE]  IllegalArgumentException	87	1
1058	[BUG]  [BUGGY]    while(startIndex  <  0)  {  startIndex  =  getIndex(start);  [CE]  illegal  start  of  expression  [CONTEXT]  }  if  (end  ==  null)  {  throw  new  IllegalArgumentException( "Null  'end'  argument. ");  }  if  (start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException(   "Requires  start  on  or  before  end. ");  }  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  [BUGGY]    while(startIndex  <  0)  {  startIndex  =  getIndex(start);  [BUGGY]  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	933	933	1	replace	    while(startIndex  <  0)  {  startIndex  =  getIndex(start);		non-compiled	[CE]  illegal  start  of  expression	14	None
1059	[BUG]  [BUGGY]    while(startIndex  <  0)  {  startIndex  =  getIndex(startIndex);  [CE]  illegal  start  of  expression  [CONTEXT]  }  if  (end  ==  null)  {  throw  new  IllegalArgumentException( "Null  'end'  argument. ");  }  if  (start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException(   "Requires  start  on  or  before  end. ");  }  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  [BUGGY]    while(startIndex  <  0)  {  startIndex  =  getIndex(startIndex);  [BUGGY]  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	933	933	1	replace	    while(startIndex  <  0)  {  startIndex  =  getIndex(startIndex);		non-compiled	[CE]  illegal  start  of  expression	14	None
1081	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]  public  void  add(RegularTimePeriod  period,  double  value)  {    [BUGGY]  add(period,  value,  false);  [BUGGY]  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  double  value  [VARIABLES]  boolean  double  value  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.2581988897471611	561	561	1	add	add(period,  value,  false);	add(period,  value,  true);  	compilable	  [FE]  IllegalArgumentException	47	1
1082	[BUG]  [BUGGY]  add(period,  value,  false);  [FE]  IllegalArgumentException  [CONTEXT]  public  void  add(RegularTimePeriod  period,  double  value)  {    [BUGGY]  add(period,  value,  false);  [BUGGY]  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  double  value  [VARIABLES]  boolean  double  value  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.2581988897471611	561	561	1	replace	add(period,  value,  false);	add(period,  value,  true);  	compilable	  [FE]  IllegalArgumentException	47	1
1105	[BUG]  [BUGGY]    this.data.add(period,  value);  [CE]  no  suitable  method  found  for  add(RegularTimePeriod,Number)  [CONTEXT]  public  void  add(RegularTimePeriod  period,  Number  value)  {    [BUGGY]    this.data.add(period,  value);  [BUGGY]  add(period,  value,  true);  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  Number  value  [VARIABLES]  boolean  Number  value  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	588	588	1	replace	    this.data.add(period,  value);		non-compiled	[CE]  no  suitable  method  found  for  add(RegularTimePeriod,Number)	117	None
1129	[BUG]  [BUGGY]    if(endIndex  <  0)  {  for(TimeSeries  start  :(TimeSeries)this.data.get(startIndex));  if(startIndex  >=  0)  {  emptyRange  =  true;  }  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [CONTEXT]  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  [BUGGY]    if(endIndex  <  0)  {  for(TimeSeries  start  :(TimeSeries)this.data.get(startIndex));  if(startIndex  >=  0)  {  emptyRange  =  true;  }  [BUGGY]  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  }  if  (endIndex  <  0)  {  emptyRange  =  true;  }  if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  }  else  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	942	943	1	replace	    if(endIndex  <  0)  {  for(TimeSeries  start  :(TimeSeries)this.data.get(startIndex));  if(startIndex  >=  0)  {  emptyRange  =  true;  }		non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	26	None
1130	[BUG]  [BUGGY]    if(endIndex  <  0)  {  for(TimeSeries  start  :(TimeSeries)this.data.get(startIndex));  if(startIndex  >=  0)  {  emptyRange  =  false;  }  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [CONTEXT]  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  [BUGGY]    if(endIndex  <  0)  {  for(TimeSeries  start  :(TimeSeries)this.data.get(startIndex));  if(startIndex  >=  0)  {  emptyRange  =  false;  }  [BUGGY]  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  }  if  (endIndex  <  0)  {  emptyRange  =  true;  }  if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  }  else  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	942	943	1	replace	    if(endIndex  <  0)  {  for(TimeSeries  start  :(TimeSeries)this.data.get(startIndex));  if(startIndex  >=  0)  {  emptyRange  =  false;  }		non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	26	None
1131	[BUG]  [BUGGY]    if(endIndex  <  0)  {  for(TimeSeries  start  :(TimeSeries)this.data.get(startIndex));  if(startIndex  >  endIndex)  {  emptyRange  =  true;  }  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [CONTEXT]  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  [BUGGY]    if(endIndex  <  0)  {  for(TimeSeries  start  :(TimeSeries)this.data.get(startIndex));  if(startIndex  >  endIndex)  {  emptyRange  =  true;  }  [BUGGY]  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  }  if  (endIndex  <  0)  {  emptyRange  =  true;  }  if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  }  else  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	942	943	1	replace	    if(endIndex  <  0)  {  for(TimeSeries  start  :(TimeSeries)this.data.get(startIndex));  if(startIndex  >  endIndex)  {  emptyRange  =  true;  }		non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	26	None
1154	[BUG]  [BUGGY]  TimeSeriesDataItem  dummy  =  new  TimeSeriesDataItem(period,  Integer.MIN_VALUE,  this.data);  [CE]  no  suitable  constructor  found  for  TimeSeriesDataItem(RegularTimePeriod,int,List)  [CONTEXT]  public  int  getIndex(RegularTimePeriod  period)  {  if  (period  ==  null)  {  throw  new  IllegalArgumentException( "Null  'period'  argument. ");  }  [BUGGY]  TimeSeriesDataItem  dummy  =  new  TimeSeriesDataItem(period,  Integer.MIN_VALUE,  this.data);  [BUGGY]  period,  Integer.MIN_VALUE);  return  Collections.binarySearch(this.data,  dummy);  }  [CLASS]  TimeSeries  [METHOD]  getIndex  [RETURN_TYPE]  int  RegularTimePeriod  period  [VARIABLES]  boolean  TimeSeriesDataItem  dummy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.3333333333333333	433	434	1	replace	TimeSeriesDataItem  dummy  =  new  TimeSeriesDataItem(period,  Integer.MIN_VALUE,  this.data);	TimeSeriesDataItem  dummy  =  new  TimeSeriesDataItem(  period,  Integer.MIN_VALUE);  	non-compiled	[CE]  no  suitable  constructor  found  for  TimeSeriesDataItem(RegularTimePeriod,int,List)	43	None
1155	[BUG]  [BUGGY]    [CE]  cannot  find  symbol  dummy  [CONTEXT]  public  int  getIndex(RegularTimePeriod  period)  {  if  (period  ==  null)  {  throw  new  IllegalArgumentException( "Null  'period'  argument. ");  }  [BUGGY]    [BUGGY]  period,  Integer.MIN_VALUE);  return  Collections.binarySearch(this.data,  dummy);  }  [CLASS]  TimeSeries  [METHOD]  getIndex  [RETURN_TYPE]  int  RegularTimePeriod  period  [VARIABLES]  boolean  TimeSeriesDataItem  dummy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.3333333333333333	433	434	1	replace	  	TimeSeriesDataItem  dummy  =  new  TimeSeriesDataItem(  period,  Integer.MIN_VALUE);  	non-compiled	[CE]  cannot  find  symbol  dummy	43	None
1177	[BUG]  [BUGGY]    endIndex  =  getIndex(startIndex);  [CE]  method  getIndex  in  class  TimeSeries  cannot  be  applied  to  given  types;  [CONTEXT]  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  [BUGGY]    endIndex  =  getIndex(startIndex);  [BUGGY]  if  (endIndex  <  0)  {  emptyRange  =  true;  }  if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  }  else  {  return  createCopy(startIndex,  endIndex);  }  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	944	944	1	replace	    endIndex  =  getIndex(startIndex);		non-compiled	[CE]  method  getIndex  in  class  TimeSeries  cannot  be  applied  to  given  types;	28	None
1178	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  [BUGGY]    endIndex  =  getIndex(start);  [BUGGY]  if  (endIndex  <  0)  {  emptyRange  =  true;  }  if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  }  else  {  return  createCopy(startIndex,  endIndex);  }  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	944	944	1	add	    endIndex  =  getIndex(start);		compilable	  [FE]  AssertionFailedError	28	1
1179	[BUG]  [BUGGY]    endIndex  =  getIndex(start);  [FE]  AssertionFailedError  [CONTEXT]  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  [BUGGY]    endIndex  =  getIndex(start);  [BUGGY]  if  (endIndex  <  0)  {  emptyRange  =  true;  }  if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  }  else  {  return  createCopy(startIndex,  endIndex);  }  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	944	944	1	replace	    endIndex  =  getIndex(start);		compilable	  [FE]  AssertionFailedError	28	1
1179	[BUG]  [BUGGY]    int  endIndex  =  getIndex(start);  [CE]  variable  endIndex  is  already  defined  in  method  createCopy(RegularTimePeriod,RegularTimePeriod)  [CONTEXT]  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  [BUGGY]    int  endIndex  =  getIndex(start);  [BUGGY]  if  (endIndex  <  0)  {  emptyRange  =  true;  }  if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  }  else  {  return  createCopy(startIndex,  endIndex);  }  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	944	944	1	replace	    int  endIndex  =  getIndex(start);		non-compiled	[CE]  variable  endIndex  is  already  defined  in  method  createCopy(RegularTimePeriod,RegularTimePeriod)	28	None
1202	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]  if  (start  ==  null)  {  throw  new  IllegalArgumentException( "Null  'start'  argument. ");  }  if  (end  ==  null)  {  throw  new  IllegalArgumentException( "Null  'end'  argument. ");  }  if  (start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException(   "Requires  start  on  or  before  end. ");  }  [BUGGY]    if(start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException( "Requires  start  on  or  before  end. ");  }  [BUGGY]  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	931	931	1	add	    if(start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException( "Requires  start  on  or  before  end. ");  }		compilable	  [FE]  IllegalArgumentException	10	1
1203	[BUG]  [BUGGY]    if(start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException( "Requires  start  on  or  before  end. ");  }  [FE]  IllegalArgumentException  [CONTEXT]  if  (start  ==  null)  {  throw  new  IllegalArgumentException( "Null  'start'  argument. ");  }  if  (end  ==  null)  {  throw  new  IllegalArgumentException( "Null  'end'  argument. ");  }  if  (start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException(   "Requires  start  on  or  before  end. ");  }  [BUGGY]    if(start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException( "Requires  start  on  or  before  end. ");  }  [BUGGY]  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	931	931	1	replace	    if(start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException( "Requires  start  on  or  before  end. ");  }		compilable	  [FE]  IllegalArgumentException	10	1
1203	[BUG]  [BUGGY]    while(start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException( "Requires  start  on  or  before  end. ");  [CE]  illegal  start  of  expression  [CONTEXT]  if  (start  ==  null)  {  throw  new  IllegalArgumentException( "Null  'start'  argument. ");  }  if  (end  ==  null)  {  throw  new  IllegalArgumentException( "Null  'end'  argument. ");  }  if  (start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException(   "Requires  start  on  or  before  end. ");  }  [BUGGY]    while(start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException( "Requires  start  on  or  before  end. ");  [BUGGY]  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	931	931	1	replace	    while(start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException( "Requires  start  on  or  before  end. ");		non-compiled	[CE]  illegal  start  of  expression	10	None
1274	[BUG]  [BUGGY]  this.data  =  new  java.util.ArrayList(this.domain,  this.range);  [CE]  no  suitable  constructor  found  for  ArrayList(String,String)  [CONTEXT]  public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  [BUGGY]  this.data  =  new  java.util.ArrayList(this.domain,  this.range);  [BUGGY]  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	178	178	1	replace	this.data  =  new  java.util.ArrayList(this.domain,  this.range);	this.data  =  new  java.util.ArrayList();  	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayList(String,String)	69	None
1298	[BUG]  [BUGGY]  this.data.add(item,  notify);  [CE]  no  suitable  method  found  for  add(TimeSeriesDataItem,boolean)  [CONTEXT]  b.append( ",  but  the  TimeSeries  is  expecting  an  instance  of   ");  b.append(this.timePeriodClass.getName());  b.append( ". ");  throw  new  SeriesException(b.toString());  }  boolean  added  =  false;  int  count  =  getItemCount();  if  (count  ==  0)  {  [BUGGY]  this.data.add(item,  notify);  [BUGGY]  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  added  =  true;  }  else  {  int  index  =  Collections.binarySearch(this.data,  item);  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	509	509	1	replace	this.data.add(item,  notify);	this.data.add(item);  	non-compiled	[CE]  no  suitable  method  found  for  add(TimeSeriesDataItem,boolean)	93	None
1346	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]  b.append( ",  but  the  TimeSeries  is  expecting  an  instance  of   ");  b.append(this.timePeriodClass.getName());  b.append( ". ");  throw  new  SeriesException(b.toString());  }  boolean  added  =  false;  int  count  =  getItemCount();  if  (count  ==  0)  {  [BUGGY]    fireSeriesChanged();  [BUGGY]  this.data.add(item);  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  added  =  true;  }  else  {  int  index  =  Collections.binarySearch(this.data,  item);  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	509	509	1	add	    fireSeriesChanged();		compilable	  [FE]  IllegalArgumentException	94	1
1347	[BUG]  [BUGGY]    fireSeriesChanged();  [FE]  IllegalArgumentException  [CONTEXT]  b.append( ",  but  the  TimeSeries  is  expecting  an  instance  of   ");  b.append(this.timePeriodClass.getName());  b.append( ". ");  throw  new  SeriesException(b.toString());  }  boolean  added  =  false;  int  count  =  getItemCount();  if  (count  ==  0)  {  [BUGGY]    fireSeriesChanged();  [BUGGY]  this.data.add(item);  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  added  =  true;  }  else  {  int  index  =  Collections.binarySearch(this.data,  item);  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	509	509	1	replace	    fireSeriesChanged();		compilable	  [FE]  IllegalArgumentException	94	1
1370	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]  if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {  [BUGGY]    fireSeriesChanged();  [BUGGY]  this.data.add(item);  added  =  true;  }  else  {  int  index  =  Collections.binarySearch(this.data,  item);  if  (index  <  0)  {  this.data.add(-index  -  1,  item);  added  =  true;  }  else  {  StringBuffer  b  =  new  StringBuffer();  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	515	515	1	add	    fireSeriesChanged();		compilable	  [FE]  IllegalArgumentException	102	1
1371	[BUG]  [BUGGY]    fireSeriesChanged();  [FE]  IllegalArgumentException  [CONTEXT]  if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {  [BUGGY]    fireSeriesChanged();  [BUGGY]  this.data.add(item);  added  =  true;  }  else  {  int  index  =  Collections.binarySearch(this.data,  item);  if  (index  <  0)  {  this.data.add(-index  -  1,  item);  added  =  true;  }  else  {  StringBuffer  b  =  new  StringBuffer();  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	515	515	1	replace	    fireSeriesChanged();		compilable	  [FE]  IllegalArgumentException	102	1
1371	[BUG]  [BUGGY]    this.data.add(last,  item);  [CE]  no  suitable  method  found  for  add(RegularTimePeriod,TimeSeriesDataItem)  [CONTEXT]  if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {  [BUGGY]    this.data.add(last,  item);  [BUGGY]  this.data.add(item);  added  =  true;  }  else  {  int  index  =  Collections.binarySearch(this.data,  item);  if  (index  <  0)  {  this.data.add(-index  -  1,  item);  added  =  true;  }  else  {  StringBuffer  b  =  new  StringBuffer();  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	515	515	1	replace	    this.data.add(last,  item);		non-compiled	[CE]  no  suitable  method  found  for  add(RegularTimePeriod,TimeSeriesDataItem)	102	None
1393	[BUG]  [BUGGY]    int  startIndex  =  getIndex(startIndex);  [CE]  variable  startIndex  is  already  defined  in  method  createCopy(RegularTimePeriod,RegularTimePeriod)  [CONTEXT]  if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  }  else  {  [BUGGY]    int  startIndex  =  getIndex(startIndex);  [BUGGY]  return  createCopy(startIndex,  endIndex);  }  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	953	953	1	replace	    int  startIndex  =  getIndex(startIndex);		non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  createCopy(RegularTimePeriod,RegularTimePeriod)	32	None
1394	[BUG]  [BUGGY]    int  startIndex  =  indexOf('n',  startIndex);  endIndex  +=  startIndex;  [CE]  variable  startIndex  is  already  defined  in  method  createCopy(RegularTimePeriod,RegularTimePeriod)  [CONTEXT]  if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  }  else  {  [BUGGY]    int  startIndex  =  indexOf('n',  startIndex);  endIndex  +=  startIndex;  [BUGGY]  return  createCopy(startIndex,  endIndex);  }  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	953	953	1	replace	    int  startIndex  =  indexOf('n',  startIndex);  endIndex  +=  startIndex;		non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  createCopy(RegularTimePeriod,RegularTimePeriod)	32	None
1395	[BUG]  [BUGGY]    int  startIndex  =  indexOf('n',  startIndex);  [CE]  variable  startIndex  is  already  defined  in  method  createCopy(RegularTimePeriod,RegularTimePeriod)  [CONTEXT]  if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  }  else  {  [BUGGY]    int  startIndex  =  indexOf('n',  startIndex);  [BUGGY]  return  createCopy(startIndex,  endIndex);  }  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	953	953	1	replace	    int  startIndex  =  indexOf('n',  startIndex);		non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  createCopy(RegularTimePeriod,RegularTimePeriod)	32	None
1417	[BUG]  [BUGGY]    b.append(item.getPeriod().toString());  [CE]  cannot  find  symbol  b  [CONTEXT]  throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  [BUGGY]    b.append(item.getPeriod().toString());  [BUGGY]  removeAgedItems(false);//  remove  old  items  if  necessary,  but          //  don't  notify  anyone,  because  that                    //  happens  next  anyway...    if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	542	544	1	replace	    b.append(item.getPeriod().toString());		non-compiled	[CE]  cannot  find  symbol  b	110	None
1419	[BUG]  [BUGGY]    b.append(item.getPeriod().getValue());  [CE]  cannot  find  symbol  [CONTEXT]  throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  [BUGGY]    b.append(item.getPeriod().getValue());  [BUGGY]  removeAgedItems(false);//  remove  old  items  if  necessary,  but          //  don't  notify  anyone,  because  that                    //  happens  next  anyway...    if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	542	544	1	replace	    b.append(item.getPeriod().getValue());		non-compiled	[CE]  cannot  find  symbol	110	None
1441	[BUG]  [BUGGY]    b.append( "  but  the  series  already  contains  an  observation ");  [CE]  cannot  find  symbol  b  [CONTEXT]  b.append( "You  are  attempting  to  add  an  observation  for   ");  b.append( "the  time  period   ");  b.append(item.getPeriod().toString());  b.append( "  but  the  series  already  contains  an  observation ");  b.append( "  for  that  time  period.  Duplicates  are  not   ");  b.append( "permitted.Try  using  the  addOrUpdate()  method. ");  throw  new  SeriesException(b.toString());  }  }  }  [BUGGY]    b.append( "  but  the  series  already  contains  an  observation ");  [BUGGY]  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  removeAgedItems(false);//  remove  old  items  if  necessary,  but    if  (notify)  {  fireSeriesChanged();  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	536	536	1	replace	    b.append( "  but  the  series  already  contains  an  observation ");		non-compiled	[CE]  cannot  find  symbol  b	106	None
1443	[BUG]  [BUGGY]    boolean  added  =  this.data.contains(item.getItemCount());  [CE]  variable  added  is  already  defined  in  method  add(TimeSeriesDataItem,boolean)  [CONTEXT]  b.append( "You  are  attempting  to  add  an  observation  for   ");  b.append( "the  time  period   ");  b.append(item.getPeriod().toString());  b.append( "  but  the  series  already  contains  an  observation ");  b.append( "  for  that  time  period.  Duplicates  are  not   ");  b.append( "permitted.Try  using  the  addOrUpdate()  method. ");  throw  new  SeriesException(b.toString());  }  }  }  [BUGGY]    boolean  added  =  this.data.contains(item.getItemCount());  [BUGGY]  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  removeAgedItems(false);//  remove  old  items  if  necessary,  but    if  (notify)  {  fireSeriesChanged();  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	536	536	1	replace	    boolean  added  =  this.data.contains(item.getItemCount());		non-compiled	[CE]  variable  added  is  already  defined  in  method  add(TimeSeriesDataItem,boolean)	106	None
1466	[BUG]  [BUGGY]    TimePeriodClass  timePeriodClass  =(TimePeriodClass)this.data.get(getItemCount()  -  1);  [CE]  cannot  find  symbol  [CONTEXT]  public  void  removeAgedItems(boolean  notify)  {    [BUGGY]    TimePeriodClass  timePeriodClass  =(TimePeriodClass)this.data.get(getItemCount()  -  1);  [BUGGY]  if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())  >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	740	740	1	replace	    TimePeriodClass  timePeriodClass  =(TimePeriodClass)this.data.get(getItemCount()  -  1);		non-compiled	[CE]  cannot  find  symbol	127	None
1467	[BUG]  [BUGGY]    TimePeriodClass  timePeriodClass  =(TimePeriodClass)this.data.get(getItemCount());  [CE]  cannot  find  symbol  [CONTEXT]  public  void  removeAgedItems(boolean  notify)  {    [BUGGY]    TimePeriodClass  timePeriodClass  =(TimePeriodClass)this.data.get(getItemCount());  [BUGGY]  if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())  >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	740	740	1	replace	    TimePeriodClass  timePeriodClass  =(TimePeriodClass)this.data.get(getItemCount());		non-compiled	[CE]  cannot  find  symbol	127	None
1490	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]  b.append(this.timePeriodClass.getName());  b.append( ". ");  throw  new  SeriesException(b.toString());  }  boolean  added  =  false;  int  count  =  getItemCount();  if  (count  ==  0)  {  this.data.add(item);  [BUGGY]  added  =  false;  [BUGGY]  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  added  =  true;  }  else  {  int  index  =  Collections.binarySearch(this.data,  item);  if  (index  <  0)  {  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	510	510	1	add	added  =  false;	added  =  true;  	compilable	  [FE]  IllegalArgumentException	95	1
1491	[BUG]  [BUGGY]  added  =  false;  [FE]  IllegalArgumentException  [CONTEXT]  b.append(this.timePeriodClass.getName());  b.append( ". ");  throw  new  SeriesException(b.toString());  }  boolean  added  =  false;  int  count  =  getItemCount();  if  (count  ==  0)  {  this.data.add(item);  [BUGGY]  added  =  false;  [BUGGY]  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  added  =  true;  }  else  {  int  index  =  Collections.binarySearch(this.data,  item);  if  (index  <  0)  {  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	510	510	1	replace	added  =  false;	added  =  true;  	compilable	  [FE]  IllegalArgumentException	95	1
1491	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]  b.append(this.timePeriodClass.getName());  b.append( ". ");  throw  new  SeriesException(b.toString());  }  boolean  added  =  false;  int  count  =  getItemCount();  if  (count  ==  0)  {  this.data.add(item);  [BUGGY]    [BUGGY]  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  added  =  true;  }  else  {  int  index  =  Collections.binarySearch(this.data,  item);  if  (index  <  0)  {  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	510	510	1	add	  	added  =  true;  	compilable	  [FE]  IllegalArgumentException	95	1
1492	[BUG]  [BUGGY]    [FE]  IllegalArgumentException  [CONTEXT]  b.append(this.timePeriodClass.getName());  b.append( ". ");  throw  new  SeriesException(b.toString());  }  boolean  added  =  false;  int  count  =  getItemCount();  if  (count  ==  0)  {  this.data.add(item);  [BUGGY]    [BUGGY]  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  added  =  true;  }  else  {  int  index  =  Collections.binarySearch(this.data,  item);  if  (index  <  0)  {  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	510	510	1	replace	  	added  =  true;  	compilable	  [FE]  IllegalArgumentException	95	1
1537	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]  public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  [BUGGY]    this.data  =  new  java.util.ArrayList();  [BUGGY]  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	175	175	1	add	    this.data  =  new  java.util.ArrayList();		compilable	  [FE]  IllegalArgumentException	64	1
1538	[BUG]  [BUGGY]    this.data  =  new  java.util.ArrayList();  [FE]  IllegalArgumentException  [CONTEXT]  public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  [BUGGY]    this.data  =  new  java.util.ArrayList();  [BUGGY]  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	175	175	1	replace	    this.data  =  new  java.util.ArrayList();		compilable	  [FE]  IllegalArgumentException	64	1
1539	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]  public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  [BUGGY]    this.domain  =  domain;  this.range  =  range;  [BUGGY]  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	175	175	1	add	    this.domain  =  domain;  this.range  =  range;		compilable	  [FE]  IllegalArgumentException	64	1
1540	[BUG]  [BUGGY]    this.domain  =  domain;  this.range  =  range;  [FE]  IllegalArgumentException  [CONTEXT]  public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  [BUGGY]    this.domain  =  domain;  this.range  =  range;  [BUGGY]  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	175	175	1	replace	    this.domain  =  domain;  this.range  =  range;		compilable	  [FE]  IllegalArgumentException	64	1
1562	[BUG]  [BUGGY]  this.data.add(period,  value);  [CE]  illegal  start  of  expression  [CONTEXT]  public  void  add(RegularTimePeriod  period,  Number  value)  {  add(period,  value,  true);  [BUGGY]  this.data.add(period,  value);  [BUGGY]    [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  Number  value  [VARIABLES]  boolean  Number  value  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	589	589	1	replace	this.data.add(period,  value);	}  	non-compiled	[CE]  illegal  start  of  expression	118	None
1586	[BUG]  [BUGGY]  if(notify)  }  [CE]  illegal  start  of  expression  [CONTEXT]  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  removeAgedItems(false);//  remove  old  items  if  necessary,  but    [BUGGY]  if(notify)  }  [BUGGY]  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	545	545	1	replace	if(notify)  }	if  (notify)  {  	non-compiled	[CE]  illegal  start  of  expression	111	None
1587	[BUG]  [BUGGY]    [CE]  class  or  interface  expected  [CONTEXT]  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  removeAgedItems(false);//  remove  old  items  if  necessary,  but    [BUGGY]    [BUGGY]  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	545	545	1	replace	  	if  (notify)  {  	non-compiled	[CE]  class  or  interface  expected	111	None
1610	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  }  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);  [BUGGY]  if(endIndex  <  0)  {  //  endIndex  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;  //  so  this  is  last  item  BEFORE  end  [BUGGY]  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  emptyRange  =  true;  }  if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	940	942	1	add	if(endIndex  <  0)  {  //  endIndex  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;  //  so  this  is  last  item  BEFORE  end	if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period    endIndex  =  endIndex  -  1;  //  so  this  is  last  item  BEFORE  end  	compilable	  [FE]  AssertionFailedError	21	1
1611	[BUG]  [BUGGY]  if(endIndex  <  0)  {  //  endIndex  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;  //  so  this  is  last  item  BEFORE  end  [FE]  AssertionFailedError  [CONTEXT]  }  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);  [BUGGY]  if(endIndex  <  0)  {  //  endIndex  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;  //  so  this  is  last  item  BEFORE  end  [BUGGY]  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  emptyRange  =  true;  }  if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	940	942	1	replace	if(endIndex  <  0)  {  //  endIndex  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;  //  so  this  is  last  item  BEFORE  end	if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period    endIndex  =  endIndex  -  1;  //  so  this  is  last  item  BEFORE  end  	compilable	  [FE]  AssertionFailedError	21	1
1611	[BUG]  [BUGGY]    [CE]  illegal  start  of  type  [CONTEXT]  }  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);  [BUGGY]    [BUGGY]  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  emptyRange  =  true;  }  if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	940	942	1	replace	  	if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period    endIndex  =  endIndex  -  1;  //  so  this  is  last  item  BEFORE  end  	non-compiled	[CE]  illegal  start  of  type	21	None
1634	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  if  (start  ==  null)  {  throw  new  IllegalArgumentException( "Null  'start'  argument. ");  }  if  (end  ==  null)  {  throw  new  IllegalArgumentException( "Null  'end'  argument. ");  }  if  (start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException(   "Requires  start  on  or  before  end. ");  }  [BUGGY]  boolean  emptyRange  =  true;  [BUGGY]  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	931	931	1	add	boolean  emptyRange  =  true;	boolean  emptyRange  =  false;  	compilable	  [FE]  AssertionFailedError	9	1
1635	[BUG]  [BUGGY]  boolean  emptyRange  =  true;  [FE]  AssertionFailedError  [CONTEXT]  if  (start  ==  null)  {  throw  new  IllegalArgumentException( "Null  'start'  argument. ");  }  if  (end  ==  null)  {  throw  new  IllegalArgumentException( "Null  'end'  argument. ");  }  if  (start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException(   "Requires  start  on  or  before  end. ");  }  [BUGGY]  boolean  emptyRange  =  true;  [BUGGY]  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	931	931	1	replace	boolean  emptyRange  =  true;	boolean  emptyRange  =  false;  	compilable	  [FE]  AssertionFailedError	9	1
1657	[BUG]  [BUGGY]    this.data  =  createDataItem(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  Day.class);  [CE]  cannot  find  symbol  [CONTEXT]  public  TimeSeries(Comparable  name)  {  this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  Day.class);  [BUGGY]    this.data  =  createDataItem(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  Day.class);  [BUGGY]  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Comparable)  Comparable  name  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.4082482904638631	144	144	1	replace	    this.data  =  createDataItem(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  Day.class);		non-compiled	[CE]  cannot  find  symbol	40	None
1658	[BUG]  [BUGGY]    this.data  =  createDataItem(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION);  [CE]  cannot  find  symbol  [CONTEXT]  public  TimeSeries(Comparable  name)  {  this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  Day.class);  [BUGGY]    this.data  =  createDataItem(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION);  [BUGGY]  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Comparable)  Comparable  name  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.4082482904638631	144	144	1	replace	    this.data  =  createDataItem(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION);		non-compiled	[CE]  cannot  find  symbol	40	None
1659	[BUG]  [BUGGY]    this.data  =  createDataItem(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  TimeSeries.class);  [CE]  cannot  find  symbol  [CONTEXT]  public  TimeSeries(Comparable  name)  {  this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  Day.class);  [BUGGY]    this.data  =  createDataItem(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  TimeSeries.class);  [BUGGY]  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Comparable)  Comparable  name  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.4082482904638631	144	144	1	replace	    this.data  =  createDataItem(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  TimeSeries.class);		non-compiled	[CE]  cannot  find  symbol	40	None
1681	[BUG]  [BUGGY]    item.setValue(value);  fireSeriesChanged();  [CE]  method  setValue  in  class  TimeSeriesDataItem  cannot  be  applied  to  given  types;  [CONTEXT]  public  void  add(RegularTimePeriod  period,  double  value,  boolean  notify)  {  TimeSeriesDataItem  item  =  new  TimeSeriesDataItem(period,  value);  [BUGGY]    item.setValue(value);  fireSeriesChanged();  [BUGGY]  add(item,  notify);  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  double  value  boolean  notify  [VARIABLES]  boolean  notify  double  value  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.2581988897471611	575	575	1	replace	    item.setValue(value);  fireSeriesChanged();		non-compiled	[CE]  method  setValue  in  class  TimeSeriesDataItem  cannot  be  applied  to  given  types;	54	None
1682	[BUG]  [BUGGY]    item.setValue(value);  [CE]  method  setValue  in  class  TimeSeriesDataItem  cannot  be  applied  to  given  types;  [CONTEXT]  public  void  add(RegularTimePeriod  period,  double  value,  boolean  notify)  {  TimeSeriesDataItem  item  =  new  TimeSeriesDataItem(period,  value);  [BUGGY]    item.setValue(value);  [BUGGY]  add(item,  notify);  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  double  value  boolean  notify  [VARIABLES]  boolean  notify  double  value  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.2581988897471611	575	575	1	replace	    item.setValue(value);		non-compiled	[CE]  method  setValue  in  class  TimeSeriesDataItem  cannot  be  applied  to  given  types;	54	None
1683	[BUG]  [BUGGY]    item.setValue(value);  notify  =  true;  [CE]  method  setValue  in  class  TimeSeriesDataItem  cannot  be  applied  to  given  types;  [CONTEXT]  public  void  add(RegularTimePeriod  period,  double  value,  boolean  notify)  {  TimeSeriesDataItem  item  =  new  TimeSeriesDataItem(period,  value);  [BUGGY]    item.setValue(value);  notify  =  true;  [BUGGY]  add(item,  notify);  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  double  value  boolean  notify  [VARIABLES]  boolean  notify  double  value  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.2581988897471611	575	575	1	replace	    item.setValue(value);  notify  =  true;		non-compiled	[CE]  method  setValue  in  class  TimeSeriesDataItem  cannot  be  applied  to  given  types;	54	None
1705	[BUG]  [BUGGY]    while(this.data!=  null)  {  this.data  =(List)this.data.get(this.timePeriodClass);  [CE]  illegal  start  of  expression  [CONTEXT]  public  int  getItemCount()  {  [BUGGY]    while(this.data!=  null)  {  this.data  =(List)this.data.get(this.timePeriodClass);  [BUGGY]  return  this.data.size();  }  [CLASS]  TimeSeries  [METHOD]  getItemCount  [RETURN_TYPE]  int  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	240	240	1	replace	    while(this.data!=  null)  {  this.data  =(List)this.data.get(this.timePeriodClass);		non-compiled	[CE]  illegal  start  of  expression	78	None
1706	[BUG]  [BUGGY]    while(this.data!=  null)  {  this.data  =  getDataItemCount();  [CE]  illegal  start  of  expression  [CONTEXT]  public  int  getItemCount()  {  [BUGGY]    while(this.data!=  null)  {  this.data  =  getDataItemCount();  [BUGGY]  return  this.data.size();  }  [CLASS]  TimeSeries  [METHOD]  getItemCount  [RETURN_TYPE]  int  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	240	240	1	replace	    while(this.data!=  null)  {  this.data  =  getDataItemCount();		non-compiled	[CE]  illegal  start  of  expression	78	None
1707	[BUG]  [BUGGY]    while(this.data!=  null)  {  this.data  =  new  ArrayList  <  TimePeriodClass>();  [CE]  generics  are  not  supported  in  -source  1.4  [CONTEXT]  public  int  getItemCount()  {  [BUGGY]    while(this.data!=  null)  {  this.data  =  new  ArrayList  <  TimePeriodClass>();  [BUGGY]  return  this.data.size();  }  [CLASS]  TimeSeries  [METHOD]  getItemCount  [RETURN_TYPE]  int  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	240	240	1	replace	    while(this.data!=  null)  {  this.data  =  new  ArrayList  <  TimePeriodClass>();		non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	78	None
1753	[BUG]  [BUGGY]  TimeSeriesDataItem  item  =  new  TimeSeriesDataItem(period,  value,  notify);  [CE]  no  suitable  constructor  found  for  TimeSeriesDataItem(RegularTimePeriod,double,boolean)  [CONTEXT]  public  void  add(RegularTimePeriod  period,  double  value,  boolean  notify)  {    [BUGGY]  TimeSeriesDataItem  item  =  new  TimeSeriesDataItem(period,  value,  notify);  [BUGGY]  add(item,  notify);  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  double  value  boolean  notify  [VARIABLES]  boolean  notify  double  value  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.2581988897471611	574	574	1	replace	TimeSeriesDataItem  item  =  new  TimeSeriesDataItem(period,  value,  notify);	TimeSeriesDataItem  item  =  new  TimeSeriesDataItem(period,  value);  	non-compiled	[CE]  no  suitable  constructor  found  for  TimeSeriesDataItem(RegularTimePeriod,double,boolean)	51	None
1755	[BUG]  [BUGGY]    [CE]  cannot  find  symbol  item  [CONTEXT]  public  void  add(RegularTimePeriod  period,  double  value,  boolean  notify)  {    [BUGGY]    [BUGGY]  add(item,  notify);  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  double  value  boolean  notify  [VARIABLES]  boolean  notify  double  value  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.2581988897471611	574	574	1	replace	  	TimeSeriesDataItem  item  =  new  TimeSeriesDataItem(period,  value);  	non-compiled	[CE]  cannot  find  symbol  item	51	None
1777	[BUG]  [BUGGY]    int  endIndex  =  getIndex(end);  [CE]  variable  endIndex  is  already  defined  in  method  createCopy(RegularTimePeriod,RegularTimePeriod)  [CONTEXT]  }  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);  [BUGGY]    int  endIndex  =  getIndex(end);  [BUGGY]  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series    endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period      endIndex  =  endIndex  -  1;  //  so  this  is  last  item  BEFORE  end  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  emptyRange  =  true;  }  if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	940	942	1	replace	    int  endIndex  =  getIndex(end);		non-compiled	[CE]  variable  endIndex  is  already  defined  in  method  createCopy(RegularTimePeriod,RegularTimePeriod)	22	None
1778	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]  }  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);  [BUGGY]    endIndex  =  getIndex(end);  [BUGGY]  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series    endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period      endIndex  =  endIndex  -  1;  //  so  this  is  last  item  BEFORE  end  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  emptyRange  =  true;  }  if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	940	942	1	add	    endIndex  =  getIndex(end);		compilable	  [FE]  IllegalArgumentException	22	1
1779	[BUG]  [BUGGY]    endIndex  =  getIndex(end);  [FE]  IllegalArgumentException  [CONTEXT]  }  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);  [BUGGY]    endIndex  =  getIndex(end);  [BUGGY]  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series    endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period      endIndex  =  endIndex  -  1;  //  so  this  is  last  item  BEFORE  end  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  emptyRange  =  true;  }  if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	940	942	1	replace	    endIndex  =  getIndex(end);		compilable	  [FE]  IllegalArgumentException	22	1
1803	[BUG]  [BUGGY]    [CE]  illegal  start  of  type  [CONTEXT]  throw  new  IllegalArgumentException( "Null  'end'  argument. ");  }  if  (start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException(   "Requires  start  on  or  before  end. ");  }  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  [BUGGY]    [BUGGY]  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  emptyRange  =  true;  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	935	935	1	replace	  	if  (startIndex  ==  this.data.size())  {  	non-compiled	[CE]  illegal  start  of  type	17	None
1826	[BUG]  [BUGGY]    int  count  =  getItemCount();  [CE]  variable  count  is  already  defined  in  method  add(TimeSeriesDataItem,boolean)  [CONTEXT]  if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {  [BUGGY]    int  count  =  getItemCount();  [BUGGY]  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  added  =  true;  }  else  {  int  index  =  Collections.binarySearch(this.data,  item);  if  (index  <  0)  {  this.data.add(-index  -  1,  item);  added  =  true;  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	513	513	1	replace	    int  count  =  getItemCount();		non-compiled	[CE]  variable  count  is  already  defined  in  method  add(TimeSeriesDataItem,boolean)	98	None
1849	[BUG]  [BUGGY]  this.maximumItemCount  =  Long.MAX_VALUE;  [CE]  possible  loss  of  precision  [CONTEXT]  public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  [BUGGY]  this.maximumItemCount  =  Long.MAX_VALUE;  [BUGGY]  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	179	179	1	replace	this.maximumItemCount  =  Long.MAX_VALUE;	this.maximumItemCount  =  Integer.MAX_VALUE;  	non-compiled	[CE]  possible  loss  of  precision	71	None
1874	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]  if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  [BUGGY]  added  =  false;  [BUGGY]  }  else  {  int  index  =  Collections.binarySearch(this.data,  item);  if  (index  <  0)  {  this.data.add(-index  -  1,  item);  added  =  true;  }  else  {  StringBuffer  b  =  new  StringBuffer();  b.append( "You  are  attempting  to  add  an  observation  for   ");  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	516	516	1	add	added  =  false;	added  =  true;  	compilable	  [FE]  IllegalArgumentException	103	1
1875	[BUG]  [BUGGY]  added  =  false;  [FE]  IllegalArgumentException  [CONTEXT]  if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  [BUGGY]  added  =  false;  [BUGGY]  }  else  {  int  index  =  Collections.binarySearch(this.data,  item);  if  (index  <  0)  {  this.data.add(-index  -  1,  item);  added  =  true;  }  else  {  StringBuffer  b  =  new  StringBuffer();  b.append( "You  are  attempting  to  add  an  observation  for   ");  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	516	516	1	replace	added  =  false;	added  =  true;  	compilable	  [FE]  IllegalArgumentException	103	1
1897	[BUG]  [BUGGY]    while((  latest  -  getTimePeriod(0).getSerialIndex())>  this.maximumItemAge)  {  this.data.remove(0);  [CE]  illegal  start  of  expression  [CONTEXT]  public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  [BUGGY]    while((  latest  -  getTimePeriod(0).getSerialIndex())>  this.maximumItemAge)  {  this.data.remove(0);  [BUGGY]  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())  >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	742	742	1	replace	    while((  latest  -  getTimePeriod(0).getSerialIndex())>  this.maximumItemAge)  {  this.data.remove(0);		non-compiled	[CE]  illegal  start  of  expression	131	None
1898	[BUG]  [BUGGY]    long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  [CE]  variable  latest  is  already  defined  in  method  removeAgedItems(boolean)  [CONTEXT]  public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  [BUGGY]    long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  [BUGGY]  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())  >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	742	742	1	replace	    long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();		non-compiled	[CE]  variable  latest  is  already  defined  in  method  removeAgedItems(boolean)	131	None
1899	[BUG]  [BUGGY]    while((  latest  -  getTimePeriod(0).getSerialIndex())>  this.minimumItemAge)  {  this.data.remove(0);  [CE]  illegal  start  of  expression  [CONTEXT]  public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  [BUGGY]    while((  latest  -  getTimePeriod(0).getSerialIndex())>  this.minimumItemAge)  {  this.data.remove(0);  [BUGGY]  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())  >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	742	742	1	replace	    while((  latest  -  getTimePeriod(0).getSerialIndex())>  this.minimumItemAge)  {  this.data.remove(0);		non-compiled	[CE]  illegal  start  of  expression	131	None
1921	[BUG]  [BUGGY]    this.data  =  new  ArrayList  <  Comparable>(DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  timePeriodClass);  [CE]  generics  are  not  supported  in  -source  1.4  [CONTEXT]  public  TimeSeries(Comparable  name,  Class  timePeriodClass)  {  this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  timePeriodClass);  [BUGGY]    this.data  =  new  ArrayList  <  Comparable>(DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  timePeriodClass);  [BUGGY]  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	157	157	1	replace	    this.data  =  new  ArrayList  <  Comparable>(DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  timePeriodClass);		non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	60	None
1922	[BUG]  [BUGGY]    this.data  =  new  ArrayList  <  Comparable>(DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION);  [CE]  generics  are  not  supported  in  -source  1.4  [CONTEXT]  public  TimeSeries(Comparable  name,  Class  timePeriodClass)  {  this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  timePeriodClass);  [BUGGY]    this.data  =  new  ArrayList  <  Comparable>(DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION);  [BUGGY]  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	157	157	1	replace	    this.data  =  new  ArrayList  <  Comparable>(DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION);		non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	60	None
1923	[BUG]  [BUGGY]    this.data  =  new  ArrayList  <  Comparable>(timePeriodClass,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION);  [CE]  generics  are  not  supported  in  -source  1.4  [CONTEXT]  public  TimeSeries(Comparable  name,  Class  timePeriodClass)  {  this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  timePeriodClass);  [BUGGY]    this.data  =  new  ArrayList  <  Comparable>(timePeriodClass,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION);  [BUGGY]  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	157	157	1	replace	    this.data  =  new  ArrayList  <  Comparable>(timePeriodClass,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION);		non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	60	None
1945	[BUG]  [BUGGY]    RegularTimePeriod  end  =(RegularTimePeriod)this.data.get(startIndex);  [CE]  variable  end  is  already  defined  in  method  createCopy(RegularTimePeriod,RegularTimePeriod)  [CONTEXT]   "Requires  start  on  or  before  end. ");  }  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  [BUGGY]    RegularTimePeriod  end  =(RegularTimePeriod)this.data.get(startIndex);  [BUGGY]  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  emptyRange  =  true;  }  if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	939	939	1	replace	    RegularTimePeriod  end  =(RegularTimePeriod)this.data.get(startIndex);		non-compiled	[CE]  variable  end  is  already  defined  in  method  createCopy(RegularTimePeriod,RegularTimePeriod)	20	None
1946	[BUG]  [BUGGY]    regularTimePeriod  start  =(RegularTimePeriod)this.data.get(startIndex);  [CE]  cannot  find  symbol  [CONTEXT]   "Requires  start  on  or  before  end. ");  }  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  [BUGGY]    regularTimePeriod  start  =(RegularTimePeriod)this.data.get(startIndex);  [BUGGY]  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  emptyRange  =  true;  }  if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	939	939	1	replace	    regularTimePeriod  start  =(RegularTimePeriod)this.data.get(startIndex);		non-compiled	[CE]  cannot  find  symbol	20	None
1971	[BUG]  [BUGGY]    [CE]  illegal  start  of  type  [CONTEXT]  public  void  add(TimeSeriesDataItem  item,  boolean  notify)  {  if  (item  ==  null)  {  throw  new  IllegalArgumentException( "Null  'item'  argument. ");  }  [BUGGY]    [BUGGY]  StringBuffer  b  =  new  StringBuffer();  b.append( "You  are  trying  to  add  data  where  the  time  period  class   ");  b.append( "is   ");  b.append(item.getPeriod().getClass().getName());  b.append( ",  but  the  TimeSeries  is  expecting  an  instance  of   ");  b.append(this.timePeriodClass.getName());  b.append( ". ");  throw  new  SeriesException(b.toString());  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	494	494	1	replace	  	if  (!item.getPeriod().getClass().equals(this.timePeriodClass))  {  	non-compiled	[CE]  illegal  start  of  type	85	None
1993	[BUG]  [BUGGY]  fireSeriesChanged();  [CE]  illegal  start  of  expression  [CONTEXT]  public  TimeSeries(Comparable  name,  Class  timePeriodClass)  {  this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  timePeriodClass);  [BUGGY]  fireSeriesChanged();  [BUGGY]    [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	157	157	1	replace	fireSeriesChanged();	}  	non-compiled	[CE]  illegal  start  of  expression	59	None
1994	[BUG]  [BUGGY]  this.data  =  new  ArrayList  <  String>();  [CE]  generics  are  not  supported  in  -source  1.4  [CONTEXT]  public  TimeSeries(Comparable  name,  Class  timePeriodClass)  {  this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  timePeriodClass);  [BUGGY]  this.data  =  new  ArrayList  <  String>();  [BUGGY]    [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	157	157	1	replace	this.data  =  new  ArrayList  <  String>();	}  	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	59	None
2041	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]  public  void  add(RegularTimePeriod  period,  Number  value,  boolean  notify)  {  TimeSeriesDataItem  item  =  new  TimeSeriesDataItem(period,  value);  [BUGGY]    item.setValue(value);  fireSeriesChanged();  [BUGGY]  add(item,  notify);  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  Number  value  boolean  notify  [VARIABLES]  boolean  notify  Number  value  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	603	603	1	add	    item.setValue(value);  fireSeriesChanged();		compilable	  [FE]  IllegalArgumentException	123	1
2042	[BUG]  [BUGGY]    item.setValue(value);  fireSeriesChanged();  [FE]  IllegalArgumentException  [CONTEXT]  public  void  add(RegularTimePeriod  period,  Number  value,  boolean  notify)  {  TimeSeriesDataItem  item  =  new  TimeSeriesDataItem(period,  value);  [BUGGY]    item.setValue(value);  fireSeriesChanged();  [BUGGY]  add(item,  notify);  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  Number  value  boolean  notify  [VARIABLES]  boolean  notify  Number  value  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	603	603	1	replace	    item.setValue(value);  fireSeriesChanged();		compilable	  [FE]  IllegalArgumentException	123	1
2042	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]  public  void  add(RegularTimePeriod  period,  Number  value,  boolean  notify)  {  TimeSeriesDataItem  item  =  new  TimeSeriesDataItem(period,  value);  [BUGGY]    item.setValue(value);  [BUGGY]  add(item,  notify);  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  Number  value  boolean  notify  [VARIABLES]  boolean  notify  Number  value  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	603	603	1	add	    item.setValue(value);		compilable	  [FE]  IllegalArgumentException	123	1
2043	[BUG]  [BUGGY]    item.setValue(value);  [FE]  IllegalArgumentException  [CONTEXT]  public  void  add(RegularTimePeriod  period,  Number  value,  boolean  notify)  {  TimeSeriesDataItem  item  =  new  TimeSeriesDataItem(period,  value);  [BUGGY]    item.setValue(value);  [BUGGY]  add(item,  notify);  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  Number  value  boolean  notify  [VARIABLES]  boolean  notify  Number  value  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	603	603	1	replace	    item.setValue(value);		compilable	  [FE]  IllegalArgumentException	123	1
2043	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]  public  void  add(RegularTimePeriod  period,  Number  value,  boolean  notify)  {  TimeSeriesDataItem  item  =  new  TimeSeriesDataItem(period,  value);  [BUGGY]    item.setValue(value);  notify  =  true;  [BUGGY]  add(item,  notify);  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  Number  value  boolean  notify  [VARIABLES]  boolean  notify  Number  value  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	603	603	1	add	    item.setValue(value);  notify  =  true;		compilable	  [FE]  IllegalArgumentException	123	1
2044	[BUG]  [BUGGY]    item.setValue(value);  notify  =  true;  [FE]  IllegalArgumentException  [CONTEXT]  public  void  add(RegularTimePeriod  period,  Number  value,  boolean  notify)  {  TimeSeriesDataItem  item  =  new  TimeSeriesDataItem(period,  value);  [BUGGY]    item.setValue(value);  notify  =  true;  [BUGGY]  add(item,  notify);  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  Number  value  boolean  notify  [VARIABLES]  boolean  notify  Number  value  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	603	603	1	replace	    item.setValue(value);  notify  =  true;		compilable	  [FE]  IllegalArgumentException	123	1
2066	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]  public  void  removeAgedItems(boolean  notify)  {    [BUGGY]  if(getItemCount()  >  0)  {  [BUGGY]  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())  >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	740	740	1	add	if(getItemCount()  >  0)  {	if  (getItemCount()  >  1)  {  	compilable	  [FE]  IllegalArgumentException	126	1
2067	[BUG]  [BUGGY]  if(getItemCount()  >  0)  {  [FE]  IllegalArgumentException  [CONTEXT]  public  void  removeAgedItems(boolean  notify)  {    [BUGGY]  if(getItemCount()  >  0)  {  [BUGGY]  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())  >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	740	740	1	replace	if(getItemCount()  >  0)  {	if  (getItemCount()  >  1)  {  	compilable	  [FE]  IllegalArgumentException	126	1
2090	[BUG]  [BUGGY]  int  startIndex  =  findIndex(start);  [CE]  cannot  find  symbol  [CONTEXT]  throw  new  IllegalArgumentException( "Null  'start'  argument. ");  }  if  (end  ==  null)  {  throw  new  IllegalArgumentException( "Null  'end'  argument. ");  }  if  (start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException(   "Requires  start  on  or  before  end. ");  }  boolean  emptyRange  =  false;  [BUGGY]  int  startIndex  =  findIndex(start);  [BUGGY]  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	932	932	1	replace	int  startIndex  =  findIndex(start);	int  startIndex  =  getIndex(start);  	non-compiled	[CE]  cannot  find  symbol	11	None
2091	[BUG]  [BUGGY]    [CE]  cannot  find  symbol  startIndex  [CONTEXT]  throw  new  IllegalArgumentException( "Null  'start'  argument. ");  }  if  (end  ==  null)  {  throw  new  IllegalArgumentException( "Null  'end'  argument. ");  }  if  (start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException(   "Requires  start  on  or  before  end. ");  }  boolean  emptyRange  =  false;  [BUGGY]    [BUGGY]  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	932	932	1	replace	  	int  startIndex  =  getIndex(start);  	non-compiled	[CE]  cannot  find  symbol  startIndex	11	None
2113	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]  public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  [BUGGY]    this.maximumItemCount  =  Integer.MAX_VALUE;  [BUGGY]  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	180	180	1	add	    this.maximumItemCount  =  Integer.MAX_VALUE;		compilable	  [FE]  IllegalArgumentException	74	1
2114	[BUG]  [BUGGY]    this.maximumItemCount  =  Integer.MAX_VALUE;  [FE]  IllegalArgumentException  [CONTEXT]  public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  [BUGGY]    this.maximumItemCount  =  Integer.MAX_VALUE;  [BUGGY]  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	180	180	1	replace	    this.maximumItemCount  =  Integer.MAX_VALUE;		compilable	  [FE]  IllegalArgumentException	74	1
2114	[BUG]  [BUGGY]    this.maximumItemCount  =  Long.MAX_VALUE;  [CE]  possible  loss  of  precision  [CONTEXT]  public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  [BUGGY]    this.maximumItemCount  =  Long.MAX_VALUE;  [BUGGY]  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	180	180	1	replace	    this.maximumItemCount  =  Long.MAX_VALUE;		non-compiled	[CE]  possible  loss  of  precision	74	None
2139	[BUG]  [BUGGY]    while(item!=  null  &&  item.isLocal())  {  add(item);  [CE]  illegal  start  of  expression  [CONTEXT]  public  void  add(RegularTimePeriod  period,  Number  value,  boolean  notify)  {  TimeSeriesDataItem  item  =  new  TimeSeriesDataItem(period,  value);  add(item,  notify);  [BUGGY]    while(item!=  null  &&  item.isLocal())  {  add(item);  [BUGGY]  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  Number  value  boolean  notify  [VARIABLES]  boolean  notify  Number  value  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	604	604	1	replace	    while(item!=  null  &&  item.isLocal())  {  add(item);		non-compiled	[CE]  illegal  start  of  expression	125	None
2161	[BUG]  [BUGGY]  return  new  TimeSeries(name.getPeriod(),  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION);  [CE]  illegal  start  of  expression  [CONTEXT]  public  TimeSeries(Comparable  name)  {  this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  Day.class);  [BUGGY]  return  new  TimeSeries(name.getPeriod(),  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION);  [BUGGY]    [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Comparable)  Comparable  name  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.4082482904638631	144	144	1	replace	return  new  TimeSeries(name.getPeriod(),  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION);	}  	non-compiled	[CE]  illegal  start  of  expression	39	None
2187	[BUG]  [BUGGY]    while(last  >  getPeriodType())  {  this.data.add(last);  [CE]  illegal  start  of  expression  [CONTEXT]  if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  [BUGGY]    while(last  >  getPeriodType())  {  this.data.add(last);  [BUGGY]  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  added  =  true;  }  else  {  int  index  =  Collections.binarySearch(this.data,  item);  if  (index  <  0)  {  this.data.add(-index  -  1,  item);  added  =  true;  }  else  {  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	514	514	1	replace	    while(last  >  getPeriodType())  {  this.data.add(last);		non-compiled	[CE]  illegal  start  of  expression	100	None
2209	[BUG]  [BUGGY]    java.util.ArrayList();  this.data  =  new  java.util.ArrayList();  [CE]  no  suitable  constructor  found  for  Series()  [CONTEXT]  public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  [BUGGY]    java.util.ArrayList();  this.data  =  new  java.util.ArrayList();  [BUGGY]  super(name);  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	174	174	1	replace	    java.util.ArrayList();  this.data  =  new  java.util.ArrayList();		non-compiled	[CE]  no  suitable  constructor  found  for  Series()	62	None
2210	[BUG]  [BUGGY]    this(name,  domain,  range,  timePeriodClass);  [CE]  call  to  super  must  be  first  statement  in  constructor  [CONTEXT]  public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  [BUGGY]    this(name,  domain,  range,  timePeriodClass);  [BUGGY]  super(name);  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	174	174	1	replace	    this(name,  domain,  range,  timePeriodClass);		non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	62	None
2211	[BUG]  [BUGGY]    this(name,  domain,  range,  timePeriodClass,  null);  [CE]  no  suitable  constructor  found  for  TimeSeries(Comparable,String,String,Class,<null>)  [CONTEXT]  public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  [BUGGY]    this(name,  domain,  range,  timePeriodClass,  null);  [BUGGY]  super(name);  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	174	174	1	replace	    this(name,  domain,  range,  timePeriodClass,  null);		non-compiled	[CE]  no  suitable  constructor  found  for  TimeSeries(Comparable,String,String,Class,<null>)	62	None
2233	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]  throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  [BUGGY]  removeAgedItems(true);//  remove  old  items  if  necessary,  but  //  don't  notify  anyone,  because  that  //  happens  next  anyway...  [BUGGY]    if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	542	544	1	add	removeAgedItems(true);//  remove  old  items  if  necessary,  but  //  don't  notify  anyone,  because  that  //  happens  next  anyway...	removeAgedItems(false);//  remove  old  items  if  necessary,  but      //  don't  notify  anyone,  because  that          //  happens  next  anyway...  	compilable	  [FE]  IllegalArgumentException	109	1
2234	[BUG]  [BUGGY]  removeAgedItems(true);//  remove  old  items  if  necessary,  but  //  don't  notify  anyone,  because  that  //  happens  next  anyway...  [FE]  IllegalArgumentException  [CONTEXT]  throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  [BUGGY]  removeAgedItems(true);//  remove  old  items  if  necessary,  but  //  don't  notify  anyone,  because  that  //  happens  next  anyway...  [BUGGY]    if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	542	544	1	replace	removeAgedItems(true);//  remove  old  items  if  necessary,  but  //  don't  notify  anyone,  because  that  //  happens  next  anyway...	removeAgedItems(false);//  remove  old  items  if  necessary,  but      //  don't  notify  anyone,  because  that          //  happens  next  anyway...  	compilable	  [FE]  IllegalArgumentException	109	1
2258	[BUG]  [BUGGY]  add(item,  notify,  period);  [CE]  no  suitable  method  found  for  add(TimeSeriesDataItem,boolean,RegularTimePeriod)  [CONTEXT]  public  void  add(RegularTimePeriod  period,  Number  value,  boolean  notify)  {  TimeSeriesDataItem  item  =  new  TimeSeriesDataItem(period,  value);  [BUGGY]  add(item,  notify,  period);  [BUGGY]  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  Number  value  boolean  notify  [VARIABLES]  boolean  notify  Number  value  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	603	603	1	replace	add(item,  notify,  period);	add(item,  notify);  	non-compiled	[CE]  no  suitable  method  found  for  add(TimeSeriesDataItem,boolean,RegularTimePeriod)	122	None
2282	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  emptyRange  =  true;  }  [BUGGY]  if(!emptyRange)  {  [BUGGY]  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  }  else  {  return  createCopy(startIndex,  endIndex);  }  }  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	947	947	1	add	if(!emptyRange)  {	if  (emptyRange)  {  	compilable	  [FE]  IllegalArgumentException	29	1
2283	[BUG]  [BUGGY]  if(!emptyRange)  {  [FE]  IllegalArgumentException  [CONTEXT]  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  emptyRange  =  true;  }  [BUGGY]  if(!emptyRange)  {  [BUGGY]  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  }  else  {  return  createCopy(startIndex,  endIndex);  }  }  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	947	947	1	replace	if(!emptyRange)  {	if  (emptyRange)  {  	compilable	  [FE]  IllegalArgumentException	29	1
2305	[BUG]  [BUGGY]    item.addChangeListener(this);  [CE]  cannot  find  symbol  [CONTEXT]  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  removeAgedItems(false);//  remove  old  items  if  necessary,  but    if  (notify)  {  [BUGGY]    item.addChangeListener(this);  [BUGGY]  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	546	546	1	replace	    item.addChangeListener(this);		non-compiled	[CE]  cannot  find  symbol	114	None
2329	[BUG]  [BUGGY]    Class  timePeriodClass  =  item.getTimePeriodClass();  [CE]  cannot  find  symbol  [CONTEXT]  public  void  add(TimeSeriesDataItem  item,  boolean  notify)  {  if  (item  ==  null)  {  throw  new  IllegalArgumentException( "Null  'item'  argument. ");  }  [BUGGY]    Class  timePeriodClass  =  item.getTimePeriodClass();  [BUGGY]  if  (!item.getPeriod().getClass().equals(this.timePeriodClass))  {  StringBuffer  b  =  new  StringBuffer();  b.append( "You  are  trying  to  add  data  where  the  time  period  class   ");  b.append( "is   ");  b.append(item.getPeriod().getClass().getName());  b.append( ",  but  the  TimeSeries  is  expecting  an  instance  of   ");  b.append(this.timePeriodClass.getName());  b.append( ". ");  throw  new  SeriesException(b.toString());  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	494	494	1	replace	    Class  timePeriodClass  =  item.getTimePeriodClass();		non-compiled	[CE]  cannot  find  symbol	86	None
2330	[BUG]  [BUGGY]    Class  this.timePeriodClass  =  item.getTimePeriodClass();  [CE]  not  a  statement  [CONTEXT]  public  void  add(TimeSeriesDataItem  item,  boolean  notify)  {  if  (item  ==  null)  {  throw  new  IllegalArgumentException( "Null  'item'  argument. ");  }  [BUGGY]    Class  this.timePeriodClass  =  item.getTimePeriodClass();  [BUGGY]  if  (!item.getPeriod().getClass().equals(this.timePeriodClass))  {  StringBuffer  b  =  new  StringBuffer();  b.append( "You  are  trying  to  add  data  where  the  time  period  class   ");  b.append( "is   ");  b.append(item.getPeriod().getClass().getName());  b.append( ",  but  the  TimeSeries  is  expecting  an  instance  of   ");  b.append(this.timePeriodClass.getName());  b.append( ". ");  throw  new  SeriesException(b.toString());  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	494	494	1	replace	    Class  this.timePeriodClass  =  item.getTimePeriodClass();		non-compiled	[CE]  not  a  statement	86	None
2331	[BUG]  [BUGGY]    Class  timePeriodClass  =  item.getTimePeriod();  [CE]  cannot  find  symbol  [CONTEXT]  public  void  add(TimeSeriesDataItem  item,  boolean  notify)  {  if  (item  ==  null)  {  throw  new  IllegalArgumentException( "Null  'item'  argument. ");  }  [BUGGY]    Class  timePeriodClass  =  item.getTimePeriod();  [BUGGY]  if  (!item.getPeriod().getClass().equals(this.timePeriodClass))  {  StringBuffer  b  =  new  StringBuffer();  b.append( "You  are  trying  to  add  data  where  the  time  period  class   ");  b.append( "is   ");  b.append(item.getPeriod().getClass().getName());  b.append( ",  but  the  TimeSeries  is  expecting  an  instance  of   ");  b.append(this.timePeriodClass.getName());  b.append( ". ");  throw  new  SeriesException(b.toString());  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	494	494	1	replace	    Class  timePeriodClass  =  item.getTimePeriod();		non-compiled	[CE]  cannot  find  symbol	86	None
2377	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  removeAgedItems(false);//  remove  old  items  if  necessary,  but    [BUGGY]    fireSeriesChanged();  [BUGGY]  if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	545	545	1	add	    fireSeriesChanged();		compilable	  [FE]  IllegalArgumentException	112	1
2378	[BUG]  [BUGGY]    fireSeriesChanged();  [FE]  IllegalArgumentException  [CONTEXT]  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  removeAgedItems(false);//  remove  old  items  if  necessary,  but    [BUGGY]    fireSeriesChanged();  [BUGGY]  if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	545	545	1	replace	    fireSeriesChanged();		compilable	  [FE]  IllegalArgumentException	112	1
2378	[BUG]  [BUGGY]    item.removeChangeListener(this);  [CE]  cannot  find  symbol  [CONTEXT]  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  removeAgedItems(false);//  remove  old  items  if  necessary,  but    [BUGGY]    item.removeChangeListener(this);  [BUGGY]  if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	545	545	1	replace	    item.removeChangeListener(this);		non-compiled	[CE]  cannot  find  symbol	112	None
2402	[BUG]  [BUGGY]  return  createCopy(startIndex,  endIndex,  data.length);  [CE]  cannot  find  symbol  length  [CONTEXT]  if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  }  else  {  [BUGGY]  return  createCopy(startIndex,  endIndex,  data.length);  [BUGGY]  }  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	953	953	1	replace	return  createCopy(startIndex,  endIndex,  data.length);	return  createCopy(startIndex,  endIndex);  	non-compiled	[CE]  cannot  find  symbol  length	31	None
2425	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  [BUGGY]    endIndex  =  getIndex(end);  [BUGGY]  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period    endIndex  =  endIndex  -  1;  //  so  this  is  last  item  BEFORE  end    }  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  emptyRange  =  true;  }  if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  }  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	941	943	1	add	    endIndex  =  getIndex(end);		compilable	  [FE]  IllegalArgumentException	24	1
2426	[BUG]  [BUGGY]    endIndex  =  getIndex(end);  [FE]  IllegalArgumentException  [CONTEXT]  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  [BUGGY]    endIndex  =  getIndex(end);  [BUGGY]  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period    endIndex  =  endIndex  -  1;  //  so  this  is  last  item  BEFORE  end    }  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  emptyRange  =  true;  }  if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  }  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	941	943	1	replace	    endIndex  =  getIndex(end);		compilable	  [FE]  IllegalArgumentException	24	1
2473	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]  public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;  [BUGGY]    this.domain  =  domain;  [BUGGY]  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	176	176	1	add	    this.domain  =  domain;		compilable	  [FE]  IllegalArgumentException	66	1
2474	[BUG]  [BUGGY]    this.domain  =  domain;  [FE]  IllegalArgumentException  [CONTEXT]  public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;  [BUGGY]    this.domain  =  domain;  [BUGGY]  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	176	176	1	replace	    this.domain  =  domain;		compilable	  [FE]  IllegalArgumentException	66	1
2475	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]  public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;  [BUGGY]    this.range  =  domain;  [BUGGY]  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	176	176	1	add	    this.range  =  domain;		compilable	  [FE]  IllegalArgumentException	66	1
2476	[BUG]  [BUGGY]    this.range  =  domain;  [FE]  IllegalArgumentException  [CONTEXT]  public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;  [BUGGY]    this.range  =  domain;  [BUGGY]  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	176	176	1	replace	    this.range  =  domain;		compilable	  [FE]  IllegalArgumentException	66	1
2497	[BUG]  [BUGGY]  fireSeriesChanged();  [CE]  illegal  start  of  expression  [CONTEXT]  public  void  add(RegularTimePeriod  period,  double  value)  {  add(period,  value,  true);  [BUGGY]  fireSeriesChanged();  [BUGGY]    [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  double  value  [VARIABLES]  boolean  double  value  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.2581988897471611	562	562	1	replace	fireSeriesChanged();	}  	non-compiled	[CE]  illegal  start  of  expression	49	None
2498	[BUG]  [BUGGY]  this.data.add(period,  value);  [CE]  illegal  start  of  expression  [CONTEXT]  public  void  add(RegularTimePeriod  period,  double  value)  {  add(period,  value,  true);  [BUGGY]  this.data.add(period,  value);  [BUGGY]    [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  double  value  [VARIABLES]  boolean  double  value  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.2581988897471611	562	562	1	replace	this.data.add(period,  value);	}  	non-compiled	[CE]  illegal  start  of  expression	49	None
2499	[BUG]  [BUGGY]    [CE]  illegal  start  of  expression  [CONTEXT]  public  void  add(RegularTimePeriod  period,  double  value)  {  add(period,  value,  true);  [BUGGY]    [BUGGY]    [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  double  value  [VARIABLES]  boolean  double  value  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.2581988897471611	562	562	1	replace	  	}  	non-compiled	[CE]  illegal  start  of  expression	49	None
2521	[BUG]  [BUGGY]    while((  latest  -  getTimePeriod(0).getSerialIndex())>  this.maximumItemAge)  {  this.data.remove(0);  [CE]  illegal  start  of  expression  [CONTEXT]    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())  >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  [BUGGY]    while((  latest  -  getTimePeriod(0).getSerialIndex())>  this.maximumItemAge)  {  this.data.remove(0);  [BUGGY]  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	748	748	1	replace	    while((  latest  -  getTimePeriod(0).getSerialIndex())>  this.maximumItemAge)  {  this.data.remove(0);		non-compiled	[CE]  illegal  start  of  expression	135	None
2522	[BUG]  [BUGGY]    while((  latest  -  getTimePeriod(0).getSerialIndex())>  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  [CE]  illegal  start  of  expression  [CONTEXT]    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())  >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  [BUGGY]    while((  latest  -  getTimePeriod(0).getSerialIndex())>  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  [BUGGY]  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	748	748	1	replace	    while((  latest  -  getTimePeriod(0).getSerialIndex())>  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;		non-compiled	[CE]  illegal  start  of  expression	135	None
2523	[BUG]  [BUGGY]    while((  latest  -  getTimePeriod(0).getSerialIndex()  >  this.maximumItemAge)>  this.data.size())  {  this.data.remove(0);  [CE]  illegal  start  of  expression  [CONTEXT]    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())  >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  [BUGGY]    while((  latest  -  getTimePeriod(0).getSerialIndex()  >  this.maximumItemAge)>  this.data.size())  {  this.data.remove(0);  [BUGGY]  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	748	748	1	replace	    while((  latest  -  getTimePeriod(0).getSerialIndex()  >  this.maximumItemAge)>  this.data.size())  {  this.data.remove(0);		non-compiled	[CE]  illegal  start  of  expression	135	None
2546	[BUG]  [BUGGY]    this.data.add(period,  value);  [CE]  no  suitable  method  found  for  add(RegularTimePeriod,double)  [CONTEXT]  public  void  add(RegularTimePeriod  period,  double  value)  {    [BUGGY]    this.data.add(period,  value);  [BUGGY]  add(period,  value,  true);  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  double  value  [VARIABLES]  boolean  double  value  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.2581988897471611	561	561	1	replace	    this.data.add(period,  value);		non-compiled	[CE]  no  suitable  method  found  for  add(RegularTimePeriod,double)	48	None
2569	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]  public  void  add(RegularTimePeriod  period,  Number  value,  boolean  notify)  {    [BUGGY]    fireSeriesChanged();  [BUGGY]  TimeSeriesDataItem  item  =  new  TimeSeriesDataItem(period,  value);  add(item,  notify);  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  Number  value  boolean  notify  [VARIABLES]  boolean  notify  Number  value  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	602	602	1	add	    fireSeriesChanged();		compilable	  [FE]  IllegalArgumentException	121	1
2570	[BUG]  [BUGGY]    fireSeriesChanged();  [FE]  IllegalArgumentException  [CONTEXT]  public  void  add(RegularTimePeriod  period,  Number  value,  boolean  notify)  {    [BUGGY]    fireSeriesChanged();  [BUGGY]  TimeSeriesDataItem  item  =  new  TimeSeriesDataItem(period,  value);  add(item,  notify);  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  Number  value  boolean  notify  [VARIABLES]  boolean  notify  Number  value  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	602	602	1	replace	    fireSeriesChanged();		compilable	  [FE]  IllegalArgumentException	121	1
2571	[BUG]  [BUGGY]    this.data.add(period,  value,  notify);  [CE]  no  suitable  method  found  for  add(RegularTimePeriod,Number,boolean)  [CONTEXT]  public  void  add(RegularTimePeriod  period,  Number  value,  boolean  notify)  {    [BUGGY]    this.data.add(period,  value,  notify);  [BUGGY]  TimeSeriesDataItem  item  =  new  TimeSeriesDataItem(period,  value);  add(item,  notify);  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  Number  value  boolean  notify  [VARIABLES]  boolean  notify  Number  value  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	602	602	1	replace	    this.data.add(period,  value,  notify);		non-compiled	[CE]  no  suitable  method  found  for  add(RegularTimePeriod,Number,boolean)	121	None
2593	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]  public  RegularTimePeriod  getTimePeriod(int  index)  {  [BUGGY]    getDataItem(index).getPeriod();  [BUGGY]  return  getDataItem(index).getPeriod();  }  [CLASS]  TimeSeries  [METHOD]  getTimePeriod  [RETURN_TYPE]  RegularTimePeriod  int  index  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  long  maximumItemAge  periods  serialVersionUID  int  count  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	372	372	1	add	    getDataItem(index).getPeriod();		compilable	  [FE]  IllegalArgumentException	82	1
2594	[BUG]  [BUGGY]    getDataItem(index).getPeriod();  [FE]  IllegalArgumentException  [CONTEXT]  public  RegularTimePeriod  getTimePeriod(int  index)  {  [BUGGY]    getDataItem(index).getPeriod();  [BUGGY]  return  getDataItem(index).getPeriod();  }  [CLASS]  TimeSeries  [METHOD]  getTimePeriod  [RETURN_TYPE]  RegularTimePeriod  int  index  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  long  maximumItemAge  periods  serialVersionUID  int  count  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	372	372	1	replace	    getDataItem(index).getPeriod();		compilable	  [FE]  IllegalArgumentException	82	1
2594	[BUG]  [BUGGY]    checkPeriod(index);  [CE]  cannot  find  symbol  [CONTEXT]  public  RegularTimePeriod  getTimePeriod(int  index)  {  [BUGGY]    checkPeriod(index);  [BUGGY]  return  getDataItem(index).getPeriod();  }  [CLASS]  TimeSeries  [METHOD]  getTimePeriod  [RETURN_TYPE]  RegularTimePeriod  int  index  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  long  maximumItemAge  periods  serialVersionUID  int  count  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	372	372	1	replace	    checkPeriod(index);		non-compiled	[CE]  cannot  find  symbol	82	None
2595	[BUG]  [BUGGY]    this.data.add(index);  [CE]  no  suitable  method  found  for  add(int)  [CONTEXT]  public  RegularTimePeriod  getTimePeriod(int  index)  {  [BUGGY]    this.data.add(index);  [BUGGY]  return  getDataItem(index).getPeriod();  }  [CLASS]  TimeSeries  [METHOD]  getTimePeriod  [RETURN_TYPE]  RegularTimePeriod  int  index  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  long  maximumItemAge  periods  serialVersionUID  int  count  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	372	372	1	replace	    this.data.add(index);		non-compiled	[CE]  no  suitable  method  found  for  add(int)	82	None
2619	[BUG]  [BUGGY]    [CE]  <identifier>  expected  [CONTEXT]  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException( "Requires  start  >=  0. ");  }  [BUGGY]    [BUGGY]  throw  new  IllegalArgumentException( "Requires  start  <=  end. ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	882	882	1	replace	  	if  (end  <  start)  {  	non-compiled	[CE]  <identifier>  expected	35	None
2642	[BUG]  [BUGGY]  fireSeriesChanged(item);  [CE]  method  fireSeriesChanged  in  class  Series  cannot  be  applied  to  given  types;  [CONTEXT]  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  removeAgedItems(false);//  remove  old  items  if  necessary,  but    if  (notify)  {  [BUGGY]  fireSeriesChanged(item);  [BUGGY]  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	546	546	1	replace	fireSeriesChanged(item);	fireSeriesChanged();  	non-compiled	[CE]  method  fireSeriesChanged  in  class  Series  cannot  be  applied  to  given  types;	113	None
2666	[BUG]  [BUGGY]  return  Collections.binarySearch(this.data,  dummy),  period);  [CE]  ';'  expected  [CONTEXT]  public  int  getIndex(RegularTimePeriod  period)  {  if  (period  ==  null)  {  throw  new  IllegalArgumentException( "Null  'period'  argument. ");  }  TimeSeriesDataItem  dummy  =  new  TimeSeriesDataItem(  period,  Integer.MIN_VALUE);  [BUGGY]  return  Collections.binarySearch(this.data,  dummy),  period);  [BUGGY]  }  [CLASS]  TimeSeries  [METHOD]  getIndex  [RETURN_TYPE]  int  RegularTimePeriod  period  [VARIABLES]  boolean  TimeSeriesDataItem  dummy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.3333333333333333	435	435	1	replace	return  Collections.binarySearch(this.data,  dummy),  period);	return  Collections.binarySearch(this.data,  dummy);  	non-compiled	[CE]  ';'  expected	45	None
2667	[BUG]  [BUGGY]    [CE]  missing  return  statement  [CONTEXT]  public  int  getIndex(RegularTimePeriod  period)  {  if  (period  ==  null)  {  throw  new  IllegalArgumentException( "Null  'period'  argument. ");  }  TimeSeriesDataItem  dummy  =  new  TimeSeriesDataItem(  period,  Integer.MIN_VALUE);  [BUGGY]    [BUGGY]  }  [CLASS]  TimeSeries  [METHOD]  getIndex  [RETURN_TYPE]  int  RegularTimePeriod  period  [VARIABLES]  boolean  TimeSeriesDataItem  dummy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.3333333333333333	435	435	1	replace	  	return  Collections.binarySearch(this.data,  dummy);  	non-compiled	[CE]  missing  return  statement	45	None
2689	[BUG]  [BUGGY]  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;  //  so  this  is  last  item  BEFORE  end  [CE]  illegal  start  of  expression  [CONTEXT]  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  [BUGGY]  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;  //  so  this  is  last  item  BEFORE  end  [BUGGY]  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  emptyRange  =  true;  }  if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  }  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	941	943	1	replace	endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;  //  so  this  is  last  item  BEFORE  end	endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;  //  so  this  is  last  item  BEFORE  end  }  	non-compiled	[CE]  illegal  start  of  expression	23	None
2690	[BUG]  [BUGGY]  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;  //  so  this  is  last  item  BEFORE  end  &  [CE]  illegal  start  of  expression  [CONTEXT]  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  [BUGGY]  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;  //  so  this  is  last  item  BEFORE  end  &  [BUGGY]  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  emptyRange  =  true;  }  if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  }  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	941	943	1	replace	endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;  //  so  this  is  last  item  BEFORE  end  &	endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;  //  so  this  is  last  item  BEFORE  end  }  	non-compiled	[CE]  illegal  start  of  expression	23	None
2737	[BUG]  [BUGGY]    while(period!=  null)  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [CONTEXT]  public  int  getIndex(RegularTimePeriod  period)  {  if  (period  ==  null)  {  throw  new  IllegalArgumentException( "Null  'period'  argument. ");  }  [BUGGY]    while(period!=  null)  {  throw  new  IllegalArgumentException( " ");  [BUGGY]  TimeSeriesDataItem  dummy  =  new  TimeSeriesDataItem(    period,  Integer.MIN_VALUE);  period,  Integer.MIN_VALUE);  return  Collections.binarySearch(this.data,  dummy);  }  [CLASS]  TimeSeries  [METHOD]  getIndex  [RETURN_TYPE]  int  RegularTimePeriod  period  [VARIABLES]  boolean  TimeSeriesDataItem  dummy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.3333333333333333	433	434	1	replace	    while(period!=  null)  {  throw  new  IllegalArgumentException( " ");		non-compiled	[CE]  illegal  start  of  expression	44	None
2738	[BUG]  [BUGGY]    TimeSeriesDataItem  dummy  =(TimeSeriesDataItem)this.data.get(period);  [CE]  method  get  in  interface  List  cannot  be  applied  to  given  types;  [CONTEXT]  public  int  getIndex(RegularTimePeriod  period)  {  if  (period  ==  null)  {  throw  new  IllegalArgumentException( "Null  'period'  argument. ");  }  [BUGGY]    TimeSeriesDataItem  dummy  =(TimeSeriesDataItem)this.data.get(period);  [BUGGY]  TimeSeriesDataItem  dummy  =  new  TimeSeriesDataItem(    period,  Integer.MIN_VALUE);  period,  Integer.MIN_VALUE);  return  Collections.binarySearch(this.data,  dummy);  }  [CLASS]  TimeSeries  [METHOD]  getIndex  [RETURN_TYPE]  int  RegularTimePeriod  period  [VARIABLES]  boolean  TimeSeriesDataItem  dummy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.3333333333333333	433	434	1	replace	    TimeSeriesDataItem  dummy  =(TimeSeriesDataItem)this.data.get(period);		non-compiled	[CE]  method  get  in  interface  List  cannot  be  applied  to  given  types;	44	None
2739	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]  public  int  getIndex(RegularTimePeriod  period)  {  if  (period  ==  null)  {  throw  new  IllegalArgumentException( "Null  'period'  argument. ");  }  [BUGGY]    if(period  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  TimeSeriesDataItem  dummy  =  new  TimeSeriesDataItem(    period,  Integer.MIN_VALUE);  period,  Integer.MIN_VALUE);  return  Collections.binarySearch(this.data,  dummy);  }  [CLASS]  TimeSeries  [METHOD]  getIndex  [RETURN_TYPE]  int  RegularTimePeriod  period  [VARIABLES]  boolean  TimeSeriesDataItem  dummy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.3333333333333333	433	434	1	add	    if(period  ==  null)  {  throw  new  IllegalArgumentException( " ");  }		compilable	  [FE]  IllegalArgumentException	44	1
2740	[BUG]  [BUGGY]    if(period  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [CONTEXT]  public  int  getIndex(RegularTimePeriod  period)  {  if  (period  ==  null)  {  throw  new  IllegalArgumentException( "Null  'period'  argument. ");  }  [BUGGY]    if(period  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  TimeSeriesDataItem  dummy  =  new  TimeSeriesDataItem(    period,  Integer.MIN_VALUE);  period,  Integer.MIN_VALUE);  return  Collections.binarySearch(this.data,  dummy);  }  [CLASS]  TimeSeries  [METHOD]  getIndex  [RETURN_TYPE]  int  RegularTimePeriod  period  [VARIABLES]  boolean  TimeSeriesDataItem  dummy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.3333333333333333	433	434	1	replace	    if(period  ==  null)  {  throw  new  IllegalArgumentException( " ");  }		compilable	  [FE]  IllegalArgumentException	44	1
2762	[BUG]  [BUGGY]    if(this.data!=  null)  {  if(startIndex  ==  0)  {  emptyRange  =  true;  }  [CE]  illegal  start  of  expression  [CONTEXT]  throw  new  IllegalArgumentException( "Null  'end'  argument. ");  }  if  (start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException(   "Requires  start  on  or  before  end. ");  }  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  [BUGGY]    if(this.data!=  null)  {  if(startIndex  ==  0)  {  emptyRange  =  true;  }  [BUGGY]  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  emptyRange  =  true;  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	935	935	1	replace	    if(this.data!=  null)  {  if(startIndex  ==  0)  {  emptyRange  =  true;  }		non-compiled	[CE]  illegal  start  of  expression	18	None
2763	[BUG]  [BUGGY]    while(this.data!=  null)  {  this.data  =  new  ArrayList  <  TimePeriod>();  [CE]  generics  are  not  supported  in  -source  1.4  [CONTEXT]  throw  new  IllegalArgumentException( "Null  'end'  argument. ");  }  if  (start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException(   "Requires  start  on  or  before  end. ");  }  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  [BUGGY]    while(this.data!=  null)  {  this.data  =  new  ArrayList  <  TimePeriod>();  [BUGGY]  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  emptyRange  =  true;  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	935	935	1	replace	    while(this.data!=  null)  {  this.data  =  new  ArrayList  <  TimePeriod>();		non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	18	None
2787	[BUG]  [BUGGY]    data.add(period,  value);  [CE]  no  suitable  method  found  for  add(RegularTimePeriod,double)  [CONTEXT]  public  void  add(RegularTimePeriod  period,  double  value)  {  add(period,  value,  true);  [BUGGY]    data.add(period,  value);  [BUGGY]  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  double  value  [VARIABLES]  boolean  double  value  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.2581988897471611	562	562	1	replace	    data.add(period,  value);		non-compiled	[CE]  no  suitable  method  found  for  add(RegularTimePeriod,double)	50	None
2809	[BUG]  [BUGGY]    this.maximumItemCount  =  new  java.util.ArrayList();  [CE]  incompatible  types  [CONTEXT]  public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;  this.range  =  range;  [BUGGY]    this.maximumItemCount  =  new  java.util.ArrayList();  [BUGGY]  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	177	177	1	replace	    this.maximumItemCount  =  new  java.util.ArrayList();		non-compiled	[CE]  incompatible  types	68	None
2810	[BUG]  [BUGGY]    this.maximumItemAge  =  new  java.util.ArrayList();  [CE]  incompatible  types  [CONTEXT]  public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;  this.range  =  range;  [BUGGY]    this.maximumItemAge  =  new  java.util.ArrayList();  [BUGGY]  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	177	177	1	replace	    this.maximumItemAge  =  new  java.util.ArrayList();		non-compiled	[CE]  incompatible  types	68	None
2811	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]  public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;  this.range  =  range;  [BUGGY]    this.maximumItemCount  =  0;  [BUGGY]  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	177	177	1	add	    this.maximumItemCount  =  0;		compilable	  [FE]  IllegalArgumentException	68	1
2812	[BUG]  [BUGGY]    this.maximumItemCount  =  0;  [FE]  IllegalArgumentException  [CONTEXT]  public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;  this.range  =  range;  [BUGGY]    this.maximumItemCount  =  0;  [BUGGY]  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	177	177	1	replace	    this.maximumItemCount  =  0;		compilable	  [FE]  IllegalArgumentException	68	1
2833	[BUG]  [BUGGY]  TimeSeriesDataItem  item  =  new  TimeSeriesDataItem(period,  value,  notify);  [CE]  no  suitable  constructor  found  for  TimeSeriesDataItem(RegularTimePeriod,Number,boolean)  [CONTEXT]  public  void  add(RegularTimePeriod  period,  Number  value,  boolean  notify)  {    [BUGGY]  TimeSeriesDataItem  item  =  new  TimeSeriesDataItem(period,  value,  notify);  [BUGGY]  add(item,  notify);  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  Number  value  boolean  notify  [VARIABLES]  boolean  notify  Number  value  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	602	602	1	replace	TimeSeriesDataItem  item  =  new  TimeSeriesDataItem(period,  value,  notify);	TimeSeriesDataItem  item  =  new  TimeSeriesDataItem(period,  value);  	non-compiled	[CE]  no  suitable  constructor  found  for  TimeSeriesDataItem(RegularTimePeriod,Number,boolean)	120	None
2858	[BUG]  [BUGGY]  this.timePeriodClass  =  new  java.util.ArrayList();  [CE]  incompatible  types  [CONTEXT]  public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;  this.range  =  range;  [BUGGY]  this.timePeriodClass  =  new  java.util.ArrayList();  [BUGGY]  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	177	177	1	replace	this.timePeriodClass  =  new  java.util.ArrayList();	this.timePeriodClass  =  timePeriodClass;  	non-compiled	[CE]  incompatible  types	67	None
2882	[BUG]  [BUGGY]    double  value  =  Double.valueOf(period.getValue(),  notify);  [CE]  variable  value  is  already  defined  in  method  add(RegularTimePeriod,double,boolean)  [CONTEXT]  public  void  add(RegularTimePeriod  period,  double  value,  boolean  notify)  {    [BUGGY]    double  value  =  Double.valueOf(period.getValue(),  notify);  [BUGGY]  TimeSeriesDataItem  item  =  new  TimeSeriesDataItem(period,  value);  add(item,  notify);  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  double  value  boolean  notify  [VARIABLES]  boolean  notify  double  value  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.2581988897471611	574	574	1	replace	    double  value  =  Double.valueOf(period.getValue(),  notify);		non-compiled	[CE]  variable  value  is  already  defined  in  method  add(RegularTimePeriod,double,boolean)	52	None
2883	[BUG]  [BUGGY]    double  value  =  Double.valueOf(period.getValue());  [CE]  variable  value  is  already  defined  in  method  add(RegularTimePeriod,double,boolean)  [CONTEXT]  public  void  add(RegularTimePeriod  period,  double  value,  boolean  notify)  {    [BUGGY]    double  value  =  Double.valueOf(period.getValue());  [BUGGY]  TimeSeriesDataItem  item  =  new  TimeSeriesDataItem(period,  value);  add(item,  notify);  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  double  value  boolean  notify  [VARIABLES]  boolean  notify  double  value  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.2581988897471611	574	574	1	replace	    double  value  =  Double.valueOf(period.getValue());		non-compiled	[CE]  variable  value  is  already  defined  in  method  add(RegularTimePeriod,double,boolean)	52	None
2907	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]  b.append(item.getPeriod().toString());  b.append( "  but  the  series  already  contains  an  observation ");  b.append( "  for  that  time  period.  Duplicates  are  not   ");  b.append( "permitted.Try  using  the  addOrUpdate()  method. ");  throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {    [BUGGY]    fireSeriesChanged();  [BUGGY]  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  removeAgedItems(false);//  remove  old  items  if  necessary,  but    if  (notify)  {  fireSeriesChanged();  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	538	538	1	add	    fireSeriesChanged();		compilable	  [FE]  IllegalArgumentException	108	1
2908	[BUG]  [BUGGY]    fireSeriesChanged();  [FE]  IllegalArgumentException  [CONTEXT]  b.append(item.getPeriod().toString());  b.append( "  but  the  series  already  contains  an  observation ");  b.append( "  for  that  time  period.  Duplicates  are  not   ");  b.append( "permitted.Try  using  the  addOrUpdate()  method. ");  throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {    [BUGGY]    fireSeriesChanged();  [BUGGY]  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  removeAgedItems(false);//  remove  old  items  if  necessary,  but    if  (notify)  {  fireSeriesChanged();  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	538	538	1	replace	    fireSeriesChanged();		compilable	  [FE]  IllegalArgumentException	108	1
2930	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]  throws  CloneNotSupportedException  {  [BUGGY]  if(start  ==  null  ||  start.compareTo(start)>  0)  {  [BUGGY]  throw  new  IllegalArgumentException( "Null  'start'  argument. ");  }  if  (end  ==  null)  {  throw  new  IllegalArgumentException( "Null  'end'  argument. ");  }  if  (start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException(   "Requires  start  on  or  before  end. ");  }  boolean  emptyRange  =  false;  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	921	921	1	add	if(start  ==  null  ||  start.compareTo(start)>  0)  {	if  (start  ==  null)  {  	compilable	  [FE]  IllegalArgumentException	3	1
2931	[BUG]  [BUGGY]  if(start  ==  null  ||  start.compareTo(start)>  0)  {  [FE]  IllegalArgumentException  [CONTEXT]  throws  CloneNotSupportedException  {  [BUGGY]  if(start  ==  null  ||  start.compareTo(start)>  0)  {  [BUGGY]  throw  new  IllegalArgumentException( "Null  'start'  argument. ");  }  if  (end  ==  null)  {  throw  new  IllegalArgumentException( "Null  'end'  argument. ");  }  if  (start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException(   "Requires  start  on  or  before  end. ");  }  boolean  emptyRange  =  false;  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	921	921	1	replace	if(start  ==  null  ||  start.compareTo(start)>  0)  {	if  (start  ==  null)  {  	compilable	  [FE]  IllegalArgumentException	3	1
3025	[BUG]  [BUGGY]    while(dummy!=  null)  {  dummy  =  new  TimeSeriesDataItem(period,  Integer.MIN_VALUE);  [CE]  illegal  start  of  expression  [CONTEXT]  public  int  getIndex(RegularTimePeriod  period)  {  if  (period  ==  null)  {  throw  new  IllegalArgumentException( "Null  'period'  argument. ");  }  TimeSeriesDataItem  dummy  =  new  TimeSeriesDataItem(  period,  Integer.MIN_VALUE);  [BUGGY]    while(dummy!=  null)  {  dummy  =  new  TimeSeriesDataItem(period,  Integer.MIN_VALUE);  [BUGGY]  return  Collections.binarySearch(this.data,  dummy);  }  [CLASS]  TimeSeries  [METHOD]  getIndex  [RETURN_TYPE]  int  RegularTimePeriod  period  [VARIABLES]  boolean  TimeSeriesDataItem  dummy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.3333333333333333	435	435	1	replace	    while(dummy!=  null)  {  dummy  =  new  TimeSeriesDataItem(period,  Integer.MIN_VALUE);		non-compiled	[CE]  illegal  start  of  expression	46	None
3026	[BUG]  [BUGGY]    while(dummy!=  null)  {  dummy  =  new  TimeSeriesDataItem(period,  Integer.MAX_VALUE);  [CE]  illegal  start  of  expression  [CONTEXT]  public  int  getIndex(RegularTimePeriod  period)  {  if  (period  ==  null)  {  throw  new  IllegalArgumentException( "Null  'period'  argument. ");  }  TimeSeriesDataItem  dummy  =  new  TimeSeriesDataItem(  period,  Integer.MIN_VALUE);  [BUGGY]    while(dummy!=  null)  {  dummy  =  new  TimeSeriesDataItem(period,  Integer.MAX_VALUE);  [BUGGY]  return  Collections.binarySearch(this.data,  dummy);  }  [CLASS]  TimeSeries  [METHOD]  getIndex  [RETURN_TYPE]  int  RegularTimePeriod  period  [VARIABLES]  boolean  TimeSeriesDataItem  dummy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.3333333333333333	435	435	1	replace	    while(dummy!=  null)  {  dummy  =  new  TimeSeriesDataItem(period,  Integer.MAX_VALUE);		non-compiled	[CE]  illegal  start  of  expression	46	None
3027	[BUG]  [BUGGY]    while(dummy!=  null)  {  dummy.setValue(period.getValue());  [CE]  illegal  start  of  expression  [CONTEXT]  public  int  getIndex(RegularTimePeriod  period)  {  if  (period  ==  null)  {  throw  new  IllegalArgumentException( "Null  'period'  argument. ");  }  TimeSeriesDataItem  dummy  =  new  TimeSeriesDataItem(  period,  Integer.MIN_VALUE);  [BUGGY]    while(dummy!=  null)  {  dummy.setValue(period.getValue());  [BUGGY]  return  Collections.binarySearch(this.data,  dummy);  }  [CLASS]  TimeSeries  [METHOD]  getIndex  [RETURN_TYPE]  int  RegularTimePeriod  period  [VARIABLES]  boolean  TimeSeriesDataItem  dummy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.3333333333333333	435	435	1	replace	    while(dummy!=  null)  {  dummy.setValue(period.getValue());		non-compiled	[CE]  illegal  start  of  expression	46	None
3050	[BUG]  [BUGGY]  add(item,  notify,  false);  [CE]  no  suitable  method  found  for  add(TimeSeriesDataItem,boolean,boolean)  [CONTEXT]  public  void  add(RegularTimePeriod  period,  double  value,  boolean  notify)  {  TimeSeriesDataItem  item  =  new  TimeSeriesDataItem(period,  value);  [BUGGY]  add(item,  notify,  false);  [BUGGY]  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  double  value  boolean  notify  [VARIABLES]  boolean  notify  double  value  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.2581988897471611	575	575	1	replace	add(item,  notify,  false);	add(item,  notify);  	non-compiled	[CE]  no  suitable  method  found  for  add(TimeSeriesDataItem,boolean,boolean)	53	None
3073	[BUG]  [BUGGY]  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  &&  startIndex  >=  0)  {  [CE]  illegal  start  of  expression  [CONTEXT]  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  [BUGGY]  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  &&  startIndex  >=  0)  {  [BUGGY]  }  if  (endIndex  <  0)  {  emptyRange  =  true;  }  if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  }  else  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	942	943	1	replace	endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  &&  startIndex  >=  0)  {	endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  	non-compiled	[CE]  illegal  start  of  expression	25	None
3074	[BUG]  [BUGGY]  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  &  [CE]  illegal  start  of  expression  [CONTEXT]  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  [BUGGY]  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  &  [BUGGY]  }  if  (endIndex  <  0)  {  emptyRange  =  true;  }  if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  }  else  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	942	943	1	replace	endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  &	endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  	non-compiled	[CE]  illegal  start  of  expression	25	None
3098	[BUG]  [BUGGY]    while(start!=  null)  {  if(start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException( "Requires  start  on  or  before  end. ");  }  [CE]  illegal  start  of  expression  [CONTEXT]  throw  new  IllegalArgumentException( "Null  'start'  argument. ");  }  if  (end  ==  null)  {  throw  new  IllegalArgumentException( "Null  'end'  argument. ");  }  if  (start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException(   "Requires  start  on  or  before  end. ");  }  boolean  emptyRange  =  false;  [BUGGY]    while(start!=  null)  {  if(start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException( "Requires  start  on  or  before  end. ");  }  [BUGGY]  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	932	932	1	replace	    while(start!=  null)  {  if(start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException( "Requires  start  on  or  before  end. ");  }		non-compiled	[CE]  illegal  start  of  expression	12	None
3099	[BUG]  [BUGGY]    while(start!=  null)  {  if(start.compareTo(start)>  0)  {  throw  new  IllegalArgumentException( "Requires  start  on  or  before  end. ");  }  [CE]  illegal  start  of  expression  [CONTEXT]  throw  new  IllegalArgumentException( "Null  'start'  argument. ");  }  if  (end  ==  null)  {  throw  new  IllegalArgumentException( "Null  'end'  argument. ");  }  if  (start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException(   "Requires  start  on  or  before  end. ");  }  boolean  emptyRange  =  false;  [BUGGY]    while(start!=  null)  {  if(start.compareTo(start)>  0)  {  throw  new  IllegalArgumentException( "Requires  start  on  or  before  end. ");  }  [BUGGY]  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	932	932	1	replace	    while(start!=  null)  {  if(start.compareTo(start)>  0)  {  throw  new  IllegalArgumentException( "Requires  start  on  or  before  end. ");  }		non-compiled	[CE]  illegal  start  of  expression	12	None
3169	[BUG]  [BUGGY]    while(item.getPeriod().compareTo(count)>  0)  {  this.data.add(item);  [CE]  'else'  without  'if'  [CONTEXT]  b.append(this.timePeriodClass.getName());  b.append( ". ");  throw  new  SeriesException(b.toString());  }  boolean  added  =  false;  int  count  =  getItemCount();  if  (count  ==  0)  {  this.data.add(item);  [BUGGY]    while(item.getPeriod().compareTo(count)>  0)  {  this.data.add(item);  [BUGGY]  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  added  =  true;  }  else  {  int  index  =  Collections.binarySearch(this.data,  item);  if  (index  <  0)  {  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	510	510	1	replace	    while(item.getPeriod().compareTo(count)>  0)  {  this.data.add(item);		non-compiled	[CE]  'else'  without  'if'	96	None
3170	[BUG]  [BUGGY]    while(item.getPeriod().compareTo(count  -  1)>  0)  {  this.data.add(item);  [CE]  'else'  without  'if'  [CONTEXT]  b.append(this.timePeriodClass.getName());  b.append( ". ");  throw  new  SeriesException(b.toString());  }  boolean  added  =  false;  int  count  =  getItemCount();  if  (count  ==  0)  {  this.data.add(item);  [BUGGY]    while(item.getPeriod().compareTo(count  -  1)>  0)  {  this.data.add(item);  [BUGGY]  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  added  =  true;  }  else  {  int  index  =  Collections.binarySearch(this.data,  item);  if  (index  <  0)  {  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	510	510	1	replace	    while(item.getPeriod().compareTo(count  -  1)>  0)  {  this.data.add(item);		non-compiled	[CE]  'else'  without  'if'	96	None
3171	[BUG]  [BUGGY]    while(item.getPeriod().compareTo(index)>  0)  {  this.data.add(item);  [CE]  'else'  without  'if'  [CONTEXT]  b.append(this.timePeriodClass.getName());  b.append( ". ");  throw  new  SeriesException(b.toString());  }  boolean  added  =  false;  int  count  =  getItemCount();  if  (count  ==  0)  {  this.data.add(item);  [BUGGY]    while(item.getPeriod().compareTo(index)>  0)  {  this.data.add(item);  [BUGGY]  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  added  =  true;  }  else  {  int  index  =  Collections.binarySearch(this.data,  item);  if  (index  <  0)  {  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	510	510	1	replace	    while(item.getPeriod().compareTo(index)>  0)  {  this.data.add(item);		non-compiled	[CE]  'else'  without  'if'	96	None
3194	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException( "Requires  start  >=  0. ");  }  [BUGGY]    if(end  <  start)  {  throw  new  IllegalArgumentException( "Requires  start  >=  end. ");  }  [BUGGY]  if  (end  <  start)  {  throw  new  IllegalArgumentException( "Requires  start  <=  end. ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	882	882	1	add	    if(end  <  start)  {  throw  new  IllegalArgumentException( "Requires  start  >=  end. ");  }		compilable	  [FE]  IllegalArgumentException	36	1
3195	[BUG]  [BUGGY]    if(end  <  start)  {  throw  new  IllegalArgumentException( "Requires  start  >=  end. ");  }  [FE]  IllegalArgumentException  [CONTEXT]  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException( "Requires  start  >=  0. ");  }  [BUGGY]    if(end  <  start)  {  throw  new  IllegalArgumentException( "Requires  start  >=  end. ");  }  [BUGGY]  if  (end  <  start)  {  throw  new  IllegalArgumentException( "Requires  start  <=  end. ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	882	882	1	replace	    if(end  <  start)  {  throw  new  IllegalArgumentException( "Requires  start  >=  end. ");  }		compilable	  [FE]  IllegalArgumentException	36	1
1	[BUG]  [BUGGY]    while(item.getPeriod()!=  null)  {  this.data.add(item);  [CE]  illegal  start  of  expression  [CONTEXT]  b.append( "is   ");  b.append(item.getPeriod().getClass().getName());  b.append( ",  but  the  TimeSeries  is  expecting  an  instance  of   ");  b.append(this.timePeriodClass.getName());  b.append( ". ");  throw  new  SeriesException(b.toString());  }  boolean  added  =  false;  [BUGGY]    while(item.getPeriod()!=  null)  {  this.data.add(item);  [BUGGY]  int  count  =  getItemCount();  if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  added  =  true;  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	507	507	1	replace	    while(item.getPeriod()!=  null)  {  this.data.add(item);		non-compiled	[CE]  illegal  start  of  expression	90	None
2	[BUG]  [BUGGY]    while(item!=  null  &&  item.isSeriesKey())  {  this.data.add(item);  [CE]  illegal  start  of  expression  [CONTEXT]  b.append( "is   ");  b.append(item.getPeriod().getClass().getName());  b.append( ",  but  the  TimeSeries  is  expecting  an  instance  of   ");  b.append(this.timePeriodClass.getName());  b.append( ". ");  throw  new  SeriesException(b.toString());  }  boolean  added  =  false;  [BUGGY]    while(item!=  null  &&  item.isSeriesKey())  {  this.data.add(item);  [BUGGY]  int  count  =  getItemCount();  if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  added  =  true;  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	507	507	1	replace	    while(item!=  null  &&  item.isSeriesKey())  {  this.data.add(item);		non-compiled	[CE]  illegal  start  of  expression	90	None
3	[BUG]  [BUGGY]    while(item!=  null)  {  this.data.add(item);  [CE]  illegal  start  of  expression  [CONTEXT]  b.append( "is   ");  b.append(item.getPeriod().getClass().getName());  b.append( ",  but  the  TimeSeries  is  expecting  an  instance  of   ");  b.append(this.timePeriodClass.getName());  b.append( ". ");  throw  new  SeriesException(b.toString());  }  boolean  added  =  false;  [BUGGY]    while(item!=  null)  {  this.data.add(item);  [BUGGY]  int  count  =  getItemCount();  if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  added  =  true;  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	507	507	1	replace	    while(item!=  null)  {  this.data.add(item);		non-compiled	[CE]  illegal  start  of  expression	90	None
62	[BUG]  [BUGGY]    data.add(period,  value);  fireSeriesChanged();  [CE]  no  suitable  method  found  for  add(RegularTimePeriod,Number)  [CONTEXT]  public  void  add(RegularTimePeriod  period,  Number  value)  {  add(period,  value,  true);  [BUGGY]    data.add(period,  value);  fireSeriesChanged();  [BUGGY]  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  Number  value  [VARIABLES]  boolean  Number  value  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	589	589	1	replace	    data.add(period,  value);  fireSeriesChanged();		non-compiled	[CE]  no  suitable  method  found  for  add(RegularTimePeriod,Number)	119	None
122	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]  throws  CloneNotSupportedException  {  if  (start  ==  null)  {  throw  new  IllegalArgumentException( "Null  'start'  argument. ");  }  [BUGGY]  if(end  ==  null  ||  start.compareTo(end)>  0)  {  [BUGGY]  throw  new  IllegalArgumentException( "Null  'end'  argument. ");  }  if  (start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException(   "Requires  start  on  or  before  end. ");  }  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	924	924	1	add	if(end  ==  null  ||  start.compareTo(end)>  0)  {	if  (end  ==  null)  {  	compilable	  [FE]  IllegalArgumentException	5	1
123	[BUG]  [BUGGY]  if(end  ==  null  ||  start.compareTo(end)>  0)  {  [FE]  IllegalArgumentException  [CONTEXT]  throws  CloneNotSupportedException  {  if  (start  ==  null)  {  throw  new  IllegalArgumentException( "Null  'start'  argument. ");  }  [BUGGY]  if(end  ==  null  ||  start.compareTo(end)>  0)  {  [BUGGY]  throw  new  IllegalArgumentException( "Null  'end'  argument. ");  }  if  (start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException(   "Requires  start  on  or  before  end. ");  }  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	924	924	1	replace	if(end  ==  null  ||  start.compareTo(end)>  0)  {	if  (end  ==  null)  {  	compilable	  [FE]  IllegalArgumentException	5	1
181	[BUG]  [BUGGY]    for(int  i  =  startIndex;  i  <  this.data.size();  i++)  {  TimeSeries  copy  =(TimeSeries)this.data.get(i);  if(start  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [CONTEXT]  throws  CloneNotSupportedException  {  [BUGGY]    for(int  i  =  startIndex;  i  <  this.data.size();  i++)  {  TimeSeries  copy  =(TimeSeries)this.data.get(i);  if(start  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  if  (start  ==  null)  {  throw  new  IllegalArgumentException( "Null  'start'  argument. ");  }  if  (end  ==  null)  {  throw  new  IllegalArgumentException( "Null  'end'  argument. ");  }  if  (start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException(   "Requires  start  on  or  before  end. ");  }  boolean  emptyRange  =  false;  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	921	921	1	replace	    for(int  i  =  startIndex;  i  <  this.data.size();  i++)  {  TimeSeries  copy  =(TimeSeries)this.data.get(i);  if(start  ==  null)  {  throw  new  IllegalArgumentException( " ");  }		non-compiled	[CE]  illegal  start  of  expression	4	None
182	[BUG]  [BUGGY]    for(int  i  =  startIndex;  i  <  this.data.size();  i++)  {  TimeSeries  copy  =(TimeSeries)this.data.get(i);  if(start!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [CONTEXT]  throws  CloneNotSupportedException  {  [BUGGY]    for(int  i  =  startIndex;  i  <  this.data.size();  i++)  {  TimeSeries  copy  =(TimeSeries)this.data.get(i);  if(start!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  if  (start  ==  null)  {  throw  new  IllegalArgumentException( "Null  'start'  argument. ");  }  if  (end  ==  null)  {  throw  new  IllegalArgumentException( "Null  'end'  argument. ");  }  if  (start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException(   "Requires  start  on  or  before  end. ");  }  boolean  emptyRange  =  false;  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	921	921	1	replace	    for(int  i  =  startIndex;  i  <  this.data.size();  i++)  {  TimeSeries  copy  =(TimeSeries)this.data.get(i);  if(start!=  null)  {  throw  new  IllegalArgumentException( " ");  }		non-compiled	[CE]  illegal  start  of  expression	4	None
183	[BUG]  [BUGGY]    for(int  i  =  startIndex;  i  <  getItemCount();  i++)  {  TimeSeries  copy  =(TimeSeries)this.data.get(i);  if(start  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [CONTEXT]  throws  CloneNotSupportedException  {  [BUGGY]    for(int  i  =  startIndex;  i  <  getItemCount();  i++)  {  TimeSeries  copy  =(TimeSeries)this.data.get(i);  if(start  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  if  (start  ==  null)  {  throw  new  IllegalArgumentException( "Null  'start'  argument. ");  }  if  (end  ==  null)  {  throw  new  IllegalArgumentException( "Null  'end'  argument. ");  }  if  (start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException(   "Requires  start  on  or  before  end. ");  }  boolean  emptyRange  =  false;  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	921	921	1	replace	    for(int  i  =  startIndex;  i  <  getItemCount();  i++)  {  TimeSeries  copy  =(TimeSeries)this.data.get(i);  if(start  ==  null)  {  throw  new  IllegalArgumentException( " ");  }		non-compiled	[CE]  illegal  start  of  expression	4	None
242	[BUG]  [BUGGY]  super(name,  Domain.class);  [CE]  cannot  find  symbol  [CONTEXT]  public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  [BUGGY]  super(name,  Domain.class);  [BUGGY]  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	174	174	1	replace	super(name,  Domain.class);	super(name);  	non-compiled	[CE]  cannot  find  symbol	61	None
302	[BUG]  [BUGGY]    this.data.add(new  TimeSeries(name),  domain,  range,  timePeriodClass);  [CE]  no  suitable  method  found  for  add(TimeSeries,String,String,Class)  [CONTEXT]  public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  [BUGGY]    this.data.add(new  TimeSeries(name),  domain,  range,  timePeriodClass);  [BUGGY]  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	180	180	1	replace	    this.data.add(new  TimeSeries(name),  domain,  range,  timePeriodClass);		non-compiled	[CE]  no  suitable  method  found  for  add(TimeSeries,String,String,Class)	74	None
303	[BUG]  [BUGGY]    this.minimumItemCount  =  Long.MAX_VALUE;  [CE]  cannot  find  symbol  minimumItemCount  [CONTEXT]  public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  [BUGGY]    this.minimumItemCount  =  Long.MAX_VALUE;  [BUGGY]  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	180	180	1	replace	    this.minimumItemCount  =  Long.MAX_VALUE;		non-compiled	[CE]  cannot  find  symbol  minimumItemCount	74	None
422	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]  public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  [BUGGY]  this.domain  =  domain  +  DEFAULT_DOMAIN_DESCRIPTION;  [BUGGY]  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	175	175	1	add	this.domain  =  domain  +  DEFAULT_DOMAIN_DESCRIPTION;	this.domain  =  domain;  	compilable	  [FE]  IllegalArgumentException	63	1
423	[BUG]  [BUGGY]  this.domain  =  domain  +  DEFAULT_DOMAIN_DESCRIPTION;  [FE]  IllegalArgumentException  [CONTEXT]  public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  [BUGGY]  this.domain  =  domain  +  DEFAULT_DOMAIN_DESCRIPTION;  [BUGGY]  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	175	175	1	replace	this.domain  =  domain  +  DEFAULT_DOMAIN_DESCRIPTION;	this.domain  =  domain;  	compilable	  [FE]  IllegalArgumentException	63	1
482	[BUG]  [BUGGY]    this.data.add(item,  last);  [CE]  no  suitable  method  found  for  add(TimeSeriesDataItem,RegularTimePeriod)  [CONTEXT]  if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {  [BUGGY]    this.data.add(item,  last);  [BUGGY]  this.data.add(item);  added  =  true;  }  else  {  int  index  =  Collections.binarySearch(this.data,  item);  if  (index  <  0)  {  this.data.add(-index  -  1,  item);  added  =  true;  }  else  {  StringBuffer  b  =  new  StringBuffer();  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	515	515	1	replace	    this.data.add(item,  last);		non-compiled	[CE]  no  suitable  method  found  for  add(TimeSeriesDataItem,RegularTimePeriod)	102	None
483	[BUG]  [BUGGY]    this.data.add(-item);  [CE]  bad  operand  type  TimeSeriesDataItem  for  unary  operator  '-'  [CONTEXT]  if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {  [BUGGY]    this.data.add(-item);  [BUGGY]  this.data.add(item);  added  =  true;  }  else  {  int  index  =  Collections.binarySearch(this.data,  item);  if  (index  <  0)  {  this.data.add(-index  -  1,  item);  added  =  true;  }  else  {  StringBuffer  b  =  new  StringBuffer();  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	515	515	1	replace	    this.data.add(-item);		non-compiled	[CE]  bad  operand  type  TimeSeriesDataItem  for  unary  operator  '-'	102	None
542	[BUG]  [BUGGY]  updateBounds(item,  notify);  [CE]  cannot  find  symbol  [CONTEXT]  public  void  add(RegularTimePeriod  period,  Number  value,  boolean  notify)  {  TimeSeriesDataItem  item  =  new  TimeSeriesDataItem(period,  value);  [BUGGY]  updateBounds(item,  notify);  [BUGGY]  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  Number  value  boolean  notify  [VARIABLES]  boolean  notify  Number  value  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	603	603	1	replace	updateBounds(item,  notify);	add(item,  notify);  	non-compiled	[CE]  cannot  find  symbol	122	None
662	[BUG]  [BUGGY]    this.data.add(item);  updateBounds(item.getPeriod(),  this.data.size()  -  1);  [CE]  cannot  find  symbol  [CONTEXT]  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  removeAgedItems(false);//  remove  old  items  if  necessary,  but    if  (notify)  {  [BUGGY]    this.data.add(item);  updateBounds(item.getPeriod(),  this.data.size()  -  1);  [BUGGY]  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	546	546	1	replace	    this.data.add(item);  updateBounds(item.getPeriod(),  this.data.size()  -  1);		non-compiled	[CE]  cannot  find  symbol	114	None
663	[BUG]  [BUGGY]    this.data.add(item);  notifyListeners(new  DataItem(item,  getPeriodClass()));  [CE]  cannot  find  symbol  [CONTEXT]  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  removeAgedItems(false);//  remove  old  items  if  necessary,  but    if  (notify)  {  [BUGGY]    this.data.add(item);  notifyListeners(new  DataItem(item,  getPeriodClass()));  [BUGGY]  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	546	546	1	replace	    this.data.add(item);  notifyListeners(new  DataItem(item,  getPeriodClass()));		non-compiled	[CE]  cannot  find  symbol	114	None
722	[BUG]  [BUGGY]    this.data.add(-index  -  1,  item);  [CE]  cannot  find  symbol  index  [CONTEXT]  b.append( ",  but  the  TimeSeries  is  expecting  an  instance  of   ");  b.append(this.timePeriodClass.getName());  b.append( ". ");  throw  new  SeriesException(b.toString());  }  boolean  added  =  false;  int  count  =  getItemCount();  if  (count  ==  0)  {  [BUGGY]    this.data.add(-index  -  1,  item);  [BUGGY]  this.data.add(item);  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  added  =  true;  }  else  {  int  index  =  Collections.binarySearch(this.data,  item);  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	509	509	1	replace	    this.data.add(-index  -  1,  item);		non-compiled	[CE]  cannot  find  symbol  index	94	None
723	[BUG]  [BUGGY]    item  =  getTimePeriod(getItemCount()  -  1);  [CE]  incompatible  types  [CONTEXT]  b.append( ",  but  the  TimeSeries  is  expecting  an  instance  of   ");  b.append(this.timePeriodClass.getName());  b.append( ". ");  throw  new  SeriesException(b.toString());  }  boolean  added  =  false;  int  count  =  getItemCount();  if  (count  ==  0)  {  [BUGGY]    item  =  getTimePeriod(getItemCount()  -  1);  [BUGGY]  this.data.add(item);  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  added  =  true;  }  else  {  int  index  =  Collections.binarySearch(this.data,  item);  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	509	509	1	replace	    item  =  getTimePeriod(getItemCount()  -  1);		non-compiled	[CE]  incompatible  types	94	None
782	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException( "Requires  start  >=  0. ");  }  if  (end  <  start)  {  [BUGGY]  throw  new  IllegalArgumentException( "Requires  end  <=  start. ");  [BUGGY]  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	883	883	1	add	throw  new  IllegalArgumentException( "Requires  end  <=  start. ");	throw  new  IllegalArgumentException( "Requires  start  <=  end. ");  	compilable	  [FE]  IllegalArgumentException	1	1
783	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Requires  end  <=  start. ");  [FE]  IllegalArgumentException  [CONTEXT]  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException( "Requires  start  >=  0. ");  }  if  (end  <  start)  {  [BUGGY]  throw  new  IllegalArgumentException( "Requires  end  <=  start. ");  [BUGGY]  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	883	883	1	replace	throw  new  IllegalArgumentException( "Requires  end  <=  start. ");	throw  new  IllegalArgumentException( "Requires  start  <=  end. ");  	compilable	  [FE]  IllegalArgumentException	1	1
842	[BUG]  [BUGGY]  this.timePeriodClass  =  timePeriodClass?  timePeriodClass  :  null;  [CE]  incompatible  types  [CONTEXT]  public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;  this.range  =  range;  [BUGGY]  this.timePeriodClass  =  timePeriodClass?  timePeriodClass  :  null;  [BUGGY]  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	177	177	1	replace	this.timePeriodClass  =  timePeriodClass?  timePeriodClass  :  null;	this.timePeriodClass  =  timePeriodClass;  	non-compiled	[CE]  incompatible  types	67	None
902	[BUG]  [BUGGY]  if(value!=  null)  {  TimeSeriesDataItem  item  =  new  TimeSeriesDataItem(period,  value,  notify);  item.addValue();  }  else  {  fireSeriesChanged();  }  [CE]  illegal  start  of  expression  [CONTEXT]  public  void  add(RegularTimePeriod  period,  Number  value,  boolean  notify)  {  TimeSeriesDataItem  item  =  new  TimeSeriesDataItem(period,  value);  add(item,  notify);  [BUGGY]  if(value!=  null)  {  TimeSeriesDataItem  item  =  new  TimeSeriesDataItem(period,  value,  notify);  item.addValue();  }  else  {  fireSeriesChanged();  }  [BUGGY]    [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  Number  value  boolean  notify  [VARIABLES]  boolean  notify  Number  value  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	604	604	1	replace	if(value!=  null)  {  TimeSeriesDataItem  item  =  new  TimeSeriesDataItem(period,  value,  notify);  item.addValue();  }  else  {  fireSeriesChanged();  }	}  	non-compiled	[CE]  illegal  start  of  expression	124	None
1021	[BUG]  [BUGGY]    &&(latest  -  getTimePeriod(0).getSerialIndex()))  {  this.data.add(remove);  [CE]  illegal  start  of  expression  [CONTEXT]  public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())  [BUGGY]    &&(latest  -  getTimePeriod(0).getSerialIndex()))  {  this.data.add(remove);  [BUGGY]  >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	744	744	1	replace	    &&(latest  -  getTimePeriod(0).getSerialIndex()))  {  this.data.add(remove);		non-compiled	[CE]  illegal  start  of  expression	133	None
1022	[BUG]  [BUGGY]    &&(latest  -  getTimePeriod(0).getSerialIndex()))  {  this.data.add(new  ArrayList(this.maximumItemAge,  this.data.size()  -  1));  removed  =  true;  [CE]  illegal  start  of  expression  [CONTEXT]  public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())  [BUGGY]    &&(latest  -  getTimePeriod(0).getSerialIndex()))  {  this.data.add(new  ArrayList(this.maximumItemAge,  this.data.size()  -  1));  removed  =  true;  [BUGGY]  >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	744	744	1	replace	    &&(latest  -  getTimePeriod(0).getSerialIndex()))  {  this.data.add(new  ArrayList(this.maximumItemAge,  this.data.size()  -  1));  removed  =  true;		non-compiled	[CE]  illegal  start  of  expression	133	None
1023	[BUG]  [BUGGY]    &&(latest  -  getTimePeriod(0).getSerialIndex()))  {  this.data.add(new  ArrayList(this.maximumItemAge,  this.data.size()));  removed  =  true;  [CE]  illegal  start  of  expression  [CONTEXT]  public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())  [BUGGY]    &&(latest  -  getTimePeriod(0).getSerialIndex()))  {  this.data.add(new  ArrayList(this.maximumItemAge,  this.data.size()));  removed  =  true;  [BUGGY]  >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	744	744	1	replace	    &&(latest  -  getTimePeriod(0).getSerialIndex()))  {  this.data.add(new  ArrayList(this.maximumItemAge,  this.data.size()));  removed  =  true;		non-compiled	[CE]  illegal  start  of  expression	133	None
1081	[BUG]  [BUGGY]    this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION);  [CE]  no  suitable  constructor  found  for  TimeSeries(Comparable,String,String)  [CONTEXT]  public  TimeSeries(Comparable  name)  {  [BUGGY]    this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION);  [BUGGY]  this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,    Day.class);  Day.class);  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Comparable)  Comparable  name  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.4082482904638631	142	143	1	replace	    this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION);		non-compiled	[CE]  no  suitable  constructor  found  for  TimeSeries(Comparable,String,String)	38	None
1082	[BUG]  [BUGGY]    this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  TimePeriodClass.class);  [CE]  cannot  find  symbol  [CONTEXT]  public  TimeSeries(Comparable  name)  {  [BUGGY]    this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  TimePeriodClass.class);  [BUGGY]  this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,    Day.class);  Day.class);  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Comparable)  Comparable  name  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.4082482904638631	142	143	1	replace	    this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  TimePeriodClass.class);		non-compiled	[CE]  cannot  find  symbol	38	None
1083	[BUG]  [BUGGY]    this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  TimePeriodClass);  [CE]  cannot  find  symbol  TimePeriodClass  [CONTEXT]  public  TimeSeries(Comparable  name)  {  [BUGGY]    this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  TimePeriodClass);  [BUGGY]  this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,    Day.class);  Day.class);  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Comparable)  Comparable  name  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.4082482904638631	142	143	1	replace	    this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  TimePeriodClass);		non-compiled	[CE]  cannot  find  symbol  TimePeriodClass	38	None
1142	[BUG]  [BUGGY]  this.range  =  range,  timePeriodClass;  [CE]  ';'  expected  [CONTEXT]  public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;  [BUGGY]  this.range  =  range,  timePeriodClass;  [BUGGY]  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	176	176	1	replace	this.range  =  range,  timePeriodClass;	this.range  =  range;  	non-compiled	[CE]  ';'  expected	65	None
1263	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]  public  void  removeAgedItems(boolean  notify)  {    [BUGGY]    int  count  =  getItemCount();  [BUGGY]  if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())  >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	740	740	1	add	    int  count  =  getItemCount();		compilable	  [FE]  IllegalArgumentException	127	1
1264	[BUG]  [BUGGY]    int  count  =  getItemCount();  [FE]  IllegalArgumentException  [CONTEXT]  public  void  removeAgedItems(boolean  notify)  {    [BUGGY]    int  count  =  getItemCount();  [BUGGY]  if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())  >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	740	740	1	replace	    int  count  =  getItemCount();		compilable	  [FE]  IllegalArgumentException	127	1
1322	[BUG]  [BUGGY]  this.data.add(period,  value);  fireSeriesChanged();  [CE]  illegal  start  of  expression  [CONTEXT]  public  void  add(RegularTimePeriod  period,  Number  value)  {  add(period,  value,  true);  [BUGGY]  this.data.add(period,  value);  fireSeriesChanged();  [BUGGY]    [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  Number  value  [VARIABLES]  boolean  Number  value  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	589	589	1	replace	this.data.add(period,  value);  fireSeriesChanged();	}  	non-compiled	[CE]  illegal  start  of  expression	118	None
1381	[BUG]  [BUGGY]    for(TimeSeriesDataItem  item  :  copy.data)  {  TimeSeriesDataItem  item  =(TimeSeriesDataItem)super.clone();  item.getDataItem(0)!=  null;  if(start  <  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [CONTEXT]  throws  CloneNotSupportedException  {  [BUGGY]    for(TimeSeriesDataItem  item  :  copy.data)  {  TimeSeriesDataItem  item  =(TimeSeriesDataItem)super.clone();  item.getDataItem(0)!=  null;  if(start  <  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  if  (start  <  0)  {  throw  new  IllegalArgumentException( "Requires  start  >=  0. ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException( "Requires  start  <=  end. ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	879	879	1	replace	    for(TimeSeriesDataItem  item  :  copy.data)  {  TimeSeriesDataItem  item  =(TimeSeriesDataItem)super.clone();  item.getDataItem(0)!=  null;  if(start  <  0)  {  throw  new  IllegalArgumentException( " ");  }		non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	34	None
1382	[BUG]  [BUGGY]    for(TimeSeriesDataItem  item  :  copy.data)  {  TimeSeriesDataItem  item  =(TimeSeriesDataItem)super.clone();  item.getDataItem(0)  ==  null;  if(start  <  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [CONTEXT]  throws  CloneNotSupportedException  {  [BUGGY]    for(TimeSeriesDataItem  item  :  copy.data)  {  TimeSeriesDataItem  item  =(TimeSeriesDataItem)super.clone();  item.getDataItem(0)  ==  null;  if(start  <  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  if  (start  <  0)  {  throw  new  IllegalArgumentException( "Requires  start  >=  0. ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException( "Requires  start  <=  end. ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	879	879	1	replace	    for(TimeSeriesDataItem  item  :  copy.data)  {  TimeSeriesDataItem  item  =(TimeSeriesDataItem)super.clone();  item.getDataItem(0)  ==  null;  if(start  <  0)  {  throw  new  IllegalArgumentException( " ");  }		non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	34	None
1383	[BUG]  [BUGGY]    for(TimeSeriesDataItem  item  :  copy.data)  {  TimeSeriesDataItem  item  =(TimeSeriesDataItem)super.clone();  item.getDataItem(0)!=  null;  if(start  <  0)  {  throw  new  IllegalArgumentException( "Invalid  start  of  series. ");  }  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [CONTEXT]  throws  CloneNotSupportedException  {  [BUGGY]    for(TimeSeriesDataItem  item  :  copy.data)  {  TimeSeriesDataItem  item  =(TimeSeriesDataItem)super.clone();  item.getDataItem(0)!=  null;  if(start  <  0)  {  throw  new  IllegalArgumentException( "Invalid  start  of  series. ");  }  [BUGGY]  if  (start  <  0)  {  throw  new  IllegalArgumentException( "Requires  start  >=  0. ");  }  if  (end  <  start)  {  throw  new  IllegalArgumentException( "Requires  start  <=  end. ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	879	879	1	replace	    for(TimeSeriesDataItem  item  :  copy.data)  {  TimeSeriesDataItem  item  =(TimeSeriesDataItem)super.clone();  item.getDataItem(0)!=  null;  if(start  <  0)  {  throw  new  IllegalArgumentException( "Invalid  start  of  series. ");  }		non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	34	None
1502	[BUG]  [BUGGY]  updateBounds(item,  notify);  [CE]  cannot  find  symbol  [CONTEXT]  public  void  add(RegularTimePeriod  period,  double  value,  boolean  notify)  {  TimeSeriesDataItem  item  =  new  TimeSeriesDataItem(period,  value);  [BUGGY]  updateBounds(item,  notify);  [BUGGY]  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  double  value  boolean  notify  [VARIABLES]  boolean  notify  double  value  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.2581988897471611	575	575	1	replace	updateBounds(item,  notify);	add(item,  notify);  	non-compiled	[CE]  cannot  find  symbol	53	None
1562	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]  public  void  add(RegularTimePeriod  period,  Number  value,  boolean  notify)  {  TimeSeriesDataItem  item  =  new  TimeSeriesDataItem(period,  value);  add(item,  notify);  [BUGGY]    item.setValue(value);  fireSeriesChanged();  [BUGGY]  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  Number  value  boolean  notify  [VARIABLES]  boolean  notify  Number  value  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	604	604	1	add	    item.setValue(value);  fireSeriesChanged();		compilable	  [FE]  IllegalArgumentException	125	1
1563	[BUG]  [BUGGY]    item.setValue(value);  fireSeriesChanged();  [FE]  IllegalArgumentException  [CONTEXT]  public  void  add(RegularTimePeriod  period,  Number  value,  boolean  notify)  {  TimeSeriesDataItem  item  =  new  TimeSeriesDataItem(period,  value);  add(item,  notify);  [BUGGY]    item.setValue(value);  fireSeriesChanged();  [BUGGY]  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  Number  value  boolean  notify  [VARIABLES]  boolean  notify  Number  value  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	604	604	1	replace	    item.setValue(value);  fireSeriesChanged();		compilable	  [FE]  IllegalArgumentException	125	1
1563	[BUG]  [BUGGY]    item.setValue(value);  notifyListeners(new  DataItem(period,  notify));  [CE]  cannot  find  symbol  [CONTEXT]  public  void  add(RegularTimePeriod  period,  Number  value,  boolean  notify)  {  TimeSeriesDataItem  item  =  new  TimeSeriesDataItem(period,  value);  add(item,  notify);  [BUGGY]    item.setValue(value);  notifyListeners(new  DataItem(period,  notify));  [BUGGY]  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  Number  value  boolean  notify  [VARIABLES]  boolean  notify  Number  value  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	604	604	1	replace	    item.setValue(value);  notifyListeners(new  DataItem(period,  notify));		non-compiled	[CE]  cannot  find  symbol	125	None
1681	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  }  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);  [BUGGY]  if(endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  =  endIndex  -  1;  //  this  is  last  item  BEFORE  end  [BUGGY]  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  emptyRange  =  true;  }  if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	940	942	1	add	if(endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  =  endIndex  -  1;  //  this  is  last  item  BEFORE  end	if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period    endIndex  =  endIndex  -  1;  //  so  this  is  last  item  BEFORE  end  	compilable	  [FE]  AssertionFailedError	21	1
1682	[BUG]  [BUGGY]  if(endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  =  endIndex  -  1;  //  this  is  last  item  BEFORE  end  [FE]  AssertionFailedError  [CONTEXT]  }  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);  [BUGGY]  if(endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  =  endIndex  -  1;  //  this  is  last  item  BEFORE  end  [BUGGY]  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  emptyRange  =  true;  }  if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	940	942	1	replace	if(endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  =  endIndex  -  1;  //  this  is  last  item  BEFORE  end	if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period    endIndex  =  endIndex  -  1;  //  so  this  is  last  item  BEFORE  end  	compilable	  [FE]  AssertionFailedError	21	1
1682	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  }  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);  [BUGGY]  if(endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;  //  this  is  last  item  BEFORE  end  [BUGGY]  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  emptyRange  =  true;  }  if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	940	942	1	add	if(endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;  //  this  is  last  item  BEFORE  end	if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period    endIndex  =  endIndex  -  1;  //  so  this  is  last  item  BEFORE  end  	compilable	  [FE]  AssertionFailedError	21	1
1683	[BUG]  [BUGGY]  if(endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;  //  this  is  last  item  BEFORE  end  [FE]  AssertionFailedError  [CONTEXT]  }  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);  [BUGGY]  if(endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;  //  this  is  last  item  BEFORE  end  [BUGGY]  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  emptyRange  =  true;  }  if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	940	942	1	replace	if(endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;  //  this  is  last  item  BEFORE  end	if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period    endIndex  =  endIndex  -  1;  //  so  this  is  last  item  BEFORE  end  	compilable	  [FE]  AssertionFailedError	21	1
1743	[BUG]  [BUGGY]    data.add(period,  new  Double(value));  [CE]  no  suitable  method  found  for  add(RegularTimePeriod,Double)  [CONTEXT]  public  void  add(RegularTimePeriod  period,  double  value)  {  add(period,  value,  true);  [BUGGY]    data.add(period,  new  Double(value));  [BUGGY]  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  double  value  [VARIABLES]  boolean  double  value  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.2581988897471611	562	562	1	replace	    data.add(period,  new  Double(value));		non-compiled	[CE]  no  suitable  method  found  for  add(RegularTimePeriod,Double)	50	None
1802	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]  public  void  add(TimeSeriesDataItem  item,  boolean  notify)  {  [BUGGY]  if(item  ==  null  ||  item.getPeriod().getClass()!=  this.timePeriodClass)  {  [BUGGY]  throw  new  IllegalArgumentException( "Null  'item'  argument. ");  }  if  (!item.getPeriod().getClass().equals(this.timePeriodClass))  {  StringBuffer  b  =  new  StringBuffer();  b.append( "You  are  trying  to  add  data  where  the  time  period  class   ");  b.append( "is   ");  b.append(item.getPeriod().getClass().getName());  b.append( ",  but  the  TimeSeries  is  expecting  an  instance  of   ");  b.append(this.timePeriodClass.getName());  b.append( ". ");  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	491	491	1	add	if(item  ==  null  ||  item.getPeriod().getClass()!=  this.timePeriodClass)  {	if  (item  ==  null)  {  	compilable	  [FE]  IllegalArgumentException	83	1
1803	[BUG]  [BUGGY]  if(item  ==  null  ||  item.getPeriod().getClass()!=  this.timePeriodClass)  {  [FE]  IllegalArgumentException  [CONTEXT]  public  void  add(TimeSeriesDataItem  item,  boolean  notify)  {  [BUGGY]  if(item  ==  null  ||  item.getPeriod().getClass()!=  this.timePeriodClass)  {  [BUGGY]  throw  new  IllegalArgumentException( "Null  'item'  argument. ");  }  if  (!item.getPeriod().getClass().equals(this.timePeriodClass))  {  StringBuffer  b  =  new  StringBuffer();  b.append( "You  are  trying  to  add  data  where  the  time  period  class   ");  b.append( "is   ");  b.append(item.getPeriod().getClass().getName());  b.append( ",  but  the  TimeSeries  is  expecting  an  instance  of   ");  b.append(this.timePeriodClass.getName());  b.append( ". ");  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	491	491	1	replace	if(item  ==  null  ||  item.getPeriod().getClass()!=  this.timePeriodClass)  {	if  (item  ==  null)  {  	compilable	  [FE]  IllegalArgumentException	83	1
1861	[BUG]  [BUGGY]    if(startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if(startIndex  ==  this.data.size())  {  emptyRange  =  true;  }  [CE]  illegal  start  of  expression  [CONTEXT]  }  if  (end  ==  null)  {  throw  new  IllegalArgumentException( "Null  'end'  argument. ");  }  if  (start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException(   "Requires  start  on  or  before  end. ");  }  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  [BUGGY]    if(startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if(startIndex  ==  this.data.size())  {  emptyRange  =  true;  }  [BUGGY]  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	933	933	1	replace	    if(startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if(startIndex  ==  this.data.size())  {  emptyRange  =  true;  }		non-compiled	[CE]  illegal  start  of  expression	14	None
1862	[BUG]  [BUGGY]    if(startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if(startIndex  ==  this.data.size())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [CONTEXT]  }  if  (end  ==  null)  {  throw  new  IllegalArgumentException( "Null  'end'  argument. ");  }  if  (start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException(   "Requires  start  on  or  before  end. ");  }  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  [BUGGY]    if(startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if(startIndex  ==  this.data.size())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	933	933	1	replace	    if(startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if(startIndex  ==  this.data.size())  {  throw  new  IllegalArgumentException( " ");  }		non-compiled	[CE]  illegal  start  of  expression	14	None
1863	[BUG]  [BUGGY]    if(startIndex  <  0)  {  startIndex  =  getIndex(startIndex);  if(startIndex  ==  this.data.size())  {  emptyRange  =  true;  }  [CE]  illegal  start  of  expression  [CONTEXT]  }  if  (end  ==  null)  {  throw  new  IllegalArgumentException( "Null  'end'  argument. ");  }  if  (start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException(   "Requires  start  on  or  before  end. ");  }  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  [BUGGY]    if(startIndex  <  0)  {  startIndex  =  getIndex(startIndex);  if(startIndex  ==  this.data.size())  {  emptyRange  =  true;  }  [BUGGY]  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	933	933	1	replace	    if(startIndex  <  0)  {  startIndex  =  getIndex(startIndex);  if(startIndex  ==  this.data.size())  {  emptyRange  =  true;  }		non-compiled	[CE]  illegal  start  of  expression	14	None
1922	[BUG]  [BUGGY]    this.data.add(period,  value);  notifyListeners(new  DataItem(period,  value,  false));  [CE]  no  suitable  method  found  for  add(RegularTimePeriod,Number)  [CONTEXT]  public  void  add(RegularTimePeriod  period,  Number  value,  boolean  notify)  {    [BUGGY]    this.data.add(period,  value);  notifyListeners(new  DataItem(period,  value,  false));  [BUGGY]  TimeSeriesDataItem  item  =  new  TimeSeriesDataItem(period,  value);  add(item,  notify);  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  Number  value  boolean  notify  [VARIABLES]  boolean  notify  Number  value  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	602	602	1	replace	    this.data.add(period,  value);  notifyListeners(new  DataItem(period,  value,  false));		non-compiled	[CE]  no  suitable  method  found  for  add(RegularTimePeriod,Number)	121	None
1923	[BUG]  [BUGGY]    RegularTimePeriod  period  =  getTimePeriod(period);  [CE]  variable  period  is  already  defined  in  method  add(RegularTimePeriod,Number,boolean)  [CONTEXT]  public  void  add(RegularTimePeriod  period,  Number  value,  boolean  notify)  {    [BUGGY]    RegularTimePeriod  period  =  getTimePeriod(period);  [BUGGY]  TimeSeriesDataItem  item  =  new  TimeSeriesDataItem(period,  value);  add(item,  notify);  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  Number  value  boolean  notify  [VARIABLES]  boolean  notify  Number  value  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	602	602	1	replace	    RegularTimePeriod  period  =  getTimePeriod(period);		non-compiled	[CE]  variable  period  is  already  defined  in  method  add(RegularTimePeriod,Number,boolean)	121	None
1983	[BUG]  [BUGGY]    item.addValue(value);  notifyListeners(new  DataItem(period,  value,  false));  [CE]  cannot  find  symbol  [CONTEXT]  public  void  add(RegularTimePeriod  period,  double  value,  boolean  notify)  {  TimeSeriesDataItem  item  =  new  TimeSeriesDataItem(period,  value);  add(item,  notify);  [BUGGY]    item.addValue(value);  notifyListeners(new  DataItem(period,  value,  false));  [BUGGY]  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  double  value  boolean  notify  [VARIABLES]  boolean  notify  double  value  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.2581988897471611	576	576	1	replace	    item.addValue(value);  notifyListeners(new  DataItem(period,  value,  false));		non-compiled	[CE]  cannot  find  symbol	56	None
2041	[BUG]  [BUGGY]    this.data  =  item.getDataItem(item.getPeriod());  [CE]  cannot  find  symbol  [CONTEXT]  public  void  add(TimeSeriesDataItem  item,  boolean  notify)  {  if  (item  ==  null)  {  throw  new  IllegalArgumentException( "Null  'item'  argument. ");  }  [BUGGY]    this.data  =  item.getDataItem(item.getPeriod());  [BUGGY]  if  (!item.getPeriod().getClass().equals(this.timePeriodClass))  {  StringBuffer  b  =  new  StringBuffer();  b.append( "You  are  trying  to  add  data  where  the  time  period  class   ");  b.append( "is   ");  b.append(item.getPeriod().getClass().getName());  b.append( ",  but  the  TimeSeries  is  expecting  an  instance  of   ");  b.append(this.timePeriodClass.getName());  b.append( ". ");  throw  new  SeriesException(b.toString());  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	494	494	1	replace	    this.data  =  item.getDataItem(item.getPeriod());		non-compiled	[CE]  cannot  find  symbol	86	None
2042	[BUG]  [BUGGY]    this.data.add(item,  notify);  [CE]  no  suitable  method  found  for  add(TimeSeriesDataItem,boolean)  [CONTEXT]  public  void  add(TimeSeriesDataItem  item,  boolean  notify)  {  if  (item  ==  null)  {  throw  new  IllegalArgumentException( "Null  'item'  argument. ");  }  [BUGGY]    this.data.add(item,  notify);  [BUGGY]  if  (!item.getPeriod().getClass().equals(this.timePeriodClass))  {  StringBuffer  b  =  new  StringBuffer();  b.append( "You  are  trying  to  add  data  where  the  time  period  class   ");  b.append( "is   ");  b.append(item.getPeriod().getClass().getName());  b.append( ",  but  the  TimeSeries  is  expecting  an  instance  of   ");  b.append(this.timePeriodClass.getName());  b.append( ". ");  throw  new  SeriesException(b.toString());  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	494	494	1	replace	    this.data.add(item,  notify);		non-compiled	[CE]  no  suitable  method  found  for  add(TimeSeriesDataItem,boolean)	86	None
2102	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  removeAgedItems(false);//  remove  old  items  if  necessary,  but    [BUGGY]  if(!notify)  {  [BUGGY]  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	545	545	1	add	if(!notify)  {	if  (notify)  {  	compilable	  [FE]  IllegalArgumentException	111	1
2103	[BUG]  [BUGGY]  if(!notify)  {  [FE]  IllegalArgumentException  [CONTEXT]  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  removeAgedItems(false);//  remove  old  items  if  necessary,  but    [BUGGY]  if(!notify)  {  [BUGGY]  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	545	545	1	replace	if(!notify)  {	if  (notify)  {  	compilable	  [FE]  IllegalArgumentException	111	1
2162	[BUG]  [BUGGY]  endIndex  =  -(startIndex  +  1);  [CE]  cannot  find  symbol  endIndex  [CONTEXT]  if  (end  ==  null)  {  throw  new  IllegalArgumentException( "Null  'end'  argument. ");  }  if  (start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException(   "Requires  start  on  or  before  end. ");  }  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  [BUGGY]  endIndex  =  -(startIndex  +  1);  [BUGGY]  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	934	934	1	replace	endIndex  =  -(startIndex  +  1);	startIndex  =  -(startIndex  +  1);  	non-compiled	[CE]  cannot  find  symbol  endIndex	15	None
2223	[BUG]  [BUGGY]    this.data.add(-latest);  removed  =  true;  [CE]  no  suitable  method  found  for  add(long)  [CONTEXT]    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())  >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  [BUGGY]    this.data.add(-latest);  removed  =  true;  [BUGGY]  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	748	748	1	replace	    this.data.add(-latest);  removed  =  true;		non-compiled	[CE]  no  suitable  method  found  for  add(long)	135	None
2281	[BUG]  [BUGGY]    this.data.add(period,  new  Double(value),  notify);  [CE]  no  suitable  method  found  for  add(RegularTimePeriod,Double,boolean)  [CONTEXT]  public  void  add(RegularTimePeriod  period,  double  value,  boolean  notify)  {    [BUGGY]    this.data.add(period,  new  Double(value),  notify);  [BUGGY]  TimeSeriesDataItem  item  =  new  TimeSeriesDataItem(period,  value);  add(item,  notify);  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  double  value  boolean  notify  [VARIABLES]  boolean  notify  double  value  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.2581988897471611	574	574	1	replace	    this.data.add(period,  new  Double(value),  notify);		non-compiled	[CE]  no  suitable  method  found  for  add(RegularTimePeriod,Double,boolean)	52	None
2282	[BUG]  [BUGGY]    this.data.add(period,  new  Double(value));  notifyListeners(new  DataItem(period,  value,  notify));  [CE]  no  suitable  method  found  for  add(RegularTimePeriod,Double)  [CONTEXT]  public  void  add(RegularTimePeriod  period,  double  value,  boolean  notify)  {    [BUGGY]    this.data.add(period,  new  Double(value));  notifyListeners(new  DataItem(period,  value,  notify));  [BUGGY]  TimeSeriesDataItem  item  =  new  TimeSeriesDataItem(period,  value);  add(item,  notify);  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  double  value  boolean  notify  [VARIABLES]  boolean  notify  double  value  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.2581988897471611	574	574	1	replace	    this.data.add(period,  new  Double(value));  notifyListeners(new  DataItem(period,  value,  notify));		non-compiled	[CE]  no  suitable  method  found  for  add(RegularTimePeriod,Double)	52	None
2283	[BUG]  [BUGGY]    this.data.add(period,  new  Double(value));  notify  =  true;  [CE]  no  suitable  method  found  for  add(RegularTimePeriod,Double)  [CONTEXT]  public  void  add(RegularTimePeriod  period,  double  value,  boolean  notify)  {    [BUGGY]    this.data.add(period,  new  Double(value));  notify  =  true;  [BUGGY]  TimeSeriesDataItem  item  =  new  TimeSeriesDataItem(period,  value);  add(item,  notify);  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  double  value  boolean  notify  [VARIABLES]  boolean  notify  double  value  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.2581988897471611	574	574	1	replace	    this.data.add(period,  new  Double(value));  notify  =  true;		non-compiled	[CE]  no  suitable  method  found  for  add(RegularTimePeriod,Double)	52	None
2401	[BUG]  [BUGGY]    if(endIndex  <  0)  {  if(startIndex  >  endIndex)  {  throw  new  SeriesException( " ");  }  [CE]  illegal  start  of  expression  [CONTEXT]  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  [BUGGY]    if(endIndex  <  0)  {  if(startIndex  >  endIndex)  {  throw  new  SeriesException( " ");  }  [BUGGY]  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  }  if  (endIndex  <  0)  {  emptyRange  =  true;  }  if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  }  else  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	942	943	1	replace	    if(endIndex  <  0)  {  if(startIndex  >  endIndex)  {  throw  new  SeriesException( " ");  }		non-compiled	[CE]  illegal  start  of  expression	26	None
2402	[BUG]  [BUGGY]    if(endIndex  <  -1)  {  if(startIndex  >  endIndex)  {  throw  new  SeriesException( " ");  }  [CE]  illegal  start  of  expression  [CONTEXT]  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  [BUGGY]    if(endIndex  <  -1)  {  if(startIndex  >  endIndex)  {  throw  new  SeriesException( " ");  }  [BUGGY]  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  }  if  (endIndex  <  0)  {  emptyRange  =  true;  }  if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  }  else  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	942	943	1	replace	    if(endIndex  <  -1)  {  if(startIndex  >  endIndex)  {  throw  new  SeriesException( " ");  }		non-compiled	[CE]  illegal  start  of  expression	26	None
2461	[BUG]  [BUGGY]  if(this.added)  {  [CE]  cannot  find  symbol  added  [CONTEXT]  b.append( "You  are  attempting  to  add  an  observation  for   ");  b.append( "the  time  period   ");  b.append(item.getPeriod().toString());  b.append( "  but  the  series  already  contains  an  observation ");  b.append( "  for  that  time  period.  Duplicates  are  not   ");  b.append( "permitted.Try  using  the  addOrUpdate()  method. ");  throw  new  SeriesException(b.toString());  }  }  }  [BUGGY]  if(this.added)  {  [BUGGY]    if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  removeAgedItems(false);//  remove  old  items  if  necessary,  but    if  (notify)  {  fireSeriesChanged();  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	536	536	1	replace	if(this.added)  {	if  (added)  {  	non-compiled	[CE]  cannot  find  symbol  added	105	None
2462	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]  b.append( "You  are  attempting  to  add  an  observation  for   ");  b.append( "the  time  period   ");  b.append(item.getPeriod().toString());  b.append( "  but  the  series  already  contains  an  observation ");  b.append( "  for  that  time  period.  Duplicates  are  not   ");  b.append( "permitted.Try  using  the  addOrUpdate()  method. ");  throw  new  SeriesException(b.toString());  }  }  }  [BUGGY]  if(!added)  {  [BUGGY]    if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  removeAgedItems(false);//  remove  old  items  if  necessary,  but    if  (notify)  {  fireSeriesChanged();  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	536	536	1	add	if(!added)  {	if  (added)  {  	compilable	  [FE]  IllegalArgumentException	105	1
2463	[BUG]  [BUGGY]  if(!added)  {  [FE]  IllegalArgumentException  [CONTEXT]  b.append( "You  are  attempting  to  add  an  observation  for   ");  b.append( "the  time  period   ");  b.append(item.getPeriod().toString());  b.append( "  but  the  series  already  contains  an  observation ");  b.append( "  for  that  time  period.  Duplicates  are  not   ");  b.append( "permitted.Try  using  the  addOrUpdate()  method. ");  throw  new  SeriesException(b.toString());  }  }  }  [BUGGY]  if(!added)  {  [BUGGY]    if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  removeAgedItems(false);//  remove  old  items  if  necessary,  but    if  (notify)  {  fireSeriesChanged();  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	536	536	1	replace	if(!added)  {	if  (added)  {  	compilable	  [FE]  IllegalArgumentException	105	1
2521	[BUG]  [BUGGY]    TimeSeriesDataItem  item  =(TimeSeriesDataItem)this.data.get(last);  [CE]  variable  item  is  already  defined  in  method  add(TimeSeriesDataItem,boolean)  [CONTEXT]  if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  [BUGGY]    TimeSeriesDataItem  item  =(TimeSeriesDataItem)this.data.get(last);  [BUGGY]  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  added  =  true;  }  else  {  int  index  =  Collections.binarySearch(this.data,  item);  if  (index  <  0)  {  this.data.add(-index  -  1,  item);  added  =  true;  }  else  {  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	514	514	1	replace	    TimeSeriesDataItem  item  =(TimeSeriesDataItem)this.data.get(last);		non-compiled	[CE]  variable  item  is  already  defined  in  method  add(TimeSeriesDataItem,boolean)	100	None
2522	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]  if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  [BUGGY]    RegularTimePeriod  first  =  getTimePeriod(getItemCount()  -  1);  [BUGGY]  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  added  =  true;  }  else  {  int  index  =  Collections.binarySearch(this.data,  item);  if  (index  <  0)  {  this.data.add(-index  -  1,  item);  added  =  true;  }  else  {  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	514	514	1	add	    RegularTimePeriod  first  =  getTimePeriod(getItemCount()  -  1);		compilable	  [FE]  IllegalArgumentException	100	1
2523	[BUG]  [BUGGY]    RegularTimePeriod  first  =  getTimePeriod(getItemCount()  -  1);  [FE]  IllegalArgumentException  [CONTEXT]  if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  [BUGGY]    RegularTimePeriod  first  =  getTimePeriod(getItemCount()  -  1);  [BUGGY]  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  added  =  true;  }  else  {  int  index  =  Collections.binarySearch(this.data,  item);  if  (index  <  0)  {  this.data.add(-index  -  1,  item);  added  =  true;  }  else  {  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	514	514	1	replace	    RegularTimePeriod  first  =  getTimePeriod(getItemCount()  -  1);		compilable	  [FE]  IllegalArgumentException	100	1
2523	[BUG]  [BUGGY]    TimeSeriesDataItem  item  =(TimeSeriesDataItem)getDataItem(last);  [CE]  variable  item  is  already  defined  in  method  add(TimeSeriesDataItem,boolean)  [CONTEXT]  if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  [BUGGY]    TimeSeriesDataItem  item  =(TimeSeriesDataItem)getDataItem(last);  [BUGGY]  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  added  =  true;  }  else  {  int  index  =  Collections.binarySearch(this.data,  item);  if  (index  <  0)  {  this.data.add(-index  -  1,  item);  added  =  true;  }  else  {  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	514	514	1	replace	    TimeSeriesDataItem  item  =(TimeSeriesDataItem)getDataItem(last);		non-compiled	[CE]  variable  item  is  already  defined  in  method  add(TimeSeriesDataItem,boolean)	100	None
2702	[BUG]  [BUGGY]    this(name,  TimeZone.getDefault(),  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION);  [CE]  no  suitable  constructor  found  for  TimeSeries(Comparable,TimeZone,String,String)  [CONTEXT]  public  TimeSeries(Comparable  name,  Class  timePeriodClass)  {  [BUGGY]    this(name,  TimeZone.getDefault(),  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION);  [BUGGY]  this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,    timePeriodClass);  timePeriodClass);  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	155	156	1	replace	    this(name,  TimeZone.getDefault(),  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION);		non-compiled	[CE]  no  suitable  constructor  found  for  TimeSeries(Comparable,TimeZone,String,String)	58	None
2761	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException( "Requires  start  >=  0. ");  }  [BUGGY]    if(end  <  start)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  if  (end  <  start)  {  throw  new  IllegalArgumentException( "Requires  start  <=  end. ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	882	882	1	add	    if(end  <  start)  {  throw  new  IllegalArgumentException( " ");  }		compilable	  [FE]  IllegalArgumentException	36	1
2762	[BUG]  [BUGGY]    if(end  <  start)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [CONTEXT]  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException( "Requires  start  >=  0. ");  }  [BUGGY]    if(end  <  start)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  if  (end  <  start)  {  throw  new  IllegalArgumentException( "Requires  start  <=  end. ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	882	882	1	replace	    if(end  <  start)  {  throw  new  IllegalArgumentException( " ");  }		compilable	  [FE]  IllegalArgumentException	36	1
2762	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException( "Requires  start  >=  0. ");  }  [BUGGY]    if(start  >  end)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  if  (end  <  start)  {  throw  new  IllegalArgumentException( "Requires  start  <=  end. ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	882	882	1	add	    if(start  >  end)  {  throw  new  IllegalArgumentException( " ");  }		compilable	  [FE]  IllegalArgumentException	36	1
2763	[BUG]  [BUGGY]    if(start  >  end)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [CONTEXT]  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException( "Requires  start  >=  0. ");  }  [BUGGY]    if(start  >  end)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  if  (end  <  start)  {  throw  new  IllegalArgumentException( "Requires  start  <=  end. ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	882	882	1	replace	    if(start  >  end)  {  throw  new  IllegalArgumentException( " ");  }		compilable	  [FE]  IllegalArgumentException	36	1
2763	[BUG]  [BUGGY]    while(start  >  end)  {  if(end  <  start)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [CONTEXT]  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException( "Requires  start  >=  0. ");  }  [BUGGY]    while(start  >  end)  {  if(end  <  start)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  if  (end  <  start)  {  throw  new  IllegalArgumentException( "Requires  start  <=  end. ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	882	882	1	replace	    while(start  >  end)  {  if(end  <  start)  {  throw  new  IllegalArgumentException( " ");  }		non-compiled	[CE]  illegal  start  of  expression	36	None
2882	[BUG]  [BUGGY]    copy.data.add(this);  [CE]  package  copy  does  not  exist  [CONTEXT]  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  [BUGGY]    copy.data.add(this);  [BUGGY]  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period    endIndex  =  endIndex  -  1;  //  so  this  is  last  item  BEFORE  end    }  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  emptyRange  =  true;  }  if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  }  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	941	943	1	replace	    copy.data.add(this);		non-compiled	[CE]  package  copy  does  not  exist	24	None
3001	[BUG]  [BUGGY]    this.data  =  new  ArrayList();  [CE]  cannot  find  symbol  [CONTEXT]  public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;  [BUGGY]    this.data  =  new  ArrayList();  [BUGGY]  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	176	176	1	replace	    this.data  =  new  ArrayList();		non-compiled	[CE]  cannot  find  symbol	66	None
3002	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]  public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;  [BUGGY]    this.data  =  new  java.util.ArrayList();  [BUGGY]  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	176	176	1	add	    this.data  =  new  java.util.ArrayList();		compilable	  [FE]  IllegalArgumentException	66	1
3003	[BUG]  [BUGGY]    this.data  =  new  java.util.ArrayList();  [FE]  IllegalArgumentException  [CONTEXT]  public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;  [BUGGY]    this.data  =  new  java.util.ArrayList();  [BUGGY]  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	176	176	1	replace	    this.data  =  new  java.util.ArrayList();		compilable	  [FE]  IllegalArgumentException	66	1
3003	[BUG]  [BUGGY]    this.time  =  timePeriodClass.getTime();  [CE]  cannot  find  symbol  time  [CONTEXT]  public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;  [BUGGY]    this.time  =  timePeriodClass.getTime();  [BUGGY]  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	176	176	1	replace	    this.time  =  timePeriodClass.getTime();		non-compiled	[CE]  cannot  find  symbol  time	66	None
3062	[BUG]  [BUGGY]  final  boolean  emptyRange  =  false;  [CE]  cannot  assign  a  value  to  final  variable  emptyRange  [CONTEXT]  if  (start  ==  null)  {  throw  new  IllegalArgumentException( "Null  'start'  argument. ");  }  if  (end  ==  null)  {  throw  new  IllegalArgumentException( "Null  'end'  argument. ");  }  if  (start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException(   "Requires  start  on  or  before  end. ");  }  [BUGGY]  final  boolean  emptyRange  =  false;  [BUGGY]  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	931	931	1	replace	final  boolean  emptyRange  =  false;	boolean  emptyRange  =  false;  	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  emptyRange	9	None
3122	[BUG]  [BUGGY]  throw  new  SeriesException( " ");  [CE]  illegal  start  of  expression  [CONTEXT]  public  void  add(RegularTimePeriod  period,  double  value,  boolean  notify)  {  TimeSeriesDataItem  item  =  new  TimeSeriesDataItem(period,  value);  add(item,  notify);  [BUGGY]  throw  new  SeriesException( " ");  [BUGGY]    [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  double  value  boolean  notify  [VARIABLES]  boolean  notify  double  value  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.2581988897471611	576	576	1	replace	throw  new  SeriesException( " ");	}  	non-compiled	[CE]  illegal  start  of  expression	55	None
3182	[BUG]  [BUGGY]    java.util.ArrayList();  this.data  =  new  ArrayList();  [CE]  cannot  find  symbol  [CONTEXT]  public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  [BUGGY]    java.util.ArrayList();  this.data  =  new  ArrayList();  [BUGGY]  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	175	175	1	replace	    java.util.ArrayList();  this.data  =  new  ArrayList();		non-compiled	[CE]  cannot  find  symbol	64	None
3183	[BUG]  [BUGGY]    java.util.ArrayList();  this.domain  =  domain;  [CE]  cannot  find  symbol  [CONTEXT]  public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  [BUGGY]    java.util.ArrayList();  this.domain  =  domain;  [BUGGY]  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	175	175	1	replace	    java.util.ArrayList();  this.domain  =  domain;		non-compiled	[CE]  cannot  find  symbol	64	None
3242	[BUG]  [BUGGY]    this.data.add(period,  new  Long(value));  [CE]  no  suitable  constructor  found  for  Long(Number)  [CONTEXT]  public  void  add(RegularTimePeriod  period,  Number  value)  {    [BUGGY]    this.data.add(period,  new  Long(value));  [BUGGY]  add(period,  value,  true);  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  Number  value  [VARIABLES]  boolean  Number  value  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	588	588	1	replace	    this.data.add(period,  new  Long(value));		non-compiled	[CE]  no  suitable  constructor  found  for  Long(Number)	117	None
3243	[BUG]  [BUGGY]    this.data.add(period,  null);  [CE]  no  suitable  method  found  for  add(RegularTimePeriod,<null>)  [CONTEXT]  public  void  add(RegularTimePeriod  period,  Number  value)  {    [BUGGY]    this.data.add(period,  null);  [BUGGY]  add(period,  value,  true);  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  Number  value  [VARIABLES]  boolean  Number  value  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	588	588	1	replace	    this.data.add(period,  null);		non-compiled	[CE]  no  suitable  method  found  for  add(RegularTimePeriod,<null>)	117	None
3423	[BUG]  [BUGGY]    RegularTimePeriod  item  =  getTimePeriod(getItemCount()  -  1);  [CE]  variable  item  is  already  defined  in  method  add(TimeSeriesDataItem,boolean)  [CONTEXT]  if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {  [BUGGY]    RegularTimePeriod  item  =  getTimePeriod(getItemCount()  -  1);  [BUGGY]  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  added  =  true;  }  else  {  int  index  =  Collections.binarySearch(this.data,  item);  if  (index  <  0)  {  this.data.add(-index  -  1,  item);  added  =  true;  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	513	513	1	replace	    RegularTimePeriod  item  =  getTimePeriod(getItemCount()  -  1);		non-compiled	[CE]  variable  item  is  already  defined  in  method  add(TimeSeriesDataItem,boolean)	98	None
3481	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]  public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  [BUGGY]    long  last  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  [BUGGY]  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())  >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	741	741	1	add	    long  last  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();		compilable	  [FE]  IllegalArgumentException	129	1
3482	[BUG]  [BUGGY]    long  last  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  [FE]  IllegalArgumentException  [CONTEXT]  public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  [BUGGY]    long  last  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  [BUGGY]  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())  >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	741	741	1	replace	    long  last  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();		compilable	  [FE]  IllegalArgumentException	129	1
3482	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]  public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  [BUGGY]    long  maximumItemAge  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  [BUGGY]  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())  >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	741	741	1	add	    long  maximumItemAge  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();		compilable	  [FE]  IllegalArgumentException	129	1
3483	[BUG]  [BUGGY]    long  maximumItemAge  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  [FE]  IllegalArgumentException  [CONTEXT]  public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  [BUGGY]    long  maximumItemAge  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  [BUGGY]  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())  >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	741	741	1	replace	    long  maximumItemAge  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();		compilable	  [FE]  IllegalArgumentException	129	1
3483	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]  public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  [BUGGY]    long  maximumItemAge  =  getTimePeriod(0).getSerialIndex();  [BUGGY]  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())  >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	741	741	1	add	    long  maximumItemAge  =  getTimePeriod(0).getSerialIndex();		compilable	  [FE]  IllegalArgumentException	129	1
3484	[BUG]  [BUGGY]    long  maximumItemAge  =  getTimePeriod(0).getSerialIndex();  [FE]  IllegalArgumentException  [CONTEXT]  public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  [BUGGY]    long  maximumItemAge  =  getTimePeriod(0).getSerialIndex();  [BUGGY]  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())  >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	741	741	1	replace	    long  maximumItemAge  =  getTimePeriod(0).getSerialIndex();		compilable	  [FE]  IllegalArgumentException	129	1
3541	[BUG]  [BUGGY]    int  endIndex  =  getIndex(start);  [CE]  variable  endIndex  is  already  defined  in  method  createCopy(RegularTimePeriod,RegularTimePeriod)  [CONTEXT]  }  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);  [BUGGY]    int  endIndex  =  getIndex(start);  [BUGGY]  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series    endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period      endIndex  =  endIndex  -  1;  //  so  this  is  last  item  BEFORE  end  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  emptyRange  =  true;  }  if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	940	942	1	replace	    int  endIndex  =  getIndex(start);		non-compiled	[CE]  variable  endIndex  is  already  defined  in  method  createCopy(RegularTimePeriod,RegularTimePeriod)	22	None
3542	[BUG]  [BUGGY]    if(endIndex  <  0)  {  if(startIndex  >  endIndex)  {  emptyRange  =  true;  }  [CE]  illegal  start  of  expression  [CONTEXT]  }  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);  [BUGGY]    if(endIndex  <  0)  {  if(startIndex  >  endIndex)  {  emptyRange  =  true;  }  [BUGGY]  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series    endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period      endIndex  =  endIndex  -  1;  //  so  this  is  last  item  BEFORE  end  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  emptyRange  =  true;  }  if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	940	942	1	replace	    if(endIndex  <  0)  {  if(startIndex  >  endIndex)  {  emptyRange  =  true;  }		non-compiled	[CE]  illegal  start  of  expression	22	None
3543	[BUG]  [BUGGY]    if(endIndex  <  0)  {  if(startIndex  >  endIndex)  {  throw  new  SeriesException( " ");  }  [CE]  illegal  start  of  expression  [CONTEXT]  }  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);  [BUGGY]    if(endIndex  <  0)  {  if(startIndex  >  endIndex)  {  throw  new  SeriesException( " ");  }  [BUGGY]  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series    endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period      endIndex  =  endIndex  -  1;  //  so  this  is  last  item  BEFORE  end  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  emptyRange  =  true;  }  if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	940	942	1	replace	    if(endIndex  <  0)  {  if(startIndex  >  endIndex)  {  throw  new  SeriesException( " ");  }		non-compiled	[CE]  illegal  start  of  expression	22	None
3601	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]  public  TimeSeries(Comparable  name)  {  this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  Day.class);  [BUGGY]    fireSeriesChanged();  [BUGGY]  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Comparable)  Comparable  name  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.4082482904638631	144	144	1	add	    fireSeriesChanged();		compilable	  [FE]  IllegalArgumentException	40	1
3602	[BUG]  [BUGGY]    fireSeriesChanged();  [FE]  IllegalArgumentException  [CONTEXT]  public  TimeSeries(Comparable  name)  {  this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  Day.class);  [BUGGY]    fireSeriesChanged();  [BUGGY]  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Comparable)  Comparable  name  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.4082482904638631	144	144	1	replace	    fireSeriesChanged();		compilable	  [FE]  IllegalArgumentException	40	1
3602	[BUG]  [BUGGY]    peg(Calendar.getInstance());  [CE]  cannot  find  symbol  Calendar  [CONTEXT]  public  TimeSeries(Comparable  name)  {  this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  Day.class);  [BUGGY]    peg(Calendar.getInstance());  [BUGGY]  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Comparable)  Comparable  name  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.4082482904638631	144	144	1	replace	    peg(Calendar.getInstance());		non-compiled	[CE]  cannot  find  symbol  Calendar	40	None
3662	[BUG]  [BUGGY]  if(item.getPeriod().compareTo(last)>  0  &&  item.getYear().compareTo(last)  <  0)  {  [CE]  cannot  find  symbol  [CONTEXT]  if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  [BUGGY]  if(item.getPeriod().compareTo(last)>  0  &&  item.getYear().compareTo(last)  <  0)  {  [BUGGY]  this.data.add(item);  added  =  true;  }  else  {  int  index  =  Collections.binarySearch(this.data,  item);  if  (index  <  0)  {  this.data.add(-index  -  1,  item);  added  =  true;  }  else  {  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	514	514	1	replace	if(item.getPeriod().compareTo(last)>  0  &&  item.getYear().compareTo(last)  <  0)  {	if  (item.getPeriod().compareTo(last)  >  0)  {  	non-compiled	[CE]  cannot  find  symbol	99	None
3722	[BUG]  [BUGGY]  if(period  ==  null  ||  period.getItemCount()  <  0)  {  [CE]  cannot  find  symbol  [CONTEXT]  public  int  getIndex(RegularTimePeriod  period)  {  [BUGGY]  if(period  ==  null  ||  period.getItemCount()  <  0)  {  [BUGGY]  throw  new  IllegalArgumentException( "Null  'period'  argument. ");  }  TimeSeriesDataItem  dummy  =  new  TimeSeriesDataItem(  period,  Integer.MIN_VALUE);  return  Collections.binarySearch(this.data,  dummy);  }  [CLASS]  TimeSeries  [METHOD]  getIndex  [RETURN_TYPE]  int  RegularTimePeriod  period  [VARIABLES]  boolean  TimeSeriesDataItem  dummy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.3333333333333333	430	430	1	replace	if(period  ==  null  ||  period.getItemCount()  <  0)  {	if  (period  ==  null)  {  	non-compiled	[CE]  cannot  find  symbol	41	None
3902	[BUG]  [BUGGY]  int  startIndex  =  getIndex(start  +  1);  [CE]  bad  operand  types  for  binary  operator  '+'  [CONTEXT]  throw  new  IllegalArgumentException( "Null  'start'  argument. ");  }  if  (end  ==  null)  {  throw  new  IllegalArgumentException( "Null  'end'  argument. ");  }  if  (start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException(   "Requires  start  on  or  before  end. ");  }  boolean  emptyRange  =  false;  [BUGGY]  int  startIndex  =  getIndex(start  +  1);  [BUGGY]  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	932	932	1	replace	int  startIndex  =  getIndex(start  +  1);	int  startIndex  =  getIndex(start);  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	11	None
4022	[BUG]  [BUGGY]    setDataItem(name);  this.data.add(new  TimeSeries(name,  domain,  range,  timePeriodClass));  [CE]  cannot  find  symbol  [CONTEXT]  public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  [BUGGY]    setDataItem(name);  this.data.add(new  TimeSeries(name,  domain,  range,  timePeriodClass));  [BUGGY]  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	181	181	1	replace	    setDataItem(name);  this.data.add(new  TimeSeries(name,  domain,  range,  timePeriodClass));		non-compiled	[CE]  cannot  find  symbol	76	None
4081	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException( "Requires  start  >=  0. ");  }  if  (end  <  start)  {  [BUGGY]    if(end  <  start)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  throw  new  IllegalArgumentException( "Requires  start  <=  end. ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	883	883	1	add	    if(end  <  start)  {  throw  new  IllegalArgumentException( " ");  }		compilable	  [FE]  IllegalArgumentException	2	1
4082	[BUG]  [BUGGY]    if(end  <  start)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [CONTEXT]  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException( "Requires  start  >=  0. ");  }  if  (end  <  start)  {  [BUGGY]    if(end  <  start)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  throw  new  IllegalArgumentException( "Requires  start  <=  end. ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	883	883	1	replace	    if(end  <  start)  {  throw  new  IllegalArgumentException( " ");  }		compilable	  [FE]  IllegalArgumentException	2	1
4082	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException( "Requires  start  >=  0. ");  }  if  (end  <  start)  {  [BUGGY]    if(end  <  start)  {  throw  new  IllegalArgumentException( " ");  }  else  if(end  <  start)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  throw  new  IllegalArgumentException( "Requires  start  <=  end. ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	883	883	1	add	    if(end  <  start)  {  throw  new  IllegalArgumentException( " ");  }  else  if(end  <  start)  {  throw  new  IllegalArgumentException( " ");  }		compilable	  [FE]  IllegalArgumentException	2	1
4083	[BUG]  [BUGGY]    if(end  <  start)  {  throw  new  IllegalArgumentException( " ");  }  else  if(end  <  start)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [CONTEXT]  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException( "Requires  start  >=  0. ");  }  if  (end  <  start)  {  [BUGGY]    if(end  <  start)  {  throw  new  IllegalArgumentException( " ");  }  else  if(end  <  start)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  throw  new  IllegalArgumentException( "Requires  start  <=  end. ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	883	883	1	replace	    if(end  <  start)  {  throw  new  IllegalArgumentException( " ");  }  else  if(end  <  start)  {  throw  new  IllegalArgumentException( " ");  }		compilable	  [FE]  IllegalArgumentException	2	1
4083	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException( "Requires  start  >=  0. ");  }  if  (end  <  start)  {  [BUGGY]    if(end  <  start)  {  throw  new  IllegalArgumentException( " ");  }  else  if(end  <  start)  {  throw  new  IllegalArgumentException( "Requires  end  >=  0. ");  }  [BUGGY]  throw  new  IllegalArgumentException( "Requires  start  <=  end. ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	883	883	1	add	    if(end  <  start)  {  throw  new  IllegalArgumentException( " ");  }  else  if(end  <  start)  {  throw  new  IllegalArgumentException( "Requires  end  >=  0. ");  }		compilable	  [FE]  IllegalArgumentException	2	1
4084	[BUG]  [BUGGY]    if(end  <  start)  {  throw  new  IllegalArgumentException( " ");  }  else  if(end  <  start)  {  throw  new  IllegalArgumentException( "Requires  end  >=  0. ");  }  [FE]  IllegalArgumentException  [CONTEXT]  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException( "Requires  start  >=  0. ");  }  if  (end  <  start)  {  [BUGGY]    if(end  <  start)  {  throw  new  IllegalArgumentException( " ");  }  else  if(end  <  start)  {  throw  new  IllegalArgumentException( "Requires  end  >=  0. ");  }  [BUGGY]  throw  new  IllegalArgumentException( "Requires  start  <=  end. ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	883	883	1	replace	    if(end  <  start)  {  throw  new  IllegalArgumentException( " ");  }  else  if(end  <  start)  {  throw  new  IllegalArgumentException( "Requires  end  >=  0. ");  }		compilable	  [FE]  IllegalArgumentException	2	1
4141	[BUG]  [BUGGY]    for(int  i  =  0;  i  <  this.data.size();  i++)  {  TimePeriodClass  data  =(TimePeriodClass)this.data.get(i);  if(data  ==  null)  {  this.data.add(i);  }  [CE]  illegal  start  of  expression  [CONTEXT]  public  int  getItemCount()  {  [BUGGY]    for(int  i  =  0;  i  <  this.data.size();  i++)  {  TimePeriodClass  data  =(TimePeriodClass)this.data.get(i);  if(data  ==  null)  {  this.data.add(i);  }  [BUGGY]  return  this.data.size();  }  [CLASS]  TimeSeries  [METHOD]  getItemCount  [RETURN_TYPE]  int  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	240	240	1	replace	    for(int  i  =  0;  i  <  this.data.size();  i++)  {  TimePeriodClass  data  =(TimePeriodClass)this.data.get(i);  if(data  ==  null)  {  this.data.add(i);  }		non-compiled	[CE]  illegal  start  of  expression	78	None
4142	[BUG]  [BUGGY]    for(int  i  =  0;  i  <  this.data.size();  i++)  {  TimePeriodClass  data  =(TimePeriodClass)this.data.get(i);  if(data!=  null)  {  this.data.add(i);  }  [CE]  illegal  start  of  expression  [CONTEXT]  public  int  getItemCount()  {  [BUGGY]    for(int  i  =  0;  i  <  this.data.size();  i++)  {  TimePeriodClass  data  =(TimePeriodClass)this.data.get(i);  if(data!=  null)  {  this.data.add(i);  }  [BUGGY]  return  this.data.size();  }  [CLASS]  TimeSeries  [METHOD]  getItemCount  [RETURN_TYPE]  int  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	240	240	1	replace	    for(int  i  =  0;  i  <  this.data.size();  i++)  {  TimePeriodClass  data  =(TimePeriodClass)this.data.get(i);  if(data!=  null)  {  this.data.add(i);  }		non-compiled	[CE]  illegal  start  of  expression	78	None
4143	[BUG]  [BUGGY]    for(int  i  =  0;  i  <  this.data.size();  i++)  {  TimePeriodClass  timePeriodClass  =  getTimePeriodClass();  if(timePeriodClass.getItemCount()  ==  this.data.size())  {  this.data.  [CE]  <identifier>  expected  [CONTEXT]  public  int  getItemCount()  {  [BUGGY]    for(int  i  =  0;  i  <  this.data.size();  i++)  {  TimePeriodClass  timePeriodClass  =  getTimePeriodClass();  if(timePeriodClass.getItemCount()  ==  this.data.size())  {  this.data.  [BUGGY]  return  this.data.size();  }  [CLASS]  TimeSeries  [METHOD]  getItemCount  [RETURN_TYPE]  int  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	240	240	1	replace	    for(int  i  =  0;  i  <  this.data.size();  i++)  {  TimePeriodClass  timePeriodClass  =  getTimePeriodClass();  if(timePeriodClass.getItemCount()  ==  this.data.size())  {  this.data.		non-compiled	[CE]  <identifier>  expected	78	None
4201	[BUG]  [BUGGY]    int  startIndex  =  getIndex();  [CE]  variable  startIndex  is  already  defined  in  method  createCopy(RegularTimePeriod,RegularTimePeriod)  [CONTEXT]  if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  }  else  {  [BUGGY]    int  startIndex  =  getIndex();  [BUGGY]  return  createCopy(startIndex,  endIndex);  }  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	953	953	1	replace	    int  startIndex  =  getIndex();		non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  createCopy(RegularTimePeriod,RegularTimePeriod)	32	None
4202	[BUG]  [BUGGY]    int  startIndex  =  indexOf(startIndex);  [CE]  variable  startIndex  is  already  defined  in  method  createCopy(RegularTimePeriod,RegularTimePeriod)  [CONTEXT]  if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  }  else  {  [BUGGY]    int  startIndex  =  indexOf(startIndex);  [BUGGY]  return  createCopy(startIndex,  endIndex);  }  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	953	953	1	replace	    int  startIndex  =  indexOf(startIndex);		non-compiled	[CE]  variable  startIndex  is  already  defined  in  method  createCopy(RegularTimePeriod,RegularTimePeriod)	32	None
4262	[BUG]  [BUGGY]    if(startIndex  <  this.data.size())  {  if(startIndex  >  end)  {  emptyRange  =  true;  }  [CE]  illegal  start  of  expression  [CONTEXT]   "Requires  start  on  or  before  end. ");  }  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  [BUGGY]    if(startIndex  <  this.data.size())  {  if(startIndex  >  end)  {  emptyRange  =  true;  }  [BUGGY]  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  emptyRange  =  true;  }  if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	939	939	1	replace	    if(startIndex  <  this.data.size())  {  if(startIndex  >  end)  {  emptyRange  =  true;  }		non-compiled	[CE]  illegal  start  of  expression	20	None
4263	[BUG]  [BUGGY]    if(startIndex  <  this.data.size())  {  if(startIndex  >=  0)  {  emptyRange  =  true;  }  [CE]  illegal  start  of  expression  [CONTEXT]   "Requires  start  on  or  before  end. ");  }  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  [BUGGY]    if(startIndex  <  this.data.size())  {  if(startIndex  >=  0)  {  emptyRange  =  true;  }  [BUGGY]  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  emptyRange  =  true;  }  if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	939	939	1	replace	    if(startIndex  <  this.data.size())  {  if(startIndex  >=  0)  {  emptyRange  =  true;  }		non-compiled	[CE]  illegal  start  of  expression	20	None
4381	[BUG]  [BUGGY]    this.data.add(item,  notify);  [CE]  no  suitable  method  found  for  add(TimeSeriesDataItem,boolean)  [CONTEXT]  public  void  add(TimeSeriesDataItem  item,  boolean  notify)  {  [BUGGY]    this.data.add(item,  notify);  [BUGGY]  if  (item  ==  null)  {  throw  new  IllegalArgumentException( "Null  'item'  argument. ");  }  if  (!item.getPeriod().getClass().equals(this.timePeriodClass))  {  StringBuffer  b  =  new  StringBuffer();  b.append( "You  are  trying  to  add  data  where  the  time  period  class   ");  b.append( "is   ");  b.append(item.getPeriod().getClass().getName());  b.append( ",  but  the  TimeSeries  is  expecting  an  instance  of   ");  b.append(this.timePeriodClass.getName());  b.append( ". ");  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	491	491	1	replace	    this.data.add(item,  notify);		non-compiled	[CE]  no  suitable  method  found  for  add(TimeSeriesDataItem,boolean)	84	None
4383	[BUG]  [BUGGY]    if(item!=  null)  {  throw  new  IllegalArgumentException( " ");  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  unreachable  statement  [CONTEXT]  public  void  add(TimeSeriesDataItem  item,  boolean  notify)  {  [BUGGY]    if(item!=  null)  {  throw  new  IllegalArgumentException( " ");  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  if  (item  ==  null)  {  throw  new  IllegalArgumentException( "Null  'item'  argument. ");  }  if  (!item.getPeriod().getClass().equals(this.timePeriodClass))  {  StringBuffer  b  =  new  StringBuffer();  b.append( "You  are  trying  to  add  data  where  the  time  period  class   ");  b.append( "is   ");  b.append(item.getPeriod().getClass().getName());  b.append( ",  but  the  TimeSeries  is  expecting  an  instance  of   ");  b.append(this.timePeriodClass.getName());  b.append( ". ");  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	491	491	1	replace	    if(item!=  null)  {  throw  new  IllegalArgumentException( " ");  }  else  {  throw  new  IllegalArgumentException( " ");  }		non-compiled	[CE]  unreachable  statement	84	None
4443	[BUG]  [BUGGY]    item.setValue(value,  notify);  [CE]  method  setValue  in  class  TimeSeriesDataItem  cannot  be  applied  to  given  types;  [CONTEXT]  public  void  add(RegularTimePeriod  period,  Number  value,  boolean  notify)  {  TimeSeriesDataItem  item  =  new  TimeSeriesDataItem(period,  value);  [BUGGY]    item.setValue(value,  notify);  [BUGGY]  add(item,  notify);  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  Number  value  boolean  notify  [VARIABLES]  boolean  notify  Number  value  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	603	603	1	replace	    item.setValue(value,  notify);		non-compiled	[CE]  method  setValue  in  class  TimeSeriesDataItem  cannot  be  applied  to  given  types;	123	None
4501	[BUG]  [BUGGY]    dummy.setValue(period.getValue());  [CE]  cannot  find  symbol  [CONTEXT]  public  int  getIndex(RegularTimePeriod  period)  {  if  (period  ==  null)  {  throw  new  IllegalArgumentException( "Null  'period'  argument. ");  }  TimeSeriesDataItem  dummy  =  new  TimeSeriesDataItem(  period,  Integer.MIN_VALUE);  [BUGGY]    dummy.setValue(period.getValue());  [BUGGY]  return  Collections.binarySearch(this.data,  dummy);  }  [CLASS]  TimeSeries  [METHOD]  getIndex  [RETURN_TYPE]  int  RegularTimePeriod  period  [VARIABLES]  boolean  TimeSeriesDataItem  dummy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.3333333333333333	435	435	1	replace	    dummy.setValue(period.getValue());		non-compiled	[CE]  cannot  find  symbol	46	None
4502	[BUG]  [BUGGY]    dummy.setValue(period.getValue()  +  1);  [CE]  cannot  find  symbol  [CONTEXT]  public  int  getIndex(RegularTimePeriod  period)  {  if  (period  ==  null)  {  throw  new  IllegalArgumentException( "Null  'period'  argument. ");  }  TimeSeriesDataItem  dummy  =  new  TimeSeriesDataItem(  period,  Integer.MIN_VALUE);  [BUGGY]    dummy.setValue(period.getValue()  +  1);  [BUGGY]  return  Collections.binarySearch(this.data,  dummy);  }  [CLASS]  TimeSeries  [METHOD]  getIndex  [RETURN_TYPE]  int  RegularTimePeriod  period  [VARIABLES]  boolean  TimeSeriesDataItem  dummy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.3333333333333333	435	435	1	replace	    dummy.setValue(period.getValue()  +  1);		non-compiled	[CE]  cannot  find  symbol	46	None
4503	[BUG]  [BUGGY]    dummy.setPeriod(period);  [CE]  cannot  find  symbol  [CONTEXT]  public  int  getIndex(RegularTimePeriod  period)  {  if  (period  ==  null)  {  throw  new  IllegalArgumentException( "Null  'period'  argument. ");  }  TimeSeriesDataItem  dummy  =  new  TimeSeriesDataItem(  period,  Integer.MIN_VALUE);  [BUGGY]    dummy.setPeriod(period);  [BUGGY]  return  Collections.binarySearch(this.data,  dummy);  }  [CLASS]  TimeSeries  [METHOD]  getIndex  [RETURN_TYPE]  int  RegularTimePeriod  period  [VARIABLES]  boolean  TimeSeriesDataItem  dummy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.3333333333333333	435	435	1	replace	    dummy.setPeriod(period);		non-compiled	[CE]  cannot  find  symbol	46	None
4742	[BUG]  [BUGGY]  if(getItemCount(1)  >  this.maximumItemAge)  {  [CE]  no  suitable  method  found  for  getItemCount(int)  [CONTEXT]  public  void  removeAgedItems(boolean  notify)  {    [BUGGY]  if(getItemCount(1)  >  this.maximumItemAge)  {  [BUGGY]  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())  >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	740	740	1	replace	if(getItemCount(1)  >  this.maximumItemAge)  {	if  (getItemCount()  >  1)  {  	non-compiled	[CE]  no  suitable  method  found  for  getItemCount(int)	126	None
4801	[BUG]  [BUGGY]  int  count  =  getItemCount  -  1;  [CE]  cannot  find  symbol  getItemCount  [CONTEXT]  b.append( "is   ");  b.append(item.getPeriod().getClass().getName());  b.append( ",  but  the  TimeSeries  is  expecting  an  instance  of   ");  b.append(this.timePeriodClass.getName());  b.append( ". ");  throw  new  SeriesException(b.toString());  }  boolean  added  =  false;  [BUGGY]  int  count  =  getItemCount  -  1;  [BUGGY]  if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  added  =  true;  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	507	507	1	replace	int  count  =  getItemCount  -  1;	int  count  =  getItemCount();  	non-compiled	[CE]  cannot  find  symbol  getItemCount	89	None
4862	[BUG]  [BUGGY]  this.maximumItemCount  =  long.MAX_VALUE;  [CE]  class  expected  [CONTEXT]  public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  [BUGGY]  this.maximumItemCount  =  long.MAX_VALUE;  [BUGGY]  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	179	179	1	replace	this.maximumItemCount  =  long.MAX_VALUE;	this.maximumItemCount  =  Integer.MAX_VALUE;  	non-compiled	[CE]  class  expected	71	None
4921	[BUG]  [BUGGY]    for(int  index  =  0;  index  <  this.data.size();  i++)  {  TimeSeriesDataItem  item  =(TimeSeriesDataItem)this.data.get(index);  if(item  ==  null)  {  fireSeriesChanged();  }  [CE]  illegal  start  of  expression  [CONTEXT]  public  TimeSeriesDataItem  getDataItem(int  index)  {  [BUGGY]    for(int  index  =  0;  index  <  this.data.size();  i++)  {  TimeSeriesDataItem  item  =(TimeSeriesDataItem)this.data.get(index);  if(item  ==  null)  {  fireSeriesChanged();  }  [BUGGY]  return  (TimeSeriesDataItem)  this.data.get(index);  }  [CLASS]  TimeSeries  [METHOD]  getDataItem  [RETURN_TYPE]  TimeSeriesDataItem  int  index  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  long  maximumItemAge  periods  serialVersionUID  int  count  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	341	341	1	replace	    for(int  index  =  0;  index  <  this.data.size();  i++)  {  TimeSeriesDataItem  item  =(TimeSeriesDataItem)this.data.get(index);  if(item  ==  null)  {  fireSeriesChanged();  }		non-compiled	[CE]  illegal  start  of  expression	80	None
4922	[BUG]  [BUGGY]    for(int  index  =  0;  index  <  this.data.size();  i++)  {  TimeSeriesDataItem  item  =(TimeSeriesDataItem)this.data.get(index);  if(item  ==  null)  {  throw  new  IllegalArgumentException( "TimeSeriesDataItem  [CE]  unclosed  string  literal  [CONTEXT]  public  TimeSeriesDataItem  getDataItem(int  index)  {  [BUGGY]    for(int  index  =  0;  index  <  this.data.size();  i++)  {  TimeSeriesDataItem  item  =(TimeSeriesDataItem)this.data.get(index);  if(item  ==  null)  {  throw  new  IllegalArgumentException( "TimeSeriesDataItem  [BUGGY]  return  (TimeSeriesDataItem)  this.data.get(index);  }  [CLASS]  TimeSeries  [METHOD]  getDataItem  [RETURN_TYPE]  TimeSeriesDataItem  int  index  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  long  maximumItemAge  periods  serialVersionUID  int  count  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	341	341	1	replace	    for(int  index  =  0;  index  <  this.data.size();  i++)  {  TimeSeriesDataItem  item  =(TimeSeriesDataItem)this.data.get(index);  if(item  ==  null)  {  throw  new  IllegalArgumentException( "TimeSeriesDataItem		non-compiled	[CE]  unclosed  string  literal	80	None
4923	[BUG]  [BUGGY]    for(int  index  =  0;  index  <  this.data.size();  ++index)  {  TimeSeriesDataItem.getDataItem(index);  }  [CE]  variable  index  is  already  defined  in  method  getDataItem(int)  [CONTEXT]  public  TimeSeriesDataItem  getDataItem(int  index)  {  [BUGGY]    for(int  index  =  0;  index  <  this.data.size();  ++index)  {  TimeSeriesDataItem.getDataItem(index);  }  [BUGGY]  return  (TimeSeriesDataItem)  this.data.get(index);  }  [CLASS]  TimeSeries  [METHOD]  getDataItem  [RETURN_TYPE]  TimeSeriesDataItem  int  index  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  long  maximumItemAge  periods  serialVersionUID  int  count  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	341	341	1	replace	    for(int  index  =  0;  index  <  this.data.size();  ++index)  {  TimeSeriesDataItem.getDataItem(index);  }		non-compiled	[CE]  variable  index  is  already  defined  in  method  getDataItem(int)	80	None
4982	[BUG]  [BUGGY]  return  createCopy(startIndex,  endIndex,  copy.data);  [CE]  cannot  find  symbol  copy  [CONTEXT]  if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  }  else  {  [BUGGY]  return  createCopy(startIndex,  endIndex,  copy.data);  [BUGGY]  }  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	953	953	1	replace	return  createCopy(startIndex,  endIndex,  copy.data);	return  createCopy(startIndex,  endIndex);  	non-compiled	[CE]  cannot  find  symbol  copy	31	None
5042	[BUG]  [BUGGY]  if(startIndex  ==  this.data.size()  ||  startIndex  >  end)  {  [CE]  bad  operand  types  for  binary  operator  '>'  [CONTEXT]  throw  new  IllegalArgumentException( "Null  'end'  argument. ");  }  if  (start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException(   "Requires  start  on  or  before  end. ");  }  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  [BUGGY]  if(startIndex  ==  this.data.size()  ||  startIndex  >  end)  {  [BUGGY]  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  emptyRange  =  true;  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	935	935	1	replace	if(startIndex  ==  this.data.size()  ||  startIndex  >  end)  {	if  (startIndex  ==  this.data.size())  {  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>'	17	None
5102	[BUG]  [BUGGY]    item.addChangeListener(this);  [CE]  cannot  find  symbol  [CONTEXT]  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  removeAgedItems(false);//  remove  old  items  if  necessary,  but    [BUGGY]    item.addChangeListener(this);  [BUGGY]  if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	545	545	1	replace	    item.addChangeListener(this);		non-compiled	[CE]  cannot  find  symbol	112	None
5103	[BUG]  [BUGGY]    item.setDataItem(getItemCount()  -  1);  [CE]  cannot  find  symbol  [CONTEXT]  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  removeAgedItems(false);//  remove  old  items  if  necessary,  but    [BUGGY]    item.setDataItem(getItemCount()  -  1);  [BUGGY]  if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	545	545	1	replace	    item.setDataItem(getItemCount()  -  1);		non-compiled	[CE]  cannot  find  symbol	112	None
5161	[BUG]  [BUGGY]  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  &&  start  <  [CE]  illegal  start  of  expression  [CONTEXT]  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  [BUGGY]  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  &&  start  <  [BUGGY]  }  if  (endIndex  <  0)  {  emptyRange  =  true;  }  if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  }  else  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	942	943	1	replace	endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  &&  start  <	endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  	non-compiled	[CE]  illegal  start  of  expression	25	None
5162	[BUG]  [BUGGY]  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  &&  start  }  [CE]  illegal  start  of  expression  [CONTEXT]  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  [BUGGY]  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  &&  start  }  [BUGGY]  }  if  (endIndex  <  0)  {  emptyRange  =  true;  }  if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  }  else  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	942	943	1	replace	endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  &&  start  }	endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  	non-compiled	[CE]  illegal  start  of  expression	25	None
5281	[BUG]  [BUGGY]    while(item.getPeriod()!=  null)  {  this.data.add(item);  [CE]  illegal  start  of  expression  [CONTEXT]  b.append( "You  are  trying  to  add  data  where  the  time  period  class   ");  b.append( "is   ");  b.append(item.getPeriod().getClass().getName());  b.append( ",  but  the  TimeSeries  is  expecting  an  instance  of   ");  b.append(this.timePeriodClass.getName());  b.append( ". ");  throw  new  SeriesException(b.toString());  }    [BUGGY]    while(item.getPeriod()!=  null)  {  this.data.add(item);  [BUGGY]  boolean  added  =  false;  int  count  =  getItemCount();  if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  added  =  true;  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	506	506	1	replace	    while(item.getPeriod()!=  null)  {  this.data.add(item);		non-compiled	[CE]  illegal  start  of  expression	88	None
5283	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]  b.append( "You  are  trying  to  add  data  where  the  time  period  class   ");  b.append( "is   ");  b.append(item.getPeriod().getClass().getName());  b.append( ",  but  the  TimeSeries  is  expecting  an  instance  of   ");  b.append(this.timePeriodClass.getName());  b.append( ". ");  throw  new  SeriesException(b.toString());  }    [BUGGY]    fireSeriesChanged();  [BUGGY]  boolean  added  =  false;  int  count  =  getItemCount();  if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  added  =  true;  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	506	506	1	add	    fireSeriesChanged();		compilable	  [FE]  IllegalArgumentException	88	1
5284	[BUG]  [BUGGY]    fireSeriesChanged();  [FE]  IllegalArgumentException  [CONTEXT]  b.append( "You  are  trying  to  add  data  where  the  time  period  class   ");  b.append( "is   ");  b.append(item.getPeriod().getClass().getName());  b.append( ",  but  the  TimeSeries  is  expecting  an  instance  of   ");  b.append(this.timePeriodClass.getName());  b.append( ". ");  throw  new  SeriesException(b.toString());  }    [BUGGY]    fireSeriesChanged();  [BUGGY]  boolean  added  =  false;  int  count  =  getItemCount();  if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  added  =  true;  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	506	506	1	replace	    fireSeriesChanged();		compilable	  [FE]  IllegalArgumentException	88	1
5341	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]  b.append(this.timePeriodClass.getName());  b.append( ". ");  throw  new  SeriesException(b.toString());  }  boolean  added  =  false;  int  count  =  getItemCount();  if  (count  ==  0)  {  this.data.add(item);  [BUGGY]    fireSeriesChanged();  [BUGGY]  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  added  =  true;  }  else  {  int  index  =  Collections.binarySearch(this.data,  item);  if  (index  <  0)  {  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	510	510	1	add	    fireSeriesChanged();		compilable	  [FE]  IllegalArgumentException	96	1
5342	[BUG]  [BUGGY]    fireSeriesChanged();  [FE]  IllegalArgumentException  [CONTEXT]  b.append(this.timePeriodClass.getName());  b.append( ". ");  throw  new  SeriesException(b.toString());  }  boolean  added  =  false;  int  count  =  getItemCount();  if  (count  ==  0)  {  this.data.add(item);  [BUGGY]    fireSeriesChanged();  [BUGGY]  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  added  =  true;  }  else  {  int  index  =  Collections.binarySearch(this.data,  item);  if  (index  <  0)  {  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	510	510	1	replace	    fireSeriesChanged();		compilable	  [FE]  IllegalArgumentException	96	1
5342	[BUG]  [BUGGY]    if(notify)  {  if(item.getPeriod().compareTo(count)>  0)  {  this.data.add(item);  }  [CE]  illegal  start  of  expression  [CONTEXT]  b.append(this.timePeriodClass.getName());  b.append( ". ");  throw  new  SeriesException(b.toString());  }  boolean  added  =  false;  int  count  =  getItemCount();  if  (count  ==  0)  {  this.data.add(item);  [BUGGY]    if(notify)  {  if(item.getPeriod().compareTo(count)>  0)  {  this.data.add(item);  }  [BUGGY]  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  added  =  true;  }  else  {  int  index  =  Collections.binarySearch(this.data,  item);  if  (index  <  0)  {  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	510	510	1	replace	    if(notify)  {  if(item.getPeriod().compareTo(count)>  0)  {  this.data.add(item);  }		non-compiled	[CE]  illegal  start  of  expression	96	None
5343	[BUG]  [BUGGY]    if(notify)  {  if(item.getPeriod().compareTo( " ")>  0)  {  this.data.add(item);  }  [CE]  illegal  start  of  expression  [CONTEXT]  b.append(this.timePeriodClass.getName());  b.append( ". ");  throw  new  SeriesException(b.toString());  }  boolean  added  =  false;  int  count  =  getItemCount();  if  (count  ==  0)  {  this.data.add(item);  [BUGGY]    if(notify)  {  if(item.getPeriod().compareTo( " ")>  0)  {  this.data.add(item);  }  [BUGGY]  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  added  =  true;  }  else  {  int  index  =  Collections.binarySearch(this.data,  item);  if  (index  <  0)  {  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	510	510	1	replace	    if(notify)  {  if(item.getPeriod().compareTo( " ")>  0)  {  this.data.add(item);  }		non-compiled	[CE]  illegal  start  of  expression	96	None
5403	[BUG]  [BUGGY]    while(start  =  getStart())  {  if(start.compareTo(start)>  0)  {  throw  new  IllegalArgumentException( "Requires  start  on  or  before  end. ");  }  [CE]  illegal  start  of  expression  [CONTEXT]  throws  CloneNotSupportedException  {  if  (start  ==  null)  {  throw  new  IllegalArgumentException( "Null  'start'  argument. ");  }  if  (end  ==  null)  {  throw  new  IllegalArgumentException( "Null  'end'  argument. ");  }  [BUGGY]    while(start  =  getStart())  {  if(start.compareTo(start)>  0)  {  throw  new  IllegalArgumentException( "Requires  start  on  or  before  end. ");  }  [BUGGY]  if  (start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException(   "Requires  start  on  or  before  end. ");  }  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	927	927	1	replace	    while(start  =  getStart())  {  if(start.compareTo(start)>  0)  {  throw  new  IllegalArgumentException( "Requires  start  on  or  before  end. ");  }		non-compiled	[CE]  illegal  start  of  expression	8	None
5521	[BUG]  [BUGGY]    if(startIndex  <  this.data.size())  {  if(startIndex  >  end)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [CONTEXT]  if  (end  ==  null)  {  throw  new  IllegalArgumentException( "Null  'end'  argument. ");  }  if  (start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException(   "Requires  start  on  or  before  end. ");  }  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  [BUGGY]    if(startIndex  <  this.data.size())  {  if(startIndex  >  end)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	934	934	1	replace	    if(startIndex  <  this.data.size())  {  if(startIndex  >  end)  {  throw  new  IllegalArgumentException( " ");  }		non-compiled	[CE]  illegal  start  of  expression	16	None
5523	[BUG]  [BUGGY]    if(startIndex  <  this.data.size())  {  if(startIndex  >  end)  {  emptyRange  =  true;  }  [CE]  illegal  start  of  expression  [CONTEXT]  if  (end  ==  null)  {  throw  new  IllegalArgumentException( "Null  'end'  argument. ");  }  if  (start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException(   "Requires  start  on  or  before  end. ");  }  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  [BUGGY]    if(startIndex  <  this.data.size())  {  if(startIndex  >  end)  {  emptyRange  =  true;  }  [BUGGY]  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	934	934	1	replace	    if(startIndex  <  this.data.size())  {  if(startIndex  >  end)  {  emptyRange  =  true;  }		non-compiled	[CE]  illegal  start  of  expression	16	None
5582	[BUG]  [BUGGY]    startIndex  =  getIndex(startIndex);  [CE]  method  getIndex  in  class  TimeSeries  cannot  be  applied  to  given  types;  [CONTEXT]  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  emptyRange  =  true;  }  [BUGGY]    startIndex  =  getIndex(startIndex);  [BUGGY]  if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  }  else  {  return  createCopy(startIndex,  endIndex);  }  }  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	947	947	1	replace	    startIndex  =  getIndex(startIndex);		non-compiled	[CE]  method  getIndex  in  class  TimeSeries  cannot  be  applied  to  given  types;	30	None
5583	[BUG]  [BUGGY]    java.util.ArrayList();  [CE]  cannot  find  symbol  [CONTEXT]  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  emptyRange  =  true;  }  [BUGGY]    java.util.ArrayList();  [BUGGY]  if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  }  else  {  return  createCopy(startIndex,  endIndex);  }  }  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	947	947	1	replace	    java.util.ArrayList();		non-compiled	[CE]  cannot  find  symbol	30	None
5642	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]  public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  [BUGGY]    long  maximum  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  [BUGGY]  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())  >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	742	742	1	add	    long  maximum  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();		compilable	  [FE]  IllegalArgumentException	131	1
5643	[BUG]  [BUGGY]    long  maximum  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  [FE]  IllegalArgumentException  [CONTEXT]  public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  [BUGGY]    long  maximum  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  [BUGGY]  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())  >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	742	742	1	replace	    long  maximum  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();		compilable	  [FE]  IllegalArgumentException	131	1
5643	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]  public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  [BUGGY]    long  maximumItemAge  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  [BUGGY]  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())  >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	742	742	1	add	    long  maximumItemAge  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();		compilable	  [FE]  IllegalArgumentException	131	1
5644	[BUG]  [BUGGY]    long  maximumItemAge  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  [FE]  IllegalArgumentException  [CONTEXT]  public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  [BUGGY]    long  maximumItemAge  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  [BUGGY]  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())  >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	742	742	1	replace	    long  maximumItemAge  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();		compilable	  [FE]  IllegalArgumentException	131	1
5701	[BUG]  [BUGGY]    this.data.add(period,  new  Double(value));  [CE]  no  suitable  method  found  for  add(RegularTimePeriod,Double)  [CONTEXT]  public  void  add(RegularTimePeriod  period,  double  value)  {    [BUGGY]    this.data.add(period,  new  Double(value));  [BUGGY]  add(period,  value,  true);  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  double  value  [VARIABLES]  boolean  double  value  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.2581988897471611	561	561	1	replace	    this.data.add(period,  new  Double(value));		non-compiled	[CE]  no  suitable  method  found  for  add(RegularTimePeriod,Double)	48	None
5882	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]  throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  [BUGGY]    fireSeriesChanged();  [BUGGY]  removeAgedItems(false);//  remove  old  items  if  necessary,  but          //  don't  notify  anyone,  because  that                    //  happens  next  anyway...    if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	542	544	1	add	    fireSeriesChanged();		compilable	  [FE]  IllegalArgumentException	110	1
5883	[BUG]  [BUGGY]    fireSeriesChanged();  [FE]  IllegalArgumentException  [CONTEXT]  throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  [BUGGY]    fireSeriesChanged();  [BUGGY]  removeAgedItems(false);//  remove  old  items  if  necessary,  but          //  don't  notify  anyone,  because  that                    //  happens  next  anyway...    if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	542	544	1	replace	    fireSeriesChanged();		compilable	  [FE]  IllegalArgumentException	110	1
5883	[BUG]  [BUGGY]    b.setItem(item);  [CE]  cannot  find  symbol  b  [CONTEXT]  throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  [BUGGY]    b.setItem(item);  [BUGGY]  removeAgedItems(false);//  remove  old  items  if  necessary,  but          //  don't  notify  anyone,  because  that                    //  happens  next  anyway...    if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	542	544	1	replace	    b.setItem(item);		non-compiled	[CE]  cannot  find  symbol  b	110	None
6003	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]  b.append( "You  are  attempting  to  add  an  observation  for   ");  b.append( "the  time  period   ");  b.append(item.getPeriod().toString());  b.append( "  but  the  series  already  contains  an  observation ");  b.append( "  for  that  time  period.  Duplicates  are  not   ");  b.append( "permitted.Try  using  the  addOrUpdate()  method. ");  throw  new  SeriesException(b.toString());  }  }  }  [BUGGY]    fireSeriesChanged();  [BUGGY]  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  removeAgedItems(false);//  remove  old  items  if  necessary,  but    if  (notify)  {  fireSeriesChanged();  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	536	536	1	add	    fireSeriesChanged();		compilable	  [FE]  IllegalArgumentException	106	1
6004	[BUG]  [BUGGY]    fireSeriesChanged();  [FE]  IllegalArgumentException  [CONTEXT]  b.append( "You  are  attempting  to  add  an  observation  for   ");  b.append( "the  time  period   ");  b.append(item.getPeriod().toString());  b.append( "  but  the  series  already  contains  an  observation ");  b.append( "  for  that  time  period.  Duplicates  are  not   ");  b.append( "permitted.Try  using  the  addOrUpdate()  method. ");  throw  new  SeriesException(b.toString());  }  }  }  [BUGGY]    fireSeriesChanged();  [BUGGY]  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  removeAgedItems(false);//  remove  old  items  if  necessary,  but    if  (notify)  {  fireSeriesChanged();  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	536	536	1	replace	    fireSeriesChanged();		compilable	  [FE]  IllegalArgumentException	106	1
6062	[BUG]  [BUGGY]  final  boolean  removed  =  false;  [CE]  cannot  assign  a  value  to  final  variable  removed  [CONTEXT]  public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  [BUGGY]  final  boolean  removed  =  false;  [BUGGY]  while  ((latest  -  getTimePeriod(0).getSerialIndex())  >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	742	742	1	replace	final  boolean  removed  =  false;	boolean  removed  =  false;  	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  removed	130	None
6181	[BUG]  [BUGGY]    this.data  =  new  ArrayList();  [CE]  cannot  find  symbol  [CONTEXT]  public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;  this.range  =  range;  [BUGGY]    this.data  =  new  ArrayList();  [BUGGY]  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	177	177	1	replace	    this.data  =  new  ArrayList();		non-compiled	[CE]  cannot  find  symbol	68	None
6182	[BUG]  [BUGGY]    this.maximumItemCount  =  Math.max(0,  timePeriodClass);  [CE]  no  suitable  method  found  for  max(int,Class)  [CONTEXT]  public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;  this.range  =  range;  [BUGGY]    this.maximumItemCount  =  Math.max(0,  timePeriodClass);  [BUGGY]  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	177	177	1	replace	    this.maximumItemCount  =  Math.max(0,  timePeriodClass);		non-compiled	[CE]  no  suitable  method  found  for  max(int,Class)	68	None
6183	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]  public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;  this.range  =  range;  [BUGGY]    this.data  =  new  java.util.ArrayList();  [BUGGY]  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	177	177	1	add	    this.data  =  new  java.util.ArrayList();		compilable	  [FE]  IllegalArgumentException	68	1
6184	[BUG]  [BUGGY]    this.data  =  new  java.util.ArrayList();  [FE]  IllegalArgumentException  [CONTEXT]  public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;  this.range  =  range;  [BUGGY]    this.data  =  new  java.util.ArrayList();  [BUGGY]  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	177	177	1	replace	    this.data  =  new  java.util.ArrayList();		compilable	  [FE]  IllegalArgumentException	68	1
6302	[BUG]  [BUGGY]  return  getDataItem(index).getPeriod(0);  [CE]  method  getPeriod  in  class  TimeSeriesDataItem  cannot  be  applied  to  given  types;  [CONTEXT]  public  RegularTimePeriod  getTimePeriod(int  index)  {  [BUGGY]  return  getDataItem(index).getPeriod(0);  [BUGGY]  }  [CLASS]  TimeSeries  [METHOD]  getTimePeriod  [RETURN_TYPE]  RegularTimePeriod  int  index  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  long  maximumItemAge  periods  serialVersionUID  int  count  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	372	372	1	replace	return  getDataItem(index).getPeriod(0);	return  getDataItem(index).getPeriod();  	non-compiled	[CE]  method  getPeriod  in  class  TimeSeriesDataItem  cannot  be  applied  to  given  types;	81	None
6422	[BUG]  [BUGGY]  if(end  <  start  ||  end  >  length)  {  [CE]  cannot  find  symbol  length  [CONTEXT]  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException( "Requires  start  >=  0. ");  }  [BUGGY]  if(end  <  start  ||  end  >  length)  {  [BUGGY]  throw  new  IllegalArgumentException( "Requires  start  <=  end. ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	882	882	1	replace	if(end  <  start  ||  end  >  length)  {	if  (end  <  start)  {  	non-compiled	[CE]  cannot  find  symbol  length	35	None
6482	[BUG]  [BUGGY]    if(startIndex  <  this.data.size())  {  if(startIndex  >  end)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [CONTEXT]  throw  new  IllegalArgumentException( "Null  'end'  argument. ");  }  if  (start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException(   "Requires  start  on  or  before  end. ");  }  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  [BUGGY]    if(startIndex  <  this.data.size())  {  if(startIndex  >  end)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  emptyRange  =  true;  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	935	935	1	replace	    if(startIndex  <  this.data.size())  {  if(startIndex  >  end)  {  throw  new  IllegalArgumentException( " ");  }		non-compiled	[CE]  illegal  start  of  expression	18	None
6483	[BUG]  [BUGGY]    while(startIndex  <  this.data.size())  {  startIndex  =  -(startIndex  -  1);  [CE]  illegal  start  of  expression  [CONTEXT]  throw  new  IllegalArgumentException( "Null  'end'  argument. ");  }  if  (start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException(   "Requires  start  on  or  before  end. ");  }  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  [BUGGY]    while(startIndex  <  this.data.size())  {  startIndex  =  -(startIndex  -  1);  [BUGGY]  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  emptyRange  =  true;  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	935	935	1	replace	    while(startIndex  <  this.data.size())  {  startIndex  =  -(startIndex  -  1);		non-compiled	[CE]  illegal  start  of  expression	18	None
6541	[BUG]  [BUGGY]    this();  [CE]  no  suitable  constructor  found  for  TimeSeries()  [CONTEXT]  public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  [BUGGY]    this();  [BUGGY]  super(name);  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	174	174	1	replace	    this();		non-compiled	[CE]  no  suitable  constructor  found  for  TimeSeries()	62	None
6543	[BUG]  [BUGGY]    super();  [CE]  no  suitable  constructor  found  for  Series()  [CONTEXT]  public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  [BUGGY]    super();  [BUGGY]  super(name);  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	174	174	1	replace	    super();		non-compiled	[CE]  no  suitable  constructor  found  for  Series()	62	None
6602	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]  public  int  getIndex(RegularTimePeriod  period)  {  [BUGGY]    int  count  =  this.data.size();  [BUGGY]  if  (period  ==  null)  {  throw  new  IllegalArgumentException( "Null  'period'  argument. ");  }  TimeSeriesDataItem  dummy  =  new  TimeSeriesDataItem(  period,  Integer.MIN_VALUE);  return  Collections.binarySearch(this.data,  dummy);  }  [CLASS]  TimeSeries  [METHOD]  getIndex  [RETURN_TYPE]  int  RegularTimePeriod  period  [VARIABLES]  boolean  TimeSeriesDataItem  dummy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.3333333333333333	430	430	1	add	    int  count  =  this.data.size();		compilable	  [FE]  IllegalArgumentException	42	1
6603	[BUG]  [BUGGY]    int  count  =  this.data.size();  [FE]  IllegalArgumentException  [CONTEXT]  public  int  getIndex(RegularTimePeriod  period)  {  [BUGGY]    int  count  =  this.data.size();  [BUGGY]  if  (period  ==  null)  {  throw  new  IllegalArgumentException( "Null  'period'  argument. ");  }  TimeSeriesDataItem  dummy  =  new  TimeSeriesDataItem(  period,  Integer.MIN_VALUE);  return  Collections.binarySearch(this.data,  dummy);  }  [CLASS]  TimeSeries  [METHOD]  getIndex  [RETURN_TYPE]  int  RegularTimePeriod  period  [VARIABLES]  boolean  TimeSeriesDataItem  dummy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.3333333333333333	430	430	1	replace	    int  count  =  this.data.size();		compilable	  [FE]  IllegalArgumentException	42	1
6603	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]  public  int  getIndex(RegularTimePeriod  period)  {  [BUGGY]    int  count  =  getItemCount();  [BUGGY]  if  (period  ==  null)  {  throw  new  IllegalArgumentException( "Null  'period'  argument. ");  }  TimeSeriesDataItem  dummy  =  new  TimeSeriesDataItem(  period,  Integer.MIN_VALUE);  return  Collections.binarySearch(this.data,  dummy);  }  [CLASS]  TimeSeries  [METHOD]  getIndex  [RETURN_TYPE]  int  RegularTimePeriod  period  [VARIABLES]  boolean  TimeSeriesDataItem  dummy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.3333333333333333	430	430	1	add	    int  count  =  getItemCount();		compilable	  [FE]  IllegalArgumentException	42	1
6604	[BUG]  [BUGGY]    int  count  =  getItemCount();  [FE]  IllegalArgumentException  [CONTEXT]  public  int  getIndex(RegularTimePeriod  period)  {  [BUGGY]    int  count  =  getItemCount();  [BUGGY]  if  (period  ==  null)  {  throw  new  IllegalArgumentException( "Null  'period'  argument. ");  }  TimeSeriesDataItem  dummy  =  new  TimeSeriesDataItem(  period,  Integer.MIN_VALUE);  return  Collections.binarySearch(this.data,  dummy);  }  [CLASS]  TimeSeries  [METHOD]  getIndex  [RETURN_TYPE]  int  RegularTimePeriod  period  [VARIABLES]  boolean  TimeSeriesDataItem  dummy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.3333333333333333	430	430	1	replace	    int  count  =  getItemCount();		compilable	  [FE]  IllegalArgumentException	42	1
6663	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]  throws  CloneNotSupportedException  {  if  (start  ==  null)  {  throw  new  IllegalArgumentException( "Null  'start'  argument. ");  }  [BUGGY]    if(start.compareTo(start)>  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  if  (end  ==  null)  {  throw  new  IllegalArgumentException( "Null  'end'  argument. ");  }  if  (start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException(   "Requires  start  on  or  before  end. ");  }  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	924	924	1	add	    if(start.compareTo(start)>  0)  {  throw  new  IllegalArgumentException( " ");  }		compilable	  [FE]  IllegalArgumentException	6	1
6664	[BUG]  [BUGGY]    if(start.compareTo(start)>  0)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [CONTEXT]  throws  CloneNotSupportedException  {  if  (start  ==  null)  {  throw  new  IllegalArgumentException( "Null  'start'  argument. ");  }  [BUGGY]    if(start.compareTo(start)>  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  if  (end  ==  null)  {  throw  new  IllegalArgumentException( "Null  'end'  argument. ");  }  if  (start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException(   "Requires  start  on  or  before  end. ");  }  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	924	924	1	replace	    if(start.compareTo(start)>  0)  {  throw  new  IllegalArgumentException( " ");  }		compilable	  [FE]  IllegalArgumentException	6	1
6722	[BUG]  [BUGGY]  if(getItemCount(0)  >  this.maximumItemCount)  {  [CE]  no  suitable  method  found  for  getItemCount(int)  [CONTEXT]  b.append(item.getPeriod().toString());  b.append( "  but  the  series  already  contains  an  observation ");  b.append( "  for  that  time  period.  Duplicates  are  not   ");  b.append( "permitted.Try  using  the  addOrUpdate()  method. ");  throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {    [BUGGY]  if(getItemCount(0)  >  this.maximumItemCount)  {  [BUGGY]  this.data.remove(0);  }  removeAgedItems(false);//  remove  old  items  if  necessary,  but    if  (notify)  {  fireSeriesChanged();  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	538	538	1	replace	if(getItemCount(0)  >  this.maximumItemCount)  {	if  (getItemCount()  >  this.maximumItemCount)  {  	non-compiled	[CE]  no  suitable  method  found  for  getItemCount(int)	107	None
6781	[BUG]  [BUGGY]    this.data  =  new  ArrayList();  [CE]  cannot  find  symbol  [CONTEXT]  public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  [BUGGY]    this.data  =  new  ArrayList();  [BUGGY]  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	178	178	1	replace	    this.data  =  new  ArrayList();		non-compiled	[CE]  cannot  find  symbol	70	None
6782	[BUG]  [BUGGY]    this.data  =(List)ArrayList.newArrayList();  [CE]  cannot  find  symbol  ArrayList  [CONTEXT]  public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  [BUGGY]    this.data  =(List)ArrayList.newArrayList();  [BUGGY]  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	178	178	1	replace	    this.data  =(List)ArrayList.newArrayList();		non-compiled	[CE]  cannot  find  symbol  ArrayList	70	None
6783	[BUG]  [BUGGY]    this.data  =  new  ArrayList(name.size());  [CE]  cannot  find  symbol  [CONTEXT]  public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  [BUGGY]    this.data  =  new  ArrayList(name.size());  [BUGGY]  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	178	178	1	replace	    this.data  =  new  ArrayList(name.size());		non-compiled	[CE]  cannot  find  symbol	70	None
6901	[BUG]  [BUGGY]    checkPeriod(getDataItem(index));  [CE]  cannot  find  symbol  [CONTEXT]  public  RegularTimePeriod  getTimePeriod(int  index)  {  [BUGGY]    checkPeriod(getDataItem(index));  [BUGGY]  return  getDataItem(index).getPeriod();  }  [CLASS]  TimeSeries  [METHOD]  getTimePeriod  [RETURN_TYPE]  RegularTimePeriod  int  index  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  long  maximumItemAge  periods  serialVersionUID  int  count  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	372	372	1	replace	    checkPeriod(getDataItem(index));		non-compiled	[CE]  cannot  find  symbol	82	None
6903	[BUG]  [BUGGY]    checkPeriod(getTimePeriod());  [CE]  method  getTimePeriod  in  class  TimeSeries  cannot  be  applied  to  given  types;  [CONTEXT]  public  RegularTimePeriod  getTimePeriod(int  index)  {  [BUGGY]    checkPeriod(getTimePeriod());  [BUGGY]  return  getDataItem(index).getPeriod();  }  [CLASS]  TimeSeries  [METHOD]  getTimePeriod  [RETURN_TYPE]  RegularTimePeriod  int  index  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  long  maximumItemAge  periods  serialVersionUID  int  count  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	372	372	1	replace	    checkPeriod(getTimePeriod());		non-compiled	[CE]  method  getTimePeriod  in  class  TimeSeries  cannot  be  applied  to  given  types;	82	None
6961	[BUG]  [BUGGY]  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;  //  this  is  last  item  BEFORE  end  }  [CE]  illegal  start  of  expression  [CONTEXT]  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  [BUGGY]  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;  //  this  is  last  item  BEFORE  end  }  [BUGGY]  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  if  (endIndex  <  0)  {  emptyRange  =  true;  }  if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  }  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	941	943	1	replace	endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;  //  this  is  last  item  BEFORE  end  }	endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;  //  so  this  is  last  item  BEFORE  end  }  	non-compiled	[CE]  illegal  start  of  expression	23	None
7022	[BUG]  [BUGGY]  TimeSeriesDataItem  dummy  =  new  TimeSeriesDataItem(period,  Integer.MIN_VALUE,  0);  [CE]  no  suitable  constructor  found  for  TimeSeriesDataItem(RegularTimePeriod,int,int)  [CONTEXT]  public  int  getIndex(RegularTimePeriod  period)  {  if  (period  ==  null)  {  throw  new  IllegalArgumentException( "Null  'period'  argument. ");  }  [BUGGY]  TimeSeriesDataItem  dummy  =  new  TimeSeriesDataItem(period,  Integer.MIN_VALUE,  0);  [BUGGY]  period,  Integer.MIN_VALUE);  return  Collections.binarySearch(this.data,  dummy);  }  [CLASS]  TimeSeries  [METHOD]  getIndex  [RETURN_TYPE]  int  RegularTimePeriod  period  [VARIABLES]  boolean  TimeSeriesDataItem  dummy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.3333333333333333	433	434	1	replace	TimeSeriesDataItem  dummy  =  new  TimeSeriesDataItem(period,  Integer.MIN_VALUE,  0);	TimeSeriesDataItem  dummy  =  new  TimeSeriesDataItem(  period,  Integer.MIN_VALUE);  	non-compiled	[CE]  no  suitable  constructor  found  for  TimeSeriesDataItem(RegularTimePeriod,int,int)	43	None
7141	[BUG]  [BUGGY]    while(it.hasNext())  {  this.data.add(item);  [CE]  illegal  start  of  expression  [CONTEXT]  b.append(item.getPeriod().getClass().getName());  b.append( ",  but  the  TimeSeries  is  expecting  an  instance  of   ");  b.append(this.timePeriodClass.getName());  b.append( ". ");  throw  new  SeriesException(b.toString());  }  boolean  added  =  false;  int  count  =  getItemCount();  [BUGGY]    while(it.hasNext())  {  this.data.add(item);  [BUGGY]  if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  added  =  true;  }  else  {  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	508	508	1	replace	    while(it.hasNext())  {  this.data.add(item);		non-compiled	[CE]  illegal  start  of  expression	92	None
7142	[BUG]  [BUGGY]    while(item.getPeriod().equals(getItemCount()))  {  this.data.add(item);  [CE]  illegal  start  of  expression  [CONTEXT]  b.append(item.getPeriod().getClass().getName());  b.append( ",  but  the  TimeSeries  is  expecting  an  instance  of   ");  b.append(this.timePeriodClass.getName());  b.append( ". ");  throw  new  SeriesException(b.toString());  }  boolean  added  =  false;  int  count  =  getItemCount();  [BUGGY]    while(item.getPeriod().equals(getItemCount()))  {  this.data.add(item);  [BUGGY]  if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  added  =  true;  }  else  {  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	508	508	1	replace	    while(item.getPeriod().equals(getItemCount()))  {  this.data.add(item);		non-compiled	[CE]  illegal  start  of  expression	92	None
7143	[BUG]  [BUGGY]    while(it.hasNext())  {  if(count  >  0)  {  this.data.add(item);  }  [CE]  illegal  start  of  expression  [CONTEXT]  b.append(item.getPeriod().getClass().getName());  b.append( ",  but  the  TimeSeries  is  expecting  an  instance  of   ");  b.append(this.timePeriodClass.getName());  b.append( ". ");  throw  new  SeriesException(b.toString());  }  boolean  added  =  false;  int  count  =  getItemCount();  [BUGGY]    while(it.hasNext())  {  if(count  >  0)  {  this.data.add(item);  }  [BUGGY]  if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  added  =  true;  }  else  {  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	508	508	1	replace	    while(it.hasNext())  {  if(count  >  0)  {  this.data.add(item);  }		non-compiled	[CE]  illegal  start  of  expression	92	None
7262	[BUG]  [BUGGY]    this.data.add(item);  b.append( "  for  that  time  period.  Duplicates  are  not ");  [CE]  cannot  find  symbol  b  [CONTEXT]  b.append(item.getPeriod().toString());  b.append( "  but  the  series  already  contains  an  observation ");  b.append( "  for  that  time  period.  Duplicates  are  not   ");  b.append( "permitted.Try  using  the  addOrUpdate()  method. ");  throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {    [BUGGY]    this.data.add(item);  b.append( "  for  that  time  period.  Duplicates  are  not ");  [BUGGY]  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  removeAgedItems(false);//  remove  old  items  if  necessary,  but    if  (notify)  {  fireSeriesChanged();  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	538	538	1	replace	    this.data.add(item);  b.append( "  for  that  time  period.  Duplicates  are  not ");		non-compiled	[CE]  cannot  find  symbol  b	108	None
7263	[BUG]  [BUGGY]    this.data.add(item);  b.append( "  but  the  series  already  contains  an  observation ");  [CE]  cannot  find  symbol  b  [CONTEXT]  b.append(item.getPeriod().toString());  b.append( "  but  the  series  already  contains  an  observation ");  b.append( "  for  that  time  period.  Duplicates  are  not   ");  b.append( "permitted.Try  using  the  addOrUpdate()  method. ");  throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {    [BUGGY]    this.data.add(item);  b.append( "  but  the  series  already  contains  an  observation ");  [BUGGY]  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  removeAgedItems(false);//  remove  old  items  if  necessary,  but    if  (notify)  {  fireSeriesChanged();  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	538	538	1	replace	    this.data.add(item);  b.append( "  but  the  series  already  contains  an  observation ");		non-compiled	[CE]  cannot  find  symbol  b	108	None
7321	[BUG]  [BUGGY]    while(start  <  null  &&  start.getSeriesCount()  >  0)  {  this.data  =  new  ArrayList  <  TimePeriod>(start.getSeriesCount());  [CE]  generics  are  not  supported  in  -source  1.4  [CONTEXT]  throw  new  IllegalArgumentException( "Null  'start'  argument. ");  }  if  (end  ==  null)  {  throw  new  IllegalArgumentException( "Null  'end'  argument. ");  }  if  (start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException(   "Requires  start  on  or  before  end. ");  }  boolean  emptyRange  =  false;  [BUGGY]    while(start  <  null  &&  start.getSeriesCount()  >  0)  {  this.data  =  new  ArrayList  <  TimePeriod>(start.getSeriesCount());  [BUGGY]  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	932	932	1	replace	    while(start  <  null  &&  start.getSeriesCount()  >  0)  {  this.data  =  new  ArrayList  <  TimePeriod>(start.getSeriesCount());		non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	12	None
7322	[BUG]  [BUGGY]    while(start  <  null  &&  start.getSeriesCount()  >  0)  {  this.data.add(start);  [CE]  illegal  start  of  expression  [CONTEXT]  throw  new  IllegalArgumentException( "Null  'start'  argument. ");  }  if  (end  ==  null)  {  throw  new  IllegalArgumentException( "Null  'end'  argument. ");  }  if  (start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException(   "Requires  start  on  or  before  end. ");  }  boolean  emptyRange  =  false;  [BUGGY]    while(start  <  null  &&  start.getSeriesCount()  >  0)  {  this.data.add(start);  [BUGGY]  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	932	932	1	replace	    while(start  <  null  &&  start.getSeriesCount()  >  0)  {  this.data.add(start);		non-compiled	[CE]  illegal  start  of  expression	12	None
7323	[BUG]  [BUGGY]    while(start  <  null  &&  start.getPeriodType()!=  this.data.size())  {  this.data.add(start);  [CE]  illegal  start  of  expression  [CONTEXT]  throw  new  IllegalArgumentException( "Null  'start'  argument. ");  }  if  (end  ==  null)  {  throw  new  IllegalArgumentException( "Null  'end'  argument. ");  }  if  (start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException(   "Requires  start  on  or  before  end. ");  }  boolean  emptyRange  =  false;  [BUGGY]    while(start  <  null  &&  start.getPeriodType()!=  this.data.size())  {  this.data.add(start);  [BUGGY]  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	932	932	1	replace	    while(start  <  null  &&  start.getPeriodType()!=  this.data.size())  {  this.data.add(start);		non-compiled	[CE]  illegal  start  of  expression	12	None
7381	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]  if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  [BUGGY]    fireSeriesChanged();  [BUGGY]  added  =  true;  }  else  {  int  index  =  Collections.binarySearch(this.data,  item);  if  (index  <  0)  {  this.data.add(-index  -  1,  item);  added  =  true;  }  else  {  StringBuffer  b  =  new  StringBuffer();  b.append( "You  are  attempting  to  add  an  observation  for   ");  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	516	516	1	add	    fireSeriesChanged();		compilable	  [FE]  IllegalArgumentException	104	1
7382	[BUG]  [BUGGY]    fireSeriesChanged();  [FE]  IllegalArgumentException  [CONTEXT]  if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  [BUGGY]    fireSeriesChanged();  [BUGGY]  added  =  true;  }  else  {  int  index  =  Collections.binarySearch(this.data,  item);  if  (index  <  0)  {  this.data.add(-index  -  1,  item);  added  =  true;  }  else  {  StringBuffer  b  =  new  StringBuffer();  b.append( "You  are  attempting  to  add  an  observation  for   ");  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	516	516	1	replace	    fireSeriesChanged();		compilable	  [FE]  IllegalArgumentException	104	1
7382	[BUG]  [BUGGY]    if(notify)  {  if(item.getPeriod().compareTo(last)>  0)  {  this.data.add(item);  }  [CE]  illegal  start  of  expression  [CONTEXT]  if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  [BUGGY]    if(notify)  {  if(item.getPeriod().compareTo(last)>  0)  {  this.data.add(item);  }  [BUGGY]  added  =  true;  }  else  {  int  index  =  Collections.binarySearch(this.data,  item);  if  (index  <  0)  {  this.data.add(-index  -  1,  item);  added  =  true;  }  else  {  StringBuffer  b  =  new  StringBuffer();  b.append( "You  are  attempting  to  add  an  observation  for   ");  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	516	516	1	replace	    if(notify)  {  if(item.getPeriod().compareTo(last)>  0)  {  this.data.add(item);  }		non-compiled	[CE]  illegal  start  of  expression	104	None
7383	[BUG]  [BUGGY]    if(notify)  {  if(item.getPeriod().equals(last))  {  this.data.add(item);  }  [CE]  illegal  start  of  expression  [CONTEXT]  if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  [BUGGY]    if(notify)  {  if(item.getPeriod().equals(last))  {  this.data.add(item);  }  [BUGGY]  added  =  true;  }  else  {  int  index  =  Collections.binarySearch(this.data,  item);  if  (index  <  0)  {  this.data.add(-index  -  1,  item);  added  =  true;  }  else  {  StringBuffer  b  =  new  StringBuffer();  b.append( "You  are  attempting  to  add  an  observation  for   ");  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	516	516	1	replace	    if(notify)  {  if(item.getPeriod().equals(last))  {  this.data.add(item);  }		non-compiled	[CE]  illegal  start  of  expression	104	None
7441	[BUG]  [BUGGY]    int  endIndex  =  getIndex(startIndex);  [CE]  variable  endIndex  is  already  defined  in  method  createCopy(RegularTimePeriod,RegularTimePeriod)  [CONTEXT]  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  [BUGGY]    int  endIndex  =  getIndex(startIndex);  [BUGGY]  if  (endIndex  <  0)  {  emptyRange  =  true;  }  if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  }  else  {  return  createCopy(startIndex,  endIndex);  }  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	944	944	1	replace	    int  endIndex  =  getIndex(startIndex);		non-compiled	[CE]  variable  endIndex  is  already  defined  in  method  createCopy(RegularTimePeriod,RegularTimePeriod)	28	None
7442	[BUG]  [BUGGY]    int  endIndex  =  getIndex(end);  [CE]  variable  endIndex  is  already  defined  in  method  createCopy(RegularTimePeriod,RegularTimePeriod)  [CONTEXT]  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  endIndex  =  endIndex  -  1;//  so  this  is  last  item  BEFORE  end  }  [BUGGY]    int  endIndex  =  getIndex(end);  [BUGGY]  if  (endIndex  <  0)  {  emptyRange  =  true;  }  if  (emptyRange)  {  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  return  copy;  }  else  {  return  createCopy(startIndex,  endIndex);  }  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	944	944	1	replace	    int  endIndex  =  getIndex(end);		non-compiled	[CE]  variable  endIndex  is  already  defined  in  method  createCopy(RegularTimePeriod,RegularTimePeriod)	28	None
7502	[BUG]  [BUGGY]  setDataItem(name,  timePeriodClass);  [CE]  illegal  start  of  expression  [CONTEXT]  public  TimeSeries(Comparable  name,  Class  timePeriodClass)  {  this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  timePeriodClass);  [BUGGY]  setDataItem(name,  timePeriodClass);  [BUGGY]    [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	157	157	1	replace	setDataItem(name,  timePeriodClass);	}  	non-compiled	[CE]  illegal  start  of  expression	59	None
7681	[BUG]  [BUGGY]  this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  Time.class);  [CE]  cannot  find  symbol  [CONTEXT]  public  TimeSeries(Comparable  name)  {  [BUGGY]  this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  Time.class);  [BUGGY]  Day.class);  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Comparable)  Comparable  name  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.4082482904638631	142	143	1	replace	this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  Time.class);	this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  Day.class);  	non-compiled	[CE]  cannot  find  symbol	37	None
7743	[BUG]  [BUGGY]    this.data  =  createList(name,  timePeriodClass);  [CE]  cannot  find  symbol  [CONTEXT]  public  TimeSeries(Comparable  name,  Class  timePeriodClass)  {  this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  timePeriodClass);  [BUGGY]    this.data  =  createList(name,  timePeriodClass);  [BUGGY]  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	157	157	1	replace	    this.data  =  createList(name,  timePeriodClass);		non-compiled	[CE]  cannot  find  symbol	60	None
7801	[BUG]  [BUGGY]    while(start.getPeriod()!=  end.getPeriod())  {  if(start.compareTo(end)>  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [CONTEXT]  if  (start  ==  null)  {  throw  new  IllegalArgumentException( "Null  'start'  argument. ");  }  if  (end  ==  null)  {  throw  new  IllegalArgumentException( "Null  'end'  argument. ");  }  if  (start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException(   "Requires  start  on  or  before  end. ");  }  [BUGGY]    while(start.getPeriod()!=  end.getPeriod())  {  if(start.compareTo(end)>  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	931	931	1	replace	    while(start.getPeriod()!=  end.getPeriod())  {  if(start.compareTo(end)>  0)  {  throw  new  IllegalArgumentException( " ");  }		non-compiled	[CE]  illegal  start  of  expression	10	None
7802	[BUG]  [BUGGY]    while(start.getPeriod()!=  end.getPeriod())  {  if(start.compareTo(end)>  0)  {  throw  new  IllegalArgumentException( "Requires  start  on  or  before  end. ");  }  [CE]  illegal  start  of  expression  [CONTEXT]  if  (start  ==  null)  {  throw  new  IllegalArgumentException( "Null  'start'  argument. ");  }  if  (end  ==  null)  {  throw  new  IllegalArgumentException( "Null  'end'  argument. ");  }  if  (start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException(   "Requires  start  on  or  before  end. ");  }  [BUGGY]    while(start.getPeriod()!=  end.getPeriod())  {  if(start.compareTo(end)>  0)  {  throw  new  IllegalArgumentException( "Requires  start  on  or  before  end. ");  }  [BUGGY]  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	931	931	1	replace	    while(start.getPeriod()!=  end.getPeriod())  {  if(start.compareTo(end)>  0)  {  throw  new  IllegalArgumentException( "Requires  start  on  or  before  end. ");  }		non-compiled	[CE]  illegal  start  of  expression	10	None
7803	[BUG]  [BUGGY]    while(start.getPeriod()!=  end.getPeriod())  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [CONTEXT]  if  (start  ==  null)  {  throw  new  IllegalArgumentException( "Null  'start'  argument. ");  }  if  (end  ==  null)  {  throw  new  IllegalArgumentException( "Null  'end'  argument. ");  }  if  (start.compareTo(end)  >  0)  {  throw  new  IllegalArgumentException(   "Requires  start  on  or  before  end. ");  }  [BUGGY]    while(start.getPeriod()!=  end.getPeriod())  {  throw  new  IllegalArgumentException( " ");  [BUGGY]  boolean  emptyRange  =  false;  int  startIndex  =  getIndex(start);  if  (startIndex  <  0)  {  startIndex  =  -(startIndex  +  1);  if  (startIndex  ==  this.data.size())  {  emptyRange  =  true;//  start  is  after  last  data  item  }  }  int  endIndex  =  getIndex(end);  if  (endIndex  <  0)  {  //  end  period  is  not  in  original  series  endIndex  =  -(endIndex  +  1);  //  this  is  first  item  AFTER  end  period  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  RegularTimePeriod  start  RegularTimePeriod  end  [VARIABLES]  boolean  emptyRange  TimeSeries  copy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  end  start  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  endIndex  i  index  maximum  maximumItemCount  start  startIndex  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	931	931	1	replace	    while(start.getPeriod()!=  end.getPeriod())  {  throw  new  IllegalArgumentException( " ");		non-compiled	[CE]  illegal  start  of  expression	10	None
7862	[BUG]  [BUGGY]  this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  timePeriodClass,  false);  [CE]  no  suitable  constructor  found  for  TimeSeries(Comparable,String,String,Class,boolean)  [CONTEXT]  public  TimeSeries(Comparable  name,  Class  timePeriodClass)  {  [BUGGY]  this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  timePeriodClass,  false);  [BUGGY]  timePeriodClass);  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	155	156	1	replace	this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  timePeriodClass,  false);	this(name,  DEFAULT_DOMAIN_DESCRIPTION,  DEFAULT_RANGE_DESCRIPTION,  timePeriodClass);  	non-compiled	[CE]  no  suitable  constructor  found  for  TimeSeries(Comparable,String,String,Class,boolean)	57	None
7921	[BUG]  [BUGGY]    for(int  i  =  0,  count  =  this.data.size();  i  <  count;  i++)  {  TimeSeriesDataItem  period  =(TimeSeriesDataItem)this.data.get(i);  PeriodDataItem  period  =(TimeSeriesDataItem)period.getDataItem(i);  [CE]  illegal  start  of  expression  [CONTEXT]  public  int  getIndex(RegularTimePeriod  period)  {  if  (period  ==  null)  {  throw  new  IllegalArgumentException( "Null  'period'  argument. ");  }  [BUGGY]    for(int  i  =  0,  count  =  this.data.size();  i  <  count;  i++)  {  TimeSeriesDataItem  period  =(TimeSeriesDataItem)this.data.get(i);  PeriodDataItem  period  =(TimeSeriesDataItem)period.getDataItem(i);  [BUGGY]  TimeSeriesDataItem  dummy  =  new  TimeSeriesDataItem(    period,  Integer.MIN_VALUE);  period,  Integer.MIN_VALUE);  return  Collections.binarySearch(this.data,  dummy);  }  [CLASS]  TimeSeries  [METHOD]  getIndex  [RETURN_TYPE]  int  RegularTimePeriod  period  [VARIABLES]  boolean  TimeSeriesDataItem  dummy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.3333333333333333	433	434	1	replace	    for(int  i  =  0,  count  =  this.data.size();  i  <  count;  i++)  {  TimeSeriesDataItem  period  =(TimeSeriesDataItem)this.data.get(i);  PeriodDataItem  period  =(TimeSeriesDataItem)period.getDataItem(i);		non-compiled	[CE]  illegal  start  of  expression	44	None
7922	[BUG]  [BUGGY]    for(int  i  =  0,  count  =  this.data.size();  i  <  count;  i++)  {  TimeSeriesDataItem  period  =(TimeSeriesDataItem)this.data.get(i);  period  =  period.getDataItem(i);  if(period  ==  null)  {  throw  new  IllegalArgumentException( "  [CE]  unclosed  string  literal  [CONTEXT]  public  int  getIndex(RegularTimePeriod  period)  {  if  (period  ==  null)  {  throw  new  IllegalArgumentException( "Null  'period'  argument. ");  }  [BUGGY]    for(int  i  =  0,  count  =  this.data.size();  i  <  count;  i++)  {  TimeSeriesDataItem  period  =(TimeSeriesDataItem)this.data.get(i);  period  =  period.getDataItem(i);  if(period  ==  null)  {  throw  new  IllegalArgumentException( "  [BUGGY]  TimeSeriesDataItem  dummy  =  new  TimeSeriesDataItem(    period,  Integer.MIN_VALUE);  period,  Integer.MIN_VALUE);  return  Collections.binarySearch(this.data,  dummy);  }  [CLASS]  TimeSeries  [METHOD]  getIndex  [RETURN_TYPE]  int  RegularTimePeriod  period  [VARIABLES]  boolean  TimeSeriesDataItem  dummy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.3333333333333333	433	434	1	replace	    for(int  i  =  0,  count  =  this.data.size();  i  <  count;  i++)  {  TimeSeriesDataItem  period  =(TimeSeriesDataItem)this.data.get(i);  period  =  period.getDataItem(i);  if(period  ==  null)  {  throw  new  IllegalArgumentException( "		non-compiled	[CE]  unclosed  string  literal	44	None
7923	[BUG]  [BUGGY]    for(int  i  =  0,  count  =  this.data.size();  i  <  count;  i++)  {  TimeSeriesDataItem  period  =(TimeSeriesDataItem)this.data.get(i);  period  =  period.getDataItem(i);  if(period  ==  null)  {  throw  new  IllegalArgumentException( " "  [CE]  [CONTEXT]  public  int  getIndex(RegularTimePeriod  period)  {  if  (period  ==  null)  {  throw  new  IllegalArgumentException( "Null  'period'  argument. ");  }  [BUGGY]    for(int  i  =  0,  count  =  this.data.size();  i  <  count;  i++)  {  TimeSeriesDataItem  period  =(TimeSeriesDataItem)this.data.get(i);  period  =  period.getDataItem(i);  if(period  ==  null)  {  throw  new  IllegalArgumentException( " "  [BUGGY]  TimeSeriesDataItem  dummy  =  new  TimeSeriesDataItem(    period,  Integer.MIN_VALUE);  period,  Integer.MIN_VALUE);  return  Collections.binarySearch(this.data,  dummy);  }  [CLASS]  TimeSeries  [METHOD]  getIndex  [RETURN_TYPE]  int  RegularTimePeriod  period  [VARIABLES]  boolean  TimeSeriesDataItem  dummy  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.3333333333333333	433	434	1	replace	    for(int  i  =  0,  count  =  this.data.size();  i  <  count;  i++)  {  TimeSeriesDataItem  period  =(TimeSeriesDataItem)this.data.get(i);  period  =  period.getDataItem(i);  if(period  ==  null)  {  throw  new  IllegalArgumentException( " "		non-compiled	[CE]  	44	None
7982	[BUG]  [BUGGY]  final  boolean  added  =  false;  [CE]  cannot  assign  a  value  to  final  variable  added  [CONTEXT]  b.append( "You  are  trying  to  add  data  where  the  time  period  class   ");  b.append( "is   ");  b.append(item.getPeriod().getClass().getName());  b.append( ",  but  the  TimeSeries  is  expecting  an  instance  of   ");  b.append(this.timePeriodClass.getName());  b.append( ". ");  throw  new  SeriesException(b.toString());  }    [BUGGY]  final  boolean  added  =  false;  [BUGGY]  int  count  =  getItemCount();  if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  added  =  true;  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	506	506	1	replace	final  boolean  added  =  false;	boolean  added  =  false;  	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  added	87	None
