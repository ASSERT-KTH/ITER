bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  itemCount  =  getItemCount(getItemCount()  +  1);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);      [BUGGY]  int  itemCount  =  getItemCount(getItemCount()  +  1);  [BUGGY]      if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  added  =  true;  }  else  {  int  index  =  Collections.binarySearch(this.data,  item);  if  (index  <  0)  {  this.data.add(-index  -  1,  item);  added  =  true;  }  else  {  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	514	514	1	replace	int  itemCount  =  getItemCount(getItemCount()  +  1);	  int    itemCount    =    getItemCount(getItemCount());    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
2	[BUG]  [BUGGY]  if  (last!=  null  &&  last.getPeriod().compareTo(this.data.size()  -  1)>  0)  {  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);      [BUGGY]  if  (last!=  null  &&  last.getPeriod().compareTo(this.data.size()  -  1)>  0)  {  [BUGGY]      this.data.add(item);  added  =  true;  }  else  {  int  index  =  Collections.binarySearch(this.data,  item);  if  (index  <  0)  {  this.data.add(-index  -  1,  item);  added  =  true;  }  else  {  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	514	514	1	replace	if  (last!=  null  &&  last.getPeriod().compareTo(this.data.size()  -  1)>  0)  {	  if    (last!=    null    &&    last.getPeriod().compareTo(this.data.size())>    0)    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
3	[BUG]  [BUGGY]  int  itemCount  =  getItemCount(last  -  1);  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);      [BUGGY]  int  itemCount  =  getItemCount(last  -  1);  [BUGGY]      if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  added  =  true;  }  else  {  int  index  =  Collections.binarySearch(this.data,  item);  if  (index  <  0)  {  this.data.add(-index  -  1,  item);  added  =  true;  }  else  {  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	514	514	1	replace	int  itemCount  =  getItemCount(last  -  1);	  int    itemCount    =    getItemCount(last);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
4	[BUG]  [BUGGY]  if  (this.data.getPeriod().compareTo(last.size()  -  1)>  0)  {  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);      [BUGGY]  if  (this.data.getPeriod().compareTo(last.size()  -  1)>  0)  {  [BUGGY]      this.data.add(item);  added  =  true;  }  else  {  int  index  =  Collections.binarySearch(this.data,  item);  if  (index  <  0)  {  this.data.add(-index  -  1,  item);  added  =  true;  }  else  {  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	514	514	1	replace	if  (this.data.getPeriod().compareTo(last.size()  -  1)>  0)  {	  if    (this.data.getPeriod().compareTo(last.size())>    0)    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
5	[BUG]  [BUGGY]  int  itemCount  =  getItemCount(getItemCount())-  1;  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);      [BUGGY]  int  itemCount  =  getItemCount(getItemCount())-  1;  [BUGGY]      if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  added  =  true;  }  else  {  int  index  =  Collections.binarySearch(this.data,  item);  if  (index  <  0)  {  this.data.add(-index  -  1,  item);  added  =  true;  }  else  {  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	514	514	1	replace	int  itemCount  =  getItemCount(getItemCount())-  1;	  int    itemCount    =    getItemCount()    -    1;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
6	[BUG]  [BUGGY]  if(last!=  null  &&  item.getPeriod().compareTo(last.getPeriod())>  0)  {  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);      [BUGGY]  if(last!=  null  &&  item.getPeriod().compareTo(last.getPeriod())>  0)  {  [BUGGY]      this.data.add(item);  added  =  true;  }  else  {  int  index  =  Collections.binarySearch(this.data,  item);  if  (index  <  0)  {  this.data.add(-index  -  1,  item);  added  =  true;  }  else  {  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	514	514	1	replace	if(last!=  null  &&  item.getPeriod().compareTo(last.getPeriod())>  0)  {	  if(last!=    null    &&    last.getPeriod().compareTo(item.getPeriod())>    0)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
7	[BUG]  [BUGGY]  if(last  ==  null  &&  item.getPeriod().compareTo(last.getPeriod())>  0)  {  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);      [BUGGY]  if(last  ==  null  &&  item.getPeriod().compareTo(last.getPeriod())>  0)  {  [BUGGY]      this.data.add(item);  added  =  true;  }  else  {  int  index  =  Collections.binarySearch(this.data,  item);  if  (index  <  0)  {  this.data.add(-index  -  1,  item);  added  =  true;  }  else  {  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	514	514	1	replace	if(last  ==  null  &&  item.getPeriod().compareTo(last.getPeriod())>  0)  {	  if(last!=    null    &&    last.getPeriod().compareTo(item.getPeriod())>    0)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
8	[BUG]  [BUGGY]  if(this.timePeriodClass.getPeriod().compareTo(last)  ==  0)  {  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);      [BUGGY]  if(this.timePeriodClass.getPeriod().compareTo(last)  ==  0)  {  [BUGGY]      this.data.add(item);  added  =  true;  }  else  {  int  index  =  Collections.binarySearch(this.data,  item);  if  (index  <  0)  {  this.data.add(-index  -  1,  item);  added  =  true;  }  else  {  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	514	514	1	replace	if(this.timePeriodClass.getPeriod().compareTo(last)  ==  0)  {	  if(last.getPeriod().compareTo(this.timePeriodClass)    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
9	[BUG]  [BUGGY]  int  index  =  Collections.binarySearch(this.data,  item);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);      [BUGGY]  int  index  =  Collections.binarySearch(this.data,  item);  [BUGGY]      this.data.add(item);  added  =  true;  }  else  {  int  index  =  Collections.binarySearch(this.data,  item);  if  (index  <  0)  {  this.data.add(-index  -  1,  item);  added  =  true;  }  else  {  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	514	514	1	replace	int  index  =  Collections.binarySearch(this.data,  item);	  int    index    =    Collections.binarySearch(this.data,    last);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
10	[BUG]  [BUGGY]  if(last!=  null  &&  item.getPeriod().compareTo(last)  <  =  0)  {  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);      [BUGGY]  if(last!=  null  &&  item.getPeriod().compareTo(last)  <  =  0)  {  [BUGGY]      this.data.add(item);  added  =  true;  }  else  {  int  index  =  Collections.binarySearch(this.data,  item);  if  (index  <  0)  {  this.data.add(-index  -  1,  item);  added  =  true;  }  else  {  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	514	514	1	replace	if(last!=  null  &&  item.getPeriod().compareTo(last)  <  =  0)  {	  if(last!=    null    &&    item.getPeriod().compareTo(last)    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
11	[BUG]  [BUGGY]  this.data.add(item,  last);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);      [BUGGY]  this.data.add(item,  last);  [BUGGY]      if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  added  =  true;  }  else  {  int  index  =  Collections.binarySearch(this.data,  item);  if  (index  <  0)  {  this.data.add(-index  -  1,  item);  added  =  true;  }  else  {  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	514	514	1	replace	this.data.add(item,  last);	  this.data.add(last,    item);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
12	[BUG]  [BUGGY]  if(last!=  null  &&  last.getPeriod().compareTo(this.timePeriodClass)  ==  0)  {  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);      [BUGGY]  if(last!=  null  &&  last.getPeriod().compareTo(this.timePeriodClass)  ==  0)  {  [BUGGY]      this.data.add(item);  added  =  true;  }  else  {  int  index  =  Collections.binarySearch(this.data,  item);  if  (index  <  0)  {  this.data.add(-index  -  1,  item);  added  =  true;  }  else  {  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	514	514	1	replace	if(last!=  null  &&  last.getPeriod().compareTo(this.timePeriodClass)  ==  0)  {	  if(last!=    null    &&    last.getPeriod().compareTo(this.timePeriodClass)>    0)    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
13	[BUG]  [BUGGY]  int  itemCount  =  getItemCount(last.getItemCount());  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);      [BUGGY]  int  itemCount  =  getItemCount(last.getItemCount());  [BUGGY]      if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  added  =  true;  }  else  {  int  index  =  Collections.binarySearch(this.data,  item);  if  (index  <  0)  {  this.data.add(-index  -  1,  item);  added  =  true;  }  else  {  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	514	514	1	replace	int  itemCount  =  getItemCount(last.getItemCount());	  int    itemCount    =    getItemCount(getItemCount());    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
14	[BUG]  [BUGGY]  if(last  ==  null  ||  last.getPeriod().compareTo(this.timePeriodClass)  ==  0)  {  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);      [BUGGY]  if(last  ==  null  ||  last.getPeriod().compareTo(this.timePeriodClass)  ==  0)  {  [BUGGY]      this.data.add(item);  added  =  true;  }  else  {  int  index  =  Collections.binarySearch(this.data,  item);  if  (index  <  0)  {  this.data.add(-index  -  1,  item);  added  =  true;  }  else  {  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	514	514	1	replace	if(last  ==  null  ||  last.getPeriod().compareTo(this.timePeriodClass)  ==  0)  {	  if(last.getPeriod().compareTo(this.timePeriodClass)    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
15	[BUG]  [BUGGY]  if  (last!=  null  &&  this.data.getPeriod().compareTo(last.size())>  0)  {  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);      [BUGGY]  if  (last!=  null  &&  this.data.getPeriod().compareTo(last.size())>  0)  {  [BUGGY]      this.data.add(item);  added  =  true;  }  else  {  int  index  =  Collections.binarySearch(this.data,  item);  if  (index  <  0)  {  this.data.add(-index  -  1,  item);  added  =  true;  }  else  {  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	514	514	1	replace	if  (last!=  null  &&  this.data.getPeriod().compareTo(last.size())>  0)  {	  if    (last!=    null    &&    last.getPeriod().compareTo(this.data.size())>    0)    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
16	[BUG]  [BUGGY]  if  (last!=  null  &&  last.getPeriod().compareTo(this.data.size()  -  1)  ==  0)  {  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);      [BUGGY]  if  (last!=  null  &&  last.getPeriod().compareTo(this.data.size()  -  1)  ==  0)  {  [BUGGY]      this.data.add(item);  added  =  true;  }  else  {  int  index  =  Collections.binarySearch(this.data,  item);  if  (index  <  0)  {  this.data.add(-index  -  1,  item);  added  =  true;  }  else  {  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	514	514	1	replace	if  (last!=  null  &&  last.getPeriod().compareTo(this.data.size()  -  1)  ==  0)  {	  if    (last!=    null    &&    last.getPeriod().compareTo(this.data.size())>    0)    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
17	[BUG]  [BUGGY]  int  itemCount  =  getItemCount(last.getItemCount()  -  1);  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);      [BUGGY]  int  itemCount  =  getItemCount(last.getItemCount()  -  1);  [BUGGY]      if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  added  =  true;  }  else  {  int  index  =  Collections.binarySearch(this.data,  item);  if  (index  <  0)  {  this.data.add(-index  -  1,  item);  added  =  true;  }  else  {  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	514	514	1	replace	int  itemCount  =  getItemCount(last.getItemCount()  -  1);	  int    itemCount    =    getItemCount(last);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
18	[BUG]  [BUGGY]  if(last  ==  null  &&  item.getPeriod().compareTo(last)  ==  0)  {  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);      [BUGGY]  if(last  ==  null  &&  item.getPeriod().compareTo(last)  ==  0)  {  [BUGGY]      this.data.add(item);  added  =  true;  }  else  {  int  index  =  Collections.binarySearch(this.data,  item);  if  (index  <  0)  {  this.data.add(-index  -  1,  item);  added  =  true;  }  else  {  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	514	514	1	replace	if(last  ==  null  &&  item.getPeriod().compareTo(last)  ==  0)  {	  if(last!=    null    &&    item.getPeriod().compareTo(last)    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
19	[BUG]  [BUGGY]  if(last!=  null  &&  item.getPeriod().compareTo(this.timePeriodClass)>  0)  {  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);      [BUGGY]  if(last!=  null  &&  item.getPeriod().compareTo(this.timePeriodClass)>  0)  {  [BUGGY]      this.data.add(item);  added  =  true;  }  else  {  int  index  =  Collections.binarySearch(this.data,  item);  if  (index  <  0)  {  this.data.add(-index  -  1,  item);  added  =  true;  }  else  {  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	514	514	1	replace	if(last!=  null  &&  item.getPeriod().compareTo(this.timePeriodClass)>  0)  {	  if(last!=    null    &&    last.getPeriod().compareTo(this.timePeriodClass)>    0)    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
20	[BUG]  [BUGGY]  if(last!=  null  &&  item.getPeriod().compareTo(last.getPeriod())  ==  0)  {  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);      [BUGGY]  if(last!=  null  &&  item.getPeriod().compareTo(last.getPeriod())  ==  0)  {  [BUGGY]      this.data.add(item);  added  =  true;  }  else  {  int  index  =  Collections.binarySearch(this.data,  item);  if  (index  <  0)  {  this.data.add(-index  -  1,  item);  added  =  true;  }  else  {  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	514	514	1	replace	if(last!=  null  &&  item.getPeriod().compareTo(last.getPeriod())  ==  0)  {	  if(last!=    null    &&    last.getPeriod().compareTo(item.getPeriod())>    0)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
21	[BUG]  [BUGGY]  if(last!=  null  &&  item.getPeriod().compareTo(last.getPeriod())  <  0)  {  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);      [BUGGY]  if(last!=  null  &&  item.getPeriod().compareTo(last.getPeriod())  <  0)  {  [BUGGY]      this.data.add(item);  added  =  true;  }  else  {  int  index  =  Collections.binarySearch(this.data,  item);  if  (index  <  0)  {  this.data.add(-index  -  1,  item);  added  =  true;  }  else  {  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart9/source/org/jfree/data/time/TimeSeries.java	0.21320071635561041	514	514	1	replace	if(last!=  null  &&  item.getPeriod().compareTo(last.getPeriod())  <  0)  {	  if(last!=    null    &&    last.getPeriod().compareTo(item.getPeriod())>    0)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
